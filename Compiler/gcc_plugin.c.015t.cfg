
;; Function Graph::init_Graph (_ZN5Graph10init_GraphEi, funcdef_no=6151, decl_uid=167779, cgraph_uid=3140, symbol_order=3814)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 6 8 }
;; 8 succs { 1 }
void Graph::init_Graph (struct Graph * const this, int V)
{
  void * D.245900;
  struct list * D.168967;
  size_t iftmp.2;
  long int D.168820;
  struct list * D.168819;
  struct list * D.168818;
  struct list * retval.1;
  sizetype D.245885;
  size_t iftmp.0;
  void * D.168817;

  <bb 2> :
  this->V = V;
  D.245885 = (sizetype) V;
  if (D.245885 <= 384307168202282325)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = D.245885 * 24;
  iftmp.0 = _1 + 8;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.0 = 18446744073709551615;

  <bb 5> :
  D.245900 = operator new [] (iftmp.0);
  D.168817 = D.245900;
  MEM[(sizetype *)D.168817] = D.245885;
  D.168818 = D.168817 + 8;
  D.168819 = D.168818;
  _2 = D.245885 + 18446744073709551615;
  D.168820 = (long int) _2;
  goto <bb 7>; [INV]

  <bb 6> :
  std::__cxx11::list<int>::list (D.168819);
  D.168819 = D.168819 + 24;
  D.168820 = D.168820 + -1;

  <bb 7> :
  if (D.168820 >= 0)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  retval.1 = D.168818;
  _8 = D.168817 + 8;
  this->adj = _8;
  return;

}



;; Function std::__cxx11::list<int>::list (_ZNSt7__cxx114listIiSaIiEEC2Ev, funcdef_no=6160, decl_uid=168806, cgraph_uid=3135, symbol_order=3809)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::list<int>::list (struct list * const this)
{
  <bb 2> :
  _1 = &this->D.168814;
  std::__cxx11::_List_base<int, std::allocator<int> >::_List_base (_1);
  return;

}



;; Function std::__cxx11::_List_base<int, std::allocator<int> >::_List_base (_ZNSt7__cxx1110_List_baseIiSaIiEEC2Ev, funcdef_no=6158, decl_uid=168280, cgraph_uid=3132, symbol_order=3806)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::_List_base<int, std::allocator<int> >::_List_base (struct _List_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::_List_impl (_1);
  return;

}



;; Function std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::_List_impl (_ZNSt7__cxx1110_List_baseIiSaIiEE10_List_implC2Ev, funcdef_no=7506, decl_uid=168069, cgraph_uid=4138, symbol_order=4923)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::_List_impl (struct _List_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<std::_List_node<int> >::allocator (this);
  _1 = &this->_M_node;
  std::__detail::_List_node_header::_List_node_header (_1);
  return;

}



;; Function std::allocator<std::_List_node<int> >::allocator (_ZNSaISt10_List_nodeIiEEC2Ev, funcdef_no=8304, decl_uid=167976, cgraph_uid=4936, symbol_order=5725)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<std::_List_node<int> >::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator (_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEEC2Ev, funcdef_no=9121, decl_uid=167905, cgraph_uid=5753, symbol_order=6542)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::__detail::_List_node_header::_List_node_header (_ZNSt8__detail17_List_node_headerC2Ev, funcdef_no=4671, decl_uid=144698, cgraph_uid=2594, symbol_order=2784)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__detail::_List_node_header::_List_node_header (struct _List_node_header * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::__detail::_List_node_header::_M_init (this);
  return;

}



;; Function std::__detail::_List_node_header::_M_init (_ZNSt8__detail17_List_node_header7_M_initEv, funcdef_no=4677, decl_uid=144685, cgraph_uid=2600, symbol_order=2790)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__detail::_List_node_header::_M_init (struct _List_node_header * const this)
{
  <bb 2> :
  _1 = &this->D.144700;
  this->D.144700._M_prev = _1;
  _2 = this->D.144700._M_prev;
  this->D.144700._M_next = _2;
  this->_M_size = 0;
  return;

}



;; Function Graph::addEdge (_ZN5Graph7addEdgeEii, funcdef_no=6165, decl_uid=167784, cgraph_uid=3141, symbol_order=3815)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void Graph::addEdge (struct Graph * const this, int v, int w)
{
  <bb 2> :
  _1 = this->adj;
  _2 = (long unsigned int) v;
  _3 = _2 * 24;
  _4 = _1 + _3;
  std::__cxx11::list<int>::push_back (_4, &w);
  return;

}



;; Function std::__cxx11::list<int>::push_back (_ZNSt7__cxx114listIiSaIiEE9push_backERKi, funcdef_no=7514, decl_uid=168488, cgraph_uid=4146, symbol_order=4931)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::list<int>::push_back (struct list * const this, const value_type & __x)
{
  struct _List_iterator D.245902;

  <bb 2> :
  D.245902 = std::__cxx11::list<int>::end (this);
  std::__cxx11::list<int>::_M_insert<const int&> (this, D.245902, __x);
  return;

}



;; Function std::__cxx11::list<int>::end (_ZNSt7__cxx114listIiSaIiEE3endEv, funcdef_no=7519, decl_uid=168434, cgraph_uid=4151, symbol_order=4936)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::__cxx11::list<int>::end (struct list * const this)
{
  struct iterator D.209791;
  struct iterator D.245903;

  <bb 2> :
  _1 = &this->D.168814._M_impl._M_node.D.144700;
  std::_List_iterator<int>::_List_iterator (&D.209791, _1);
  D.245903 = D.209791;
  D.209791 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.245903;

}



;; Function std::_List_iterator<int>::_List_iterator (_ZNSt14_List_iteratorIiEC2EPNSt8__detail15_List_node_baseE, funcdef_no=8312, decl_uid=169031, cgraph_uid=4944, symbol_order=5733)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_List_iterator<int>::_List_iterator (struct _List_iterator * const this, struct _List_node_base * __x)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_node = __x;
  return;

}



;; Function std::__cxx11::list<int>::_M_insert<const int&> (_ZNSt7__cxx114listIiSaIiEE9_M_insertIJRKiEEEvSt14_List_iteratorIiEDpOT_, funcdef_no=8310, decl_uid=209781, cgraph_uid=4942, symbol_order=5731)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::list<int>::_M_insert<const int&> (struct list * const this, struct iterator __position, const int & __args#0)
{
  struct _Node * D.245906;
  struct _Node * __tmp;

  <bb 2> :
  _1 = std::forward<const int&> (__args#0);
  D.245906 = std::__cxx11::list<int>::_M_create_node<const int&> (this, _1);
  __tmp = D.245906;
  _2 = &__tmp->D.209836;
  _3 = __position._M_node;
  std::__detail::_List_node_base::_M_hook (_2, _3);
  _4 = &this->D.168814;
  std::__cxx11::_List_base<int, std::allocator<int> >::_M_inc_size (_4, 1);
  return;

}



;; Function std::forward<const int&> (_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=9126, decl_uid=220138, cgraph_uid=5758, symbol_order=6547)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const int & std::forward<const int&> (const type & __t)
{
  const int & D.245907;

  <bb 2> :
  D.245907 = __t;

  <bb 3> :
<L0>:
  return D.245907;

}



;; Function std::__cxx11::list<int>::_M_create_node<const int&> (_ZNSt7__cxx114listIiSaIiEE14_M_create_nodeIJRKiEEEPSt10_List_nodeIiEDpOT_, funcdef_no=9127, decl_uid=220140, cgraph_uid=5759, symbol_order=6548)

Merging blocks 3 and 4
Merging blocks 3 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { }
struct _Node * std::__cxx11::list<int>::_M_create_node<const int&> (struct list * const this, const int & __args#0)
{
  struct _List_node * D.245911;
  struct __allocated_ptr __guard;
  struct allocator & __alloc;
  struct _List_node * __p;
  struct _Node * D.245909;

  <bb 2> :
  _1 = &this->D.168814;
  D.245911 = std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_node (_1);

  <bb 3> :
  __p = D.245911;
  _2 = &this->D.168814;
  __alloc = std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_Node_allocator (_2);
  std::__allocated_ptr<std::allocator<std::_List_node<int> > >::__allocated_ptr (&__guard, __alloc, __p);
  _3 = std::forward<const int&> (__args#0);
  _4 = std::_List_node<int>::_M_valptr (__p);
  std::allocator_traits<std::allocator<std::_List_node<int> > >::construct<int, const int&> (__alloc, _4, _3);
  std::__allocated_ptr<std::allocator<std::_List_node<int> > >::operator= (&__guard, 0);
  D.245909 = __p;
  std::__allocated_ptr<std::allocator<std::_List_node<int> > >::~__allocated_ptr (&__guard);
  __guard = {CLOBBER};

  <bb 4> :
<L2>:
  return D.245909;

  <bb 5> :
<L3>:
  __guard = {CLOBBER};
  resx 1

}



;; Function std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_node (_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_get_nodeEv, funcdef_no=9858, decl_uid=168182, cgraph_uid=6490, symbol_order=7283)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _List_node * std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_node (struct _List_base * const this)
{
  struct _List_node * D.245917;
  struct _List_node * D.245915;

  <bb 2> :
  _1 = &this->_M_impl;
  D.245917 = std::allocator_traits<std::allocator<std::_List_node<int> > >::allocate (_1, 1);
  D.245915 = D.245917;

  <bb 3> :
<L0>:
  return D.245915;

}



;; Function std::allocator_traits<std::allocator<std::_List_node<int> > >::allocate (_ZNSt16allocator_traitsISaISt10_List_nodeIiEEE8allocateERS2_m, funcdef_no=10397, decl_uid=168110, cgraph_uid=7029, symbol_order=7822)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct _List_node * std::allocator_traits<std::allocator<std::_List_node<int> > >::allocate (struct allocator_type & __a, size_type __n)
{
  struct _List_node * D.245920;
  struct _List_node * D.245918;

  <bb 2> :
  D.245920 = __gnu_cxx::new_allocator<std::_List_node<int> >::allocate (__a, __n, 0B);
  D.245918 = D.245920;

  <bb 3> :
<L0>:
  return D.245918;

}



;; Function __gnu_cxx::new_allocator<std::_List_node<int> >::allocate (_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE8allocateEmPKv, funcdef_no=10755, decl_uid=167860, cgraph_uid=7388, symbol_order=8183)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct _List_node * __gnu_cxx::new_allocator<std::_List_node<int> >::allocate (struct new_allocator * const this, size_type __n, const void * D.244300)
{
  struct _List_node * D.245931;
  struct _List_node * D.245930;
  align_val_t __al;
  struct _List_node * D.245928;
  bool retval.3;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<std::_List_node<int> >::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.3 = _4 != 0;
  if (retval.3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 768614336404564650)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 24;
  D.245931 = operator new (_6);
  D.245928 = D.245931;

  <bb 7> :
<L6>:
  return D.245928;

}



;; Function __gnu_cxx::new_allocator<std::_List_node<int> >::_M_max_size (_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIiEE11_M_max_sizeEv, funcdef_no=10756, decl_uid=167887, cgraph_uid=7387, symbol_order=8182)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<std::_List_node<int> >::_M_max_size (const struct new_allocator * const this)
{
  size_type D.245932;

  <bb 2> :
  D.245932 = 384307168202282325;

  <bb 3> :
<L0>:
  return D.245932;

}



;; Function std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_Node_allocator (_ZNSt7__cxx1110_List_baseIiSaIiEE21_M_get_Node_allocatorEv, funcdef_no=9123, decl_uid=168188, cgraph_uid=5755, symbol_order=6544)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Node_alloc_type & std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_Node_allocator (struct _List_base * const this)
{
  struct _Node_alloc_type & D.245934;

  <bb 2> :
  D.245934 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.245934;

}



;; Function std::__allocated_ptr<std::allocator<std::_List_node<int> > >::__allocated_ptr (_ZNSt15__allocated_ptrISaISt10_List_nodeIiEEEC2ERS2_PS1_, funcdef_no=9860, decl_uid=231472, cgraph_uid=6492, symbol_order=7285)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__allocated_ptr<std::allocator<std::_List_node<int> > >::__allocated_ptr (struct __allocated_ptr * const this, struct allocator & __a, struct _List_node * __ptr)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::__addressof<std::allocator<std::_List_node<int> > > (__a);
  this->_M_alloc = _1;
  this->_M_ptr = __ptr;
  return;

}



;; Function std::__addressof<std::allocator<std::_List_node<int> > > (_ZSt11__addressofISaISt10_List_nodeIiEEEPT_RS3_, funcdef_no=10398, decl_uid=239203, cgraph_uid=7030, symbol_order=7823)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator * std::__addressof<std::allocator<std::_List_node<int> > > (struct allocator & __r)
{
  struct allocator * D.245936;

  <bb 2> :
  D.245936 = __r;

  <bb 3> :
<L0>:
  return D.245936;

}



;; Function std::_List_node<int>::_M_valptr (_ZNSt10_List_nodeIiE9_M_valptrEv, funcdef_no=8314, decl_uid=209832, cgraph_uid=4946, symbol_order=5735)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::_List_node<int>::_M_valptr (struct _List_node * const this)
{
  int * D.245938;

  <bb 2> :
  _1 = &this->_M_storage;
  D.245938 = __gnu_cxx::__aligned_membuf<int>::_M_ptr (_1);

  <bb 3> :
<L0>:
  return D.245938;

}



;; Function __gnu_cxx::__aligned_membuf<int>::_M_ptr (_ZN9__gnu_cxx16__aligned_membufIiE6_M_ptrEv, funcdef_no=9129, decl_uid=209814, cgraph_uid=5761, symbol_order=6550)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * __gnu_cxx::__aligned_membuf<int>::_M_ptr (struct __aligned_membuf * const this)
{
  int * D.245940;

  <bb 2> :
  D.245940 = __gnu_cxx::__aligned_membuf<int>::_M_addr (this);

  <bb 3> :
<L0>:
  return D.245940;

}



;; Function __gnu_cxx::__aligned_membuf<int>::_M_addr (_ZN9__gnu_cxx16__aligned_membufIiE7_M_addrEv, funcdef_no=9867, decl_uid=209810, cgraph_uid=6499, symbol_order=7292)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void * __gnu_cxx::__aligned_membuf<int>::_M_addr (struct __aligned_membuf * const this)
{
  void * D.245942;

  <bb 2> :
  D.245942 = &this->_M_storage;

  <bb 3> :
<L0>:
  return D.245942;

}



;; Function std::allocator_traits<std::allocator<std::_List_node<int> > >::construct<int, const int&> (_ZNSt16allocator_traitsISaISt10_List_nodeIiEEE9constructIiJRKiEEEvRS2_PT_DpOT0_, funcdef_no=9865, decl_uid=231494, cgraph_uid=6497, symbol_order=7290)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<std::_List_node<int> > >::construct<int, const int&> (struct allocator_type & __a, int * __p, const int & __args#0)
{
  <bb 2> :
  _1 = std::forward<const int&> (__args#0);
  __gnu_cxx::new_allocator<std::_List_node<int> >::construct<int, const int&> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<std::_List_node<int> >::construct<int, const int&> (_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE9constructIiJRKiEEEvPT_DpOT0_, funcdef_no=10399, decl_uid=239218, cgraph_uid=7031, symbol_order=7824)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<std::_List_node<int> >::construct<int, const int&> (struct new_allocator * const this, int * __p, const int & __args#0)
{
  void * D.242770;
  void * D.242769;
  int D.242771;

  <bb 2> :
  _1 = std::forward<const int&> (__args#0);
  D.242771 = *_1;
  D.242769 = __p;
  D.242770 = operator new (4, D.242769);
  MEM[(int *)D.242770] = D.242771;
  return;

}



;; Function operator new (_ZnwmPv, funcdef_no=15, decl_uid=3700, cgraph_uid=16, symbol_order=15)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
void * operator new (size_t D.3698, void * __p)
{
  void * D.245944;

  <bb 2> :
  D.245944 = __p;

  <bb 3> :
<L0>:
  return D.245944;

}



;; Function std::__allocated_ptr<std::allocator<std::_List_node<int> > >::operator= (_ZNSt15__allocated_ptrISaISt10_List_nodeIiEEEaSEDn, funcdef_no=9866, decl_uid=231445, cgraph_uid=6498, symbol_order=7291)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __allocated_ptr & std::__allocated_ptr<std::allocator<std::_List_node<int> > >::operator= (struct __allocated_ptr * const this, <<< Unknown tree: nullptr_type >>> D.239222)
{
  struct __allocated_ptr & D.245946;

  <bb 2> :
  this->_M_ptr = 0B;
  D.245946 = this;

  <bb 3> :
<L0>:
  return D.245946;

}



;; Function std::__allocated_ptr<std::allocator<std::_List_node<int> > >::~__allocated_ptr (_ZNSt15__allocated_ptrISaISt10_List_nodeIiEEED2Ev, funcdef_no=9863, decl_uid=231479, cgraph_uid=6495, symbol_order=7288)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::__allocated_ptr<std::allocator<std::_List_node<int> > >::~__allocated_ptr (struct __allocated_ptr * const this)
{
  <bb 2> :
  _1 = this->_M_ptr;
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = this->_M_ptr;
  _3 = this->_M_alloc;
  std::allocator_traits<std::allocator<std::_List_node<int> > >::deallocate (_3, _2, 1);

  <bb 4> :
  *this = {CLOBBER};
  return;

}



;; Function std::allocator_traits<std::allocator<std::_List_node<int> > >::deallocate (_ZNSt16allocator_traitsISaISt10_List_nodeIiEEE10deallocateERS2_PS1_m, funcdef_no=9857, decl_uid=168117, cgraph_uid=6489, symbol_order=7282)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<std::_List_node<int> > >::deallocate (struct allocator_type & __a, struct _List_node * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate (_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE10deallocateEPS2_m, funcdef_no=10396, decl_uid=167864, cgraph_uid=7028, symbol_order=7821)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate (struct new_allocator * const this, struct _List_node * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::__cxx11::_List_base<int, std::allocator<int> >::_M_inc_size (_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_inc_sizeEm, funcdef_no=9128, decl_uid=168080, cgraph_uid=5760, symbol_order=6549)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::_List_base<int, std::allocator<int> >::_M_inc_size (struct _List_base * const this, size_t __n)
{
  <bb 2> :
  _1 = this->_M_impl._M_node._M_size;
  _2 = __n + _1;
  this->_M_impl._M_node._M_size = _2;
  return;

}



;; Function Graph::DFSUtil (_ZN5Graph7DFSUtilEiPb, funcdef_no=6166, decl_uid=167775, cgraph_uid=3142, symbol_order=3816)

Removing basic block 13
Removing basic block 15
Removing basic block 18
Removing basic block 20
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;;
;; Loop 1
;;  header 18, latch 17
;;  depth 1, outer 0
;;  nodes: 18 17 5 16 15 9 14 10 13 12 11 8 7 6 3 4
;;
;; Loop 2
;;  header 15, latch 14
;;  depth 2, outer 1
;;  nodes: 15 14 10 13 12 11
;; 2 succs { 18 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 17 }
;; 6 succs { 20 7 }
;; 7 succs { 20 8 }
;; 8 succs { 9 16 }
;; 9 succs { 15 }
;; 10 succs { 11 14 }
;; 11 succs { 12 13 }
;; 12 succs { 20 14 }
;; 13 succs { 20 14 }
;; 14 succs { 15 }
;; 15 succs { 10 17 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 3 19 }
;; 19 succs { 1 }
;; 20 succs { }
void Graph::DFSUtil (struct Graph * const this, int v, bool * visited)
{
  struct iterator i;
  struct iterator D.169074;
  bool retval.12;
  bool retval.11;
  bool retval.8;
  bool retval.7;
  bool * visited.6;
  bool retval.5;
  bool retval.4;

  <bb 2> :
  _1 = (sizetype) v;
  _2 = visited + _1;
  *_2 = 1;
  std::_List_iterator<int>::_List_iterator (&i);
  _3 = this->adj;
  _4 = (long unsigned int) v;
  _5 = _4 * 24;
  _6 = _3 + _5;
  i = std::__cxx11::list<int>::begin (_6);
  goto <bb 18>; [INV]

  <bb 3> :
  _7 = std::_List_iterator<int>::operator* (&i);
  _8 = *_7;
  _9 = this->end;
  retval.4 = _8 == _9;
  if (retval.4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  this->succ = 1;

  <bb 5> :
  visited.6 = visited;
  _10 = std::_List_iterator<int>::operator* (&i);
  _11 = *_10;
  _12 = (sizetype) _11;
  _13 = visited.6 + _12;
  _14 = *_13;
  retval.5 = ~_14;
  if (retval.5 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 6> :
  _15 = &this->stack;
  _16 = std::_List_iterator<int>::operator* (&i);
  std::vector<int>::push_back (_15, _16);

  <bb 7> :
  _17 = std::_List_iterator<int>::operator* (&i);
  _18 = *_17;
  Graph::DFSUtil (this, _18, visited);

  <bb 8> :
  _19 = this->succ;
  _20 = (int) _19;
  if (_20 == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 9> :
  goto <bb 15>; [INV]

  <bb 10> :
  _21 = &this->stack;
  _22 = std::vector<int>::operator[] (_21, 0);
  _23 = *_22;
  retval.7 = _23 == 2;
  if (retval.7 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 11> :
  _24 = &this->stack;
  _25 = &this->stack;
  _26 = std::vector<int>::size (_25);
  _27 = _26 + 18446744073709551615;
  _28 = std::vector<int>::operator[] (_24, _27);
  _29 = *_28;
  _30 = this->end;
  retval.8 = _29 != _30;
  if (retval.8 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _31 = &this->stack;
  _32 = &this->stack;
  _33 = std::vector<int>::size (_32);
  _34 = _33 + 18446744073709551615;
  _35 = std::vector<int>::operator[] (_31, _34);
  _36 = *_35;
  stderr.9_37 = stderr;
  fprintf (stderr.9_37, "now stack %d\n", _36);
  goto <bb 14>; [INV]

  <bb 13> :
  _38 = &this->stack;
  _39 = &this->stack;
  _40 = std::vector<int>::size (_39);
  _41 = _40 + 18446744073709551615;
  _42 = std::vector<int>::operator[] (_38, _41);
  _43 = *_42;
  stderr.10_44 = stderr;
  fprintf (stderr.10_44, "find stack %d\n", _43);

  <bb 14> :
  _45 = &this->stack;
  std::vector<int>::pop_back (_45);

  <bb 15> :
  _46 = &this->stack;
  _47 = std::vector<int>::size (_46);
  retval.11 = _47 != 0;
  if (retval.11 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  _48 = &this->stack;
  std::vector<int>::pop_back (_48);

  <bb 17> :
  std::_List_iterator<int>::operator++ (&i);

  <bb 18> :
  _49 = this->adj;
  _50 = (long unsigned int) v;
  _51 = _50 * 24;
  _52 = _49 + _51;
  D.169074 = std::__cxx11::list<int>::end (_52);
  retval.12 = std::operator!= (&i, &D.169074);
  D.169074 = {CLOBBER};
  if (retval.12 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  i = {CLOBBER};
  return;

  <bb 20> :
<L21>:
  i = {CLOBBER};
  resx 1

}



;; Function std::_List_iterator<int>::_List_iterator (_ZNSt14_List_iteratorIiEC2Ev, funcdef_no=7516, decl_uid=169036, cgraph_uid=4148, symbol_order=4933)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_List_iterator<int>::_List_iterator (struct _List_iterator * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_node = 0B;
  return;

}



;; Function std::__cxx11::list<int>::begin (_ZNSt7__cxx114listIiSaIiEE5beginEv, funcdef_no=7518, decl_uid=168430, cgraph_uid=4150, symbol_order=4935)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::__cxx11::list<int>::begin (struct list * const this)
{
  struct iterator D.209789;
  struct iterator D.245977;

  <bb 2> :
  _1 = this->D.168814._M_impl._M_node.D.144700._M_next;
  std::_List_iterator<int>::_List_iterator (&D.209789, _1);
  D.245977 = D.209789;
  D.209789 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.245977;

}



;; Function std::vector<int>::push_back (_ZNSt6vectorIiSaIiEE9push_backERKi, funcdef_no=7523, decl_uid=167420, cgraph_uid=4156, symbol_order=4941)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<int>::push_back (struct vector * const this, const value_type & __x)
{
  struct __normal_iterator D.245983;

  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_finish;
  _2 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.167768._M_impl.D.167081._M_finish;
  _4 = &this->D.167768._M_impl;
  std::allocator_traits<std::allocator<int> >::construct<int, const int&> (_4, _3, __x);
  _5 = this->D.167768._M_impl.D.167081._M_finish;
  _6 = _5 + 4;
  this->D.167768._M_impl.D.167081._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.245983 = std::vector<int>::end (this);
  std::vector<int>::_M_realloc_insert<const int&> (this, D.245983, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<int> >::construct<int, const int&> (_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_, funcdef_no=8315, decl_uid=209842, cgraph_uid=4947, symbol_order=5736)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<int> >::construct<int, const int&> (struct allocator_type & __a, int * __p, const int & __args#0)
{
  <bb 2> :
  _1 = std::forward<const int&> (__args#0);
  __gnu_cxx::new_allocator<int>::construct<int, const int&> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::construct<int, const int&> (_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_, funcdef_no=9130, decl_uid=220152, cgraph_uid=5762, symbol_order=6551)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::construct<int, const int&> (struct new_allocator * const this, int * __p, const int & __args#0)
{
  void * D.231509;
  void * D.231508;
  int D.231510;

  <bb 2> :
  _1 = std::forward<const int&> (__args#0);
  D.231510 = *_1;
  D.231508 = __p;
  D.231509 = operator new (4, D.231508);
  MEM[(int *)D.231509] = D.231510;
  return;

}



;; Function std::vector<int>::end (_ZNSt6vectorIiSaIiEE3endEv, funcdef_no=8316, decl_uid=167353, cgraph_uid=4948, symbol_order=5737)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<int>::end (struct vector * const this)
{
  struct iterator D.220175;
  struct iterator D.245984;

  <bb 2> :
  _1 = &this->D.167768._M_impl.D.167081._M_finish;
  __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (&D.220175, _1);
  D.245984 = D.220175;
  D.220175 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.245984;

}



;; Function __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_, funcdef_no=9132, decl_uid=210089, cgraph_uid=5764, symbol_order=6553)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (struct __normal_iterator * const this, int * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<int>::_M_realloc_insert<const int&> (_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_, funcdef_no=8317, decl_uid=210108, cgraph_uid=4952, symbol_order=5741)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::_M_realloc_insert<const int&> (struct vector * const this, struct iterator __position, const int & __args#0)
{
  int * D.245991;
  const size_type D.245990;
  int * __new_finish;
  int * __new_start;
  const size_type __elems_before;
  int * __old_finish;
  int * __old_start;
  const size_type __len;
  struct iterator D.220183;

  <bb 2> :
  D.245990 = std::vector<int>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.245990;
  __old_start = this->D.167768._M_impl.D.167081._M_start;
  __old_finish = this->D.167768._M_impl.D.167081._M_finish;
  D.220183 = std::vector<int>::begin (this);
  _1 = __gnu_cxx::operator-<int*, std::vector<int> > (&__position, &D.220183);
  __elems_before = (const size_type) _1;
  D.220183 = {CLOBBER};
  _2 = &this->D.167768;
  D.245991 = std::_Vector_base<int, std::allocator<int> >::_M_allocate (_2, __len);
  __new_start = D.245991;
  __new_finish = __new_start;
  _3 = std::forward<const int&> (__args#0);
  _4 = __elems_before * 4;
  _5 = __new_start + _4;
  _6 = &this->D.167768._M_impl;
  std::allocator_traits<std::allocator<int> >::construct<int, const int&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.167768;
  _8 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<int>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 4;
  _11 = &this->D.167768;
  _12 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<int>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.167768;
  _23 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 4;
  _26 = (long unsigned int) _25;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_22, __old_start, _26);
  this->D.167768._M_impl.D.167081._M_start = __new_start;
  this->D.167768._M_impl.D.167081._M_finish = __new_finish;
  _27 = __len * 4;
  _28 = __new_start + _27;
  this->D.167768._M_impl.D.167081._M_end_of_storage = _28;
  return;

}



;; Function std::vector<int>::_M_check_len (_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc, funcdef_no=9134, decl_uid=167615, cgraph_uid=5766, symbol_order=6555)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<int>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.15;
  size_type D.245995;
  const long unsigned int D.231519;
  bool retval.13;

  <bb 2> :
  _1 = std::vector<int>::max_size (this);
  _2 = std::vector<int>::size (this);
  _3 = _1 - _2;
  __n.14_4 = __n;
  retval.13 = _3 < __n.14_4;
  if (retval.13 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<int>::size (this);
  _6 = std::vector<int>::size (this);
  D.231519 = _6;
  _7 = std::max<long unsigned int> (&D.231519, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.231519 = {CLOBBER};
  _9 = std::vector<int>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<int>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.15 = std::vector<int>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.15 = __len;

  <bb 8> :
  D.245995 = iftmp.15;

  <bb 9> :
<L6>:
  return D.245995;

}



;; Function std::max<long unsigned int> (_ZSt3maxImERKT_S2_S2_, funcdef_no=9869, decl_uid=156763, cgraph_uid=6501, symbol_order=7294)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
const long unsigned int & std::max<long unsigned int> (const long unsigned int & __a, const long unsigned int & __b)
{
  const long unsigned int & D.246004;

  <bb 2> :
  _1 = *__a;
  _2 = *__b;
  if (_1 < _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.246004 = __b;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.246004 = __a;

  <bb 5> :
<L2>:
  return D.246004;

}



;; Function std::vector<int>::max_size (_ZNKSt6vectorIiSaIiEE8max_sizeEv, funcdef_no=9868, decl_uid=167375, cgraph_uid=6500, symbol_order=7293)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<int>::max_size (const struct vector * const this)
{
  size_type D.246006;

  <bb 2> :
  _1 = &this->D.167768;
  _2 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_1);
  D.246006 = std::vector<int>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.246006;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv, funcdef_no=9706, decl_uid=166971, cgraph_uid=6338, symbol_order=7127)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.246008;

  <bb 2> :
  D.246008 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.246008;

}



;; Function std::vector<int>::_S_max_size (_ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_, funcdef_no=10400, decl_uid=167622, cgraph_uid=7032, symbol_order=7825)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<int>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.246010;

  <bb 2> :
  __diffmax = 2305843009213693951;
  _1 = std::allocator_traits<std::allocator<int> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.246010 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.246010;

}



;; Function std::allocator_traits<std::allocator<int> >::max_size (_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_, funcdef_no=10757, decl_uid=166906, cgraph_uid=7389, symbol_order=8184)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<int> >::max_size (const struct allocator_type & __a)
{
  size_type D.246013;

  <bb 2> :
  D.246013 = __gnu_cxx::new_allocator<int>::max_size (__a);

  <bb 3> :
<L0>:
  return D.246013;

}



;; Function __gnu_cxx::new_allocator<int>::max_size (_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv, funcdef_no=10895, decl_uid=166748, cgraph_uid=7527, symbol_order=8322)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<int>::max_size (const struct new_allocator * const this)
{
  size_type D.246015;

  <bb 2> :
  D.246015 = __gnu_cxx::new_allocator<int>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.246015;

}



;; Function __gnu_cxx::new_allocator<int>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIiE11_M_max_sizeEv, funcdef_no=10402, decl_uid=166767, cgraph_uid=7033, symbol_order=7826)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<int>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.246017;

  <bb 2> :
  D.246017 = 2305843009213693951;

  <bb 3> :
<L0>:
  return D.246017;

}



;; Function std::min<long unsigned int> (_ZSt3minImERKT_S2_S2_, funcdef_no=10758, decl_uid=114557, cgraph_uid=7390, symbol_order=8185)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
const long unsigned int & std::min<long unsigned int> (const long unsigned int & __a, const long unsigned int & __b)
{
  const long unsigned int & D.246021;

  <bb 2> :
  _1 = *__b;
  _2 = *__a;
  if (_1 < _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.246021 = __b;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.246021 = __a;

  <bb 5> :
<L2>:
  return D.246021;

}



;; Function std::vector<int>::begin (_ZNSt6vectorIiSaIiEE5beginEv, funcdef_no=9135, decl_uid=167349, cgraph_uid=5767, symbol_order=6556)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<int>::begin (struct vector * const this)
{
  struct iterator D.231521;
  struct iterator D.246023;

  <bb 2> :
  _1 = &this->D.167768._M_impl.D.167081._M_start;
  __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (&D.231521, _1);
  D.246023 = D.231521;
  D.231521 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.246023;

}



;; Function __gnu_cxx::operator-<int*, std::vector<int> > (_ZN9__gnu_cxxmiIPiSt6vectorIiSaIiEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_, funcdef_no=9136, decl_uid=220184, cgraph_uid=5768, symbol_order=6557)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<int*, std::vector<int> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.246026;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.246026 = _5 /[ex] 4;

  <bb 3> :
<L0>:
  return D.246026;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_M_allocate (_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm, funcdef_no=9137, decl_uid=167085, cgraph_uid=5769, symbol_order=6558)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
int * std::_Vector_base<int, std::allocator<int> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  int * D.246034;
  int * iftmp.16;
  int * D.246028;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.246034 = std::allocator_traits<std::allocator<int> >::allocate (_1, __n);
  iftmp.16 = D.246034;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.16 = 0B;

  <bb 5> :
  D.246028 = iftmp.16;

  <bb 6> :
<L3>:
  return D.246028;

}



;; Function std::allocator_traits<std::allocator<int> >::allocate (_ZNSt16allocator_traitsISaIiEE8allocateERS0_m, funcdef_no=9870, decl_uid=166886, cgraph_uid=6502, symbol_order=7295)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
int * std::allocator_traits<std::allocator<int> >::allocate (struct allocator_type & __a, size_type __n)
{
  int * D.246037;
  int * D.246035;

  <bb 2> :
  D.246037 = __gnu_cxx::new_allocator<int>::allocate (__a, __n, 0B);
  D.246035 = D.246037;

  <bb 3> :
<L0>:
  return D.246035;

}



;; Function __gnu_cxx::new_allocator<int>::allocate (_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv, funcdef_no=10401, decl_uid=166740, cgraph_uid=7034, symbol_order=7827)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
int * __gnu_cxx::new_allocator<int>::allocate (struct new_allocator * const this, size_type __n, const void * D.242777)
{
  int * D.246048;
  int * D.246047;
  align_val_t __al;
  int * D.246045;
  bool retval.17;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<int>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.17 = _4 != 0;
  if (retval.17 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 4611686018427387903)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 4;
  D.246048 = operator new (_6);
  D.246045 = D.246048;

  <bb 7> :
<L6>:
  return D.246045;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv, funcdef_no=8874, decl_uid=166969, cgraph_uid=5506, symbol_order=6295)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.246049;

  <bb 2> :
  D.246049 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.246049;

}



;; Function __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv, funcdef_no=9139, decl_uid=210076, cgraph_uid=5771, symbol_order=6560)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * const & __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (const struct __normal_iterator * const this)
{
  int * const & D.246051;

  <bb 2> :
  D.246051 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.246051;

}



;; Function std::vector<int>::_S_relocate (_ZNSt6vectorIiSaIiEE11_S_relocateEPiS2_S2_RS0_, funcdef_no=9138, decl_uid=167243, cgraph_uid=5770, symbol_order=6559)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::vector<int>::_S_relocate (int * __first, int * __last, int * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.246054;
  int * D.246053;

  <bb 2> :
  D.246053 = std::vector<int>::_S_do_relocate (__first, __last, __result, __alloc, D.246054);

  <bb 3> :
<L0>:
  return D.246053;

}



;; Function std::vector<int>::_S_do_relocate (_ZNSt6vectorIiSaIiEE14_S_do_relocateEPiS2_S2_RS0_St17integral_constantIbLb1EE, funcdef_no=9871, decl_uid=167231, cgraph_uid=6503, symbol_order=7296)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::vector<int>::_S_do_relocate (int * __first, int * __last, int * __result, struct _Tp_alloc_type & __alloc, struct true_type D.239239)
{
  int * D.246056;

  <bb 2> :
  D.246056 = std::__relocate_a<int*, int*, std::allocator<int> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.246056;

}



;; Function std::__relocate_a<int*, int*, std::allocator<int> > (_ZSt12__relocate_aIPiS0_SaIiEET0_T_S3_S2_RT1_, funcdef_no=10403, decl_uid=220348, cgraph_uid=7035, symbol_order=7828)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__relocate_a<int*, int*, std::allocator<int> > (int * __first, int * __last, int * __result, struct allocator & __alloc)
{
  int * D.246058;

  <bb 2> :
  _1 = std::__niter_base<int*> (__result);
  _2 = std::__niter_base<int*> (__last);
  _3 = std::__niter_base<int*> (__first);
  D.246058 = std::__relocate_a_1<int, int> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.246058;

}



;; Function std::__niter_base<int*> (_ZSt12__niter_baseIPiET_S1_, funcdef_no=10697, decl_uid=220354, cgraph_uid=7329, symbol_order=8122)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__niter_base<int*> (int * __it)
{
  int * D.246060;

  <bb 2> :
  D.246060 = __it;

  <bb 3> :
<L0>:
  return D.246060;

}



;; Function std::__relocate_a_1<int, int> (_ZSt14__relocate_a_1IiiENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS2_E4typeES4_S4_S4_RSaIT0_E, funcdef_no=10759, decl_uid=220522, cgraph_uid=7391, symbol_order=8186)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
int * std::__relocate_a_1<int, int> (int * __first, int * __last, int * __result, struct allocator & D.244317)
{
  ptrdiff_t __count;
  int * D.246065;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 4;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.18_2 = (long unsigned int) __count;
  _3 = __count.18_2 * 4;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.19_4 = (long unsigned int) __count;
  _5 = __count.19_4 * 4;
  D.246065 = __result + _5;

  <bb 5> :
<L3>:
  return D.246065;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim, funcdef_no=8873, decl_uid=167088, cgraph_uid=5505, symbol_order=6294)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_M_deallocate (struct _Vector_base * const this, int * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<int> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<int> >::deallocate (_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim, funcdef_no=9686, decl_uid=166893, cgraph_uid=6318, symbol_order=7107)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<int> >::deallocate (struct allocator_type & __a, int * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::deallocate (_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim, funcdef_no=10252, decl_uid=166744, cgraph_uid=6884, symbol_order=7677)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<int>::deallocate (struct new_allocator * const this, int * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 4;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::_List_iterator<int>::operator* (_ZNKSt14_List_iteratorIiEdeEv, funcdef_no=7522, decl_uid=169007, cgraph_uid=4154, symbol_order=4939)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int & std::_List_iterator<int>::operator* (const struct _List_iterator * const this)
{
  int & D.246073;

  <bb 2> :
  _1 = this->_M_node;
  D.246073 = std::_List_node<int>::_M_valptr (_1);

  <bb 3> :
<L0>:
  return D.246073;

}



;; Function std::vector<int>::operator[] (_ZNSt6vectorIiSaIiEEixEm, funcdef_no=7526, decl_uid=167393, cgraph_uid=4158, symbol_order=4943)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
value_type & std::vector<int>::operator[] (struct vector * const this, size_type __n)
{
  value_type & D.246075;

  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_start;
  _2 = __n * 4;
  D.246075 = _1 + _2;

  <bb 3> :
<L0>:
  return D.246075;

}



;; Function std::vector<int>::size (_ZNKSt6vectorIiSaIiEE4sizeEv, funcdef_no=7525, decl_uid=167373, cgraph_uid=4157, symbol_order=4942)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<int>::size (const struct vector * const this)
{
  size_type D.246077;

  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_finish;
  _2 = this->D.167768._M_impl.D.167081._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 4;
  D.246077 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.246077;

}



;; Function std::vector<int>::pop_back (_ZNSt6vectorIiSaIiEE8pop_backEv, funcdef_no=7527, decl_uid=167432, cgraph_uid=4159, symbol_order=4944)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::pop_back (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_finish;
  _2 = _1 + 18446744073709551612;
  this->D.167768._M_impl.D.167081._M_finish = _2;
  _3 = this->D.167768._M_impl.D.167081._M_finish;
  _4 = &this->D.167768._M_impl;
  std::allocator_traits<std::allocator<int> >::destroy<int> (_4, _3);
  return;

}



;; Function std::allocator_traits<std::allocator<int> >::destroy<int> (_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_, funcdef_no=8321, decl_uid=210116, cgraph_uid=4953, symbol_order=5742)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<int> >::destroy<int> (struct allocator_type & __a, int * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::destroy<int> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::destroy<int> (_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_, funcdef_no=9140, decl_uid=220534, cgraph_uid=5772, symbol_order=6561)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::destroy<int> (struct new_allocator * const this, int * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function std::_List_iterator<int>::operator++ (_ZNSt14_List_iteratorIiEppEv, funcdef_no=7521, decl_uid=169011, cgraph_uid=4153, symbol_order=4938)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Self & std::_List_iterator<int>::operator++ (struct _List_iterator * const this)
{
  struct _Self & D.246079;

  <bb 2> :
  _1 = this->_M_node;
  _2 = _1->_M_next;
  this->_M_node = _2;
  D.246079 = this;

  <bb 3> :
<L0>:
  return D.246079;

}



;; Function std::operator!= (_ZStneRKSt14_List_iteratorIiES2_, funcdef_no=7520, decl_uid=169024, cgraph_uid=4152, symbol_order=4937)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct _Self & __x, const struct _Self & __y)
{
  bool D.246081;

  <bb 2> :
  _1 = __x->_M_node;
  _2 = __y->_M_node;
  D.246081 = _1 != _2;

  <bb 3> :
<L0>:
  return D.246081;

}



;; Function Graph::DFS (_ZN5Graph3DFSEi, funcdef_no=6167, decl_uid=167797, cgraph_uid=3143, symbol_order=3817)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void Graph::DFS (struct Graph * const this, int v)
{
  bool * D.246084;
  int i;
  bool * visited;
  sizetype D.246083;

  <bb 2> :
  _1 = this->V;
  D.246083 = (sizetype) _1;
  D.246084 = operator new [] (D.246083);
  visited = D.246084;
  i = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _2 = (sizetype) i;
  _3 = visited + _2;
  *_3 = 0;
  i = i + 1;

  <bb 4> :
  _4 = this->V;
  if (i < _4)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  Graph::DFSUtil (this, v, visited);
  return;

}



;; Function Graph::is_succ (_ZN5Graph7is_succEP15basic_block_defS1_, funcdef_no=6168, decl_uid=167793, cgraph_uid=3144, symbol_order=3818)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { }
bool Graph::is_succ (struct Graph * const this, struct basic_block_def * bb1, struct basic_block_def * bb2)
{
  bool D.246085;
  value_type D.169110;

  <bb 2> :
  _1 = &this->stack;
  std::vector<int>::clear (_1);
  _2 = bb2->index;
  this->end = _2;
  this->succ = 0;
  _3 = &this->stack;
  D.169110 = 2;
  std::vector<int>::push_back (_3, &D.169110);

  <bb 3> :
  D.169110 = {CLOBBER};
  Graph::DFS (this, 2);
  D.246085 = this->succ;

  <bb 4> :
<L0>:
  return D.246085;

  <bb 5> :
<L1>:
  D.169110 = {CLOBBER};
  resx 1

}



;; Function std::vector<int>::clear (_ZNSt6vectorIiSaIiEE5clearEv, funcdef_no=7528, decl_uid=167475, cgraph_uid=4160, symbol_order=4945)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_start;
  std::vector<int>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<int>::_M_erase_at_end (_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi, funcdef_no=8322, decl_uid=167624, cgraph_uid=4954, symbol_order=5743)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<int>::_M_erase_at_end (struct vector * const this, int * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 4;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.167768;
  _5 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_4);
  _6 = this->D.167768._M_impl.D.167081._M_finish;
  std::_Destroy<int*, int> (__pos, _6, _5);
  this->D.167768._M_impl.D.167081._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::_Destroy<int*, int> (_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E, funcdef_no=8875, decl_uid=216526, cgraph_uid=5507, symbol_order=6296)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<int*, int> (int * __first, int * __last, struct allocator & D.230064)
{
  <bb 2> :
  std::_Destroy<int*> (__first, __last);
  return;

}



;; Function std::_Destroy<int*> (_ZSt8_DestroyIPiEvT_S1_, funcdef_no=9687, decl_uid=230066, cgraph_uid=6319, symbol_order=7108)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<int*> (int * __first, int * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<int*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<int*> (_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_, funcdef_no=10253, decl_uid=237065, cgraph_uid=6885, symbol_order=7678)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<int*> (int * D.241615, int * D.241616)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::vector<int>::push_back (_ZNSt6vectorIiSaIiEE9push_backEOi, funcdef_no=7529, decl_uid=167423, cgraph_uid=4161, symbol_order=4946)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::push_back (struct vector * const this, value_type & __x)
{
  <bb 2> :
  _1 = std::move<int&> (__x);
  std::vector<int>::emplace_back<int> (this, _1);
  return;

}



;; Function std::move<int&> (_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_, funcdef_no=8323, decl_uid=210211, cgraph_uid=4955, symbol_order=5744)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
type & std::move<int&> (int & __t)
{
  type & D.246091;

  <bb 2> :
  D.246091 = __t;

  <bb 3> :
<L0>:
  return D.246091;

}



;; Function std::vector<int>::emplace_back<int> (_ZNSt6vectorIiSaIiEE12emplace_backIJiEEERiDpOT_, funcdef_no=8324, decl_uid=210213, cgraph_uid=4956, symbol_order=5745)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
value_type & std::vector<int>::emplace_back<int> (struct vector * const this, int & __args#0)
{
  value_type & D.246097;
  struct __normal_iterator D.246096;

  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_finish;
  _2 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = std::forward<int> (__args#0);
  _4 = this->D.167768._M_impl.D.167081._M_finish;
  _5 = &this->D.167768._M_impl;
  std::allocator_traits<std::allocator<int> >::construct<int, int> (_5, _4, _3);
  _6 = this->D.167768._M_impl.D.167081._M_finish;
  _7 = _6 + 4;
  this->D.167768._M_impl.D.167081._M_finish = _7;
  goto <bb 5>; [INV]

  <bb 4> :
  _8 = std::forward<int> (__args#0);
  D.246096 = std::vector<int>::end (this);
  std::vector<int>::_M_realloc_insert<int> (this, D.246096, _8);

  <bb 5> :
  D.246097 = std::vector<int>::back (this);

  <bb 6> :
<L3>:
  return D.246097;

}



;; Function std::allocator_traits<std::allocator<int> >::construct<int, int> (_ZNSt16allocator_traitsISaIiEE9constructIiJiEEEvRS0_PT_DpOT0_, funcdef_no=9142, decl_uid=220555, cgraph_uid=5774, symbol_order=6563)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<int> >::construct<int, int> (struct allocator_type & __a, int * __p, int & __args#0)
{
  <bb 2> :
  _1 = std::forward<int> (__args#0);
  __gnu_cxx::new_allocator<int>::construct<int, int> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::construct<int, int> (_ZN9__gnu_cxx13new_allocatorIiE9constructIiJiEEEvPT_DpOT0_, funcdef_no=9872, decl_uid=231546, cgraph_uid=6504, symbol_order=7297)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::construct<int, int> (struct new_allocator * const this, int * __p, int & __args#0)
{
  void * D.239245;
  void * D.239244;
  int D.239246;

  <bb 2> :
  _1 = std::forward<int> (__args#0);
  D.239246 = *_1;
  D.239244 = __p;
  D.239245 = operator new (4, D.239244);
  MEM[(int *)D.239245] = D.239246;
  return;

}



;; Function std::forward<int> (_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE, funcdef_no=9141, decl_uid=220553, cgraph_uid=5773, symbol_order=6562)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
int & std::forward<int> (type & __t)
{
  int & D.246099;

  <bb 2> :
  D.246099 = __t;

  <bb 3> :
<L0>:
  return D.246099;

}



;; Function std::vector<int>::_M_realloc_insert<int> (_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_, funcdef_no=9143, decl_uid=220568, cgraph_uid=5775, symbol_order=6564)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::_M_realloc_insert<int> (struct vector * const this, struct iterator __position, int & __args#0)
{
  int * D.246105;
  const size_type D.246104;
  int * __new_finish;
  int * __new_start;
  const size_type __elems_before;
  int * __old_finish;
  int * __old_start;
  const size_type __len;
  struct iterator D.231557;

  <bb 2> :
  D.246104 = std::vector<int>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.246104;
  __old_start = this->D.167768._M_impl.D.167081._M_start;
  __old_finish = this->D.167768._M_impl.D.167081._M_finish;
  D.231557 = std::vector<int>::begin (this);
  _1 = __gnu_cxx::operator-<int*, std::vector<int> > (&__position, &D.231557);
  __elems_before = (const size_type) _1;
  D.231557 = {CLOBBER};
  _2 = &this->D.167768;
  D.246105 = std::_Vector_base<int, std::allocator<int> >::_M_allocate (_2, __len);
  __new_start = D.246105;
  __new_finish = __new_start;
  _3 = std::forward<int> (__args#0);
  _4 = __elems_before * 4;
  _5 = __new_start + _4;
  _6 = &this->D.167768._M_impl;
  std::allocator_traits<std::allocator<int> >::construct<int, int> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.167768;
  _8 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<int>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 4;
  _11 = &this->D.167768;
  _12 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<int>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.167768;
  _23 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 4;
  _26 = (long unsigned int) _25;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_22, __old_start, _26);
  this->D.167768._M_impl.D.167081._M_start = __new_start;
  this->D.167768._M_impl.D.167081._M_finish = __new_finish;
  _27 = __len * 4;
  _28 = __new_start + _27;
  this->D.167768._M_impl.D.167081._M_end_of_storage = _28;
  return;

}



;; Function std::vector<int>::back (_ZNSt6vectorIiSaIiEE4backEv, funcdef_no=9144, decl_uid=167412, cgraph_uid=5776, symbol_order=6565)

Merging blocks 3 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
value_type & std::vector<int>::back (struct vector * const this)
{
  struct iterator D.231563;
  struct __normal_iterator D.231564;
  value_type & D.246106;

  <bb 2> :
  D.231563 = std::vector<int>::end (this);
  D.231564 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator- (&D.231563, 1);
  D.246106 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator* (&D.231564);

  <bb 3> :
  D.231564 = {CLOBBER};
  D.231563 = {CLOBBER};

  <bb 4> :
<L2>:
  return D.246106;

}



;; Function __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator- (_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEmiEl, funcdef_no=9873, decl_uid=210073, cgraph_uid=6505, symbol_order=7298)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator- (const struct __normal_iterator * const this, difference_type __n)
{
  int * const D.239249;
  struct __normal_iterator D.239250;
  struct __normal_iterator D.246110;

  <bb 2> :
  _1 = this->_M_current;
  __n.20_2 = (long unsigned int) __n;
  _3 = __n.20_2 * 4;
  _4 = -_3;
  _5 = _1 + _4;
  D.239249 = _5;
  __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (&D.239250, &D.239249);
  D.246110 = D.239250;
  D.239250 = {CLOBBER};
  D.239249 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.246110;

}



;; Function __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv, funcdef_no=9874, decl_uid=210047, cgraph_uid=6506, symbol_order=7299)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int & __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator* (const struct __normal_iterator * const this)
{
  int & D.246114;

  <bb 2> :
  D.246114 = this->_M_current;

  <bb 3> :
<L0>:
  return D.246114;

}



;; Function Graph::exist_succ (_ZN5Graph10exist_succEP15basic_block_def, funcdef_no=6169, decl_uid=167788, cgraph_uid=3145, symbol_order=3819)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 4 }
;; 3 succs { 6 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool Graph::exist_succ (struct Graph * const this, struct basic_block_def * bb)
{
  struct iterator i;
  struct iterator D.169118;
  bool retval.21;
  bool D.246116;

  <bb 2> :
  std::_List_iterator<int>::_List_iterator (&i);
  _1 = this->adj;
  _2 = bb->index;
  _3 = (long unsigned int) _2;
  _4 = _3 * 24;
  _5 = _1 + _4;
  i = std::__cxx11::list<int>::begin (_5);
  goto <bb 4>; [INV]

  <bb 3> :
  D.246116 = 1;
  goto <bb 6>; [INV]

  <bb 4> :
  _6 = this->adj;
  _7 = bb->index;
  _8 = (long unsigned int) _7;
  _9 = _8 * 24;
  _10 = _6 + _9;
  D.169118 = std::__cxx11::list<int>::end (_10);
  retval.21 = std::operator!= (&i, &D.169118);
  D.169118 = {CLOBBER};
  if (retval.21 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.246116 = 0;

  <bb 6> :
  i = {CLOBBER};

  <bb 7> :
<L4>:
  return D.246116;

}



;; Function bb_in_loop_p (_Z12bb_in_loop_pP15basic_block_def, funcdef_no=6237, decl_uid=187054, cgraph_uid=3213, symbol_order=3982)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool bb_in_loop_p (struct basic_block_def * bb)
{
  bool D.246120;

  <bb 2> :
  _1 = bb->loop_father;
  _2 = _1->header;
  _3 = _2->index;
  D.246120 = _3 != 0;

  <bb 3> :
<L0>:
  return D.246120;

}



;; Function bb_in_branch_p (_Z14bb_in_branch_pP6gimple, funcdef_no=6238, decl_uid=187057, cgraph_uid=3214, symbol_order=3983)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool bb_in_branch_p (struct gimple * stmt)
{
  bool D.246124;
  bool D.246122;

  <bb 2> :
  cfun.22_1 = cfun;
  _2 = cfun.22_1->cfg;
  _3 = _2->x_exit_block_ptr;
  _4 = _3->prev_bb;
  _5 = stmt->bb;
  D.246124 = dominated_by_p (1, _5, _4);
  _6 = D.246124;
  D.246122 = ~_6;

  <bb 3> :
<L0>:
  return D.246122;

}



;; Function init_table (_Z10init_tablev, funcdef_no=6239, decl_uid=187059, cgraph_uid=3215, symbol_order=3984)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void init_table ()
{
  <bb 2> :
  start1.target = 0B;
  start1.next = 0B;
  POINTER_NOT_EXIST.23_1 = POINTER_NOT_EXIST;
  POINTER_NOT_EXIST.24_2 = (int) POINTER_NOT_EXIST.23_1;
  start1.state = POINTER_NOT_EXIST.24_2;
  ptable = &start1;
  start2.target = 0B;
  start2.next = 0B;
  POINTER_NOT_EXIST.25_3 = POINTER_NOT_EXIST;
  POINTER_NOT_EXIST.26_4 = (int) POINTER_NOT_EXIST.25_3;
  start2.state = POINTER_NOT_EXIST.26_4;
  ftable = &start2;
  return;

}



;; Function Location_b (_Z10Location_bP6gimpleS0_P15basic_block_def, funcdef_no=6240, decl_uid=187064, cgraph_uid=3216, symbol_order=3985)

Merging blocks 9 and 11
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 5 3
;; 2 succs { 8 }
;; 3 succs { 4 5 }
;; 4 succs { 10 }
;; 5 succs { 6 7 }
;; 6 succs { 10 }
;; 7 succs { 8 }
;; 8 succs { 3 9 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 1 }
bool Location_b (struct gimple * a, struct gimple * b, struct basic_block_def * bb)
{
  struct gimple_stmt_iterator gsi;
  struct gimple * gc;
  bool retval.27;
  bool D.246127;

  <bb 2> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 8>; [INV]

  <bb 3> :
  gc = gsi_stmt (gsi);
  if (gc == a)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.246127 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 5> :
  if (gc == b)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  D.246127 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 7> :
  gsi_next (&gsi);

  <bb 8> :
  _1 = gsi_end_p (gsi);
  retval.27 = ~_1;
  if (retval.27 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  gsi = {CLOBBER};
  D.246127 = 0;
  goto <bb 11>; [INV]

  <bb 10> :
  gsi = {CLOBBER};

  <bb 11> :
<L9>:
  return D.246127;

}



;; Function gsi_start_bb (_ZL12gsi_start_bbP15basic_block_def, funcdef_no=2478, decl_uid=94526, cgraph_uid=1615, symbol_order=1775)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple_stmt_iterator gsi_start_bb (struct basic_block_def * bb)
{
  struct gimple * * seq;
  struct gimple_stmt_iterator i [value-expr: <retval>];

  <bb 2> :
  seq = bb_seq_addr (bb);
  _1 = *seq;
  _2 = gimple_seq_first (_1);
  <retval>.ptr = _2;
  <retval>.seq = seq;
  <retval>.bb = bb;

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function bb_seq_addr (_ZL11bb_seq_addrP15basic_block_def, funcdef_no=1994, decl_uid=92233, cgraph_uid=1131, symbol_order=1291)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct gimple * * bb_seq_addr (struct basic_block_def * bb)
{
  struct gimple * * iftmp.28;
  struct gimple * * D.246136;

  <bb 2> :
  _1 = bb->flags;
  _2 = _1 & 512;
  if (_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.28 = &bb->il.gimple.seq;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.28 = 0B;

  <bb 5> :
  D.246136 = iftmp.28;

  <bb 6> :
<L3>:
  return D.246136;

}



;; Function gimple_seq_first (_ZL16gimple_seq_firstP6gimple, funcdef_no=1984, decl_uid=92193, cgraph_uid=1121, symbol_order=1281)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * gimple_seq_first (struct gimple * s)
{
  struct gimple * D.246142;

  <bb 2> :
  D.246142 = s;

  <bb 3> :
<L0>:
  return D.246142;

}



;; Function gsi_stmt (_ZL8gsi_stmt20gimple_stmt_iterator, funcdef_no=2485, decl_uid=94558, cgraph_uid=1622, symbol_order=1782)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * gsi_stmt (struct gimple_stmt_iterator i)
{
  struct gimple * D.246144;

  <bb 2> :
  D.246144 = i.ptr;

  <bb 3> :
<L0>:
  return D.246144;

}



;; Function gsi_next (_ZL8gsi_nextP20gimple_stmt_iterator, funcdef_no=2483, decl_uid=94551, cgraph_uid=1620, symbol_order=1780)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void gsi_next (struct gimple_stmt_iterator * i)
{
  <bb 2> :
  _1 = i->ptr;
  _2 = _1->next;
  i->ptr = _2;
  return;

}



;; Function gsi_end_p (_ZL9gsi_end_p20gimple_stmt_iterator, funcdef_no=2481, decl_uid=94545, cgraph_uid=1618, symbol_order=1778)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool gsi_end_p (struct gimple_stmt_iterator i)
{
  bool D.246146;

  <bb 2> :
  _1 = i.ptr;
  D.246146 = _1 == 0B;

  <bb 3> :
<L0>:
  return D.246146;

}



;; Function Location_b2 (_Z11Location_b2P6gimpleS0_P9tree_node, funcdef_no=6241, decl_uid=187078, cgraph_uid=3217, symbol_order=3986)

Merging blocks 18 and 20
Removing basic block 22
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
;;
;; Loop 1
;;  header 23, latch 22
;;  depth 1, outer 0
;;  nodes: 23 22 4 6 21 7 20 8 18 17 9 16 13 10 5 3
;;
;; Loop 2
;;  header 20, latch 18
;;  depth 2, outer 1
;;  nodes: 20 18 17 9 16 13 10
;;
;; Loop 3
;;  header 17, latch 16
;;  depth 3, outer 2
;;  nodes: 17 16 13 10
;; 2 succs { 23 }
;; 3 succs { 4 5 }
;; 4 succs { 22 }
;; 5 succs { 6 7 }
;; 6 succs { 22 }
;; 7 succs { 8 21 }
;; 8 succs { 20 }
;; 9 succs { 17 }
;; 10 succs { 11 13 }
;; 11 succs { 26 12 }
;; 12 succs { 19 }
;; 13 succs { 14 16 }
;; 14 succs { 26 15 }
;; 15 succs { 19 }
;; 16 succs { 17 }
;; 17 succs { 10 18 }
;; 18 succs { 20 }
;; 19 succs { 25 }
;; 20 succs { 9 21 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 3 24 }
;; 24 succs { 25 }
;; 25 succs { 1 }
;; 26 succs { }
bool Location_b2 (struct gimple * a, struct gimple * b, union tree_node * function_tree)
{
  struct cgraph_node * D.246168;
  bool D.246164;
  struct cgraph_node * D.246163;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct basic_block_def * bb;
  struct cgraph_node * node;
  bool retval.34;
  bool D.246157;
  bool retval.30;

  <bb 2> :
  symtab.29_1 = symtab;
  D.246163 = symbol_table::first_defined_function (symtab.29_1);
  node = D.246163;
  goto <bb 23>; [INV]

  <bb 3> :
  _2 = node->D.97512.decl;
  D.246164 = gimple_has_body_p (_2);
  _3 = D.246164;
  retval.30 = ~_3;
  if (retval.30 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by continue predictor.
  goto <bb 22>; [INV]

  <bb 5> :
  _4 = node->D.97512.decl;
  _5 = _4->function_decl.f;
  push_cfun (_5);
  cfun.31_6 = cfun;
  if (cfun.31_6 == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  pop_cfun ();
  // predicted unlikely by continue predictor.
  goto <bb 22>; [INV]

  <bb 7> :
  cfun.32_7 = cfun;
  _8 = cfun.32_7->decl;
  if (function_tree == _8)
    goto <bb 8>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 8> :
  calculate_dominance_info (1);
  cfun.33_9 = cfun;
  _10 = cfun.33_9->cfg;
  _11 = _10->x_entry_block_ptr;
  bb = _11->next_bb;
  goto <bb 20>; [INV]

  <bb 9> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 17>; [INV]

  <bb 10> :
  gc = gsi_stmt (gsi);
  if (gc == a)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  pop_cfun ();

  <bb 12> :
  D.246157 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 13> :
  if (gc == b)
    goto <bb 14>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 14> :
  pop_cfun ();

  <bb 15> :
  D.246157 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 16> :
  gsi_next (&gsi);

  <bb 17> :
  _12 = gsi_end_p (gsi);
  retval.34 = ~_12;
  if (retval.34 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  gsi = {CLOBBER};
  bb = bb->next_bb;
  goto <bb 20>; [INV]

  <bb 19> :
  gsi = {CLOBBER};
  goto <bb 25>; [INV]

  <bb 20> :
  cfun.35_13 = cfun;
  _14 = cfun.35_13->cfg;
  _15 = _14->x_exit_block_ptr;
  if (bb != _15)
    goto <bb 9>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 21> :
  pop_cfun ();

  <bb 22> :
  symtab.36_16 = symtab;
  D.246168 = symbol_table::next_defined_function (symtab.36_16, node);
  node = D.246168;

  <bb 23> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  D.246157 = 0;

  <bb 25> :
<L23>:
  return D.246157;

  <bb 26> :
<L24>:
  gsi = {CLOBBER};
  resx 1

}



;; Function symbol_table::first_defined_function (_ZN12symbol_table22first_defined_functionEv, funcdef_no=2571, decl_uid=98657, cgraph_uid=1708, symbol_order=1868)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 3 4
;; 2 succs { 7 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 9 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct cgraph_node * symbol_table::first_defined_function (struct symbol_table * const this)
{
  struct cgraph_node * D.246175;
  struct cgraph_node * cn;
  struct symtab_node * node;
  struct cgraph_node * D.246173;

  <bb 2> :
  node = this->nodes;
  goto <bb 7>; [INV]

  <bb 3> :
  D.246175 = dyn_cast<cgraph_node*, symtab_node> (node);
  cn = D.246175;
  if (cn != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _1 = BIT_FIELD_REF <cn->D.97512, 8, 16>;
  _2 = _1 & 1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.246173 = cn;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  node = node->next;

  <bb 7> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  D.246173 = 0B;

  <bb 9> :
<L7>:
  return D.246173;

}



;; Function dyn_cast<cgraph_node*, symtab_node> (_Z8dyn_castIP11cgraph_node11symtab_nodeET_PT0_, funcdef_no=7074, decl_uid=97635, cgraph_uid=3706, symbol_order=4488)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct cgraph_node * dyn_cast<cgraph_node*, symtab_node> (struct symtab_node * p)
{
  struct cgraph_node * D.246179;
  bool retval.37;

  <bb 2> :
  retval.37 = is_a<cgraph_node*, symtab_node> (p);
  if (retval.37 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.246179 = reinterpret_is_a_helper<cgraph_node*>::cast<symtab_node> (p);
  goto <bb 5>; [INV]

  <bb 4> :
  D.246179 = 0B;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
<L2>:
  return D.246179;

}



;; Function is_a<cgraph_node*, symtab_node> (_Z4is_aIP11cgraph_node11symtab_nodeEbPT0_, funcdef_no=7083, decl_uid=99519, cgraph_uid=3715, symbol_order=4497)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool is_a<cgraph_node*, symtab_node> (struct symtab_node * p)
{
  bool D.246181;

  <bb 2> :
  D.246181 = is_a_helper<cgraph_node*>::test<symtab_node> (p);

  <bb 3> :
<L0>:
  return D.246181;

}



;; Function is_a_helper<cgraph_node*>::test<symtab_node> (_ZN11is_a_helperIP11cgraph_nodeE4testI11symtab_nodeEEbPT_, funcdef_no=2532, decl_uid=98449, cgraph_uid=1669, symbol_order=1829)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool is_a_helper<cgraph_node*>::test<symtab_node> (struct symtab_node * p)
{
  bool iftmp.38;
  bool D.246183;

  <bb 2> :
  if (p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _1 = p->type;
  if (_1 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.38 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.38 = 0;

  <bb 6> :
  D.246183 = iftmp.38;

  <bb 7> :
<L4>:
  return D.246183;

}



;; Function reinterpret_is_a_helper<cgraph_node*>::cast<symtab_node> (_ZN23reinterpret_is_a_helperIP11cgraph_nodeE4castI11symtab_nodeEES1_PT_, funcdef_no=8085, decl_uid=206057, cgraph_uid=4717, symbol_order=5502)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct cgraph_node * reinterpret_is_a_helper<cgraph_node*>::cast<symtab_node> (struct symtab_node * p)
{
  struct cgraph_node * D.246190;

  <bb 2> :
  D.246190 = p;

  <bb 3> :
<L0>:
  return D.246190;

}



;; Function symbol_table::next_defined_function (_ZN12symbol_table21next_defined_functionEP11cgraph_node, funcdef_no=2572, decl_uid=98661, cgraph_uid=1709, symbol_order=1869)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 3 4
;; 2 succs { 7 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 9 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct cgraph_node * symbol_table::next_defined_function (struct symbol_table * const this, struct cgraph_node * node)
{
  struct cgraph_node * D.246198;
  struct cgraph_node * cn1;
  struct symtab_node * node1;
  struct cgraph_node * D.246196;

  <bb 2> :
  node1 = node->D.97512.next;
  goto <bb 7>; [INV]

  <bb 3> :
  D.246198 = dyn_cast<cgraph_node*, symtab_node> (node1);
  cn1 = D.246198;
  if (cn1 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _1 = BIT_FIELD_REF <cn1->D.97512, 8, 16>;
  _2 = _1 & 1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.246196 = cn1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  node1 = node1->next;

  <bb 7> :
  if (node1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  D.246196 = 0B;

  <bb 9> :
<L7>:
  return D.246196;

}



;; Function SDBMHash (_Z8SDBMHashPc, funcdef_no=6242, decl_uid=186941, cgraph_uid=3218, symbol_order=3987)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
unsigned int SDBMHash (char * str)
{
  unsigned int hash;
  unsigned int D.246199;

  <bb 2> :
  _1 = rand ();
  _2 = _1 % 10;
  hash = (unsigned int) _2;
  goto <bb 4>; [INV]

  <bb 3> :
  str.39_3 = str;
  str = str.39_3 + 1;
  _4 = *str.39_3;
  _5 = (unsigned int) _4;
  _6 = hash << 6;
  _7 = _5 + _6;
  _8 = hash << 16;
  _9 = _7 + _8;
  hash = _9 - hash;

  <bb 4> :
  _10 = *str;
  if (_10 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.246199 = hash & 2147483647;

  <bb 6> :
<L3>:
  return D.246199;

}



;; Function dump_points_to_solution2 (_Z24dump_points_to_solution2P8_IO_FILEP11pt_solution, funcdef_no=6243, decl_uid=186946, cgraph_uid=3219, symbol_order=3989)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 1 }
int dump_points_to_solution2 (struct FILE * file, struct pt_solution * pt)
{
  int D.246219;

  <bb 2> :
  _1 = BIT_FIELD_REF <*pt, 8, 0>;
  _2 = _1 & 1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __builtin_fwrite (", points-to anything", 1, 20, file);

  <bb 4> :
  _3 = BIT_FIELD_REF <*pt, 8, 0>;
  _4 = _3 & 2;
  if (_4 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  __builtin_fwrite (", points-to non-local", 1, 21, file);

  <bb 6> :
  _5 = BIT_FIELD_REF <*pt, 8, 0>;
  _6 = _5 & 4;
  if (_6 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  __builtin_fwrite (", points-to escaped", 1, 19, file);

  <bb 8> :
  _7 = BIT_FIELD_REF <*pt, 8, 0>;
  _8 = _7 & 8;
  if (_8 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  __builtin_fwrite (", points-to unit escaped", 1, 24, file);

  <bb 10> :
  _9 = BIT_FIELD_REF <*pt, 8, 0>;
  _10 = _9 & 16;
  if (_10 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  __builtin_fwrite (", points-to NULL", 1, 16, file);

  <bb 12> :
  _11 = pt->vars;
  if (_11 != 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  __builtin_fwrite (", points-to vars: ", 1, 18, file);

  <bb 14> :
  D.246219 = 1;

  <bb 15> :
<L18>:
  return D.246219;

}



;; Function printfBasicblock (_Z16printfBasicblockv, funcdef_no=6244, decl_uid=187029, cgraph_uid=3223, symbol_order=3993)

Removing basic block 16
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
;;
;; Loop 1
;;  header 30, latch 29
;;  depth 1, outer 0
;;  nodes: 30 29 28 7 12 27 26 17 25 24 22 23 21 20 19 18 16 14 15 13 10 9 8 6 5 11
;;
;; Loop 2
;;  header 26, latch 25
;;  depth 2, outer 1
;;  nodes: 26 25 24 22 23 21 20 19 18
;;
;; Loop 3
;;  header 24, latch 23
;;  depth 3, outer 2
;;  nodes: 24 23
;; 2 succs { 33 3 }
;; 3 succs { 33 4 }
;; 4 succs { 30 }
;; 5 succs { 33 6 }
;; 6 succs { 7 8 }
;; 7 succs { 28 }
;; 8 succs { 33 9 }
;; 9 succs { 33 10 }
;; 10 succs { 11 13 }
;; 11 succs { 33 12 }
;; 12 succs { 28 }
;; 13 succs { 33 14 }
;; 14 succs { 15 16 }
;; 15 succs { 33 16 }
;; 16 succs { 33 17 }
;; 17 succs { 26 }
;; 18 succs { 33 19 }
;; 19 succs { 33 20 }
;; 20 succs { 33 21 }
;; 21 succs { 33 22 }
;; 22 succs { 24 }
;; 23 succs { 24 }
;; 24 succs { 23 25 }
;; 25 succs { 26 }
;; 26 succs { 18 27 }
;; 27 succs { 33 28 }
;; 28 succs { 33 29 }
;; 29 succs { 30 }
;; 30 succs { 5 31 }
;; 31 succs { 33 32 }
;; 32 succs { 1 }
;; 33 succs { }
void printfBasicblock ()
{
  struct cgraph_node * D.246235;
  bool D.246234;
  const char * D.246233;
  struct function * D.246232;
  bool D.246231;
  struct cgraph_node * D.246230;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  const char * name;
  struct cgraph_node * node;
  struct basic_block_def * bb;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;
  bool retval.50;
  bool retval.42;

  <bb 2> :
  stderr.40_1 = stderr;
  __builtin_fwrite ("\n===============Print ALL GIMPLE IR=================\n", 1, 53, stderr.40_1);

  <bb 3> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  symtab.41_2 = symtab;
  D.246230 = symbol_table::first_function (symtab.41_2);

  <bb 4> :
  node = D.246230;
  goto <bb 30>; [INV]

  <bb 5> :
  _3 = node->D.97512.decl;
  D.246231 = gimple_has_body_p (_3);

  <bb 6> :
  _4 = D.246231;
  retval.42 = ~_4;
  if (retval.42 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by continue predictor.
  goto <bb 28>; [INV]

  <bb 8> :
  D.246232 = cgraph_node::get_fun (node);

  <bb 9> :
  _5 = D.246232;
  push_cfun (_5);

  <bb 10> :
  cfun.43_6 = cfun;
  if (cfun.43_6 == 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  pop_cfun ();

  <bb 12> :
  // predicted unlikely by continue predictor.
  goto <bb 28>; [INV]

  <bb 13> :
  cfun.44_7 = cfun;
  _8 = cfun.44_7->decl;
  D.246233 = get_name (_8);

  <bb 14> :
  name = D.246233;
  if (name != 0B)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  stderr.45_9 = stderr;
  fprintf (stderr.45_9, "=======Mapping node_fun:%s=========\n", name);

  <bb 16> :
  calculate_dominance_info (1);

  <bb 17> :
  cfun.46_10 = cfun;
  _11 = cfun.46_10->cfg;
  _12 = _11->x_entry_block_ptr;
  bb = _12->next_bb;
  goto <bb 26>; [INV]

  <bb 18> :
  D.246234 = bb_in_loop_p (bb);

  <bb 19> :
  _13 = D.246234;
  _14 = (int) _13;
  stderr.47_15 = stderr;
  fprintf (stderr.47_15, "=======is loop:%d=========\n", _14);

  <bb 20> :
  _16 = bb->index;
  stderr.48_17 = stderr;
  fprintf (stderr.48_17, "\n bb index %d \n", _16);

  <bb 21> :
  debug_bb (bb);

  <bb 22> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 24>; [INV]

  <bb 23> :
  gc = gsi_stmt (gsi);
  gimplestmt_count.49_18 = gimplestmt_count;
  _19 = gimplestmt_count.49_18 + 1;
  gimplestmt_count = _19;
  gsi_next (&gsi);

  <bb 24> :
  _20 = gsi_end_p (gsi);
  retval.50 = ~_20;
  if (retval.50 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 25> :
  gsi = {CLOBBER};
  bb = bb->next_bb;

  <bb 26> :
  cfun.51_21 = cfun;
  _22 = cfun.51_21->cfg;
  _23 = _22->x_exit_block_ptr;
  if (bb != _23)
    goto <bb 18>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 27> :
  pop_cfun ();

  <bb 28> :
  symtab.52_24 = symtab;
  D.246235 = symbol_table::next_function (symtab.52_24, node);

  <bb 29> :
  node = D.246235;

  <bb 30> :
  if (node != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 31> :
  stderr.53_25 = stderr;
  __builtin_fwrite ("\n===============Print ALL GIMPLE IR=================\n", 1, 53, stderr.53_25);

  <bb 32> :
  start = {CLOBBER};
  return;

  <bb 33> :
<L17>:
  start = {CLOBBER};
  resx 1

}



;; Function gimple_array::gimple_array (_ZN12gimple_arrayC2Ev, funcdef_no=6246, decl_uid=187119, cgraph_uid=3221, symbol_order=3991)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void gimple_array::gimple_array (struct gimple_array * const this)
{
  <bb 2> :
  this->size = 0;
  return;

}



;; Function symbol_table::first_function (_ZN12symbol_table14first_functionEv, funcdef_no=2573, decl_uid=98664, cgraph_uid=1710, symbol_order=1870)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
struct cgraph_node * symbol_table::first_function (struct symbol_table * const this)
{
  struct cgraph_node * D.246241;
  struct cgraph_node * cn;
  struct symtab_node * node;
  struct cgraph_node * D.246239;

  <bb 2> :
  node = this->nodes;
  goto <bb 6>; [INV]

  <bb 3> :
  D.246241 = dyn_cast<cgraph_node*, symtab_node> (node);
  cn = D.246241;
  if (cn != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.246239 = cn;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  node = node->next;

  <bb 6> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  D.246239 = 0B;

  <bb 8> :
<L5>:
  return D.246239;

}



;; Function symbol_table::next_function (_ZN12symbol_table13next_functionEP11cgraph_node, funcdef_no=2574, decl_uid=98668, cgraph_uid=1711, symbol_order=1871)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
struct cgraph_node * symbol_table::next_function (struct symbol_table * const this, struct cgraph_node * node)
{
  struct cgraph_node * D.246246;
  struct cgraph_node * cn1;
  struct symtab_node * node1;
  struct cgraph_node * D.246244;

  <bb 2> :
  node1 = node->D.97512.next;
  goto <bb 6>; [INV]

  <bb 3> :
  D.246246 = dyn_cast<cgraph_node*, symtab_node> (node1);
  cn1 = D.246246;
  if (cn1 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.246244 = cn1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  node1 = node1->next;

  <bb 6> :
  if (node1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  D.246244 = 0B;

  <bb 8> :
<L5>:
  return D.246244;

}



;; Function print_function_path (_Z19print_function_pathPSt6vectorI11return_typeSaIS0_EE, funcdef_no=6248, decl_uid=187175, cgraph_uid=3224, symbol_order=3994)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void print_function_path (struct vector * path)
{
  int i;
  bool retval.56;

  <bb 2> :
  stderr.54_1 = stderr;
  __builtin_fwrite ("[\n", 1, 2, stderr.54_1);
  i = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _2 = (long unsigned int) i;
  _3 = std::vector<return_type>::operator[] (path, _2);
  _4 = _3->stmt;
  debug (_4);
  stderr.55_5 = stderr;
  __builtin_fwrite (",\n", 1, 2, stderr.55_5);
  i = i + 1;

  <bb 4> :
  _6 = (long unsigned int) i;
  _7 = std::vector<return_type>::size (path);
  retval.56 = _6 < _7;
  if (retval.56 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  stderr.57_8 = stderr;
  __builtin_fwrite ("]\n", 1, 2, stderr.57_8);
  return;

}



;; Function std::vector<return_type>::operator[] (_ZNSt6vectorI11return_typeSaIS0_EEixEm, funcdef_no=7597, decl_uid=173161, cgraph_uid=4229, symbol_order=5014)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<return_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.246248;

  <bb 2> :
  _1 = this->D.173508._M_impl.D.172853._M_start;
  _2 = __n * 24;
  D.246248 = _1 + _2;

  <bb 3> :
<L0>:
  return D.246248;

}



;; Function std::vector<return_type>::size (_ZNKSt6vectorI11return_typeSaIS0_EE4sizeEv, funcdef_no=7596, decl_uid=173141, cgraph_uid=4228, symbol_order=5013)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<return_type>::size (const struct vector * const this)
{
  size_type D.246250;

  <bb 2> :
  _1 = this->D.173508._M_impl.D.172853._M_finish;
  _2 = this->D.173508._M_impl.D.172853._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.246250 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.246250;

}



;; Function print_function_return2 (_Z22print_function_return2P9tree_node, funcdef_no=6249, decl_uid=187048, cgraph_uid=3231, symbol_order=4001)

Merging blocks 4 and 17
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 12 11
;; 2 succs { 20 3 }
;; 3 succs { 4 5 }
;; 4 succs { 17 }
;; 5 succs { 20 6 }
;; 6 succs { 20 7 }
;; 7 succs { 19 8 }
;; 8 succs { 18 9 }
;; 9 succs { 18 10 }
;; 10 succs { 14 }
;; 11 succs { 18 12 }
;; 12 succs { 18 13 }
;; 13 succs { 14 }
;; 14 succs { 11 15 }
;; 15 succs { 18 16 }
;; 16 succs { 17 }
;; 17 succs { 1 }
;; 18 succs { 19 }
;; 19 succs { 20 }
;; 20 succs { }
void print_function_return2 (union tree_node * function_tree)
{
  struct function_return_array * D.246258;
  struct function_return_array * D.246257;
  int i;
  struct vector ret_type_array;
  struct function_return_array fun_array;
  bool retval.65;
  bool retval.58;

  <bb 2> :
  function_return_collect.59_1 = function_return_collect;
  D.246257 = hash_map<tree_node*, function_return_array>::get (function_return_collect.59_1, &function_tree);

  <bb 3> :
  _2 = D.246257;
  retval.58 = _2 == 0B;
  if (retval.58 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  goto <bb 17>; [INV]

  <bb 5> :
  function_return_collect.60_3 = function_return_collect;
  D.246258 = hash_map<tree_node*, function_return_array>::get (function_return_collect.60_3, &function_tree);

  <bb 6> :
  _4 = D.246258;
  function_return_array::function_return_array (&fun_array, _4);

  <bb 7> :
  std::vector<return_type>::vector (&ret_type_array, &fun_array.return_type_array);

  <bb 8> :
  _5 = std::vector<return_type>::size (&ret_type_array);
  function_tree.61_6 = function_tree;
  stderr.62_7 = stderr;
  fprintf (stderr.62_7, "=======print_function_return %d   %d========\n", function_tree.61_6, _5);

  <bb 9> :
  stderr.63_8 = stderr;
  __builtin_fwrite ("[\n", 1, 2, stderr.63_8);

  <bb 10> :
  i = 0;
  goto <bb 14>; [INV]

  <bb 11> :
  _9 = (long unsigned int) i;
  _10 = std::vector<return_type>::operator[] (&ret_type_array, _9);
  _11 = _10->stmt;
  debug (_11);

  <bb 12> :
  stderr.64_12 = stderr;
  __builtin_fwrite (",\n", 1, 2, stderr.64_12);

  <bb 13> :
  i = i + 1;

  <bb 14> :
  _13 = (long unsigned int) i;
  _14 = std::vector<return_type>::size (&ret_type_array);
  retval.65 = _13 < _14;
  if (retval.65 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  stderr.66_15 = stderr;
  __builtin_fwrite ("]\n", 1, 2, stderr.66_15);

  <bb 16> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};

  <bb 17> :
<L7>:
  return;

  <bb 18> :
<L8>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 3

  <bb 19> :
<L9>:
  function_return_array::~function_return_array (&fun_array);
  resx 2

  <bb 20> :
<L10>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  resx 1

}



;; Function hash_map<tree_node*, function_return_array>::get (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7598, decl_uid=189537, cgraph_uid=4230, symbol_order=5015)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_return_array * hash_map<tree_node*, function_return_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.246272;
  struct hash_entry & D.246271;
  unsigned int D.246270;
  struct hash_entry & e;
  struct function_return_array * iftmp.67;
  struct function_return_array * D.246264;

  <bb 2> :
  _1 = &this->m_table;
  D.246270 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::hash (k);
  _2 = D.246270;
  D.246271 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.246271;
  D.246272 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_empty<hash_map<tree_node*, function_return_array>::hash_entry> (e);
  _3 = D.246272;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.67 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.67 = &e->m_value;

  <bb 5> :
  D.246264 = iftmp.67;

  <bb 6> :
<L3>:
  return D.246264;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE4hashERKS2_, funcdef_no=8420, decl_uid=189493, cgraph_uid=5052, symbol_order=5841)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::hash (union tree_node * const & h)
{
  hashval_t D.246273;

  <bb 2> :
  D.246273 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.246273;

}



;; Function pointer_hash<tree_node>::hash (_ZN12pointer_hashI9tree_nodeE4hashERKPS0_, funcdef_no=9189, decl_uid=85298, cgraph_uid=5821, symbol_order=6610)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t pointer_hash<tree_node>::hash (union tree_node * const & candidate)
{
  hashval_t D.246275;

  <bb 2> :
  _1 = *candidate;
  _2 = (long int) _1;
  _3 = _2 >> 3;
  D.246275 = (hashval_t) _3;

  <bb 3> :
<L0>:
  return D.246275;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8421, decl_uid=189680, cgraph_uid=5053, symbol_order=5842)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.246309;
  bool D.246308;
  bool D.246307;
  bool D.246306;
  bool D.246305;
  bool D.246304;
  struct value_type * D.246303;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.71;
  bool retval.70;
  struct value_type & D.246289;
  bool iftmp.69;
  bool retval.68;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 40;
  entry = _5 + _7;
  D.246304 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.246304;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.246305 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.246305;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.246306 = hash_map<tree_node*, function_return_array>::hash_entry::equal (entry, comparable);
  _11 = D.246306;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.69 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.69 = 0;

  <bb 8> :
  retval.68 = iftmp.69;
  if (retval.68 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.246289 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  entry = _17 + _19;
  D.246307 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.246307;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.246308 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.246308;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.246309 = hash_map<tree_node*, function_return_array>::hash_entry::equal (entry, comparable);
  _23 = D.246309;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.71 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.71 = 0;

  <bb 18> :
  retval.70 = iftmp.71;
  if (retval.70 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.246289 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.246289;

}



;; Function hash_table_mod1 (_Z15hash_table_mod1jj, funcdef_no=982, decl_uid=32188, cgraph_uid=280, symbol_order=291)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_table_mod1 (hashval_t hash, unsigned int index)
{
  const struct prime_ent * p;
  hashval_t D.246310;

  <bb 2> :
  p = &prime_tab[index];
  _1 = p->shift;
  _2 = (int) _1;
  _3 = p->inv;
  _4 = p->prime;
  D.246310 = mul_mod (hash, _4, _3, _2);

  <bb 3> :
<L0>:
  return D.246310;

}



;; Function mul_mod (_Z7mul_modjjji, funcdef_no=981, decl_uid=32178, cgraph_uid=279, symbol_order=290)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t mul_mod (hashval_t x, hashval_t y, hashval_t inv, int shift)
{
  hashval_t r;
  hashval_t q;
  hashval_t t4;
  hashval_t t3;
  hashval_t t2;
  hashval_t t1;
  hashval_t D.246312;

  <bb 2> :
  _1 = (long unsigned int) x;
  _2 = (long unsigned int) inv;
  _3 = _1 * _2;
  _4 = _3 >> 32;
  t1 = (hashval_t) _4;
  t2 = x - t1;
  t3 = t2 >> 1;
  t4 = t1 + t3;
  q = t4 >> shift;
  _5 = q * y;
  r = x - _5;
  D.246312 = r;

  <bb 3> :
<L0>:
  return D.246312;

}



;; Function hash_table_mod2 (_Z15hash_table_mod2jj, funcdef_no=983, decl_uid=32193, cgraph_uid=281, symbol_order=292)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_table_mod2 (hashval_t hash, unsigned int index)
{
  const struct prime_ent * p;
  hashval_t D.246314;

  <bb 2> :
  p = &prime_tab[index];
  _1 = p->shift;
  _2 = (int) _1;
  _3 = p->inv_m2;
  _4 = p->prime;
  _5 = _4 + 4294967294;
  _6 = mul_mod (hash, _5, _3, _2);
  D.246314 = _6 + 1;

  <bb 3> :
<L0>:
  return D.246314;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8901, decl_uid=189776, cgraph_uid=5533, symbol_order=6322)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.246318;
  bool D.246316;

  <bb 2> :
  D.246318 = hash_map<tree_node*, function_return_array>::hash_entry::is_empty (v);
  D.246316 = D.246318;

  <bb 3> :
<L0>:
  return D.246316;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8604, decl_uid=189606, cgraph_uid=5236, symbol_order=6025)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_return_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.246321;
  bool D.246319;

  <bb 2> :
  D.246321 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_empty<hash_map<tree_node*, function_return_array>::hash_entry> (e);
  D.246319 = D.246321;

  <bb 3> :
<L0>:
  return D.246319;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8902, decl_uid=189774, cgraph_uid=5534, symbol_order=6323)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.246324;
  bool D.246322;

  <bb 2> :
  D.246324 = hash_map<tree_node*, function_return_array>::hash_entry::is_deleted (v);
  D.246322 = D.246324;

  <bb 3> :
<L0>:
  return D.246322;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9730, decl_uid=189601, cgraph_uid=6362, symbol_order=7151)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_return_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.246327;
  bool D.246325;

  <bb 2> :
  D.246327 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_deleted<hash_map<tree_node*, function_return_array>::hash_entry> (e);
  D.246325 = D.246327;

  <bb 3> :
<L0>:
  return D.246325;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_deleted<hash_map<tree_node*, function_return_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10290, decl_uid=237321, cgraph_uid=6922, symbol_order=7715)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_deleted<hash_map<tree_node*, function_return_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.246328;

  <bb 2> :
  _1 = entry->m_key;
  D.246328 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.246328;

}



;; Function pointer_hash<tree_node>::is_deleted (_ZN12pointer_hashI9tree_nodeE10is_deletedEPS0_, funcdef_no=10510, decl_uid=85308, cgraph_uid=7142, symbol_order=7935)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<tree_node>::is_deleted (union tree_node * e)
{
  bool D.246330;

  <bb 2> :
  D.246330 = e == 1B;

  <bb 3> :
<L0>:
  return D.246330;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9191, decl_uid=189594, cgraph_uid=5823, symbol_order=6612)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_return_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.246334;
  bool D.246332;

  <bb 2> :
  _1 = &a->m_key;
  D.246334 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::equal_keys (_1, b);
  D.246332 = D.246334;

  <bb 3> :
<L0>:
  return D.246332;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE10equal_keysERKS2_S7_, funcdef_no=9908, decl_uid=189495, cgraph_uid=6540, symbol_order=7333)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.246335;

  <bb 2> :
  D.246335 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.246335;

}



;; Function pointer_hash<tree_node>::equal (_ZN12pointer_hashI9tree_nodeE5equalERKPS0_S4_, funcdef_no=10437, decl_uid=85300, cgraph_uid=7069, symbol_order=7862)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<tree_node>::equal (union tree_node * const & existing, union tree_node * const & candidate)
{
  bool D.246337;

  <bb 2> :
  _1 = *existing;
  _2 = *candidate;
  D.246337 = _1 == _2;

  <bb 3> :
<L0>:
  return D.246337;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_empty<hash_map<tree_node*, function_return_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8422, decl_uid=210363, cgraph_uid=5054, symbol_order=5843)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_empty<hash_map<tree_node*, function_return_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.246339;

  <bb 2> :
  _1 = entry->m_key;
  D.246339 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.246339;

}



;; Function pointer_hash<tree_node>::is_empty (_ZN12pointer_hashI9tree_nodeE8is_emptyEPS0_, funcdef_no=9192, decl_uid=85310, cgraph_uid=5824, symbol_order=6613)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<tree_node>::is_empty (union tree_node * e)
{
  bool D.246341;

  <bb 2> :
  D.246341 = e == 0B;

  <bb 3> :
<L0>:
  return D.246341;

}



;; Function function_return_array::function_return_array (_ZN21function_return_arrayC2ERKS_, funcdef_no=6251, decl_uid=189875, cgraph_uid=3226, symbol_order=3996)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_return_array::function_return_array (struct function_return_array * const this, const struct function_return_array & D.189877)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.189877->return_type_num;
  this->return_type_num = _1;
  _2 = D.189877->pthread_type_num;
  this->pthread_type_num = _2;
  _3 = &this->return_type_array;
  _4 = &D.189877->return_type_array;
  std::vector<return_type>::vector (_3, _4);
  return;

}



;; Function std::vector<return_type>::vector (_ZNSt6vectorI11return_typeSaIS0_EEC2ERKS2_, funcdef_no=7600, decl_uid=173471, cgraph_uid=4232, symbol_order=5017)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<return_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct return_type * D.246347;
  struct __normal_iterator D.246344;
  struct __normal_iterator D.246343;
  struct allocator D.210478;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.173508;
  _2 = &__x->D.173508;
  _3 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_2);
  D.210478 = __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<return_type>::size (__x);
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_1, _4, &D.210478);

  <bb 3> :
  std::allocator<return_type>::~allocator (&D.210478);
  D.210478 = {CLOBBER};
  _5 = &this->D.173508;
  _6 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.173508._M_impl.D.172853._M_start;
  D.246343 = std::vector<return_type>::end (__x);
  D.246344 = std::vector<return_type>::begin (__x);
  D.246347 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*, return_type> (D.246344, D.246343, _7, _6);

  <bb 4> :
  _8 = D.246347;
  this->D.173508._M_impl.D.172853._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<return_type>::~allocator (&D.210478);
  resx 2

  <bb 6> :
<L1>:
  D.210478 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.173508;
  std::_Vector_base<return_type, std::allocator<return_type> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI11return_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8424, decl_uid=172743, cgraph_uid=5056, symbol_order=5845)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.246349;

  <bb 2> :
  D.246349 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.246349;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI11return_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=8423, decl_uid=172715, cgraph_uid=5055, symbol_order=5844)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<return_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<return_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI11return_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9193, decl_uid=172680, cgraph_uid=5825, symbol_order=6614)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<return_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<return_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<return_type>::allocator (_ZNSaI11return_typeEC2ERKS0_, funcdef_no=9910, decl_uid=172623, cgraph_uid=6542, symbol_order=7335)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<return_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<return_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11return_typeEC2ERKS2_, funcdef_no=10439, decl_uid=172552, cgraph_uid=7071, symbol_order=7864)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.172554)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_ZNSt12_Vector_baseI11return_typeSaIS0_EEC2EmRKS1_, funcdef_no=8426, decl_uid=172940, cgraph_uid=5058, symbol_order=5847)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11return_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9195, decl_uid=172845, cgraph_uid=5827, symbol_order=6616)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<return_type>::allocator (this, __a);
  _1 = &this->D.172853;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11return_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8388, decl_uid=172800, cgraph_uid=5020, symbol_order=5809)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_M_create_storage (_ZNSt12_Vector_baseI11return_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9197, decl_uid=172864, cgraph_uid=5829, symbol_order=6618)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct return_type * D.246356;

  <bb 2> :
  D.246356 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_allocate (this, __n);
  _1 = D.246356;
  this->_M_impl.D.172853._M_start = _1;
  _2 = this->_M_impl.D.172853._M_start;
  this->_M_impl.D.172853._M_finish = _2;
  _3 = this->_M_impl.D.172853._M_start;
  _4 = __n * 24;
  _5 = _3 + _4;
  this->_M_impl.D.172853._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_M_allocate (_ZNSt12_Vector_baseI11return_typeSaIS0_EE11_M_allocateEm, funcdef_no=9347, decl_uid=172857, cgraph_uid=5979, symbol_order=6768)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct return_type * std::_Vector_base<return_type, std::allocator<return_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct return_type * D.246363;
  struct return_type * iftmp.72;
  struct return_type * D.246357;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.246363 = std::allocator_traits<std::allocator<return_type> >::allocate (_1, __n);
  iftmp.72 = D.246363;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.72 = 0B;

  <bb 5> :
  D.246357 = iftmp.72;

  <bb 6> :
<L3>:
  return D.246357;

}



;; Function std::allocator_traits<std::allocator<return_type> >::allocate (_ZNSt16allocator_traitsISaI11return_typeEE8allocateERS1_m, funcdef_no=10018, decl_uid=172658, cgraph_uid=6650, symbol_order=7443)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct return_type * std::allocator_traits<std::allocator<return_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct return_type * D.246366;
  struct return_type * D.246364;

  <bb 2> :
  D.246366 = __gnu_cxx::new_allocator<return_type>::allocate (__a, __n, 0B);
  D.246364 = D.246366;

  <bb 3> :
<L0>:
  return D.246364;

}



;; Function __gnu_cxx::new_allocator<return_type>::allocate (_ZN9__gnu_cxx13new_allocatorI11return_typeE8allocateEmPKv, funcdef_no=10529, decl_uid=172512, cgraph_uid=7162, symbol_order=7955)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct return_type * __gnu_cxx::new_allocator<return_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.243270)
{
  struct return_type * D.246377;
  struct return_type * D.246376;
  align_val_t __al;
  struct return_type * D.246374;
  bool retval.73;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<return_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.73 = _4 != 0;
  if (retval.73 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 768614336404564650)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 24;
  D.246377 = operator new (_6);
  D.246374 = D.246377;

  <bb 7> :
<L6>:
  return D.246374;

}



;; Function __gnu_cxx::new_allocator<return_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI11return_typeE11_M_max_sizeEv, funcdef_no=10530, decl_uid=172539, cgraph_uid=7161, symbol_order=7954)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<return_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.246378;

  <bb 2> :
  D.246378 = 384307168202282325;

  <bb 3> :
<L0>:
  return D.246378;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI11return_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6217, decl_uid=172900, cgraph_uid=3191, symbol_order=3950)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<return_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<return_type>::~allocator (_ZNSaI11return_typeED2Ev, funcdef_no=7573, decl_uid=172633, cgraph_uid=4205, symbol_order=4990)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<return_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<return_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI11return_typeED2Ev, funcdef_no=8391, decl_uid=172562, cgraph_uid=5023, symbol_order=5812)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI11return_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8430, decl_uid=172741, cgraph_uid=5062, symbol_order=5851)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.246380;

  <bb 2> :
  D.246380 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.246380;

}



;; Function std::vector<return_type>::end (_ZNKSt6vectorI11return_typeSaIS0_EE3endEv, funcdef_no=8429, decl_uid=173123, cgraph_uid=5061, symbol_order=5850)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<return_type>::end (const struct vector * const this)
{
  struct const_iterator D.220844;
  struct const_iterator D.246382;

  <bb 2> :
  _1 = &this->D.173508._M_impl.D.172853._M_finish;
  __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::__normal_iterator (&D.220844, _1);
  D.246382 = D.220844;
  D.220844 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.246382;

}



;; Function __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9199, decl_uid=210447, cgraph_uid=5831, symbol_order=6620)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::__normal_iterator (struct __normal_iterator * const this, const struct return_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<return_type>::begin (_ZNKSt6vectorI11return_typeSaIS0_EE5beginEv, funcdef_no=8428, decl_uid=173119, cgraph_uid=5060, symbol_order=5849)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<return_type>::begin (const struct vector * const this)
{
  struct const_iterator D.220842;
  struct const_iterator D.246385;

  <bb 2> :
  _1 = &this->D.173508._M_impl.D.172853._M_start;
  __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::__normal_iterator (&D.220842, _1);
  D.246385 = D.220842;
  D.220842 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.246385;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*, return_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8431, decl_uid=210467, cgraph_uid=5063, symbol_order=5852)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*, return_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct return_type * __result, struct allocator & D.220849)
{
  struct return_type * D.246390;
  struct return_type * D.246388;

  <bb 2> :
  D.246390 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (__first, __last, __result);
  D.246388 = D.246390;

  <bb 3> :
<L0>:
  return D.246388;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9201, decl_uid=220851, cgraph_uid=5834, symbol_order=6623)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct return_type * __result)
{
  struct return_type * D.246393;
  const bool __assignable;
  struct return_type * D.246391;

  <bb 2> :
  __assignable = 1;
  D.246393 = std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (__first, __last, __result);
  D.246391 = D.246393;

  <bb 3> :
<L0>:
  return D.246391;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=9912, decl_uid=232009, cgraph_uid=6544, symbol_order=7337)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct return_type * std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct return_type * __result)
{
  struct return_type * __cur;
  struct return_type * D.246395;
  bool retval.74;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator* (&__first);
  _2 = std::__addressof<return_type> (__cur);
  std::_Construct<return_type, const return_type&> (_2, _1);
  __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator++ (&__first);
  __cur = __cur + 24;

  <bb 4> :
  retval.74 = __gnu_cxx::operator!=<const return_type*, std::vector<return_type> > (&__first, &__last);
  if (retval.74 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.246395 = __cur;

  <bb 6> :
<L3>:
  return D.246395;

}



;; Function __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS1_SaIS1_EEEdeEv, funcdef_no=10444, decl_uid=210405, cgraph_uid=7076, symbol_order=7869)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct return_type & __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator* (const struct __normal_iterator * const this)
{
  const struct return_type & D.246397;

  <bb 2> :
  D.246397 = this->_M_current;

  <bb 3> :
<L0>:
  return D.246397;

}



;; Function std::__addressof<return_type> (_ZSt11__addressofI11return_typeEPT_RS1_, funcdef_no=10443, decl_uid=223213, cgraph_uid=7075, symbol_order=7868)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__addressof<return_type> (struct return_type & __r)
{
  struct return_type * D.246399;

  <bb 2> :
  D.246399 = __r;

  <bb 3> :
<L0>:
  return D.246399;

}



;; Function std::_Construct<return_type, const return_type&> (_ZSt10_ConstructI11return_typeJRKS0_EEvPT_DpOT0_, funcdef_no=10445, decl_uid=239406, cgraph_uid=7077, symbol_order=7870)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<return_type, const return_type&> (struct return_type * __p, const struct return_type & __args#0)
{
  void * D.242875;
  void * D.242874;
  const struct return_type * D.242876;

  <bb 2> :
  D.242876 = std::forward<const return_type&> (__args#0);
  D.242874 = __p;
  D.242875 = operator new (24, D.242874);
  MEM[(struct return_type *)D.242875] = *D.242876;
  return;

}



;; Function std::forward<const return_type&> (_ZSt7forwardIRK11return_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9372, decl_uid=222827, cgraph_uid=6004, symbol_order=6793)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct return_type & std::forward<const return_type&> (const struct type & __t)
{
  const struct return_type & D.246401;

  <bb 2> :
  D.246401 = __t;

  <bb 3> :
<L0>:
  return D.246401;

}



;; Function __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS1_SaIS1_EEEppEv, funcdef_no=10442, decl_uid=210409, cgraph_uid=7074, symbol_order=7867)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.246403;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 24;
  this->_M_current = _2;
  D.246403 = this;

  <bb 3> :
<L0>:
  return D.246403;

}



;; Function __gnu_cxx::operator!=<const return_type*, std::vector<return_type> > (_ZN9__gnu_cxxneIPK11return_typeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_, funcdef_no=10441, decl_uid=239399, cgraph_uid=7073, symbol_order=7866)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<const return_type*, std::vector<return_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.246405;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::base (__rhs);
  _4 = *_3;
  D.246405 = _2 != _4;

  <bb 3> :
<L0>:
  return D.246405;

}



;; Function __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10531, decl_uid=210434, cgraph_uid=7163, symbol_order=7956)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct return_type * const & __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::base (const struct __normal_iterator * const this)
{
  const struct return_type * const & D.246407;

  <bb 2> :
  D.246407 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.246407;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::~_Vector_base (_ZNSt12_Vector_baseI11return_typeSaIS0_EED2Ev, funcdef_no=7576, decl_uid=172963, cgraph_uid=4208, symbol_order=4993)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.172853._M_end_of_storage;
  _2 = this->_M_impl.D.172853._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.172853._M_start;
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (_ZNSt12_Vector_baseI11return_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8393, decl_uid=172860, cgraph_uid=5025, symbol_order=5814)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (struct _Vector_base * const this, struct return_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<return_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<return_type> >::deallocate (_ZNSt16allocator_traitsISaI11return_typeEE10deallocateERS1_PS0_m, funcdef_no=9168, decl_uid=172665, cgraph_uid=5800, symbol_order=6589)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<return_type> >::deallocate (struct allocator_type & __a, struct return_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<return_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI11return_typeE10deallocateEPS1_m, funcdef_no=9879, decl_uid=172516, cgraph_uid=6511, symbol_order=7304)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::deallocate (struct new_allocator * const this, struct return_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<return_type>::~vector (_ZNSt6vectorI11return_typeSaIS0_EED2Ev, funcdef_no=7603, decl_uid=173505, cgraph_uid=4235, symbol_order=5020)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<return_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.173508;
  _2 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.173508._M_impl.D.172853._M_finish;
  _4 = this->D.173508._M_impl.D.172853._M_start;
  std::_Destroy<return_type*, return_type> (_4, _3, _2);
  _5 = &this->D.173508;
  std::_Vector_base<return_type, std::allocator<return_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<return_type*, return_type> (_ZSt8_DestroyIP11return_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8432, decl_uid=210484, cgraph_uid=5064, symbol_order=5853)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<return_type*, return_type> (struct return_type * __first, struct return_type * __last, struct allocator & D.220870)
{
  <bb 2> :
  std::_Destroy<return_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<return_type*> (_ZSt8_DestroyIP11return_typeEvT_S2_, funcdef_no=9203, decl_uid=220872, cgraph_uid=5835, symbol_order=6624)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<return_type*> (struct return_type * __first, struct return_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<return_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<return_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP11return_typeEEvT_S4_, funcdef_no=9913, decl_uid=232040, cgraph_uid=6545, symbol_order=7338)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<return_type*> (struct return_type * D.239413, struct return_type * D.239414)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function function_return_array::~function_return_array (_ZN21function_return_arrayD2Ev, funcdef_no=6254, decl_uid=189897, cgraph_uid=3229, symbol_order=3999)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_return_array::~function_return_array (struct function_return_array * const this)
{
  <bb 2> :
  _1 = &this->return_type_array;
  std::vector<return_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function print_function_return (_Z21print_function_returnP9tree_node, funcdef_no=6256, decl_uid=187046, cgraph_uid=3232, symbol_order=4002)

Merging blocks 4 and 17
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 12 11
;; 2 succs { 20 3 }
;; 3 succs { 4 5 }
;; 4 succs { 17 }
;; 5 succs { 20 6 }
;; 6 succs { 20 7 }
;; 7 succs { 19 8 }
;; 8 succs { 18 9 }
;; 9 succs { 18 10 }
;; 10 succs { 14 }
;; 11 succs { 18 12 }
;; 12 succs { 18 13 }
;; 13 succs { 14 }
;; 14 succs { 11 15 }
;; 15 succs { 18 16 }
;; 16 succs { 17 }
;; 17 succs { 1 }
;; 18 succs { 19 }
;; 19 succs { 20 }
;; 20 succs { }
void print_function_return (union tree_node * function_tree)
{
  struct function_return_array * D.246421;
  struct function_return_array * D.246420;
  int i;
  struct vector ret_type_array;
  struct function_return_array fun_array;
  bool retval.82;
  bool retval.75;

  <bb 2> :
  function_return_collect.76_1 = function_return_collect;
  D.246420 = hash_map<tree_node*, function_return_array>::get (function_return_collect.76_1, &function_tree);

  <bb 3> :
  _2 = D.246420;
  retval.75 = _2 == 0B;
  if (retval.75 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  goto <bb 17>; [INV]

  <bb 5> :
  function_return_collect.77_3 = function_return_collect;
  D.246421 = hash_map<tree_node*, function_return_array>::get (function_return_collect.77_3, &function_tree);

  <bb 6> :
  _4 = D.246421;
  function_return_array::function_return_array (&fun_array, _4);

  <bb 7> :
  std::vector<return_type>::vector (&ret_type_array, &fun_array.return_type_array);

  <bb 8> :
  _5 = std::vector<return_type>::size (&ret_type_array);
  function_tree.78_6 = function_tree;
  stderr.79_7 = stderr;
  fprintf (stderr.79_7, "=======print_function_return %d   %d========\n", function_tree.78_6, _5);

  <bb 9> :
  stderr.80_8 = stderr;
  __builtin_fwrite ("[\n", 1, 2, stderr.80_8);

  <bb 10> :
  i = 0;
  goto <bb 14>; [INV]

  <bb 11> :
  _9 = (long unsigned int) i;
  _10 = std::vector<return_type>::operator[] (&ret_type_array, _9);
  _11 = _10->stmt;
  debug (_11);

  <bb 12> :
  stderr.81_12 = stderr;
  __builtin_fwrite (",\n", 1, 2, stderr.81_12);

  <bb 13> :
  i = i + 1;

  <bb 14> :
  _13 = (long unsigned int) i;
  _14 = std::vector<return_type>::size (&ret_type_array);
  retval.82 = _13 < _14;
  if (retval.82 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  stderr.83_15 = stderr;
  __builtin_fwrite ("]\n", 1, 2, stderr.83_15);

  <bb 16> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};

  <bb 17> :
<L7>:
  return;

  <bb 18> :
<L8>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 3

  <bb 19> :
<L9>:
  function_return_array::~function_return_array (&fun_array);
  resx 2

  <bb 20> :
<L10>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  resx 1

}



;; Function printfunctionCollect2 (_Z21printfunctionCollect2P3ptbP12gimple_array, funcdef_no=6257, decl_uid=189982, cgraph_uid=3233, symbol_order=4003)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;;
;; Loop 1
;;  header 13, latch 12
;;  depth 1, outer 0
;;  nodes: 13 12 11 7 10 9 8 6 5 4
;; 2 succs { 15 3 }
;; 3 succs { 13 }
;; 4 succs { 15 5 }
;; 5 succs { 15 6 }
;; 6 succs { 7 8 }
;; 7 succs { 11 }
;; 8 succs { 15 9 }
;; 9 succs { 15 10 }
;; 10 succs { 15 11 }
;; 11 succs { 15 12 }
;; 12 succs { 13 }
;; 13 succs { 4 14 }
;; 14 succs { 1 }
;; 15 succs { }
void printfunctionCollect2 (struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct cgraph_node * D.246432;
  struct function * D.246431;
  struct function * D.246430;
  struct cgraph_node * D.246429;
  struct cgraph_node * node;
  struct basic_block_def * bb;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  symtab.84_1 = symtab;
  D.246429 = symbol_table::first_defined_function (symtab.84_1);

  <bb 3> :
  node = D.246429;
  goto <bb 13>; [INV]

  <bb 4> :
  D.246430 = cgraph_node::get_fun (node);

  <bb 5> :
  _2 = D.246430;
  push_cfun (_2);

  <bb 6> :
  cfun.85_3 = cfun;
  if (cfun.85_3 == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by continue predictor.
  goto <bb 11>; [INV]

  <bb 8> :
  D.246431 = cgraph_node::get_fun (node);

  <bb 9> :
  _4 = D.246431;
  _5 = _4->decl;
  print_function_return2 (_5);

  <bb 10> :
  pop_cfun ();

  <bb 11> :
  symtab.86_6 = symtab;
  D.246432 = symbol_table::next_defined_function (symtab.86_6, node);

  <bb 12> :
  node = D.246432;

  <bb 13> :
  if (node != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  start = {CLOBBER};
  return;

  <bb 15> :
<L6>:
  start = {CLOBBER};
  resx 1

}



;; Function printfunctionCollect (_Z20printfunctionCollectP3ptbP12gimple_array, funcdef_no=6258, decl_uid=189997, cgraph_uid=3234, symbol_order=4004)

Removing basic block 13
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;;
;; Loop 1
;;  header 18, latch 17
;;  depth 1, outer 0
;;  nodes: 18 17 16 8 15 14 13 10 12 11 9 6 5 4 7
;; 2 succs { 20 3 }
;; 3 succs { 18 }
;; 4 succs { 20 5 }
;; 5 succs { 20 6 }
;; 6 succs { 7 9 }
;; 7 succs { 20 8 }
;; 8 succs { 16 }
;; 9 succs { 20 10 }
;; 10 succs { 11 13 }
;; 11 succs { 20 12 }
;; 12 succs { 20 13 }
;; 13 succs { 20 14 }
;; 14 succs { 20 15 }
;; 15 succs { 20 16 }
;; 16 succs { 20 17 }
;; 17 succs { 18 }
;; 18 succs { 4 19 }
;; 19 succs { 1 }
;; 20 succs { }
void printfunctionCollect (struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct cgraph_node * D.246444;
  struct function * D.246443;
  const char * D.246442;
  const char * D.246441;
  struct function * D.246440;
  struct cgraph_node * D.246439;
  const char * name;
  struct cgraph_node * node;
  struct basic_block_def * bb;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  symtab.87_1 = symtab;
  D.246439 = symbol_table::first_defined_function (symtab.87_1);

  <bb 3> :
  node = D.246439;
  goto <bb 18>; [INV]

  <bb 4> :
  D.246440 = cgraph_node::get_fun (node);

  <bb 5> :
  _2 = D.246440;
  push_cfun (_2);

  <bb 6> :
  cfun.88_3 = cfun;
  if (cfun.88_3 == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  pop_cfun ();

  <bb 8> :
  // predicted unlikely by continue predictor.
  goto <bb 16>; [INV]

  <bb 9> :
  cfun.89_4 = cfun;
  _5 = cfun.89_4->decl;
  D.246441 = get_name (_5);

  <bb 10> :
  name = D.246441;
  if (name != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  cfun.90_6 = cfun;
  _7 = cfun.90_6->decl;
  D.246442 = get_name (_7);

  <bb 12> :
  _8 = D.246442;
  stderr.91_9 = stderr;
  fprintf (stderr.91_9, "=======Mapping node_fun:%s=========\n", _8);

  <bb 13> :
  D.246443 = cgraph_node::get_fun (node);

  <bb 14> :
  _10 = D.246443;
  _11 = _10->decl;
  print_function_return (_11);

  <bb 15> :
  pop_cfun ();

  <bb 16> :
  symtab.92_12 = symtab;
  D.246444 = symbol_table::next_defined_function (symtab.92_12, node);

  <bb 17> :
  node = D.246444;

  <bb 18> :
  if (node != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  start = {CLOBBER};
  return;

  <bb 20> :
<L9>:
  start = {CLOBBER};
  resx 1

}



;; Function printfPointerConstraint (_Z23printfPointerConstraintP3ptbP12gimple_array, funcdef_no=6259, decl_uid=187044, cgraph_uid=3235, symbol_order=4005)

Removing basic block 22
Removing basic block 29
Removing basic block 30
Removing basic block 33
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
;;
;; Loop 1
;;  header 34, latch 33
;;  depth 1, outer 0
;;  nodes: 34 33 31 32 30 7 29 27 28 15 14 13 12 11 10 9 8 19 26 24 25 23 21 22 20 17 18 16 6
;;
;; Loop 2
;;  header 27, latch 26
;;  depth 2, outer 1
;;  nodes: 27 26 24 25 23 21 22 20
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 34 }
;; 6 succs { 36 7 }
;; 7 succs { 8 30 }
;; 8 succs { 36 9 }
;; 9 succs { 36 10 }
;; 10 succs { 36 11 }
;; 11 succs { 36 12 }
;; 12 succs { 36 13 }
;; 13 succs { 14 28 }
;; 14 succs { 36 15 }
;; 15 succs { 16 29 }
;; 16 succs { 17 18 }
;; 17 succs { 19 }
;; 18 succs { 19 }
;; 19 succs { 27 }
;; 20 succs { 21 22 }
;; 21 succs { 36 23 }
;; 22 succs { 36 23 }
;; 23 succs { 24 25 }
;; 24 succs { 26 }
;; 25 succs { 26 }
;; 26 succs { 27 }
;; 27 succs { 20 29 }
;; 28 succs { 36 29 }
;; 29 succs { 36 30 }
;; 30 succs { 31 32 }
;; 31 succs { 33 }
;; 32 succs { 33 }
;; 33 succs { 34 }
;; 34 succs { 6 35 }
;; 35 succs { 1 }
;; 36 succs { }
void printfPointerConstraint (struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct gimple_array * D.246474;
  location_t loc;
  location_t loc;
  location_t loc;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;
  union tree_node * iftmp.103;
  struct gimple * iftmp.100;
  struct gimple * iftmp.99;
  union tree_node * iftmp.93;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  if (table_temp != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.93 = table_temp->target;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.93 = 0B;

  <bb 5> :
  t = iftmp.93;
  goto <bb 34>; [INV]

  <bb 6> :
  stderr.94_1 = stderr;
  __builtin_fwrite ("------------------- stmt -----------------------\n", 1, 49, stderr.94_1);

  <bb 7> :
  _2 = table_temp->target;
  if (_2 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 8> :
  _3 = table_temp->last_stmt;
  loc = gimple_location_safe (_3);
  stderr.95_4 = stderr;
  __builtin_fwrite ("------------------------------------------\n", 1, 43, stderr.95_4);

  <bb 9> :
  warning_at (loc, 0, "loc");

  <bb 10> :
  _5 = table_temp->target;
  debug_tree (_5);

  <bb 11> :
  stderr.96_6 = stderr;
  __builtin_fwrite ("------------------------------------------\n", 1, 43, stderr.96_6);

  <bb 12> :
  treeGimpleArray.97_7 = treeGimpleArray;
  _8 = &table_temp->target;
  D.246474 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.97_7, _8);

  <bb 13> :
  user_tmp = D.246474;
  start.stmt = 0B;
  used_stmt = &start;
  if (user_tmp != 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 14> :
  _9 = user_tmp->size;
  stderr.98_10 = stderr;
  fprintf (stderr.98_10, " \n Pointer to set  is size %d :[ \n", _9);

  <bb 15> :
  _11 = user_tmp->size;
  if (_11 > 0)
    goto <bb 16>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 16> :
  if (user_tmp != 0B)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  iftmp.99 = user_tmp->stmt;
  goto <bb 19>; [INV]

  <bb 18> :
  iftmp.99 = 0B;

  <bb 19> :
  u_stmt = iftmp.99;
  goto <bb 27>; [INV]

  <bb 20> :
  _12 = user_tmp->ret_stmt;
  if (_12 != 0B)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  _13 = user_tmp->ret_stmt;
  loc = gimple_location_safe (_13);
  warning_at (loc, 0, "loc");
  goto <bb 23>; [INV]

  <bb 22> :
  loc = gimple_location_safe (u_stmt);
  warning_at (loc, 0, "loc");

  <bb 23> :
  user_tmp = user_tmp->next;
  if (user_tmp != 0B)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  iftmp.100 = user_tmp->stmt;
  goto <bb 26>; [INV]

  <bb 25> :
  iftmp.100 = 0B;

  <bb 26> :
  u_stmt = iftmp.100;

  <bb 27> :
  if (user_tmp != 0B)
    goto <bb 20>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 28> :
  stderr.101_14 = stderr;
  __builtin_fwrite (" \n Pointer to set  is size 0 :[ \n", 1, 33, stderr.101_14);

  <bb 29> :
  stderr.102_15 = stderr;
  __builtin_fwrite ("] \n", 1, 3, stderr.102_15);

  <bb 30> :
  table_temp = table_temp->next;
  if (table_temp != 0B)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  iftmp.103 = table_temp->target;
  goto <bb 33>; [INV]

  <bb 32> :
  iftmp.103 = 0B;

  <bb 33> :
  t = iftmp.103;

  <bb 34> :
  if (t != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 35> :
  start = {CLOBBER};
  return;

  <bb 36> :
<L30>:
  start = {CLOBBER};
  resx 1

}



;; Function hash_map<tree_node*, gimple_array>::get (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7605, decl_uid=190069, cgraph_uid=4237, symbol_order=5022)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct gimple_array * hash_map<tree_node*, gimple_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.246484;
  struct hash_entry & D.246483;
  unsigned int D.246482;
  struct hash_entry & e;
  struct gimple_array * iftmp.104;
  struct gimple_array * D.246476;

  <bb 2> :
  _1 = &this->m_table;
  D.246482 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::hash (k);
  _2 = D.246482;
  D.246483 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.246483;
  D.246484 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_empty<hash_map<tree_node*, gimple_array>::hash_entry> (e);
  _3 = D.246484;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.104 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.104 = &e->m_value;

  <bb 5> :
  D.246476 = iftmp.104;

  <bb 6> :
<L3>:
  return D.246476;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE4hashERKS2_, funcdef_no=8433, decl_uid=190025, cgraph_uid=5065, symbol_order=5854)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::hash (union tree_node * const & h)
{
  hashval_t D.246485;

  <bb 2> :
  D.246485 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.246485;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8434, decl_uid=190209, cgraph_uid=5066, symbol_order=5855)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.246519;
  bool D.246518;
  bool D.246517;
  bool D.246516;
  bool D.246515;
  bool D.246514;
  struct value_type * D.246513;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.108;
  bool retval.107;
  struct value_type & D.246499;
  bool iftmp.106;
  bool retval.105;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 56;
  entry = _5 + _7;
  D.246514 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.246514;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.246515 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.246515;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.246516 = hash_map<tree_node*, gimple_array>::hash_entry::equal (entry, comparable);
  _11 = D.246516;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.106 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.106 = 0;

  <bb 8> :
  retval.105 = iftmp.106;
  if (retval.105 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.246499 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 56;
  entry = _17 + _19;
  D.246517 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.246517;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.246518 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.246518;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.246519 = hash_map<tree_node*, gimple_array>::hash_entry::equal (entry, comparable);
  _23 = D.246519;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.108 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.108 = 0;

  <bb 18> :
  retval.107 = iftmp.108;
  if (retval.107 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.246499 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.246499;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8889, decl_uid=190305, cgraph_uid=5521, symbol_order=6310)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.246522;
  bool D.246520;

  <bb 2> :
  D.246522 = hash_map<tree_node*, gimple_array>::hash_entry::is_empty (v);
  D.246520 = D.246522;

  <bb 3> :
<L0>:
  return D.246520;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8793, decl_uid=190138, cgraph_uid=5425, symbol_order=6214)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, gimple_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.246525;
  bool D.246523;

  <bb 2> :
  D.246525 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_empty<hash_map<tree_node*, gimple_array>::hash_entry> (e);
  D.246523 = D.246525;

  <bb 3> :
<L0>:
  return D.246523;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8890, decl_uid=190303, cgraph_uid=5522, symbol_order=6311)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.246528;
  bool D.246526;

  <bb 2> :
  D.246528 = hash_map<tree_node*, gimple_array>::hash_entry::is_deleted (v);
  D.246526 = D.246528;

  <bb 3> :
<L0>:
  return D.246526;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9724, decl_uid=190133, cgraph_uid=6356, symbol_order=7145)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, gimple_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.246531;
  bool D.246529;

  <bb 2> :
  D.246531 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_deleted<hash_map<tree_node*, gimple_array>::hash_entry> (e);
  D.246529 = D.246531;

  <bb 3> :
<L0>:
  return D.246529;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_deleted<hash_map<tree_node*, gimple_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10285, decl_uid=237303, cgraph_uid=6917, symbol_order=7710)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_deleted<hash_map<tree_node*, gimple_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.246532;

  <bb 2> :
  _1 = entry->m_key;
  D.246532 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.246532;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9205, decl_uid=190126, cgraph_uid=5837, symbol_order=6626)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, gimple_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.246536;
  bool D.246534;

  <bb 2> :
  _1 = &a->m_key;
  D.246536 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::equal_keys (_1, b);
  D.246534 = D.246536;

  <bb 3> :
<L0>:
  return D.246534;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE10equal_keysERKS2_S7_, funcdef_no=9916, decl_uid=190027, cgraph_uid=6548, symbol_order=7341)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.246537;

  <bb 2> :
  D.246537 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.246537;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_empty<hash_map<tree_node*, gimple_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8435, decl_uid=210500, cgraph_uid=5067, symbol_order=5856)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_empty<hash_map<tree_node*, gimple_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.246539;

  <bb 2> :
  _1 = entry->m_key;
  D.246539 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.246539;

}



;; Function gimple_location_safe (_ZL20gimple_location_safePK6gimple, funcdef_no=2004, decl_uid=92286, cgraph_uid=1141, symbol_order=1301)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
location_t gimple_location_safe (const struct gimple * g)
{
  location_t iftmp.109;
  location_t D.246541;

  <bb 2> :
  if (g != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.109 = gimple_location (g);
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.109 = 0;

  <bb 5> :
  D.246541 = iftmp.109;

  <bb 6> :
<L3>:
  return D.246541;

}



;; Function gimple_location (_ZL15gimple_locationPK6gimple, funcdef_no=2003, decl_uid=92283, cgraph_uid=1140, symbol_order=1300)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
location_t gimple_location (const struct gimple * g)
{
  location_t D.246547;

  <bb 2> :
  D.246547 = g->location;

  <bb 3> :
<L0>:
  return D.246547;

}



;; Function printfPointerConstraint2 (_Z24printfPointerConstraint2P3ptbP12gimple_array, funcdef_no=6260, decl_uid=190403, cgraph_uid=3236, symbol_order=4006)

Removing basic block 19
Removing basic block 26
Removing basic block 28
Removing basic block 31
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
;;
;; Loop 1
;;  header 32, latch 31
;;  depth 1, outer 0
;;  nodes: 32 31 29 30 28 7 27 25 12 24 16 23 21 22 20 18 19 17 14 15 13 11 10 9 8 26 6
;;
;; Loop 2
;;  header 24, latch 23
;;  depth 2, outer 1
;;  nodes: 24 23 21 22 20 18 19 17
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 32 }
;; 6 succs { 34 7 }
;; 7 succs { 8 28 }
;; 8 succs { 34 9 }
;; 9 succs { 34 10 }
;; 10 succs { 11 26 }
;; 11 succs { 34 12 }
;; 12 succs { 13 25 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 24 }
;; 17 succs { 18 19 }
;; 18 succs { 34 20 }
;; 19 succs { 34 20 }
;; 20 succs { 21 22 }
;; 21 succs { 23 }
;; 22 succs { 23 }
;; 23 succs { 24 }
;; 24 succs { 17 25 }
;; 25 succs { 34 28 }
;; 26 succs { 34 27 }
;; 27 succs { 34 28 }
;; 28 succs { 29 30 }
;; 29 succs { 31 }
;; 30 succs { 31 }
;; 31 succs { 32 }
;; 32 succs { 6 33 }
;; 33 succs { 1 }
;; 34 succs { }
void printfPointerConstraint2 (struct ptb * ftable, struct gimple_array * user_tmp)
{
  struct gimple_array * D.246577;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;
  union tree_node * iftmp.119;
  struct gimple * iftmp.115;
  struct gimple * iftmp.114;
  union tree_node * iftmp.110;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  if (table_temp != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.110 = table_temp->target;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.110 = 0B;

  <bb 5> :
  t = iftmp.110;
  goto <bb 32>; [INV]

  <bb 6> :
  stderr.111_1 = stderr;
  __builtin_fwrite ("\n ------------------------------------------\n", 1, 45, stderr.111_1);

  <bb 7> :
  _2 = table_temp->target;
  if (_2 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 8> :
  _3 = table_temp->target;
  debug_tree (_3);

  <bb 9> :
  treeGimpleArray.112_4 = treeGimpleArray;
  _5 = &table_temp->target;
  D.246577 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.112_4, _5);

  <bb 10> :
  user_tmp = D.246577;
  start.stmt = 0B;
  used_stmt = &start;
  if (user_tmp != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 11> :
  _6 = user_tmp->size;
  stderr.113_7 = stderr;
  fprintf (stderr.113_7, " \n Pointer to set  is size %d :[ \n", _6);

  <bb 12> :
  _8 = user_tmp->size;
  if (_8 > 0)
    goto <bb 13>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 13> :
  if (user_tmp != 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  iftmp.114 = user_tmp->stmt;
  goto <bb 16>; [INV]

  <bb 15> :
  iftmp.114 = 0B;

  <bb 16> :
  u_stmt = iftmp.114;
  goto <bb 24>; [INV]

  <bb 17> :
  _9 = user_tmp->ret_stmt;
  if (_9 != 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  _10 = user_tmp->ret_stmt;
  debug (_10);
  goto <bb 20>; [INV]

  <bb 19> :
  debug (u_stmt);

  <bb 20> :
  user_tmp = user_tmp->next;
  if (user_tmp != 0B)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  iftmp.115 = user_tmp->stmt;
  goto <bb 23>; [INV]

  <bb 22> :
  iftmp.115 = 0B;

  <bb 23> :
  u_stmt = iftmp.115;

  <bb 24> :
  if (user_tmp != 0B)
    goto <bb 17>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 25> :
  stderr.116_11 = stderr;
  __builtin_fwrite ("] \n", 1, 3, stderr.116_11);
  goto <bb 28>; [INV]

  <bb 26> :
  stderr.117_12 = stderr;
  __builtin_fwrite (" \n Pointer to set  is size 0 :[ \n", 1, 33, stderr.117_12);

  <bb 27> :
  stderr.118_13 = stderr;
  __builtin_fwrite ("] \n", 1, 3, stderr.118_13);

  <bb 28> :
  table_temp = table_temp->next;
  if (table_temp != 0B)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  iftmp.119 = table_temp->target;
  goto <bb 31>; [INV]

  <bb 30> :
  iftmp.119 = 0B;

  <bb 31> :
  t = iftmp.119;

  <bb 32> :
  if (t != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 33> :
  start = {CLOBBER};
  return;

  <bb 34> :
<L30>:
  start = {CLOBBER};
  resx 1

}



;; Function set_ptb (_Z7set_ptbP15basic_block_defP3ptbP9tree_nodejiP6gimpleP11cgraph_node, funcdef_no=6261, decl_uid=190425, cgraph_uid=3237, symbol_order=4007)

Removing basic block 4
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;;
;; Loop 1
;;  header 9, latch 8
;;  depth 1, outer 0
;;  nodes: 9 8 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 }
;; 4 succs { 15 }
;; 5 succs { 9 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 6 10 }
;; 10 succs { 11 15 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 1 }
void set_ptb (struct basic_block_def * b, struct ptb * table, union tree_node * t, location_t l, int s, struct gimple * stmt, struct cgraph_node * node)
{
  struct function * D.246600;
  bool D.246599;
  void * D.246598;
  struct function * D.246597;
  bool D.246596;
  bool same;
  bool retval.123;
  void * D.190438;
  bool retval.121;

  <bb 2> :
  _1 = table->target;
  if (_1 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  pointtablecount.120_2 = pointtablecount;
  _3 = pointtablecount.120_2 + 1;
  pointtablecount = _3;
  table->bb = b;
  table->target = t;
  table->next = 0B;
  table->loc = l;
  table->state = s;
  table->may_realloc = 0;
  table->last_stmt = stmt;
  table->node = node;
  D.246596 = bb_in_branch_p (stmt);
  _4 = D.246596;
  table->inbranch = _4;
  D.246597 = cgraph_node::get_fun (node);
  _5 = D.246597;
  table->fun = _5;
  _6 = gimple_code (stmt);
  retval.121 = _6 == 18;

  <bb 4> :
  table->removed = 0;
  _7 = table->size;
  _8 = _7 + 1;
  table->size = _8;
  goto <bb 15>; [INV]

  <bb 5> :
  same = 0;
  goto <bb 9>; [INV]

  <bb 6> :
  _9 = table->target;
  if (t == _9)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  same = 1;

  <bb 8> :
  table = table->next;

  <bb 9> :
  _10 = table->next;
  if (_10 != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  _11 = ~same;
  if (_11 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 11> :
  pointtablecount.122_12 = pointtablecount;
  _13 = pointtablecount.122_12 + 1;
  pointtablecount = _13;
  D.246598 = operator new (120);
  D.190438 = D.246598;
  MEM[(struct ptb *)D.190438] = {};
  ptb::ptb (D.190438);
  table->next = D.190438;
  table = table->next;
  table->bb = b;
  table->target = t;
  table->next = 0B;
  table->loc = l;
  table->state = s;
  table->may_realloc = 0;
  table->last_stmt = stmt;
  table->node = node;
  D.246599 = bb_in_branch_p (stmt);
  _14 = D.246599;
  table->inbranch = _14;
  D.246600 = cgraph_node::get_fun (node);
  _15 = D.246600;
  table->fun = _15;
  _16 = gimple_code (stmt);
  retval.123 = _16 == 18;
  if (retval.123 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  table->is_phi_stmt = 1;
  goto <bb 14>; [INV]

  <bb 13> :
  table->is_phi_stmt = 0;

  <bb 14> :
  table->removed = 0;
  _17 = table->size;
  _18 = _17 + 1;
  table->size = _18;

  <bb 15> :
  return;

}



;; Function ptb::ptb (_ZN3ptbC2Ev, funcdef_no=6171, decl_uid=169195, cgraph_uid=3147, symbol_order=3866)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ptb::ptb (struct ptb * const this)
{
  <bb 2> :
  this->pthread_type = 0;
  this->size = 0;
  return;

}



;; Function gimple_code (_ZL11gimple_codePK6gimple, funcdef_no=1996, decl_uid=92240, cgraph_uid=1133, symbol_order=1293)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
gimple_code gimple_code (const struct gimple * g)
{
  gimple_code D.246601;

  <bb 2> :
  _1 = g->code;
  D.246601 = (gimple_code) _1;

  <bb 3> :
<L0>:
  return D.246601;

}



;; Function set_gimple_array (_Z16set_gimple_arrayP12gimple_arrayP6gimpleP9tree_nodeS4_S2_, funcdef_no=6262, decl_uid=190448, cgraph_uid=3238, symbol_order=4008)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 5 6
;; 2 succs { 3 4 }
;; 3 succs { 11 }
;; 4 succs { 8 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 5 9 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 1 }
void set_gimple_array (struct gimple_array * table, struct gimple * used_stmt, union tree_node * fucntion, union tree_node * target, struct gimple * ret_stmt)
{
  void * D.246612;
  int size_tmp;
  bool same;
  void * D.190452;

  <bb 2> :
  _1 = table->stmt;
  if (_1 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  table->stmt = used_stmt;
  table->ret_stmt = ret_stmt;
  table->aptr = fucntion;
  table->target = target;
  table->size = 1;
  table->next = 0B;
  goto <bb 11>; [INV]

  <bb 4> :
  same = 0;
  size_tmp = 0;
  goto <bb 8>; [INV]

  <bb 5> :
  _2 = table->stmt;
  if (used_stmt == _2)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  same = 1;

  <bb 7> :
  size_tmp = size_tmp + 1;
  table = table->next;

  <bb 8> :
  _3 = table->next;
  if (_3 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _4 = ~same;
  if (_4 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  D.246612 = operator new (48);
  D.190452 = D.246612;
  MEM[(struct gimple_array *)D.190452].stmt = 0B;
  MEM[(struct gimple_array *)D.190452].ret_stmt = 0B;
  MEM[(struct gimple_array *)D.190452].aptr = 0B;
  MEM[(struct gimple_array *)D.190452].target = 0B;
  MEM[(struct gimple_array *)D.190452].next = 0B;
  MEM[(struct gimple_array *)D.190452].size = 0;
  gimple_array::gimple_array (D.190452);
  table->next = D.190452;
  table = table->next;
  table->stmt = used_stmt;
  table->ret_stmt = ret_stmt;
  table->target = target;
  table->size = size_tmp;
  table->aptr = fucntion;
  table->next = 0B;

  <bb 11> :
  return;

}



;; Function ret_function_varstmt (_Z20ret_function_varstmtP9tree_node, funcdef_no=6263, decl_uid=187014, cgraph_uid=3265, symbol_order=4035)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13
;; 2 succs { 13 3 }
;; 3 succs { 4 9 }
;; 4 succs { 12 5 }
;; 5 succs { 12 6 }
;; 6 succs { 12 7 }
;; 7 succs { 11 8 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 1 }
;; 11 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { }
struct function_assign_array ret_function_varstmt (union tree_node * function_tree)
{
  struct function_assign_array * D.246620;
  struct function_assign_array * D.246619;
  struct vector assign_type_array;
  struct function_assign_array assign_array [value-expr: *<retval>];
  bool retval.124;

  <bb 2> :
  function_assign_array::function_assign_array (<retval>);
  function_assign_collect.125_1 = function_assign_collect;
  D.246619 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.125_1, &function_tree);

  <bb 3> :
  _2 = D.246619;
  retval.124 = _2 != 0B;
  if (retval.124 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 4> :
  function_assign_collect.126_3 = function_assign_collect;
  D.246620 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.126_3, &function_tree);

  <bb 5> :
  _4 = D.246620;
  function_assign_array::operator= (<retval>, _4);

  <bb 6> :
  _5 = &<retval>->assign_type_array;
  std::vector<assign_type>::vector (&assign_type_array, _5);

  <bb 7> :
  <retval>->pass = 1;
  function_assign_collect.127_6 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.127_6, &function_tree, <retval>);

  <bb 8> :
  std::vector<assign_type>::~vector (&assign_type_array);
  assign_type_array = {CLOBBER};

  <bb 9> :

  <bb 10> :
<L3>:
  return <retval>;

  <bb 11> :
<L4>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 3

  <bb 12> :
<L5>:
  assign_type_array = {CLOBBER};
  resx 2

  <bb 13> :
<L6>:
  function_assign_array::~function_assign_array (<retval>);
  resx 1

}



;; Function function_assign_array::function_assign_array (_ZN21function_assign_arrayC2Ev, funcdef_no=6275, decl_uid=190465, cgraph_uid=3250, symbol_order=4020)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_assign_array::function_assign_array (struct function_assign_array * const this)
{
  <bb 2> :
  this->pass = 0;
  _1 = &this->assign_type_array;
  std::vector<assign_type>::vector (_1);
  return;

}



;; Function std::vector<assign_type>::vector (_ZNSt6vectorI11assign_typeSaIS0_EEC2Ev, funcdef_no=6273, decl_uid=175597, cgraph_uid=3247, symbol_order=4017)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.175605;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_ZNSt12_Vector_baseI11assign_typeSaIS0_EEC2Ev, funcdef_no=6271, decl_uid=175055, cgraph_uid=3244, symbol_order=4014)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7607, decl_uid=174947, cgraph_uid=4239, symbol_order=5024)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<assign_type>::allocator (this);
  _1 = &this->D.174950;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<assign_type>::allocator (_ZNSaI11assign_typeEC2Ev, funcdef_no=8437, decl_uid=174725, cgraph_uid=5069, symbol_order=5858)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<assign_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<assign_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<assign_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11assign_typeEC2Ev, funcdef_no=9207, decl_uid=174654, cgraph_uid=5839, symbol_order=6628)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<assign_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8440, decl_uid=174897, cgraph_uid=5072, symbol_order=5861)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::get (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7618, decl_uid=190698, cgraph_uid=4250, symbol_order=5035)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_assign_array * hash_map<tree_node*, function_assign_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.246632;
  struct hash_entry & D.246631;
  unsigned int D.246630;
  struct hash_entry & e;
  struct function_assign_array * iftmp.128;
  struct function_assign_array * D.246624;

  <bb 2> :
  _1 = &this->m_table;
  D.246630 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::hash (k);
  _2 = D.246630;
  D.246631 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.246631;
  D.246632 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (e);
  _3 = D.246632;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.128 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.128 = &e->m_value;

  <bb 5> :
  D.246624 = iftmp.128;

  <bb 6> :
<L3>:
  return D.246624;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE4hashERKS2_, funcdef_no=8448, decl_uid=190654, cgraph_uid=5080, symbol_order=5869)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::hash (union tree_node * const & h)
{
  hashval_t D.246633;

  <bb 2> :
  D.246633 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.246633;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8449, decl_uid=190841, cgraph_uid=5081, symbol_order=5870)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.246667;
  bool D.246666;
  bool D.246665;
  bool D.246664;
  bool D.246663;
  bool D.246662;
  struct value_type * D.246661;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.132;
  bool retval.131;
  struct value_type & D.246647;
  bool iftmp.130;
  bool retval.129;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 40;
  entry = _5 + _7;
  D.246662 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.246662;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.246663 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.246663;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.246664 = hash_map<tree_node*, function_assign_array>::hash_entry::equal (entry, comparable);
  _11 = D.246664;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.130 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.130 = 0;

  <bb 8> :
  retval.129 = iftmp.130;
  if (retval.129 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.246647 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  entry = _17 + _19;
  D.246665 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.246665;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.246666 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.246666;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.246667 = hash_map<tree_node*, function_assign_array>::hash_entry::equal (entry, comparable);
  _23 = D.246667;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.132 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.132 = 0;

  <bb 18> :
  retval.131 = iftmp.132;
  if (retval.131 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.246647 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.246647;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8905, decl_uid=190937, cgraph_uid=5537, symbol_order=6326)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.246670;
  bool D.246668;

  <bb 2> :
  D.246670 = hash_map<tree_node*, function_assign_array>::hash_entry::is_empty (v);
  D.246668 = D.246670;

  <bb 3> :
<L0>:
  return D.246668;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8471, decl_uid=190767, cgraph_uid=5103, symbol_order=5892)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_assign_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.246673;
  bool D.246671;

  <bb 2> :
  D.246673 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (e);
  D.246671 = D.246673;

  <bb 3> :
<L0>:
  return D.246671;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8906, decl_uid=190935, cgraph_uid=5538, symbol_order=6327)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.246676;
  bool D.246674;

  <bb 2> :
  D.246676 = hash_map<tree_node*, function_assign_array>::hash_entry::is_deleted (v);
  D.246674 = D.246676;

  <bb 3> :
<L0>:
  return D.246674;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9732, decl_uid=190762, cgraph_uid=6364, symbol_order=7153)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_assign_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.246679;
  bool D.246677;

  <bb 2> :
  D.246679 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_deleted<hash_map<tree_node*, function_assign_array>::hash_entry> (e);
  D.246677 = D.246679;

  <bb 3> :
<L0>:
  return D.246677;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_deleted<hash_map<tree_node*, function_assign_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10291, decl_uid=237327, cgraph_uid=6923, symbol_order=7716)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_deleted<hash_map<tree_node*, function_assign_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.246680;

  <bb 2> :
  _1 = entry->m_key;
  D.246680 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.246680;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9212, decl_uid=190755, cgraph_uid=5844, symbol_order=6633)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_assign_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.246684;
  bool D.246682;

  <bb 2> :
  _1 = &a->m_key;
  D.246684 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::equal_keys (_1, b);
  D.246682 = D.246684;

  <bb 3> :
<L0>:
  return D.246682;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE10equal_keysERKS2_S7_, funcdef_no=9921, decl_uid=190656, cgraph_uid=6553, symbol_order=7346)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.246685;

  <bb 2> :
  D.246685 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.246685;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8450, decl_uid=210537, cgraph_uid=5082, symbol_order=5871)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.246687;

  <bb 2> :
  _1 = entry->m_key;
  D.246687 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.246687;

}



;; Function function_assign_array::operator= (_ZN21function_assign_arrayaSERKS_, funcdef_no=6280, decl_uid=191023, cgraph_uid=3255, symbol_order=4025)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_assign_array & function_assign_array::operator= (struct function_assign_array * const this, const struct function_assign_array & D.191024)
{
  struct function_assign_array & D.246689;

  <bb 2> :
  _1 = D.191024->pass;
  this->pass = _1;
  _2 = &D.191024->assign_type_array;
  _3 = &this->assign_type_array;
  std::vector<assign_type>::operator= (_3, _2);
  D.246689 = this;

  <bb 3> :
<L0>:
  return D.246689;

}



;; Function std::vector<assign_type>::operator= (_ZNSt6vectorI11assign_typeSaIS0_EEaSERKS2_, funcdef_no=7619, decl_uid=175183, cgraph_uid=4252, symbol_order=5037)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<assign_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct assign_type * D.246724;
  struct assign_type * __tmp;
  const size_type __xlen;
  struct vector & D.246722;
  struct __normal_iterator D.246719;
  struct __normal_iterator D.246718;
  struct __normal_iterator D.246717;
  struct __normal_iterator D.246716;
  struct __normal_iterator D.246715;
  bool retval.137;
  struct __normal_iterator D.246710;
  struct __normal_iterator D.246709;
  bool retval.136;
  bool iftmp.135;
  bool retval.134;
  bool retval.133;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.133 = __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_propagate_on_copy_assign ();
  if (retval.133 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.175605;
  _4 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.175605;
  _6 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.135 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.135 = 0;

  <bb 8> :
  retval.134 = iftmp.135;
  if (retval.134 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<assign_type>::clear (this);
  _8 = &this->D.175605;
  _9 = this->D.175605._M_impl.D.174950._M_end_of_storage;
  _10 = this->D.175605._M_impl.D.174950._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 24;
  _13 = (long unsigned int) _12;
  _14 = this->D.175605._M_impl.D.174950._M_start;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (_8, _14, _13);
  this->D.175605._M_impl.D.174950._M_start = 0B;
  this->D.175605._M_impl.D.174950._M_finish = 0B;
  this->D.175605._M_impl.D.174950._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.175605;
  _16 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.175605;
  _18 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<assign_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<assign_type>::size (__x);
  _19 = std::vector<assign_type>::capacity (this);
  retval.136 = __xlen > _19;
  if (retval.136 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.246709 = std::vector<assign_type>::end (__x);
  D.246710 = std::vector<assign_type>::begin (__x);
  D.246724 = std::vector<assign_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (this, __xlen, D.246710, D.246709);
  __tmp = D.246724;
  _20 = &this->D.175605;
  _21 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.175605._M_impl.D.174950._M_finish;
  _23 = this->D.175605._M_impl.D.174950._M_start;
  std::_Destroy<assign_type*, assign_type> (_23, _22, _21);
  _24 = &this->D.175605;
  _25 = this->D.175605._M_impl.D.174950._M_end_of_storage;
  _26 = this->D.175605._M_impl.D.174950._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 24;
  _29 = (long unsigned int) _28;
  _30 = this->D.175605._M_impl.D.174950._M_start;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (_24, _30, _29);
  this->D.175605._M_impl.D.174950._M_start = __tmp;
  _31 = this->D.175605._M_impl.D.174950._M_start;
  _32 = __xlen * 24;
  _33 = _31 + _32;
  this->D.175605._M_impl.D.174950._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<assign_type>::size (this);
  retval.137 = __xlen <= _34;
  if (retval.137 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.175605;
  _36 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_35);
  D.246715 = std::vector<assign_type>::end (this);
  D.246716 = std::vector<assign_type>::begin (this);
  D.246717 = std::vector<assign_type>::end (__x);
  D.246718 = std::vector<assign_type>::begin (__x);
  D.246719 = std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (D.246718, D.246717, D.246716);
  std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type> (D.246719, D.246715, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.175605._M_impl.D.174950._M_start;
  _38 = __x->D.175605._M_impl.D.174950._M_start;
  _39 = std::vector<assign_type>::size (this);
  _40 = _39 * 24;
  _41 = _38 + _40;
  _42 = __x->D.175605._M_impl.D.174950._M_start;
  std::copy<assign_type*, assign_type*> (_42, _41, _37);
  _43 = &this->D.175605;
  _44 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.175605._M_impl.D.174950._M_finish;
  _46 = __x->D.175605._M_impl.D.174950._M_finish;
  _47 = __x->D.175605._M_impl.D.174950._M_start;
  _48 = std::vector<assign_type>::size (this);
  _49 = _48 * 24;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<assign_type*, assign_type*, assign_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.175605._M_impl.D.174950._M_start;
  _52 = __xlen * 24;
  _53 = _51 + _52;
  this->D.175605._M_impl.D.174950._M_finish = _53;

  <bb 17> :
  D.246722 = this;

  <bb 18> :
<L19>:
  return D.246722;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI11assign_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7620, decl_uid=174817, cgraph_uid=4251, symbol_order=5036)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_propagate_on_copy_assign ()
{
  bool D.246725;

  <bb 2> :
  D.246725 = 0;

  <bb 3> :
<L0>:
  return D.246725;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI11assign_typeES1_E15_S_always_equalEv, funcdef_no=6415, decl_uid=174820, cgraph_uid=3389, symbol_order=4165)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_always_equal ()
{
  bool D.246727;

  <bb 2> :
  D.246727 = 1;

  <bb 3> :
<L0>:
  return D.246727;

}



;; Function std::operator!= (_ZStneRKSaI11assign_typeES2_, funcdef_no=8452, decl_uid=174703, cgraph_uid=5084, symbol_order=5873)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.220929, const struct allocator & D.220930)
{
  bool D.246729;

  <bb 2> :
  D.246729 = 0;

  <bb 3> :
<L0>:
  return D.246729;

}



;; Function std::vector<assign_type>::clear (_ZNSt6vectorI11assign_typeSaIS0_EE5clearEv, funcdef_no=8453, decl_uid=175335, cgraph_uid=5085, symbol_order=5874)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.175605._M_impl.D.174950._M_start;
  std::vector<assign_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<assign_type>::_M_erase_at_end (_ZNSt6vectorI11assign_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9213, decl_uid=175463, cgraph_uid=5845, symbol_order=6634)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<assign_type>::_M_erase_at_end (struct vector * const this, struct assign_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.175605._M_impl.D.174950._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 24;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.175605;
  _5 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.175605._M_impl.D.174950._M_finish;
  std::_Destroy<assign_type*, assign_type> (__pos, _6, _5);
  this->D.175605._M_impl.D.174950._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI11assign_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8451, decl_uid=174840, cgraph_uid=5083, symbol_order=5872)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.246734;

  <bb 2> :
  D.246734 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.246734;

}



;; Function std::__alloc_on_copy<std::allocator<assign_type> > (_ZSt15__alloc_on_copyISaI11assign_typeEEvRT_RKS2_, funcdef_no=8454, decl_uid=210560, cgraph_uid=5086, symbol_order=5875)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<assign_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<assign_type>::capacity (_ZNKSt6vectorI11assign_typeSaIS0_EE8capacityEv, funcdef_no=8455, decl_uid=175251, cgraph_uid=5087, symbol_order=5876)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<assign_type>::capacity (const struct vector * const this)
{
  size_type D.246736;

  <bb 2> :
  _1 = this->D.175605._M_impl.D.174950._M_end_of_storage;
  _2 = this->D.175605._M_impl.D.174950._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.246736 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.246736;

}



;; Function std::vector<assign_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (_ZNSt6vectorI11assign_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8458, decl_uid=210664, cgraph_uid=5090, symbol_order=5879)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct assign_type * std::vector<assign_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct assign_type * D.246740;
  struct assign_type * __result;
  struct assign_type * D.246738;

  <bb 2> :
  _1 = &this->D.175605;
  D.246740 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_allocate (_1, __n);
  __result = D.246740;
  _2 = &this->D.175605;
  _3 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*, assign_type> (__first, __last, __result, _3);

  <bb 3> :
  D.246738 = __result;

  <bb 4> :
<L0>:
  return D.246738;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.175605;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_allocate (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE11_M_allocateEm, funcdef_no=9217, decl_uid=174954, cgraph_uid=5849, symbol_order=6638)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct assign_type * std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct assign_type * D.246750;
  struct assign_type * iftmp.138;
  struct assign_type * D.246744;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.246750 = std::allocator_traits<std::allocator<assign_type> >::allocate (_1, __n);
  iftmp.138 = D.246750;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.138 = 0B;

  <bb 5> :
  D.246744 = iftmp.138;

  <bb 6> :
<L3>:
  return D.246744;

}



;; Function std::allocator_traits<std::allocator<assign_type> >::allocate (_ZNSt16allocator_traitsISaI11assign_typeEE8allocateERS1_m, funcdef_no=9922, decl_uid=174755, cgraph_uid=6554, symbol_order=7347)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct assign_type * std::allocator_traits<std::allocator<assign_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct assign_type * D.246753;
  struct assign_type * D.246751;

  <bb 2> :
  D.246753 = __gnu_cxx::new_allocator<assign_type>::allocate (__a, __n, 0B);
  D.246751 = D.246753;

  <bb 3> :
<L0>:
  return D.246751;

}



;; Function __gnu_cxx::new_allocator<assign_type>::allocate (_ZN9__gnu_cxx13new_allocatorI11assign_typeE8allocateEmPKv, funcdef_no=10453, decl_uid=174609, cgraph_uid=7086, symbol_order=7879)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct assign_type * __gnu_cxx::new_allocator<assign_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.242909)
{
  struct assign_type * D.246764;
  struct assign_type * D.246763;
  align_val_t __al;
  struct assign_type * D.246761;
  bool retval.139;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<assign_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.139 = _4 != 0;
  if (retval.139 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 768614336404564650)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 24;
  D.246764 = operator new (_6);
  D.246761 = D.246764;

  <bb 7> :
<L6>:
  return D.246761;

}



;; Function __gnu_cxx::new_allocator<assign_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI11assign_typeE11_M_max_sizeEv, funcdef_no=10454, decl_uid=174636, cgraph_uid=7085, symbol_order=7878)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<assign_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.246765;

  <bb 2> :
  D.246765 = 384307168202282325;

  <bb 3> :
<L0>:
  return D.246765;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*, assign_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8469, decl_uid=210798, cgraph_uid=5101, symbol_order=5890)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*, assign_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct assign_type * __result, struct allocator & D.221096)
{
  struct assign_type * D.246769;
  struct assign_type * D.246767;

  <bb 2> :
  D.246769 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (__first, __last, __result);
  D.246767 = D.246769;

  <bb 3> :
<L0>:
  return D.246767;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9234, decl_uid=221098, cgraph_uid=5866, symbol_order=6655)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct assign_type * __result)
{
  struct assign_type * D.246772;
  const bool __assignable;
  struct assign_type * D.246770;

  <bb 2> :
  __assignable = 1;
  D.246772 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (__first, __last, __result);
  D.246770 = D.246772;

  <bb 3> :
<L0>:
  return D.246770;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=9932, decl_uid=232481, cgraph_uid=6564, symbol_order=7357)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct assign_type * __result)
{
  struct assign_type * D.246775;
  struct assign_type * D.246773;

  <bb 2> :
  D.246775 = std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (__first, __last, __result);
  D.246773 = D.246775;

  <bb 3> :
<L0>:
  return D.246773;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10459, decl_uid=239486, cgraph_uid=7091, symbol_order=7884)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct assign_type * __result)
{
  struct assign_type * D.246780;
  struct __normal_iterator D.246778;
  struct __normal_iterator D.246777;
  struct assign_type * D.246776;

  <bb 2> :
  D.246777 = std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (__last);
  D.246778 = std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (__first);
  D.246780 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (D.246778, D.246777, __result);
  D.246776 = D.246780;

  <bb 3> :
<L0>:
  return D.246776;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9221, decl_uid=221015, cgraph_uid=5853, symbol_order=6642)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.246781;

  <bb 2> :
  D.246781 = __it;

  <bb 3> :
<L0>:
  return D.246781;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEEPS2_ET1_T0_SB_SA_, funcdef_no=10771, decl_uid=242967, cgraph_uid=7403, symbol_order=8198)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct assign_type * __result)
{
  struct assign_type * D.246785;
  struct assign_type * D.246783;

  <bb 2> :
  __result.140_1 = __result;
  _2 = std::__niter_base<assign_type*> (__result.140_1);
  _3 = std::__niter_base<const assign_type*, std::vector<assign_type> > (__last);
  _4 = std::__niter_base<const assign_type*, std::vector<assign_type> > (__first);
  D.246785 = std::__copy_move_a1<false, const assign_type*, assign_type*> (_4, _3, _2);
  _5 = D.246785;
  D.246783 = std::__niter_wrap<assign_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.246783;

}



;; Function std::__niter_base<assign_type*> (_ZSt12__niter_baseIP11assign_typeET_S2_, funcdef_no=9928, decl_uid=223642, cgraph_uid=6560, symbol_order=7353)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__niter_base<assign_type*> (struct assign_type * __it)
{
  struct assign_type * D.246786;

  <bb 2> :
  D.246786 = __it;

  <bb 3> :
<L0>:
  return D.246786;

}



;; Function std::__niter_base<const assign_type*, std::vector<assign_type> > (_ZSt12__niter_baseIPK11assign_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=9923, decl_uid=232129, cgraph_uid=6555, symbol_order=7348)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct assign_type * std::__niter_base<const assign_type*, std::vector<assign_type> > (struct __normal_iterator __it)
{
  const struct assign_type * D.246788;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::base (&__it);
  D.246788 = *_1;

  <bb 3> :
<L0>:
  return D.246788;

}



;; Function __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10455, decl_uid=210631, cgraph_uid=7087, symbol_order=7880)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct assign_type * const & __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::base (const struct __normal_iterator * const this)
{
  const struct assign_type * const & D.246790;

  <bb 2> :
  D.246790 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.246790;

}



;; Function std::__copy_move_a1<false, const assign_type*, assign_type*> (_ZSt14__copy_move_a1ILb0EPK11assign_typePS0_ET1_T0_S5_S4_, funcdef_no=9925, decl_uid=232283, cgraph_uid=6557, symbol_order=7350)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a1<false, const assign_type*, assign_type*> (const struct assign_type * __first, const struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.246794;
  struct assign_type * D.246792;

  <bb 2> :
  D.246794 = std::__copy_move_a2<false, const assign_type*, assign_type*> (__first, __last, __result);
  D.246792 = D.246794;

  <bb 3> :
<L0>:
  return D.246792;

}



;; Function std::__copy_move_a2<false, const assign_type*, assign_type*> (_ZSt14__copy_move_a2ILb0EPK11assign_typePS0_ET1_T0_S5_S4_, funcdef_no=10456, decl_uid=239453, cgraph_uid=7088, symbol_order=7881)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a2<false, const assign_type*, assign_type*> (const struct assign_type * __first, const struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.246795;

  <bb 2> :
  D.246795 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<assign_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.246795;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<assign_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI11assign_typeEEPT_PKS4_S7_S5_, funcdef_no=10770, decl_uid=242941, cgraph_uid=7402, symbol_order=8197)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct assign_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<assign_type> (const struct assign_type * __first, const struct assign_type * __last, struct assign_type * __result)
{
  const ptrdiff_t _Num;
  struct assign_type * D.246800;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 24;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.141_2 = (long unsigned int) _Num;
  _3 = _Num.141_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.142_4 = (long unsigned int) _Num;
  _5 = _Num.142_4 * 24;
  D.246800 = __result + _5;

  <bb 5> :
<L3>:
  return D.246800;

}



;; Function std::__niter_wrap<assign_type*> (_ZSt12__niter_wrapIP11assign_typeET_RKS2_S2_, funcdef_no=9930, decl_uid=232326, cgraph_uid=6562, symbol_order=7355)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__niter_wrap<assign_type*> (struct assign_type * const & D.239475, struct assign_type * __res)
{
  struct assign_type * D.246802;

  <bb 2> :
  D.246802 = __res;

  <bb 3> :
<L0>:
  return D.246802;

}



;; Function std::_Destroy<assign_type*, assign_type> (_ZSt8_DestroyIP11assign_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8447, decl_uid=210521, cgraph_uid=5079, symbol_order=5868)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<assign_type*, assign_type> (struct assign_type * __first, struct assign_type * __last, struct allocator & D.220909)
{
  <bb 2> :
  std::_Destroy<assign_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<assign_type*> (_ZSt8_DestroyIP11assign_typeEvT_S2_, funcdef_no=9210, decl_uid=220911, cgraph_uid=5842, symbol_order=6631)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<assign_type*> (struct assign_type * __first, struct assign_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<assign_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<assign_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP11assign_typeEEvT_S4_, funcdef_no=9918, decl_uid=232089, cgraph_uid=6550, symbol_order=7343)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<assign_type*> (struct assign_type * D.239429, struct assign_type * D.239430)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8445, decl_uid=174957, cgraph_uid=5077, symbol_order=5866)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (struct _Vector_base * const this, struct assign_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<assign_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<assign_type> >::deallocate (_ZNSt16allocator_traitsISaI11assign_typeEE10deallocateERS1_PS0_m, funcdef_no=9209, decl_uid=174762, cgraph_uid=5841, symbol_order=6630)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<assign_type> >::deallocate (struct allocator_type & __a, struct assign_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<assign_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<assign_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI11assign_typeE10deallocateEPS1_m, funcdef_no=9917, decl_uid=174613, cgraph_uid=6549, symbol_order=7342)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<assign_type>::deallocate (struct new_allocator * const this, struct assign_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<assign_type>::end (_ZNSt6vectorI11assign_typeSaIS0_EE3endEv, funcdef_no=8461, decl_uid=175218, cgraph_uid=5093, symbol_order=5882)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<assign_type>::end (struct vector * const this)
{
  struct iterator D.221049;
  struct iterator D.246810;

  <bb 2> :
  _1 = &this->D.175605._M_impl.D.174950._M_finish;
  __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::__normal_iterator (&D.221049, _1);
  D.246810 = D.221049;
  D.221049 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.246810;

}



;; Function __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9219, decl_uid=210746, cgraph_uid=5851, symbol_order=6640)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::__normal_iterator (struct __normal_iterator * const this, struct assign_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<assign_type>::begin (_ZNSt6vectorI11assign_typeSaIS0_EE5beginEv, funcdef_no=8459, decl_uid=175214, cgraph_uid=5091, symbol_order=5880)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<assign_type>::begin (struct vector * const this)
{
  struct iterator D.221003;
  struct iterator D.246813;

  <bb 2> :
  _1 = &this->D.175605._M_impl.D.174950._M_start;
  __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::__normal_iterator (&D.221003, _1);
  D.246813 = D.221003;
  D.221003 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.246813;

}



;; Function std::vector<assign_type>::end (_ZNKSt6vectorI11assign_typeSaIS0_EE3endEv, funcdef_no=8457, decl_uid=175220, cgraph_uid=5089, symbol_order=5878)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<assign_type>::end (const struct vector * const this)
{
  struct const_iterator D.220965;
  struct const_iterator D.246816;

  <bb 2> :
  _1 = &this->D.175605._M_impl.D.174950._M_finish;
  __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::__normal_iterator (&D.220965, _1);
  D.246816 = D.220965;
  D.220965 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.246816;

}



;; Function __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9215, decl_uid=210644, cgraph_uid=5847, symbol_order=6636)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::__normal_iterator (struct __normal_iterator * const this, const struct assign_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<assign_type>::begin (_ZNKSt6vectorI11assign_typeSaIS0_EE5beginEv, funcdef_no=8456, decl_uid=175216, cgraph_uid=5088, symbol_order=5877)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<assign_type>::begin (const struct vector * const this)
{
  struct const_iterator D.220963;
  struct const_iterator D.246819;

  <bb 2> :
  _1 = &this->D.175605._M_impl.D.174950._M_start;
  __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::__normal_iterator (&D.220963, _1);
  D.246819 = D.220963;
  D.220963 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.246819;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8460, decl_uid=210765, cgraph_uid=5092, symbol_order=5881)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.246824;
  struct __normal_iterator D.246823;
  struct __normal_iterator D.246822;

  <bb 2> :
  D.246823 = std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (__last);
  D.246824 = std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (__first);
  D.246822 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (D.246824, D.246823, __result);

  <bb 3> :
<L0>:
  return D.246822;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9222, decl_uid=221021, cgraph_uid=5855, symbol_order=6644)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct assign_type * D.246828;
  struct __normal_iterator D.246826;

  <bb 2> :
  _1 = std::__niter_base<assign_type*, std::vector<assign_type> > (__result);
  _2 = std::__niter_base<const assign_type*, std::vector<assign_type> > (__last);
  _3 = std::__niter_base<const assign_type*, std::vector<assign_type> > (__first);
  D.246828 = std::__copy_move_a1<false, const assign_type*, assign_type*> (_3, _2, _1);
  _4 = D.246828;
  D.246826 = std::__niter_wrap<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.246826;

}



;; Function std::__niter_base<assign_type*, std::vector<assign_type> > (_ZSt12__niter_baseIP11assign_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=9924, decl_uid=232280, cgraph_uid=6556, symbol_order=7349)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__niter_base<assign_type*, std::vector<assign_type> > (struct __normal_iterator __it)
{
  struct assign_type * D.246829;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (&__it);
  D.246829 = *_1;

  <bb 3> :
<L0>:
  return D.246829;

}



;; Function __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9402, decl_uid=210733, cgraph_uid=6034, symbol_order=6823)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * const & __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (const struct __normal_iterator * const this)
{
  struct assign_type * const & D.246831;

  <bb 2> :
  D.246831 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.246831;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=9926, decl_uid=232287, cgraph_uid=6558, symbol_order=7351)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type*> (struct __normal_iterator __from, struct assign_type * __res)
{
  struct __normal_iterator D.246833;

  <bb 2> :
  _1 = std::__niter_base<assign_type*, std::vector<assign_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 24;
  D.246833 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.246833;

}



;; Function __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10457, decl_uid=210724, cgraph_uid=7089, symbol_order=7882)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct assign_type * const D.242947;
  struct __normal_iterator D.242948;
  struct __normal_iterator D.246835;

  <bb 2> :
  _1 = this->_M_current;
  __n.143_2 = (long unsigned int) __n;
  _3 = __n.143_2 * 24;
  _4 = _1 + _3;
  D.242947 = _4;
  __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::__normal_iterator (&D.242948, &D.242947);
  D.246835 = D.242948;
  D.242948 = {CLOBBER};
  D.242947 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.246835;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8462, decl_uid=210771, cgraph_uid=5094, symbol_order=5883)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.221052)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9224, decl_uid=221054, cgraph_uid=5856, symbol_order=6645)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=9927, decl_uid=232311, cgraph_uid=6559, symbol_order=7352)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (struct __normal_iterator D.239462, struct __normal_iterator D.239463)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<assign_type*, assign_type*> (_ZSt4copyIP11assign_typeS1_ET0_T_S3_S2_, funcdef_no=8463, decl_uid=210779, cgraph_uid=5095, symbol_order=5884)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::copy<assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.246841;
  struct assign_type * D.246839;

  <bb 2> :
  _1 = std::__miter_base<assign_type*> (__last);
  _2 = std::__miter_base<assign_type*> (__first);
  D.246841 = std::__copy_move_a<false, assign_type*, assign_type*> (_2, _1, __result);
  D.246839 = D.246841;

  <bb 3> :
<L0>:
  return D.246839;

}



;; Function std::__miter_base<assign_type*> (_ZSt12__miter_baseIP11assign_typeET_S2_, funcdef_no=9225, decl_uid=221070, cgraph_uid=5857, symbol_order=6646)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__miter_base<assign_type*> (struct assign_type * __it)
{
  struct assign_type * D.246842;

  <bb 2> :
  D.246842 = __it;

  <bb 3> :
<L0>:
  return D.246842;

}



;; Function std::__copy_move_a<false, assign_type*, assign_type*> (_ZSt13__copy_move_aILb0EP11assign_typeS1_ET1_T0_S3_S2_, funcdef_no=9226, decl_uid=221072, cgraph_uid=5858, symbol_order=6647)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a<false, assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.246846;
  struct assign_type * D.246844;

  <bb 2> :
  __result.144_1 = __result;
  _2 = std::__niter_base<assign_type*> (__result.144_1);
  _3 = std::__niter_base<assign_type*> (__last);
  _4 = std::__niter_base<assign_type*> (__first);
  D.246846 = std::__copy_move_a1<false, assign_type*, assign_type*> (_4, _3, _2);
  _5 = D.246846;
  D.246844 = std::__niter_wrap<assign_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.246844;

}



;; Function std::__copy_move_a1<false, assign_type*, assign_type*> (_ZSt14__copy_move_a1ILb0EP11assign_typeS1_ET1_T0_S3_S2_, funcdef_no=9929, decl_uid=232322, cgraph_uid=6561, symbol_order=7354)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a1<false, assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.246849;
  struct assign_type * D.246847;

  <bb 2> :
  D.246849 = std::__copy_move_a2<false, assign_type*, assign_type*> (__first, __last, __result);
  D.246847 = D.246849;

  <bb 3> :
<L0>:
  return D.246847;

}



;; Function std::__copy_move_a2<false, assign_type*, assign_type*> (_ZSt14__copy_move_a2ILb0EP11assign_typeS1_ET1_T0_S3_S2_, funcdef_no=10458, decl_uid=239471, cgraph_uid=7090, symbol_order=7883)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a2<false, assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.246850;

  <bb 2> :
  D.246850 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<assign_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.246850;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8446, decl_uid=174838, cgraph_uid=5078, symbol_order=5867)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.246852;

  <bb 2> :
  D.246852 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.246852;

}



;; Function std::vector<assign_type>::size (_ZNKSt6vectorI11assign_typeSaIS0_EE4sizeEv, funcdef_no=7628, decl_uid=175238, cgraph_uid=4260, symbol_order=5045)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<assign_type>::size (const struct vector * const this)
{
  size_type D.246854;

  <bb 2> :
  _1 = this->D.175605._M_impl.D.174950._M_finish;
  _2 = this->D.175605._M_impl.D.174950._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.246854 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.246854;

}



;; Function std::__uninitialized_copy_a<assign_type*, assign_type*, assign_type> (_ZSt22__uninitialized_copy_aIP11assign_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8464, decl_uid=210783, cgraph_uid=5096, symbol_order=5885)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__uninitialized_copy_a<assign_type*, assign_type*, assign_type> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result, struct allocator & D.221079)
{
  struct assign_type * D.246858;
  struct assign_type * D.246856;

  <bb 2> :
  D.246858 = std::uninitialized_copy<assign_type*, assign_type*> (__first, __last, __result);
  D.246856 = D.246858;

  <bb 3> :
<L0>:
  return D.246856;

}



;; Function std::uninitialized_copy<assign_type*, assign_type*> (_ZSt18uninitialized_copyIP11assign_typeS1_ET0_T_S3_S2_, funcdef_no=9227, decl_uid=221081, cgraph_uid=5860, symbol_order=6649)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::uninitialized_copy<assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.246861;
  const bool __assignable;
  struct assign_type * D.246859;

  <bb 2> :
  __assignable = 1;
  D.246861 = std::__uninitialized_copy<true>::__uninit_copy<assign_type*, assign_type*> (__first, __last, __result);
  D.246859 = D.246861;

  <bb 3> :
<L0>:
  return D.246859;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<assign_type*, assign_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIP11assign_typeS3_EET0_T_S5_S4_, funcdef_no=9931, decl_uid=232425, cgraph_uid=6563, symbol_order=7356)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__uninitialized_copy<true>::__uninit_copy<assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.246864;
  struct assign_type * D.246862;

  <bb 2> :
  D.246864 = std::copy<assign_type*, assign_type*> (__first, __last, __result);
  D.246862 = D.246864;

  <bb 3> :
<L0>:
  return D.246862;

}



;; Function std::vector<assign_type>::vector (_ZNSt6vectorI11assign_typeSaIS0_EEC2ERKS2_, funcdef_no=7622, decl_uid=175568, cgraph_uid=4254, symbol_order=5039)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<assign_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct assign_type * D.246869;
  struct __normal_iterator D.246866;
  struct __normal_iterator D.246865;
  struct allocator D.210809;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.175605;
  _2 = &__x->D.175605;
  _3 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_2);
  D.210809 = __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<assign_type>::size (__x);
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_1, _4, &D.210809);

  <bb 3> :
  std::allocator<assign_type>::~allocator (&D.210809);
  D.210809 = {CLOBBER};
  _5 = &this->D.175605;
  _6 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.175605._M_impl.D.174950._M_start;
  D.246865 = std::vector<assign_type>::end (__x);
  D.246866 = std::vector<assign_type>::begin (__x);
  D.246869 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*, assign_type> (D.246866, D.246865, _7, _6);

  <bb 4> :
  _8 = D.246869;
  this->D.175605._M_impl.D.174950._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<assign_type>::~allocator (&D.210809);
  resx 2

  <bb 6> :
<L1>:
  D.210809 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.175605;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::~_Vector_base (_9);
  resx 5

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI11assign_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=8465, decl_uid=174812, cgraph_uid=5097, symbol_order=5886)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<assign_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<assign_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI11assign_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9229, decl_uid=174777, cgraph_uid=5861, symbol_order=6650)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<assign_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<assign_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<assign_type>::allocator (_ZNSaI11assign_typeEC2ERKS0_, funcdef_no=8474, decl_uid=174720, cgraph_uid=5106, symbol_order=5895)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<assign_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<assign_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<assign_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11assign_typeEC2ERKS2_, funcdef_no=9241, decl_uid=174649, cgraph_uid=5873, symbol_order=6662)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<assign_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.174651)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_ZNSt12_Vector_baseI11assign_typeSaIS0_EEC2EmRKS1_, funcdef_no=8467, decl_uid=175037, cgraph_uid=5099, symbol_order=5888)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9231, decl_uid=174942, cgraph_uid=5863, symbol_order=6652)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<assign_type>::allocator (this, __a);
  _1 = &this->D.174950;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_create_storage (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9233, decl_uid=174961, cgraph_uid=5865, symbol_order=6654)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct assign_type * D.246876;

  <bb 2> :
  D.246876 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_allocate (this, __n);
  _1 = D.246876;
  this->_M_impl.D.174950._M_start = _1;
  _2 = this->_M_impl.D.174950._M_start;
  this->_M_impl.D.174950._M_finish = _2;
  _3 = this->_M_impl.D.174950._M_start;
  _4 = __n * 24;
  _5 = _3 + _4;
  this->_M_impl.D.174950._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6269, decl_uid=174997, cgraph_uid=3241, symbol_order=4011)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<assign_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<assign_type>::~allocator (_ZNSaI11assign_typeED2Ev, funcdef_no=7610, decl_uid=174730, cgraph_uid=4242, symbol_order=5027)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<assign_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<assign_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<assign_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI11assign_typeED2Ev, funcdef_no=8443, decl_uid=174659, cgraph_uid=5075, symbol_order=5864)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<assign_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::~_Vector_base (_ZNSt12_Vector_baseI11assign_typeSaIS0_EED2Ev, funcdef_no=7613, decl_uid=175060, cgraph_uid=4245, symbol_order=5030)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.174950._M_end_of_storage;
  _2 = this->_M_impl.D.174950._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.174950._M_start;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::put (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7624, decl_uid=190694, cgraph_uid=4256, symbol_order=5041)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_assign_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_assign_array & v)
{
  bool D.246884;
  struct hash_entry * D.246883;
  unsigned int D.246882;
  bool ins;
  struct hash_entry * e;
  bool D.246880;
  void * D.210819;
  void * D.210818;

  <bb 2> :
  _1 = &this->m_table;
  D.246882 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::hash (k);
  _2 = D.246882;
  D.246883 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.246883;
  D.246884 = hash_map<tree_node*, function_assign_array>::hash_entry::is_empty (e);
  ins = D.246884;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.210818 = &e->m_value;
  D.210819 = operator new (32, D.210818);
  function_assign_array::function_assign_array (D.210819, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_assign_array::operator= (_4, v);

  <bb 5> :
  D.246880 = ~ins;

  <bb 6> :
<L3>:
  return D.246880;

  <bb 7> :
<L4>:
  operator delete (D.210819, D.210818);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8470, decl_uid=190852, cgraph_uid=5102, symbol_order=5891)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.246935;
  bool D.246934;
  bool D.246933;
  bool D.246932;
  bool D.246931;
  bool D.246930;
  struct value_type * D.246929;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.150;
  bool retval.149;
  bool retval.148;
  bool retval.147;
  bool retval.146;
  bool retval.145;
  struct value_type * D.246891;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 40;
  entry = _11 + _13;
  size = this->m_size;
  D.246930 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.145 = D.246930;
  if (retval.145 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.246931 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.146 = D.246931;
  if (retval.146 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 40;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.246932 = hash_map<tree_node*, function_assign_array>::hash_entry::equal (entry, comparable);
  retval.147 = D.246932;
  if (retval.147 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  D.246891 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 40;
  entry = _24 + _26;
  D.246933 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.148 = D.246933;
  if (retval.148 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.246934 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.149 = D.246934;
  if (retval.149 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 40;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.246935 = hash_map<tree_node*, function_assign_array>::hash_entry::equal (entry, comparable);
  retval.150 = D.246935;
  if (retval.150 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 40;
  D.246891 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.246891 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.246891 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 40;
  D.246891 = _37 + _39;

  <bb 27> :
<L37>:
  return D.246891;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9235, decl_uid=190933, cgraph_uid=5870, symbol_order=6659)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.246966;
  unsigned int D.246965;
  bool D.246964;
  bool D.246963;
  struct mem_alloc_description & D.246962;
  struct value_type * D.246961;
  unsigned int D.246960;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.232507;
  void * D.232506;
  struct hash_entry & D.232535;
  bool iftmp.154;
  bool retval.153;
  bool iftmp.152;
  bool retval.151;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 40;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.152 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.152 = 0;

  <bb 6> :
  retval.151 = iftmp.152;
  if (retval.151 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.246960 = hash_table_higher_prime_index (_5);
  nindex = D.246960;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.246961 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.246961;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.246963 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.246963;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.246964 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.246964;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.154 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.154 = 0;

  <bb 15> :
  retval.153 = iftmp.154;
  if (retval.153 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.246965 = hash_map<tree_node*, function_assign_array>::hash_entry::hash (x);
  _16 = D.246965;
  D.246966 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.246966;
  D.232535 = std::move<hash_map<tree_node*, function_assign_array>::hash_entry&> (x);
  D.232506 = q;
  D.232507 = operator new (40, D.232506);
  hash_map<tree_node*, function_assign_array>::hash_entry::hash_entry (D.232507, D.232535);

  <bb 17> :
  p = p + 40;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=9933, decl_uid=190828, cgraph_uid=6565, symbol_order=7358)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.246967;

  <bb 2> :
  D.246967 = this->m_size;

  <bb 3> :
<L0>:
  return D.246967;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=9934, decl_uid=190830, cgraph_uid=6566, symbol_order=7359)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.246969;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.246969 = _1 - _2;

  <bb 3> :
<L0>:
  return D.246969;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=9935, decl_uid=190930, cgraph_uid=6567, symbol_order=7360)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.155;
  bool D.246971;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.155 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.155 = 0;

  <bb 6> :
  D.246971 = iftmp.155;

  <bb 7> :
<L4>:
  return D.246971;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9211, decl_uid=190920, cgraph_uid=5843, symbol_order=6632)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.246993;
  struct value_type * D.246992;
  struct mem_alloc_description & D.246991;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.246989;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.246992 = xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_alloc (n);
  nentries = D.246992;
  goto <bb 6>; [INV]

  <bb 5> :
  D.246993 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_assign_array>::hash_entry> (n);
  nentries = D.246993;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.246989 = nentries;

  <bb 9> :
<L14>:
  return D.246989;

}



;; Function xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=9919, decl_uid=216735, cgraph_uid=6551, symbol_order=7344)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.246996;
  struct hash_entry * D.246994;

  <bb 2> :
  D.246996 = xcalloc (count, 40);
  D.246994 = D.246996;

  <bb 3> :
<L0>:
  return D.246994;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_assign_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=9920, decl_uid=232096, cgraph_uid=6552, symbol_order=7345)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_assign_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.247003;
  struct hash_entry * D.247002;
  struct hash_entry * D.247000;
  bool retval.156;

  <bb 2> :
  retval.156 = need_finalization_p<hash_map<tree_node*, function_assign_array>::hash_entry> ();
  if (retval.156 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 40;
  D.247002 = ggc_internal_cleared_alloc (_1, finalize, 40, c);
  D.247000 = D.247002;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 40;
  D.247003 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.247000 = D.247003;

  <bb 5> :
<L2>:
  return D.247000;

}



;; Function finalize<hash_map<tree_node*, function_assign_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10449, decl_uid=239437, cgraph_uid=7084, symbol_order=7877)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_assign_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_assign_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10451, decl_uid=242898, cgraph_uid=7082, symbol_order=7875)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_assign_array::~function_assign_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_assign_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10448, decl_uid=239436, cgraph_uid=7080, symbol_order=7873)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_assign_array>::hash_entry> ()
{
  bool D.247004;

  <bb 2> :
  D.247004 = 1;

  <bb 3> :
<L0>:
  return D.247004;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=9937, decl_uid=190753, cgraph_uid=6569, symbol_order=7362)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_assign_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.247008;
  hashval_t D.247006;

  <bb 2> :
  _1 = &e->m_key;
  D.247008 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::hash (_1);
  D.247006 = D.247008;

  <bb 3> :
<L0>:
  return D.247006;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=9936, decl_uid=190923, cgraph_uid=6568, symbol_order=7361)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.247021;
  bool D.247020;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.158;
  struct value_type * D.247012;
  bool retval.157;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 40;
  slot = _2 + _4;
  D.247020 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.157 = D.247020;
  if (retval.157 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.247012 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 40;
  slot = _8 + _10;
  D.247021 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.158 = D.247021;
  if (retval.158 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.247012 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.247012;

}



;; Function std::move<hash_map<tree_node*, function_assign_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=9938, decl_uid=232504, cgraph_uid=6570, symbol_order=7363)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_assign_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.247022;

  <bb 2> :
  D.247022 = __t;

  <bb 3> :
<L0>:
  return D.247022;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9237, decl_uid=232529, cgraph_uid=5868, symbol_order=6657)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.232531)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.232531->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.232531->m_value;
  function_assign_array::function_assign_array (_2, _3);
  return;

}



;; Function function_assign_array::function_assign_array (_ZN21function_assign_arrayC2EOS_, funcdef_no=6288, decl_uid=190482, cgraph_uid=3263, symbol_order=4033)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_assign_array::function_assign_array (struct function_assign_array * const this, struct function_assign_array & D.190484)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.190484->pass;
  this->pass = _1;
  _2 = &this->assign_type_array;
  _3 = &D.190484->assign_type_array;
  std::vector<assign_type>::vector (_2, _3);
  return;

}



;; Function std::vector<assign_type>::vector (_ZNSt6vectorI11assign_typeSaIS0_EEC2EOS2_, funcdef_no=6286, decl_uid=175562, cgraph_uid=3260, symbol_order=4030)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::vector (struct vector * const this, struct vector & D.175564)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.175605;
  _2 = &D.175564->D.175605;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_ZNSt12_Vector_baseI11assign_typeSaIS0_EEC2EOS2_, funcdef_no=6284, decl_uid=175030, cgraph_uid=3257, symbol_order=4027)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.175032)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.175032->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=7626, decl_uid=174936, cgraph_uid=4258, symbol_order=5043)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl&> (__x);
  std::allocator<assign_type>::allocator (this, _1);
  _2 = &this->D.174950;
  _3 = std::move<std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.174950;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI11assign_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=8472, decl_uid=210827, cgraph_uid=5104, symbol_order=5893)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.247024;

  <bb 2> :
  D.247024 = __t;

  <bb 3> :
<L0>:
  return D.247024;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=8477, decl_uid=174892, cgraph_uid=5109, symbol_order=5898)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8908, decl_uid=216737, cgraph_uid=5540, symbol_order=6329)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9239, decl_uid=190941, cgraph_uid=5871, symbol_order=6660)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_assign_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=9939, decl_uid=190765, cgraph_uid=6571, symbol_order=7364)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::mark_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::mark_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10460, decl_uid=239513, cgraph_uid=7092, symbol_order=7885)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::mark_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function pointer_hash<tree_node>::mark_empty (_ZN12pointer_hashI9tree_nodeE10mark_emptyERPS0_, funcdef_no=10772, decl_uid=85306, cgraph_uid=7404, symbol_order=8199)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void pointer_hash<tree_node>::mark_empty (union tree_node * & e)
{
  <bb 2> :
  *e = 0B;
  return;

}



;; Function function_assign_array::function_assign_array (_ZN21function_assign_arrayC2ERKS_, funcdef_no=6292, decl_uid=190473, cgraph_uid=3267, symbol_order=4037)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_assign_array::function_assign_array (struct function_assign_array * const this, const struct function_assign_array & D.190475)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.190475->pass;
  this->pass = _1;
  _2 = &this->assign_type_array;
  _3 = &D.190475->assign_type_array;
  std::vector<assign_type>::vector (_2, _3);
  return;

}



;; Function operator delete (_ZdlPvS_, funcdef_no=17, decl_uid=3708, cgraph_uid=18, symbol_order=17)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void operator delete (void * D.3706, void * D.3707)
{
  <bb 2> :
  return;

}



;; Function std::vector<assign_type>::~vector (_ZNSt6vectorI11assign_typeSaIS0_EED2Ev, funcdef_no=7616, decl_uid=175602, cgraph_uid=4248, symbol_order=5033)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.175605;
  _2 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.175605._M_impl.D.174950._M_finish;
  _4 = this->D.175605._M_impl.D.174950._M_start;
  std::_Destroy<assign_type*, assign_type> (_4, _3, _2);
  _5 = &this->D.175605;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function function_assign_array::~function_assign_array (_ZN21function_assign_arrayD2Ev, funcdef_no=6278, decl_uid=190640, cgraph_uid=3253, symbol_order=4023)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_assign_array::~function_assign_array (struct function_assign_array * const this)
{
  <bb 2> :
  _1 = &this->assign_type_array;
  std::vector<assign_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function get_function_varstmt (_Z20get_function_varstmtP9tree_nodeS0_, funcdef_no=6290, decl_uid=191098, cgraph_uid=3269, symbol_order=4039)

Merging blocks 4 and 18
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 12 11
;; 2 succs { 21 3 }
;; 3 succs { 4 5 }
;; 4 succs { 18 }
;; 5 succs { 21 6 }
;; 6 succs { 21 7 }
;; 7 succs { 20 8 }
;; 8 succs { 19 9 }
;; 9 succs { 19 10 }
;; 10 succs { 14 }
;; 11 succs { 19 12 }
;; 12 succs { 19 13 }
;; 13 succs { 14 }
;; 14 succs { 11 15 }
;; 15 succs { 19 16 }
;; 16 succs { 19 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { }
void get_function_varstmt (union tree_node * function_tree, union tree_node * vartree)
{
  struct function_assign_array * D.247033;
  struct function_assign_array * D.247032;
  int i;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  bool retval.166;
  bool retval.159;

  <bb 2> :
  function_assign_collect.160_1 = function_assign_collect;
  D.247032 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.160_1, &function_tree);

  <bb 3> :
  _2 = D.247032;
  retval.159 = _2 == 0B;
  if (retval.159 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  goto <bb 18>; [INV]

  <bb 5> :
  function_assign_collect.161_3 = function_assign_collect;
  D.247033 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.161_3, &function_tree);

  <bb 6> :
  _4 = D.247033;
  function_assign_array::function_assign_array (&assign_array, _4);

  <bb 7> :
  std::vector<assign_type>::vector (&assign_type_array, &assign_array.assign_type_array);

  <bb 8> :
  _5 = std::vector<assign_type>::size (&assign_type_array);
  function_tree.162_6 = function_tree;
  stderr.163_7 = stderr;
  fprintf (stderr.163_7, "=======print_function_var %d   %d========\n", function_tree.162_6, _5);

  <bb 9> :
  stderr.164_8 = stderr;
  __builtin_fwrite ("[\n", 1, 2, stderr.164_8);

  <bb 10> :
  i = 0;
  goto <bb 14>; [INV]

  <bb 11> :
  _9 = (long unsigned int) i;
  _10 = std::vector<assign_type>::operator[] (&assign_type_array, _9);
  _11 = _10->stmt;
  debug (_11);

  <bb 12> :
  stderr.165_12 = stderr;
  __builtin_fwrite (",\n", 1, 2, stderr.165_12);

  <bb 13> :
  i = i + 1;

  <bb 14> :
  _13 = (long unsigned int) i;
  _14 = std::vector<assign_type>::size (&assign_type_array);
  retval.166 = _13 < _14;
  if (retval.166 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  stderr.167_15 = stderr;
  __builtin_fwrite ("GIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGN CALLLLLLLLLLLLLLLLLLLLLLL\n", 1, 196, stderr.167_15);

  <bb 16> :
  stderr.168_16 = stderr;
  __builtin_fwrite ("]\n", 1, 2, stderr.168_16);

  <bb 17> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};

  <bb 18> :
<L7>:
  return;

  <bb 19> :
<L8>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 3

  <bb 20> :
<L9>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 2

  <bb 21> :
<L10>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  resx 1

}



;; Function std::vector<assign_type>::operator[] (_ZNSt6vectorI11assign_typeSaIS0_EEixEm, funcdef_no=7629, decl_uid=175258, cgraph_uid=4261, symbol_order=5046)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<assign_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.247039;

  <bb 2> :
  _1 = this->D.175605._M_impl.D.174950._M_start;
  _2 = __n * 24;
  D.247039 = _1 + _2;

  <bb 3> :
<L0>:
  return D.247039;

}



;; Function get_function_specialstmt (_Z24get_function_specialstmtP9tree_nodeS0_, funcdef_no=6294, decl_uid=191114, cgraph_uid=3270, symbol_order=4040)

Merging blocks 4 and 18
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 12 11
;; 2 succs { 21 3 }
;; 3 succs { 4 5 }
;; 4 succs { 18 }
;; 5 succs { 21 6 }
;; 6 succs { 21 7 }
;; 7 succs { 20 8 }
;; 8 succs { 19 9 }
;; 9 succs { 19 10 }
;; 10 succs { 14 }
;; 11 succs { 19 12 }
;; 12 succs { 19 13 }
;; 13 succs { 14 }
;; 14 succs { 11 15 }
;; 15 succs { 19 16 }
;; 16 succs { 19 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { }
void get_function_specialstmt (union tree_node * function_tree, union tree_node * vartree)
{
  struct function_return_array * D.247047;
  struct function_return_array * D.247046;
  int i;
  struct vector ret_type_array;
  struct function_return_array fun_array;
  bool retval.176;
  bool retval.169;

  <bb 2> :
  function_return_collect.170_1 = function_return_collect;
  D.247046 = hash_map<tree_node*, function_return_array>::get (function_return_collect.170_1, &function_tree);

  <bb 3> :
  _2 = D.247046;
  retval.169 = _2 == 0B;
  if (retval.169 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  goto <bb 18>; [INV]

  <bb 5> :
  function_return_collect.171_3 = function_return_collect;
  D.247047 = hash_map<tree_node*, function_return_array>::get (function_return_collect.171_3, &function_tree);

  <bb 6> :
  _4 = D.247047;
  function_return_array::function_return_array (&fun_array, _4);

  <bb 7> :
  std::vector<return_type>::vector (&ret_type_array, &fun_array.return_type_array);

  <bb 8> :
  _5 = std::vector<return_type>::size (&ret_type_array);
  function_tree.172_6 = function_tree;
  stderr.173_7 = stderr;
  fprintf (stderr.173_7, "=======print_function_return %d   %d========\n", function_tree.172_6, _5);

  <bb 9> :
  stderr.174_8 = stderr;
  __builtin_fwrite ("[\n", 1, 2, stderr.174_8);

  <bb 10> :
  i = 0;
  goto <bb 14>; [INV]

  <bb 11> :
  _9 = (long unsigned int) i;
  _10 = std::vector<return_type>::operator[] (&ret_type_array, _9);
  _11 = _10->stmt;
  debug (_11);

  <bb 12> :
  stderr.175_12 = stderr;
  __builtin_fwrite (",\n", 1, 2, stderr.175_12);

  <bb 13> :
  i = i + 1;

  <bb 14> :
  _13 = (long unsigned int) i;
  _14 = std::vector<return_type>::size (&ret_type_array);
  retval.176 = _13 < _14;
  if (retval.176 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  stderr.177_15 = stderr;
  __builtin_fwrite ("GIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGN CALLLLLLLLLLLLLLLLLLLLLLL\n", 1, 196, stderr.177_15);

  <bb 16> :
  stderr.178_16 = stderr;
  __builtin_fwrite ("]\n", 1, 2, stderr.178_16);

  <bb 17> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};

  <bb 18> :
<L7>:
  return;

  <bb 19> :
<L8>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 3

  <bb 20> :
<L9>:
  function_return_array::~function_return_array (&fun_array);
  resx 2

  <bb 21> :
<L10>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  resx 1

}



;; Function trace_fucntion_relate_stmt (_Z26trace_fucntion_relate_stmtP11cgraph_nodeP9tree_nodeS2_, funcdef_no=6295, decl_uid=187052, cgraph_uid=3291, symbol_order=4067)

Removing basic block 24
Removing basic block 25
Removing basic block 26
Removing basic block 61
Removing basic block 62
Removing basic block 63
Removing basic block 110
Removing basic block 111
Removing basic block 112
Removing basic block 113
Removing basic block 115
Removing basic block 119
Removing basic block 120
Removing basic block 121
Removing basic block 122
Removing basic block 131
Removing basic block 132
Removing basic block 144
Removing basic block 145
Removing basic block 155
Removing basic block 160
Removing basic block 163
Removing basic block 185
Removing basic block 195
Removing basic block 196
Removing basic block 197
Removing basic block 198
Removing basic block 199
Removing basic block 200
Removing basic block 226
Removing basic block 227
Removing basic block 228
Removing basic block 255
Removing basic block 256
Removing basic block 257
Removing basic block 258
Removing basic block 259
Removing basic block 260
Removing basic block 295
Removing basic block 300
Removing basic block 303
Removing basic block 324
Removing basic block 330
Removing basic block 331
Removing basic block 332
Removing basic block 333
Removing basic block 334
Removing basic block 335
Removing basic block 336
Removing basic block 345
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 1
;;  header 305, latch 304
;;  depth 1, outer 0
;;  nodes
;;
;; Loop 2
;;  header 291, latch 290
;;  depth 2, outer 1
;;  nodes
;;
;; Loop 3
;;  header 289, latch 288
;;  depth 3, outer 2
;;  nodes
;; 2 succs { 3 4 }
;; 3 succs { 307 }
;; 4 succs { 305 }
;; 5 succs { 6 7 }
;; 6 succs { 304 }
;; 7 succs { 8 303 }
;; 8 succs { 312 9 }
;; 9 succs { 312 10 }
;; 10 succs { 312 11 }
;; 11 succs { 312 12 }
;; 12 succs { 312 13 }
;; 13 succs { 291 }
;; 14 succs { 16 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 289 }
;; 18 succs { 19 24 }
;; 19 succs { 308 20 }
;; 20 succs { 308 21 }
;; 21 succs { 22 24 }
;; 22 succs { 23 24 }
;; 23 succs { 308 24 }
;; 24 succs { 25 223 }
;; 25 succs { 26 172 }
;; 26 succs { 27 172 }
;; 27 succs { 28 172 }
;; 28 succs { 308 29 }
;; 29 succs { 30 172 }
;; 30 succs { 308 31 }
;; 31 succs { 34 32 }
;; 32 succs { 308 33 }
;; 33 succs { 34 35 }
;; 34 succs { 36 }
;; 35 succs { 36 }
;; 36 succs { 37 172 }
;; 37 succs { 308 38 }
;; 38 succs { 39 172 }
;; 39 succs { 308 40 }
;; 40 succs { 308 41 }
;; 41 succs { 42 172 }
;; 42 succs { 308 43 }
;; 43 succs { 44 127 }
;; 44 succs { 308 45 }
;; 45 succs { 308 46 }
;; 46 succs { 47 58 }
;; 47 succs { 308 48 }
;; 48 succs { 49 58 }
;; 49 succs { 308 50 }
;; 50 succs { 308 51 }
;; 51 succs { 52 58 }
;; 52 succs { 308 53 }
;; 53 succs { 308 54 }
;; 54 succs { 308 55 }
;; 55 succs { 308 56 }
;; 56 succs { 308 57 }
;; 57 succs { 308 58 }
;; 58 succs { 308 59 }
;; 59 succs { 60 63 }
;; 60 succs { 308 61 }
;; 61 succs { 62 63 }
;; 62 succs { 64 }
;; 63 succs { 64 }
;; 64 succs { 65 66 }
;; 65 succs { 288 }
;; 66 succs { 308 67 }
;; 67 succs { 68 71 }
;; 68 succs { 308 69 }
;; 69 succs { 70 71 }
;; 70 succs { 72 }
;; 71 succs { 72 }
;; 72 succs { 73 108 }
;; 73 succs { 308 74 }
;; 74 succs { 75 127 }
;; 75 succs { 76 127 }
;; 76 succs { 78 77 }
;; 77 succs { 78 79 }
;; 78 succs { 288 }
;; 79 succs { 80 82 }
;; 80 succs { 81 82 }
;; 81 succs { 83 }
;; 82 succs { 83 }
;; 83 succs { 84 127 }
;; 84 succs { 308 85 }
;; 85 succs { 308 86 }
;; 86 succs { 87 127 }
;; 87 succs { 308 88 }
;; 88 succs { 308 89 }
;; 89 succs { 90 127 }
;; 90 succs { 91 106 }
;; 91 succs { 92 106 }
;; 92 succs { 308 93 }
;; 93 succs { 94 105 }
;; 94 succs { 308 95 }
;; 95 succs { 96 104 }
;; 96 succs { 97 105 }
;; 97 succs { 308 98 }
;; 98 succs { 99 105 }
;; 99 succs { 308 100 }
;; 100 succs { 101 105 }
;; 101 succs { 308 102 }
;; 102 succs { 103 105 }
;; 103 succs { 288 }
;; 104 succs { 288 }
;; 105 succs { 107 }
;; 106 succs { 288 }
;; 107 succs { 127 }
;; 108 succs { 308 109 }
;; 109 succs { 110 116 }
;; 110 succs { 308 111 }
;; 111 succs { 308 112 }
;; 112 succs { 113 127 }
;; 113 succs { 308 114 }
;; 114 succs { 115 127 }
;; 115 succs { 288 }
;; 116 succs { 308 117 }
;; 117 succs { 118 127 }
;; 118 succs { 308 119 }
;; 119 succs { 308 120 }
;; 120 succs { 122 121 }
;; 121 succs { 122 123 }
;; 122 succs { 288 }
;; 123 succs { 308 124 }
;; 124 succs { 308 125 }
;; 125 succs { 126 127 }
;; 126 succs { 288 }
;; 127 succs { 308 128 }
;; 128 succs { 308 129 }
;; 129 succs { 308 130 }
;; 130 succs { 308 131 }
;; 131 succs { 308 132 }
;; 132 succs { 133 163 }
;; 133 succs { 134 142 }
;; 134 succs { 135 136 }
;; 135 succs { 308 141 }
;; 136 succs { 137 140 }
;; 137 succs { 308 138 }
;; 138 succs { 308 139 }
;; 139 succs { 308 140 }
;; 140 succs { 308 141 }
;; 141 succs { 308 152 }
;; 142 succs { 143 145 }
;; 143 succs { 308 144 }
;; 144 succs { 152 }
;; 145 succs { 146 151 }
;; 146 succs { 308 147 }
;; 147 succs { 308 148 }
;; 148 succs { 308 149 }
;; 149 succs { 308 150 }
;; 150 succs { 151 }
;; 151 succs { 308 152 }
;; 152 succs { 308 153 }
;; 153 succs { 308 154 }
;; 154 succs { 308 155 }
;; 155 succs { 308 156 }
;; 156 succs { 308 157 }
;; 157 succs { 308 158 }
;; 158 succs { 308 159 }
;; 159 succs { 308 160 }
;; 160 succs { 308 161 }
;; 161 succs { 308 162 }
;; 162 succs { 308 168 }
;; 163 succs { 308 164 }
;; 164 succs { 308 165 }
;; 165 succs { 308 166 }
;; 166 succs { 308 167 }
;; 167 succs { 308 168 }
;; 168 succs { 308 169 }
;; 169 succs { 308 170 }
;; 170 succs { 308 171 }
;; 171 succs { 308 172 }
;; 172 succs { 308 173 }
;; 173 succs { 175 174 }
;; 174 succs { 175 176 }
;; 175 succs { 177 }
;; 176 succs { 177 }
;; 177 succs { 178 288 }
;; 178 succs { 308 179 }
;; 179 succs { 308 180 }
;; 180 succs { 181 183 }
;; 181 succs { 308 182 }
;; 182 succs { 183 }
;; 183 succs { 184 197 }
;; 184 succs { 185 197 }
;; 185 succs { 186 197 }
;; 186 succs { 187 197 }
;; 187 succs { 308 188 }
;; 188 succs { 308 189 }
;; 189 succs { 308 190 }
;; 190 succs { 308 191 }
;; 191 succs { 308 192 }
;; 192 succs { 308 193 }
;; 193 succs { 308 194 }
;; 194 succs { 308 195 }
;; 195 succs { 308 196 }
;; 196 succs { 308 197 }
;; 197 succs { 198 288 }
;; 198 succs { 199 288 }
;; 199 succs { 308 200 }
;; 200 succs { 201 288 }
;; 201 succs { 308 202 }
;; 202 succs { 203 288 }
;; 203 succs { 204 211 }
;; 204 succs { 308 205 }
;; 205 succs { 308 206 }
;; 206 succs { 207 211 }
;; 207 succs { 308 208 }
;; 208 succs { 308 209 }
;; 209 succs { 210 211 }
;; 210 succs { 212 }
;; 211 succs { 212 }
;; 212 succs { 213 288 }
;; 213 succs { 308 214 }
;; 214 succs { 308 215 }
;; 215 succs { 308 216 }
;; 216 succs { 308 217 }
;; 217 succs { 308 218 }
;; 218 succs { 308 219 }
;; 219 succs { 308 220 }
;; 220 succs { 308 221 }
;; 221 succs { 308 222 }
;; 222 succs { 308 288 }
;; 223 succs { 224 288 }
;; 224 succs { 225 288 }
;; 225 succs { 226 288 }
;; 226 succs { 227 288 }
;; 227 succs { 308 228 }
;; 228 succs { 229 288 }
;; 229 succs { 308 230 }
;; 230 succs { 308 231 }
;; 231 succs { 308 232 }
;; 232 succs { 233 288 }
;; 233 succs { 308 234 }
;; 234 succs { 240 235 }
;; 235 succs { 308 236 }
;; 236 succs { 240 237 }
;; 237 succs { 308 238 }
;; 238 succs { 308 239 }
;; 239 succs { 240 241 }
;; 240 succs { 242 }
;; 241 succs { 242 }
;; 242 succs { 243 288 }
;; 243 succs { 244 288 }
;; 244 succs { 247 245 }
;; 245 succs { 247 246 }
;; 246 succs { 247 248 }
;; 247 succs { 288 }
;; 248 succs { 308 249 }
;; 249 succs { 250 288 }
;; 250 succs { 308 251 }
;; 251 succs { 308 252 }
;; 252 succs { 253 288 }
;; 253 succs { 254 283 }
;; 254 succs { 255 263 }
;; 255 succs { 256 257 }
;; 256 succs { 308 262 }
;; 257 succs { 258 261 }
;; 258 succs { 308 259 }
;; 259 succs { 308 260 }
;; 260 succs { 308 261 }
;; 261 succs { 308 262 }
;; 262 succs { 308 273 }
;; 263 succs { 264 266 }
;; 264 succs { 308 265 }
;; 265 succs { 273 }
;; 266 succs { 267 272 }
;; 267 succs { 308 268 }
;; 268 succs { 308 269 }
;; 269 succs { 308 270 }
;; 270 succs { 308 271 }
;; 271 succs { 272 }
;; 272 succs { 308 273 }
;; 273 succs { 308 274 }
;; 274 succs { 308 275 }
;; 275 succs { 308 276 }
;; 276 succs { 308 277 }
;; 277 succs { 308 278 }
;; 278 succs { 308 279 }
;; 279 succs { 308 280 }
;; 280 succs { 308 281 }
;; 281 succs { 308 282 }
;; 282 succs { 308 287 }
;; 283 succs { 308 284 }
;; 284 succs { 308 285 }
;; 285 succs { 308 286 }
;; 286 succs { 308 287 }
;; 287 succs { 288 }
;; 288 succs { 289 }
;; 289 succs { 18 290 }
;; 290 succs { 291 }
;; 291 succs { 14 292 }
;; 292 succs { 293 302 }
;; 293 succs { 309 294 }
;; 294 succs { 295 296 }
;; 295 succs { 309 299 }
;; 296 succs { 309 297 }
;; 297 succs { 309 298 }
;; 298 succs { 309 299 }
;; 299 succs { 309 300 }
;; 300 succs { 309 301 }
;; 301 succs { 302 }
;; 302 succs { 303 }
;; 303 succs { 304 }
;; 304 succs { 305 }
;; 305 succs { 5 306 }
;; 306 succs { 307 }
;; 307 succs { 1 }
;; 308 succs { 312 }
;; 309 succs { 310 }
;; 310 succs { 311 }
;; 311 succs { 312 }
;; 312 succs { }
void trace_fucntion_relate_stmt (struct cgraph_node * node, union tree_node * function_tree, union tree_node * mallocStmt_tree)
{
  struct cgraph_node * D.247427;
  struct function_relate_array * D.247422;
  struct function_relate_array * D.247421;
  union tree_node * D.247419;
  union tree_node * D.247418;
  const char * D.247417;
  bool D.247416;
  union tree_node * D.247415;
  union tree_node * D.247414;
  const char * D.247413;
  union tree_node * D.247412;
  union tree_node * D.247411;
  union tree_node * D.247410;
  union tree_node * D.247409;
  const char * D.247408;
  union tree_node * D.247407;
  unsigned int D.247406;
  union tree_node * D.247405;
  const char * D.247404;
  bool D.247403;
  union tree_node * D.247402;
  bool D.247401;
  union tree_node * D.247400;
  union tree_node * D.247399;
  union tree_node * D.247398;
  union tree_node * D.247397;
  const char * D.247396;
  union tree_node * D.247395;
  union tree_node * D.247394;
  union tree_node * D.247393;
  union tree_node * D.247392;
  union tree_node * D.247391;
  union tree_node * D.247390;
  const char * D.247389;
  const char * D.247388;
  union tree_node * D.247387;
  const char * D.247386;
  bool D.247385;
  union tree_node * D.247384;
  union tree_node * D.247383;
  union tree_node * D.247382;
  union tree_node * D.247381;
  union tree_node * D.247380;
  bool D.247379;
  union tree_node * D.247378;
  union tree_node * D.247377;
  bool D.247376;
  union tree_node * D.247375;
  union tree_node * D.247374;
  union tree_node * D.247373;
  union tree_node * D.247372;
  const char * D.247371;
  union tree_node * D.247370;
  const char * D.247369;
  union tree_node * D.247368;
  union tree_node * D.247367;
  union tree_node * D.247366;
  union tree_node * D.247365;
  union tree_node * D.247364;
  union tree_node * D.247363;
  union tree_node * D.247362;
  bool D.247361;
  union tree_node * D.247360;
  union tree_node * D.247359;
  bool D.247358;
  union tree_node * D.247357;
  union tree_node * D.247356;
  bool D.247355;
  union tree_node * D.247354;
  union tree_node * D.247353;
  union tree_node * D.247352;
  union tree_node * D.247351;
  union tree_node * D.247350;
  const char * D.247349;
  union tree_node * D.247348;
  const char * D.247347;
  const char * D.247346;
  struct function * D.247345;
  struct cgraph_node * D.247344;
  struct relate_type relate_type;
  long unsigned int x;
  struct pt_solution * pt2;
  const char * name;
  struct pt_solution * pt1;
  struct ptr_info_def * pi4;
  struct ptr_info_def * pi3;
  struct ptr_info_def * pi2;
  struct ptr_info_def * pi1;
  struct gimple * def_stmt;
  union tree_node * second;
  struct pt_solution * pt4;
  struct pt_solution * pt3;
  struct pt_solution * pt2;
  struct pt_solution * pt1;
  struct gimple * def_stmt2;
  struct gimple * def_stmt;
  union tree_node * first;
  long unsigned int x;
  struct pt_solution * pt2;
  struct pt_solution * pt1;
  struct ptr_info_def * pi4;
  struct ptr_info_def * pi3;
  struct ptr_info_def * pi2;
  struct ptr_info_def * pi1;
  const char * name;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct function_relate_array fun_array;
  struct vector relate_type_array;
  int seccount;
  int fucntion_level;
  union tree_node * t;
  struct basic_block_def * bb;
  struct cgraph_edge * e;
  bool retval.328;
  bool retval.325;
  bool retval.296;
  bool iftmp.295;
  bool retval.294;
  bool retval.293;
  bool retval.292;
  bool retval.288;
  bool iftmp.279;
  bool retval.278;
  bool retval.277;
  bool retval.267;
  bool iftmp.265;
  bool retval.264;
  bool retval.228;
  bool retval.227;
  bool retval.226;
  bool retval.224;
  bool retval.223;
  bool retval.221;
  bool retval.220;
  bool retval.219;
  bool retval.218;
  bool retval.217;
  bool retval.216;
  bool retval.215;
  bool iftmp.214;
  bool retval.213;
  bool iftmp.211;
  bool retval.210;
  bool iftmp.209;
  bool retval.208;
  bool retval.202;
  bool retval.201;
  bool retval.199;
  bool retval.198;
  bool retval.196;
  bool iftmp.195;
  bool retval.194;
  bool retval.193;
  bool retval.189;
  bool retval.188;

  <bb 2> :
  if (node == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 307>; [INV]

  <bb 4> :
  symtab.179_1 = symtab;
  D.247344 = symbol_table::first_defined_function (symtab.179_1);
  node = D.247344;
  goto <bb 305>; [INV]

  <bb 5> :
  fucntion_level = 0;
  D.247345 = cgraph_node::get_fun (node);
  _2 = D.247345;
  push_cfun (_2);
  cfun.180_3 = cfun;
  if (cfun.180_3 == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  pop_cfun ();
  // predicted unlikely by continue predictor.
  goto <bb 304>; [INV]

  <bb 7> :
  cfun.181_4 = cfun;
  _5 = cfun.181_4->decl;
  if (function_tree == _5)
    goto <bb 8>; [INV]
  else
    goto <bb 303>; [INV]

  <bb 8> :
  now_relatelaststmt = 0B;
  calculate_dominance_info (1);

  <bb 9> :
  D.247346 = get_name (function_tree);

  <bb 10> :
  _6 = D.247346;
  stderr.182_7 = stderr;
  fprintf (stderr.182_7, "\x1b[40;36m ======= node_fun:%s========= \x1b[0m\n", _6);

  <bb 11> :
  mallocStmt_tree.183_8 = mallocStmt_tree;
  D.247347 = get_name (mallocStmt_tree.183_8);

  <bb 12> :
  _9 = D.247347;
  stderr.184_10 = stderr;
  fprintf (stderr.184_10, "\x1b[40;36m ======= find relate stmt with %s ========= \x1b[0m\n", _9);

  <bb 13> :
  seccount = 0;
  cfun.185_11 = cfun;
  _12 = cfun.185_11->cfg;
  _13 = _12->x_entry_block_ptr;
  bb = _13->next_bb;
  goto <bb 291>; [INV]

  <bb 14> :
  tracerelatestmt.186_14 = tracerelatestmt;
  _15 = ~tracerelatestmt.186_14;
  if (_15 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  freemod.187_16 = freemod;
  _17 = ~freemod.187_16;
  if (_17 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  fistconunt = 0;

  <bb 17> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 289>; [INV]

  <bb 18> :
  gc = gsi_stmt (gsi);
  retval.188 = is_gimple_call (gc);
  if (retval.188 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 19> :
  D.247348 = gimple_call_fn (gc);

  <bb 20> :
  _18 = D.247348;
  D.247349 = get_name (_18);

  <bb 21> :
  name = D.247349;
  if (name != 0B)
    goto <bb 22>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 22> :
  _19 = strcmp (name, "pthread_exit");
  if (_19 == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  debug_gimple_stmt (gc);

  <bb 24> :
  retval.189 = is_gimple_assign (gc);
  if (retval.189 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 223>; [INV]

  <bb 25> :
  mallocStmt_tree.190_20 = mallocStmt_tree;
  pi1 = mallocStmt_tree.190_20->ssa_name.info.ptr_info;
  pt1 = &pi1->pt;
  if (pt1 != 0B)
    goto <bb 26>; [INV]
  else
    goto <bb 172>; [INV]

  <bb 26> :
  relatemod.191_21 = relatemod;
  if (relatemod.191_21 != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 172>; [INV]

  <bb 27> :
  mallocStmt_tree.192_22 = mallocStmt_tree;
  _23 = mallocStmt_tree.192_22->base.code;
  if (_23 == 153)
    goto <bb 28>; [INV]
  else
    goto <bb 172>; [INV]

  <bb 28> :
  D.247350 = gimple_assign_lhs (gc);

  <bb 29> :
  _24 = D.247350;
  retval.193 = _24 != 0B;
  if (retval.193 != 0)
    goto <bb 30>; [INV]
  else
    goto <bb 172>; [INV]

  <bb 30> :
  D.247351 = gimple_assign_lhs (gc);

  <bb 31> :
  _25 = D.247351;
  _26 = _25->base.code;
  if (_26 == 153)
    goto <bb 34>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 32> :
  D.247352 = gimple_assign_lhs (gc);

  <bb 33> :
  _27 = D.247352;
  _28 = _27->base.code;
  if (_28 == 165)
    goto <bb 34>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 34> :
  iftmp.195 = 1;
  goto <bb 36>; [INV]

  <bb 35> :
  iftmp.195 = 0;

  <bb 36> :
  retval.194 = iftmp.195;
  if (retval.194 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 172>; [INV]

  <bb 37> :
  D.247353 = gimple_assign_lhs (gc);

  <bb 38> :
  _29 = D.247353;
  pi2 = _29->ssa_name.info.ptr_info;
  pt2 = &pi2->pt;
  if (pt2 != 0B)
    goto <bb 39>; [INV]
  else
    goto <bb 172>; [INV]

  <bb 39> :
  D.247354 = gimple_assign_lhs (gc);

  <bb 40> :
  _30 = D.247354;
  mallocStmt_tree.197_31 = mallocStmt_tree;
  D.247355 = ptr_derefs_may_alias_p (mallocStmt_tree.197_31, _30);

  <bb 41> :
  retval.196 = D.247355;
  if (retval.196 != 0)
    goto <bb 42>; [INV]
  else
    goto <bb 172>; [INV]

  <bb 42> :
  D.247356 = gimple_assign_rhs1 (gc);

  <bb 43> :
  _32 = D.247356;
  retval.198 = _32 != 0B;
  if (retval.198 != 0)
    goto <bb 44>; [INV]
  else
    goto <bb 127>; [INV]

  <bb 44> :
  D.247357 = gimple_assign_lhs (gc);

  <bb 45> :
  _33 = D.247357;
  mallocStmt_tree.200_34 = mallocStmt_tree;
  D.247358 = ptr_derefs_may_alias_p (mallocStmt_tree.200_34, _33);

  <bb 46> :
  retval.199 = D.247358;
  if (retval.199 != 0)
    goto <bb 47>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 47> :
  D.247359 = gimple_assign_lhs (gc);

  <bb 48> :
  _35 = D.247359;
  _36 = _35->base.code;
  retval.201 = _36 == 131;
  if (retval.201 != 0)
    goto <bb 49>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 49> :
  D.247360 = gimple_assign_rhs1 (gc);

  <bb 50> :
  _37 = D.247360;
  mallocStmt_tree.203_38 = mallocStmt_tree;
  D.247361 = ptr_derefs_may_alias_p (mallocStmt_tree.203_38, _37);

  <bb 51> :
  retval.202 = D.247361;
  if (retval.202 != 0)
    goto <bb 52>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 52> :
  D.247362 = gimple_assign_rhs1 (gc);

  <bb 53> :
  _39 = D.247362;
  debug_tree (_39);

  <bb 54> :
  stderr.204_40 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.204_40);

  <bb 55> :
  stderr.205_41 = stderr;
  __builtin_fwrite ("\x1b[40;35m this pointer possible  reference other address (rhs)\x1b[0m\n", 1, 66, stderr.205_41);

  <bb 56> :
  stderr.206_42 = stderr;
  __builtin_fwrite ("\x1b[40;35m or assign other value \x1b[0m\n", 1, 36, stderr.206_42);

  <bb 57> :
  stderr.207_43 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.207_43);

  <bb 58> :
  D.247363 = gimple_assign_lhs (gc);

  <bb 59> :
  _44 = D.247363;
  _45 = _44->base.code;
  if (_45 == 153)
    goto <bb 60>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 60> :
  D.247364 = gimple_assign_rhs1 (gc);

  <bb 61> :
  _46 = D.247364;
  _47 = _46->base.code;
  if (_47 == 26)
    goto <bb 62>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 62> :
  iftmp.209 = 1;
  goto <bb 64>; [INV]

  <bb 63> :
  iftmp.209 = 0;

  <bb 64> :
  retval.208 = iftmp.209;
  if (retval.208 != 0)
    goto <bb 65>; [INV]
  else
    goto <bb 66>; [INV]

  <bb 65> :
  // predicted unlikely by continue predictor.
  goto <bb 288>; [INV]

  <bb 66> :
  D.247365 = gimple_assign_lhs (gc);

  <bb 67> :
  _48 = D.247365;
  _49 = _48->base.code;
  if (_49 == 165)
    goto <bb 68>; [INV]
  else
    goto <bb 71>; [INV]

  <bb 68> :
  D.247366 = gimple_assign_rhs1 (gc);

  <bb 69> :
  _50 = D.247366;
  _51 = _50->base.code;
  if (_51 == 26)
    goto <bb 70>; [INV]
  else
    goto <bb 71>; [INV]

  <bb 70> :
  iftmp.211 = 1;
  goto <bb 72>; [INV]

  <bb 71> :
  iftmp.211 = 0;

  <bb 72> :
  retval.210 = iftmp.211;
  if (retval.210 != 0)
    goto <bb 73>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 73> :
  D.247367 = gimple_assign_lhs (gc);

  <bb 74> :
  _52 = D.247367;
  first = _52->exp.operands[0];
  def_stmt = first->ssa_name.def_stmt;
  mallocStmt_tree.212_53 = mallocStmt_tree;
  def_stmt2 = mallocStmt_tree.212_53->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 75>; [INV]
  else
    goto <bb 127>; [INV]

  <bb 75> :
  if (def_stmt2 != 0B)
    goto <bb 76>; [INV]
  else
    goto <bb 127>; [INV]

  <bb 76> :
  pi4 = first->ssa_name.info.ptr_info;
  pt1 = &pi4->pt;
  pt2 = &pi1->pt;
  if (pt1 == 0B)
    goto <bb 78>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 77> :
  _54 = BIT_FIELD_REF <*pt1, 8, 0>;
  _55 = _54 & 1;
  if (_55 != 0)
    goto <bb 78>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 78> :
  // predicted unlikely by continue predictor.
  goto <bb 288>; [INV]

  <bb 79> :
  _56 = is_gimple_assign (def_stmt);
  if (_56 != 0)
    goto <bb 80>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 80> :
  _57 = is_gimple_assign (def_stmt2);
  if (_57 != 0)
    goto <bb 81>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 81> :
  iftmp.214 = 1;
  goto <bb 83>; [INV]

  <bb 82> :
  iftmp.214 = 0;

  <bb 83> :
  retval.213 = iftmp.214;
  if (retval.213 != 0)
    goto <bb 84>; [INV]
  else
    goto <bb 127>; [INV]

  <bb 84> :
  D.247368 = gimple_assign_rhs1 (def_stmt);

  <bb 85> :
  _58 = D.247368;
  _59 = _58->base.code;
  _60 = (tree_code) _59;
  D.247369 = get_tree_code_name (_60);

  <bb 86> :
  _61 = D.247369;
  _62 = strcmp (_61, "<invalid tree code>");
  retval.215 = _62 == 0;
  if (retval.215 != 0)
    goto <bb 87>; [INV]
  else
    goto <bb 127>; [INV]

  <bb 87> :
  D.247370 = gimple_assign_rhs1 (def_stmt2);

  <bb 88> :
  _63 = D.247370;
  _64 = _63->base.code;
  _65 = (tree_code) _64;
  D.247371 = get_tree_code_name (_65);

  <bb 89> :
  _66 = D.247371;
  _67 = strcmp (_66, "<invalid tree code>");
  retval.216 = _67 == 0;
  if (retval.216 != 0)
    goto <bb 90>; [INV]
  else
    goto <bb 127>; [INV]

  <bb 90> :
  _68 = BIT_FIELD_REF <*pt1, 8, 0>;
  _69 = _68 & 2;
  if (_69 == 0)
    goto <bb 91>; [INV]
  else
    goto <bb 106>; [INV]

  <bb 91> :
  _70 = BIT_FIELD_REF <*pt2, 8, 0>;
  _71 = _70 & 2;
  if (_71 == 0)
    goto <bb 92>; [INV]
  else
    goto <bb 106>; [INV]

  <bb 92> :
  D.247372 = gimple_assign_rhs1 (def_stmt2);

  <bb 93> :
  _72 = D.247372;
  retval.217 = _72 != 0B;
  if (retval.217 != 0)
    goto <bb 94>; [INV]
  else
    goto <bb 105>; [INV]

  <bb 94> :
  D.247373 = gimple_assign_rhs1 (def_stmt2);

  <bb 95> :
  _73 = D.247373;
  _74 = is_global_var (_73);
  retval.218 = ~_74;
  if (retval.218 != 0)
    goto <bb 96>; [INV]
  else
    goto <bb 104>; [INV]

  <bb 96> :
  if (pt1 != 0B)
    goto <bb 97>; [INV]
  else
    goto <bb 105>; [INV]

  <bb 97> :
  D.247374 = gimple_assign_rhs1 (def_stmt);

  <bb 98> :
  _75 = D.247374;
  retval.219 = _75 != 0B;
  if (retval.219 != 0)
    goto <bb 99>; [INV]
  else
    goto <bb 105>; [INV]

  <bb 99> :
  D.247375 = gimple_assign_rhs1 (def_stmt);

  <bb 100> :
  _76 = D.247375;
  retval.220 = is_global_var (_76);
  if (retval.220 != 0)
    goto <bb 101>; [INV]
  else
    goto <bb 105>; [INV]

  <bb 101> :
  mallocStmt_tree.222_77 = mallocStmt_tree;
  D.247376 = ptr_derefs_may_alias_p (mallocStmt_tree.222_77, first);

  <bb 102> :
  _78 = D.247376;
  retval.221 = ~_78;
  if (retval.221 != 0)
    goto <bb 103>; [INV]
  else
    goto <bb 105>; [INV]

  <bb 103> :
  // predicted unlikely by continue predictor.
  goto <bb 288>; [INV]

  <bb 104> :
  // predicted unlikely by continue predictor.
  goto <bb 288>; [INV]

  <bb 105> :
  goto <bb 107>; [INV]

  <bb 106> :
  // predicted unlikely by continue predictor.
  goto <bb 288>; [INV]

  <bb 107> :
  goto <bb 127>; [INV]

  <bb 108> :
  D.247377 = gimple_assign_rhs1 (gc);

  <bb 109> :
  _79 = D.247377;
  _80 = _79->base.code;
  retval.223 = _80 == 36;
  if (retval.223 != 0)
    goto <bb 110>; [INV]
  else
    goto <bb 116>; [INV]

  <bb 110> :
  D.247378 = gimple_assign_lhs (gc);

  <bb 111> :
  _81 = D.247378;
  mallocStmt_tree.225_82 = mallocStmt_tree;
  D.247379 = ptr_derefs_may_alias_p (mallocStmt_tree.225_82, _81);

  <bb 112> :
  retval.224 = D.247379;
  if (retval.224 != 0)
    goto <bb 113>; [INV]
  else
    goto <bb 127>; [INV]

  <bb 113> :
  D.247380 = gimple_assign_rhs1 (gc);

  <bb 114> :
  _83 = D.247380;
  retval.226 = is_global_var (_83);
  if (retval.226 != 0)
    goto <bb 115>; [INV]
  else
    goto <bb 127>; [INV]

  <bb 115> :
  // predicted unlikely by continue predictor.
  goto <bb 288>; [INV]

  <bb 116> :
  D.247381 = gimple_assign_rhs1 (gc);

  <bb 117> :
  _84 = D.247381;
  _85 = _84->base.code;
  retval.227 = _85 == 153;
  if (retval.227 != 0)
    goto <bb 118>; [INV]
  else
    goto <bb 127>; [INV]

  <bb 118> :
  D.247382 = gimple_assign_lhs (gc);

  <bb 119> :
  _86 = D.247382;
  pi3 = _86->ssa_name.info.ptr_info;
  D.247383 = gimple_assign_rhs1 (gc);

  <bb 120> :
  _87 = D.247383;
  pi4 = _87->ssa_name.info.ptr_info;
  pt3 = &pi3->pt;
  pt4 = &pi4->pt;
  if (pt3 == 0B)
    goto <bb 122>; [INV]
  else
    goto <bb 121>; [INV]

  <bb 121> :
  if (pt4 == 0B)
    goto <bb 122>; [INV]
  else
    goto <bb 123>; [INV]

  <bb 122> :
  // predicted unlikely by continue predictor.
  goto <bb 288>; [INV]

  <bb 123> :
  D.247384 = gimple_assign_rhs1 (gc);

  <bb 124> :
  _88 = D.247384;
  mallocStmt_tree.229_89 = mallocStmt_tree;
  D.247385 = ptr_derefs_may_alias_p (mallocStmt_tree.229_89, _88);

  <bb 125> :
  _90 = D.247385;
  retval.228 = ~_90;
  if (retval.228 != 0)
    goto <bb 126>; [INV]
  else
    goto <bb 127>; [INV]

  <bb 126> :
  // predicted unlikely by continue predictor.
  goto <bb 288>; [INV]

  <bb 127> :
  mallocStmt_tree.230_91 = mallocStmt_tree;
  D.247386 = get_name (mallocStmt_tree.230_91);

  <bb 128> :
  _92 = D.247386;
  stderr.231_93 = stderr;
  fprintf (stderr.231_93, "\x1b[40;36m ======= relate node_fun argument:%s========= \x1b[0m\n", _92);

  <bb 129> :
  D.247387 = gimple_assign_lhs (gc);

  <bb 130> :
  _94 = D.247387;
  D.247388 = get_name (_94);

  <bb 131> :
  _95 = D.247388;
  stderr.232_96 = stderr;
  fprintf (stderr.232_96, "\x1b[40;36m ======= relate gimple_assign_lhs:%s========= \x1b[0m\n", _95);

  <bb 132> :
  _97 = rand ();
  x = (long unsigned int) _97;
  debugmod.233_98 = debugmod;
  if (debugmod.233_98 != 0)
    goto <bb 133>; [INV]
  else
    goto <bb 163>; [INV]

  <bb 133> :
  freemod.234_99 = freemod;
  if (freemod.234_99 != 0)
    goto <bb 134>; [INV]
  else
    goto <bb 142>; [INV]

  <bb 134> :
  if (seccount == 0)
    goto <bb 135>; [INV]
  else
    goto <bb 136>; [INV]

  <bb 135> :
  stderr.235_100 = stderr;
  __builtin_fwrite ("dot graph arrow", 1, 15, stderr.235_100);
  goto <bb 141>; [INV]

  <bb 136> :
  now_laststmt.236_101 = now_laststmt;
  if (now_laststmt.236_101 != 0B)
    goto <bb 137>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 137> :
  now_laststmtid.237_102 = now_laststmtid;
  stderr.238_103 = stderr;
  fprintf (stderr.238_103, "dot graph relate stm2 start ID : %lu stmt(free) :", now_laststmtid.237_102);

  <bb 138> :
  now_laststmt.239_104 = now_laststmt;
  debug (now_laststmt.239_104);

  <bb 139> :
  now_laststmt.240_105 = now_laststmt;
  _106 = gimple_location_safe (now_laststmt.240_105);
  warning_at (_106, 0, "use location");

  <bb 140> :
  stderr.241_107 = stderr;
  __builtin_fwrite ("dot graph relate en1\n\n", 1, 22, stderr.241_107);

  <bb 141> :
  stderr.242_108 = stderr;
  __builtin_fwrite ("dot graph start relate for1", 1, 27, stderr.242_108);
  goto <bb 152>; [INV]

  <bb 142> :
  fistconunt.243_109 = fistconunt;
  if (fistconunt.243_109 == 0)
    goto <bb 143>; [INV]
  else
    goto <bb 145>; [INV]

  <bb 143> :
  stderr.244_110 = stderr;
  __builtin_fwrite ("dot graph start relate form", 1, 27, stderr.244_110);

  <bb 144> :
  fistconunt.245_111 = fistconunt;
  _112 = fistconunt.245_111 + 1;
  fistconunt = _112;
  goto <bb 152>; [INV]

  <bb 145> :
  now_laststmt.246_113 = now_laststmt;
  if (now_laststmt.246_113 != 0B)
    goto <bb 146>; [INV]
  else
    goto <bb 151>; [INV]

  <bb 146> :
  now_laststmtid.247_114 = now_laststmtid;
  stderr.248_115 = stderr;
  fprintf (stderr.248_115, "dot graph relate stm2 start ID : %lu stmt(free) :", now_laststmtid.247_114);

  <bb 147> :
  now_laststmt.249_116 = now_laststmt;
  debug (now_laststmt.249_116);

  <bb 148> :
  now_laststmt.250_117 = now_laststmt;
  _118 = gimple_location_safe (now_laststmt.250_117);
  warning_at (_118, 0, "use location");

  <bb 149> :
  stderr.251_119 = stderr;
  __builtin_fwrite ("dot graph relate en1\n\n", 1, 22, stderr.251_119);

  <bb 150> :
  now_laststmt = gc;
  now_laststmtid = x;

  <bb 151> :
  stderr.252_120 = stderr;
  __builtin_fwrite ("dot graph start relate for1", 1, 27, stderr.252_120);

  <bb 152> :
  now_fucntion.253_121 = now_fucntion;
  stderr.254_122 = stderr;
  fprintf (stderr.254_122, "ID : %lu\n", now_fucntion.253_121);

  <bb 153> :
  _123 = gimple_bb (gc);
  _124 = _123->index;
  D.247389 = get_name (function_tree);

  <bb 154> :
  _125 = D.247389;
  stderr.255_126 = stderr;
  fprintf (stderr.255_126, "from %s basic block %d", _125, _124);

  <bb 155> :
  stderr.256_127 = stderr;
  __builtin_fwrite ("dot graph end relate end\n\n", 1, 26, stderr.256_127);

  <bb 156> :
  fistconunt.257_128 = fistconunt;
  _129 = fistconunt.257_128 + 1;
  fistconunt = _129;
  _130 = gimple_location_safe (gc);
  warning_at (_130, 0, "use location");

  <bb 157> :
  debug (gc);

  <bb 158> :
  stderr.258_131 = stderr;
  fprintf (stderr.258_131, "dot graph relate stmt start ID : %lu stmt(LHS) :", x);

  <bb 159> :
  _132 = gimple_location_safe (gc);
  warning_at (_132, 0, "use location");

  <bb 160> :
  D.247390 = gimple_assign_lhs (gc);

  <bb 161> :
  _133 = D.247390;
  debug (_133);

  <bb 162> :
  stderr.259_134 = stderr;
  __builtin_fwrite ("dot graph relate end\n\n", 1, 22, stderr.259_134);
  goto <bb 168>; [INV]

  <bb 163> :
  _135 = gimple_location_safe (gc);
  warning_at (_135, 0, "use location");

  <bb 164> :
  debug (gc);

  <bb 165> :
  _136 = gimple_location_safe (gc);
  warning_at (_136, 0, "use location");

  <bb 166> :
  D.247391 = gimple_assign_lhs (gc);

  <bb 167> :
  _137 = D.247391;
  debug (_137);

  <bb 168> :
  now_relatelaststmt = gc;
  now_relatelaststmtid = x;
  now_laststmtid = x;
  stderr.260_138 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.260_138);

  <bb 169> :
  stderr.261_139 = stderr;
  __builtin_fwrite ("\x1b[40;35m this pointer possible reference other address \x1b[0m\n", 1, 60, stderr.261_139);

  <bb 170> :
  stderr.262_140 = stderr;
  __builtin_fwrite ("\x1b[40;35m or assign other value \x1b[0m\n", 1, 36, stderr.262_140);

  <bb 171> :
  stderr.263_141 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.263_141);

  <bb 172> :
  D.247392 = gimple_assign_lhs (gc);

  <bb 173> :
  _142 = D.247392;
  _143 = _142->base.code;
  if (_143 == 49)
    goto <bb 175>; [INV]
  else
    goto <bb 174>; [INV]

  <bb 174> :
  mallocStmt_tree.266_144 = mallocStmt_tree;
  _145 = mallocStmt_tree.266_144->base.code;
  if (_145 == 153)
    goto <bb 175>; [INV]
  else
    goto <bb 176>; [INV]

  <bb 175> :
  iftmp.265 = 1;
  goto <bb 177>; [INV]

  <bb 176> :
  iftmp.265 = 0;

  <bb 177> :
  retval.264 = iftmp.265;
  if (retval.264 != 0)
    goto <bb 178>; [INV]
  else
    goto <bb 288>; [INV]

  <bb 178> :
  second = 0B;
  D.247393 = gimple_assign_lhs (gc);

  <bb 179> :
  _146 = D.247393;
  second = _146->exp.operands[0];
  D.247394 = gimple_assign_lhs (gc);

  <bb 180> :
  _147 = D.247394;
  _148 = _147->base.code;
  retval.267 = _148 == 49;
  if (retval.267 != 0)
    goto <bb 181>; [INV]
  else
    goto <bb 183>; [INV]

  <bb 181> :
  D.247395 = gimple_assign_lhs (gc);

  <bb 182> :
  _149 = D.247395;
  second = _149->exp.operands[0];

  <bb 183> :
  if (second != 0B)
    goto <bb 184>; [INV]
  else
    goto <bb 197>; [INV]

  <bb 184> :
  mallocStmt_tree.268_150 = mallocStmt_tree;
  _151 = mallocStmt_tree.268_150->base.code;
  if (_151 == 36)
    goto <bb 185>; [INV]
  else
    goto <bb 197>; [INV]

  <bb 185> :
  _152 = second->base.code;
  if (_152 == 36)
    goto <bb 186>; [INV]
  else
    goto <bb 197>; [INV]

  <bb 186> :
  mallocStmt_tree.269_153 = mallocStmt_tree;
  if (second == mallocStmt_tree.269_153)
    goto <bb 187>; [INV]
  else
    goto <bb 197>; [INV]

  <bb 187> :
  D.247396 = get_name (function_tree);

  <bb 188> :
  _154 = D.247396;
  stderr.270_155 = stderr;
  fprintf (stderr.270_155, "\x1b[40;36m ======= relate node_fun argument:%s========= \x1b[0m\n", _154);

  <bb 189> :
  D.247397 = gimple_assign_lhs (gc);

  <bb 190> :
  _156 = D.247397;
  stderr.271_157 = stderr;
  fprintf (stderr.271_157, "\x1b[40;36m ======= relate gimple_assign_lhs:%s========= \x1b[0m\n", _156);

  <bb 191> :
  debug_gimple_stmt (gc);

  <bb 192> :
  _158 = gimple_location_safe (gc);
  warning_at (_158, 0, "use location");

  <bb 193> :
  stderr.272_159 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.272_159);

  <bb 194> :
  stderr.273_160 = stderr;
  __builtin_fwrite ("\x1b[40;35m this pointer possible  reference other address \x1b[0m\n", 1, 61, stderr.273_160);

  <bb 195> :
  stderr.274_161 = stderr;
  __builtin_fwrite ("\x1b[40;35m or assign other value \x1b[0m\n", 1, 36, stderr.274_161);

  <bb 196> :
  stderr.275_162 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.275_162);

  <bb 197> :
  if (second == 0B)
    goto <bb 198>; [INV]
  else
    goto <bb 288>; [INV]

  <bb 198> :
  mallocStmt_tree.276_163 = mallocStmt_tree;
  _164 = mallocStmt_tree.276_163->base.code;
  if (_164 == 153)
    goto <bb 199>; [INV]
  else
    goto <bb 288>; [INV]

  <bb 199> :
  D.247398 = gimple_assign_rhs1 (gc);

  <bb 200> :
  _165 = D.247398;
  _166 = _165->base.code;
  retval.277 = _166 == 153;
  if (retval.277 != 0)
    goto <bb 201>; [INV]
  else
    goto <bb 288>; [INV]

  <bb 201> :
  D.247399 = gimple_assign_rhs1 (gc);

  <bb 202> :
  _167 = D.247399;
  def_stmt = _167->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 203>; [INV]
  else
    goto <bb 288>; [INV]

  <bb 203> :
  _168 = gimple_code (def_stmt);
  if (_168 != 18)
    goto <bb 204>; [INV]
  else
    goto <bb 211>; [INV]

  <bb 204> :
  D.247400 = gimple_assign_lhs (gc);

  <bb 205> :
  _169 = D.247400;
  mallocStmt_tree.280_170 = mallocStmt_tree;
  D.247401 = ptr_derefs_may_alias_p (mallocStmt_tree.280_170, _169);

  <bb 206> :
  _171 = D.247401;
  if (_171 != 0)
    goto <bb 207>; [INV]
  else
    goto <bb 211>; [INV]

  <bb 207> :
  D.247402 = gimple_assign_rhs1 (gc);

  <bb 208> :
  _172 = D.247402;
  mallocStmt_tree.281_173 = mallocStmt_tree;
  D.247403 = ptr_derefs_may_alias_p (mallocStmt_tree.281_173, _172);

  <bb 209> :
  _174 = D.247403;
  if (_174 != 0)
    goto <bb 210>; [INV]
  else
    goto <bb 211>; [INV]

  <bb 210> :
  iftmp.279 = 1;
  goto <bb 212>; [INV]

  <bb 211> :
  iftmp.279 = 0;

  <bb 212> :
  retval.278 = iftmp.279;
  if (retval.278 != 0)
    goto <bb 213>; [INV]
  else
    goto <bb 288>; [INV]

  <bb 213> :
  D.247404 = get_name (function_tree);

  <bb 214> :
  _175 = D.247404;
  stderr.282_176 = stderr;
  fprintf (stderr.282_176, "\x1b[40;36m ======= relate node_fun argument:%s========= \x1b[0m\n", _175);

  <bb 215> :
  D.247405 = gimple_assign_lhs (gc);

  <bb 216> :
  _177 = D.247405;
  stderr.283_178 = stderr;
  fprintf (stderr.283_178, "\x1b[40;36m ======= relate gimple_assign_lhs:%s========= \x1b[0m\n", _177);

  <bb 217> :
  debug_gimple_stmt (gc);

  <bb 218> :
  _179 = gimple_location_safe (gc);
  warning_at (_179, 0, "use location");

  <bb 219> :
  stderr.284_180 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.284_180);

  <bb 220> :
  stderr.285_181 = stderr;
  __builtin_fwrite ("\x1b[40;35m this pointer possible  reference other address \x1b[0m\n", 1, 61, stderr.285_181);

  <bb 221> :
  stderr.286_182 = stderr;
  __builtin_fwrite ("\x1b[40;35m or assign other value \x1b[0m\n", 1, 36, stderr.286_182);

  <bb 222> :
  stderr.287_183 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.287_183);
  goto <bb 288>; [INV]

  <bb 223> :
  _184 = is_gimple_call (gc);
  _185 = (long int) _184;
  retval.288 = _185 != 0;
  if (retval.288 != 0)
    goto <bb 224>; [INV]
  else
    goto <bb 288>; [INV]

  <bb 224> :
  mallocStmt_tree.289_186 = mallocStmt_tree;
  pi1 = mallocStmt_tree.289_186->ssa_name.info.ptr_info;
  pt1 = &pi1->pt;
  if (pt1 != 0B)
    goto <bb 225>; [INV]
  else
    goto <bb 288>; [INV]

  <bb 225> :
  relatemod.290_187 = relatemod;
  if (relatemod.290_187 != 0)
    goto <bb 226>; [INV]
  else
    goto <bb 288>; [INV]

  <bb 226> :
  debugmod.291_188 = debugmod;
  if (debugmod.291_188 != 0)
    goto <bb 227>; [INV]
  else
    goto <bb 288>; [INV]

  <bb 227> :
  D.247406 = gimple_call_num_args (gc);

  <bb 228> :
  _189 = D.247406;
  retval.292 = _189 != 0;
  if (retval.292 != 0)
    goto <bb 229>; [INV]
  else
    goto <bb 288>; [INV]

  <bb 229> :
  D.247407 = gimple_call_fn (gc);

  <bb 230> :
  _190 = D.247407;
  D.247408 = get_name (_190);

  <bb 231> :
  name = D.247408;
  D.247409 = gimple_call_lhs (gc);

  <bb 232> :
  _191 = D.247409;
  retval.293 = _191 != 0B;
  if (retval.293 != 0)
    goto <bb 233>; [INV]
  else
    goto <bb 288>; [INV]

  <bb 233> :
  D.247410 = gimple_call_lhs (gc);

  <bb 234> :
  _192 = D.247410;
  _193 = _192->base.code;
  if (_193 == 153)
    goto <bb 240>; [INV]
  else
    goto <bb 235>; [INV]

  <bb 235> :
  D.247411 = gimple_call_arg (gc, 0);

  <bb 236> :
  _194 = D.247411;
  _195 = _194->base.code;
  if (_195 == 153)
    goto <bb 240>; [INV]
  else
    goto <bb 237>; [INV]

  <bb 237> :
  D.247412 = gimple_call_arg (gc, 0);

  <bb 238> :
  _196 = D.247412;
  _197 = _196->base.code;
  _198 = (tree_code) _197;
  D.247413 = get_tree_code_name (_198);

  <bb 239> :
  _199 = D.247413;
  _200 = strcmp (_199, "addr_expr");
  if (_200 == 0)
    goto <bb 240>; [INV]
  else
    goto <bb 241>; [INV]

  <bb 240> :
  iftmp.295 = 1;
  goto <bb 242>; [INV]

  <bb 241> :
  iftmp.295 = 0;

  <bb 242> :
  retval.294 = iftmp.295;
  if (retval.294 != 0)
    goto <bb 243>; [INV]
  else
    goto <bb 288>; [INV]

  <bb 243> :
  if (name != 0B)
    goto <bb 244>; [INV]
  else
    goto <bb 288>; [INV]

  <bb 244> :
  _201 = strcmp (name, "pthread_mutex_lock");
  if (_201 == 0)
    goto <bb 247>; [INV]
  else
    goto <bb 245>; [INV]

  <bb 245> :
  _202 = strcmp (name, "pthread_mutex_unlock");
  if (_202 == 0)
    goto <bb 247>; [INV]
  else
    goto <bb 246>; [INV]

  <bb 246> :
  _203 = strcmp (name, "pthread_exit");
  if (_203 == 0)
    goto <bb 247>; [INV]
  else
    goto <bb 248>; [INV]

  <bb 247> :
  // predicted unlikely by continue predictor.
  goto <bb 288>; [INV]

  <bb 248> :
  D.247414 = gimple_call_arg (gc, 0);

  <bb 249> :
  _204 = D.247414;
  pi2 = _204->ssa_name.info.ptr_info;
  pt2 = &pi2->pt;
  if (pt2 != 0B)
    goto <bb 250>; [INV]
  else
    goto <bb 288>; [INV]

  <bb 250> :
  D.247415 = gimple_call_arg (gc, 0);

  <bb 251> :
  _205 = D.247415;
  mallocStmt_tree.297_206 = mallocStmt_tree;
  D.247416 = ptr_derefs_may_alias_p (mallocStmt_tree.297_206, _205);

  <bb 252> :
  retval.296 = D.247416;
  if (retval.296 != 0)
    goto <bb 253>; [INV]
  else
    goto <bb 288>; [INV]

  <bb 253> :
  _207 = rand ();
  x = (long unsigned int) _207;
  debugmod.298_208 = debugmod;
  if (debugmod.298_208 != 0)
    goto <bb 254>; [INV]
  else
    goto <bb 283>; [INV]

  <bb 254> :
  freemod.299_209 = freemod;
  if (freemod.299_209 != 0)
    goto <bb 255>; [INV]
  else
    goto <bb 263>; [INV]

  <bb 255> :
  if (seccount == 0)
    goto <bb 256>; [INV]
  else
    goto <bb 257>; [INV]

  <bb 256> :
  stderr.300_210 = stderr;
  __builtin_fwrite ("dot graph arrow", 1, 15, stderr.300_210);
  goto <bb 262>; [INV]

  <bb 257> :
  now_laststmt.301_211 = now_laststmt;
  if (now_laststmt.301_211 != 0B)
    goto <bb 258>; [INV]
  else
    goto <bb 261>; [INV]

  <bb 258> :
  now_laststmtid.302_212 = now_laststmtid;
  stderr.303_213 = stderr;
  fprintf (stderr.303_213, "dot graph relate stm2 start ID : %lu stmt(free) :", now_laststmtid.302_212);

  <bb 259> :
  now_laststmt.304_214 = now_laststmt;
  debug (now_laststmt.304_214);

  <bb 260> :
  now_laststmt.305_215 = now_laststmt;
  _216 = gimple_location_safe (now_laststmt.305_215);
  warning_at (_216, 0, "use location");

  <bb 261> :
  stderr.306_217 = stderr;
  __builtin_fwrite ("dot graph relate en1\n\n", 1, 22, stderr.306_217);

  <bb 262> :
  stderr.307_218 = stderr;
  __builtin_fwrite ("dot graph start relate for1", 1, 27, stderr.307_218);
  goto <bb 273>; [INV]

  <bb 263> :
  fistconunt.308_219 = fistconunt;
  if (fistconunt.308_219 == 0)
    goto <bb 264>; [INV]
  else
    goto <bb 266>; [INV]

  <bb 264> :
  stderr.309_220 = stderr;
  __builtin_fwrite ("dot graph start relate form", 1, 27, stderr.309_220);

  <bb 265> :
  fistconunt.310_221 = fistconunt;
  _222 = fistconunt.310_221 + 1;
  fistconunt = _222;
  goto <bb 273>; [INV]

  <bb 266> :
  now_laststmt.311_223 = now_laststmt;
  if (now_laststmt.311_223 != 0B)
    goto <bb 267>; [INV]
  else
    goto <bb 272>; [INV]

  <bb 267> :
  now_laststmtid.312_224 = now_laststmtid;
  stderr.313_225 = stderr;
  fprintf (stderr.313_225, "dot graph relate stm2 start ID : %lu stmt(free) :", now_laststmtid.312_224);

  <bb 268> :
  now_laststmt.314_226 = now_laststmt;
  debug (now_laststmt.314_226);

  <bb 269> :
  now_laststmt.315_227 = now_laststmt;
  _228 = gimple_location_safe (now_laststmt.315_227);
  warning_at (_228, 0, "use location");

  <bb 270> :
  stderr.316_229 = stderr;
  __builtin_fwrite ("dot graph relate en1\n\n", 1, 22, stderr.316_229);

  <bb 271> :
  now_laststmt = gc;
  now_laststmtid = x;

  <bb 272> :
  stderr.317_230 = stderr;
  __builtin_fwrite ("dot graph start relate for1", 1, 27, stderr.317_230);

  <bb 273> :
  fistconunt.318_231 = fistconunt;
  _232 = fistconunt.318_231 + 1;
  fistconunt = _232;
  now_fucntion.319_233 = now_fucntion;
  stderr.320_234 = stderr;
  fprintf (stderr.320_234, "ID : %lu\n", now_fucntion.319_233);

  <bb 274> :
  _235 = gimple_bb (gc);
  _236 = _235->index;
  D.247417 = get_name (function_tree);

  <bb 275> :
  _237 = D.247417;
  stderr.321_238 = stderr;
  fprintf (stderr.321_238, "from %s basic block %d", _237, _236);

  <bb 276> :
  stderr.322_239 = stderr;
  __builtin_fwrite ("dot graph end relate end\n\n", 1, 26, stderr.322_239);

  <bb 277> :
  stderr.323_240 = stderr;
  fprintf (stderr.323_240, "dot graph relate stmt start ID : %lu stmt(call) :", x);

  <bb 278> :
  debug (gc);

  <bb 279> :
  _241 = gimple_location_safe (gc);
  warning_at (_241, 0, "use location");

  <bb 280> :
  D.247418 = gimple_call_arg (gc, 0);

  <bb 281> :
  _242 = D.247418;
  debug (_242);

  <bb 282> :
  stderr.324_243 = stderr;
  __builtin_fwrite ("dot graph relate end\n\n", 1, 22, stderr.324_243);
  goto <bb 287>; [INV]

  <bb 283> :
  debug (gc);

  <bb 284> :
  _244 = gimple_location_safe (gc);
  warning_at (_244, 0, "use location");

  <bb 285> :
  D.247419 = gimple_call_arg (gc, 0);

  <bb 286> :
  _245 = D.247419;
  debug (_245);

  <bb 287> :
  now_relatelaststmt = gc;
  now_relatelaststmtid = x;
  now_laststmtid = x;

  <bb 288> :
  gsi_next (&gsi);

  <bb 289> :
  _246 = gsi_end_p (gsi);
  retval.325 = ~_246;
  if (retval.325 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 290>; [INV]

  <bb 290> :
  gsi = {CLOBBER};
  bb = bb->next_bb;

  <bb 291> :
  cfun.326_247 = cfun;
  _248 = cfun.326_247->cfg;
  _249 = _248->x_exit_block_ptr;
  if (bb != _249)
    goto <bb 14>; [INV]
  else
    goto <bb 292>; [INV]

  <bb 292> :
  std::vector<relate_type>::vector (&relate_type_array);
  function_relate_array::function_relate_array (&fun_array);
  now_relatelaststmt.327_250 = now_relatelaststmt;
  if (now_relatelaststmt.327_250 != 0B)
    goto <bb 293>; [INV]
  else
    goto <bb 302>; [INV]

  <bb 293> :
  function_relate_collect.329_251 = function_relate_collect;
  D.247421 = hash_map<tree_node*, function_relate_array>::get (function_relate_collect.329_251, &mallocStmt_tree);

  <bb 294> :
  _252 = D.247421;
  retval.328 = _252 == 0B;
  if (retval.328 != 0)
    goto <bb 295>; [INV]
  else
    goto <bb 296>; [INV]

  <bb 295> :
  std::vector<relate_type>::operator= (&fun_array.relate_type_array, &relate_type_array);
  goto <bb 299>; [INV]

  <bb 296> :
  function_relate_collect.330_253 = function_relate_collect;
  D.247422 = hash_map<tree_node*, function_relate_array>::get (function_relate_collect.330_253, &mallocStmt_tree);

  <bb 297> :
  _254 = D.247422;
  function_relate_array::operator= (&fun_array, _254);

  <bb 298> :
  std::vector<relate_type>::operator= (&relate_type_array, &fun_array.relate_type_array);

  <bb 299> :
  relate_type::relate_type (&relate_type);
  now_relatelaststmt.331_255 = now_relatelaststmt;
  relate_type.stmt = now_relatelaststmt.331_255;
  mallocStmt_tree.332_256 = mallocStmt_tree;
  relate_type.relate_tree = mallocStmt_tree.332_256;
  relate_type.relate_funtree = function_tree;
  now_fucntion.333_257 = now_fucntion;
  _258 = (unsigned int) now_fucntion.333_257;
  relate_type.now_fucntion = _258;
  now_laststmtid.334_259 = now_laststmtid;
  _260 = (unsigned int) now_laststmtid.334_259;
  relate_type.now_stmt = _260;
  std::vector<relate_type>::push_back (&fun_array.relate_type_array, &relate_type);

  <bb 300> :
  function_relate_collect.335_261 = function_relate_collect;
  hash_map<tree_node*, function_relate_array>::put (function_relate_collect.335_261, &mallocStmt_tree, &fun_array);

  <bb 301> :
  relate_type = {CLOBBER};

  <bb 302> :
  function_relate_array::~function_relate_array (&fun_array);
  std::vector<relate_type>::~vector (&relate_type_array);
  relate_type_array = {CLOBBER};
  fun_array = {CLOBBER};

  <bb 303> :
  pop_cfun ();

  <bb 304> :
  symtab.336_262 = symtab;
  D.247427 = symbol_table::next_defined_function (symtab.336_262, node);
  node = D.247427;

  <bb 305> :
  if (node != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 306>; [INV]

  <bb 306> :
  stderr.337_263 = stderr;
  __builtin_fwrite ("fucntion collect path finsh\n", 1, 28, stderr.337_263);

  <bb 307> :
<L259>:
  return;

  <bb 308> :
<L260>:
  gsi = {CLOBBER};
  resx 2

  <bb 309> :
<L261>:
  relate_type = {CLOBBER};
  resx 6

  <bb 310> :
<L262>:
  function_relate_array::~function_relate_array (&fun_array);
  resx 5

  <bb 311> :
<L263>:
  std::vector<relate_type>::~vector (&relate_type_array);
  resx 4

  <bb 312> :
<L264>:
  relate_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  resx 1

}



;; Function is_gimple_assign (_ZL16is_gimple_assignPK6gimple, funcdef_no=2062, decl_uid=92605, cgraph_uid=1199, symbol_order=1359)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool is_gimple_assign (const struct gimple * gs)
{
  bool D.247428;

  <bb 2> :
  _1 = gimple_code (gs);
  D.247428 = _1 == 6;

  <bb 3> :
<L0>:
  return D.247428;

}



;; Function is_global_var (_ZL13is_global_varPK9tree_node, funcdef_no=1820, decl_uid=85582, cgraph_uid=968, symbol_order=1128)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool is_global_var (const union tree_node * t)
{
  bool iftmp.338;
  bool D.247430;

  <bb 2> :
  _1 = BIT_FIELD_REF <t->base, 8, 24>;
  _2 = _1 & 4;
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = BIT_FIELD_REF <t->decl_common, 8, 472>;
  _4 = _3 & 2;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.338 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.338 = 0;

  <bb 6> :
  D.247430 = iftmp.338;

  <bb 7> :
<L4>:
  return D.247430;

}



;; Function gimple_assign_rhs1 (_ZL18gimple_assign_rhs1PK6gimple, funcdef_no=2071, decl_uid=92645, cgraph_uid=1208, symbol_order=1368)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_assign_rhs1 (const struct gimple * gs)
{
  const struct gassign * D.247439;
  const struct gassign * ass;
  union tree_node * D.247437;

  <bb 2> :
  D.247439 = GIMPLE_CHECK2<const gassign*> (gs);
  ass = D.247439;
  D.247437 = gimple_assign_rhs1 (ass);

  <bb 3> :
<L0>:
  return D.247437;

}



;; Function GIMPLE_CHECK2<const gassign*> (_Z13GIMPLE_CHECK2IPK7gassignET_PK6gimple, funcdef_no=7043, decl_uid=92617, cgraph_uid=3675, symbol_order=4457)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gassign * GIMPLE_CHECK2<const gassign*> (const struct gimple * gs)
{
  const struct gassign * D.247442;
  const struct gassign * D.247440;

  <bb 2> :
  D.247442 = as_a<const gassign*, const gimple> (gs);
  D.247440 = D.247442;

  <bb 3> :
<L0>:
  return D.247440;

}



;; Function as_a<const gassign*, const gimple> (_Z4as_aIPK7gassignK6gimpleET_PT0_, funcdef_no=8033, decl_uid=205832, cgraph_uid=4665, symbol_order=5450)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gassign * as_a<const gassign*, const gimple> (const struct gimple * p)
{
  const struct gassign * D.247445;
  const struct gassign * D.247443;

  <bb 2> :
  D.247445 = is_a_helper<const gassign*>::cast<gimple> (p);
  D.247443 = D.247445;

  <bb 3> :
<L0>:
  return D.247443;

}



;; Function is_a_helper<const gassign*>::cast<gimple> (_ZN11is_a_helperIPK7gassignE4castI6gimpleEES2_PKT_, funcdef_no=8040, decl_uid=205870, cgraph_uid=4672, symbol_order=5457)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gassign * is_a_helper<const gassign*>::cast<gimple> (const struct gimple * p)
{
  const struct gassign * D.247446;

  <bb 2> :
  D.247446 = reinterpret_is_a_helper<gassign*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.247446;

}



;; Function reinterpret_is_a_helper<gassign*>::cast<gimple> (_ZN23reinterpret_is_a_helperIP7gassignE4castI6gimpleEES1_PT_, funcdef_no=8994, decl_uid=217992, cgraph_uid=5626, symbol_order=6415)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gassign * reinterpret_is_a_helper<gassign*>::cast<gimple> (struct gimple * p)
{
  struct gassign * D.247448;

  <bb 2> :
  D.247448 = p;

  <bb 3> :
<L0>:
  return D.247448;

}



;; Function gimple_assign_rhs1 (_ZL18gimple_assign_rhs1PK7gassign, funcdef_no=2070, decl_uid=92642, cgraph_uid=1207, symbol_order=1367)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_assign_rhs1 (const struct gassign * gs)
{
  union tree_node * D.247450;

  <bb 2> :
  D.247450 = gs->D.90479.op[1];

  <bb 3> :
<L0>:
  return D.247450;

}



;; Function gimple_assign_lhs (_ZL17gimple_assign_lhsPK6gimple, funcdef_no=2065, decl_uid=92614, cgraph_uid=1202, symbol_order=1362)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_assign_lhs (const struct gimple * gs)
{
  const struct gassign * D.247454;
  const struct gassign * ass;
  union tree_node * D.247452;

  <bb 2> :
  D.247454 = GIMPLE_CHECK2<const gassign*> (gs);
  ass = D.247454;
  D.247452 = gimple_assign_lhs (ass);

  <bb 3> :
<L0>:
  return D.247452;

}



;; Function gimple_assign_lhs (_ZL17gimple_assign_lhsPK7gassign, funcdef_no=2064, decl_uid=92611, cgraph_uid=1201, symbol_order=1361)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_assign_lhs (const struct gassign * gs)
{
  union tree_node * D.247455;

  <bb 2> :
  D.247455 = gs->D.90479.op[0];

  <bb 3> :
<L0>:
  return D.247455;

}



;; Function is_gimple_call (_ZL14is_gimple_callPK6gimple, funcdef_no=2100, decl_uid=92760, cgraph_uid=1237, symbol_order=1397)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool is_gimple_call (const struct gimple * gs)
{
  bool D.247457;

  <bb 2> :
  _1 = gimple_code (gs);
  D.247457 = _1 == 8;

  <bb 3> :
<L0>:
  return D.247457;

}



;; Function gimple_call_num_args (_ZL20gimple_call_num_argsPK6gimple, funcdef_no=2139, decl_uid=92913, cgraph_uid=1276, symbol_order=1436)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int gimple_call_num_args (const struct gimple * gs)
{
  const struct gcall * D.247461;
  const struct gcall * gc;
  unsigned int D.247459;

  <bb 2> :
  D.247461 = GIMPLE_CHECK2<const gcall*> (gs);
  gc = D.247461;
  D.247459 = gimple_call_num_args (gc);

  <bb 3> :
<L0>:
  return D.247459;

}



;; Function GIMPLE_CHECK2<const gcall*> (_Z13GIMPLE_CHECK2IPK5gcallET_PK6gimple, funcdef_no=7045, decl_uid=92769, cgraph_uid=3677, symbol_order=4459)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcall * GIMPLE_CHECK2<const gcall*> (const struct gimple * gs)
{
  const struct gcall * D.247464;
  const struct gcall * D.247462;

  <bb 2> :
  D.247464 = as_a<const gcall*, const gimple> (gs);
  D.247462 = D.247464;

  <bb 3> :
<L0>:
  return D.247462;

}



;; Function as_a<const gcall*, const gimple> (_Z4as_aIPK5gcallK6gimpleET_PT0_, funcdef_no=7072, decl_uid=94348, cgraph_uid=3704, symbol_order=4486)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcall * as_a<const gcall*, const gimple> (const struct gimple * p)
{
  const struct gcall * D.247467;
  const struct gcall * D.247465;

  <bb 2> :
  D.247467 = is_a_helper<const gcall*>::cast<gimple> (p);
  D.247465 = D.247467;

  <bb 3> :
<L0>:
  return D.247465;

}



;; Function is_a_helper<const gcall*>::cast<gimple> (_ZN11is_a_helperIPK5gcallE4castI6gimpleEES2_PKT_, funcdef_no=8037, decl_uid=205856, cgraph_uid=4669, symbol_order=5454)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcall * is_a_helper<const gcall*>::cast<gimple> (const struct gimple * p)
{
  const struct gcall * D.247468;

  <bb 2> :
  D.247468 = reinterpret_is_a_helper<gcall*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.247468;

}



;; Function reinterpret_is_a_helper<gcall*>::cast<gimple> (_ZN23reinterpret_is_a_helperIP5gcallE4castI6gimpleEES1_PT_, funcdef_no=8996, decl_uid=218000, cgraph_uid=5628, symbol_order=6417)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gcall * reinterpret_is_a_helper<gcall*>::cast<gimple> (struct gimple * p)
{
  struct gcall * D.247470;

  <bb 2> :
  D.247470 = p;

  <bb 3> :
<L0>:
  return D.247470;

}



;; Function gimple_call_num_args (_ZL20gimple_call_num_argsPK5gcall, funcdef_no=2138, decl_uid=92910, cgraph_uid=1275, symbol_order=1435)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int gimple_call_num_args (const struct gcall * gs)
{
  unsigned int D.247472;

  <bb 2> :
  _1 = gimple_num_ops (gs);
  D.247472 = _1 + 4294967293;

  <bb 3> :
<L0>:
  return D.247472;

}



;; Function gimple_num_ops (_ZL14gimple_num_opsPK6gimple, funcdef_no=2056, decl_uid=92581, cgraph_uid=1193, symbol_order=1353)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int gimple_num_ops (const struct gimple * gs)
{
  unsigned int D.247474;

  <bb 2> :
  D.247474 = gs->num_ops;

  <bb 3> :
<L0>:
  return D.247474;

}



;; Function gimple_call_fn (_ZL14gimple_call_fnPK6gimple, funcdef_no=2124, decl_uid=92857, cgraph_uid=1261, symbol_order=1421)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_fn (const struct gimple * gs)
{
  const struct gcall * D.247478;
  const struct gcall * gc;
  union tree_node * D.247476;

  <bb 2> :
  D.247478 = GIMPLE_CHECK2<const gcall*> (gs);
  gc = D.247478;
  D.247476 = gimple_call_fn (gc);

  <bb 3> :
<L0>:
  return D.247476;

}



;; Function gimple_call_fn (_ZL14gimple_call_fnPK5gcall, funcdef_no=2123, decl_uid=92854, cgraph_uid=1260, symbol_order=1420)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_fn (const struct gcall * gs)
{
  union tree_node * D.247479;

  <bb 2> :
  D.247479 = gs->op[1];

  <bb 3> :
<L0>:
  return D.247479;

}



;; Function gimple_call_lhs (_ZL15gimple_call_lhsPK6gimple, funcdef_no=2102, decl_uid=92766, cgraph_uid=1239, symbol_order=1399)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_lhs (const struct gimple * gs)
{
  const struct gcall * D.247483;
  const struct gcall * gc;
  union tree_node * D.247481;

  <bb 2> :
  D.247483 = GIMPLE_CHECK2<const gcall*> (gs);
  gc = D.247483;
  D.247481 = gimple_call_lhs (gc);

  <bb 3> :
<L0>:
  return D.247481;

}



;; Function gimple_call_lhs (_ZL15gimple_call_lhsPK5gcall, funcdef_no=2101, decl_uid=92763, cgraph_uid=1238, symbol_order=1398)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_lhs (const struct gcall * gs)
{
  union tree_node * D.247484;

  <bb 2> :
  D.247484 = gs->op[0];

  <bb 3> :
<L0>:
  return D.247484;

}



;; Function gimple_bb (_ZL9gimple_bbPK6gimple, funcdef_no=2000, decl_uid=92273, cgraph_uid=1137, symbol_order=1297)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * gimple_bb (const struct gimple * g)
{
  struct basic_block_def * D.247486;

  <bb 2> :
  D.247486 = g->bb;

  <bb 3> :
<L0>:
  return D.247486;

}



;; Function gimple_call_arg (_ZL15gimple_call_argPK6gimplej, funcdef_no=2141, decl_uid=92922, cgraph_uid=1278, symbol_order=1438)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_arg (const struct gimple * gs, unsigned int index)
{
  const struct gcall * D.247490;
  const struct gcall * gc;
  union tree_node * D.247488;

  <bb 2> :
  D.247490 = GIMPLE_CHECK2<const gcall*> (gs);
  gc = D.247490;
  D.247488 = gimple_call_arg (gc, index);

  <bb 3> :
<L0>:
  return D.247488;

}



;; Function gimple_call_arg (_ZL15gimple_call_argPK5gcallj, funcdef_no=2140, decl_uid=92918, cgraph_uid=1277, symbol_order=1437)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_arg (const struct gcall * gs, unsigned int index)
{
  union tree_node * D.247491;

  <bb 2> :
  _1 = index + 3;
  D.247491 = gs->op[_1];

  <bb 3> :
<L0>:
  return D.247491;

}



;; Function std::vector<relate_type>::vector (_ZNSt6vectorI11relate_typeSaIS0_EEC2Ev, funcdef_no=6304, decl_uid=179788, cgraph_uid=3279, symbol_order=4055)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<relate_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.179796;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_ZNSt12_Vector_baseI11relate_typeSaIS0_EEC2Ev, funcdef_no=6302, decl_uid=179246, cgraph_uid=3276, symbol_order=4052)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7631, decl_uid=179138, cgraph_uid=4263, symbol_order=5048)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<relate_type>::allocator (this);
  _1 = &this->D.179141;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<relate_type>::allocator (_ZNSaI11relate_typeEC2Ev, funcdef_no=8480, decl_uid=178916, cgraph_uid=5112, symbol_order=5901)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<relate_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<relate_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11relate_typeEC2Ev, funcdef_no=9244, decl_uid=178845, cgraph_uid=5876, symbol_order=6665)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8483, decl_uid=179088, cgraph_uid=5115, symbol_order=5904)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function function_relate_array::function_relate_array (_ZN21function_relate_arrayC2Ev, funcdef_no=6307, decl_uid=191333, cgraph_uid=3282, symbol_order=4058)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_relate_array::function_relate_array (struct function_relate_array * const this)
{
  <bb 2> :
  _1 = &this->relate_type_array;
  std::vector<relate_type>::vector (_1);
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::get (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7642, decl_uid=191420, cgraph_uid=4274, symbol_order=5059)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_relate_array * hash_map<tree_node*, function_relate_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.247501;
  struct hash_entry & D.247500;
  unsigned int D.247499;
  struct hash_entry & e;
  struct function_relate_array * iftmp.339;
  struct function_relate_array * D.247493;

  <bb 2> :
  _1 = &this->m_table;
  D.247499 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::hash (k);
  _2 = D.247499;
  D.247500 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.247500;
  D.247501 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (e);
  _3 = D.247501;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.339 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.339 = &e->m_value;

  <bb 5> :
  D.247493 = iftmp.339;

  <bb 6> :
<L3>:
  return D.247493;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE4hashERKS2_, funcdef_no=8491, decl_uid=191376, cgraph_uid=5123, symbol_order=5912)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::hash (union tree_node * const & h)
{
  hashval_t D.247502;

  <bb 2> :
  D.247502 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.247502;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8492, decl_uid=191563, cgraph_uid=5124, symbol_order=5913)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.247536;
  bool D.247535;
  bool D.247534;
  bool D.247533;
  bool D.247532;
  bool D.247531;
  struct value_type * D.247530;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.343;
  bool retval.342;
  struct value_type & D.247516;
  bool iftmp.341;
  bool retval.340;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 32;
  entry = _5 + _7;
  D.247531 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.247531;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.247532 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.247532;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.247533 = hash_map<tree_node*, function_relate_array>::hash_entry::equal (entry, comparable);
  _11 = D.247533;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.341 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.341 = 0;

  <bb 8> :
  retval.340 = iftmp.341;
  if (retval.340 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.247516 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  entry = _17 + _19;
  D.247534 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.247534;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.247535 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.247535;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.247536 = hash_map<tree_node*, function_relate_array>::hash_entry::equal (entry, comparable);
  _23 = D.247536;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.343 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.343 = 0;

  <bb 18> :
  retval.342 = iftmp.343;
  if (retval.342 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.247516 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.247516;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8730, decl_uid=191659, cgraph_uid=5362, symbol_order=6151)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.247539;
  bool D.247537;

  <bb 2> :
  D.247539 = hash_map<tree_node*, function_relate_array>::hash_entry::is_empty (v);
  D.247537 = D.247539;

  <bb 3> :
<L0>:
  return D.247537;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8512, decl_uid=191489, cgraph_uid=5144, symbol_order=5933)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_relate_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.247542;
  bool D.247540;

  <bb 2> :
  D.247542 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (e);
  D.247540 = D.247542;

  <bb 3> :
<L0>:
  return D.247540;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8731, decl_uid=191657, cgraph_uid=5363, symbol_order=6152)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.247545;
  bool D.247543;

  <bb 2> :
  D.247545 = hash_map<tree_node*, function_relate_array>::hash_entry::is_deleted (v);
  D.247543 = D.247545;

  <bb 3> :
<L0>:
  return D.247543;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9552, decl_uid=191484, cgraph_uid=6184, symbol_order=6973)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_relate_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.247548;
  bool D.247546;

  <bb 2> :
  D.247548 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_deleted<hash_map<tree_node*, function_relate_array>::hash_entry> (e);
  D.247546 = D.247548;

  <bb 3> :
<L0>:
  return D.247546;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_deleted<hash_map<tree_node*, function_relate_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10147, decl_uid=235483, cgraph_uid=6779, symbol_order=7572)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_deleted<hash_map<tree_node*, function_relate_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.247549;

  <bb 2> :
  _1 = entry->m_key;
  D.247549 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.247549;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9249, decl_uid=191477, cgraph_uid=5881, symbol_order=6670)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_relate_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.247553;
  bool D.247551;

  <bb 2> :
  _1 = &a->m_key;
  D.247553 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::equal_keys (_1, b);
  D.247551 = D.247553;

  <bb 3> :
<L0>:
  return D.247551;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE10equal_keysERKS2_S7_, funcdef_no=9944, decl_uid=191378, cgraph_uid=6576, symbol_order=7369)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.247554;

  <bb 2> :
  D.247554 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.247554;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8493, decl_uid=210878, cgraph_uid=5125, symbol_order=5914)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.247556;

  <bb 2> :
  _1 = entry->m_key;
  D.247556 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.247556;

}



;; Function function_relate_array::operator= (_ZN21function_relate_arrayaSERKS_, funcdef_no=6312, decl_uid=191799, cgraph_uid=3287, symbol_order=4063)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_relate_array & function_relate_array::operator= (struct function_relate_array * const this, const struct function_relate_array & D.191800)
{
  struct function_relate_array & D.247558;

  <bb 2> :
  _1 = &D.191800->relate_type_array;
  _2 = &this->relate_type_array;
  std::vector<relate_type>::operator= (_2, _1);
  D.247558 = this;

  <bb 3> :
<L0>:
  return D.247558;

}



;; Function std::vector<relate_type>::operator= (_ZNSt6vectorI11relate_typeSaIS0_EEaSERKS2_, funcdef_no=7643, decl_uid=179374, cgraph_uid=4277, symbol_order=5062)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<relate_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct relate_type * D.247593;
  struct relate_type * __tmp;
  const size_type __xlen;
  struct vector & D.247591;
  struct __normal_iterator D.247588;
  struct __normal_iterator D.247587;
  struct __normal_iterator D.247586;
  struct __normal_iterator D.247585;
  struct __normal_iterator D.247584;
  bool retval.348;
  struct __normal_iterator D.247579;
  struct __normal_iterator D.247578;
  bool retval.347;
  bool iftmp.346;
  bool retval.345;
  bool retval.344;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.344 = __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_propagate_on_copy_assign ();
  if (retval.344 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.179796;
  _4 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.179796;
  _6 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.346 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.346 = 0;

  <bb 8> :
  retval.345 = iftmp.346;
  if (retval.345 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<relate_type>::clear (this);
  _8 = &this->D.179796;
  _9 = this->D.179796._M_impl.D.179141._M_end_of_storage;
  _10 = this->D.179796._M_impl.D.179141._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 48;
  _13 = (long unsigned int) _12;
  _14 = this->D.179796._M_impl.D.179141._M_start;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (_8, _14, _13);
  this->D.179796._M_impl.D.179141._M_start = 0B;
  this->D.179796._M_impl.D.179141._M_finish = 0B;
  this->D.179796._M_impl.D.179141._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.179796;
  _16 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.179796;
  _18 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<relate_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<relate_type>::size (__x);
  _19 = std::vector<relate_type>::capacity (this);
  retval.347 = __xlen > _19;
  if (retval.347 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.247578 = std::vector<relate_type>::end (__x);
  D.247579 = std::vector<relate_type>::begin (__x);
  D.247593 = std::vector<relate_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (this, __xlen, D.247579, D.247578);
  __tmp = D.247593;
  _20 = &this->D.179796;
  _21 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.179796._M_impl.D.179141._M_finish;
  _23 = this->D.179796._M_impl.D.179141._M_start;
  std::_Destroy<relate_type*, relate_type> (_23, _22, _21);
  _24 = &this->D.179796;
  _25 = this->D.179796._M_impl.D.179141._M_end_of_storage;
  _26 = this->D.179796._M_impl.D.179141._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 48;
  _29 = (long unsigned int) _28;
  _30 = this->D.179796._M_impl.D.179141._M_start;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (_24, _30, _29);
  this->D.179796._M_impl.D.179141._M_start = __tmp;
  _31 = this->D.179796._M_impl.D.179141._M_start;
  _32 = __xlen * 48;
  _33 = _31 + _32;
  this->D.179796._M_impl.D.179141._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<relate_type>::size (this);
  retval.348 = __xlen <= _34;
  if (retval.348 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.179796;
  _36 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_35);
  D.247584 = std::vector<relate_type>::end (this);
  D.247585 = std::vector<relate_type>::begin (this);
  D.247586 = std::vector<relate_type>::end (__x);
  D.247587 = std::vector<relate_type>::begin (__x);
  D.247588 = std::copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (D.247587, D.247586, D.247585);
  std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type> (D.247588, D.247584, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.179796._M_impl.D.179141._M_start;
  _38 = __x->D.179796._M_impl.D.179141._M_start;
  _39 = std::vector<relate_type>::size (this);
  _40 = _39 * 48;
  _41 = _38 + _40;
  _42 = __x->D.179796._M_impl.D.179141._M_start;
  std::copy<relate_type*, relate_type*> (_42, _41, _37);
  _43 = &this->D.179796;
  _44 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.179796._M_impl.D.179141._M_finish;
  _46 = __x->D.179796._M_impl.D.179141._M_finish;
  _47 = __x->D.179796._M_impl.D.179141._M_start;
  _48 = std::vector<relate_type>::size (this);
  _49 = _48 * 48;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<relate_type*, relate_type*, relate_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.179796._M_impl.D.179141._M_start;
  _52 = __xlen * 48;
  _53 = _51 + _52;
  this->D.179796._M_impl.D.179141._M_finish = _53;

  <bb 17> :
  D.247591 = this;

  <bb 18> :
<L19>:
  return D.247591;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI11relate_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7644, decl_uid=179008, cgraph_uid=4275, symbol_order=5060)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_propagate_on_copy_assign ()
{
  bool D.247594;

  <bb 2> :
  D.247594 = 0;

  <bb 3> :
<L0>:
  return D.247594;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI11relate_typeES1_E15_S_always_equalEv, funcdef_no=7645, decl_uid=179011, cgraph_uid=4276, symbol_order=5061)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_always_equal ()
{
  bool D.247596;

  <bb 2> :
  D.247596 = 1;

  <bb 3> :
<L0>:
  return D.247596;

}



;; Function std::operator!= (_ZStneRKSaI11relate_typeES2_, funcdef_no=8495, decl_uid=178894, cgraph_uid=5127, symbol_order=5916)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.221190, const struct allocator & D.221191)
{
  bool D.247598;

  <bb 2> :
  D.247598 = 0;

  <bb 3> :
<L0>:
  return D.247598;

}



;; Function std::vector<relate_type>::clear (_ZNSt6vectorI11relate_typeSaIS0_EE5clearEv, funcdef_no=8496, decl_uid=179526, cgraph_uid=5128, symbol_order=5917)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<relate_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.179796._M_impl.D.179141._M_start;
  std::vector<relate_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<relate_type>::_M_erase_at_end (_ZNSt6vectorI11relate_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9250, decl_uid=179654, cgraph_uid=5882, symbol_order=6671)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<relate_type>::_M_erase_at_end (struct vector * const this, struct relate_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.179796._M_impl.D.179141._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 48;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.179796;
  _5 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.179796._M_impl.D.179141._M_finish;
  std::_Destroy<relate_type*, relate_type> (__pos, _6, _5);
  this->D.179796._M_impl.D.179141._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI11relate_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8494, decl_uid=179031, cgraph_uid=5126, symbol_order=5915)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.247603;

  <bb 2> :
  D.247603 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.247603;

}



;; Function std::__alloc_on_copy<std::allocator<relate_type> > (_ZSt15__alloc_on_copyISaI11relate_typeEEvRT_RKS2_, funcdef_no=8497, decl_uid=210903, cgraph_uid=5129, symbol_order=5918)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<relate_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<relate_type>::capacity (_ZNKSt6vectorI11relate_typeSaIS0_EE8capacityEv, funcdef_no=8498, decl_uid=179442, cgraph_uid=5130, symbol_order=5919)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<relate_type>::capacity (const struct vector * const this)
{
  size_type D.247605;

  <bb 2> :
  _1 = this->D.179796._M_impl.D.179141._M_end_of_storage;
  _2 = this->D.179796._M_impl.D.179141._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 48;
  D.247605 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.247605;

}



;; Function std::vector<relate_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (_ZNSt6vectorI11relate_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8501, decl_uid=211003, cgraph_uid=5133, symbol_order=5922)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct relate_type * std::vector<relate_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct relate_type * D.247609;
  struct relate_type * __result;
  struct relate_type * D.247607;

  <bb 2> :
  _1 = &this->D.179796;
  D.247609 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_allocate (_1, __n);
  __result = D.247609;
  _2 = &this->D.179796;
  _3 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*, relate_type> (__first, __last, __result, _3);

  <bb 3> :
  D.247607 = __result;

  <bb 4> :
<L0>:
  return D.247607;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.179796;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_allocate (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE11_M_allocateEm, funcdef_no=9254, decl_uid=179145, cgraph_uid=5886, symbol_order=6675)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct relate_type * std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct relate_type * D.247619;
  struct relate_type * iftmp.349;
  struct relate_type * D.247613;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.247619 = std::allocator_traits<std::allocator<relate_type> >::allocate (_1, __n);
  iftmp.349 = D.247619;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.349 = 0B;

  <bb 5> :
  D.247613 = iftmp.349;

  <bb 6> :
<L3>:
  return D.247613;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::allocate (_ZNSt16allocator_traitsISaI11relate_typeEE8allocateERS1_m, funcdef_no=9945, decl_uid=178946, cgraph_uid=6577, symbol_order=7370)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct relate_type * std::allocator_traits<std::allocator<relate_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct relate_type * D.247622;
  struct relate_type * D.247620;

  <bb 2> :
  D.247622 = __gnu_cxx::new_allocator<relate_type>::allocate (__a, __n, 0B);
  D.247620 = D.247622;

  <bb 3> :
<L0>:
  return D.247620;

}



;; Function __gnu_cxx::new_allocator<relate_type>::allocate (_ZN9__gnu_cxx13new_allocatorI11relate_typeE8allocateEmPKv, funcdef_no=10466, decl_uid=178800, cgraph_uid=7099, symbol_order=7892)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct relate_type * __gnu_cxx::new_allocator<relate_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.242993)
{
  struct relate_type * D.247633;
  struct relate_type * D.247632;
  align_val_t __al;
  struct relate_type * D.247630;
  bool retval.350;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<relate_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.350 = _4 != 0;
  if (retval.350 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 384307168202282325)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 48;
  D.247633 = operator new (_6);
  D.247630 = D.247633;

  <bb 7> :
<L6>:
  return D.247630;

}



;; Function __gnu_cxx::new_allocator<relate_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI11relate_typeE11_M_max_sizeEv, funcdef_no=10467, decl_uid=178827, cgraph_uid=7098, symbol_order=7891)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<relate_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.247634;

  <bb 2> :
  D.247634 = 192153584101141162;

  <bb 3> :
<L0>:
  return D.247634;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*, relate_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=9255, decl_uid=221232, cgraph_uid=5887, symbol_order=6676)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*, relate_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct relate_type * __result, struct allocator & D.232607)
{
  struct relate_type * D.247638;
  struct relate_type * D.247636;

  <bb 2> :
  D.247638 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (__first, __last, __result);
  D.247636 = D.247638;

  <bb 3> :
<L0>:
  return D.247636;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9946, decl_uid=232609, cgraph_uid=6578, symbol_order=7371)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct relate_type * __result)
{
  struct relate_type * D.247641;
  const bool __assignable;
  struct relate_type * D.247639;

  <bb 2> :
  __assignable = 1;
  D.247641 = std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (__first, __last, __result);
  D.247639 = D.247641;

  <bb 3> :
<L0>:
  return D.247639;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10468, decl_uid=239577, cgraph_uid=7100, symbol_order=7893)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct relate_type * std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct relate_type * __result)
{
  struct relate_type * __cur;
  struct relate_type * D.247643;
  bool retval.351;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator* (&__first);
  _2 = std::__addressof<relate_type> (__cur);
  std::_Construct<relate_type, const relate_type&> (_2, _1);
  __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator++ (&__first);
  __cur = __cur + 48;

  <bb 4> :
  retval.351 = __gnu_cxx::operator!=<const relate_type*, std::vector<relate_type> > (&__first, &__last);
  if (retval.351 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.247643 = __cur;

  <bb 6> :
<L3>:
  return D.247643;

}



;; Function __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS1_SaIS1_EEEdeEv, funcdef_no=10775, decl_uid=210941, cgraph_uid=7407, symbol_order=8202)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct relate_type & __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator* (const struct __normal_iterator * const this)
{
  const struct relate_type & D.247645;

  <bb 2> :
  D.247645 = this->_M_current;

  <bb 3> :
<L0>:
  return D.247645;

}



;; Function std::__addressof<relate_type> (_ZSt11__addressofI11relate_typeEPT_RS1_, funcdef_no=10473, decl_uid=221730, cgraph_uid=7105, symbol_order=7898)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__addressof<relate_type> (struct relate_type & __r)
{
  struct relate_type * D.247647;

  <bb 2> :
  D.247647 = __r;

  <bb 3> :
<L0>:
  return D.247647;

}



;; Function std::_Construct<relate_type, const relate_type&> (_ZSt10_ConstructI11relate_typeJRKS0_EEvPT_DpOT0_, funcdef_no=10776, decl_uid=243021, cgraph_uid=7408, symbol_order=8203)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<relate_type, const relate_type&> (struct relate_type * __p, const struct relate_type & __args#0)
{
  void * D.244381;
  void * D.244380;
  const struct relate_type * D.244382;

  <bb 2> :
  D.244382 = std::forward<const relate_type&> (__args#0);
  D.244380 = __p;
  D.244381 = operator new (48, D.244380);
  MEM[(struct relate_type *)D.244381] = *D.244382;
  return;

}



;; Function std::forward<const relate_type&> (_ZSt7forwardIRK11relate_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9264, decl_uid=221345, cgraph_uid=5896, symbol_order=6685)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct relate_type & std::forward<const relate_type&> (const struct type & __t)
{
  const struct relate_type & D.247649;

  <bb 2> :
  D.247649 = __t;

  <bb 3> :
<L0>:
  return D.247649;

}



;; Function __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS1_SaIS1_EEEppEv, funcdef_no=10774, decl_uid=210945, cgraph_uid=7406, symbol_order=8201)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.247651;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 48;
  this->_M_current = _2;
  D.247651 = this;

  <bb 3> :
<L0>:
  return D.247651;

}



;; Function __gnu_cxx::operator!=<const relate_type*, std::vector<relate_type> > (_ZN9__gnu_cxxneIPK11relate_typeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_, funcdef_no=10773, decl_uid=243014, cgraph_uid=7405, symbol_order=8200)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<const relate_type*, std::vector<relate_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.247653;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::base (__rhs);
  _4 = *_3;
  D.247653 = _2 != _4;

  <bb 3> :
<L0>:
  return D.247653;

}



;; Function __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10469, decl_uid=210970, cgraph_uid=7101, symbol_order=7894)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct relate_type * const & __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::base (const struct __normal_iterator * const this)
{
  const struct relate_type * const & D.247655;

  <bb 2> :
  D.247655 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.247655;

}



;; Function std::_Destroy<relate_type*, relate_type> (_ZSt8_DestroyIP11relate_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8490, decl_uid=210862, cgraph_uid=5122, symbol_order=5911)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<relate_type*, relate_type> (struct relate_type * __first, struct relate_type * __last, struct allocator & D.221170)
{
  <bb 2> :
  std::_Destroy<relate_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<relate_type*> (_ZSt8_DestroyIP11relate_typeEvT_S2_, funcdef_no=9247, decl_uid=221172, cgraph_uid=5879, symbol_order=6668)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<relate_type*> (struct relate_type * __first, struct relate_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<relate_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<relate_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP11relate_typeEEvT_S4_, funcdef_no=9941, decl_uid=232577, cgraph_uid=6573, symbol_order=7366)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<relate_type*> (struct relate_type * D.239518, struct relate_type * D.239519)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8488, decl_uid=179148, cgraph_uid=5120, symbol_order=5909)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (struct _Vector_base * const this, struct relate_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<relate_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::deallocate (_ZNSt16allocator_traitsISaI11relate_typeEE10deallocateERS1_PS0_m, funcdef_no=9246, decl_uid=178953, cgraph_uid=5878, symbol_order=6667)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<relate_type> >::deallocate (struct allocator_type & __a, struct relate_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<relate_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI11relate_typeE10deallocateEPS1_m, funcdef_no=9940, decl_uid=178804, cgraph_uid=6572, symbol_order=7365)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::deallocate (struct new_allocator * const this, struct relate_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 48;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<relate_type>::end (_ZNSt6vectorI11relate_typeSaIS0_EE3endEv, funcdef_no=7781, decl_uid=179409, cgraph_uid=4413, symbol_order=5198)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<relate_type>::end (struct vector * const this)
{
  struct iterator D.214431;
  struct iterator D.247663;

  <bb 2> :
  _1 = &this->D.179796._M_impl.D.179141._M_finish;
  __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::__normal_iterator (&D.214431, _1);
  D.247663 = D.214431;
  D.214431 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.247663;

}



;; Function __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=8727, decl_uid=201514, cgraph_uid=5359, symbol_order=6148)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::__normal_iterator (struct __normal_iterator * const this, struct relate_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<relate_type>::begin (_ZNSt6vectorI11relate_typeSaIS0_EE5beginEv, funcdef_no=7780, decl_uid=179405, cgraph_uid=4412, symbol_order=5197)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<relate_type>::begin (struct vector * const this)
{
  struct iterator D.214429;
  struct iterator D.247666;

  <bb 2> :
  _1 = &this->D.179796._M_impl.D.179141._M_start;
  __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::__normal_iterator (&D.214429, _1);
  D.247666 = D.214429;
  D.214429 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.247666;

}



;; Function std::vector<relate_type>::end (_ZNKSt6vectorI11relate_typeSaIS0_EE3endEv, funcdef_no=8500, decl_uid=179411, cgraph_uid=5132, symbol_order=5921)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<relate_type>::end (const struct vector * const this)
{
  struct const_iterator D.221226;
  struct const_iterator D.247669;

  <bb 2> :
  _1 = &this->D.179796._M_impl.D.179141._M_finish;
  __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::__normal_iterator (&D.221226, _1);
  D.247669 = D.221226;
  D.221226 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.247669;

}



;; Function __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9252, decl_uid=210983, cgraph_uid=5884, symbol_order=6673)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::__normal_iterator (struct __normal_iterator * const this, const struct relate_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<relate_type>::begin (_ZNKSt6vectorI11relate_typeSaIS0_EE5beginEv, funcdef_no=8499, decl_uid=179407, cgraph_uid=5131, symbol_order=5920)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<relate_type>::begin (const struct vector * const this)
{
  struct const_iterator D.221224;
  struct const_iterator D.247672;

  <bb 2> :
  _1 = &this->D.179796._M_impl.D.179141._M_start;
  __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::__normal_iterator (&D.221224, _1);
  D.247672 = D.221224;
  D.221224 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.247672;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8502, decl_uid=211011, cgraph_uid=5134, symbol_order=5923)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.247677;
  struct __normal_iterator D.247676;
  struct __normal_iterator D.247675;

  <bb 2> :
  D.247676 = std::__miter_base<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (__last);
  D.247677 = std::__miter_base<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (__first);
  D.247675 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (D.247677, D.247676, __result);

  <bb 3> :
<L0>:
  return D.247675;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9256, decl_uid=221266, cgraph_uid=5888, symbol_order=6677)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.247679;

  <bb 2> :
  D.247679 = __it;

  <bb 3> :
<L0>:
  return D.247679;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9257, decl_uid=221272, cgraph_uid=5890, symbol_order=6679)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct relate_type * D.247683;
  struct __normal_iterator D.247681;

  <bb 2> :
  _1 = std::__niter_base<relate_type*, std::vector<relate_type> > (__result);
  _2 = std::__niter_base<const relate_type*, std::vector<relate_type> > (__last);
  _3 = std::__niter_base<const relate_type*, std::vector<relate_type> > (__first);
  D.247683 = std::__copy_move_a1<false, const relate_type*, relate_type*> (_3, _2, _1);
  _4 = D.247683;
  D.247681 = std::__niter_wrap<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.247681;

}



;; Function std::__niter_base<relate_type*, std::vector<relate_type> > (_ZSt12__niter_baseIP11relate_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=9948, decl_uid=232775, cgraph_uid=6580, symbol_order=7373)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__niter_base<relate_type*, std::vector<relate_type> > (struct __normal_iterator __it)
{
  struct relate_type * D.247684;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (&__it);
  D.247684 = *_1;

  <bb 3> :
<L0>:
  return D.247684;

}



;; Function __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=8729, decl_uid=201501, cgraph_uid=5361, symbol_order=6150)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * const & __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (const struct __normal_iterator * const this)
{
  struct relate_type * const & D.247686;

  <bb 2> :
  D.247686 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.247686;

}



;; Function std::__niter_base<const relate_type*, std::vector<relate_type> > (_ZSt12__niter_baseIPK11relate_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=9947, decl_uid=232624, cgraph_uid=6579, symbol_order=7372)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct relate_type * std::__niter_base<const relate_type*, std::vector<relate_type> > (struct __normal_iterator __it)
{
  const struct relate_type * D.247688;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::base (&__it);
  D.247688 = *_1;

  <bb 3> :
<L0>:
  return D.247688;

}



;; Function std::__copy_move_a1<false, const relate_type*, relate_type*> (_ZSt14__copy_move_a1ILb0EPK11relate_typePS0_ET1_T0_S5_S4_, funcdef_no=9949, decl_uid=232778, cgraph_uid=6581, symbol_order=7374)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__copy_move_a1<false, const relate_type*, relate_type*> (const struct relate_type * __first, const struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.247692;
  struct relate_type * D.247690;

  <bb 2> :
  D.247692 = std::__copy_move_a2<false, const relate_type*, relate_type*> (__first, __last, __result);
  D.247690 = D.247692;

  <bb 3> :
<L0>:
  return D.247690;

}



;; Function std::__copy_move_a2<false, const relate_type*, relate_type*> (_ZSt14__copy_move_a2ILb0EPK11relate_typePS0_ET1_T0_S5_S4_, funcdef_no=10470, decl_uid=239591, cgraph_uid=7102, symbol_order=7895)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__copy_move_a2<false, const relate_type*, relate_type*> (const struct relate_type * __first, const struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.247693;

  <bb 2> :
  D.247693 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<relate_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.247693;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<relate_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI11relate_typeEEPT_PKS4_S7_S5_, funcdef_no=10777, decl_uid=243045, cgraph_uid=7409, symbol_order=8204)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct relate_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<relate_type> (const struct relate_type * __first, const struct relate_type * __last, struct relate_type * __result)
{
  const ptrdiff_t _Num;
  struct relate_type * D.247698;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 48;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.352_2 = (long unsigned int) _Num;
  _3 = _Num.352_2 * 48;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.353_4 = (long unsigned int) _Num;
  _5 = _Num.353_4 * 48;
  D.247698 = __result + _5;

  <bb 5> :
<L3>:
  return D.247698;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=9950, decl_uid=232782, cgraph_uid=6582, symbol_order=7375)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type*> (struct __normal_iterator __from, struct relate_type * __res)
{
  struct __normal_iterator D.247700;

  <bb 2> :
  _1 = std::__niter_base<relate_type*, std::vector<relate_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 48;
  D.247700 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.247700;

}



;; Function __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10471, decl_uid=201492, cgraph_uid=7103, symbol_order=7896)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct relate_type * const D.243051;
  struct __normal_iterator D.243052;
  struct __normal_iterator D.247702;

  <bb 2> :
  _1 = this->_M_current;
  __n.354_2 = (long unsigned int) __n;
  _3 = __n.354_2 * 48;
  _4 = _1 + _3;
  D.243051 = _4;
  __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::__normal_iterator (&D.243052, &D.243051);
  D.247702 = D.243052;
  D.243052 = {CLOBBER};
  D.243051 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.247702;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8503, decl_uid=211017, cgraph_uid=5135, symbol_order=5924)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.221301)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9259, decl_uid=221303, cgraph_uid=5891, symbol_order=6680)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=9951, decl_uid=232806, cgraph_uid=6583, symbol_order=7376)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (struct __normal_iterator D.239600, struct __normal_iterator D.239601)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<relate_type*, relate_type*> (_ZSt4copyIP11relate_typeS1_ET0_T_S3_S2_, funcdef_no=8504, decl_uid=211025, cgraph_uid=5136, symbol_order=5925)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::copy<relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.247708;
  struct relate_type * D.247706;

  <bb 2> :
  _1 = std::__miter_base<relate_type*> (__last);
  _2 = std::__miter_base<relate_type*> (__first);
  D.247708 = std::__copy_move_a<false, relate_type*, relate_type*> (_2, _1, __result);
  D.247706 = D.247708;

  <bb 3> :
<L0>:
  return D.247706;

}



;; Function std::__miter_base<relate_type*> (_ZSt12__miter_baseIP11relate_typeET_S2_, funcdef_no=9260, decl_uid=221319, cgraph_uid=5892, symbol_order=6681)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__miter_base<relate_type*> (struct relate_type * __it)
{
  struct relate_type * D.247709;

  <bb 2> :
  D.247709 = __it;

  <bb 3> :
<L0>:
  return D.247709;

}



;; Function std::__copy_move_a<false, relate_type*, relate_type*> (_ZSt13__copy_move_aILb0EP11relate_typeS1_ET1_T0_S3_S2_, funcdef_no=9261, decl_uid=221321, cgraph_uid=5893, symbol_order=6682)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__copy_move_a<false, relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.247713;
  struct relate_type * D.247711;

  <bb 2> :
  __result.355_1 = __result;
  _2 = std::__niter_base<relate_type*> (__result.355_1);
  _3 = std::__niter_base<relate_type*> (__last);
  _4 = std::__niter_base<relate_type*> (__first);
  D.247713 = std::__copy_move_a1<false, relate_type*, relate_type*> (_4, _3, _2);
  _5 = D.247713;
  D.247711 = std::__niter_wrap<relate_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.247711;

}



;; Function std::__niter_base<relate_type*> (_ZSt12__niter_baseIP11relate_typeET_S2_, funcdef_no=9952, decl_uid=221529, cgraph_uid=6584, symbol_order=7377)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__niter_base<relate_type*> (struct relate_type * __it)
{
  struct relate_type * D.247714;

  <bb 2> :
  D.247714 = __it;

  <bb 3> :
<L0>:
  return D.247714;

}



;; Function std::__copy_move_a1<false, relate_type*, relate_type*> (_ZSt14__copy_move_a1ILb0EP11relate_typeS1_ET1_T0_S3_S2_, funcdef_no=9953, decl_uid=232817, cgraph_uid=6585, symbol_order=7378)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__copy_move_a1<false, relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.247718;
  struct relate_type * D.247716;

  <bb 2> :
  D.247718 = std::__copy_move_a2<false, relate_type*, relate_type*> (__first, __last, __result);
  D.247716 = D.247718;

  <bb 3> :
<L0>:
  return D.247716;

}



;; Function std::__copy_move_a2<false, relate_type*, relate_type*> (_ZSt14__copy_move_a2ILb0EP11relate_typeS1_ET1_T0_S3_S2_, funcdef_no=10472, decl_uid=239609, cgraph_uid=7104, symbol_order=7897)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__copy_move_a2<false, relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.247719;

  <bb 2> :
  D.247719 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<relate_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.247719;

}



;; Function std::__niter_wrap<relate_type*> (_ZSt12__niter_wrapIP11relate_typeET_RKS2_S2_, funcdef_no=9954, decl_uid=232821, cgraph_uid=6586, symbol_order=7379)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__niter_wrap<relate_type*> (struct relate_type * const & D.239613, struct relate_type * __res)
{
  struct relate_type * D.247721;

  <bb 2> :
  D.247721 = __res;

  <bb 3> :
<L0>:
  return D.247721;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8489, decl_uid=179029, cgraph_uid=5121, symbol_order=5910)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.247723;

  <bb 2> :
  D.247723 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.247723;

}



;; Function std::vector<relate_type>::size (_ZNKSt6vectorI11relate_typeSaIS0_EE4sizeEv, funcdef_no=7778, decl_uid=179429, cgraph_uid=4410, symbol_order=5195)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<relate_type>::size (const struct vector * const this)
{
  size_type D.247725;

  <bb 2> :
  _1 = this->D.179796._M_impl.D.179141._M_finish;
  _2 = this->D.179796._M_impl.D.179141._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 48;
  D.247725 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.247725;

}



;; Function std::__uninitialized_copy_a<relate_type*, relate_type*, relate_type> (_ZSt22__uninitialized_copy_aIP11relate_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8505, decl_uid=211029, cgraph_uid=5137, symbol_order=5926)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__uninitialized_copy_a<relate_type*, relate_type*, relate_type> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result, struct allocator & D.221328)
{
  struct relate_type * D.247729;
  struct relate_type * D.247727;

  <bb 2> :
  D.247729 = std::uninitialized_copy<relate_type*, relate_type*> (__first, __last, __result);
  D.247727 = D.247729;

  <bb 3> :
<L0>:
  return D.247727;

}



;; Function std::uninitialized_copy<relate_type*, relate_type*> (_ZSt18uninitialized_copyIP11relate_typeS1_ET0_T_S3_S2_, funcdef_no=9262, decl_uid=221330, cgraph_uid=5895, symbol_order=6684)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::uninitialized_copy<relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.247732;
  const bool __assignable;
  struct relate_type * D.247730;

  <bb 2> :
  __assignable = 1;
  D.247732 = std::__uninitialized_copy<false>::__uninit_copy<relate_type*, relate_type*> (__first, __last, __result);
  D.247730 = D.247732;

  <bb 3> :
<L0>:
  return D.247730;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<relate_type*, relate_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP11relate_typeS3_EET0_T_S5_S4_, funcdef_no=9955, decl_uid=232920, cgraph_uid=6587, symbol_order=7380)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct relate_type * std::__uninitialized_copy<false>::__uninit_copy<relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * __cur;
  struct relate_type * D.247733;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<relate_type> (__cur);
  std::_Construct<relate_type, relate_type&> (_1, __first);
  __first = __first + 48;
  __cur = __cur + 48;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.247733 = __cur;

  <bb 6> :
<L3>:
  return D.247733;

}



;; Function std::_Construct<relate_type, relate_type&> (_ZSt10_ConstructI11relate_typeJRS0_EEvPT_DpOT0_, funcdef_no=10474, decl_uid=239621, cgraph_uid=7106, symbol_order=7899)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<relate_type, relate_type&> (struct relate_type * __p, struct relate_type & __args#0)
{
  void * D.243075;
  void * D.243074;
  const struct relate_type * D.243076;

  <bb 2> :
  D.243076 = std::forward<relate_type&> (__args#0);
  D.243074 = __p;
  D.243075 = operator new (48, D.243074);
  MEM[(struct relate_type *)D.243075] = *D.243076;
  return;

}



;; Function std::forward<relate_type&> (_ZSt7forwardIR11relate_typeEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=10778, decl_uid=243072, cgraph_uid=7410, symbol_order=8205)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct relate_type & std::forward<relate_type&> (struct type & __t)
{
  struct relate_type & D.247735;

  <bb 2> :
  D.247735 = __t;

  <bb 3> :
<L0>:
  return D.247735;

}



;; Function relate_type::relate_type (_ZN11relate_typeC2Ev, funcdef_no=6314, decl_uid=191811, cgraph_uid=3289, symbol_order=4065)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void relate_type::relate_type (struct relate_type * const this)
{
  <bb 2> :
  this->now_fucntion = 0;
  this->now_stmt = 0;
  this->now_basicblock = 0;
  return;

}



;; Function std::vector<relate_type>::push_back (_ZNSt6vectorI11relate_typeSaIS0_EE9push_backERKS0_, funcdef_no=7646, decl_uid=179476, cgraph_uid=4279, symbol_order=5064)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<relate_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.247740;

  <bb 2> :
  _1 = this->D.179796._M_impl.D.179141._M_finish;
  _2 = this->D.179796._M_impl.D.179141._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.179796._M_impl.D.179141._M_finish;
  _4 = &this->D.179796._M_impl;
  std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, const relate_type&> (_4, _3, __x);
  _5 = this->D.179796._M_impl.D.179141._M_finish;
  _6 = _5 + 48;
  this->D.179796._M_impl.D.179141._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.247740 = std::vector<relate_type>::end (this);
  std::vector<relate_type>::_M_realloc_insert<const relate_type&> (this, D.247740, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, const relate_type&> (_ZNSt16allocator_traitsISaI11relate_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8506, decl_uid=211041, cgraph_uid=5138, symbol_order=5927)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, const relate_type&> (struct allocator_type & __a, struct relate_type * __p, const struct relate_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const relate_type&> (__args#0);
  __gnu_cxx::new_allocator<relate_type>::construct<relate_type, const relate_type&> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::construct<relate_type, const relate_type&> (_ZN9__gnu_cxx13new_allocatorI11relate_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9265, decl_uid=221347, cgraph_uid=5897, symbol_order=6686)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::construct<relate_type, const relate_type&> (struct new_allocator * const this, struct relate_type * __p, const struct relate_type & __args#0)
{
  void * D.232932;
  void * D.232931;
  const struct relate_type * D.232933;

  <bb 2> :
  D.232933 = std::forward<const relate_type&> (__args#0);
  D.232931 = __p;
  D.232932 = operator new (48, D.232931);
  MEM[(struct relate_type *)D.232932] = *D.232933;
  return;

}



;; Function std::vector<relate_type>::_M_realloc_insert<const relate_type&> (_ZNSt6vectorI11relate_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8507, decl_uid=211210, cgraph_uid=5142, symbol_order=5931)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<relate_type>::_M_realloc_insert<const relate_type&> (struct vector * const this, struct iterator __position, const struct relate_type & __args#0)
{
  struct relate_type * D.247745;
  const size_type D.247744;
  struct relate_type * __new_finish;
  struct relate_type * __new_start;
  const size_type __elems_before;
  struct relate_type * __old_finish;
  struct relate_type * __old_start;
  const size_type __len;
  struct iterator D.221358;

  <bb 2> :
  D.247744 = std::vector<relate_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.247744;
  __old_start = this->D.179796._M_impl.D.179141._M_start;
  __old_finish = this->D.179796._M_impl.D.179141._M_finish;
  D.221358 = std::vector<relate_type>::begin (this);
  _1 = __gnu_cxx::operator-<relate_type*, std::vector<relate_type> > (&__position, &D.221358);
  __elems_before = (const size_type) _1;
  D.221358 = {CLOBBER};
  _2 = &this->D.179796;
  D.247745 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_allocate (_2, __len);
  __new_start = D.247745;
  __new_finish = __new_start;
  _3 = std::forward<const relate_type&> (__args#0);
  _4 = __elems_before * 48;
  _5 = __new_start + _4;
  _6 = &this->D.179796._M_impl;
  std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, const relate_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.179796;
  _8 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<relate_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 48;
  _11 = &this->D.179796;
  _12 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<relate_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.179796;
  _23 = this->D.179796._M_impl.D.179141._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 48;
  _26 = (long unsigned int) _25;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.179796._M_impl.D.179141._M_start = __new_start;
  this->D.179796._M_impl.D.179141._M_finish = __new_finish;
  _27 = __len * 48;
  _28 = __new_start + _27;
  this->D.179796._M_impl.D.179141._M_end_of_storage = _28;
  return;

}



;; Function std::vector<relate_type>::_M_check_len (_ZNKSt6vectorI11relate_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9266, decl_uid=179645, cgraph_uid=5898, symbol_order=6687)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<relate_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.358;
  size_type D.247749;
  const long unsigned int D.232938;
  bool retval.356;

  <bb 2> :
  _1 = std::vector<relate_type>::max_size (this);
  _2 = std::vector<relate_type>::size (this);
  _3 = _1 - _2;
  __n.357_4 = __n;
  retval.356 = _3 < __n.357_4;
  if (retval.356 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<relate_type>::size (this);
  _6 = std::vector<relate_type>::size (this);
  D.232938 = _6;
  _7 = std::max<long unsigned int> (&D.232938, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.232938 = {CLOBBER};
  _9 = std::vector<relate_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<relate_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.358 = std::vector<relate_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.358 = __len;

  <bb 8> :
  D.247749 = iftmp.358;

  <bb 9> :
<L6>:
  return D.247749;

}



;; Function std::vector<relate_type>::max_size (_ZNKSt6vectorI11relate_typeSaIS0_EE8max_sizeEv, funcdef_no=9956, decl_uid=179431, cgraph_uid=6588, symbol_order=7381)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<relate_type>::max_size (const struct vector * const this)
{
  size_type D.247756;

  <bb 2> :
  _1 = &this->D.179796;
  _2 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_1);
  D.247756 = std::vector<relate_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.247756;

}



;; Function std::vector<relate_type>::_S_max_size (_ZNSt6vectorI11relate_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10475, decl_uid=179652, cgraph_uid=7107, symbol_order=7900)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<relate_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.247758;

  <bb 2> :
  __diffmax = 192153584101141162;
  _1 = std::allocator_traits<std::allocator<relate_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.247758 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.247758;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::max_size (_ZNSt16allocator_traitsISaI11relate_typeEE8max_sizeERKS1_, funcdef_no=10779, decl_uid=178966, cgraph_uid=7411, symbol_order=8206)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<relate_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.247761;

  <bb 2> :
  D.247761 = __gnu_cxx::new_allocator<relate_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.247761;

}



;; Function __gnu_cxx::new_allocator<relate_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI11relate_typeE8max_sizeEv, funcdef_no=10896, decl_uid=178808, cgraph_uid=7528, symbol_order=8323)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<relate_type>::max_size (const struct new_allocator * const this)
{
  size_type D.247763;

  <bb 2> :
  D.247763 = __gnu_cxx::new_allocator<relate_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.247763;

}



;; Function __gnu_cxx::operator-<relate_type*, std::vector<relate_type> > (_ZN9__gnu_cxxmiIP11relate_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9267, decl_uid=221359, cgraph_uid=5899, symbol_order=6688)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<relate_type*, std::vector<relate_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.247765;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.247765 = _5 /[ex] 48;

  <bb 3> :
<L0>:
  return D.247765;

}



;; Function std::vector<relate_type>::_S_relocate (_ZNSt6vectorI11relate_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9268, decl_uid=179303, cgraph_uid=5900, symbol_order=6689)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::vector<relate_type>::_S_relocate (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.247768;
  struct relate_type * D.247767;

  <bb 2> :
  D.247767 = std::vector<relate_type>::_S_do_relocate (__first, __last, __result, __alloc, D.247768);

  <bb 3> :
<L0>:
  return D.247767;

}



;; Function std::vector<relate_type>::_S_do_relocate (_ZNSt6vectorI11relate_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=9957, decl_uid=179291, cgraph_uid=6589, symbol_order=7382)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::vector<relate_type>::_S_do_relocate (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.239633)
{
  struct relate_type * D.247770;

  <bb 2> :
  D.247770 = std::__relocate_a<relate_type*, relate_type*, std::allocator<relate_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.247770;

}



;; Function std::__relocate_a<relate_type*, relate_type*, std::allocator<relate_type> > (_ZSt12__relocate_aIP11relate_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10476, decl_uid=221523, cgraph_uid=7108, symbol_order=7901)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__relocate_a<relate_type*, relate_type*, std::allocator<relate_type> > (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result, struct allocator & __alloc)
{
  struct relate_type * D.247772;

  <bb 2> :
  _1 = std::__niter_base<relate_type*> (__result);
  _2 = std::__niter_base<relate_type*> (__last);
  _3 = std::__niter_base<relate_type*> (__first);
  D.247772 = std::__relocate_a_1<relate_type*, relate_type*, std::allocator<relate_type> > (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.247772;

}



;; Function std::__relocate_a_1<relate_type*, relate_type*, std::allocator<relate_type> > (_ZSt14__relocate_a_1IP11relate_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10780, decl_uid=221674, cgraph_uid=7412, symbol_order=8207)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct relate_type * std::__relocate_a_1<relate_type*, relate_type*, std::allocator<relate_type> > (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result, struct allocator & __alloc)
{
  struct relate_type * __cur;
  struct relate_type * D.247774;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<relate_type> (__first);
  _2 = std::__addressof<relate_type> (__cur);
  std::__relocate_object_a<relate_type, relate_type, std::allocator<relate_type> > (_2, _1, __alloc);
  __first = __first + 48;
  __cur = __cur + 48;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.247774 = __cur;

  <bb 6> :
<L3>:
  return D.247774;

}



;; Function std::__relocate_object_a<relate_type, relate_type, std::allocator<relate_type> > (_ZSt19__relocate_object_aI11relate_typeS0_SaIS0_EEvPT_PT0_RT1_, funcdef_no=10897, decl_uid=221703, cgraph_uid=7529, symbol_order=8324)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__relocate_object_a<relate_type, relate_type, std::allocator<relate_type> > (struct relate_type * restrict __dest, struct relate_type * restrict __orig, struct allocator & __alloc)
{
  <bb 2> :
  _1 = std::move<relate_type&> (__orig);
  std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, relate_type> (__alloc, __dest, _1);
  _2 = std::__addressof<relate_type> (__orig);
  std::allocator_traits<std::allocator<relate_type> >::destroy<relate_type> (__alloc, _2);
  return;

}



;; Function std::move<relate_type&> (_ZSt4moveIR11relate_typeEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=10945, decl_uid=221715, cgraph_uid=7577, symbol_order=8372)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<relate_type&> (struct relate_type & __t)
{
  struct type & D.247776;

  <bb 2> :
  D.247776 = __t;

  <bb 3> :
<L0>:
  return D.247776;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, relate_type> (_ZNSt16allocator_traitsISaI11relate_typeEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_, funcdef_no=10946, decl_uid=221717, cgraph_uid=7578, symbol_order=8373)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, relate_type> (struct allocator_type & __a, struct relate_type * __p, struct relate_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<relate_type> (__args#0);
  __gnu_cxx::new_allocator<relate_type>::construct<relate_type, relate_type> (__a, __p, _1);
  return;

}



;; Function std::forward<relate_type> (_ZSt7forwardI11relate_typeEOT_RNSt16remove_referenceIS1_E4typeE, funcdef_no=10965, decl_uid=245291, cgraph_uid=7597, symbol_order=8392)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct relate_type & std::forward<relate_type> (struct type & __t)
{
  struct relate_type & D.247778;

  <bb 2> :
  D.247778 = __t;

  <bb 3> :
<L0>:
  return D.247778;

}



;; Function __gnu_cxx::new_allocator<relate_type>::construct<relate_type, relate_type> (_ZN9__gnu_cxx13new_allocatorI11relate_typeE9constructIS1_JS1_EEEvPT_DpOT0_, funcdef_no=10966, decl_uid=245293, cgraph_uid=7598, symbol_order=8393)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::construct<relate_type, relate_type> (struct new_allocator * const this, struct relate_type * __p, struct relate_type & __args#0)
{
  void * D.245722;
  void * D.245721;
  struct relate_type * D.245723;

  <bb 2> :
  D.245723 = std::forward<relate_type> (__args#0);
  D.245721 = __p;
  D.245722 = operator new (48, D.245721);
  MEM[(struct relate_type *)D.245722] = *D.245723;
  return;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::destroy<relate_type> (_ZNSt16allocator_traitsISaI11relate_typeEE7destroyIS0_EEvRS1_PT_, funcdef_no=9269, decl_uid=221732, cgraph_uid=5901, symbol_order=6690)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<relate_type> >::destroy<relate_type> (struct allocator_type & __a, struct relate_type * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<relate_type>::destroy<relate_type> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::destroy<relate_type> (_ZN9__gnu_cxx13new_allocatorI11relate_typeE7destroyIS1_EEvPT_, funcdef_no=9958, decl_uid=232952, cgraph_uid=6590, symbol_order=7383)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::destroy<relate_type> (struct new_allocator * const this, struct relate_type * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::put (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7648, decl_uid=191416, cgraph_uid=4283, symbol_order=5068)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_relate_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_relate_array & v)
{
  bool D.247787;
  struct hash_entry * D.247786;
  unsigned int D.247785;
  bool ins;
  struct hash_entry * e;
  bool D.247783;
  void * D.211220;
  void * D.211219;

  <bb 2> :
  _1 = &this->m_table;
  D.247785 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::hash (k);
  _2 = D.247785;
  D.247786 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.247786;
  D.247787 = hash_map<tree_node*, function_relate_array>::hash_entry::is_empty (e);
  ins = D.247787;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.211219 = &e->m_value;
  D.211220 = operator new (24, D.211219);
  function_relate_array::function_relate_array (D.211220, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_relate_array::operator= (_4, v);

  <bb 5> :
  D.247783 = ~ins;

  <bb 6> :
<L3>:
  return D.247783;

  <bb 7> :
<L4>:
  operator delete (D.211220, D.211219);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8511, decl_uid=191574, cgraph_uid=5143, symbol_order=5932)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.247838;
  bool D.247837;
  bool D.247836;
  bool D.247835;
  bool D.247834;
  bool D.247833;
  struct value_type * D.247832;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.364;
  bool retval.363;
  bool retval.362;
  bool retval.361;
  bool retval.360;
  bool retval.359;
  struct value_type * D.247794;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 32;
  entry = _11 + _13;
  size = this->m_size;
  D.247833 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.359 = D.247833;
  if (retval.359 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.247834 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.360 = D.247834;
  if (retval.360 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 32;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.247835 = hash_map<tree_node*, function_relate_array>::hash_entry::equal (entry, comparable);
  retval.361 = D.247835;
  if (retval.361 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  D.247794 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 32;
  entry = _24 + _26;
  D.247836 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.362 = D.247836;
  if (retval.362 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.247837 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.363 = D.247837;
  if (retval.363 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 32;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.247838 = hash_map<tree_node*, function_relate_array>::hash_entry::equal (entry, comparable);
  retval.364 = D.247838;
  if (retval.364 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 32;
  D.247794 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.247794 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.247794 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 32;
  D.247794 = _37 + _39;

  <bb 27> :
<L37>:
  return D.247794;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9270, decl_uid=191655, cgraph_uid=5914, symbol_order=6703)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.247869;
  unsigned int D.247868;
  bool D.247867;
  bool D.247866;
  struct mem_alloc_description & D.247865;
  struct value_type * D.247864;
  unsigned int D.247863;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.232975;
  void * D.232974;
  struct hash_entry & D.233012;
  bool iftmp.368;
  bool retval.367;
  bool iftmp.366;
  bool retval.365;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 32;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.366 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.366 = 0;

  <bb 6> :
  retval.365 = iftmp.366;
  if (retval.365 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.247863 = hash_table_higher_prime_index (_5);
  nindex = D.247863;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.247864 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.247864;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.247866 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.247866;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.247867 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.247867;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.368 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.368 = 0;

  <bb 15> :
  retval.367 = iftmp.368;
  if (retval.367 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.247868 = hash_map<tree_node*, function_relate_array>::hash_entry::hash (x);
  _16 = D.247868;
  D.247869 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.247869;
  D.233012 = std::move<hash_map<tree_node*, function_relate_array>::hash_entry&> (x);
  D.232974 = q;
  D.232975 = operator new (32, D.232974);
  hash_map<tree_node*, function_relate_array>::hash_entry::hash_entry (D.232975, D.233012);

  <bb 17> :
  p = p + 32;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=9959, decl_uid=191550, cgraph_uid=6591, symbol_order=7384)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.247870;

  <bb 2> :
  D.247870 = this->m_size;

  <bb 3> :
<L0>:
  return D.247870;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=9960, decl_uid=191552, cgraph_uid=6592, symbol_order=7385)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.247872;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.247872 = _1 - _2;

  <bb 3> :
<L0>:
  return D.247872;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=9961, decl_uid=191652, cgraph_uid=6593, symbol_order=7386)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.369;
  bool D.247874;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.369 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.369 = 0;

  <bb 6> :
  D.247874 = iftmp.369;

  <bb 7> :
<L4>:
  return D.247874;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9248, decl_uid=191642, cgraph_uid=5880, symbol_order=6669)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.247896;
  struct value_type * D.247895;
  struct mem_alloc_description & D.247894;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.247892;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.247895 = xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_alloc (n);
  nentries = D.247895;
  goto <bb 6>; [INV]

  <bb 5> :
  D.247896 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_relate_array>::hash_entry> (n);
  nentries = D.247896;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.247892 = nentries;

  <bb 9> :
<L14>:
  return D.247892;

}



;; Function xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=9942, decl_uid=214442, cgraph_uid=6574, symbol_order=7367)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.247899;
  struct hash_entry * D.247897;

  <bb 2> :
  D.247899 = xcalloc (count, 32);
  D.247897 = D.247899;

  <bb 3> :
<L0>:
  return D.247897;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_relate_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=9943, decl_uid=232584, cgraph_uid=6575, symbol_order=7368)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_relate_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.247906;
  struct hash_entry * D.247905;
  struct hash_entry * D.247903;
  bool retval.370;

  <bb 2> :
  retval.370 = need_finalization_p<hash_map<tree_node*, function_relate_array>::hash_entry> ();
  if (retval.370 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 32;
  D.247905 = ggc_internal_cleared_alloc (_1, finalize, 32, c);
  D.247903 = D.247905;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 32;
  D.247906 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.247903 = D.247906;

  <bb 5> :
<L2>:
  return D.247903;

}



;; Function finalize<hash_map<tree_node*, function_relate_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10462, decl_uid=239526, cgraph_uid=7097, symbol_order=7890)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_relate_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_relate_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10464, decl_uid=242982, cgraph_uid=7095, symbol_order=7888)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_relate_array::~function_relate_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_relate_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10461, decl_uid=239525, cgraph_uid=7093, symbol_order=7886)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_relate_array>::hash_entry> ()
{
  bool D.247907;

  <bb 2> :
  D.247907 = 1;

  <bb 3> :
<L0>:
  return D.247907;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=9963, decl_uid=191475, cgraph_uid=6595, symbol_order=7388)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_relate_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.247911;
  hashval_t D.247909;

  <bb 2> :
  _1 = &e->m_key;
  D.247911 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::hash (_1);
  D.247909 = D.247911;

  <bb 3> :
<L0>:
  return D.247909;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=9962, decl_uid=191645, cgraph_uid=6594, symbol_order=7387)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.247924;
  bool D.247923;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.372;
  struct value_type * D.247915;
  bool retval.371;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 32;
  slot = _2 + _4;
  D.247923 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.371 = D.247923;
  if (retval.371 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.247915 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 32;
  slot = _8 + _10;
  D.247924 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.372 = D.247924;
  if (retval.372 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.247915 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.247915;

}



;; Function std::move<hash_map<tree_node*, function_relate_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=9964, decl_uid=232972, cgraph_uid=6596, symbol_order=7389)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_relate_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.247925;

  <bb 2> :
  D.247925 = __t;

  <bb 3> :
<L0>:
  return D.247925;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9281, decl_uid=232997, cgraph_uid=5912, symbol_order=6701)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.232999)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.232999->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.232999->m_value;
  function_relate_array::function_relate_array (_2, _3);
  return;

}



;; Function function_relate_array::function_relate_array (_ZN21function_relate_arrayC2EOS_, funcdef_no=9279, decl_uid=191350, cgraph_uid=5909, symbol_order=6698)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_relate_array::function_relate_array (struct function_relate_array * const this, struct function_relate_array & D.191352)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->relate_type_array;
  _2 = &D.191352->relate_type_array;
  std::vector<relate_type>::vector (_1, _2);
  return;

}



;; Function std::vector<relate_type>::vector (_ZNSt6vectorI11relate_typeSaIS0_EEC2EOS2_, funcdef_no=9277, decl_uid=179753, cgraph_uid=5906, symbol_order=6695)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<relate_type>::vector (struct vector * const this, struct vector & D.179755)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.179796;
  _2 = &D.179755->D.179796;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_ZNSt12_Vector_baseI11relate_typeSaIS0_EEC2EOS2_, funcdef_no=9275, decl_uid=179221, cgraph_uid=5903, symbol_order=6692)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.179223)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.179223->_M_impl;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=9966, decl_uid=179127, cgraph_uid=6598, symbol_order=7391)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl&> (__x);
  std::allocator<relate_type>::allocator (this, _1);
  _2 = &this->D.179141;
  _3 = std::move<std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.179141;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::allocator<relate_type>::allocator (_ZNSaI11relate_typeEC2ERKS0_, funcdef_no=10479, decl_uid=178911, cgraph_uid=7111, symbol_order=7904)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<relate_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<relate_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11relate_typeEC2ERKS2_, funcdef_no=10782, decl_uid=178840, cgraph_uid=7414, symbol_order=8209)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.178842)
{
  <bb 2> :
  return;

}



;; Function std::move<std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI11relate_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10477, decl_uid=239663, cgraph_uid=7109, symbol_order=7902)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.247927;

  <bb 2> :
  D.247927 = __t;

  <bb 3> :
<L0>:
  return D.247927;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10482, decl_uid=179083, cgraph_uid=7114, symbol_order=7907)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8733, decl_uid=214444, cgraph_uid=5365, symbol_order=6154)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9283, decl_uid=191663, cgraph_uid=5915, symbol_order=6704)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_relate_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=9968, decl_uid=191487, cgraph_uid=6600, symbol_order=7393)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::mark_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::mark_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10484, decl_uid=239678, cgraph_uid=7116, symbol_order=7909)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::mark_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function function_relate_array::function_relate_array (_ZN21function_relate_arrayC2ERKS_, funcdef_no=7650, decl_uid=191341, cgraph_uid=4281, symbol_order=5066)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_relate_array::function_relate_array (struct function_relate_array * const this, const struct function_relate_array & D.191343)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->relate_type_array;
  _2 = &D.191343->relate_type_array;
  std::vector<relate_type>::vector (_1, _2);
  return;

}



;; Function std::vector<relate_type>::vector (_ZNSt6vectorI11relate_typeSaIS0_EEC2ERKS2_, funcdef_no=8514, decl_uid=179759, cgraph_uid=5146, symbol_order=5935)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<relate_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct relate_type * D.247934;
  struct __normal_iterator D.247931;
  struct __normal_iterator D.247930;
  struct allocator D.221935;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.179796;
  _2 = &__x->D.179796;
  _3 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_2);
  D.221935 = __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<relate_type>::size (__x);
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_1, _4, &D.221935);

  <bb 3> :
  std::allocator<relate_type>::~allocator (&D.221935);
  D.221935 = {CLOBBER};
  _5 = &this->D.179796;
  _6 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.179796._M_impl.D.179141._M_start;
  D.247930 = std::vector<relate_type>::end (__x);
  D.247931 = std::vector<relate_type>::begin (__x);
  D.247934 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*, relate_type> (D.247931, D.247930, _7, _6);

  <bb 4> :
  _8 = D.247934;
  this->D.179796._M_impl.D.179141._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<relate_type>::~allocator (&D.221935);
  resx 2

  <bb 6> :
<L1>:
  D.221935 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.179796;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::~_Vector_base (_9);
  resx 5

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI11relate_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=9284, decl_uid=179003, cgraph_uid=5916, symbol_order=6705)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<relate_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI11relate_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9969, decl_uid=178968, cgraph_uid=6601, symbol_order=7394)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<relate_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<relate_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_ZNSt12_Vector_baseI11relate_typeSaIS0_EEC2EmRKS1_, funcdef_no=9286, decl_uid=179228, cgraph_uid=5918, symbol_order=6707)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9971, decl_uid=179133, cgraph_uid=6603, symbol_order=7396)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<relate_type>::allocator (this, __a);
  _1 = &this->D.179141;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_create_storage (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9973, decl_uid=179152, cgraph_uid=6605, symbol_order=7398)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct relate_type * D.247941;

  <bb 2> :
  D.247941 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_allocate (this, __n);
  _1 = D.247941;
  this->_M_impl.D.179141._M_start = _1;
  _2 = this->_M_impl.D.179141._M_start;
  this->_M_impl.D.179141._M_finish = _2;
  _3 = this->_M_impl.D.179141._M_start;
  _4 = __n * 48;
  _5 = _3 + _4;
  this->_M_impl.D.179141._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6300, decl_uid=179188, cgraph_uid=3273, symbol_order=4049)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<relate_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<relate_type>::~allocator (_ZNSaI11relate_typeED2Ev, funcdef_no=7634, decl_uid=178921, cgraph_uid=4266, symbol_order=5051)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<relate_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<relate_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI11relate_typeED2Ev, funcdef_no=8486, decl_uid=178850, cgraph_uid=5118, symbol_order=5907)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::~_Vector_base (_ZNSt12_Vector_baseI11relate_typeSaIS0_EED2Ev, funcdef_no=7637, decl_uid=179251, cgraph_uid=4269, symbol_order=5054)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.179141._M_end_of_storage;
  _2 = this->_M_impl.D.179141._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 48;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.179141._M_start;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function function_relate_array::~function_relate_array (_ZN21function_relate_arrayD2Ev, funcdef_no=6310, decl_uid=191362, cgraph_uid=3285, symbol_order=4061)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_relate_array::~function_relate_array (struct function_relate_array * const this)
{
  <bb 2> :
  _1 = &this->relate_type_array;
  std::vector<relate_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<relate_type>::~vector (_ZNSt6vectorI11relate_typeSaIS0_EED2Ev, funcdef_no=7640, decl_uid=179793, cgraph_uid=4272, symbol_order=5057)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<relate_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.179796;
  _2 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.179796._M_impl.D.179141._M_finish;
  _4 = this->D.179796._M_impl.D.179141._M_start;
  std::_Destroy<relate_type*, relate_type> (_4, _3, _2);
  _5 = &this->D.179796;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function trace_function_path (_Z19trace_function_pathP9tree_nodeiS0_Pi, funcdef_no=6316, decl_uid=186999, cgraph_uid=3323, symbol_order=4099)

Merging blocks 4 and 234
Removing basic block 36
Removing basic block 37
Removing basic block 38
Removing basic block 39
Removing basic block 40
Removing basic block 44
Removing basic block 74
Removing basic block 91
Removing basic block 92
Removing basic block 98
Removing basic block 123
Removing basic block 151
Removing basic block 162
Removing basic block 163
Removing basic block 164
Removing basic block 181
Removing basic block 183
Removing basic block 205
Removing basic block 218
Removing basic block 219
Removing basic block 223
Removing basic block 232
Merging blocks 233 and 235
;; 9 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 6
;;  header 210, latch 209
;;  depth 1, outer 0
;;  nodes: 210 209 203 208 207 206 205 204 179 202 181 180 201 190 200 191 199 192 198 197 196 195 194 193 187 189 188 186 185 184 183 182 176 178 172 177 173 171 170 175 174
;;
;; Loop 8
;;  header 201, latch 200
;;  depth 2, outer 6
;;  nodes: 201 200 191 199 192 198 197 196 195 194 193
;;
;; Loop 7
;;  header 178, latch 177
;;  depth 2, outer 6
;;  nodes: 178 177 173
;;
;; Loop 5
;;  header 141, latch 140
;;  depth 1, outer 0
;;  nodes: 141 140 130 139 138 137 136 135 134 133 132 131 129 128 127
;;
;; Loop 4
;;  header 114, latch 113
;;  depth 1, outer 0
;;  nodes: 114 113 103 112 111 110 109 108 107 106 105 104 102 101 100
;;
;; Loop 3
;;  header 85, latch 84
;;  depth 1, outer 0
;;  nodes: 85 84 56 61 60 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 67 68 64 63 62 66 65 59 58 57 55 54
;;
;; Loop 2
;;  header 52, latch 51
;;  depth 1, outer 0
;;  nodes: 52 51 50 49
;;
;; Loop 1
;;  header 37, latch 36
;;  depth 1, outer 0
;;  nodes: 37 36 21 35 27 29 31 28 30 25 26 22 23 24 34 33 32
;; 2 succs { 240 3 }
;; 3 succs { 4 5 }
;; 4 succs { 212 }
;; 5 succs { 240 6 }
;; 6 succs { 240 7 }
;; 7 succs { 239 8 }
;; 8 succs { 238 9 }
;; 9 succs { 238 10 }
;; 10 succs { 11 39 }
;; 11 succs { 238 12 }
;; 12 succs { 13 15 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 39 }
;; 17 succs { 215 18 }
;; 18 succs { 215 19 }
;; 19 succs { 214 20 }
;; 20 succs { 37 }
;; 21 succs { 22 36 }
;; 22 succs { 23 26 }
;; 23 succs { 24 26 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 28 36 }
;; 28 succs { 29 36 }
;; 29 succs { 30 36 }
;; 30 succs { 213 31 }
;; 31 succs { 32 36 }
;; 32 succs { 213 33 }
;; 33 succs { 213 34 }
;; 34 succs { 213 35 }
;; 35 succs { 213 36 }
;; 36 succs { 37 }
;; 37 succs { 21 38 }
;; 38 succs { 39 }
;; 39 succs { 40 89 }
;; 40 succs { 41 89 }
;; 41 succs { 238 42 }
;; 42 succs { 43 89 }
;; 43 succs { 224 44 }
;; 44 succs { 224 45 }
;; 45 succs { 223 46 }
;; 46 succs { 222 47 }
;; 47 succs { 216 48 }
;; 48 succs { 52 }
;; 49 succs { 218 50 }
;; 50 succs { 217 51 }
;; 51 succs { 52 }
;; 52 succs { 49 53 }
;; 53 succs { 85 }
;; 54 succs { 222 55 }
;; 55 succs { 222 56 }
;; 56 succs { 57 84 }
;; 57 succs { 222 58 }
;; 58 succs { 222 59 }
;; 59 succs { 222 60 }
;; 60 succs { 61 84 }
;; 61 succs { 62 84 }
;; 62 succs { 222 63 }
;; 63 succs { 219 64 }
;; 64 succs { 65 68 }
;; 65 succs { 221 66 }
;; 66 succs { 220 67 }
;; 67 succs { 222 69 }
;; 68 succs { 222 69 }
;; 69 succs { 222 70 }
;; 70 succs { 222 71 }
;; 71 succs { 222 72 }
;; 72 succs { 222 73 }
;; 73 succs { 222 74 }
;; 74 succs { 222 75 }
;; 75 succs { 222 76 }
;; 76 succs { 222 77 }
;; 77 succs { 222 78 }
;; 78 succs { 222 79 }
;; 79 succs { 222 80 }
;; 80 succs { 222 81 }
;; 81 succs { 222 82 }
;; 82 succs { 222 83 }
;; 83 succs { 222 84 }
;; 84 succs { 85 }
;; 85 succs { 54 86 }
;; 86 succs { 87 88 }
;; 87 succs { 88 }
;; 88 succs { 89 }
;; 89 succs { 238 90 }
;; 90 succs { 91 94 }
;; 91 succs { 92 94 }
;; 92 succs { 93 94 }
;; 93 succs { 95 }
;; 94 succs { 95 }
;; 95 succs { 96 116 }
;; 96 succs { 227 97 }
;; 97 succs { 227 98 }
;; 98 succs { 226 99 }
;; 99 succs { 114 }
;; 100 succs { 225 101 }
;; 101 succs { 225 102 }
;; 102 succs { 225 103 }
;; 103 succs { 104 113 }
;; 104 succs { 225 105 }
;; 105 succs { 225 106 }
;; 106 succs { 225 107 }
;; 107 succs { 225 108 }
;; 108 succs { 225 109 }
;; 109 succs { 225 110 }
;; 110 succs { 225 111 }
;; 111 succs { 225 112 }
;; 112 succs { 225 113 }
;; 113 succs { 114 }
;; 114 succs { 100 115 }
;; 115 succs { 116 }
;; 116 succs { 238 117 }
;; 117 succs { 118 121 }
;; 118 succs { 119 121 }
;; 119 succs { 120 121 }
;; 120 succs { 122 }
;; 121 succs { 122 }
;; 122 succs { 123 143 }
;; 123 succs { 230 124 }
;; 124 succs { 230 125 }
;; 125 succs { 229 126 }
;; 126 succs { 141 }
;; 127 succs { 228 128 }
;; 128 succs { 228 129 }
;; 129 succs { 228 130 }
;; 130 succs { 131 140 }
;; 131 succs { 228 132 }
;; 132 succs { 228 133 }
;; 133 succs { 228 134 }
;; 134 succs { 228 135 }
;; 135 succs { 228 136 }
;; 136 succs { 228 137 }
;; 137 succs { 228 138 }
;; 138 succs { 228 139 }
;; 139 succs { 228 140 }
;; 140 succs { 141 }
;; 141 succs { 127 142 }
;; 142 succs { 143 }
;; 143 succs { 144 150 }
;; 144 succs { 145 150 }
;; 145 succs { 146 150 }
;; 146 succs { 147 150 }
;; 147 succs { 148 150 }
;; 148 succs { 149 150 }
;; 149 succs { 238 150 }
;; 150 succs { 151 153 }
;; 151 succs { 152 153 }
;; 152 succs { 153 }
;; 153 succs { 154 167 }
;; 154 succs { 238 155 }
;; 155 succs { 156 167 }
;; 156 succs { 232 157 }
;; 157 succs { 232 158 }
;; 158 succs { 231 159 }
;; 159 succs { 160 162 }
;; 160 succs { 161 162 }
;; 161 succs { 163 }
;; 162 succs { 163 }
;; 163 succs { 164 166 }
;; 164 succs { 231 165 }
;; 165 succs { 231 166 }
;; 166 succs { 167 }
;; 167 succs { 238 168 }
;; 168 succs { 169 211 }
;; 169 succs { 210 }
;; 170 succs { 236 171 }
;; 171 succs { 236 172 }
;; 172 succs { 178 }
;; 173 succs { 174 177 }
;; 174 succs { 236 175 }
;; 175 succs { 236 176 }
;; 176 succs { 179 }
;; 177 succs { 178 }
;; 178 succs { 173 179 }
;; 179 succs { 180 203 }
;; 180 succs { 236 181 }
;; 181 succs { 182 203 }
;; 182 succs { 235 183 }
;; 183 succs { 235 184 }
;; 184 succs { 235 185 }
;; 185 succs { 233 186 }
;; 186 succs { 187 188 }
;; 187 succs { 233 190 }
;; 188 succs { 233 189 }
;; 189 succs { 233 190 }
;; 190 succs { 201 }
;; 191 succs { 192 200 }
;; 192 succs { 193 200 }
;; 193 succs { 233 194 }
;; 194 succs { 233 195 }
;; 195 succs { 233 196 }
;; 196 succs { 233 197 }
;; 197 succs { 233 198 }
;; 198 succs { 199 200 }
;; 199 succs { 200 }
;; 200 succs { 201 }
;; 201 succs { 191 202 }
;; 202 succs { 203 }
;; 203 succs { 204 209 }
;; 204 succs { 236 205 }
;; 205 succs { 236 206 }
;; 206 succs { 236 207 }
;; 207 succs { 236 208 }
;; 208 succs { 209 }
;; 209 succs { 210 }
;; 210 succs { 170 211 }
;; 211 succs { 1 }
;; 212 succs { 1 }
;; 213 succs { 214 }
;; 214 succs { 215 }
;; 215 succs { 238 }
;; 216 succs { 222 }
;; 217 succs { 218 }
;; 218 succs { 222 }
;; 219 succs { 222 }
;; 220 succs { 221 }
;; 221 succs { 222 }
;; 222 succs { 223 }
;; 223 succs { 224 }
;; 224 succs { 238 }
;; 225 succs { 226 }
;; 226 succs { 227 }
;; 227 succs { 238 }
;; 228 succs { 229 }
;; 229 succs { 230 }
;; 230 succs { 238 }
;; 231 succs { 232 }
;; 232 succs { 238 }
;; 233 succs { 234 }
;; 234 succs { 235 }
;; 235 succs { 236 }
;; 236 succs { 237 }
;; 237 succs { 238 }
;; 238 succs { 239 }
;; 239 succs { 240 }
;; 240 succs { }
int trace_function_path (union tree_node * function_tree, int fucntion_level, union tree_node * mallocStmt_tree, int * freecount)
{
  const char * D.248170;
  const char * D.248166;
  const char * D.248165;
  const char * D.248164;
  struct function_return_array * D.248163;
  struct function_return_array * D.248162;
  struct function_return_array * D.248161;
  struct function_return_array * D.248160;
  const char * D.248159;
  const char * D.248158;
  struct function_return_array * D.248157;
  const char * D.248154;
  struct function_return_array * D.248153;
  struct function_return_array * D.248152;
  struct function_return_array * D.248151;
  const char * D.248147;
  struct function_pthread_exit_array * D.248146;
  struct function_pthread_exit_array * D.248145;
  const char * D.248141;
  struct function_pthread_detched_array * D.248140;
  struct function_pthread_detched_array * D.248139;
  const char * D.248135;
  union tree_node * D.248132;
  int * D.248130;
  union tree_node * D.248129;
  bool D.248128;
  union tree_node * D.248125;
  void * D.248123;
  struct function_free_array * D.248122;
  struct function_free_array * D.248121;
  bool D.248117;
  struct function_return_array * D.248116;
  struct function_return_array * D.248115;
  const char * D.248114;
  struct function_path_array * D.248113;
  struct function_path_array * D.248112;
  int k;
  union tree_node * getFucntionDecl;
  struct vector ret_type_find_fun_array;
  struct function_return_array find_fun_array;
  int o;
  int find;
  int i;
  struct function_return_array callerFunArray;
  struct pt_solution * pt1;
  struct ptr_info_def * pi3;
  struct ptr_info_def * pi2;
  struct ptr_info_def * pi1;
  struct cgraph_node * node;
  long unsigned int x;
  int k;
  struct vector callerRetTypearray;
  struct function_pthread_exit_array callerFunArray;
  long unsigned int x;
  int k;
  struct vector callerRetTypearray;
  struct function_pthread_detched_array callerFunArray;
  long unsigned int x;
  int k;
  int k;
  struct hash_map * function_basicblock_collect;
  struct vector callerRetTypearray;
  struct function_free_array callerFunArray;
  struct pt_solution * pt;
  struct ptr_info_def * pi;
  int k;
  struct vector callerRetTypearray;
  struct function_return_array callerFunArray;
  struct function_return_array calleeFunArray;
  struct vector callerRetTypearray;
  struct function_return_array * callerFunArray;
  const char * name;
  struct vector function_path_array;
  struct function_path_array fun_array;
  bool retval.491;
  bool retval.489;
  bool retval.481;
  bool retval.478;
  bool retval.475;
  bool retval.474;
  bool retval.473;
  bool retval.471;
  bool iftmp.465;
  bool retval.464;
  bool retval.461;
  bool retval.460;
  bool retval.453;
  bool iftmp.438;
  bool retval.437;
  bool retval.436;
  bool iftmp.421;
  bool retval.420;
  struct hash_map * function_basicblock_collect.419;
  bool retval.418;
  union tree_node * const D.193196;
  const int D.193197;
  union tree_node * const D.193195;
  bool retval.403;
  bool retval.399;
  bool retval.398;
  union tree_node * const D.193192;
  const int D.193193;
  void * D.193190;
  bool retval.395;
  bool retval.392;
  bool retval.389;
  bool retval.388;
  bool iftmp.387;
  bool retval.386;
  bool retval.385;
  bool iftmp.380;
  bool retval.379;
  int D.247945;
  bool retval.373;

  <bb 2> :
  function_path_collect.374_1 = function_path_collect;
  D.248112 = hash_map<tree_node*, function_path_array>::get (function_path_collect.374_1, &function_tree);

  <bb 3> :
  _2 = D.248112;
  retval.373 = _2 == 0B;
  if (retval.373 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.247945 = 0;
  // predicted unlikely by early return (on trees) predictor.
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  calleeFunArray = {CLOBBER};
  goto <bb 212>; [INV]

  <bb 5> :
  _3 = rand ();
  _4 = (long unsigned int) _3;
  now_fucntion = _4;
  function_path_collect.375_5 = function_path_collect;
  D.248113 = hash_map<tree_node*, function_path_array>::get (function_path_collect.375_5, &function_tree);

  <bb 6> :
  _6 = D.248113;
  function_path_array::function_path_array (&fun_array, _6);

  <bb 7> :
  std::vector<function_path>::vector (&function_path_array, &fun_array.function_path_array);

  <bb 8> :
  fistconunt = 0;
  _7 = std::vector<function_path>::size (&function_path_array);
  function_tree.376_8 = function_tree;
  D.248114 = get_name (function_tree.376_8);

  <bb 9> :
  _9 = D.248114;
  stderr.377_10 = stderr;
  fprintf (stderr.377_10, "\x1b[40;44m =======trace_function_path %s  function_call count: %d level :%d========  \x1b[0m\n", _9, _7, fucntion_level);

  <bb 10> :
  retmod.378_11 = retmod;
  if (retmod.378_11 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 11> :
  function_return_collect.381_12 = function_return_collect;
  D.248115 = hash_map<tree_node*, function_return_array>::get (function_return_collect.381_12, &function_tree);

  <bb 12> :
  _13 = D.248115;
  if (_13 != 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 13> :
  fucntion_level.382_14 = (unsigned int) fucntion_level;
  RET_HEAP_OBJECT.383_15 = RET_HEAP_OBJECT;
  if (fucntion_level.382_14 == RET_HEAP_OBJECT.383_15)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  iftmp.380 = 1;
  goto <bb 16>; [INV]

  <bb 15> :
  iftmp.380 = 0;

  <bb 16> :
  retval.379 = iftmp.380;
  if (retval.379 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 17> :
  function_return_collect.384_16 = function_return_collect;
  D.248116 = hash_map<tree_node*, function_return_array>::get (function_return_collect.384_16, &function_tree);

  <bb 18> :
  _17 = D.248116;
  function_return_array::function_return_array (&callerFunArray, _17);

  <bb 19> :
  std::vector<return_type>::vector (&callerRetTypearray, &callerFunArray.return_type_array);

  <bb 20> :
  k = 0;
  goto <bb 37>; [INV]

  <bb 21> :
  _18 = (long unsigned int) k;
  _19 = std::vector<return_type>::operator[] (&callerRetTypearray, _18);
  _20 = _19->return_tree;
  retval.385 = _20 != 0B;
  if (retval.385 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 22> :
  _21 = mallocStmt_tree->base.code;
  if (_21 != 26)
    goto <bb 23>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 23> :
  _22 = mallocStmt_tree->base.code;
  if (_22 != 33)
    goto <bb 24>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 24> :
  _23 = (long unsigned int) k;
  _24 = std::vector<return_type>::operator[] (&callerRetTypearray, _23);
  _25 = _24->return_tree;
  _26 = _25->base.code;
  if (_26 != 33)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  iftmp.387 = 1;
  goto <bb 27>; [INV]

  <bb 26> :
  iftmp.387 = 0;

  <bb 27> :
  retval.386 = iftmp.387;
  if (retval.386 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 28> :
  _27 = (long unsigned int) k;
  _28 = std::vector<return_type>::operator[] (&callerRetTypearray, _27);
  _29 = _28->return_tree;
  _30 = _29->base.code;
  retval.388 = _30 != 26;
  if (retval.388 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 29> :
  pi = mallocStmt_tree->ssa_name.info.ptr_info;
  pt = &pi->pt;
  if (pi != 0B)
    goto <bb 30>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 30> :
  _31 = (long unsigned int) k;
  _32 = std::vector<return_type>::operator[] (&callerRetTypearray, _31);
  _33 = _32->return_tree;
  D.248117 = ptr_derefs_may_alias_p (_33, mallocStmt_tree);

  <bb 31> :
  retval.389 = D.248117;
  if (retval.389 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 32> :
  stderr.390_34 = stderr;
  __builtin_fwrite ("\x1b[40;31m  find return stmt  \x1b[0m\n", 1, 33, stderr.390_34);

  <bb 33> :
  stderr.391_35 = stderr;
  __builtin_fwrite ("\x1b[40;31m  this fucntion return heap-object  \x1b[0m\n", 1, 49, stderr.391_35);

  <bb 34> :
  _36 = (long unsigned int) k;
  _37 = std::vector<return_type>::operator[] (&callerRetTypearray, _36);
  _38 = _37->stmt;
  debug_gimple_stmt (_38);

  <bb 35> :
  _39 = (long unsigned int) k;
  _40 = std::vector<return_type>::operator[] (&callerRetTypearray, _39);
  _41 = _40->stmt;
  _42 = gimple_location_safe (_41);
  warning_at (_42, 0, "use location");

  <bb 36> :
  k = k + 1;

  <bb 37> :
  _43 = (long unsigned int) k;
  _44 = std::vector<return_type>::size (&callerRetTypearray);
  retval.392 = _43 < _44;
  if (retval.392 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 38> :
  std::vector<return_type>::~vector (&callerRetTypearray);
  function_return_array::~function_return_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 39> :
  if (mallocStmt_tree != 0B)
    goto <bb 40>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 40> :
  fucntion_level.393_45 = (unsigned int) fucntion_level;
  DISABLE_TREACE.394_46 = DISABLE_TREACE;
  if (fucntion_level.393_45 != DISABLE_TREACE.394_46)
    goto <bb 41>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 41> :
  function_free_collect.396_47 = function_free_collect;
  D.248121 = hash_map<tree_node*, function_free_array>::get (function_free_collect.396_47, &function_tree);

  <bb 42> :
  _48 = D.248121;
  retval.395 = _48 != 0B;
  if (retval.395 != 0)
    goto <bb 43>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 43> :
  function_free_collect.397_49 = function_free_collect;
  D.248122 = hash_map<tree_node*, function_free_array>::get (function_free_collect.397_49, &function_tree);

  <bb 44> :
  _50 = D.248122;
  function_free_array::function_free_array (&callerFunArray, _50);

  <bb 45> :
  std::vector<free_type>::vector (&callerRetTypearray, &callerFunArray.free_type_array);

  <bb 46> :
  D.248123 = operator new (48);

  <bb 47> :
  D.193190 = D.248123;
  hash_map<tree_node*, int>::hash_map (D.193190, 13, 0, 1, 0);

  <bb 48> :
  function_basicblock_collect = D.193190;
  k = 0;
  goto <bb 52>; [INV]

  <bb 49> :
  D.193193 = 0;
  _51 = (long unsigned int) k;
  _52 = std::vector<free_type>::operator[] (&callerRetTypearray, _51);
  _53 = _52->stmt;
  D.248125 = gimple_block (_53);

  <bb 50> :
  _54 = D.248125;
  D.193192 = _54;
  hash_map<tree_node*, int>::put (function_basicblock_collect, &D.193192, &D.193193);

  <bb 51> :
  D.193192 = {CLOBBER};
  D.193193 = {CLOBBER};
  k = k + 1;

  <bb 52> :
  _55 = (long unsigned int) k;
  _56 = std::vector<free_type>::size (&callerRetTypearray);
  retval.398 = _55 < _56;
  if (retval.398 != 0)
    goto <bb 49>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 53> :
  k = 0;
  goto <bb 85>; [INV]

  <bb 54> :
  _57 = (long unsigned int) k;
  _58 = std::vector<free_type>::operator[] (&callerRetTypearray, _57);
  _59 = _58->stmt;
  debug_gimple_stmt (_59);

  <bb 55> :
  _60 = (long unsigned int) k;
  _61 = std::vector<free_type>::operator[] (&callerRetTypearray, _60);
  _62 = _61->free_tree;
  D.248128 = ptr_derefs_may_alias_p (_62, mallocStmt_tree);

  <bb 56> :
  retval.399 = D.248128;
  if (retval.399 != 0)
    goto <bb 57>; [INV]
  else
    goto <bb 84>; [INV]

  <bb 57> :
  stderr.400_63 = stderr;
  __builtin_fwrite ("\x1b[40;31m  find free stmt free same pointer \x1b[0m\n", 1, 48, stderr.400_63);

  <bb 58> :
  _64 = (long unsigned int) k;
  _65 = std::vector<free_type>::operator[] (&callerRetTypearray, _64);
  _66 = _65->stmt;
  debug_gimple_stmt (_66);

  <bb 59> :
  _67 = (long unsigned int) k;
  _68 = std::vector<free_type>::operator[] (&callerRetTypearray, _67);
  _69 = _68->stmt;
  _70 = gimple_location_safe (_69);
  warning_at (_70, 0, "use location");

  <bb 60> :
  _71 = *freecount;
  _72 = _71 + 1;
  *freecount = _72;
  freemod.401_73 = freemod;
  if (freemod.401_73 != 0)
    goto <bb 61>; [INV]
  else
    goto <bb 84>; [INV]

  <bb 61> :
  debugmod.402_74 = debugmod;
  if (debugmod.402_74 != 0)
    goto <bb 62>; [INV]
  else
    goto <bb 84>; [INV]

  <bb 62> :
  _75 = (long unsigned int) k;
  _76 = std::vector<free_type>::operator[] (&callerRetTypearray, _75);
  _77 = _76->stmt;
  D.248129 = gimple_block (_77);

  <bb 63> :
  _78 = D.248129;
  D.193195 = _78;
  D.248130 = hash_map<tree_node*, int>::get (function_basicblock_collect, &D.193195);

  <bb 64> :
  _79 = D.248130;
  _80 = *_79;
  retval.403 = _80 == 0;
  D.193195 = {CLOBBER};
  if (retval.403 != 0)
    goto <bb 65>; [INV]
  else
    goto <bb 68>; [INV]

  <bb 65> :
  D.193197 = 1;
  _81 = (long unsigned int) k;
  _82 = std::vector<free_type>::operator[] (&callerRetTypearray, _81);
  _83 = _82->stmt;
  D.248132 = gimple_block (_83);

  <bb 66> :
  _84 = D.248132;
  D.193196 = _84;
  hash_map<tree_node*, int>::put (function_basicblock_collect, &D.193196, &D.193197);

  <bb 67> :
  D.193196 = {CLOBBER};
  D.193197 = {CLOBBER};
  stderr.404_85 = stderr;
  __builtin_fwrite ("dot graph start relate form ", 1, 28, stderr.404_85);
  goto <bb 69>; [INV]

  <bb 68> :
  stderr.405_86 = stderr;
  __builtin_fwrite ("dot graph start relate form ", 1, 28, stderr.405_86);

  <bb 69> :
  now_fucntion.406_87 = now_fucntion;
  stderr.407_88 = stderr;
  fprintf (stderr.407_88, "ID : %lu\n", now_fucntion.406_87);

  <bb 70> :
  _89 = (long unsigned int) k;
  _90 = std::vector<free_type>::operator[] (&callerRetTypearray, _89);
  _91 = _90->stmt;
  _92 = gimple_bb (_91);
  _93 = _92->index;
  function_tree.408_94 = function_tree;
  D.248135 = get_name (function_tree.408_94);

  <bb 71> :
  _95 = D.248135;
  stderr.409_96 = stderr;
  fprintf (stderr.409_96, "from %s basic block %d", _95, _93);

  <bb 72> :
  stderr.410_97 = stderr;
  __builtin_fwrite ("dot graph end relate end\n\n", 1, 26, stderr.410_97);

  <bb 73> :
  _98 = (long unsigned int) k;
  _99 = std::vector<free_type>::operator[] (&callerRetTypearray, _98);
  _100 = _99->stmt;
  now_laststmt = _100;
  _101 = rand ();
  x = (long unsigned int) _101;
  now_laststmtid = x;
  stderr.411_102 = stderr;
  fprintf (stderr.411_102, "dot graph relate stmt start ID : %lu stmt(free) :", x);

  <bb 74> :
  _103 = (long unsigned int) k;
  _104 = std::vector<free_type>::operator[] (&callerRetTypearray, _103);
  _105 = _104->stmt;
  debug (_105);

  <bb 75> :
  _106 = (long unsigned int) k;
  _107 = std::vector<free_type>::operator[] (&callerRetTypearray, _106);
  _108 = _107->stmt;
  _109 = gimple_location_safe (_108);
  warning_at (_109, 0, "use location");

  <bb 76> :
  stderr.412_110 = stderr;
  __builtin_fwrite ("dot graph relate end\n\n", 1, 22, stderr.412_110);

  <bb 77> :
  stderr.413_111 = stderr;
  __builtin_fwrite ("dot graph target color desc", 1, 27, stderr.413_111);

  <bb 78> :
  stderr.414_112 = stderr;
  __builtin_fwrite ("green", 1, 5, stderr.414_112);

  <bb 79> :
  stderr.415_113 = stderr;
  __builtin_fwrite ("dot graph target color desend\n\n", 1, 31, stderr.415_113);

  <bb 80> :
  stderr.416_114 = stderr;
  fprintf (stderr.416_114, "dot graph relate stmt start ID : %lu stmt(free) :", x);

  <bb 81> :
  _115 = (long unsigned int) k;
  _116 = std::vector<free_type>::operator[] (&callerRetTypearray, _115);
  _117 = _116->stmt;
  debug (_117);

  <bb 82> :
  _118 = (long unsigned int) k;
  _119 = std::vector<free_type>::operator[] (&callerRetTypearray, _118);
  _120 = _119->stmt;
  _121 = gimple_location_safe (_120);
  warning_at (_121, 0, "use location");

  <bb 83> :
  stderr.417_122 = stderr;
  __builtin_fwrite ("dot graph relate end\n\n", 1, 22, stderr.417_122);

  <bb 84> :
  k = k + 1;

  <bb 85> :
  _123 = (long unsigned int) k;
  _124 = std::vector<free_type>::size (&callerRetTypearray);
  retval.418 = _123 < _124;
  if (retval.418 != 0)
    goto <bb 54>; [INV]
  else
    goto <bb 86>; [INV]

  <bb 86> :
  function_basicblock_collect.419 = function_basicblock_collect;
  if (function_basicblock_collect.419 != 0B)
    goto <bb 87>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 87> :
  hash_map<tree_node*, int>::~hash_map (function_basicblock_collect.419);
  operator delete (function_basicblock_collect.419, 48);

  <bb 88> :
  std::vector<free_type>::~vector (&callerRetTypearray);
  function_free_array::~function_free_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 89> :
  function_pthread_detched_collect.422_125 = function_pthread_detched_collect;
  D.248139 = hash_map<tree_node*, function_pthread_detched_array>::get (function_pthread_detched_collect.422_125, &function_tree);

  <bb 90> :
  _126 = D.248139;
  if (_126 != 0B)
    goto <bb 91>; [INV]
  else
    goto <bb 94>; [INV]

  <bb 91> :
  if (fucntion_level == -1)
    goto <bb 92>; [INV]
  else
    goto <bb 94>; [INV]

  <bb 92> :
  fucntion_level.423_127 = (unsigned int) fucntion_level;
  DISABLE_TREACE.424_128 = DISABLE_TREACE;
  if (fucntion_level.423_127 != DISABLE_TREACE.424_128)
    goto <bb 93>; [INV]
  else
    goto <bb 94>; [INV]

  <bb 93> :
  iftmp.421 = 1;
  goto <bb 95>; [INV]

  <bb 94> :
  iftmp.421 = 0;

  <bb 95> :
  retval.420 = iftmp.421;
  if (retval.420 != 0)
    goto <bb 96>; [INV]
  else
    goto <bb 116>; [INV]

  <bb 96> :
  function_pthread_detched_collect.425_129 = function_pthread_detched_collect;
  D.248140 = hash_map<tree_node*, function_pthread_detched_array>::get (function_pthread_detched_collect.425_129, &function_tree);

  <bb 97> :
  _130 = D.248140;
  function_pthread_detched_array::function_pthread_detched_array (&callerFunArray, _130);

  <bb 98> :
  std::vector<pthread_detched_type>::vector (&callerRetTypearray, &callerFunArray.pthread_detched_array);

  <bb 99> :
  k = 0;
  goto <bb 114>; [INV]

  <bb 100> :
  stderr.426_131 = stderr;
  __builtin_fwrite ("\x1b[40;31m  find pthread_detched stmt  \x1b[0m\n", 1, 42, stderr.426_131);

  <bb 101> :
  _132 = (long unsigned int) k;
  _133 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _132);
  _134 = _133->stmt;
  debug_gimple_stmt (_134);

  <bb 102> :
  _135 = (long unsigned int) k;
  _136 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _135);
  _137 = _136->stmt;
  _138 = gimple_location_safe (_137);
  warning_at (_138, 0, "use location");

  <bb 103> :
  _139 = *freecount;
  _140 = _139 + 1;
  *freecount = _140;
  pthread_detachedmod.427_141 = pthread_detachedmod;
  if (pthread_detachedmod.427_141 != 0)
    goto <bb 104>; [INV]
  else
    goto <bb 113>; [INV]

  <bb 104> :
  stderr.428_142 = stderr;
  __builtin_fwrite ("dot graph start relate form ", 1, 28, stderr.428_142);

  <bb 105> :
  now_fucntion.429_143 = now_fucntion;
  stderr.430_144 = stderr;
  fprintf (stderr.430_144, "ID : %lu\n", now_fucntion.429_143);

  <bb 106> :
  _145 = (long unsigned int) k;
  _146 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _145);
  _147 = _146->stmt;
  _148 = gimple_bb (_147);
  _149 = _148->index;
  function_tree.431_150 = function_tree;
  D.248141 = get_name (function_tree.431_150);

  <bb 107> :
  _151 = D.248141;
  stderr.432_152 = stderr;
  fprintf (stderr.432_152, "from %s basic block %d", _151, _149);

  <bb 108> :
  stderr.433_153 = stderr;
  __builtin_fwrite ("dot graph end relate end\n\n", 1, 26, stderr.433_153);

  <bb 109> :
  _154 = (long unsigned int) k;
  _155 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _154);
  _156 = _155->stmt;
  now_laststmt = _156;
  _157 = rand ();
  x = (long unsigned int) _157;
  now_laststmtid = x;
  stderr.434_158 = stderr;
  fprintf (stderr.434_158, "dot graph relate stmt start ID : %lu stmt(pthread_detched)) :", x);

  <bb 110> :
  _159 = (long unsigned int) k;
  _160 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _159);
  _161 = _160->stmt;
  debug (_161);

  <bb 111> :
  _162 = (long unsigned int) k;
  _163 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _162);
  _164 = _163->stmt;
  _165 = gimple_location_safe (_164);
  warning_at (_165, 0, "use location");

  <bb 112> :
  stderr.435_166 = stderr;
  __builtin_fwrite ("dot graph relate end\n\n", 1, 22, stderr.435_166);

  <bb 113> :
  k = k + 1;

  <bb 114> :
  _167 = (long unsigned int) k;
  _168 = std::vector<pthread_detched_type>::size (&callerRetTypearray);
  retval.436 = _167 < _168;
  if (retval.436 != 0)
    goto <bb 100>; [INV]
  else
    goto <bb 115>; [INV]

  <bb 115> :
  std::vector<pthread_detched_type>::~vector (&callerRetTypearray);
  function_pthread_detched_array::~function_pthread_detched_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 116> :
  function_pthread_exit_collect.439_169 = function_pthread_exit_collect;
  D.248145 = hash_map<tree_node*, function_pthread_exit_array>::get (function_pthread_exit_collect.439_169, &function_tree);

  <bb 117> :
  _170 = D.248145;
  if (_170 != 0B)
    goto <bb 118>; [INV]
  else
    goto <bb 121>; [INV]

  <bb 118> :
  if (fucntion_level == -1)
    goto <bb 119>; [INV]
  else
    goto <bb 121>; [INV]

  <bb 119> :
  fucntion_level.440_171 = (unsigned int) fucntion_level;
  DISABLE_TREACE.441_172 = DISABLE_TREACE;
  if (fucntion_level.440_171 != DISABLE_TREACE.441_172)
    goto <bb 120>; [INV]
  else
    goto <bb 121>; [INV]

  <bb 120> :
  iftmp.438 = 1;
  goto <bb 122>; [INV]

  <bb 121> :
  iftmp.438 = 0;

  <bb 122> :
  retval.437 = iftmp.438;
  if (retval.437 != 0)
    goto <bb 123>; [INV]
  else
    goto <bb 143>; [INV]

  <bb 123> :
  function_pthread_exit_collect.442_173 = function_pthread_exit_collect;
  D.248146 = hash_map<tree_node*, function_pthread_exit_array>::get (function_pthread_exit_collect.442_173, &function_tree);

  <bb 124> :
  _174 = D.248146;
  function_pthread_exit_array::function_pthread_exit_array (&callerFunArray, _174);

  <bb 125> :
  std::vector<pthread_exit_type>::vector (&callerRetTypearray, &callerFunArray.pthread_exit_array);

  <bb 126> :
  k = 0;
  goto <bb 141>; [INV]

  <bb 127> :
  stderr.443_175 = stderr;
  __builtin_fwrite ("\x1b[40;31m  find pthread_exit stmt  \x1b[0m\n", 1, 39, stderr.443_175);

  <bb 128> :
  _176 = (long unsigned int) k;
  _177 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _176);
  _178 = _177->stmt;
  debug_gimple_stmt (_178);

  <bb 129> :
  _179 = (long unsigned int) k;
  _180 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _179);
  _181 = _180->stmt;
  _182 = gimple_location_safe (_181);
  warning_at (_182, 0, "use location");

  <bb 130> :
  pthread_exitmod.444_183 = pthread_exitmod;
  if (pthread_exitmod.444_183 != 0)
    goto <bb 131>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 131> :
  stderr.445_184 = stderr;
  __builtin_fwrite ("dot graph start relate form ", 1, 28, stderr.445_184);

  <bb 132> :
  now_fucntion.446_185 = now_fucntion;
  stderr.447_186 = stderr;
  fprintf (stderr.447_186, "ID : %lu\n", now_fucntion.446_185);

  <bb 133> :
  _187 = (long unsigned int) k;
  _188 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _187);
  _189 = _188->stmt;
  _190 = gimple_bb (_189);
  _191 = _190->index;
  function_tree.448_192 = function_tree;
  D.248147 = get_name (function_tree.448_192);

  <bb 134> :
  _193 = D.248147;
  stderr.449_194 = stderr;
  fprintf (stderr.449_194, "from %s basic block %d", _193, _191);

  <bb 135> :
  stderr.450_195 = stderr;
  __builtin_fwrite ("dot graph end relate end\n\n", 1, 26, stderr.450_195);

  <bb 136> :
  _196 = (long unsigned int) k;
  _197 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _196);
  _198 = _197->stmt;
  now_laststmt = _198;
  _199 = rand ();
  x = (long unsigned int) _199;
  now_laststmtid = x;
  stderr.451_200 = stderr;
  fprintf (stderr.451_200, "dot graph relate stmt start ID : %lu stmt(pthread_exit) :", x);

  <bb 137> :
  _201 = (long unsigned int) k;
  _202 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _201);
  _203 = _202->stmt;
  debug (_203);

  <bb 138> :
  _204 = (long unsigned int) k;
  _205 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _204);
  _206 = _205->stmt;
  _207 = gimple_location_safe (_206);
  warning_at (_207, 0, "use location");

  <bb 139> :
  stderr.452_208 = stderr;
  __builtin_fwrite ("dot graph relate end\n\n", 1, 22, stderr.452_208);

  <bb 140> :
  k = k + 1;

  <bb 141> :
  _209 = (long unsigned int) k;
  _210 = std::vector<pthread_exit_type>::size (&callerRetTypearray);
  retval.453 = _209 < _210;
  if (retval.453 != 0)
    goto <bb 127>; [INV]
  else
    goto <bb 142>; [INV]

  <bb 142> :
  std::vector<pthread_exit_type>::~vector (&callerRetTypearray);
  function_pthread_exit_array::~function_pthread_exit_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 143> :
  tracerelatestmt.454_211 = tracerelatestmt;
  _212 = (int) tracerelatestmt.454_211;
  if (_212 == 1)
    goto <bb 144>; [INV]
  else
    goto <bb 150>; [INV]

  <bb 144> :
  if (fucntion_level != -1)
    goto <bb 145>; [INV]
  else
    goto <bb 150>; [INV]

  <bb 145> :
  fucntion_level.455_213 = (unsigned int) fucntion_level;
  DISABLE_TREACE.456_214 = DISABLE_TREACE;
  if (fucntion_level.455_213 != DISABLE_TREACE.456_214)
    goto <bb 146>; [INV]
  else
    goto <bb 150>; [INV]

  <bb 146> :
  if (mallocStmt_tree != 0B)
    goto <bb 147>; [INV]
  else
    goto <bb 150>; [INV]

  <bb 147> :
  pi1 = mallocStmt_tree->ssa_name.info.ptr_info;
  pt1 = &pi1->pt;
  if (pt1 != 0B)
    goto <bb 148>; [INV]
  else
    goto <bb 150>; [INV]

  <bb 148> :
  _215 = BIT_FIELD_REF <*pt1, 8, 0>;
  _216 = _215 & 16;
  if (_216 != 0)
    goto <bb 149>; [INV]
  else
    goto <bb 150>; [INV]

  <bb 149> :
  function_tree.457_217 = function_tree;
  trace_fucntion_relate_stmt (node, function_tree.457_217, mallocStmt_tree);

  <bb 150> :
  if (fucntion_level != -1)
    goto <bb 151>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 151> :
  fucntion_level.458_218 = (unsigned int) fucntion_level;
  DISABLE_TREACE.459_219 = DISABLE_TREACE;
  if (fucntion_level.458_218 != DISABLE_TREACE.459_219)
    goto <bb 152>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 152> :
  fucntion_level = fucntion_level + 1;

  <bb 153> :
  _220 = std::vector<function_path>::size (&function_path_array);
  retval.460 = _220 == 0;
  if (retval.460 != 0)
    goto <bb 154>; [INV]
  else
    goto <bb 167>; [INV]

  <bb 154> :
  function_return_collect.462_221 = function_return_collect;
  D.248151 = hash_map<tree_node*, function_return_array>::get (function_return_collect.462_221, &function_tree);

  <bb 155> :
  _222 = D.248151;
  retval.461 = _222 != 0B;
  if (retval.461 != 0)
    goto <bb 156>; [INV]
  else
    goto <bb 167>; [INV]

  <bb 156> :
  function_return_collect.463_223 = function_return_collect;
  D.248152 = hash_map<tree_node*, function_return_array>::get (function_return_collect.463_223, &function_tree);

  <bb 157> :
  _224 = D.248152;
  function_return_array::function_return_array (&callerFunArray, _224);

  <bb 158> :
  function_return_collect.466_225 = function_return_collect;
  D.248153 = hash_map<tree_node*, function_return_array>::get (function_return_collect.466_225, &function_tree);

  <bb 159> :
  _226 = D.248153;
  if (_226 != 0B)
    goto <bb 160>; [INV]
  else
    goto <bb 162>; [INV]

  <bb 160> :
  _227 = callerFunArray.return_type_num;
  if (_227 == 2)
    goto <bb 161>; [INV]
  else
    goto <bb 162>; [INV]

  <bb 161> :
  iftmp.465 = 1;
  goto <bb 163>; [INV]

  <bb 162> :
  iftmp.465 = 0;

  <bb 163> :
  retval.464 = iftmp.465;
  if (retval.464 != 0)
    goto <bb 164>; [INV]
  else
    goto <bb 166>; [INV]

  <bb 164> :
  function_tree.467_228 = function_tree;
  D.248154 = get_name (function_tree.467_228);

  <bb 165> :
  _229 = D.248154;
  stderr.468_230 = stderr;
  fprintf (stderr.468_230, "%s this fucntion return value is heap-object \n", _229);

  <bb 166> :
  function_return_array::~function_return_array (&callerFunArray);
  callerFunArray = {CLOBBER};

  <bb 167> :
  function_return_collect.469_231 = function_return_collect;
  D.248157 = hash_map<tree_node*, function_return_array>::get (function_return_collect.469_231, &function_tree);

  <bb 168> :
  callerFunArray = D.248157;
  std::vector<return_type>::vector (&callerRetTypearray);
  function_return_array::function_return_array (&calleeFunArray);
  if (callerFunArray != 0B)
    goto <bb 169>; [INV]
  else
    goto <bb 211>; [INV]

  <bb 169> :
  i = 0;
  goto <bb 210>; [INV]

  <bb 170> :
  find = 0;
  _232 = (long unsigned int) i;
  _233 = std::vector<function_path>::operator[] (&function_path_array, _232);
  _234 = _233->next;
  D.248158 = get_name (_234);

  <bb 171> :
  _235 = D.248158;
  stderr.470_236 = stderr;
  fprintf (stderr.470_236, "\x1b[40;42m =======pre add _ fucntion:%s========= \x1b[0m\n", _235);

  <bb 172> :
  o = 0;
  goto <bb 178>; [INV]

  <bb 173> :
  _237 = (long unsigned int) o;
  _238 = std::vector<tree_node*>::operator[] (&traceStack, _237);
  _239 = *_238;
  _240 = (long unsigned int) i;
  _241 = std::vector<function_path>::operator[] (&function_path_array, _240);
  _242 = _241->next;
  retval.471 = _239 == _242;
  if (retval.471 != 0)
    goto <bb 174>; [INV]
  else
    goto <bb 177>; [INV]

  <bb 174> :
  find = 1;
  _243 = (long unsigned int) o;
  _244 = std::vector<tree_node*>::operator[] (&traceStack, _243);
  _245 = *_244;
  D.248159 = get_name (_245);

  <bb 175> :
  _246 = D.248159;
  stderr.472_247 = stderr;
  fprintf (stderr.472_247, "\x1b[40;41m =======recursive_fun2:%s========= \x1b[0m\n", _246);

  <bb 176> :
  goto <bb 179>; [INV]

  <bb 177> :
  o = o + 1;

  <bb 178> :
  _248 = (long unsigned int) o;
  _249 = std::vector<tree_node*>::size (&traceStack);
  retval.473 = _248 < _249;
  if (retval.473 != 0)
    goto <bb 173>; [INV]
  else
    goto <bb 179>; [INV]

  <bb 179> :
  _250 = (long unsigned int) i;
  _251 = std::vector<function_path>::operator[] (&function_path_array, _250);
  _252 = _251->next;
  retval.474 = _252 != 0B;
  if (retval.474 != 0)
    goto <bb 180>; [INV]
  else
    goto <bb 203>; [INV]

  <bb 180> :
  function_return_collect.476_253 = function_return_collect;
  _254 = (long unsigned int) i;
  _255 = std::vector<function_path>::operator[] (&function_path_array, _254);
  _256 = &_255->next;
  D.248160 = hash_map<tree_node*, function_return_array>::get (function_return_collect.476_253, _256);

  <bb 181> :
  _257 = D.248160;
  retval.475 = _257 != 0B;
  if (retval.475 != 0)
    goto <bb 182>; [INV]
  else
    goto <bb 203>; [INV]

  <bb 182> :
  _258 = &callerFunArray->return_type_array;
  std::vector<return_type>::operator= (&callerRetTypearray, _258);

  <bb 183> :
  function_return_collect.477_259 = function_return_collect;
  _260 = (long unsigned int) i;
  _261 = std::vector<function_path>::operator[] (&function_path_array, _260);
  _262 = &_261->next;
  D.248161 = hash_map<tree_node*, function_return_array>::get (function_return_collect.477_259, _262);

  <bb 184> :
  _263 = D.248161;
  function_return_array::operator= (&calleeFunArray, _263);

  <bb 185> :
  function_return_array::function_return_array (&find_fun_array);
  std::vector<return_type>::vector (&ret_type_find_fun_array);
  _264 = (long unsigned int) i;
  _265 = std::vector<function_path>::operator[] (&function_path_array, _264);
  _266 = _265->next;
  getFucntionDecl = _266;
  function_return_collect.479_267 = function_return_collect;
  D.248162 = hash_map<tree_node*, function_return_array>::get (function_return_collect.479_267, &getFucntionDecl);

  <bb 186> :
  _268 = D.248162;
  retval.478 = _268 == 0B;
  if (retval.478 != 0)
    goto <bb 187>; [INV]
  else
    goto <bb 188>; [INV]

  <bb 187> :
  std::vector<return_type>::operator= (&find_fun_array.return_type_array, &ret_type_find_fun_array);
  goto <bb 190>; [INV]

  <bb 188> :
  function_return_collect.480_269 = function_return_collect;
  D.248163 = hash_map<tree_node*, function_return_array>::get (function_return_collect.480_269, &getFucntionDecl);

  <bb 189> :
  _270 = D.248163;
  function_return_array::operator= (&find_fun_array, _270);

  <bb 190> :
  k = 0;
  goto <bb 201>; [INV]

  <bb 191> :
  _271 = calleeFunArray.return_type_num;
  if (_271 == 2)
    goto <bb 192>; [INV]
  else
    goto <bb 200>; [INV]

  <bb 192> :
  _272 = (long unsigned int) k;
  _273 = std::vector<return_type>::operator[] (&callerRetTypearray, _272);
  _274 = _273->return_tree;
  _275 = (long unsigned int) i;
  _276 = std::vector<function_path>::operator[] (&function_path_array, _275);
  _277 = _276->next;
  retval.481 = _274 == _277;
  if (retval.481 != 0)
    goto <bb 193>; [INV]
  else
    goto <bb 200>; [INV]

  <bb 193> :
  _278 = (long unsigned int) i;
  _279 = std::vector<function_path>::operator[] (&function_path_array, _278);
  _280 = _279->next;
  D.248164 = get_name (_280);

  <bb 194> :
  _281 = D.248164;
  stderr.482_282 = stderr;
  fprintf (stderr.482_282, "%s this fucntion return value is heap-object \n", _281);

  <bb 195> :
  _283 = (long unsigned int) k;
  _284 = std::vector<return_type>::operator[] (&callerRetTypearray, _283);
  _285 = _284->return_tree;
  D.248165 = get_name (_285);

  <bb 196> :
  _286 = D.248165;
  function_tree.483_287 = function_tree;
  D.248166 = get_name (function_tree.483_287);

  <bb 197> :
  _288 = D.248166;
  stderr.484_289 = stderr;
  fprintf (stderr.484_289, "%s this fucntion return value is heap-object %s\n", _288, _286);

  <bb 198> :
  fucntion_level.485_290 = (unsigned int) fucntion_level;
  RET_HEAP_OBJECT.486_291 = RET_HEAP_OBJECT;
  if (fucntion_level.485_290 == RET_HEAP_OBJECT.486_291)
    goto <bb 199>; [INV]
  else
    goto <bb 200>; [INV]

  <bb 199> :
  EFFECTIVE.487_292 = EFFECTIVE;
  EFFECTIVE.488_293 = (int) EFFECTIVE.487_292;
  *freecount = EFFECTIVE.488_293;

  <bb 200> :
  k = k + 1;

  <bb 201> :
  _294 = (long unsigned int) k;
  _295 = std::vector<return_type>::size (&callerRetTypearray);
  retval.489 = _294 < _295;
  if (retval.489 != 0)
    goto <bb 191>; [INV]
  else
    goto <bb 202>; [INV]

  <bb 202> :
  std::vector<return_type>::~vector (&ret_type_find_fun_array);
  function_return_array::~function_return_array (&find_fun_array);
  find_fun_array = {CLOBBER};
  ret_type_find_fun_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};

  <bb 203> :
  if (find == 0)
    goto <bb 204>; [INV]
  else
    goto <bb 209>; [INV]

  <bb 204> :
  _296 = (long unsigned int) i;
  _297 = std::vector<function_path>::operator[] (&function_path_array, _296);
  _298 = _297->next;
  D.248170 = get_name (_298);

  <bb 205> :
  _299 = D.248170;
  stderr.490_300 = stderr;
  fprintf (stderr.490_300, "\x1b[40;46m =======add node_fun stack:%s========= \x1b[0m\n", _299);

  <bb 206> :
  _301 = (long unsigned int) i;
  _302 = std::vector<function_path>::operator[] (&function_path_array, _301);
  _303 = &_302->next;
  std::vector<tree_node*>::push_back (&traceStack, _303);

  <bb 207> :
  _304 = (long unsigned int) i;
  _305 = std::vector<function_path>::operator[] (&function_path_array, _304);
  _306 = _305->next;
  trace_function_path (_306, fucntion_level, mallocStmt_tree, freecount);

  <bb 208> :
  std::vector<tree_node*>::pop_back (&traceStack);

  <bb 209> :
  i = i + 1;

  <bb 210> :
  _307 = (long unsigned int) i;
  _308 = std::vector<function_path>::size (&function_path_array);
  retval.491 = _307 < _308;
  if (retval.491 != 0)
    goto <bb 170>; [INV]
  else
    goto <bb 211>; [INV]

  <bb 211> :
  function_return_array::~function_return_array (&calleeFunArray);
  std::vector<return_type>::~vector (&callerRetTypearray);
  std::vector<function_path>::~vector (&function_path_array);
  function_path_array::~function_path_array (&fun_array);
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  calleeFunArray = {CLOBBER};
  return;

  <bb 212> :
<L161>:
  return D.247945;

  <bb 213> :
<L162>:
  std::vector<return_type>::~vector (&callerRetTypearray);
  resx 6

  <bb 214> :
<L163>:
  function_return_array::~function_return_array (&callerFunArray);
  resx 5

  <bb 215> :
<L164>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 4

  <bb 216> :
<L165>:
  operator delete (D.193190, 48);
  resx 13

  <bb 217> :
<L166>:
  D.193192 = {CLOBBER};
  resx 16

  <bb 218> :
<L167>:
  D.193193 = {CLOBBER};
  resx 15

  <bb 219> :
<L168>:
  D.193195 = {CLOBBER};
  resx 19

  <bb 220> :
<L169>:
  D.193196 = {CLOBBER};
  resx 22

  <bb 221> :
<L170>:
  D.193197 = {CLOBBER};
  resx 21

  <bb 222> :
<L171>:
  std::vector<free_type>::~vector (&callerRetTypearray);
  resx 12

  <bb 223> :
<L172>:
  function_free_array::~function_free_array (&callerFunArray);
  resx 11

  <bb 224> :
<L173>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 10

  <bb 225> :
<L174>:
  std::vector<pthread_detched_type>::~vector (&callerRetTypearray);
  resx 31

  <bb 226> :
<L175>:
  function_pthread_detched_array::~function_pthread_detched_array (&callerFunArray);
  resx 30

  <bb 227> :
<L176>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 29

  <bb 228> :
<L177>:
  std::vector<pthread_exit_type>::~vector (&callerRetTypearray);
  resx 37

  <bb 229> :
<L178>:
  function_pthread_exit_array::~function_pthread_exit_array (&callerFunArray);
  resx 36

  <bb 230> :
<L179>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 35

  <bb 231> :
<L180>:
  function_return_array::~function_return_array (&callerFunArray);
  resx 42

  <bb 232> :
<L181>:
  callerFunArray = {CLOBBER};
  resx 41

  <bb 233> :
<L182>:
  std::vector<return_type>::~vector (&ret_type_find_fun_array);
  resx 49

  <bb 234> :
<L183>:
  function_return_array::~function_return_array (&find_fun_array);
  resx 48

  <bb 235> :
<L184>:
  find_fun_array = {CLOBBER};
  ret_type_find_fun_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};
  resx 47

  <bb 236> :
<L185>:
  function_return_array::~function_return_array (&calleeFunArray);
  resx 46

  <bb 237> :
<L186>:
  std::vector<return_type>::~vector (&callerRetTypearray);
  resx 45

  <bb 238> :
<L187>:
  std::vector<function_path>::~vector (&function_path_array);
  resx 3

  <bb 239> :
<L188>:
  function_path_array::~function_path_array (&fun_array);
  resx 2

  <bb 240> :
<L189>:
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  calleeFunArray = {CLOBBER};
  resx 1

}



;; Function hash_map<tree_node*, function_path_array>::get (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7652, decl_uid=191909, cgraph_uid=4284, symbol_order=5069)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_path_array * hash_map<tree_node*, function_path_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.248186;
  struct hash_entry & D.248185;
  unsigned int D.248184;
  struct hash_entry & e;
  struct function_path_array * iftmp.492;
  struct function_path_array * D.248178;

  <bb 2> :
  _1 = &this->m_table;
  D.248184 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::hash (k);
  _2 = D.248184;
  D.248185 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.248185;
  D.248186 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_empty<hash_map<tree_node*, function_path_array>::hash_entry> (e);
  _3 = D.248186;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.492 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.492 = &e->m_value;

  <bb 5> :
  D.248178 = iftmp.492;

  <bb 6> :
<L3>:
  return D.248178;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE4hashERKS2_, funcdef_no=8516, decl_uid=191865, cgraph_uid=5148, symbol_order=5937)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::hash (union tree_node * const & h)
{
  hashval_t D.248187;

  <bb 2> :
  D.248187 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.248187;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8517, decl_uid=192052, cgraph_uid=5149, symbol_order=5938)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.248221;
  bool D.248220;
  bool D.248219;
  bool D.248218;
  bool D.248217;
  bool D.248216;
  struct value_type * D.248215;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.496;
  bool retval.495;
  struct value_type & D.248201;
  bool iftmp.494;
  bool retval.493;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 40;
  entry = _5 + _7;
  D.248216 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.248216;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.248217 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.248217;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.248218 = hash_map<tree_node*, function_path_array>::hash_entry::equal (entry, comparable);
  _11 = D.248218;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.494 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.494 = 0;

  <bb 8> :
  retval.493 = iftmp.494;
  if (retval.493 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.248201 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  entry = _17 + _19;
  D.248219 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.248219;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.248220 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.248220;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.248221 = hash_map<tree_node*, function_path_array>::hash_entry::equal (entry, comparable);
  _23 = D.248221;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.496 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.496 = 0;

  <bb 18> :
  retval.495 = iftmp.496;
  if (retval.495 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.248201 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.248201;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8921, decl_uid=192148, cgraph_uid=5553, symbol_order=6342)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.248224;
  bool D.248222;

  <bb 2> :
  D.248224 = hash_map<tree_node*, function_path_array>::hash_entry::is_empty (v);
  D.248222 = D.248224;

  <bb 3> :
<L0>:
  return D.248222;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8790, decl_uid=191978, cgraph_uid=5422, symbol_order=6211)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_path_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.248227;
  bool D.248225;

  <bb 2> :
  D.248227 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_empty<hash_map<tree_node*, function_path_array>::hash_entry> (e);
  D.248225 = D.248227;

  <bb 3> :
<L0>:
  return D.248225;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8922, decl_uid=192146, cgraph_uid=5554, symbol_order=6343)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.248230;
  bool D.248228;

  <bb 2> :
  D.248230 = hash_map<tree_node*, function_path_array>::hash_entry::is_deleted (v);
  D.248228 = D.248230;

  <bb 3> :
<L0>:
  return D.248228;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9740, decl_uid=191973, cgraph_uid=6372, symbol_order=7161)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_path_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.248233;
  bool D.248231;

  <bb 2> :
  D.248233 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_deleted<hash_map<tree_node*, function_path_array>::hash_entry> (e);
  D.248231 = D.248233;

  <bb 3> :
<L0>:
  return D.248231;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_deleted<hash_map<tree_node*, function_path_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10295, decl_uid=237351, cgraph_uid=6927, symbol_order=7720)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_deleted<hash_map<tree_node*, function_path_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248234;

  <bb 2> :
  _1 = entry->m_key;
  D.248234 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.248234;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9289, decl_uid=191966, cgraph_uid=5921, symbol_order=6710)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_path_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.248238;
  bool D.248236;

  <bb 2> :
  _1 = &a->m_key;
  D.248238 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::equal_keys (_1, b);
  D.248236 = D.248238;

  <bb 3> :
<L0>:
  return D.248236;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE10equal_keysERKS2_S7_, funcdef_no=9976, decl_uid=191867, cgraph_uid=6608, symbol_order=7401)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.248239;

  <bb 2> :
  D.248239 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.248239;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_empty<hash_map<tree_node*, function_path_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8518, decl_uid=211227, cgraph_uid=5150, symbol_order=5939)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_empty<hash_map<tree_node*, function_path_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248241;

  <bb 2> :
  _1 = entry->m_key;
  D.248241 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.248241;

}



;; Function function_path_array::function_path_array (_ZN19function_path_arrayC2ERKS_, funcdef_no=6318, decl_uid=192247, cgraph_uid=3293, symbol_order=4069)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_path_array::function_path_array (struct function_path_array * const this, const struct function_path_array & D.192249)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.192249->funtion_type_num;
  this->funtion_type_num = _1;
  _2 = &this->function_path_array;
  _3 = &D.192249->function_path_array;
  std::vector<function_path>::vector (_2, _3);
  return;

}



;; Function std::vector<function_path>::vector (_ZNSt6vectorI13function_pathSaIS0_EEC2ERKS2_, funcdef_no=7654, decl_uid=174520, cgraph_uid=4286, symbol_order=5071)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<function_path>::vector (struct vector * const this, const struct vector & __x)
{
  struct function_path * D.248247;
  struct __normal_iterator D.248244;
  struct __normal_iterator D.248243;
  struct allocator D.211338;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.174557;
  _2 = &__x->D.174557;
  _3 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_2);
  D.211338 = __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<function_path>::size (__x);
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_1, _4, &D.211338);

  <bb 3> :
  std::allocator<function_path>::~allocator (&D.211338);
  D.211338 = {CLOBBER};
  _5 = &this->D.174557;
  _6 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_5);
  _7 = this->D.174557._M_impl.D.173902._M_start;
  D.248243 = std::vector<function_path>::end (__x);
  D.248244 = std::vector<function_path>::begin (__x);
  D.248247 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*, function_path> (D.248244, D.248243, _7, _6);

  <bb 4> :
  _8 = D.248247;
  this->D.174557._M_impl.D.173902._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<function_path>::~allocator (&D.211338);
  resx 2

  <bb 6> :
<L1>:
  D.211338 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.174557;
  std::_Vector_base<function_path, std::allocator<function_path> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI13function_pathSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8520, decl_uid=173792, cgraph_uid=5152, symbol_order=5941)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.248249;

  <bb 2> :
  D.248249 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248249;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI13function_pathES1_E17_S_select_on_copyERKS2_, funcdef_no=8519, decl_uid=173764, cgraph_uid=5151, symbol_order=5940)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<function_path> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<function_path> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI13function_pathEE37select_on_container_copy_constructionERKS1_, funcdef_no=9290, decl_uid=173729, cgraph_uid=5922, symbol_order=6711)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<function_path> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<function_path>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<function_path>::allocator (_ZNSaI13function_pathEC2ERKS0_, funcdef_no=9978, decl_uid=173672, cgraph_uid=6610, symbol_order=7403)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<function_path>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<function_path>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<function_path>::new_allocator (_ZN9__gnu_cxx13new_allocatorI13function_pathEC2ERKS2_, funcdef_no=10491, decl_uid=173601, cgraph_uid=7123, symbol_order=7916)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<function_path>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.173603)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_ZNSt12_Vector_baseI13function_pathSaIS0_EEC2EmRKS1_, funcdef_no=8522, decl_uid=173989, cgraph_uid=5154, symbol_order=5943)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI13function_pathSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9292, decl_uid=173894, cgraph_uid=5924, symbol_order=6713)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<function_path>::allocator (this, __a);
  _1 = &this->D.173902;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI13function_pathSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8739, decl_uid=173849, cgraph_uid=5371, symbol_order=6160)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_M_create_storage (_ZNSt12_Vector_baseI13function_pathSaIS0_EE17_M_create_storageEm, funcdef_no=9294, decl_uid=173913, cgraph_uid=5926, symbol_order=6715)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct function_path * D.248256;

  <bb 2> :
  D.248256 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_allocate (this, __n);
  _1 = D.248256;
  this->_M_impl.D.173902._M_start = _1;
  _2 = this->_M_impl.D.173902._M_start;
  this->_M_impl.D.173902._M_finish = _2;
  _3 = this->_M_impl.D.173902._M_start;
  _4 = __n * 24;
  _5 = _3 + _4;
  this->_M_impl.D.173902._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_M_allocate (_ZNSt12_Vector_baseI13function_pathSaIS0_EE11_M_allocateEm, funcdef_no=9559, decl_uid=173906, cgraph_uid=6191, symbol_order=6980)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_path * std::_Vector_base<function_path, std::allocator<function_path> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct function_path * D.248263;
  struct function_path * iftmp.497;
  struct function_path * D.248257;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.248263 = std::allocator_traits<std::allocator<function_path> >::allocate (_1, __n);
  iftmp.497 = D.248263;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.497 = 0B;

  <bb 5> :
  D.248257 = iftmp.497;

  <bb 6> :
<L3>:
  return D.248257;

}



;; Function std::allocator_traits<std::allocator<function_path> >::allocate (_ZNSt16allocator_traitsISaI13function_pathEE8allocateERS1_m, funcdef_no=10149, decl_uid=173707, cgraph_uid=6781, symbol_order=7574)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct function_path * std::allocator_traits<std::allocator<function_path> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct function_path * D.248266;
  struct function_path * D.248264;

  <bb 2> :
  D.248266 = __gnu_cxx::new_allocator<function_path>::allocate (__a, __n, 0B);
  D.248264 = D.248266;

  <bb 3> :
<L0>:
  return D.248264;

}



;; Function __gnu_cxx::new_allocator<function_path>::allocate (_ZN9__gnu_cxx13new_allocatorI13function_pathE8allocateEmPKv, funcdef_no=10610, decl_uid=173561, cgraph_uid=7243, symbol_order=8036)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct function_path * __gnu_cxx::new_allocator<function_path>::allocate (struct new_allocator * const this, size_type __n, const void * D.243637)
{
  struct function_path * D.248277;
  struct function_path * D.248276;
  align_val_t __al;
  struct function_path * D.248274;
  bool retval.498;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<function_path>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.498 = _4 != 0;
  if (retval.498 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 768614336404564650)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 24;
  D.248277 = operator new (_6);
  D.248274 = D.248277;

  <bb 7> :
<L6>:
  return D.248274;

}



;; Function __gnu_cxx::new_allocator<function_path>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI13function_pathE11_M_max_sizeEv, funcdef_no=10611, decl_uid=173588, cgraph_uid=7242, symbol_order=8035)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<function_path>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.248278;

  <bb 2> :
  D.248278 = 384307168202282325;

  <bb 3> :
<L0>:
  return D.248278;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI13function_pathSaIS0_EE12_Vector_implD2Ev, funcdef_no=6798, decl_uid=173949, cgraph_uid=3426, symbol_order=4203)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<function_path>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<function_path>::~allocator (_ZNSaI13function_pathED2Ev, funcdef_no=7793, decl_uid=173682, cgraph_uid=4425, symbol_order=5210)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<function_path>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<function_path>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<function_path>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI13function_pathED2Ev, funcdef_no=8742, decl_uid=173611, cgraph_uid=5374, symbol_order=6163)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<function_path>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI13function_pathSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8526, decl_uid=173790, cgraph_uid=5158, symbol_order=5947)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.248280;

  <bb 2> :
  D.248280 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248280;

}



;; Function std::vector<function_path>::end (_ZNKSt6vectorI13function_pathSaIS0_EE3endEv, funcdef_no=8525, decl_uid=174172, cgraph_uid=5157, symbol_order=5946)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<function_path>::end (const struct vector * const this)
{
  struct const_iterator D.221983;
  struct const_iterator D.248282;

  <bb 2> :
  _1 = &this->D.174557._M_impl.D.173902._M_finish;
  __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::__normal_iterator (&D.221983, _1);
  D.248282 = D.221983;
  D.221983 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248282;

}



;; Function __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9296, decl_uid=211307, cgraph_uid=5928, symbol_order=6717)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::__normal_iterator (struct __normal_iterator * const this, const struct function_path * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<function_path>::begin (_ZNKSt6vectorI13function_pathSaIS0_EE5beginEv, funcdef_no=8524, decl_uid=174168, cgraph_uid=5156, symbol_order=5945)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<function_path>::begin (const struct vector * const this)
{
  struct const_iterator D.221981;
  struct const_iterator D.248285;

  <bb 2> :
  _1 = &this->D.174557._M_impl.D.173902._M_start;
  __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::__normal_iterator (&D.221981, _1);
  D.248285 = D.221981;
  D.221981 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248285;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*, function_path> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8527, decl_uid=211327, cgraph_uid=5159, symbol_order=5948)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*, function_path> (struct __normal_iterator __first, struct __normal_iterator __last, struct function_path * __result, struct allocator & D.221988)
{
  struct function_path * D.248290;
  struct function_path * D.248288;

  <bb 2> :
  D.248290 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (__first, __last, __result);
  D.248288 = D.248290;

  <bb 3> :
<L0>:
  return D.248288;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9298, decl_uid=221990, cgraph_uid=5931, symbol_order=6720)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (struct __normal_iterator __first, struct __normal_iterator __last, struct function_path * __result)
{
  struct function_path * D.248293;
  const bool __assignable;
  struct function_path * D.248291;

  <bb 2> :
  __assignable = 1;
  D.248293 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (__first, __last, __result);
  D.248291 = D.248293;

  <bb 3> :
<L0>:
  return D.248291;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=9980, decl_uid=233161, cgraph_uid=6612, symbol_order=7405)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (struct __normal_iterator __first, struct __normal_iterator __last, struct function_path * __result)
{
  struct function_path * D.248296;
  struct function_path * D.248294;

  <bb 2> :
  D.248296 = std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (__first, __last, __result);
  D.248294 = D.248296;

  <bb 3> :
<L0>:
  return D.248294;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10493, decl_uid=239716, cgraph_uid=7125, symbol_order=7918)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (struct __normal_iterator __first, struct __normal_iterator __last, struct function_path * __result)
{
  struct function_path * D.248301;
  struct __normal_iterator D.248299;
  struct __normal_iterator D.248298;
  struct function_path * D.248297;

  <bb 2> :
  D.248298 = std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (__last);
  D.248299 = std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (__first);
  D.248301 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (D.248299, D.248298, __result);
  D.248297 = D.248301;

  <bb 3> :
<L0>:
  return D.248297;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9560, decl_uid=227189, cgraph_uid=6192, symbol_order=6981)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.248302;

  <bb 2> :
  D.248302 = __it;

  <bb 3> :
<L0>:
  return D.248302;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEEPS2_ET1_T0_SB_SA_, funcdef_no=10784, decl_uid=243141, cgraph_uid=7416, symbol_order=8211)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (struct __normal_iterator __first, struct __normal_iterator __last, struct function_path * __result)
{
  struct function_path * D.248306;
  struct function_path * D.248304;

  <bb 2> :
  __result.499_1 = __result;
  _2 = std::__niter_base<function_path*> (__result.499_1);
  _3 = std::__niter_base<const function_path*, std::vector<function_path> > (__last);
  _4 = std::__niter_base<const function_path*, std::vector<function_path> > (__first);
  D.248306 = std::__copy_move_a1<false, const function_path*, function_path*> (_4, _3, _2);
  _5 = D.248306;
  D.248304 = std::__niter_wrap<function_path*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.248304;

}



;; Function std::__niter_base<function_path*> (_ZSt12__niter_baseIP13function_pathET_S2_, funcdef_no=10155, decl_uid=227457, cgraph_uid=6787, symbol_order=7580)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__niter_base<function_path*> (struct function_path * __it)
{
  struct function_path * D.248307;

  <bb 2> :
  D.248307 = __it;

  <bb 3> :
<L0>:
  return D.248307;

}



;; Function std::__niter_base<const function_path*, std::vector<function_path> > (_ZSt12__niter_baseIPK13function_pathSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10150, decl_uid=235509, cgraph_uid=6782, symbol_order=7575)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct function_path * std::__niter_base<const function_path*, std::vector<function_path> > (struct __normal_iterator __it)
{
  const struct function_path * D.248309;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::base (&__it);
  D.248309 = *_1;

  <bb 3> :
<L0>:
  return D.248309;

}



;; Function __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10612, decl_uid=211294, cgraph_uid=7244, symbol_order=8037)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct function_path * const & __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::base (const struct __normal_iterator * const this)
{
  const struct function_path * const & D.248311;

  <bb 2> :
  D.248311 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.248311;

}



;; Function std::__copy_move_a1<false, const function_path*, function_path*> (_ZSt14__copy_move_a1ILb0EPK13function_pathPS0_ET1_T0_S5_S4_, funcdef_no=10152, decl_uid=235663, cgraph_uid=6784, symbol_order=7577)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a1<false, const function_path*, function_path*> (const struct function_path * __first, const struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.248315;
  struct function_path * D.248313;

  <bb 2> :
  D.248315 = std::__copy_move_a2<false, const function_path*, function_path*> (__first, __last, __result);
  D.248313 = D.248315;

  <bb 3> :
<L0>:
  return D.248313;

}



;; Function std::__copy_move_a2<false, const function_path*, function_path*> (_ZSt14__copy_move_a2ILb0EPK13function_pathPS0_ET1_T0_S5_S4_, funcdef_no=10613, decl_uid=240433, cgraph_uid=7245, symbol_order=8038)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a2<false, const function_path*, function_path*> (const struct function_path * __first, const struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.248316;

  <bb 2> :
  D.248316 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<function_path> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.248316;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<function_path> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI13function_pathEEPT_PKS4_S7_S5_, funcdef_no=10811, decl_uid=243660, cgraph_uid=7443, symbol_order=8238)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct function_path * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<function_path> (const struct function_path * __first, const struct function_path * __last, struct function_path * __result)
{
  const ptrdiff_t _Num;
  struct function_path * D.248321;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 24;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.500_2 = (long unsigned int) _Num;
  _3 = _Num.500_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.501_4 = (long unsigned int) _Num;
  _5 = _Num.501_4 * 24;
  D.248321 = __result + _5;

  <bb 5> :
<L3>:
  return D.248321;

}



;; Function std::__niter_wrap<function_path*> (_ZSt12__niter_wrapIP13function_pathET_RKS2_S2_, funcdef_no=10157, decl_uid=235706, cgraph_uid=6789, symbol_order=7582)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__niter_wrap<function_path*> (struct function_path * const & D.240455, struct function_path * __res)
{
  struct function_path * D.248323;

  <bb 2> :
  D.248323 = __res;

  <bb 3> :
<L0>:
  return D.248323;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::~_Vector_base (_ZNSt12_Vector_baseI13function_pathSaIS0_EED2Ev, funcdef_no=7796, decl_uid=174012, cgraph_uid=4428, symbol_order=5213)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.173902._M_end_of_storage;
  _2 = this->_M_impl.D.173902._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.173902._M_start;
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (_ZNSt12_Vector_baseI13function_pathSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8744, decl_uid=173909, cgraph_uid=5376, symbol_order=6165)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (struct _Vector_base * const this, struct function_path * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<function_path> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<function_path> >::deallocate (_ZNSt16allocator_traitsISaI13function_pathEE10deallocateERS1_PS0_m, funcdef_no=9557, decl_uid=173714, cgraph_uid=6189, symbol_order=6978)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<function_path> >::deallocate (struct allocator_type & __a, struct function_path * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<function_path>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<function_path>::deallocate (_ZN9__gnu_cxx13new_allocatorI13function_pathE10deallocateEPS1_m, funcdef_no=10148, decl_uid=173565, cgraph_uid=6780, symbol_order=7573)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<function_path>::deallocate (struct new_allocator * const this, struct function_path * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function hash_map<tree_node*, function_free_array>::get (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7660, decl_uid=192391, cgraph_uid=4292, symbol_order=5077)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_free_array * hash_map<tree_node*, function_free_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.248339;
  struct hash_entry & D.248338;
  unsigned int D.248337;
  struct hash_entry & e;
  struct function_free_array * iftmp.502;
  struct function_free_array * D.248331;

  <bb 2> :
  _1 = &this->m_table;
  D.248337 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::hash (k);
  _2 = D.248337;
  D.248338 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.248338;
  D.248339 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_empty<hash_map<tree_node*, function_free_array>::hash_entry> (e);
  _3 = D.248339;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.502 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.502 = &e->m_value;

  <bb 5> :
  D.248331 = iftmp.502;

  <bb 6> :
<L3>:
  return D.248331;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE4hashERKS2_, funcdef_no=8529, decl_uid=192347, cgraph_uid=5161, symbol_order=5950)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::hash (union tree_node * const & h)
{
  hashval_t D.248340;

  <bb 2> :
  D.248340 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.248340;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8530, decl_uid=192534, cgraph_uid=5162, symbol_order=5951)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.248374;
  bool D.248373;
  bool D.248372;
  bool D.248371;
  bool D.248370;
  bool D.248369;
  struct value_type * D.248368;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.506;
  bool retval.505;
  struct value_type & D.248354;
  bool iftmp.504;
  bool retval.503;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 32;
  entry = _5 + _7;
  D.248369 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.248369;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.248370 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.248370;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.248371 = hash_map<tree_node*, function_free_array>::hash_entry::equal (entry, comparable);
  _11 = D.248371;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.504 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.504 = 0;

  <bb 8> :
  retval.503 = iftmp.504;
  if (retval.503 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.248354 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  entry = _17 + _19;
  D.248372 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.248372;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.248373 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.248373;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.248374 = hash_map<tree_node*, function_free_array>::hash_entry::equal (entry, comparable);
  _23 = D.248374;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.506 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.506 = 0;

  <bb 18> :
  retval.505 = iftmp.506;
  if (retval.505 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.248354 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.248354;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8925, decl_uid=192630, cgraph_uid=5557, symbol_order=6346)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.248377;
  bool D.248375;

  <bb 2> :
  D.248377 = hash_map<tree_node*, function_free_array>::hash_entry::is_empty (v);
  D.248375 = D.248377;

  <bb 3> :
<L0>:
  return D.248375;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8644, decl_uid=192460, cgraph_uid=5276, symbol_order=6065)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_free_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.248380;
  bool D.248378;

  <bb 2> :
  D.248380 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_empty<hash_map<tree_node*, function_free_array>::hash_entry> (e);
  D.248378 = D.248380;

  <bb 3> :
<L0>:
  return D.248378;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8926, decl_uid=192628, cgraph_uid=5558, symbol_order=6347)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.248383;
  bool D.248381;

  <bb 2> :
  D.248383 = hash_map<tree_node*, function_free_array>::hash_entry::is_deleted (v);
  D.248381 = D.248383;

  <bb 3> :
<L0>:
  return D.248381;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9742, decl_uid=192455, cgraph_uid=6374, symbol_order=7163)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_free_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.248386;
  bool D.248384;

  <bb 2> :
  D.248386 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_deleted<hash_map<tree_node*, function_free_array>::hash_entry> (e);
  D.248384 = D.248386;

  <bb 3> :
<L0>:
  return D.248384;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_deleted<hash_map<tree_node*, function_free_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10296, decl_uid=237357, cgraph_uid=6928, symbol_order=7721)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_deleted<hash_map<tree_node*, function_free_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248387;

  <bb 2> :
  _1 = entry->m_key;
  D.248387 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.248387;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9302, decl_uid=192448, cgraph_uid=5934, symbol_order=6723)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_free_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.248391;
  bool D.248389;

  <bb 2> :
  _1 = &a->m_key;
  D.248391 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::equal_keys (_1, b);
  D.248389 = D.248391;

  <bb 3> :
<L0>:
  return D.248389;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE10equal_keysERKS2_S7_, funcdef_no=9984, decl_uid=192349, cgraph_uid=6616, symbol_order=7409)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.248392;

  <bb 2> :
  D.248392 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.248392;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_empty<hash_map<tree_node*, function_free_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8531, decl_uid=211361, cgraph_uid=5163, symbol_order=5952)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_empty<hash_map<tree_node*, function_free_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248394;

  <bb 2> :
  _1 = entry->m_key;
  D.248394 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.248394;

}



;; Function function_free_array::function_free_array (_ZN19function_free_arrayC2ERKS_, funcdef_no=6324, decl_uid=192729, cgraph_uid=3299, symbol_order=4075)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_free_array::function_free_array (struct function_free_array * const this, const struct function_free_array & D.192731)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->free_type_array;
  _2 = &D.192731->free_type_array;
  std::vector<free_type>::vector (_1, _2);
  return;

}



;; Function std::vector<free_type>::vector (_ZNSt6vectorI9free_typeSaIS0_EEC2ERKS2_, funcdef_no=7662, decl_uid=176621, cgraph_uid=4294, symbol_order=5079)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<free_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct free_type * D.248400;
  struct __normal_iterator D.248397;
  struct __normal_iterator D.248396;
  struct allocator D.211476;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.176658;
  _2 = &__x->D.176658;
  _3 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_2);
  D.211476 = __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<free_type>::size (__x);
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_1, _4, &D.211476);

  <bb 3> :
  std::allocator<free_type>::~allocator (&D.211476);
  D.211476 = {CLOBBER};
  _5 = &this->D.176658;
  _6 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.176658._M_impl.D.176003._M_start;
  D.248396 = std::vector<free_type>::end (__x);
  D.248397 = std::vector<free_type>::begin (__x);
  D.248400 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*, free_type> (D.248397, D.248396, _7, _6);

  <bb 4> :
  _8 = D.248400;
  this->D.176658._M_impl.D.176003._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<free_type>::~allocator (&D.211476);
  resx 2

  <bb 6> :
<L1>:
  D.211476 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.176658;
  std::_Vector_base<free_type, std::allocator<free_type> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI9free_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8533, decl_uid=175893, cgraph_uid=5165, symbol_order=5954)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.248402;

  <bb 2> :
  D.248402 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248402;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI9free_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=8532, decl_uid=175865, cgraph_uid=5164, symbol_order=5953)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<free_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<free_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI9free_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9303, decl_uid=175830, cgraph_uid=5935, symbol_order=6724)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<free_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<free_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<free_type>::allocator (_ZNSaI9free_typeEC2ERKS0_, funcdef_no=9986, decl_uid=175773, cgraph_uid=6618, symbol_order=7411)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<free_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<free_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI9free_typeEC2ERKS2_, funcdef_no=10500, decl_uid=175702, cgraph_uid=7132, symbol_order=7925)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.175704)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_ZNSt12_Vector_baseI9free_typeSaIS0_EEC2EmRKS1_, funcdef_no=8535, decl_uid=176090, cgraph_uid=5167, symbol_order=5956)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI9free_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9305, decl_uid=175995, cgraph_uid=5937, symbol_order=6726)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<free_type>::allocator (this, __a);
  _1 = &this->D.176003;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI9free_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8621, decl_uid=175950, cgraph_uid=5253, symbol_order=6042)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_M_create_storage (_ZNSt12_Vector_baseI9free_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9307, decl_uid=176014, cgraph_uid=5939, symbol_order=6728)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct free_type * D.248409;

  <bb 2> :
  D.248409 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_allocate (this, __n);
  _1 = D.248409;
  this->_M_impl.D.176003._M_start = _1;
  _2 = this->_M_impl.D.176003._M_start;
  this->_M_impl.D.176003._M_finish = _2;
  _3 = this->_M_impl.D.176003._M_start;
  _4 = __n * 24;
  _5 = _3 + _4;
  this->_M_impl.D.176003._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_M_allocate (_ZNSt12_Vector_baseI9free_typeSaIS0_EE11_M_allocateEm, funcdef_no=9409, decl_uid=176007, cgraph_uid=6041, symbol_order=6830)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct free_type * std::_Vector_base<free_type, std::allocator<free_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct free_type * D.248416;
  struct free_type * iftmp.507;
  struct free_type * D.248410;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.248416 = std::allocator_traits<std::allocator<free_type> >::allocate (_1, __n);
  iftmp.507 = D.248416;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.507 = 0B;

  <bb 5> :
  D.248410 = iftmp.507;

  <bb 6> :
<L3>:
  return D.248410;

}



;; Function std::allocator_traits<std::allocator<free_type> >::allocate (_ZNSt16allocator_traitsISaI9free_typeEE8allocateERS1_m, funcdef_no=10059, decl_uid=175808, cgraph_uid=6691, symbol_order=7484)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct free_type * std::allocator_traits<std::allocator<free_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct free_type * D.248419;
  struct free_type * D.248417;

  <bb 2> :
  D.248419 = __gnu_cxx::new_allocator<free_type>::allocate (__a, __n, 0B);
  D.248417 = D.248419;

  <bb 3> :
<L0>:
  return D.248417;

}



;; Function __gnu_cxx::new_allocator<free_type>::allocate (_ZN9__gnu_cxx13new_allocatorI9free_typeE8allocateEmPKv, funcdef_no=10554, decl_uid=175662, cgraph_uid=7187, symbol_order=7980)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct free_type * __gnu_cxx::new_allocator<free_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.243385)
{
  struct free_type * D.248430;
  struct free_type * D.248429;
  align_val_t __al;
  struct free_type * D.248427;
  bool retval.508;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<free_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.508 = _4 != 0;
  if (retval.508 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 768614336404564650)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 24;
  D.248430 = operator new (_6);
  D.248427 = D.248430;

  <bb 7> :
<L6>:
  return D.248427;

}



;; Function __gnu_cxx::new_allocator<free_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI9free_typeE11_M_max_sizeEv, funcdef_no=10555, decl_uid=175689, cgraph_uid=7186, symbol_order=7979)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<free_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.248431;

  <bb 2> :
  D.248431 = 384307168202282325;

  <bb 3> :
<L0>:
  return D.248431;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI9free_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6363, decl_uid=176050, cgraph_uid=3336, symbol_order=4112)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<free_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<free_type>::~allocator (_ZNSaI9free_typeED2Ev, funcdef_no=7719, decl_uid=175783, cgraph_uid=4351, symbol_order=5136)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<free_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<free_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI9free_typeED2Ev, funcdef_no=8624, decl_uid=175712, cgraph_uid=5256, symbol_order=6045)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI9free_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8539, decl_uid=175891, cgraph_uid=5171, symbol_order=5960)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.248433;

  <bb 2> :
  D.248433 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248433;

}



;; Function std::vector<free_type>::end (_ZNKSt6vectorI9free_typeSaIS0_EE3endEv, funcdef_no=8538, decl_uid=176273, cgraph_uid=5170, symbol_order=5959)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<free_type>::end (const struct vector * const this)
{
  struct const_iterator D.222058;
  struct const_iterator D.248435;

  <bb 2> :
  _1 = &this->D.176658._M_impl.D.176003._M_finish;
  __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::__normal_iterator (&D.222058, _1);
  D.248435 = D.222058;
  D.222058 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248435;

}



;; Function __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9309, decl_uid=211445, cgraph_uid=5941, symbol_order=6730)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::__normal_iterator (struct __normal_iterator * const this, const struct free_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<free_type>::begin (_ZNKSt6vectorI9free_typeSaIS0_EE5beginEv, funcdef_no=8537, decl_uid=176269, cgraph_uid=5169, symbol_order=5958)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<free_type>::begin (const struct vector * const this)
{
  struct const_iterator D.222056;
  struct const_iterator D.248438;

  <bb 2> :
  _1 = &this->D.176658._M_impl.D.176003._M_start;
  __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::__normal_iterator (&D.222056, _1);
  D.248438 = D.222056;
  D.222056 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248438;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*, free_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8540, decl_uid=211465, cgraph_uid=5172, symbol_order=5961)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*, free_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct free_type * __result, struct allocator & D.222063)
{
  struct free_type * D.248443;
  struct free_type * D.248441;

  <bb 2> :
  D.248443 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (__first, __last, __result);
  D.248441 = D.248443;

  <bb 3> :
<L0>:
  return D.248441;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9311, decl_uid=222065, cgraph_uid=5944, symbol_order=6733)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct free_type * __result)
{
  struct free_type * D.248446;
  const bool __assignable;
  struct free_type * D.248444;

  <bb 2> :
  __assignable = 1;
  D.248446 = std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (__first, __last, __result);
  D.248444 = D.248446;

  <bb 3> :
<L0>:
  return D.248444;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=9988, decl_uid=233330, cgraph_uid=6620, symbol_order=7413)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct free_type * std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct free_type * __result)
{
  struct free_type * __cur;
  struct free_type * D.248448;
  bool retval.509;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator* (&__first);
  _2 = std::__addressof<free_type> (__cur);
  std::_Construct<free_type, const free_type&> (_2, _1);
  __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator++ (&__first);
  __cur = __cur + 24;

  <bb 4> :
  retval.509 = __gnu_cxx::operator!=<const free_type*, std::vector<free_type> > (&__first, &__last);
  if (retval.509 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.248448 = __cur;

  <bb 6> :
<L3>:
  return D.248448;

}



;; Function __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS1_SaIS1_EEEdeEv, funcdef_no=10505, decl_uid=211403, cgraph_uid=7137, symbol_order=7930)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct free_type & __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator* (const struct __normal_iterator * const this)
{
  const struct free_type & D.248450;

  <bb 2> :
  D.248450 = this->_M_current;

  <bb 3> :
<L0>:
  return D.248450;

}



;; Function std::__addressof<free_type> (_ZSt11__addressofI9free_typeEPT_RS1_, funcdef_no=10504, decl_uid=224534, cgraph_uid=7136, symbol_order=7929)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__addressof<free_type> (struct free_type & __r)
{
  struct free_type * D.248452;

  <bb 2> :
  D.248452 = __r;

  <bb 3> :
<L0>:
  return D.248452;

}



;; Function std::_Construct<free_type, const free_type&> (_ZSt10_ConstructI9free_typeJRKS0_EEvPT_DpOT0_, funcdef_no=10506, decl_uid=239770, cgraph_uid=7138, symbol_order=7931)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<free_type, const free_type&> (struct free_type * __p, const struct free_type & __args#0)
{
  void * D.243181;
  void * D.243180;
  const struct free_type * D.243182;

  <bb 2> :
  D.243182 = std::forward<const free_type&> (__args#0);
  D.243180 = __p;
  D.243181 = operator new (24, D.243180);
  MEM[(struct free_type *)D.243181] = *D.243182;
  return;

}



;; Function std::forward<const free_type&> (_ZSt7forwardIRK9free_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9420, decl_uid=224148, cgraph_uid=6052, symbol_order=6841)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct free_type & std::forward<const free_type&> (const struct type & __t)
{
  const struct free_type & D.248454;

  <bb 2> :
  D.248454 = __t;

  <bb 3> :
<L0>:
  return D.248454;

}



;; Function __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS1_SaIS1_EEEppEv, funcdef_no=10503, decl_uid=211407, cgraph_uid=7135, symbol_order=7928)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.248456;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 24;
  this->_M_current = _2;
  D.248456 = this;

  <bb 3> :
<L0>:
  return D.248456;

}



;; Function __gnu_cxx::operator!=<const free_type*, std::vector<free_type> > (_ZN9__gnu_cxxneIPK9free_typeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_, funcdef_no=10502, decl_uid=239763, cgraph_uid=7134, symbol_order=7927)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<const free_type*, std::vector<free_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.248458;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::base (__rhs);
  _4 = *_3;
  D.248458 = _2 != _4;

  <bb 3> :
<L0>:
  return D.248458;

}



;; Function __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10556, decl_uid=211432, cgraph_uid=7188, symbol_order=7981)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct free_type * const & __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::base (const struct __normal_iterator * const this)
{
  const struct free_type * const & D.248460;

  <bb 2> :
  D.248460 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.248460;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::~_Vector_base (_ZNSt12_Vector_baseI9free_typeSaIS0_EED2Ev, funcdef_no=7722, decl_uid=176113, cgraph_uid=4354, symbol_order=5139)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.176003._M_end_of_storage;
  _2 = this->_M_impl.D.176003._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.176003._M_start;
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (_ZNSt12_Vector_baseI9free_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8626, decl_uid=176010, cgraph_uid=5258, symbol_order=6047)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (struct _Vector_base * const this, struct free_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<free_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<free_type> >::deallocate (_ZNSt16allocator_traitsISaI9free_typeEE10deallocateERS1_PS0_m, funcdef_no=9407, decl_uid=175815, cgraph_uid=6039, symbol_order=6828)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<free_type> >::deallocate (struct allocator_type & __a, struct free_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<free_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI9free_typeE10deallocateEPS1_m, funcdef_no=10058, decl_uid=175666, cgraph_uid=6690, symbol_order=7483)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::deallocate (struct new_allocator * const this, struct free_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function hash_map<tree_node*, int>::hash_map (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEEC2Embbb, funcdef_no=7668, decl_uid=193182, cgraph_uid=4300, symbol_order=5085)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, int>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8543, decl_uid=193141, cgraph_uid=5175, symbol_order=5964)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.248469;
  unsigned int D.248468;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.248468 = hash_table_higher_prime_index (size);
  size_prime_index = D.248468;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.248469 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.248469;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9314, decl_uid=193087, cgraph_uid=5946, symbol_order=6735)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.248485;
  struct value_type * D.248484;
  struct mem_alloc_description & D.248483;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.248481;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.248484 = xcallocator<hash_map<tree_node*, int>::hash_entry>::data_alloc (n);
  nentries = D.248484;
  goto <bb 6>; [INV]

  <bb 5> :
  D.248485 = ggc_cleared_vec_alloc<hash_map<tree_node*, int>::hash_entry> (n);
  nentries = D.248485;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.248481 = nentries;

  <bb 9> :
<L14>:
  return D.248481;

}



;; Function xcallocator<hash_map<tree_node*, int>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEE10data_allocEm, funcdef_no=9990, decl_uid=211522, cgraph_uid=6622, symbol_order=7415)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, int>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.248488;
  struct hash_entry * D.248486;

  <bb 2> :
  D.248488 = xcalloc (count, 16);
  D.248486 = D.248488;

  <bb 3> :
<L0>:
  return D.248486;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, int>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEEPT_m, funcdef_no=9991, decl_uid=233368, cgraph_uid=6623, symbol_order=7416)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, int>::hash_entry> (size_t c)
{
  struct hash_entry * D.248495;
  struct hash_entry * D.248494;
  struct hash_entry * D.248492;
  bool retval.510;

  <bb 2> :
  retval.510 = need_finalization_p<hash_map<tree_node*, int>::hash_entry> ();
  if (retval.510 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 16;
  D.248494 = ggc_internal_cleared_alloc (_1, finalize, 16, c);
  D.248492 = D.248494;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 16;
  D.248495 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.248492 = D.248495;

  <bb 5> :
<L2>:
  return D.248492;

}



;; Function finalize<hash_map<tree_node*, int>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEEvPv, funcdef_no=10508, decl_uid=239785, cgraph_uid=7140, symbol_order=7933)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, int>::hash_entry> (void * p)
{
  <bb 2> :
  MEM[(struct hash_entry *)p] = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, int>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEEbv, funcdef_no=10507, decl_uid=239784, cgraph_uid=7139, symbol_order=7932)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, int>::hash_entry> ()
{
  bool D.248496;

  <bb 2> :
  D.248496 = 0;

  <bb 3> :
<L0>:
  return D.248496;

}



;; Function hash_map<tree_node*, int>::get (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE3getERKS1_, funcdef_no=7673, decl_uid=192868, cgraph_uid=4305, symbol_order=5090)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
int * hash_map<tree_node*, int>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.248506;
  struct hash_entry & D.248505;
  unsigned int D.248504;
  struct hash_entry & e;
  int * iftmp.511;
  int * D.248498;

  <bb 2> :
  _1 = &this->m_table;
  D.248504 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::hash (k);
  _2 = D.248504;
  D.248505 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.248505;
  D.248506 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_empty<hash_map<tree_node*, int>::hash_entry> (e);
  _3 = D.248506;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.511 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.511 = &e->m_value;

  <bb 5> :
  D.248498 = iftmp.511;

  <bb 6> :
<L3>:
  return D.248498;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE4hashERKS2_, funcdef_no=8545, decl_uid=192824, cgraph_uid=5177, symbol_order=5966)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, int>::hash (union tree_node * const & h)
{
  hashval_t D.248507;

  <bb 2> :
  D.248507 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.248507;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8548, decl_uid=193008, cgraph_uid=5180, symbol_order=5969)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.248541;
  bool D.248540;
  bool D.248539;
  bool D.248538;
  bool D.248537;
  bool D.248536;
  struct value_type * D.248535;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.515;
  bool retval.514;
  struct value_type & D.248521;
  bool iftmp.513;
  bool retval.512;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 16;
  entry = _5 + _7;
  D.248536 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.248536;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.248537 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.248537;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.248538 = hash_map<tree_node*, int>::hash_entry::equal (entry, comparable);
  _11 = D.248538;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.513 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.513 = 0;

  <bb 8> :
  retval.512 = iftmp.513;
  if (retval.512 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.248521 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 16;
  entry = _17 + _19;
  D.248539 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.248539;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.248540 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.248540;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.248541 = hash_map<tree_node*, int>::hash_entry::equal (entry, comparable);
  _23 = D.248541;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.515 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.515 = 0;

  <bb 18> :
  retval.514 = iftmp.515;
  if (retval.514 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.248521 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.248521;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE8is_emptyERS8_, funcdef_no=8550, decl_uid=193104, cgraph_uid=5182, symbol_order=5971)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.248544;
  bool D.248542;

  <bb 2> :
  D.248544 = hash_map<tree_node*, int>::hash_entry::is_empty (v);
  D.248542 = D.248544;

  <bb 3> :
<L0>:
  return D.248542;

}



;; Function hash_map<tree_node*, int>::hash_entry::is_empty (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry8is_emptyERKS7_, funcdef_no=8547, decl_uid=192937, cgraph_uid=5179, symbol_order=5968)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, int>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.248547;
  bool D.248545;

  <bb 2> :
  D.248547 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_empty<hash_map<tree_node*, int>::hash_entry> (e);
  D.248545 = D.248547;

  <bb 3> :
<L0>:
  return D.248545;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE10is_deletedERS8_, funcdef_no=8551, decl_uid=193102, cgraph_uid=5183, symbol_order=5972)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.248550;
  bool D.248548;

  <bb 2> :
  D.248550 = hash_map<tree_node*, int>::hash_entry::is_deleted (v);
  D.248548 = D.248550;

  <bb 3> :
<L0>:
  return D.248548;

}



;; Function hash_map<tree_node*, int>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry10is_deletedERKS7_, funcdef_no=9318, decl_uid=192932, cgraph_uid=5950, symbol_order=6739)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, int>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.248553;
  bool D.248551;

  <bb 2> :
  D.248553 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_deleted<hash_map<tree_node*, int>::hash_entry> (e);
  D.248551 = D.248553;

  <bb 3> :
<L0>:
  return D.248551;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_deleted<hash_map<tree_node*, int>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE10is_deletedIN8hash_mapIS2_iS4_E10hash_entryEEEbRKT_, funcdef_no=10000, decl_uid=233431, cgraph_uid=6632, symbol_order=7425)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_deleted<hash_map<tree_node*, int>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248554;

  <bb 2> :
  _1 = entry->m_key;
  D.248554 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.248554;

}



;; Function hash_map<tree_node*, int>::hash_entry::equal (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry5equalERKS7_RKS1_, funcdef_no=9316, decl_uid=192925, cgraph_uid=5948, symbol_order=6737)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, int>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.248558;
  bool D.248556;

  <bb 2> :
  _1 = &a->m_key;
  D.248558 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::equal_keys (_1, b);
  D.248556 = D.248558;

  <bb 3> :
<L0>:
  return D.248556;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE10equal_keysERKS2_S6_, funcdef_no=9998, decl_uid=192826, cgraph_uid=6630, symbol_order=7423)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, int>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.248559;

  <bb 2> :
  D.248559 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.248559;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_empty<hash_map<tree_node*, int>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE8is_emptyIN8hash_mapIS2_iS4_E10hash_entryEEEbRKT_, funcdef_no=8549, decl_uid=211515, cgraph_uid=5181, symbol_order=5970)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_empty<hash_map<tree_node*, int>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248561;

  <bb 2> :
  _1 = entry->m_key;
  D.248561 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.248561;

}



;; Function gimple_block (_ZL12gimple_blockPK6gimple, funcdef_no=2001, decl_uid=92276, cgraph_uid=1138, symbol_order=1298)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
union tree_node * gimple_block (const struct gimple * g)
{
  union tree_node * D.248569;
  union tree_node * iftmp.516;
  union tree_node * D.248563;

  <bb 2> :
  _1 = g->location;
  _2 = IS_ADHOC_LOC (_1);
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = g->location;
  line_table.517_4 = line_table;
  D.248569 = get_data_from_adhoc_loc (line_table.517_4, _3);
  iftmp.516 = D.248569;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.516 = 0B;

  <bb 5> :
  D.248563 = iftmp.516;

  <bb 6> :
<L3>:
  return D.248563;

}



;; Function IS_ADHOC_LOC (_Z12IS_ADHOC_LOCj, funcdef_no=1146, decl_uid=35072, cgraph_uid=320, symbol_order=337)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool IS_ADHOC_LOC (location_t loc)
{
  bool D.248570;

  <bb 2> :
  loc.518_1 = (signed int) loc;
  D.248570 = loc.518_1 < 0;

  <bb 3> :
<L0>:
  return D.248570;

}



;; Function hash_map<tree_node*, int>::put (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE3putERKS1_RKi, funcdef_no=7672, decl_uid=192864, cgraph_uid=4304, symbol_order=5089)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
bool hash_map<tree_node*, int>::put (struct hash_map * const this, union tree_node * const & k, const int & v)
{
  bool D.248579;
  struct hash_entry * D.248578;
  unsigned int D.248577;
  bool ins;
  struct hash_entry * e;
  bool D.248575;
  void * D.211511;
  void * D.211510;

  <bb 2> :
  _1 = &this->m_table;
  D.248577 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::hash (k);
  _2 = D.248577;
  D.248578 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.248578;
  D.248579 = hash_map<tree_node*, int>::hash_entry::is_empty (e);
  ins = D.248579;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.211510 = &e->m_value;
  D.211511 = operator new (4, D.211510);
  _4 = *v;
  MEM[(int *)D.211511] = _4;
  goto <bb 5>; [INV]

  <bb 4> :
  _5 = *v;
  e->m_value = _5;

  <bb 5> :
  D.248575 = ~ins;

  <bb 6> :
<L3>:
  return D.248575;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8546, decl_uid=193019, cgraph_uid=5178, symbol_order=5967)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.248629;
  bool D.248628;
  bool D.248627;
  bool D.248626;
  bool D.248625;
  bool D.248624;
  struct value_type * D.248623;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.524;
  bool retval.523;
  bool retval.522;
  bool retval.521;
  bool retval.520;
  bool retval.519;
  struct value_type * D.248585;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 16;
  entry = _11 + _13;
  size = this->m_size;
  D.248624 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.519 = D.248624;
  if (retval.519 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.248625 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.520 = D.248625;
  if (retval.520 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 16;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.248626 = hash_map<tree_node*, int>::hash_entry::equal (entry, comparable);
  retval.521 = D.248626;
  if (retval.521 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 16;
  D.248585 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 16;
  entry = _24 + _26;
  D.248627 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.522 = D.248627;
  if (retval.522 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.248628 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.523 = D.248628;
  if (retval.523 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 16;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.248629 = hash_map<tree_node*, int>::hash_entry::equal (entry, comparable);
  retval.524 = D.248629;
  if (retval.524 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 16;
  D.248585 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.248585 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.248585 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 16;
  D.248585 = _37 + _39;

  <bb 27> :
<L37>:
  return D.248585;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9315, decl_uid=193100, cgraph_uid=5947, symbol_order=6736)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.248660;
  unsigned int D.248659;
  bool D.248658;
  bool D.248657;
  struct mem_alloc_description & D.248656;
  struct value_type * D.248655;
  unsigned int D.248654;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.233419;
  void * D.233418;
  struct hash_entry * D.233420;
  bool iftmp.528;
  bool retval.527;
  bool iftmp.526;
  bool retval.525;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 16;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.526 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.526 = 0;

  <bb 6> :
  retval.525 = iftmp.526;
  if (retval.525 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.248654 = hash_table_higher_prime_index (_5);
  nindex = D.248654;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.248655 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.248655;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.248657 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.248657;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.248658 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.248658;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.528 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.528 = 0;

  <bb 15> :
  retval.527 = iftmp.528;
  if (retval.527 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.248659 = hash_map<tree_node*, int>::hash_entry::hash (x);
  _16 = D.248659;
  D.248660 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.248660;
  D.233420 = std::move<hash_map<tree_node*, int>::hash_entry&> (x);
  D.233418 = q;
  D.233419 = operator new (16, D.233418);
  MEM[(struct value_type *)D.233419] = *D.233420;

  <bb 17> :
  p = p + 16;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, int>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=9992, decl_uid=192995, cgraph_uid=6624, symbol_order=7417)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.248661;

  <bb 2> :
  D.248661 = this->m_size;

  <bb 3> :
<L0>:
  return D.248661;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=9993, decl_uid=192997, cgraph_uid=6625, symbol_order=7418)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.248663;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.248663 = _1 - _2;

  <bb 3> :
<L0>:
  return D.248663;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=9994, decl_uid=193097, cgraph_uid=6626, symbol_order=7419)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.529;
  bool D.248665;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.529 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.529 = 0;

  <bb 6> :
  D.248665 = iftmp.529;

  <bb 7> :
<L4>:
  return D.248665;

}



;; Function hash_map<tree_node*, int>::hash_entry::hash (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry4hashERKS7_, funcdef_no=9996, decl_uid=192923, cgraph_uid=6628, symbol_order=7421)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, int>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.248674;
  hashval_t D.248672;

  <bb 2> :
  _1 = &e->m_key;
  D.248674 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::hash (_1);
  D.248672 = D.248674;

  <bb 3> :
<L0>:
  return D.248672;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=9995, decl_uid=193090, cgraph_uid=6627, symbol_order=7420)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.248687;
  bool D.248686;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.531;
  struct value_type * D.248678;
  bool retval.530;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 16;
  slot = _2 + _4;
  D.248686 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.530 = D.248686;
  if (retval.530 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.248678 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 16;
  slot = _8 + _10;
  D.248687 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.531 = D.248687;
  if (retval.531 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.248678 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.248678;

}



;; Function std::move<hash_map<tree_node*, int>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEEONSt16remove_referenceIT_E4typeEOSB_, funcdef_no=9997, decl_uid=233392, cgraph_uid=6629, symbol_order=7422)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, int>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.248688;

  <bb 2> :
  D.248688 = __t;

  <bb 3> :
<L0>:
  return D.248688;

}



;; Function xcallocator<hash_map<tree_node*, int>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEE9data_freeEPS8_, funcdef_no=8553, decl_uid=211524, cgraph_uid=5185, symbol_order=5974)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, int>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE10mark_emptyERS8_, funcdef_no=9317, decl_uid=193108, cgraph_uid=5949, symbol_order=6738)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, int>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, int>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry10mark_emptyERS7_, funcdef_no=9999, decl_uid=192935, cgraph_uid=6631, symbol_order=7424)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, int>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, int>::mark_empty<hash_map<tree_node*, int>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::mark_empty<hash_map<tree_node*, int>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE10mark_emptyIN8hash_mapIS2_iS4_E10hash_entryEEEvRT_, funcdef_no=10509, decl_uid=239811, cgraph_uid=7141, symbol_order=7934)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, int>::mark_empty<hash_map<tree_node*, int>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function std::vector<free_type>::operator[] (_ZNSt6vectorI9free_typeSaIS0_EEixEm, funcdef_no=7671, decl_uid=176311, cgraph_uid=4303, symbol_order=5088)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<free_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.248691;

  <bb 2> :
  _1 = this->D.176658._M_impl.D.176003._M_start;
  _2 = __n * 24;
  D.248691 = _1 + _2;

  <bb 3> :
<L0>:
  return D.248691;

}



;; Function std::vector<free_type>::size (_ZNKSt6vectorI9free_typeSaIS0_EE4sizeEv, funcdef_no=7670, decl_uid=176291, cgraph_uid=4302, symbol_order=5087)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<free_type>::size (const struct vector * const this)
{
  size_type D.248693;

  <bb 2> :
  _1 = this->D.176658._M_impl.D.176003._M_finish;
  _2 = this->D.176658._M_impl.D.176003._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.248693 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.248693;

}



;; Function hash_map<tree_node*, int>::~hash_map (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEED2Ev, funcdef_no=6330, decl_uid=193205, cgraph_uid=3305, symbol_order=4081)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, int>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7675, decl_uid=193151, cgraph_uid=4307, symbol_order=5092)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.248708;
  bool D.248707;
  size_t i;
  bool iftmp.533;
  bool retval.532;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 16;
  _4 = _2 + _3;
  D.248707 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.248707;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 16;
  _9 = _7 + _8;
  D.248708 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.248708;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.533 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.533 = 0;

  <bb 7> :
  retval.532 = iftmp.533;
  if (retval.532 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 16;
  _14 = _12 + _13;
  hash_map<tree_node*, int>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, int>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, int>::hash_entry::remove (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry6removeERS7_, funcdef_no=8552, decl_uid=192928, cgraph_uid=5184, symbol_order=5973)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, int>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, int>::remove<hash_map<tree_node*, int>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::remove<hash_map<tree_node*, int>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE6removeIN8hash_mapIS2_iS4_E10hash_entryEEEvRT_, funcdef_no=9319, decl_uid=222134, cgraph_uid=5951, symbol_order=6740)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, int>::remove<hash_map<tree_node*, int>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  *_2 = {CLOBBER};
  return;

}



;; Function ggc_remove<tree_node*>::remove (_ZN10ggc_removeIP9tree_nodeE6removeERS1_, funcdef_no=10001, decl_uid=85315, cgraph_uid=6633, symbol_order=7426)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ggc_remove<tree_node*>::remove (union tree_node * & D.239815)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::get (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7677, decl_uid=193263, cgraph_uid=4309, symbol_order=5094)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_pthread_detched_array * hash_map<tree_node*, function_pthread_detched_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.248717;
  struct hash_entry & D.248716;
  unsigned int D.248715;
  struct hash_entry & e;
  struct function_pthread_detched_array * iftmp.534;
  struct function_pthread_detched_array * D.248709;

  <bb 2> :
  _1 = &this->m_table;
  D.248715 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::hash (k);
  _2 = D.248715;
  D.248716 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.248716;
  D.248717 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (e);
  _3 = D.248717;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.534 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.534 = &e->m_value;

  <bb 5> :
  D.248709 = iftmp.534;

  <bb 6> :
<L3>:
  return D.248709;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE4hashERKS2_, funcdef_no=8554, decl_uid=193219, cgraph_uid=5186, symbol_order=5975)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::hash (union tree_node * const & h)
{
  hashval_t D.248718;

  <bb 2> :
  D.248718 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.248718;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8555, decl_uid=193406, cgraph_uid=5187, symbol_order=5976)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.248752;
  bool D.248751;
  bool D.248750;
  bool D.248749;
  bool D.248748;
  bool D.248747;
  struct value_type * D.248746;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.538;
  bool retval.537;
  struct value_type & D.248732;
  bool iftmp.536;
  bool retval.535;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 32;
  entry = _5 + _7;
  D.248747 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.248747;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.248748 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.248748;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.248749 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (entry, comparable);
  _11 = D.248749;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.536 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.536 = 0;

  <bb 8> :
  retval.535 = iftmp.536;
  if (retval.535 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.248732 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  entry = _17 + _19;
  D.248750 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.248750;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.248751 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.248751;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.248752 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (entry, comparable);
  _23 = D.248752;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.538 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.538 = 0;

  <bb 18> :
  retval.537 = iftmp.538;
  if (retval.537 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.248732 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.248732;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8913, decl_uid=193502, cgraph_uid=5545, symbol_order=6334)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.248755;
  bool D.248753;

  <bb 2> :
  D.248755 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_empty (v);
  D.248753 = D.248755;

  <bb 3> :
<L0>:
  return D.248753;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8672, decl_uid=193332, cgraph_uid=5304, symbol_order=6093)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.248758;
  bool D.248756;

  <bb 2> :
  D.248758 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (e);
  D.248756 = D.248758;

  <bb 3> :
<L0>:
  return D.248756;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8914, decl_uid=193500, cgraph_uid=5546, symbol_order=6335)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.248761;
  bool D.248759;

  <bb 2> :
  D.248761 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_deleted (v);
  D.248759 = D.248761;

  <bb 3> :
<L0>:
  return D.248759;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9736, decl_uid=193327, cgraph_uid=6368, symbol_order=7157)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.248764;
  bool D.248762;

  <bb 2> :
  D.248764 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_deleted<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (e);
  D.248762 = D.248764;

  <bb 3> :
<L0>:
  return D.248762;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_deleted<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10293, decl_uid=237339, cgraph_uid=6925, symbol_order=7718)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_deleted<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248765;

  <bb 2> :
  _1 = entry->m_key;
  D.248765 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.248765;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9321, decl_uid=193320, cgraph_uid=5953, symbol_order=6742)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.248769;
  bool D.248767;

  <bb 2> :
  _1 = &a->m_key;
  D.248769 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::equal_keys (_1, b);
  D.248767 = D.248769;

  <bb 3> :
<L0>:
  return D.248767;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE10equal_keysERKS2_S7_, funcdef_no=10004, decl_uid=193221, cgraph_uid=6636, symbol_order=7429)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.248770;

  <bb 2> :
  D.248770 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.248770;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8556, decl_uid=211544, cgraph_uid=5188, symbol_order=5977)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248772;

  <bb 2> :
  _1 = entry->m_key;
  D.248772 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.248772;

}



;; Function function_pthread_detched_array::function_pthread_detched_array (_ZN30function_pthread_detched_arrayC2ERKS_, funcdef_no=6333, decl_uid=193601, cgraph_uid=3308, symbol_order=4084)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_detched_array::function_pthread_detched_array (struct function_pthread_detched_array * const this, const struct function_pthread_detched_array & D.193603)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->pthread_detched_array;
  _2 = &D.193603->pthread_detched_array;
  std::vector<pthread_detched_type>::vector (_1, _2);
  return;

}



;; Function std::vector<pthread_detched_type>::vector (_ZNSt6vectorI20pthread_detched_typeSaIS0_EEC2ERKS2_, funcdef_no=7679, decl_uid=177666, cgraph_uid=4311, symbol_order=5096)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<pthread_detched_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct pthread_detched_type * D.248778;
  struct __normal_iterator D.248775;
  struct __normal_iterator D.248774;
  struct allocator D.211659;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.177703;
  _2 = &__x->D.177703;
  _3 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_2);
  D.211659 = __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<pthread_detched_type>::size (__x);
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_1, _4, &D.211659);

  <bb 3> :
  std::allocator<pthread_detched_type>::~allocator (&D.211659);
  D.211659 = {CLOBBER};
  _5 = &this->D.177703;
  _6 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.177703._M_impl.D.177048._M_start;
  D.248774 = std::vector<pthread_detched_type>::end (__x);
  D.248775 = std::vector<pthread_detched_type>::begin (__x);
  D.248778 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*, pthread_detched_type> (D.248775, D.248774, _7, _6);

  <bb 4> :
  _8 = D.248778;
  this->D.177703._M_impl.D.177048._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<pthread_detched_type>::~allocator (&D.211659);
  resx 2

  <bb 6> :
<L1>:
  D.211659 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.177703;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI20pthread_detched_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8558, decl_uid=176938, cgraph_uid=5190, symbol_order=5979)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.248780;

  <bb 2> :
  D.248780 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248780;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI20pthread_detched_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=8557, decl_uid=176910, cgraph_uid=5189, symbol_order=5978)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<pthread_detched_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<pthread_detched_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI20pthread_detched_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9322, decl_uid=176875, cgraph_uid=5954, symbol_order=6743)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<pthread_detched_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<pthread_detched_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<pthread_detched_type>::allocator (_ZNSaI20pthread_detched_typeEC2ERKS0_, funcdef_no=10006, decl_uid=176818, cgraph_uid=6638, symbol_order=7431)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_detched_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeEC2ERKS2_, funcdef_no=10517, decl_uid=176747, cgraph_uid=7149, symbol_order=7942)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.176749)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EEC2EmRKS1_, funcdef_no=8560, decl_uid=177135, cgraph_uid=5192, symbol_order=5981)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9324, decl_uid=177040, cgraph_uid=5956, symbol_order=6745)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<pthread_detched_type>::allocator (this, __a);
  _1 = &this->D.177048;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8649, decl_uid=176995, cgraph_uid=5281, symbol_order=6070)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_create_storage (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9326, decl_uid=177059, cgraph_uid=5958, symbol_order=6747)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct pthread_detched_type * D.248787;

  <bb 2> :
  D.248787 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_allocate (this, __n);
  _1 = D.248787;
  this->_M_impl.D.177048._M_start = _1;
  _2 = this->_M_impl.D.177048._M_start;
  this->_M_impl.D.177048._M_finish = _2;
  _3 = this->_M_impl.D.177048._M_start;
  _4 = __n * 16;
  _5 = _3 + _4;
  this->_M_impl.D.177048._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_allocate (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE11_M_allocateEm, funcdef_no=9446, decl_uid=177052, cgraph_uid=6078, symbol_order=6867)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct pthread_detched_type * std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct pthread_detched_type * D.248794;
  struct pthread_detched_type * iftmp.539;
  struct pthread_detched_type * D.248788;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.248794 = std::allocator_traits<std::allocator<pthread_detched_type> >::allocate (_1, __n);
  iftmp.539 = D.248794;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.539 = 0B;

  <bb 5> :
  D.248788 = iftmp.539;

  <bb 6> :
<L3>:
  return D.248788;

}



;; Function std::allocator_traits<std::allocator<pthread_detched_type> >::allocate (_ZNSt16allocator_traitsISaI20pthread_detched_typeEE8allocateERS1_m, funcdef_no=10083, decl_uid=176853, cgraph_uid=6715, symbol_order=7508)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct pthread_detched_type * std::allocator_traits<std::allocator<pthread_detched_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct pthread_detched_type * D.248797;
  struct pthread_detched_type * D.248795;

  <bb 2> :
  D.248797 = __gnu_cxx::new_allocator<pthread_detched_type>::allocate (__a, __n, 0B);
  D.248795 = D.248797;

  <bb 3> :
<L0>:
  return D.248795;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::allocate (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeE8allocateEmPKv, funcdef_no=10568, decl_uid=176707, cgraph_uid=7201, symbol_order=7994)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct pthread_detched_type * __gnu_cxx::new_allocator<pthread_detched_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.243457)
{
  struct pthread_detched_type * D.248808;
  struct pthread_detched_type * D.248807;
  align_val_t __al;
  struct pthread_detched_type * D.248805;
  bool retval.540;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<pthread_detched_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.540 = _4 != 0;
  if (retval.540 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 1152921504606846975)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 16;
  D.248808 = operator new (_6);
  D.248805 = D.248808;

  <bb 7> :
<L6>:
  return D.248805;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI20pthread_detched_typeE11_M_max_sizeEv, funcdef_no=10569, decl_uid=176734, cgraph_uid=7200, symbol_order=7993)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<pthread_detched_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.248809;

  <bb 2> :
  D.248809 = 576460752303423487;

  <bb 3> :
<L0>:
  return D.248809;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6381, decl_uid=177095, cgraph_uid=3353, symbol_order=4129)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<pthread_detched_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<pthread_detched_type>::~allocator (_ZNSaI20pthread_detched_typeED2Ev, funcdef_no=7734, decl_uid=176828, cgraph_uid=4366, symbol_order=5151)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_detched_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_detched_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeED2Ev, funcdef_no=8652, decl_uid=176757, cgraph_uid=5284, symbol_order=6073)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_detched_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8564, decl_uid=176936, cgraph_uid=5196, symbol_order=5985)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.248811;

  <bb 2> :
  D.248811 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248811;

}



;; Function std::vector<pthread_detched_type>::end (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE3endEv, funcdef_no=8563, decl_uid=177318, cgraph_uid=5195, symbol_order=5984)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<pthread_detched_type>::end (const struct vector * const this)
{
  struct const_iterator D.222182;
  struct const_iterator D.248813;

  <bb 2> :
  _1 = &this->D.177703._M_impl.D.177048._M_finish;
  __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (&D.222182, _1);
  D.248813 = D.222182;
  D.222182 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248813;

}



;; Function __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9328, decl_uid=211628, cgraph_uid=5960, symbol_order=6749)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (struct __normal_iterator * const this, const struct pthread_detched_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<pthread_detched_type>::begin (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE5beginEv, funcdef_no=8562, decl_uid=177314, cgraph_uid=5194, symbol_order=5983)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<pthread_detched_type>::begin (const struct vector * const this)
{
  struct const_iterator D.222180;
  struct const_iterator D.248816;

  <bb 2> :
  _1 = &this->D.177703._M_impl.D.177048._M_start;
  __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (&D.222180, _1);
  D.248816 = D.222180;
  D.222180 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248816;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*, pthread_detched_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8565, decl_uid=211648, cgraph_uid=5197, symbol_order=5986)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*, pthread_detched_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_detched_type * __result, struct allocator & D.222187)
{
  struct pthread_detched_type * D.248821;
  struct pthread_detched_type * D.248819;

  <bb 2> :
  D.248821 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (__first, __last, __result);
  D.248819 = D.248821;

  <bb 3> :
<L0>:
  return D.248819;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9330, decl_uid=222189, cgraph_uid=5963, symbol_order=6752)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.248824;
  const bool __assignable;
  struct pthread_detched_type * D.248822;

  <bb 2> :
  __assignable = 1;
  D.248824 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (__first, __last, __result);
  D.248822 = D.248824;

  <bb 3> :
<L0>:
  return D.248822;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10008, decl_uid=233570, cgraph_uid=6640, symbol_order=7433)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.248827;
  struct pthread_detched_type * D.248825;

  <bb 2> :
  D.248827 = std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (__first, __last, __result);
  D.248825 = D.248827;

  <bb 3> :
<L0>:
  return D.248825;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10519, decl_uid=239844, cgraph_uid=7151, symbol_order=7944)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.248832;
  struct __normal_iterator D.248830;
  struct __normal_iterator D.248829;
  struct pthread_detched_type * D.248828;

  <bb 2> :
  D.248829 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (__last);
  D.248830 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (__first);
  D.248832 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (D.248830, D.248829, __result);
  D.248828 = D.248832;

  <bb 3> :
<L0>:
  return D.248828;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9450, decl_uid=224803, cgraph_uid=6082, symbol_order=6871)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.248833;

  <bb 2> :
  D.248833 = __it;

  <bb 3> :
<L0>:
  return D.248833;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEPS2_ET1_T0_SB_SA_, funcdef_no=10785, decl_uid=243230, cgraph_uid=7417, symbol_order=8212)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.248837;
  struct pthread_detched_type * D.248835;

  <bb 2> :
  __result.541_1 = __result;
  _2 = std::__niter_base<pthread_detched_type*> (__result.541_1);
  _3 = std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (__last);
  _4 = std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (__first);
  D.248837 = std::__copy_move_a1<false, const pthread_detched_type*, pthread_detched_type*> (_4, _3, _2);
  _5 = D.248837;
  D.248835 = std::__niter_wrap<pthread_detched_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.248835;

}



;; Function std::__niter_base<pthread_detched_type*> (_ZSt12__niter_baseIP20pthread_detched_typeET_S2_, funcdef_no=10089, decl_uid=225069, cgraph_uid=6721, symbol_order=7514)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__niter_base<pthread_detched_type*> (struct pthread_detched_type * __it)
{
  struct pthread_detched_type * D.248838;

  <bb 2> :
  D.248838 = __it;

  <bb 3> :
<L0>:
  return D.248838;

}



;; Function std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (_ZSt12__niter_baseIPK20pthread_detched_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10084, decl_uid=234646, cgraph_uid=6716, symbol_order=7509)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct pthread_detched_type * std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (struct __normal_iterator __it)
{
  const struct pthread_detched_type * D.248840;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::base (&__it);
  D.248840 = *_1;

  <bb 3> :
<L0>:
  return D.248840;

}



;; Function __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10570, decl_uid=211615, cgraph_uid=7202, symbol_order=7995)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct pthread_detched_type * const & __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::base (const struct __normal_iterator * const this)
{
  const struct pthread_detched_type * const & D.248842;

  <bb 2> :
  D.248842 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.248842;

}



;; Function std::__copy_move_a1<false, const pthread_detched_type*, pthread_detched_type*> (_ZSt14__copy_move_a1ILb0EPK20pthread_detched_typePS0_ET1_T0_S5_S4_, funcdef_no=10086, decl_uid=234800, cgraph_uid=6718, symbol_order=7511)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a1<false, const pthread_detched_type*, pthread_detched_type*> (const struct pthread_detched_type * __first, const struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.248846;
  struct pthread_detched_type * D.248844;

  <bb 2> :
  D.248846 = std::__copy_move_a2<false, const pthread_detched_type*, pthread_detched_type*> (__first, __last, __result);
  D.248844 = D.248846;

  <bb 3> :
<L0>:
  return D.248844;

}



;; Function std::__copy_move_a2<false, const pthread_detched_type*, pthread_detched_type*> (_ZSt14__copy_move_a2ILb0EPK20pthread_detched_typePS0_ET1_T0_S5_S4_, funcdef_no=10571, decl_uid=240177, cgraph_uid=7203, symbol_order=7996)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a2<false, const pthread_detched_type*, pthread_detched_type*> (const struct pthread_detched_type * __first, const struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.248847;

  <bb 2> :
  D.248847 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_detched_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.248847;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_detched_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI20pthread_detched_typeEEPT_PKS4_S7_S5_, funcdef_no=10800, decl_uid=243480, cgraph_uid=7432, symbol_order=8227)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct pthread_detched_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_detched_type> (const struct pthread_detched_type * __first, const struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  const ptrdiff_t _Num;
  struct pthread_detched_type * D.248852;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 16;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.542_2 = (long unsigned int) _Num;
  _3 = _Num.542_2 * 16;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.543_4 = (long unsigned int) _Num;
  _5 = _Num.543_4 * 16;
  D.248852 = __result + _5;

  <bb 5> :
<L3>:
  return D.248852;

}



;; Function std::__niter_wrap<pthread_detched_type*> (_ZSt12__niter_wrapIP20pthread_detched_typeET_RKS2_S2_, funcdef_no=10091, decl_uid=234843, cgraph_uid=6723, symbol_order=7516)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__niter_wrap<pthread_detched_type*> (struct pthread_detched_type * const & D.240199, struct pthread_detched_type * __res)
{
  struct pthread_detched_type * D.248854;

  <bb 2> :
  D.248854 = __res;

  <bb 3> :
<L0>:
  return D.248854;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::~_Vector_base (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EED2Ev, funcdef_no=7737, decl_uid=177158, cgraph_uid=4369, symbol_order=5154)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.177048._M_end_of_storage;
  _2 = this->_M_impl.D.177048._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.177048._M_start;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8654, decl_uid=177055, cgraph_uid=5286, symbol_order=6075)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (struct _Vector_base * const this, struct pthread_detched_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<pthread_detched_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<pthread_detched_type> >::deallocate (_ZNSt16allocator_traitsISaI20pthread_detched_typeEE10deallocateERS1_PS0_m, funcdef_no=9444, decl_uid=176860, cgraph_uid=6076, symbol_order=6865)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<pthread_detched_type> >::deallocate (struct allocator_type & __a, struct pthread_detched_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_detched_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeE10deallocateEPS1_m, funcdef_no=10082, decl_uid=176711, cgraph_uid=6714, symbol_order=7507)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<pthread_detched_type>::deallocate (struct new_allocator * const this, struct pthread_detched_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 16;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<pthread_detched_type>::operator[] (_ZNSt6vectorI20pthread_detched_typeSaIS0_EEixEm, funcdef_no=7685, decl_uid=177356, cgraph_uid=4317, symbol_order=5102)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<pthread_detched_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.248862;

  <bb 2> :
  _1 = this->D.177703._M_impl.D.177048._M_start;
  _2 = __n * 16;
  D.248862 = _1 + _2;

  <bb 3> :
<L0>:
  return D.248862;

}



;; Function std::vector<pthread_detched_type>::size (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE4sizeEv, funcdef_no=7684, decl_uid=177336, cgraph_uid=4316, symbol_order=5101)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_detched_type>::size (const struct vector * const this)
{
  size_type D.248864;

  <bb 2> :
  _1 = this->D.177703._M_impl.D.177048._M_finish;
  _2 = this->D.177703._M_impl.D.177048._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.248864 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.248864;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::get (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7686, decl_uid=193739, cgraph_uid=4318, symbol_order=5103)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_pthread_exit_array * hash_map<tree_node*, function_pthread_exit_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.248874;
  struct hash_entry & D.248873;
  unsigned int D.248872;
  struct hash_entry & e;
  struct function_pthread_exit_array * iftmp.544;
  struct function_pthread_exit_array * D.248866;

  <bb 2> :
  _1 = &this->m_table;
  D.248872 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::hash (k);
  _2 = D.248872;
  D.248873 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.248873;
  D.248874 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (e);
  _3 = D.248874;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.544 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.544 = &e->m_value;

  <bb 5> :
  D.248866 = iftmp.544;

  <bb 6> :
<L3>:
  return D.248866;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE4hashERKS2_, funcdef_no=8567, decl_uid=193695, cgraph_uid=5199, symbol_order=5988)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::hash (union tree_node * const & h)
{
  hashval_t D.248875;

  <bb 2> :
  D.248875 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.248875;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8568, decl_uid=193882, cgraph_uid=5200, symbol_order=5989)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.248909;
  bool D.248908;
  bool D.248907;
  bool D.248906;
  bool D.248905;
  bool D.248904;
  struct value_type * D.248903;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.548;
  bool retval.547;
  struct value_type & D.248889;
  bool iftmp.546;
  bool retval.545;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 32;
  entry = _5 + _7;
  D.248904 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.248904;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.248905 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.248905;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.248906 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (entry, comparable);
  _11 = D.248906;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.546 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.546 = 0;

  <bb 8> :
  retval.545 = iftmp.546;
  if (retval.545 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.248889 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  entry = _17 + _19;
  D.248907 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.248907;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.248908 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.248908;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.248909 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (entry, comparable);
  _23 = D.248909;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.548 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.548 = 0;

  <bb 18> :
  retval.547 = iftmp.548;
  if (retval.547 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.248889 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.248889;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8917, decl_uid=193978, cgraph_uid=5549, symbol_order=6338)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.248912;
  bool D.248910;

  <bb 2> :
  D.248912 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_empty (v);
  D.248910 = D.248912;

  <bb 3> :
<L0>:
  return D.248910;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8700, decl_uid=193808, cgraph_uid=5332, symbol_order=6121)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.248915;
  bool D.248913;

  <bb 2> :
  D.248915 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (e);
  D.248913 = D.248915;

  <bb 3> :
<L0>:
  return D.248913;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8918, decl_uid=193976, cgraph_uid=5550, symbol_order=6339)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.248918;
  bool D.248916;

  <bb 2> :
  D.248918 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_deleted (v);
  D.248916 = D.248918;

  <bb 3> :
<L0>:
  return D.248916;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9738, decl_uid=193803, cgraph_uid=6370, symbol_order=7159)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.248921;
  bool D.248919;

  <bb 2> :
  D.248921 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_deleted<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (e);
  D.248919 = D.248921;

  <bb 3> :
<L0>:
  return D.248919;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_deleted<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10294, decl_uid=237345, cgraph_uid=6926, symbol_order=7719)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_deleted<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248922;

  <bb 2> :
  _1 = entry->m_key;
  D.248922 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.248922;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9334, decl_uid=193796, cgraph_uid=5966, symbol_order=6755)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.248926;
  bool D.248924;

  <bb 2> :
  _1 = &a->m_key;
  D.248926 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::equal_keys (_1, b);
  D.248924 = D.248926;

  <bb 3> :
<L0>:
  return D.248924;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE10equal_keysERKS2_S7_, funcdef_no=10012, decl_uid=193697, cgraph_uid=6644, symbol_order=7437)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.248927;

  <bb 2> :
  D.248927 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.248927;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8569, decl_uid=211684, cgraph_uid=5201, symbol_order=5990)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248929;

  <bb 2> :
  _1 = entry->m_key;
  D.248929 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.248929;

}



;; Function function_pthread_exit_array::function_pthread_exit_array (_ZN27function_pthread_exit_arrayC2ERKS_, funcdef_no=6339, decl_uid=194077, cgraph_uid=3314, symbol_order=4090)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_exit_array::function_pthread_exit_array (struct function_pthread_exit_array * const this, const struct function_pthread_exit_array & D.194079)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->pthread_exit_array;
  _2 = &D.194079->pthread_exit_array;
  std::vector<pthread_exit_type>::vector (_1, _2);
  return;

}



;; Function std::vector<pthread_exit_type>::vector (_ZNSt6vectorI17pthread_exit_typeSaIS0_EEC2ERKS2_, funcdef_no=7688, decl_uid=178711, cgraph_uid=4320, symbol_order=5105)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<pthread_exit_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct pthread_exit_type * D.248935;
  struct __normal_iterator D.248932;
  struct __normal_iterator D.248931;
  struct allocator D.211799;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.178748;
  _2 = &__x->D.178748;
  _3 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_2);
  D.211799 = __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<pthread_exit_type>::size (__x);
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_1, _4, &D.211799);

  <bb 3> :
  std::allocator<pthread_exit_type>::~allocator (&D.211799);
  D.211799 = {CLOBBER};
  _5 = &this->D.178748;
  _6 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.178748._M_impl.D.178093._M_start;
  D.248931 = std::vector<pthread_exit_type>::end (__x);
  D.248932 = std::vector<pthread_exit_type>::begin (__x);
  D.248935 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*, pthread_exit_type> (D.248932, D.248931, _7, _6);

  <bb 4> :
  _8 = D.248935;
  this->D.178748._M_impl.D.178093._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<pthread_exit_type>::~allocator (&D.211799);
  resx 2

  <bb 6> :
<L1>:
  D.211799 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.178748;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI17pthread_exit_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8571, decl_uid=177983, cgraph_uid=5203, symbol_order=5992)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.248937;

  <bb 2> :
  D.248937 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248937;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI17pthread_exit_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=8570, decl_uid=177955, cgraph_uid=5202, symbol_order=5991)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<pthread_exit_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<pthread_exit_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI17pthread_exit_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9335, decl_uid=177920, cgraph_uid=5967, symbol_order=6756)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<pthread_exit_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<pthread_exit_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<pthread_exit_type>::allocator (_ZNSaI17pthread_exit_typeEC2ERKS0_, funcdef_no=10014, decl_uid=177863, cgraph_uid=6646, symbol_order=7439)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_exit_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeEC2ERKS2_, funcdef_no=10526, decl_uid=177792, cgraph_uid=7158, symbol_order=7951)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.177794)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EEC2EmRKS1_, funcdef_no=8573, decl_uid=178180, cgraph_uid=5205, symbol_order=5994)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9337, decl_uid=178085, cgraph_uid=5969, symbol_order=6758)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<pthread_exit_type>::allocator (this, __a);
  _1 = &this->D.178093;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8677, decl_uid=178040, cgraph_uid=5309, symbol_order=6098)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_create_storage (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9339, decl_uid=178104, cgraph_uid=5971, symbol_order=6760)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct pthread_exit_type * D.248944;

  <bb 2> :
  D.248944 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_allocate (this, __n);
  _1 = D.248944;
  this->_M_impl.D.178093._M_start = _1;
  _2 = this->_M_impl.D.178093._M_start;
  this->_M_impl.D.178093._M_finish = _2;
  _3 = this->_M_impl.D.178093._M_start;
  _4 = __n * 16;
  _5 = _3 + _4;
  this->_M_impl.D.178093._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_allocate (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE11_M_allocateEm, funcdef_no=9483, decl_uid=178097, cgraph_uid=6115, symbol_order=6904)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct pthread_exit_type * std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct pthread_exit_type * D.248951;
  struct pthread_exit_type * iftmp.549;
  struct pthread_exit_type * D.248945;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.248951 = std::allocator_traits<std::allocator<pthread_exit_type> >::allocate (_1, __n);
  iftmp.549 = D.248951;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.549 = 0B;

  <bb 5> :
  D.248945 = iftmp.549;

  <bb 6> :
<L3>:
  return D.248945;

}



;; Function std::allocator_traits<std::allocator<pthread_exit_type> >::allocate (_ZNSt16allocator_traitsISaI17pthread_exit_typeEE8allocateERS1_m, funcdef_no=10107, decl_uid=177898, cgraph_uid=6739, symbol_order=7532)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct pthread_exit_type * std::allocator_traits<std::allocator<pthread_exit_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct pthread_exit_type * D.248954;
  struct pthread_exit_type * D.248952;

  <bb 2> :
  D.248954 = __gnu_cxx::new_allocator<pthread_exit_type>::allocate (__a, __n, 0B);
  D.248952 = D.248954;

  <bb 3> :
<L0>:
  return D.248952;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::allocate (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeE8allocateEmPKv, funcdef_no=10581, decl_uid=177752, cgraph_uid=7214, symbol_order=8007)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct pthread_exit_type * __gnu_cxx::new_allocator<pthread_exit_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.243518)
{
  struct pthread_exit_type * D.248965;
  struct pthread_exit_type * D.248964;
  align_val_t __al;
  struct pthread_exit_type * D.248962;
  bool retval.550;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<pthread_exit_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.550 = _4 != 0;
  if (retval.550 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 1152921504606846975)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 16;
  D.248965 = operator new (_6);
  D.248962 = D.248965;

  <bb 7> :
<L6>:
  return D.248962;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI17pthread_exit_typeE11_M_max_sizeEv, funcdef_no=10582, decl_uid=177779, cgraph_uid=7213, symbol_order=8006)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<pthread_exit_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.248966;

  <bb 2> :
  D.248966 = 576460752303423487;

  <bb 3> :
<L0>:
  return D.248966;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6395, decl_uid=178140, cgraph_uid=3367, symbol_order=4143)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<pthread_exit_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<pthread_exit_type>::~allocator (_ZNSaI17pthread_exit_typeED2Ev, funcdef_no=7749, decl_uid=177873, cgraph_uid=4381, symbol_order=5166)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_exit_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_exit_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeED2Ev, funcdef_no=8680, decl_uid=177802, cgraph_uid=5312, symbol_order=6101)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_exit_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8577, decl_uid=177981, cgraph_uid=5209, symbol_order=5998)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.248968;

  <bb 2> :
  D.248968 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248968;

}



;; Function std::vector<pthread_exit_type>::end (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE3endEv, funcdef_no=8576, decl_uid=178363, cgraph_uid=5208, symbol_order=5997)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<pthread_exit_type>::end (const struct vector * const this)
{
  struct const_iterator D.222257;
  struct const_iterator D.248970;

  <bb 2> :
  _1 = &this->D.178748._M_impl.D.178093._M_finish;
  __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (&D.222257, _1);
  D.248970 = D.222257;
  D.222257 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248970;

}



;; Function __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9341, decl_uid=211768, cgraph_uid=5973, symbol_order=6762)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (struct __normal_iterator * const this, const struct pthread_exit_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<pthread_exit_type>::begin (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE5beginEv, funcdef_no=8575, decl_uid=178359, cgraph_uid=5207, symbol_order=5996)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<pthread_exit_type>::begin (const struct vector * const this)
{
  struct const_iterator D.222255;
  struct const_iterator D.248973;

  <bb 2> :
  _1 = &this->D.178748._M_impl.D.178093._M_start;
  __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (&D.222255, _1);
  D.248973 = D.222255;
  D.222255 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248973;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*, pthread_exit_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8578, decl_uid=211788, cgraph_uid=5210, symbol_order=5999)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*, pthread_exit_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_exit_type * __result, struct allocator & D.222262)
{
  struct pthread_exit_type * D.248978;
  struct pthread_exit_type * D.248976;

  <bb 2> :
  D.248978 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (__first, __last, __result);
  D.248976 = D.248978;

  <bb 3> :
<L0>:
  return D.248976;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9343, decl_uid=222264, cgraph_uid=5976, symbol_order=6765)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.248981;
  const bool __assignable;
  struct pthread_exit_type * D.248979;

  <bb 2> :
  __assignable = 1;
  D.248981 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (__first, __last, __result);
  D.248979 = D.248981;

  <bb 3> :
<L0>:
  return D.248979;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10016, decl_uid=233739, cgraph_uid=6648, symbol_order=7441)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.248984;
  struct pthread_exit_type * D.248982;

  <bb 2> :
  D.248984 = std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (__first, __last, __result);
  D.248982 = D.248984;

  <bb 3> :
<L0>:
  return D.248982;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10528, decl_uid=239880, cgraph_uid=7160, symbol_order=7953)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.248989;
  struct __normal_iterator D.248987;
  struct __normal_iterator D.248986;
  struct pthread_exit_type * D.248985;

  <bb 2> :
  D.248986 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (__last);
  D.248987 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (__first);
  D.248989 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (D.248987, D.248986, __result);
  D.248985 = D.248989;

  <bb 3> :
<L0>:
  return D.248985;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9487, decl_uid=225509, cgraph_uid=6119, symbol_order=6908)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.248990;

  <bb 2> :
  D.248990 = __it;

  <bb 3> :
<L0>:
  return D.248990;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEPS2_ET1_T0_SB_SA_, funcdef_no=10786, decl_uid=243265, cgraph_uid=7418, symbol_order=8213)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.248994;
  struct pthread_exit_type * D.248992;

  <bb 2> :
  __result.551_1 = __result;
  _2 = std::__niter_base<pthread_exit_type*> (__result.551_1);
  _3 = std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (__last);
  _4 = std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (__first);
  D.248994 = std::__copy_move_a1<false, const pthread_exit_type*, pthread_exit_type*> (_4, _3, _2);
  _5 = D.248994;
  D.248992 = std::__niter_wrap<pthread_exit_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.248992;

}



;; Function std::__niter_base<pthread_exit_type*> (_ZSt12__niter_baseIP17pthread_exit_typeET_S2_, funcdef_no=10113, decl_uid=225775, cgraph_uid=6745, symbol_order=7538)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__niter_base<pthread_exit_type*> (struct pthread_exit_type * __it)
{
  struct pthread_exit_type * D.248995;

  <bb 2> :
  D.248995 = __it;

  <bb 3> :
<L0>:
  return D.248995;

}



;; Function std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (_ZSt12__niter_baseIPK17pthread_exit_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10108, decl_uid=235002, cgraph_uid=6740, symbol_order=7533)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct pthread_exit_type * std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (struct __normal_iterator __it)
{
  const struct pthread_exit_type * D.248997;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::base (&__it);
  D.248997 = *_1;

  <bb 3> :
<L0>:
  return D.248997;

}



;; Function __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10583, decl_uid=211755, cgraph_uid=7215, symbol_order=8008)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct pthread_exit_type * const & __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::base (const struct __normal_iterator * const this)
{
  const struct pthread_exit_type * const & D.248999;

  <bb 2> :
  D.248999 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.248999;

}



;; Function std::__copy_move_a1<false, const pthread_exit_type*, pthread_exit_type*> (_ZSt14__copy_move_a1ILb0EPK17pthread_exit_typePS0_ET1_T0_S5_S4_, funcdef_no=10110, decl_uid=235156, cgraph_uid=6742, symbol_order=7535)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a1<false, const pthread_exit_type*, pthread_exit_type*> (const struct pthread_exit_type * __first, const struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.249003;
  struct pthread_exit_type * D.249001;

  <bb 2> :
  D.249003 = std::__copy_move_a2<false, const pthread_exit_type*, pthread_exit_type*> (__first, __last, __result);
  D.249001 = D.249003;

  <bb 3> :
<L0>:
  return D.249001;

}



;; Function std::__copy_move_a2<false, const pthread_exit_type*, pthread_exit_type*> (_ZSt14__copy_move_a2ILb0EPK17pthread_exit_typePS0_ET1_T0_S5_S4_, funcdef_no=10584, decl_uid=240272, cgraph_uid=7216, symbol_order=8009)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a2<false, const pthread_exit_type*, pthread_exit_type*> (const struct pthread_exit_type * __first, const struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.249004;

  <bb 2> :
  D.249004 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_exit_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.249004;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_exit_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI17pthread_exit_typeEEPT_PKS4_S7_S5_, funcdef_no=10803, decl_uid=243541, cgraph_uid=7435, symbol_order=8230)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct pthread_exit_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_exit_type> (const struct pthread_exit_type * __first, const struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  const ptrdiff_t _Num;
  struct pthread_exit_type * D.249009;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 16;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.552_2 = (long unsigned int) _Num;
  _3 = _Num.552_2 * 16;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.553_4 = (long unsigned int) _Num;
  _5 = _Num.553_4 * 16;
  D.249009 = __result + _5;

  <bb 5> :
<L3>:
  return D.249009;

}



;; Function std::__niter_wrap<pthread_exit_type*> (_ZSt12__niter_wrapIP17pthread_exit_typeET_RKS2_S2_, funcdef_no=10115, decl_uid=235199, cgraph_uid=6747, symbol_order=7540)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__niter_wrap<pthread_exit_type*> (struct pthread_exit_type * const & D.240294, struct pthread_exit_type * __res)
{
  struct pthread_exit_type * D.249011;

  <bb 2> :
  D.249011 = __res;

  <bb 3> :
<L0>:
  return D.249011;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::~_Vector_base (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EED2Ev, funcdef_no=7752, decl_uid=178203, cgraph_uid=4384, symbol_order=5169)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.178093._M_end_of_storage;
  _2 = this->_M_impl.D.178093._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.178093._M_start;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8682, decl_uid=178100, cgraph_uid=5314, symbol_order=6103)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (struct _Vector_base * const this, struct pthread_exit_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<pthread_exit_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<pthread_exit_type> >::deallocate (_ZNSt16allocator_traitsISaI17pthread_exit_typeEE10deallocateERS1_PS0_m, funcdef_no=9481, decl_uid=177905, cgraph_uid=6113, symbol_order=6902)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<pthread_exit_type> >::deallocate (struct allocator_type & __a, struct pthread_exit_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_exit_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeE10deallocateEPS1_m, funcdef_no=10106, decl_uid=177756, cgraph_uid=6738, symbol_order=7531)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<pthread_exit_type>::deallocate (struct new_allocator * const this, struct pthread_exit_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 16;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<pthread_exit_type>::operator[] (_ZNSt6vectorI17pthread_exit_typeSaIS0_EEixEm, funcdef_no=7694, decl_uid=178401, cgraph_uid=4326, symbol_order=5111)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<pthread_exit_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.249019;

  <bb 2> :
  _1 = this->D.178748._M_impl.D.178093._M_start;
  _2 = __n * 16;
  D.249019 = _1 + _2;

  <bb 3> :
<L0>:
  return D.249019;

}



;; Function std::vector<pthread_exit_type>::size (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE4sizeEv, funcdef_no=7693, decl_uid=178381, cgraph_uid=4325, symbol_order=5110)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_exit_type>::size (const struct vector * const this)
{
  size_type D.249021;

  <bb 2> :
  _1 = this->D.178748._M_impl.D.178093._M_finish;
  _2 = this->D.178748._M_impl.D.178093._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.249021 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.249021;

}



;; Function std::vector<tree_node*>::operator[] (_ZNSt6vectorIP9tree_nodeSaIS1_EEixEm, funcdef_no=7697, decl_uid=184540, cgraph_uid=4329, symbol_order=5114)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * & std::vector<tree_node*>::operator[] (struct vector * const this, size_type __n)
{
  union tree_node * & D.249023;

  <bb 2> :
  _1 = this->D.184887._M_impl.D.184243._M_start;
  _2 = __n * 8;
  D.249023 = _1 + _2;

  <bb 3> :
<L0>:
  return D.249023;

}



;; Function std::vector<tree_node*>::size (_ZNKSt6vectorIP9tree_nodeSaIS1_EE4sizeEv, funcdef_no=7696, decl_uid=184520, cgraph_uid=4328, symbol_order=5113)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<tree_node*>::size (const struct vector * const this)
{
  size_type D.249025;

  <bb 2> :
  _1 = this->D.184887._M_impl.D.184243._M_finish;
  _2 = this->D.184887._M_impl.D.184243._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  D.249025 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.249025;

}



;; Function function_return_array::function_return_array (_ZN21function_return_arrayC2Ev, funcdef_no=6345, decl_uid=189867, cgraph_uid=3320, symbol_order=4096)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_return_array::function_return_array (struct function_return_array * const this)
{
  <bb 2> :
  this->return_type_num = 0;
  this->pthread_type_num = -1;
  _1 = &this->return_type_array;
  std::vector<return_type>::vector (_1);
  return;

}



;; Function std::vector<return_type>::vector (_ZNSt6vectorI11return_typeSaIS0_EEC2Ev, funcdef_no=6221, decl_uid=173500, cgraph_uid=3197, symbol_order=3956)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<return_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.173508;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_ZNSt12_Vector_baseI11return_typeSaIS0_EEC2Ev, funcdef_no=6219, decl_uid=172958, cgraph_uid=3194, symbol_order=3953)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11return_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7570, decl_uid=172850, cgraph_uid=4202, symbol_order=4987)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<return_type>::allocator (this);
  _1 = &this->D.172853;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<return_type>::allocator (_ZNSaI11return_typeEC2Ev, funcdef_no=8385, decl_uid=172628, cgraph_uid=5017, symbol_order=5806)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<return_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<return_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11return_typeEC2Ev, funcdef_no=9166, decl_uid=172557, cgraph_uid=5798, symbol_order=6587)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<return_type>::operator= (_ZNSt6vectorI11return_typeSaIS0_EEaSERKS2_, funcdef_no=7698, decl_uid=173086, cgraph_uid=4332, symbol_order=5117)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<return_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct return_type * D.249060;
  struct return_type * __tmp;
  const size_type __xlen;
  struct vector & D.249058;
  struct __normal_iterator D.249055;
  struct __normal_iterator D.249054;
  struct __normal_iterator D.249053;
  struct __normal_iterator D.249052;
  struct __normal_iterator D.249051;
  bool retval.558;
  struct __normal_iterator D.249046;
  struct __normal_iterator D.249045;
  bool retval.557;
  bool iftmp.556;
  bool retval.555;
  bool retval.554;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.554 = __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_propagate_on_copy_assign ();
  if (retval.554 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.173508;
  _4 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.173508;
  _6 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.556 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.556 = 0;

  <bb 8> :
  retval.555 = iftmp.556;
  if (retval.555 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<return_type>::clear (this);
  _8 = &this->D.173508;
  _9 = this->D.173508._M_impl.D.172853._M_end_of_storage;
  _10 = this->D.173508._M_impl.D.172853._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 24;
  _13 = (long unsigned int) _12;
  _14 = this->D.173508._M_impl.D.172853._M_start;
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (_8, _14, _13);
  this->D.173508._M_impl.D.172853._M_start = 0B;
  this->D.173508._M_impl.D.172853._M_finish = 0B;
  this->D.173508._M_impl.D.172853._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.173508;
  _16 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.173508;
  _18 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<return_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<return_type>::size (__x);
  _19 = std::vector<return_type>::capacity (this);
  retval.557 = __xlen > _19;
  if (retval.557 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.249045 = std::vector<return_type>::end (__x);
  D.249046 = std::vector<return_type>::begin (__x);
  D.249060 = std::vector<return_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (this, __xlen, D.249046, D.249045);
  __tmp = D.249060;
  _20 = &this->D.173508;
  _21 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.173508._M_impl.D.172853._M_finish;
  _23 = this->D.173508._M_impl.D.172853._M_start;
  std::_Destroy<return_type*, return_type> (_23, _22, _21);
  _24 = &this->D.173508;
  _25 = this->D.173508._M_impl.D.172853._M_end_of_storage;
  _26 = this->D.173508._M_impl.D.172853._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 24;
  _29 = (long unsigned int) _28;
  _30 = this->D.173508._M_impl.D.172853._M_start;
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (_24, _30, _29);
  this->D.173508._M_impl.D.172853._M_start = __tmp;
  _31 = this->D.173508._M_impl.D.172853._M_start;
  _32 = __xlen * 24;
  _33 = _31 + _32;
  this->D.173508._M_impl.D.172853._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<return_type>::size (this);
  retval.558 = __xlen <= _34;
  if (retval.558 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.173508;
  _36 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_35);
  D.249051 = std::vector<return_type>::end (this);
  D.249052 = std::vector<return_type>::begin (this);
  D.249053 = std::vector<return_type>::end (__x);
  D.249054 = std::vector<return_type>::begin (__x);
  D.249055 = std::copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (D.249054, D.249053, D.249052);
  std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type> (D.249055, D.249051, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.173508._M_impl.D.172853._M_start;
  _38 = __x->D.173508._M_impl.D.172853._M_start;
  _39 = std::vector<return_type>::size (this);
  _40 = _39 * 24;
  _41 = _38 + _40;
  _42 = __x->D.173508._M_impl.D.172853._M_start;
  std::copy<return_type*, return_type*> (_42, _41, _37);
  _43 = &this->D.173508;
  _44 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.173508._M_impl.D.172853._M_finish;
  _46 = __x->D.173508._M_impl.D.172853._M_finish;
  _47 = __x->D.173508._M_impl.D.172853._M_start;
  _48 = std::vector<return_type>::size (this);
  _49 = _48 * 24;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<return_type*, return_type*, return_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.173508._M_impl.D.172853._M_start;
  _52 = __xlen * 24;
  _53 = _51 + _52;
  this->D.173508._M_impl.D.172853._M_finish = _53;

  <bb 17> :
  D.249058 = this;

  <bb 18> :
<L19>:
  return D.249058;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI11return_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7699, decl_uid=172720, cgraph_uid=4330, symbol_order=5115)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_propagate_on_copy_assign ()
{
  bool D.249061;

  <bb 2> :
  D.249061 = 0;

  <bb 3> :
<L0>:
  return D.249061;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI11return_typeES1_E15_S_always_equalEv, funcdef_no=7700, decl_uid=172723, cgraph_uid=4331, symbol_order=5116)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_always_equal ()
{
  bool D.249063;

  <bb 2> :
  D.249063 = 1;

  <bb 3> :
<L0>:
  return D.249063;

}



;; Function std::operator!= (_ZStneRKSaI11return_typeES2_, funcdef_no=8580, decl_uid=172606, cgraph_uid=5212, symbol_order=6001)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.222288, const struct allocator & D.222289)
{
  bool D.249065;

  <bb 2> :
  D.249065 = 0;

  <bb 3> :
<L0>:
  return D.249065;

}



;; Function std::vector<return_type>::clear (_ZNSt6vectorI11return_typeSaIS0_EE5clearEv, funcdef_no=8581, decl_uid=173238, cgraph_uid=5213, symbol_order=6002)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<return_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.173508._M_impl.D.172853._M_start;
  std::vector<return_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<return_type>::_M_erase_at_end (_ZNSt6vectorI11return_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9346, decl_uid=173366, cgraph_uid=5978, symbol_order=6767)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<return_type>::_M_erase_at_end (struct vector * const this, struct return_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.173508._M_impl.D.172853._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 24;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.173508;
  _5 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.173508._M_impl.D.172853._M_finish;
  std::_Destroy<return_type*, return_type> (__pos, _6, _5);
  this->D.173508._M_impl.D.172853._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<return_type> > (_ZSt15__alloc_on_copyISaI11return_typeEEvRT_RKS2_, funcdef_no=8582, decl_uid=211849, cgraph_uid=5214, symbol_order=6003)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<return_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<return_type>::capacity (_ZNKSt6vectorI11return_typeSaIS0_EE8capacityEv, funcdef_no=8583, decl_uid=173154, cgraph_uid=5215, symbol_order=6004)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<return_type>::capacity (const struct vector * const this)
{
  size_type D.249070;

  <bb 2> :
  _1 = this->D.173508._M_impl.D.172853._M_end_of_storage;
  _2 = this->D.173508._M_impl.D.172853._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.249070 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.249070;

}



;; Function std::vector<return_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (_ZNSt6vectorI11return_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8584, decl_uid=211856, cgraph_uid=5216, symbol_order=6005)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct return_type * std::vector<return_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct return_type * D.249074;
  struct return_type * __result;
  struct return_type * D.249072;

  <bb 2> :
  _1 = &this->D.173508;
  D.249074 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_allocate (_1, __n);
  __result = D.249074;
  _2 = &this->D.173508;
  _3 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*, return_type> (__first, __last, __result, _3);

  <bb 3> :
  D.249072 = __result;

  <bb 4> :
<L0>:
  return D.249072;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.173508;
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<return_type>::end (_ZNSt6vectorI11return_typeSaIS0_EE3endEv, funcdef_no=8587, decl_uid=173121, cgraph_uid=5219, symbol_order=6008)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<return_type>::end (struct vector * const this)
{
  struct iterator D.222375;
  struct iterator D.249078;

  <bb 2> :
  _1 = &this->D.173508._M_impl.D.172853._M_finish;
  __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::__normal_iterator (&D.222375, _1);
  D.249078 = D.222375;
  D.222375 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249078;

}



;; Function __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9349, decl_uid=211938, cgraph_uid=5981, symbol_order=6770)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::__normal_iterator (struct __normal_iterator * const this, struct return_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<return_type>::begin (_ZNSt6vectorI11return_typeSaIS0_EE5beginEv, funcdef_no=8585, decl_uid=173117, cgraph_uid=5217, symbol_order=6006)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<return_type>::begin (struct vector * const this)
{
  struct iterator D.222329;
  struct iterator D.249081;

  <bb 2> :
  _1 = &this->D.173508._M_impl.D.172853._M_start;
  __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::__normal_iterator (&D.222329, _1);
  D.249081 = D.222329;
  D.222329 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249081;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8586, decl_uid=211957, cgraph_uid=5218, symbol_order=6007)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.249086;
  struct __normal_iterator D.249085;
  struct __normal_iterator D.249084;

  <bb 2> :
  D.249085 = std::__miter_base<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (__last);
  D.249086 = std::__miter_base<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (__first);
  D.249084 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (D.249086, D.249085, __result);

  <bb 3> :
<L0>:
  return D.249084;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9351, decl_uid=222341, cgraph_uid=5983, symbol_order=6772)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.249088;

  <bb 2> :
  D.249088 = __it;

  <bb 3> :
<L0>:
  return D.249088;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9352, decl_uid=222347, cgraph_uid=5985, symbol_order=6774)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct return_type * D.249092;
  struct __normal_iterator D.249090;

  <bb 2> :
  _1 = std::__niter_base<return_type*, std::vector<return_type> > (__result);
  _2 = std::__niter_base<const return_type*, std::vector<return_type> > (__last);
  _3 = std::__niter_base<const return_type*, std::vector<return_type> > (__first);
  D.249092 = std::__copy_move_a1<false, const return_type*, return_type*> (_3, _2, _1);
  _4 = D.249092;
  D.249090 = std::__niter_wrap<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.249090;

}



;; Function std::__niter_base<return_type*, std::vector<return_type> > (_ZSt12__niter_baseIP11return_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10020, decl_uid=233943, cgraph_uid=6652, symbol_order=7445)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__niter_base<return_type*, std::vector<return_type> > (struct __normal_iterator __it)
{
  struct return_type * D.249093;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (&__it);
  D.249093 = *_1;

  <bb 3> :
<L0>:
  return D.249093;

}



;; Function __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9377, decl_uid=211925, cgraph_uid=6009, symbol_order=6798)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * const & __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (const struct __normal_iterator * const this)
{
  struct return_type * const & D.249095;

  <bb 2> :
  D.249095 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.249095;

}



;; Function std::__niter_base<const return_type*, std::vector<return_type> > (_ZSt12__niter_baseIPK11return_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10019, decl_uid=233792, cgraph_uid=6651, symbol_order=7444)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct return_type * std::__niter_base<const return_type*, std::vector<return_type> > (struct __normal_iterator __it)
{
  const struct return_type * D.249097;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::base (&__it);
  D.249097 = *_1;

  <bb 3> :
<L0>:
  return D.249097;

}



;; Function std::__copy_move_a1<false, const return_type*, return_type*> (_ZSt14__copy_move_a1ILb0EPK11return_typePS0_ET1_T0_S5_S4_, funcdef_no=10021, decl_uid=233946, cgraph_uid=6653, symbol_order=7446)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__copy_move_a1<false, const return_type*, return_type*> (const struct return_type * __first, const struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.249101;
  struct return_type * D.249099;

  <bb 2> :
  D.249101 = std::__copy_move_a2<false, const return_type*, return_type*> (__first, __last, __result);
  D.249099 = D.249101;

  <bb 3> :
<L0>:
  return D.249099;

}



;; Function std::__copy_move_a2<false, const return_type*, return_type*> (_ZSt14__copy_move_a2ILb0EPK11return_typePS0_ET1_T0_S5_S4_, funcdef_no=10532, decl_uid=239900, cgraph_uid=7164, symbol_order=7957)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__copy_move_a2<false, const return_type*, return_type*> (const struct return_type * __first, const struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.249102;

  <bb 2> :
  D.249102 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<return_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.249102;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<return_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI11return_typeEEPT_PKS4_S7_S5_, funcdef_no=10787, decl_uid=243293, cgraph_uid=7419, symbol_order=8214)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct return_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<return_type> (const struct return_type * __first, const struct return_type * __last, struct return_type * __result)
{
  const ptrdiff_t _Num;
  struct return_type * D.249107;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 24;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.559_2 = (long unsigned int) _Num;
  _3 = _Num.559_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.560_4 = (long unsigned int) _Num;
  _5 = _Num.560_4 * 24;
  D.249107 = __result + _5;

  <bb 5> :
<L3>:
  return D.249107;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10022, decl_uid=233950, cgraph_uid=6654, symbol_order=7447)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type*> (struct __normal_iterator __from, struct return_type * __res)
{
  struct __normal_iterator D.249109;

  <bb 2> :
  _1 = std::__niter_base<return_type*, std::vector<return_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 24;
  D.249109 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.249109;

}



;; Function __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10533, decl_uid=211916, cgraph_uid=7165, symbol_order=7958)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct return_type * const D.243299;
  struct __normal_iterator D.243300;
  struct __normal_iterator D.249111;

  <bb 2> :
  _1 = this->_M_current;
  __n.561_2 = (long unsigned int) __n;
  _3 = __n.561_2 * 24;
  _4 = _1 + _3;
  D.243299 = _4;
  __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::__normal_iterator (&D.243300, &D.243299);
  D.249111 = D.243300;
  D.243300 = {CLOBBER};
  D.243299 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.249111;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8588, decl_uid=211963, cgraph_uid=5220, symbol_order=6009)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.222378)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9354, decl_uid=222380, cgraph_uid=5986, symbol_order=6775)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10023, decl_uid=233974, cgraph_uid=6655, symbol_order=7448)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (struct __normal_iterator D.239909, struct __normal_iterator D.239910)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<return_type*, return_type*> (_ZSt4copyIP11return_typeS1_ET0_T_S3_S2_, funcdef_no=8589, decl_uid=211971, cgraph_uid=5221, symbol_order=6010)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::copy<return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.249117;
  struct return_type * D.249115;

  <bb 2> :
  _1 = std::__miter_base<return_type*> (__last);
  _2 = std::__miter_base<return_type*> (__first);
  D.249117 = std::__copy_move_a<false, return_type*, return_type*> (_2, _1, __result);
  D.249115 = D.249117;

  <bb 3> :
<L0>:
  return D.249115;

}



;; Function std::__miter_base<return_type*> (_ZSt12__miter_baseIP11return_typeET_S2_, funcdef_no=9355, decl_uid=222396, cgraph_uid=5987, symbol_order=6776)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__miter_base<return_type*> (struct return_type * __it)
{
  struct return_type * D.249118;

  <bb 2> :
  D.249118 = __it;

  <bb 3> :
<L0>:
  return D.249118;

}



;; Function std::__copy_move_a<false, return_type*, return_type*> (_ZSt13__copy_move_aILb0EP11return_typeS1_ET1_T0_S3_S2_, funcdef_no=9356, decl_uid=222398, cgraph_uid=5988, symbol_order=6777)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__copy_move_a<false, return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.249122;
  struct return_type * D.249120;

  <bb 2> :
  __result.562_1 = __result;
  _2 = std::__niter_base<return_type*> (__result.562_1);
  _3 = std::__niter_base<return_type*> (__last);
  _4 = std::__niter_base<return_type*> (__first);
  D.249122 = std::__copy_move_a1<false, return_type*, return_type*> (_4, _3, _2);
  _5 = D.249122;
  D.249120 = std::__niter_wrap<return_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.249120;

}



;; Function std::__niter_base<return_type*> (_ZSt12__niter_baseIP11return_typeET_S2_, funcdef_no=10024, decl_uid=223012, cgraph_uid=6656, symbol_order=7449)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__niter_base<return_type*> (struct return_type * __it)
{
  struct return_type * D.249123;

  <bb 2> :
  D.249123 = __it;

  <bb 3> :
<L0>:
  return D.249123;

}



;; Function std::__copy_move_a1<false, return_type*, return_type*> (_ZSt14__copy_move_a1ILb0EP11return_typeS1_ET1_T0_S3_S2_, funcdef_no=10025, decl_uid=233985, cgraph_uid=6657, symbol_order=7450)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__copy_move_a1<false, return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.249127;
  struct return_type * D.249125;

  <bb 2> :
  D.249127 = std::__copy_move_a2<false, return_type*, return_type*> (__first, __last, __result);
  D.249125 = D.249127;

  <bb 3> :
<L0>:
  return D.249125;

}



;; Function std::__copy_move_a2<false, return_type*, return_type*> (_ZSt14__copy_move_a2ILb0EP11return_typeS1_ET1_T0_S3_S2_, funcdef_no=10534, decl_uid=239918, cgraph_uid=7166, symbol_order=7959)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__copy_move_a2<false, return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.249128;

  <bb 2> :
  D.249128 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<return_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.249128;

}



;; Function std::__niter_wrap<return_type*> (_ZSt12__niter_wrapIP11return_typeET_RKS2_S2_, funcdef_no=10026, decl_uid=233989, cgraph_uid=6658, symbol_order=7451)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__niter_wrap<return_type*> (struct return_type * const & D.239922, struct return_type * __res)
{
  struct return_type * D.249130;

  <bb 2> :
  D.249130 = __res;

  <bb 3> :
<L0>:
  return D.249130;

}



;; Function std::__uninitialized_copy_a<return_type*, return_type*, return_type> (_ZSt22__uninitialized_copy_aIP11return_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8590, decl_uid=211975, cgraph_uid=5222, symbol_order=6011)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__uninitialized_copy_a<return_type*, return_type*, return_type> (struct return_type * __first, struct return_type * __last, struct return_type * __result, struct allocator & D.222405)
{
  struct return_type * D.249134;
  struct return_type * D.249132;

  <bb 2> :
  D.249134 = std::uninitialized_copy<return_type*, return_type*> (__first, __last, __result);
  D.249132 = D.249134;

  <bb 3> :
<L0>:
  return D.249132;

}



;; Function std::uninitialized_copy<return_type*, return_type*> (_ZSt18uninitialized_copyIP11return_typeS1_ET0_T_S3_S2_, funcdef_no=9357, decl_uid=222407, cgraph_uid=5989, symbol_order=6778)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::uninitialized_copy<return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.249137;
  const bool __assignable;
  struct return_type * D.249135;

  <bb 2> :
  __assignable = 1;
  D.249137 = std::__uninitialized_copy<false>::__uninit_copy<return_type*, return_type*> (__first, __last, __result);
  D.249135 = D.249137;

  <bb 3> :
<L0>:
  return D.249135;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<return_type*, return_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP11return_typeS3_EET0_T_S5_S4_, funcdef_no=10027, decl_uid=234023, cgraph_uid=6659, symbol_order=7452)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct return_type * std::__uninitialized_copy<false>::__uninit_copy<return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * __cur;
  struct return_type * D.249138;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<return_type> (__cur);
  std::_Construct<return_type, return_type&> (_1, __first);
  __first = __first + 24;
  __cur = __cur + 24;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.249138 = __cur;

  <bb 6> :
<L3>:
  return D.249138;

}



;; Function std::_Construct<return_type, return_type&> (_ZSt10_ConstructI11return_typeJRS0_EEvPT_DpOT0_, funcdef_no=10535, decl_uid=239930, cgraph_uid=7167, symbol_order=7960)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<return_type, return_type&> (struct return_type * __p, struct return_type & __args#0)
{
  void * D.243319;
  void * D.243318;
  const struct return_type * D.243320;

  <bb 2> :
  D.243320 = std::forward<return_type&> (__args#0);
  D.243318 = __p;
  D.243319 = operator new (24, D.243318);
  MEM[(struct return_type *)D.243319] = *D.243320;
  return;

}



;; Function std::forward<return_type&> (_ZSt7forwardIR11return_typeEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=10788, decl_uid=243316, cgraph_uid=7420, symbol_order=8215)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct return_type & std::forward<return_type&> (struct type & __t)
{
  struct return_type & D.249140;

  <bb 2> :
  D.249140 = __t;

  <bb 3> :
<L0>:
  return D.249140;

}



;; Function function_return_array::operator= (_ZN21function_return_arrayaSERKS_, funcdef_no=6347, decl_uid=194183, cgraph_uid=3322, symbol_order=4098)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_return_array & function_return_array::operator= (struct function_return_array * const this, const struct function_return_array & D.194184)
{
  struct function_return_array & D.249142;

  <bb 2> :
  _1 = D.194184->return_type_num;
  this->return_type_num = _1;
  _2 = D.194184->pthread_type_num;
  this->pthread_type_num = _2;
  _3 = &D.194184->return_type_array;
  _4 = &this->return_type_array;
  std::vector<return_type>::operator= (_4, _3);
  D.249142 = this;

  <bb 3> :
<L0>:
  return D.249142;

}



;; Function std::vector<tree_node*>::push_back (_ZNSt6vectorIP9tree_nodeSaIS1_EE9push_backERKS1_, funcdef_no=7701, decl_uid=184567, cgraph_uid=4334, symbol_order=5119)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<tree_node*>::push_back (struct vector * const this, union tree_node * const & __x)
{
  struct __normal_iterator D.249147;

  <bb 2> :
  _1 = this->D.184887._M_impl.D.184243._M_finish;
  _2 = this->D.184887._M_impl.D.184243._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.184887._M_impl.D.184243._M_finish;
  _4 = &this->D.184887._M_impl;
  std::allocator_traits<std::allocator<tree_node*> >::construct<tree_node*, tree_node* const&> (_4, _3, __x);
  _5 = this->D.184887._M_impl.D.184243._M_finish;
  _6 = _5 + 8;
  this->D.184887._M_impl.D.184243._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.249147 = std::vector<tree_node*>::end (this);
  std::vector<tree_node*>::_M_realloc_insert<tree_node* const&> (this, D.249147, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<tree_node*> >::construct<tree_node*, tree_node* const&> (_ZNSt16allocator_traitsISaIP9tree_nodeEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_, funcdef_no=8591, decl_uid=211987, cgraph_uid=5223, symbol_order=6012)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<tree_node*> >::construct<tree_node*, tree_node* const&> (struct allocator_type & __a, union tree_node * * __p, union tree_node * const & __args#0)
{
  <bb 2> :
  _1 = std::forward<tree_node* const&> (__args#0);
  __gnu_cxx::new_allocator<tree_node*>::construct<tree_node*, tree_node* const&> (__a, __p, _1);
  return;

}



;; Function std::forward<tree_node* const&> (_ZSt7forwardIRKP9tree_nodeEOT_RNSt16remove_referenceIS4_E4typeE, funcdef_no=9358, decl_uid=222422, cgraph_uid=5990, symbol_order=6779)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
union tree_node * const & std::forward<tree_node* const&> (union tree_node * const & __t)
{
  union tree_node * const & D.249148;

  <bb 2> :
  D.249148 = __t;

  <bb 3> :
<L0>:
  return D.249148;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::construct<tree_node*, tree_node* const&> (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeE9constructIS2_JRKS2_EEEvPT_DpOT0_, funcdef_no=9359, decl_uid=222424, cgraph_uid=5991, symbol_order=6780)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node*>::construct<tree_node*, tree_node* const&> (struct new_allocator * const this, union tree_node * * __p, union tree_node * const & __args#0)
{
  void * D.234035;
  void * D.234034;
  union tree_node * D.234036;

  <bb 2> :
  _1 = std::forward<tree_node* const&> (__args#0);
  D.234036 = *_1;
  D.234034 = __p;
  D.234035 = operator new (8, D.234034);
  MEM[(union tree_node * *)D.234035] = D.234036;
  return;

}



;; Function std::vector<tree_node*>::end (_ZNSt6vectorIP9tree_nodeSaIS1_EE3endEv, funcdef_no=8592, decl_uid=184500, cgraph_uid=5224, symbol_order=6013)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<tree_node*>::end (struct vector * const this)
{
  struct iterator D.222447;
  struct iterator D.249150;

  <bb 2> :
  _1 = &this->D.184887._M_impl.D.184243._M_finish;
  __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::__normal_iterator (&D.222447, _1);
  D.249150 = D.222447;
  D.222447 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249150;

}



;; Function __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPP9tree_nodeSt6vectorIS2_SaIS2_EEEC2ERKS3_, funcdef_no=9361, decl_uid=212224, cgraph_uid=5993, symbol_order=6782)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::__normal_iterator (struct __normal_iterator * const this, union tree_node * * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<tree_node*>::_M_realloc_insert<tree_node* const&> (_ZNSt6vectorIP9tree_nodeSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_, funcdef_no=8593, decl_uid=212243, cgraph_uid=5228, symbol_order=6017)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<tree_node*>::_M_realloc_insert<tree_node* const&> (struct vector * const this, struct iterator __position, union tree_node * const & __args#0)
{
  union tree_node * * D.249157;
  const size_type D.249156;
  union tree_node * * __new_finish;
  union tree_node * * __new_start;
  const size_type __elems_before;
  union tree_node * * __old_finish;
  union tree_node * * __old_start;
  const size_type __len;
  struct iterator D.222455;

  <bb 2> :
  D.249156 = std::vector<tree_node*>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.249156;
  __old_start = this->D.184887._M_impl.D.184243._M_start;
  __old_finish = this->D.184887._M_impl.D.184243._M_finish;
  D.222455 = std::vector<tree_node*>::begin (this);
  _1 = __gnu_cxx::operator-<tree_node**, std::vector<tree_node*> > (&__position, &D.222455);
  __elems_before = (const size_type) _1;
  D.222455 = {CLOBBER};
  _2 = &this->D.184887;
  D.249157 = std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_allocate (_2, __len);
  __new_start = D.249157;
  __new_finish = __new_start;
  _3 = std::forward<tree_node* const&> (__args#0);
  _4 = __elems_before * 8;
  _5 = __new_start + _4;
  _6 = &this->D.184887._M_impl;
  std::allocator_traits<std::allocator<tree_node*> >::construct<tree_node*, tree_node* const&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.184887;
  _8 = std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<tree_node*>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 8;
  _11 = &this->D.184887;
  _12 = std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<tree_node*>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.184887;
  _23 = this->D.184887._M_impl.D.184243._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 8;
  _26 = (long unsigned int) _25;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate (_22, __old_start, _26);
  this->D.184887._M_impl.D.184243._M_start = __new_start;
  this->D.184887._M_impl.D.184243._M_finish = __new_finish;
  _27 = __len * 8;
  _28 = __new_start + _27;
  this->D.184887._M_impl.D.184243._M_end_of_storage = _28;
  return;

}



;; Function std::vector<tree_node*>::_M_check_len (_ZNKSt6vectorIP9tree_nodeSaIS1_EE12_M_check_lenEmPKc, funcdef_no=9363, decl_uid=184736, cgraph_uid=5995, symbol_order=6784)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<tree_node*>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.565;
  size_type D.249161;
  const long unsigned int D.234045;
  bool retval.563;

  <bb 2> :
  _1 = std::vector<tree_node*>::max_size (this);
  _2 = std::vector<tree_node*>::size (this);
  _3 = _1 - _2;
  __n.564_4 = __n;
  retval.563 = _3 < __n.564_4;
  if (retval.563 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<tree_node*>::size (this);
  _6 = std::vector<tree_node*>::size (this);
  D.234045 = _6;
  _7 = std::max<long unsigned int> (&D.234045, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.234045 = {CLOBBER};
  _9 = std::vector<tree_node*>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<tree_node*>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.565 = std::vector<tree_node*>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.565 = __len;

  <bb 8> :
  D.249161 = iftmp.565;

  <bb 9> :
<L6>:
  return D.249161;

}



;; Function std::vector<tree_node*>::max_size (_ZNKSt6vectorIP9tree_nodeSaIS1_EE8max_sizeEv, funcdef_no=10028, decl_uid=184522, cgraph_uid=6660, symbol_order=7453)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<tree_node*>::max_size (const struct vector * const this)
{
  size_type D.249168;

  <bb 2> :
  _1 = &this->D.184887;
  _2 = std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_1);
  D.249168 = std::vector<tree_node*>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.249168;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseIP9tree_nodeSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=10537, decl_uid=184133, cgraph_uid=7169, symbol_order=7962)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.249170;

  <bb 2> :
  D.249170 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.249170;

}



;; Function std::vector<tree_node*>::_S_max_size (_ZNSt6vectorIP9tree_nodeSaIS1_EE11_S_max_sizeERKS2_, funcdef_no=10536, decl_uid=184743, cgraph_uid=7168, symbol_order=7961)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<tree_node*>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.249172;

  <bb 2> :
  __diffmax = 1152921504606846975;
  _1 = std::allocator_traits<std::allocator<tree_node*> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.249172 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249172;

}



;; Function std::allocator_traits<std::allocator<tree_node*> >::max_size (_ZNSt16allocator_traitsISaIP9tree_nodeEE8max_sizeERKS2_, funcdef_no=10789, decl_uid=180072, cgraph_uid=7421, symbol_order=8216)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<tree_node*> >::max_size (const struct allocator_type & __a)
{
  size_type D.249175;

  <bb 2> :
  D.249175 = __gnu_cxx::new_allocator<tree_node*>::max_size (__a);

  <bb 3> :
<L0>:
  return D.249175;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::max_size (_ZNK9__gnu_cxx13new_allocatorIP9tree_nodeE8max_sizeEv, funcdef_no=10898, decl_uid=179914, cgraph_uid=7530, symbol_order=8325)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<tree_node*>::max_size (const struct new_allocator * const this)
{
  size_type D.249177;

  <bb 2> :
  D.249177 = __gnu_cxx::new_allocator<tree_node*>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.249177;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIP9tree_nodeE11_M_max_sizeEv, funcdef_no=10539, decl_uid=179933, cgraph_uid=7170, symbol_order=7963)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<tree_node*>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.249179;

  <bb 2> :
  D.249179 = 1152921504606846975;

  <bb 3> :
<L0>:
  return D.249179;

}



;; Function std::vector<tree_node*>::begin (_ZNSt6vectorIP9tree_nodeSaIS1_EE5beginEv, funcdef_no=9364, decl_uid=184496, cgraph_uid=5996, symbol_order=6785)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<tree_node*>::begin (struct vector * const this)
{
  struct iterator D.234047;
  struct iterator D.249181;

  <bb 2> :
  _1 = &this->D.184887._M_impl.D.184243._M_start;
  __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::__normal_iterator (&D.234047, _1);
  D.249181 = D.234047;
  D.234047 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249181;

}



;; Function __gnu_cxx::operator-<tree_node**, std::vector<tree_node*> > (_ZN9__gnu_cxxmiIPP9tree_nodeSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_, funcdef_no=9365, decl_uid=222456, cgraph_uid=5997, symbol_order=6786)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<tree_node**, std::vector<tree_node*> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.249184;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.249184 = _5 /[ex] 8;

  <bb 3> :
<L0>:
  return D.249184;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_allocate (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE11_M_allocateEm, funcdef_no=9366, decl_uid=184247, cgraph_uid=5998, symbol_order=6787)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
union tree_node * * std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  union tree_node * * D.249192;
  union tree_node * * iftmp.566;
  union tree_node * * D.249186;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.249192 = std::allocator_traits<std::allocator<tree_node*> >::allocate (_1, __n);
  iftmp.566 = D.249192;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.566 = 0B;

  <bb 5> :
  D.249186 = iftmp.566;

  <bb 6> :
<L3>:
  return D.249186;

}



;; Function std::allocator_traits<std::allocator<tree_node*> >::allocate (_ZNSt16allocator_traitsISaIP9tree_nodeEE8allocateERS2_m, funcdef_no=10029, decl_uid=180052, cgraph_uid=6661, symbol_order=7454)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
union tree_node * * std::allocator_traits<std::allocator<tree_node*> >::allocate (struct allocator_type & __a, size_type __n)
{
  union tree_node * * D.249195;
  union tree_node * * D.249193;

  <bb 2> :
  D.249195 = __gnu_cxx::new_allocator<tree_node*>::allocate (__a, __n, 0B);
  D.249193 = D.249195;

  <bb 3> :
<L0>:
  return D.249193;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::allocate (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeE8allocateEmPKv, funcdef_no=10538, decl_uid=179906, cgraph_uid=7171, symbol_order=7964)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
union tree_node * * __gnu_cxx::new_allocator<tree_node*>::allocate (struct new_allocator * const this, size_type __n, const void * D.243327)
{
  union tree_node * * D.249206;
  union tree_node * * D.249205;
  align_val_t __al;
  union tree_node * * D.249203;
  bool retval.567;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<tree_node*>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.567 = _4 != 0;
  if (retval.567 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 2305843009213693951)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 8;
  D.249206 = operator new (_6);
  D.249203 = D.249206;

  <bb 7> :
<L6>:
  return D.249203;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=9369, decl_uid=184131, cgraph_uid=6001, symbol_order=6790)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.249207;

  <bb 2> :
  D.249207 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.249207;

}



;; Function __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPP9tree_nodeSt6vectorIS2_SaIS2_EEE4baseEv, funcdef_no=9368, decl_uid=212211, cgraph_uid=6000, symbol_order=6789)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * const & __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (const struct __normal_iterator * const this)
{
  union tree_node * * const & D.249209;

  <bb 2> :
  D.249209 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.249209;

}



;; Function std::vector<tree_node*>::_S_relocate (_ZNSt6vectorIP9tree_nodeSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_, funcdef_no=9367, decl_uid=184395, cgraph_uid=5999, symbol_order=6788)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * std::vector<tree_node*>::_S_relocate (union tree_node * * __first, union tree_node * * __last, union tree_node * * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.249212;
  union tree_node * * D.249211;

  <bb 2> :
  D.249211 = std::vector<tree_node*>::_S_do_relocate (__first, __last, __result, __alloc, D.249212);

  <bb 3> :
<L0>:
  return D.249211;

}



;; Function std::vector<tree_node*>::_S_do_relocate (_ZNSt6vectorIP9tree_nodeSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE, funcdef_no=10030, decl_uid=184383, cgraph_uid=6662, symbol_order=7455)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * std::vector<tree_node*>::_S_do_relocate (union tree_node * * __first, union tree_node * * __last, union tree_node * * __result, struct _Tp_alloc_type & __alloc, struct true_type D.239945)
{
  union tree_node * * D.249214;

  <bb 2> :
  D.249214 = std::__relocate_a<tree_node**, tree_node**, std::allocator<tree_node*> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.249214;

}



;; Function std::__relocate_a<tree_node**, tree_node**, std::allocator<tree_node*> > (_ZSt12__relocate_aIPP9tree_nodeS2_SaIS1_EET0_T_S5_S4_RT1_, funcdef_no=10540, decl_uid=222620, cgraph_uid=7172, symbol_order=7965)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * std::__relocate_a<tree_node**, tree_node**, std::allocator<tree_node*> > (union tree_node * * __first, union tree_node * * __last, union tree_node * * __result, struct allocator & __alloc)
{
  union tree_node * * D.249216;

  <bb 2> :
  _1 = std::__niter_base<tree_node**> (__result);
  _2 = std::__niter_base<tree_node**> (__last);
  _3 = std::__niter_base<tree_node**> (__first);
  D.249216 = std::__relocate_a_1<tree_node*, tree_node*> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.249216;

}



;; Function std::__niter_base<tree_node**> (_ZSt12__niter_baseIPP9tree_nodeET_S3_, funcdef_no=10790, decl_uid=222626, cgraph_uid=7422, symbol_order=8217)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * std::__niter_base<tree_node**> (union tree_node * * __it)
{
  union tree_node * * D.249218;

  <bb 2> :
  D.249218 = __it;

  <bb 3> :
<L0>:
  return D.249218;

}



;; Function std::__relocate_a_1<tree_node*, tree_node*> (_ZSt14__relocate_a_1IP9tree_nodeS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E, funcdef_no=10791, decl_uid=222794, cgraph_uid=7423, symbol_order=8218)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
union tree_node * * std::__relocate_a_1<tree_node*, tree_node*> (union tree_node * * __first, union tree_node * * __last, union tree_node * * __result, struct allocator & D.244482)
{
  ptrdiff_t __count;
  union tree_node * * D.249223;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 8;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.568_2 = (long unsigned int) __count;
  _3 = __count.568_2 * 8;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.569_4 = (long unsigned int) __count;
  _5 = __count.569_4 * 8;
  D.249223 = __result + _5;

  <bb 5> :
<L3>:
  return D.249223;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE13_M_deallocateEPS1_m, funcdef_no=8363, decl_uid=184250, cgraph_uid=4995, symbol_order=5784)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate (struct _Vector_base * const this, union tree_node * * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<tree_node*> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<tree_node*> >::deallocate (_ZNSt16allocator_traitsISaIP9tree_nodeEE10deallocateERS2_PS1_m, funcdef_no=9156, decl_uid=180059, cgraph_uid=5788, symbol_order=6577)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<tree_node*> >::deallocate (struct allocator_type & __a, union tree_node * * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node*>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::deallocate (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeE10deallocateEPS2_m, funcdef_no=9876, decl_uid=179910, cgraph_uid=6508, symbol_order=7301)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<tree_node*>::deallocate (struct new_allocator * const this, union tree_node * * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 8;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<function_path>::operator[] (_ZNSt6vectorI13function_pathSaIS0_EEixEm, funcdef_no=7695, decl_uid=174210, cgraph_uid=4327, symbol_order=5112)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<function_path>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.249231;

  <bb 2> :
  _1 = this->D.174557._M_impl.D.173902._M_start;
  _2 = __n * 24;
  D.249231 = _1 + _2;

  <bb 3> :
<L0>:
  return D.249231;

}



;; Function std::vector<tree_node*>::pop_back (_ZNSt6vectorIP9tree_nodeSaIS1_EE8pop_backEv, funcdef_no=7703, decl_uid=184577, cgraph_uid=4335, symbol_order=5120)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<tree_node*>::pop_back (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.184887._M_impl.D.184243._M_finish;
  _2 = _1 + 18446744073709551608;
  this->D.184887._M_impl.D.184243._M_finish = _2;
  _3 = this->D.184887._M_impl.D.184243._M_finish;
  _4 = &this->D.184887._M_impl;
  std::allocator_traits<std::allocator<tree_node*> >::destroy<tree_node*> (_4, _3);
  return;

}



;; Function std::allocator_traits<std::allocator<tree_node*> >::destroy<tree_node*> (_ZNSt16allocator_traitsISaIP9tree_nodeEE7destroyIS1_EEvRS2_PT_, funcdef_no=8597, decl_uid=212248, cgraph_uid=5229, symbol_order=6018)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<tree_node*> >::destroy<tree_node*> (struct allocator_type & __a, union tree_node * * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node*>::destroy<tree_node*> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::destroy<tree_node*> (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeE7destroyIS2_EEvPT_, funcdef_no=9371, decl_uid=222813, cgraph_uid=6003, symbol_order=6792)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node*>::destroy<tree_node*> (struct new_allocator * const this, union tree_node * * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function std::vector<function_path>::size (_ZNKSt6vectorI13function_pathSaIS0_EE4sizeEv, funcdef_no=7659, decl_uid=174190, cgraph_uid=4291, symbol_order=5076)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<function_path>::size (const struct vector * const this)
{
  size_type D.249233;

  <bb 2> :
  _1 = this->D.174557._M_impl.D.173902._M_finish;
  _2 = this->D.174557._M_impl.D.173902._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.249233 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.249233;

}



;; Function std::vector<free_type>::~vector (_ZNSt6vectorI9free_typeSaIS0_EED2Ev, funcdef_no=7665, decl_uid=176655, cgraph_uid=4297, symbol_order=5082)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<free_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.176658;
  _2 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.176658._M_impl.D.176003._M_finish;
  _4 = this->D.176658._M_impl.D.176003._M_start;
  std::_Destroy<free_type*, free_type> (_4, _3, _2);
  _5 = &this->D.176658;
  std::_Vector_base<free_type, std::allocator<free_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<free_type*, free_type> (_ZSt8_DestroyIP9free_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8541, decl_uid=211482, cgraph_uid=5173, symbol_order=5962)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<free_type*, free_type> (struct free_type * __first, struct free_type * __last, struct allocator & D.222084)
{
  <bb 2> :
  std::_Destroy<free_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<free_type*> (_ZSt8_DestroyIP9free_typeEvT_S2_, funcdef_no=9313, decl_uid=222086, cgraph_uid=5945, symbol_order=6734)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<free_type*> (struct free_type * __first, struct free_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<free_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<free_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP9free_typeEEvT_S4_, funcdef_no=9989, decl_uid=233361, cgraph_uid=6621, symbol_order=7414)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<free_type*> (struct free_type * D.239777, struct free_type * D.239778)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function function_free_array::~function_free_array (_ZN19function_free_arrayD2Ev, funcdef_no=6327, decl_uid=192751, cgraph_uid=3302, symbol_order=4078)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_free_array::~function_free_array (struct function_free_array * const this)
{
  <bb 2> :
  _1 = &this->free_type_array;
  std::vector<free_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<pthread_detched_type>::~vector (_ZNSt6vectorI20pthread_detched_typeSaIS0_EED2Ev, funcdef_no=7682, decl_uid=177700, cgraph_uid=4314, symbol_order=5099)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_detched_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.177703;
  _2 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.177703._M_impl.D.177048._M_finish;
  _4 = this->D.177703._M_impl.D.177048._M_start;
  std::_Destroy<pthread_detched_type*, pthread_detched_type> (_4, _3, _2);
  _5 = &this->D.177703;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<pthread_detched_type*, pthread_detched_type> (_ZSt8_DestroyIP20pthread_detched_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8566, decl_uid=211665, cgraph_uid=5198, symbol_order=5987)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<pthread_detched_type*, pthread_detched_type> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct allocator & D.222208)
{
  <bb 2> :
  std::_Destroy<pthread_detched_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<pthread_detched_type*> (_ZSt8_DestroyIP20pthread_detched_typeEvT_S2_, funcdef_no=9332, decl_uid=222210, cgraph_uid=5964, symbol_order=6753)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<pthread_detched_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<pthread_detched_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP20pthread_detched_typeEEvT_S4_, funcdef_no=10009, decl_uid=233601, cgraph_uid=6641, symbol_order=7434)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<pthread_detched_type*> (struct pthread_detched_type * D.239850, struct pthread_detched_type * D.239851)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function function_pthread_detched_array::~function_pthread_detched_array (_ZN30function_pthread_detched_arrayD2Ev, funcdef_no=6336, decl_uid=193623, cgraph_uid=3311, symbol_order=4087)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_detched_array::~function_pthread_detched_array (struct function_pthread_detched_array * const this)
{
  <bb 2> :
  _1 = &this->pthread_detched_array;
  std::vector<pthread_detched_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<pthread_exit_type>::~vector (_ZNSt6vectorI17pthread_exit_typeSaIS0_EED2Ev, funcdef_no=7691, decl_uid=178745, cgraph_uid=4323, symbol_order=5108)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_exit_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.178748;
  _2 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.178748._M_impl.D.178093._M_finish;
  _4 = this->D.178748._M_impl.D.178093._M_start;
  std::_Destroy<pthread_exit_type*, pthread_exit_type> (_4, _3, _2);
  _5 = &this->D.178748;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<pthread_exit_type*, pthread_exit_type> (_ZSt8_DestroyIP17pthread_exit_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8579, decl_uid=211805, cgraph_uid=5211, symbol_order=6000)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<pthread_exit_type*, pthread_exit_type> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct allocator & D.222283)
{
  <bb 2> :
  std::_Destroy<pthread_exit_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<pthread_exit_type*> (_ZSt8_DestroyIP17pthread_exit_typeEvT_S2_, funcdef_no=9345, decl_uid=222285, cgraph_uid=5977, symbol_order=6766)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<pthread_exit_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<pthread_exit_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP17pthread_exit_typeEEvT_S4_, funcdef_no=10017, decl_uid=233770, cgraph_uid=6649, symbol_order=7442)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<pthread_exit_type*> (struct pthread_exit_type * D.239886, struct pthread_exit_type * D.239887)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function function_pthread_exit_array::~function_pthread_exit_array (_ZN27function_pthread_exit_arrayD2Ev, funcdef_no=6342, decl_uid=194099, cgraph_uid=3317, symbol_order=4093)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_exit_array::~function_pthread_exit_array (struct function_pthread_exit_array * const this)
{
  <bb 2> :
  _1 = &this->pthread_exit_array;
  std::vector<pthread_exit_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<function_path>::~vector (_ZNSt6vectorI13function_pathSaIS0_EED2Ev, funcdef_no=7657, decl_uid=174554, cgraph_uid=4289, symbol_order=5074)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<function_path>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.174557;
  _2 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_1);
  _3 = this->D.174557._M_impl.D.173902._M_finish;
  _4 = this->D.174557._M_impl.D.173902._M_start;
  std::_Destroy<function_path*, function_path> (_4, _3, _2);
  _5 = &this->D.174557;
  std::_Vector_base<function_path, std::allocator<function_path> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<function_path*, function_path> (_ZSt8_DestroyIP13function_pathS0_EvT_S2_RSaIT0_E, funcdef_no=8528, decl_uid=211344, cgraph_uid=5160, symbol_order=5949)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<function_path*, function_path> (struct function_path * __first, struct function_path * __last, struct allocator & D.222009)
{
  <bb 2> :
  std::_Destroy<function_path*> (__first, __last);
  return;

}



;; Function std::_Destroy<function_path*> (_ZSt8_DestroyIP13function_pathEvT_S2_, funcdef_no=9300, decl_uid=222011, cgraph_uid=5932, symbol_order=6721)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<function_path*> (struct function_path * __first, struct function_path * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<function_path*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<function_path*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP13function_pathEEvT_S4_, funcdef_no=9981, decl_uid=233192, cgraph_uid=6613, symbol_order=7406)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<function_path*> (struct function_path * D.239722, struct function_path * D.239723)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function function_path_array::~function_path_array (_ZN19function_path_arrayD2Ev, funcdef_no=6321, decl_uid=192269, cgraph_uid=3296, symbol_order=4072)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_path_array::~function_path_array (struct function_path_array * const this)
{
  <bb 2> :
  _1 = &this->function_path_array;
  std::vector<function_path>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function tracefree_fucntion (_Z18tracefree_fucntionP11cgraph_nodeP3ptbP12gimple_array, funcdef_no=6348, decl_uid=187008, cgraph_uid=3324, symbol_order=4100)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 4 5 3
;; 2 succs { 7 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 1 }
void tracefree_fucntion (struct cgraph_node * node, struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct cgraph_node * D.249240;
  const char * D.249239;
  struct function * D.249238;
  struct cgraph_node * D.249237;
  availability avail;
  int fucntion_level;
  struct cgraph_edge * e;

  <bb 2> :
  symtab.570_1 = symtab;
  D.249237 = symbol_table::first_defined_function (symtab.570_1);
  node = D.249237;
  goto <bb 7>; [INV]

  <bb 3> :
  fucntion_level = 0;
  D.249238 = cgraph_node::get_fun (node);
  _2 = D.249238;
  push_cfun (_2);
  cfun.571_3 = cfun;
  _4 = cfun.571_3->decl;
  D.249239 = get_name (_4);
  _5 = D.249239;
  stderr.572_6 = stderr;
  fprintf (stderr.572_6, "=======node_fun:%s=========\n", _5);
  cfun.573_7 = cfun;
  if (cfun.573_7 == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  pop_cfun ();
  // predicted unlikely by continue predictor.
  goto <bb 6>; [INV]

  <bb 5> :
  stderr.574_8 = stderr;
  __builtin_fwrite ("fucntion collect path \n", 1, 23, stderr.574_8);
  cfun.575_9 = cfun;
  _10 = &cfun.575_9->decl;
  std::vector<tree_node*>::push_back (&pathStack, _10);
  cfun.576_11 = cfun;
  _12 = cfun.576_11->decl;
  walk_function_path (_12, fucntion_level, ptable, user_tmp);
  std::vector<tree_node*>::pop_back (&pathStack);
  pop_cfun ();

  <bb 6> :
  symtab.577_13 = symtab;
  D.249240 = symbol_table::next_defined_function (symtab.577_13, node);
  node = D.249240;

  <bb 7> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  stderr.578_14 = stderr;
  __builtin_fwrite ("fucntion collect path finsh\n", 1, 28, stderr.578_14);
  return;

}



;; Function walk_function_path (_Z18walk_function_pathP9tree_nodeiP3ptbP12gimple_array, funcdef_no=6349, decl_uid=187004, cgraph_uid=3328, symbol_order=4104)

Merging blocks 4 and 70
Removing basic block 18
Removing basic block 19
Removing basic block 40
Removing basic block 55
Removing basic block 67
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76
;;
;; Loop 1
;;  header 60, latch 59
;;  depth 1, outer 0
;;  nodes: 60 59 28 58 57 56 55 31 54 53 41 52 42 51 48 47 43 46 44 45 50 49 40 37 39 38 36 35 34 33 32 30 29 25 27 21 26 22 20 19 24 23
;;
;; Loop 3
;;  header 53, latch 52
;;  depth 2, outer 1
;;  nodes: 53 52 42 51 48 47 43 46 44 45 50 49
;;
;; Loop 4
;;  header 47, latch 46
;;  depth 3, outer 3
;;  nodes: 47 46 44 45
;;
;; Loop 2
;;  header 27, latch 26
;;  depth 2, outer 1
;;  nodes: 27 26 22
;; 2 succs { 76 3 }
;; 3 succs { 4 5 }
;; 4 succs { 65 }
;; 5 succs { 76 6 }
;; 6 succs { 76 7 }
;; 7 succs { 75 8 }
;; 8 succs { 72 9 }
;; 9 succs { 72 10 }
;; 10 succs { 72 11 }
;; 11 succs { 12 18 }
;; 12 succs { 72 13 }
;; 13 succs { 72 14 }
;; 14 succs { 72 15 }
;; 15 succs { 72 16 }
;; 16 succs { 17 18 }
;; 17 succs { 72 18 }
;; 18 succs { 60 }
;; 19 succs { 72 20 }
;; 20 succs { 72 21 }
;; 21 succs { 27 }
;; 22 succs { 23 26 }
;; 23 succs { 72 24 }
;; 24 succs { 72 25 }
;; 25 succs { 28 }
;; 26 succs { 27 }
;; 27 succs { 22 28 }
;; 28 succs { 29 59 }
;; 29 succs { 72 30 }
;; 30 succs { 72 31 }
;; 31 succs { 32 55 }
;; 32 succs { 71 33 }
;; 33 succs { 71 34 }
;; 34 succs { 70 35 }
;; 35 succs { 68 36 }
;; 36 succs { 37 38 }
;; 37 succs { 68 40 }
;; 38 succs { 68 39 }
;; 39 succs { 68 40 }
;; 40 succs { 68 41 }
;; 41 succs { 53 }
;; 42 succs { 43 52 }
;; 43 succs { 47 }
;; 44 succs { 45 46 }
;; 45 succs { 46 }
;; 46 succs { 47 }
;; 47 succs { 44 48 }
;; 48 succs { 49 52 }
;; 49 succs { 66 50 }
;; 50 succs { 66 51 }
;; 51 succs { 52 }
;; 52 succs { 53 }
;; 53 succs { 42 54 }
;; 54 succs { 55 }
;; 55 succs { 72 56 }
;; 56 succs { 72 57 }
;; 57 succs { 72 58 }
;; 58 succs { 59 }
;; 59 succs { 60 }
;; 60 succs { 19 61 }
;; 61 succs { 62 63 }
;; 62 succs { 72 64 }
;; 63 succs { 72 64 }
;; 64 succs { 65 }
;; 65 succs { 1 }
;; 66 succs { 67 }
;; 67 succs { 68 }
;; 68 succs { 69 }
;; 69 succs { 70 }
;; 70 succs { 71 }
;; 71 succs { 72 }
;; 72 succs { 73 }
;; 73 succs { 74 }
;; 74 succs { 75 }
;; 75 succs { 76 }
;; 76 succs { }
void walk_function_path (union tree_node * function_tree, int fucntion_level, struct ptb * ptable, struct gimple_array * user_tmp)
{
  const char * D.249301;
  struct function_return_array * D.249294;
  struct function_return_array * D.249293;
  struct function_return_array * D.249292;
  struct function_return_array * D.249291;
  const char * D.249290;
  const char * D.249289;
  struct function_return_array * D.249288;
  struct function_return_array * D.249287;
  const char * D.249286;
  struct function_path_array * D.249285;
  struct function_path_array * D.249284;
  struct return_type ret_type;
  int k2;
  int find_diff;
  int k;
  struct vector funcalleeRetTypearray;
  union tree_node * getFucntionDecl;
  struct vector ret_type_find_fun_array;
  struct function_return_array find_fun_array;
  struct function_return_array calleeFunArray;
  int o;
  int i;
  int find_thread;
  int find;
  struct vector callerRetTypearray;
  struct function_return_array callerFunArray;
  struct vector function_path_array;
  struct function_path_array fun_array;
  bool retval.611;
  bool retval.609;
  bool retval.604;
  bool retval.603;
  bool retval.601;
  bool retval.598;
  bool retval.594;
  bool retval.593;
  bool retval.591;
  bool retval.584;
  bool retval.579;

  <bb 2> :
  function_path_collect.580_1 = function_path_collect;
  D.249284 = hash_map<tree_node*, function_path_array>::get (function_path_collect.580_1, &function_tree);

  <bb 3> :
  _2 = D.249284;
  retval.579 = _2 == 0B;
  if (retval.579 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  goto <bb 65>; [INV]

  <bb 5> :
  function_path_collect.581_3 = function_path_collect;
  D.249285 = hash_map<tree_node*, function_path_array>::get (function_path_collect.581_3, &function_tree);

  <bb 6> :
  _4 = D.249285;
  function_path_array::function_path_array (&fun_array, _4);

  <bb 7> :
  std::vector<function_path>::vector (&function_path_array, &fun_array.function_path_array);

  <bb 8> :
  function_return_array::function_return_array (&callerFunArray);
  std::vector<return_type>::vector (&callerRetTypearray);
  _5 = std::vector<function_path>::size (&function_path_array);
  function_tree.582_6 = function_tree;
  D.249286 = get_name (function_tree.582_6);

  <bb 9> :
  _7 = D.249286;
  stderr.583_8 = stderr;
  fprintf (stderr.583_8, "\x1b[40;44m =======print_function_path %s  function_call count: %d level :%d========  \x1b[0m\n", _7, _5, fucntion_level);

  <bb 10> :
  function_return_collect.585_9 = function_return_collect;
  D.249287 = hash_map<tree_node*, function_return_array>::get (function_return_collect.585_9, &function_tree);

  <bb 11> :
  _10 = D.249287;
  retval.584 = _10 != 0B;
  if (retval.584 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 12> :
  function_return_collect.586_11 = function_return_collect;
  D.249288 = hash_map<tree_node*, function_return_array>::get (function_return_collect.586_11, &function_tree);

  <bb 13> :
  _12 = D.249288;
  function_return_array::operator= (&callerFunArray, _12);

  <bb 14> :
  std::vector<return_type>::operator= (&callerRetTypearray, &callerFunArray.return_type_array);

  <bb 15> :
  _13 = callerFunArray.return_type_num;
  stderr.587_14 = stderr;
  fprintf (stderr.587_14, "\x1b[40;44m =======print_function_type %d  ========  \x1b[0m\n", _13);

  <bb 16> :
  _15 = callerFunArray.pthread_type_num;
  _16 = (unsigned int) _15;
  FUNCITON_THREAD.588_17 = FUNCITON_THREAD;
  if (_16 == FUNCITON_THREAD.588_17)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  stderr.589_18 = stderr;
  __builtin_fwrite ("\x1b[40;44m =======print_pthread_type_is thread_fucntion  ========  \x1b[0m\n", 1, 70, stderr.589_18);

  <bb 18> :
  fucntion_level = fucntion_level + 1;
  find = 0;
  find_thread = 0;
  i = 0;
  goto <bb 60>; [INV]

  <bb 19> :
  find = 0;
  _19 = (long unsigned int) i;
  _20 = std::vector<function_path>::operator[] (&function_path_array, _19);
  _21 = _20->next;
  D.249289 = get_name (_21);

  <bb 20> :
  _22 = D.249289;
  stderr.590_23 = stderr;
  fprintf (stderr.590_23, "\x1b[40;42m =======pre add _ fucntion:%s========= \x1b[0m\n", _22);

  <bb 21> :
  o = 0;
  goto <bb 27>; [INV]

  <bb 22> :
  _24 = (long unsigned int) o;
  _25 = std::vector<tree_node*>::operator[] (&pathStack, _24);
  _26 = *_25;
  _27 = (long unsigned int) i;
  _28 = std::vector<function_path>::operator[] (&function_path_array, _27);
  _29 = _28->next;
  retval.591 = _26 == _29;
  if (retval.591 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 23> :
  find = 1;
  _30 = (long unsigned int) o;
  _31 = std::vector<tree_node*>::operator[] (&pathStack, _30);
  _32 = *_31;
  D.249290 = get_name (_32);

  <bb 24> :
  _33 = D.249290;
  stderr.592_34 = stderr;
  fprintf (stderr.592_34, "\x1b[40;41m =======recursive_fun:%s========= \x1b[0m\n", _33);

  <bb 25> :
  goto <bb 28>; [INV]

  <bb 26> :
  o = o + 1;

  <bb 27> :
  _35 = (long unsigned int) o;
  _36 = std::vector<tree_node*>::size (&pathStack);
  retval.593 = _35 < _36;
  if (retval.593 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 28> :
  if (find == 0)
    goto <bb 29>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 29> :
  _37 = (long unsigned int) i;
  _38 = std::vector<function_path>::operator[] (&function_path_array, _37);
  _39 = &_38->next;
  std::vector<tree_node*>::push_back (&pathStack, _39);

  <bb 30> :
  function_return_collect.595_40 = function_return_collect;
  _41 = (long unsigned int) i;
  _42 = std::vector<function_path>::operator[] (&function_path_array, _41);
  _43 = &_42->next;
  D.249291 = hash_map<tree_node*, function_return_array>::get (function_return_collect.595_40, _43);

  <bb 31> :
  _44 = D.249291;
  retval.594 = _44 != 0B;
  if (retval.594 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 55>; [INV]

  <bb 32> :
  function_return_collect.596_45 = function_return_collect;
  _46 = (long unsigned int) i;
  _47 = std::vector<function_path>::operator[] (&function_path_array, _46);
  _48 = &_47->next;
  D.249292 = hash_map<tree_node*, function_return_array>::get (function_return_collect.596_45, _48);

  <bb 33> :
  _49 = D.249292;
  function_return_array::function_return_array (&calleeFunArray, _49);

  <bb 34> :
  _50 = calleeFunArray.return_type_num;
  stderr.597_51 = stderr;
  fprintf (stderr.597_51, "\x1b[40;44m =======print_function_type %d  ========  \x1b[0m\n", _50);

  <bb 35> :
  function_return_array::function_return_array (&find_fun_array);
  std::vector<return_type>::vector (&ret_type_find_fun_array);
  _52 = (long unsigned int) i;
  _53 = std::vector<function_path>::operator[] (&function_path_array, _52);
  _54 = _53->next;
  getFucntionDecl = _54;
  function_return_collect.599_55 = function_return_collect;
  D.249293 = hash_map<tree_node*, function_return_array>::get (function_return_collect.599_55, &getFucntionDecl);

  <bb 36> :
  _56 = D.249293;
  retval.598 = _56 == 0B;
  if (retval.598 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 37> :
  std::vector<return_type>::operator= (&find_fun_array.return_type_array, &ret_type_find_fun_array);
  goto <bb 40>; [INV]

  <bb 38> :
  function_return_collect.600_57 = function_return_collect;
  D.249294 = hash_map<tree_node*, function_return_array>::get (function_return_collect.600_57, &getFucntionDecl);

  <bb 39> :
  _58 = D.249294;
  function_return_array::operator= (&find_fun_array, _58);

  <bb 40> :
  std::vector<return_type>::vector (&funcalleeRetTypearray, &find_fun_array.return_type_array);

  <bb 41> :
  k = 0;
  goto <bb 53>; [INV]

  <bb 42> :
  _59 = (long unsigned int) k;
  _60 = std::vector<return_type>::operator[] (&callerRetTypearray, _59);
  _61 = _60->return_type_stmt_num;
  _62 = (unsigned int) _61;
  FUNCITON_THREAD.602_63 = FUNCITON_THREAD;
  retval.601 = _62 == FUNCITON_THREAD.602_63;
  if (retval.601 != 0)
    goto <bb 43>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 43> :
  find_diff = 0;
  k2 = 0;
  goto <bb 47>; [INV]

  <bb 44> :
  _64 = (long unsigned int) k;
  _65 = std::vector<return_type>::operator[] (&callerRetTypearray, _64);
  _66 = _65->return_tree;
  _67 = (long unsigned int) k2;
  _68 = std::vector<return_type>::operator[] (&funcalleeRetTypearray, _67);
  _69 = _68->return_tree;
  retval.603 = _66 == _69;
  if (retval.603 != 0)
    goto <bb 45>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 45> :
  find_diff = 1;

  <bb 46> :
  k2 = k2 + 1;

  <bb 47> :
  _70 = (long unsigned int) k2;
  _71 = std::vector<return_type>::size (&funcalleeRetTypearray);
  retval.604 = _70 < _71;
  if (retval.604 != 0)
    goto <bb 44>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 48> :
  if (find_diff == 0)
    goto <bb 49>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 49> :
  return_type::return_type (&ret_type);
  _72 = (long unsigned int) k;
  _73 = std::vector<return_type>::operator[] (&callerRetTypearray, _72);
  _74 = _73->stmt;
  ret_type.stmt = _74;
  _75 = (long unsigned int) k;
  _76 = std::vector<return_type>::operator[] (&callerRetTypearray, _75);
  _77 = _76->return_tree;
  ret_type.return_tree = _77;
  FUNCITON_THREAD.605_78 = FUNCITON_THREAD;
  FUNCITON_THREAD.606_79 = (int) FUNCITON_THREAD.605_78;
  ret_type.return_type_stmt_num = FUNCITON_THREAD.606_79;
  std::vector<return_type>::push_back (&find_fun_array.return_type_array, &ret_type);

  <bb 50> :
  function_return_collect.607_80 = function_return_collect;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.607_80, &getFucntionDecl, &find_fun_array);

  <bb 51> :
  FUNCITON_THREAD.608_81 = FUNCITON_THREAD;
  find_thread = (int) FUNCITON_THREAD.608_81;
  ret_type = {CLOBBER};

  <bb 52> :
  k = k + 1;

  <bb 53> :
  _82 = (long unsigned int) k;
  _83 = std::vector<return_type>::size (&callerRetTypearray);
  retval.609 = _82 < _83;
  if (retval.609 != 0)
    goto <bb 42>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 54> :
  std::vector<return_type>::~vector (&funcalleeRetTypearray);
  std::vector<return_type>::~vector (&ret_type_find_fun_array);
  function_return_array::~function_return_array (&find_fun_array);
  function_return_array::~function_return_array (&calleeFunArray);
  calleeFunArray = {CLOBBER};
  find_fun_array = {CLOBBER};
  ret_type_find_fun_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};
  funcalleeRetTypearray = {CLOBBER};

  <bb 55> :
  _84 = (long unsigned int) i;
  _85 = std::vector<function_path>::operator[] (&function_path_array, _84);
  _86 = _85->next;
  walk_function_path (_86, fucntion_level, ptable, user_tmp);

  <bb 56> :
  _87 = std::vector<tree_node*>::back (&pathStack);
  _88 = *_87;
  D.249301 = get_name (_88);

  <bb 57> :
  _89 = D.249301;
  stderr.610_90 = stderr;
  fprintf (stderr.610_90, "\x1b[40;33m =======POP node_fun stack:%s========= \x1b[0m\n", _89);

  <bb 58> :
  std::vector<tree_node*>::pop_back (&pathStack);

  <bb 59> :
  i = i + 1;

  <bb 60> :
  _91 = (long unsigned int) i;
  _92 = std::vector<function_path>::size (&function_path_array);
  retval.611 = _91 < _92;
  if (retval.611 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 61>; [INV]

  <bb 61> :
  find_thread.612_93 = (unsigned int) find_thread;
  FUNCITON_THREAD.613_94 = FUNCITON_THREAD;
  if (find_thread.612_93 == FUNCITON_THREAD.613_94)
    goto <bb 62>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 62> :
  FUNCITON_THREAD.614_95 = FUNCITON_THREAD;
  FUNCITON_THREAD.615_96 = (int) FUNCITON_THREAD.614_95;
  function_tree.616_97 = function_tree;
  checkPointerConstraint (function_tree.616_97, ptable, user_tmp, 0B, FUNCITON_THREAD.615_96);
  goto <bb 64>; [INV]

  <bb 63> :
  function_tree.617_98 = function_tree;
  checkPointerConstraint (function_tree.617_98, ptable, user_tmp, 0B, 0);

  <bb 64> :
  std::vector<return_type>::~vector (&callerRetTypearray);
  function_return_array::~function_return_array (&callerFunArray);
  std::vector<function_path>::~vector (&function_path_array);
  function_path_array::~function_path_array (&fun_array);
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 65> :
<L45>:
  return;

  <bb 66> :
<L46>:
  ret_type = {CLOBBER};
  resx 11

  <bb 67> :
<L47>:
  std::vector<return_type>::~vector (&funcalleeRetTypearray);
  resx 10

  <bb 68> :
<L48>:
  std::vector<return_type>::~vector (&ret_type_find_fun_array);
  resx 9

  <bb 69> :
<L49>:
  function_return_array::~function_return_array (&find_fun_array);
  resx 8

  <bb 70> :
<L50>:
  function_return_array::~function_return_array (&calleeFunArray);
  resx 7

  <bb 71> :
<L51>:
  calleeFunArray = {CLOBBER};
  find_fun_array = {CLOBBER};
  ret_type_find_fun_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};
  funcalleeRetTypearray = {CLOBBER};
  resx 6

  <bb 72> :
<L52>:
  std::vector<return_type>::~vector (&callerRetTypearray);
  resx 5

  <bb 73> :
<L53>:
  function_return_array::~function_return_array (&callerFunArray);
  resx 4

  <bb 74> :
<L54>:
  std::vector<function_path>::~vector (&function_path_array);
  resx 3

  <bb 75> :
<L55>:
  function_path_array::~function_path_array (&fun_array);
  resx 2

  <bb 76> :
<L56>:
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 1

}



;; Function return_type::return_type (_ZN11return_typeC2Ev, funcdef_no=6351, decl_uid=194269, cgraph_uid=3326, symbol_order=4102)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void return_type::return_type (struct return_type * const this)
{
  <bb 2> :
  this->return_type_stmt_num = 0;
  return;

}



;; Function std::vector<return_type>::push_back (_ZNSt6vectorI11return_typeSaIS0_EE9push_backERKS0_, funcdef_no=7704, decl_uid=173188, cgraph_uid=4337, symbol_order=5122)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<return_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.249312;

  <bb 2> :
  _1 = this->D.173508._M_impl.D.172853._M_finish;
  _2 = this->D.173508._M_impl.D.172853._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.173508._M_impl.D.172853._M_finish;
  _4 = &this->D.173508._M_impl;
  std::allocator_traits<std::allocator<return_type> >::construct<return_type, const return_type&> (_4, _3, __x);
  _5 = this->D.173508._M_impl.D.172853._M_finish;
  _6 = _5 + 24;
  this->D.173508._M_impl.D.172853._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.249312 = std::vector<return_type>::end (this);
  std::vector<return_type>::_M_realloc_insert<const return_type&> (this, D.249312, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<return_type> >::construct<return_type, const return_type&> (_ZNSt16allocator_traitsISaI11return_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8598, decl_uid=212384, cgraph_uid=5230, symbol_order=6019)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<return_type> >::construct<return_type, const return_type&> (struct allocator_type & __a, struct return_type * __p, const struct return_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const return_type&> (__args#0);
  __gnu_cxx::new_allocator<return_type>::construct<return_type, const return_type&> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::construct<return_type, const return_type&> (_ZN9__gnu_cxx13new_allocatorI11return_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9373, decl_uid=222829, cgraph_uid=6005, symbol_order=6794)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::construct<return_type, const return_type&> (struct new_allocator * const this, struct return_type * __p, const struct return_type & __args#0)
{
  void * D.234080;
  void * D.234079;
  const struct return_type * D.234081;

  <bb 2> :
  D.234081 = std::forward<const return_type&> (__args#0);
  D.234079 = __p;
  D.234080 = operator new (24, D.234079);
  MEM[(struct return_type *)D.234080] = *D.234081;
  return;

}



;; Function std::vector<return_type>::_M_realloc_insert<const return_type&> (_ZNSt6vectorI11return_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8599, decl_uid=212553, cgraph_uid=5234, symbol_order=6023)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<return_type>::_M_realloc_insert<const return_type&> (struct vector * const this, struct iterator __position, const struct return_type & __args#0)
{
  struct return_type * D.249317;
  const size_type D.249316;
  struct return_type * __new_finish;
  struct return_type * __new_start;
  const size_type __elems_before;
  struct return_type * __old_finish;
  struct return_type * __old_start;
  const size_type __len;
  struct iterator D.222840;

  <bb 2> :
  D.249316 = std::vector<return_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.249316;
  __old_start = this->D.173508._M_impl.D.172853._M_start;
  __old_finish = this->D.173508._M_impl.D.172853._M_finish;
  D.222840 = std::vector<return_type>::begin (this);
  _1 = __gnu_cxx::operator-<return_type*, std::vector<return_type> > (&__position, &D.222840);
  __elems_before = (const size_type) _1;
  D.222840 = {CLOBBER};
  _2 = &this->D.173508;
  D.249317 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_allocate (_2, __len);
  __new_start = D.249317;
  __new_finish = __new_start;
  _3 = std::forward<const return_type&> (__args#0);
  _4 = __elems_before * 24;
  _5 = __new_start + _4;
  _6 = &this->D.173508._M_impl;
  std::allocator_traits<std::allocator<return_type> >::construct<return_type, const return_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.173508;
  _8 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<return_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 24;
  _11 = &this->D.173508;
  _12 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<return_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.173508;
  _23 = this->D.173508._M_impl.D.172853._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 24;
  _26 = (long unsigned int) _25;
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.173508._M_impl.D.172853._M_start = __new_start;
  this->D.173508._M_impl.D.172853._M_finish = __new_finish;
  _27 = __len * 24;
  _28 = __new_start + _27;
  this->D.173508._M_impl.D.172853._M_end_of_storage = _28;
  return;

}



;; Function std::vector<return_type>::_M_check_len (_ZNKSt6vectorI11return_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9374, decl_uid=173357, cgraph_uid=6006, symbol_order=6795)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<return_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.620;
  size_type D.249321;
  const long unsigned int D.234086;
  bool retval.618;

  <bb 2> :
  _1 = std::vector<return_type>::max_size (this);
  _2 = std::vector<return_type>::size (this);
  _3 = _1 - _2;
  __n.619_4 = __n;
  retval.618 = _3 < __n.619_4;
  if (retval.618 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<return_type>::size (this);
  _6 = std::vector<return_type>::size (this);
  D.234086 = _6;
  _7 = std::max<long unsigned int> (&D.234086, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.234086 = {CLOBBER};
  _9 = std::vector<return_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<return_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.620 = std::vector<return_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.620 = __len;

  <bb 8> :
  D.249321 = iftmp.620;

  <bb 9> :
<L6>:
  return D.249321;

}



;; Function std::vector<return_type>::max_size (_ZNKSt6vectorI11return_typeSaIS0_EE8max_sizeEv, funcdef_no=10032, decl_uid=173143, cgraph_uid=6664, symbol_order=7457)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<return_type>::max_size (const struct vector * const this)
{
  size_type D.249328;

  <bb 2> :
  _1 = &this->D.173508;
  _2 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_1);
  D.249328 = std::vector<return_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.249328;

}



;; Function std::vector<return_type>::_S_max_size (_ZNSt6vectorI11return_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10542, decl_uid=173364, cgraph_uid=7174, symbol_order=7967)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<return_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.249330;

  <bb 2> :
  __diffmax = 384307168202282325;
  _1 = std::allocator_traits<std::allocator<return_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.249330 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249330;

}



;; Function std::allocator_traits<std::allocator<return_type> >::max_size (_ZNSt16allocator_traitsISaI11return_typeEE8max_sizeERKS1_, funcdef_no=10792, decl_uid=172678, cgraph_uid=7424, symbol_order=8219)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<return_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.249333;

  <bb 2> :
  D.249333 = __gnu_cxx::new_allocator<return_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.249333;

}



;; Function __gnu_cxx::new_allocator<return_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI11return_typeE8max_sizeEv, funcdef_no=10899, decl_uid=172520, cgraph_uid=7531, symbol_order=8326)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<return_type>::max_size (const struct new_allocator * const this)
{
  size_type D.249335;

  <bb 2> :
  D.249335 = __gnu_cxx::new_allocator<return_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.249335;

}



;; Function __gnu_cxx::operator-<return_type*, std::vector<return_type> > (_ZN9__gnu_cxxmiIP11return_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9375, decl_uid=222841, cgraph_uid=6007, symbol_order=6796)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<return_type*, std::vector<return_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.249337;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.249337 = _5 /[ex] 24;

  <bb 3> :
<L0>:
  return D.249337;

}



;; Function std::vector<return_type>::_S_relocate (_ZNSt6vectorI11return_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9376, decl_uid=173015, cgraph_uid=6008, symbol_order=6797)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::vector<return_type>::_S_relocate (struct return_type * __first, struct return_type * __last, struct return_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.249340;
  struct return_type * D.249339;

  <bb 2> :
  D.249339 = std::vector<return_type>::_S_do_relocate (__first, __last, __result, __alloc, D.249340);

  <bb 3> :
<L0>:
  return D.249339;

}



;; Function std::vector<return_type>::_S_do_relocate (_ZNSt6vectorI11return_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10033, decl_uid=173003, cgraph_uid=6665, symbol_order=7458)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::vector<return_type>::_S_do_relocate (struct return_type * __first, struct return_type * __last, struct return_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.239971)
{
  struct return_type * D.249342;

  <bb 2> :
  D.249342 = std::__relocate_a<return_type*, return_type*, std::allocator<return_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.249342;

}



;; Function std::__relocate_a<return_type*, return_type*, std::allocator<return_type> > (_ZSt12__relocate_aIP11return_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10543, decl_uid=223006, cgraph_uid=7175, symbol_order=7968)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__relocate_a<return_type*, return_type*, std::allocator<return_type> > (struct return_type * __first, struct return_type * __last, struct return_type * __result, struct allocator & __alloc)
{
  struct return_type * D.249344;

  <bb 2> :
  _1 = std::__niter_base<return_type*> (__result);
  _2 = std::__niter_base<return_type*> (__last);
  _3 = std::__niter_base<return_type*> (__first);
  D.249344 = std::__relocate_a_1<return_type*, return_type*, std::allocator<return_type> > (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.249344;

}



;; Function std::__relocate_a_1<return_type*, return_type*, std::allocator<return_type> > (_ZSt14__relocate_a_1IP11return_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10793, decl_uid=223157, cgraph_uid=7425, symbol_order=8220)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct return_type * std::__relocate_a_1<return_type*, return_type*, std::allocator<return_type> > (struct return_type * __first, struct return_type * __last, struct return_type * __result, struct allocator & __alloc)
{
  struct return_type * __cur;
  struct return_type * D.249346;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<return_type> (__first);
  _2 = std::__addressof<return_type> (__cur);
  std::__relocate_object_a<return_type, return_type, std::allocator<return_type> > (_2, _1, __alloc);
  __first = __first + 24;
  __cur = __cur + 24;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.249346 = __cur;

  <bb 6> :
<L3>:
  return D.249346;

}



;; Function std::__relocate_object_a<return_type, return_type, std::allocator<return_type> > (_ZSt19__relocate_object_aI11return_typeS0_SaIS0_EEvPT_PT0_RT1_, funcdef_no=10900, decl_uid=223186, cgraph_uid=7532, symbol_order=8327)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__relocate_object_a<return_type, return_type, std::allocator<return_type> > (struct return_type * restrict __dest, struct return_type * restrict __orig, struct allocator & __alloc)
{
  <bb 2> :
  _1 = std::move<return_type&> (__orig);
  std::allocator_traits<std::allocator<return_type> >::construct<return_type, return_type> (__alloc, __dest, _1);
  _2 = std::__addressof<return_type> (__orig);
  std::allocator_traits<std::allocator<return_type> >::destroy<return_type> (__alloc, _2);
  return;

}



;; Function std::move<return_type&> (_ZSt4moveIR11return_typeEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=10947, decl_uid=223198, cgraph_uid=7579, symbol_order=8374)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<return_type&> (struct return_type & __t)
{
  struct type & D.249348;

  <bb 2> :
  D.249348 = __t;

  <bb 3> :
<L0>:
  return D.249348;

}



;; Function std::allocator_traits<std::allocator<return_type> >::construct<return_type, return_type> (_ZNSt16allocator_traitsISaI11return_typeEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_, funcdef_no=10948, decl_uid=223200, cgraph_uid=7580, symbol_order=8375)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<return_type> >::construct<return_type, return_type> (struct allocator_type & __a, struct return_type * __p, struct return_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<return_type> (__args#0);
  __gnu_cxx::new_allocator<return_type>::construct<return_type, return_type> (__a, __p, _1);
  return;

}



;; Function std::forward<return_type> (_ZSt7forwardI11return_typeEOT_RNSt16remove_referenceIS1_E4typeE, funcdef_no=10967, decl_uid=245312, cgraph_uid=7599, symbol_order=8394)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct return_type & std::forward<return_type> (struct type & __t)
{
  struct return_type & D.249350;

  <bb 2> :
  D.249350 = __t;

  <bb 3> :
<L0>:
  return D.249350;

}



;; Function __gnu_cxx::new_allocator<return_type>::construct<return_type, return_type> (_ZN9__gnu_cxx13new_allocatorI11return_typeE9constructIS1_JS1_EEEvPT_DpOT0_, funcdef_no=10968, decl_uid=245314, cgraph_uid=7600, symbol_order=8395)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::construct<return_type, return_type> (struct new_allocator * const this, struct return_type * __p, struct return_type & __args#0)
{
  void * D.245732;
  void * D.245731;
  struct return_type * D.245733;

  <bb 2> :
  D.245733 = std::forward<return_type> (__args#0);
  D.245731 = __p;
  D.245732 = operator new (24, D.245731);
  MEM[(struct return_type *)D.245732] = *D.245733;
  return;

}



;; Function std::allocator_traits<std::allocator<return_type> >::destroy<return_type> (_ZNSt16allocator_traitsISaI11return_typeEE7destroyIS0_EEvRS1_PT_, funcdef_no=9378, decl_uid=223215, cgraph_uid=6010, symbol_order=6799)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<return_type> >::destroy<return_type> (struct allocator_type & __a, struct return_type * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<return_type>::destroy<return_type> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::destroy<return_type> (_ZN9__gnu_cxx13new_allocatorI11return_typeE7destroyIS1_EEvPT_, funcdef_no=10034, decl_uid=234101, cgraph_uid=6666, symbol_order=7459)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::destroy<return_type> (struct new_allocator * const this, struct return_type * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_return_array>::put (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7706, decl_uid=189533, cgraph_uid=4338, symbol_order=5123)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_return_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_return_array & v)
{
  bool D.249359;
  struct hash_entry * D.249358;
  unsigned int D.249357;
  bool ins;
  struct hash_entry * e;
  bool D.249355;
  void * D.212563;
  void * D.212562;

  <bb 2> :
  _1 = &this->m_table;
  D.249357 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::hash (k);
  _2 = D.249357;
  D.249358 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.249358;
  D.249359 = hash_map<tree_node*, function_return_array>::hash_entry::is_empty (e);
  ins = D.249359;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.212562 = &e->m_value;
  D.212563 = operator new (32, D.212562);
  function_return_array::function_return_array (D.212563, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_return_array::operator= (_4, v);

  <bb 5> :
  D.249355 = ~ins;

  <bb 6> :
<L3>:
  return D.249355;

  <bb 7> :
<L4>:
  operator delete (D.212563, D.212562);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8603, decl_uid=189691, cgraph_uid=5235, symbol_order=6024)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.249410;
  bool D.249409;
  bool D.249408;
  bool D.249407;
  bool D.249406;
  bool D.249405;
  struct value_type * D.249404;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.626;
  bool retval.625;
  bool retval.624;
  bool retval.623;
  bool retval.622;
  bool retval.621;
  struct value_type * D.249366;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 40;
  entry = _11 + _13;
  size = this->m_size;
  D.249405 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.621 = D.249405;
  if (retval.621 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.249406 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.622 = D.249406;
  if (retval.622 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 40;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.249407 = hash_map<tree_node*, function_return_array>::hash_entry::equal (entry, comparable);
  retval.623 = D.249407;
  if (retval.623 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  D.249366 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 40;
  entry = _24 + _26;
  D.249408 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.624 = D.249408;
  if (retval.624 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.249409 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.625 = D.249409;
  if (retval.625 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 40;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.249410 = hash_map<tree_node*, function_return_array>::hash_entry::equal (entry, comparable);
  retval.626 = D.249410;
  if (retval.626 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 40;
  D.249366 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.249366 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.249366 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 40;
  D.249366 = _37 + _39;

  <bb 27> :
<L37>:
  return D.249366;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9379, decl_uid=189772, cgraph_uid=6023, symbol_order=6812)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.249441;
  unsigned int D.249440;
  bool D.249439;
  bool D.249438;
  struct mem_alloc_description & D.249437;
  struct value_type * D.249436;
  unsigned int D.249435;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.234124;
  void * D.234123;
  struct hash_entry & D.234161;
  bool iftmp.630;
  bool retval.629;
  bool iftmp.628;
  bool retval.627;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 40;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.628 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.628 = 0;

  <bb 6> :
  retval.627 = iftmp.628;
  if (retval.627 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.249435 = hash_table_higher_prime_index (_5);
  nindex = D.249435;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.249436 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.249436;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.249438 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.249438;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.249439 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.249439;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.630 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.630 = 0;

  <bb 15> :
  retval.629 = iftmp.630;
  if (retval.629 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.249440 = hash_map<tree_node*, function_return_array>::hash_entry::hash (x);
  _16 = D.249440;
  D.249441 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.249441;
  D.234161 = std::move<hash_map<tree_node*, function_return_array>::hash_entry&> (x);
  D.234123 = q;
  D.234124 = operator new (40, D.234123);
  hash_map<tree_node*, function_return_array>::hash_entry::hash_entry (D.234124, D.234161);

  <bb 17> :
  p = p + 40;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10035, decl_uid=189667, cgraph_uid=6667, symbol_order=7460)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.249442;

  <bb 2> :
  D.249442 = this->m_size;

  <bb 3> :
<L0>:
  return D.249442;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10036, decl_uid=189669, cgraph_uid=6668, symbol_order=7461)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.249444;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.249444 = _1 - _2;

  <bb 3> :
<L0>:
  return D.249444;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10037, decl_uid=189769, cgraph_uid=6669, symbol_order=7462)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.631;
  bool D.249446;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.631 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.631 = 0;

  <bb 6> :
  D.249446 = iftmp.631;

  <bb 7> :
<L4>:
  return D.249446;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9190, decl_uid=189759, cgraph_uid=5822, symbol_order=6611)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.249468;
  struct value_type * D.249467;
  struct mem_alloc_description & D.249466;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.249464;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.249467 = xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_alloc (n);
  nentries = D.249467;
  goto <bb 6>; [INV]

  <bb 5> :
  D.249468 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_return_array>::hash_entry> (n);
  nentries = D.249468;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.249464 = nentries;

  <bb 9> :
<L14>:
  return D.249464;

}



;; Function xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=9906, decl_uid=216711, cgraph_uid=6538, symbol_order=7331)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.249471;
  struct hash_entry * D.249469;

  <bb 2> :
  D.249471 = xcalloc (count, 40);
  D.249469 = D.249471;

  <bb 3> :
<L0>:
  return D.249469;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_return_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=9907, decl_uid=231865, cgraph_uid=6539, symbol_order=7332)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_return_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.249478;
  struct hash_entry * D.249477;
  struct hash_entry * D.249475;
  bool retval.632;

  <bb 2> :
  retval.632 = need_finalization_p<hash_map<tree_node*, function_return_array>::hash_entry> ();
  if (retval.632 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 40;
  D.249477 = ggc_internal_cleared_alloc (_1, finalize, 40, c);
  D.249475 = D.249477;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 40;
  D.249478 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.249475 = D.249478;

  <bb 5> :
<L2>:
  return D.249475;

}



;; Function finalize<hash_map<tree_node*, function_return_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10433, decl_uid=239366, cgraph_uid=7068, symbol_order=7861)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_return_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_return_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10435, decl_uid=242845, cgraph_uid=7066, symbol_order=7859)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_return_array::~function_return_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_return_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10432, decl_uid=239365, cgraph_uid=7064, symbol_order=7857)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_return_array>::hash_entry> ()
{
  bool D.249479;

  <bb 2> :
  D.249479 = 1;

  <bb 3> :
<L0>:
  return D.249479;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10039, decl_uid=189592, cgraph_uid=6671, symbol_order=7464)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_return_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.249483;
  hashval_t D.249481;

  <bb 2> :
  _1 = &e->m_key;
  D.249483 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::hash (_1);
  D.249481 = D.249483;

  <bb 3> :
<L0>:
  return D.249481;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10038, decl_uid=189762, cgraph_uid=6670, symbol_order=7463)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.249496;
  bool D.249495;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.634;
  struct value_type * D.249487;
  bool retval.633;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 40;
  slot = _2 + _4;
  D.249495 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.633 = D.249495;
  if (retval.633 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.249487 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 40;
  slot = _8 + _10;
  D.249496 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.634 = D.249496;
  if (retval.634 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.249487 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.249487;

}



;; Function std::move<hash_map<tree_node*, function_return_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10040, decl_uid=234121, cgraph_uid=6672, symbol_order=7465)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_return_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.249497;

  <bb 2> :
  D.249497 = __t;

  <bb 3> :
<L0>:
  return D.249497;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9390, decl_uid=234146, cgraph_uid=6021, symbol_order=6810)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.234148)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.234148->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.234148->m_value;
  function_return_array::function_return_array (_2, _3);
  return;

}



;; Function function_return_array::function_return_array (_ZN21function_return_arrayC2EOS_, funcdef_no=9388, decl_uid=189884, cgraph_uid=6018, symbol_order=6807)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_return_array::function_return_array (struct function_return_array * const this, struct function_return_array & D.189886)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.189886->return_type_num;
  this->return_type_num = _1;
  _2 = D.189886->pthread_type_num;
  this->pthread_type_num = _2;
  _3 = &this->return_type_array;
  _4 = &D.189886->return_type_array;
  std::vector<return_type>::vector (_3, _4);
  return;

}



;; Function std::vector<return_type>::vector (_ZNSt6vectorI11return_typeSaIS0_EEC2EOS2_, funcdef_no=9386, decl_uid=173465, cgraph_uid=6015, symbol_order=6804)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<return_type>::vector (struct vector * const this, struct vector & D.173467)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.173508;
  _2 = &D.173467->D.173508;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_ZNSt12_Vector_baseI11return_typeSaIS0_EEC2EOS2_, funcdef_no=9384, decl_uid=172933, cgraph_uid=6012, symbol_order=6801)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.172935)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.172935->_M_impl;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11return_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10042, decl_uid=172839, cgraph_uid=6674, symbol_order=7467)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl&> (__x);
  std::allocator<return_type>::allocator (this, _1);
  _2 = &this->D.172853;
  _3 = std::move<std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.172853;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI11return_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10544, decl_uid=240001, cgraph_uid=7176, symbol_order=7969)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.249499;

  <bb 2> :
  D.249499 = __t;

  <bb 3> :
<L0>:
  return D.249499;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11return_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10546, decl_uid=172795, cgraph_uid=7178, symbol_order=7971)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8904, decl_uid=216713, cgraph_uid=5536, symbol_order=6325)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9392, decl_uid=189780, cgraph_uid=6024, symbol_order=6813)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_return_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10044, decl_uid=189604, cgraph_uid=6676, symbol_order=7469)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::mark_empty<hash_map<tree_node*, function_return_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::mark_empty<hash_map<tree_node*, function_return_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10548, decl_uid=240016, cgraph_uid=7180, symbol_order=7973)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::mark_empty<hash_map<tree_node*, function_return_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function std::vector<tree_node*>::back (_ZNSt6vectorIP9tree_nodeSaIS1_EE4backEv, funcdef_no=7707, decl_uid=184559, cgraph_uid=4339, symbol_order=5124)

Merging blocks 3 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
union tree_node * & std::vector<tree_node*>::back (struct vector * const this)
{
  struct iterator D.212565;
  struct __normal_iterator D.212567;
  union tree_node * & D.249502;

  <bb 2> :
  D.212565 = std::vector<tree_node*>::end (this);
  D.212567 = __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::operator- (&D.212565, 1);
  D.249502 = __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::operator* (&D.212567);

  <bb 3> :
  D.212567 = {CLOBBER};
  D.212565 = {CLOBBER};

  <bb 4> :
<L2>:
  return D.249502;

}



;; Function __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::operator- (_ZNK9__gnu_cxx17__normal_iteratorIPP9tree_nodeSt6vectorIS2_SaIS2_EEEmiEl, funcdef_no=8605, decl_uid=212208, cgraph_uid=5237, symbol_order=6026)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::operator- (const struct __normal_iterator * const this, difference_type __n)
{
  union tree_node * * const D.223414;
  struct __normal_iterator D.223415;
  struct __normal_iterator D.249506;

  <bb 2> :
  _1 = this->_M_current;
  __n.635_2 = (long unsigned int) __n;
  _3 = __n.635_2 * 8;
  _4 = -_3;
  _5 = _1 + _4;
  D.223414 = _5;
  __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::__normal_iterator (&D.223415, &D.223414);
  D.249506 = D.223415;
  D.223415 = {CLOBBER};
  D.223414 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.249506;

}



;; Function __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPP9tree_nodeSt6vectorIS2_SaIS2_EEEdeEv, funcdef_no=8606, decl_uid=212182, cgraph_uid=5238, symbol_order=6027)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * & __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::operator* (const struct __normal_iterator * const this)
{
  union tree_node * & D.249510;

  <bb 2> :
  D.249510 = this->_M_current;

  <bb 3> :
<L0>:
  return D.249510;

}



;; Function dump_fucntion (_Z13dump_fucntionP11cgraph_nodeP3ptbP12gimple_array, funcdef_no=6353, decl_uid=187033, cgraph_uid=3329, symbol_order=4105)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;;
;; Loop 1
;;  header 11, latch 10
;;  depth 1, outer 0
;;  nodes: 11 10 6 8 9 7 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 11 }
;; 5 succs { 6 7 }
;; 6 succs { 10 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 5 12 }
;; 12 succs { 1 }
void dump_fucntion (struct cgraph_node * node, struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct cgraph_node * D.249527;
  const char * D.249526;
  const char * D.249525;
  struct function * D.249524;
  struct function * D.249523;
  bool D.249522;
  struct cgraph_node * D.249521;
  int fucntion_level;
  struct cgraph_edge * e;
  bool retval.639;
  bool retval.638;

  <bb 2> :
  if (node == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  stderr.636_1 = stderr;
  __builtin_fwrite ("=======node_fun: =========\n", 1, 27, stderr.636_1);

  <bb 4> :
  symtab.637_2 = symtab;
  D.249521 = symbol_table::first_defined_function (symtab.637_2);
  node = D.249521;
  goto <bb 11>; [INV]

  <bb 5> :
  _3 = node->D.97512.decl;
  D.249522 = gimple_has_body_p (_3);
  _4 = D.249522;
  retval.638 = ~_4;
  if (retval.638 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  // predicted unlikely by continue predictor.
  goto <bb 10>; [INV]

  <bb 7> :
  fucntion_level = 0;
  D.249523 = cgraph_node::get_fun (node);
  _5 = D.249523;
  push_cfun (_5);
  D.249524 = cgraph_node::get_fun (node);
  _6 = D.249524;
  _7 = _6->decl;
  retval.639 = _7 == 0B;
  if (retval.639 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  pop_cfun ();
  // predicted unlikely by continue predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  cfun.640_8 = cfun;
  _9 = cfun.640_8->decl;
  D.249525 = get_name (_9);
  _10 = D.249525;
  stderr.641_11 = stderr;
  fprintf (stderr.641_11, "\x1b[40;44m =======node_fun:%s========= \x1b[0m\n", _10);
  stderr.642_12 = stderr;
  __builtin_fwrite ("\x1b[40;44m fucntion collect path  \x1b[0m\n", 1, 37, stderr.642_12);
  cfun.643_13 = cfun;
  _14 = &cfun.643_13->decl;
  std::vector<tree_node*>::push_back (&pathStack, _14);
  cfun.644_15 = cfun;
  _16 = cfun.644_15->decl;
  walk_function_path (_16, fucntion_level, ptable, user_tmp);
  _17 = std::vector<tree_node*>::back (&pathStack);
  _18 = *_17;
  D.249526 = get_name (_18);
  _19 = D.249526;
  stderr.645_20 = stderr;
  fprintf (stderr.645_20, "\x1b[40;33m =======POP node_fun stack:%s========= \x1b[0m\n", _19);
  std::vector<tree_node*>::pop_back (&pathStack);
  pop_cfun ();

  <bb 10> :
  symtab.646_21 = symtab;
  D.249527 = symbol_table::next_defined_function (symtab.646_21, node);
  node = D.249527;

  <bb 11> :
  if (node != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  stderr.647_22 = stderr;
  __builtin_fwrite ("fucntion collect path finsh\n", 1, 28, stderr.647_22);
  return;

}



;; Function collect_function_call (_Z21collect_function_callP6gimpleP11cgraph_nodeP15basic_block_def, funcdef_no=6354, decl_uid=186989, cgraph_uid=3333, symbol_order=4109)

Removing basic block 5
Removing basic block 13
Removing basic block 14
Removing basic block 15
Removing basic block 21
Removing basic block 22
Removing basic block 27
Removing basic block 33
Removing basic block 53
Removing basic block 56
Removing basic block 74
Removing basic block 76
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66
;;
;; Loop 1
;;  header 18, latch 17
;;  depth 1, outer 0
;;  nodes: 18 17 13 16 14 15
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 65 }
;; 5 succs { 6 21 }
;; 6 succs { 7 12 }
;; 7 succs { 8 12 }
;; 8 succs { 9 12 }
;; 9 succs { 11 10 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 18 }
;; 13 succs { 14 17 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 13 19 }
;; 19 succs { 20 21 }
;; 20 succs { 65 }
;; 21 succs { 22 65 }
;; 22 succs { 23 65 }
;; 23 succs { 25 24 }
;; 24 succs { 25 28 }
;; 25 succs { 27 26 }
;; 26 succs { 27 }
;; 27 succs { 64 }
;; 28 succs { 35 29 }
;; 29 succs { 35 30 }
;; 30 succs { 35 31 }
;; 31 succs { 35 32 }
;; 32 succs { 35 33 }
;; 33 succs { 35 34 }
;; 34 succs { 35 36 }
;; 35 succs { 37 }
;; 36 succs { 37 }
;; 37 succs { 38 39 }
;; 38 succs { 64 }
;; 39 succs { 40 41 }
;; 40 succs { 64 }
;; 41 succs { 42 57 }
;; 42 succs { 66 43 }
;; 43 succs { 66 44 }
;; 44 succs { 45 }
;; 45 succs { 66 46 }
;; 46 succs { 49 47 }
;; 47 succs { 66 48 }
;; 48 succs { 49 }
;; 49 succs { 66 50 }
;; 50 succs { 66 51 }
;; 51 succs { 52 55 }
;; 52 succs { 66 53 }
;; 53 succs { 66 54 }
;; 54 succs { 55 }
;; 55 succs { 66 56 }
;; 56 succs { 64 }
;; 57 succs { 58 60 }
;; 58 succs { 59 60 }
;; 59 succs { 61 }
;; 60 succs { 61 }
;; 61 succs { 62 64 }
;; 62 succs { 63 64 }
;; 63 succs { 64 }
;; 64 succs { 65 }
;; 65 succs { 1 }
;; 66 succs { }
void collect_function_call (struct gimple * gc, struct cgraph_node * node, struct basic_block_def * bb)
{
  union tree_node * D.249649;
  union tree_node * D.249648;
  union tree_node * D.249647;
  union tree_node * D.249646;
  long int D.249644;
  union tree_node * D.249643;
  union tree_node * D.249642;
  union tree_node * D.249641;
  struct pthread_attr_array * D.249640;
  struct pthread_attr_array * D.249639;
  union tree_node * D.249638;
  union tree_node * D.249637;
  union tree_node * D.249636;
  union tree_node * D.249635;
  const char * D.249634;
  union tree_node * D.249633;
  union tree_node * D.249632;
  union tree_node * D.249631;
  const char * D.249630;
  union tree_node * D.249629;
  const char * D.249628;
  union tree_node * D.249627;
  union tree_node * D.249626;
  struct pthread_attr_array pthread_attr_array;
  union tree_node * getvardecl;
  size_t found;
  int i;
  int find;
  const char * name;
  struct cgraph_node * node2;
  union tree_node * a;
  location_t loc;
  bool retval.677;
  bool iftmp.676;
  bool retval.675;
  bool retval.673;
  bool retval.670;
  bool retval.669;
  bool iftmp.663;
  bool retval.662;
  bool retval.660;
  bool retval.658;
  bool retval.657;
  struct expanded_location D.194551;
  bool retval.655;
  struct expanded_location D.194341;
  struct expanded_location D.194339;
  bool retval.654;
  bool retval.652;
  bool retval.649;
  bool retval.648;

  <bb 2> :
  loc = gimple_location_safe (gc);
  retval.648 = is_gimple_call (gc);
  if (retval.648 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  D.249626 = gimple_call_fn (gc);
  _1 = D.249626;
  retval.649 = _1 == 0B;
  if (retval.649 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 65>; [INV]

  <bb 5> :
  vscode_extensionmod.650_2 = vscode_extensionmod;
  if (vscode_extensionmod.650_2 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 6> :
  find = 0;
  vscode_extensionIgonefreemod.651_3 = vscode_extensionIgonefreemod;
  if (vscode_extensionIgonefreemod.651_3 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 7> :
  retval.652 = is_gimple_call (gc);
  if (retval.652 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 8> :
  D.249627 = gimple_call_fn (gc);
  _4 = D.249627;
  D.249628 = get_name (_4);
  name = D.249628;
  if (name != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 9> :
  _5 = strcmp (name, "free");
  if (_5 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  _6 = strcmp (name, "xfree");
  if (_6 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  find = 1;
  stderr.653_7 = stderr;
  __builtin_fwrite ("set breakpoint free stmt igone\n", 1, 31, stderr.653_7);
  _8 = gimple_location_safe (gc);
  warning_at (_8, 0, "use location");

  <bb 12> :
  i = 0;
  goto <bb 18>; [INV]

  <bb 13> :
  D.194339 = expand_location (loc); [return slot optimization]
  _9 = D.194339.file;
  retval.654 = _9 != 0B;
  D.194339 = {CLOBBER};
  if (retval.654 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 14> :
  _10 = (long unsigned int) i;
  _11 = std::vector<breakpoint>::operator[] (&vbreakpoint, _10);
  _12 = &_11->name;
  D.194341 = expand_location (loc); [return slot optimization]
  _13 = D.194341.file;
  found = std::__cxx11::basic_string<char>::find (_12, _13, 0);
  D.194341 = {CLOBBER};
  if (found != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  _14 = (long unsigned int) i;
  _15 = std::vector<breakpoint>::operator[] (&vbreakpoint, _14);
  _16 = _15->line;
  D.194551 = expand_location (loc); [return slot optimization]
  _17 = D.194551.line;
  retval.655 = _16 == _17;
  D.194551 = {CLOBBER};
  if (retval.655 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  debug_gimple_stmt (gc);
  _18 = (long unsigned int) i;
  _19 = std::vector<breakpoint>::operator[] (&vbreakpoint, _18);
  _20 = _19->line;
  _21 = (long unsigned int) i;
  _22 = std::vector<breakpoint>::operator[] (&vbreakpoint, _21);
  _23 = &_22->name;
  _24 = std::__cxx11::basic_string<char>::c_str (_23);
  stderr.656_25 = stderr;
  fprintf (stderr.656_25, "set breakpoint %s %d\n", _24, _20);
  find = 1;

  <bb 17> :
  i = i + 1;

  <bb 18> :
  _26 = (long unsigned int) i;
  _27 = std::vector<breakpoint>::size (&vbreakpoint);
  retval.657 = _26 < _27;
  if (retval.657 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  if (find == 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 65>; [INV]

  <bb 21> :
  retval.658 = is_gimple_call (gc);
  if (retval.658 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 22> :
  D.249629 = gimple_call_fn (gc);
  _28 = D.249629;
  D.249630 = get_name (_28);
  name = D.249630;
  if (name != 0B)
    goto <bb 23>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 23> :
  _29 = strcmp (name, "free");
  if (_29 == 0)
    goto <bb 25>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  _30 = strcmp (name, "xfree");
  if (_30 == 0)
    goto <bb 25>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 25> :
  GIMPLE_FREE_COUNT.659_31 = GIMPLE_FREE_COUNT;
  _32 = GIMPLE_FREE_COUNT.659_31 + 1;
  GIMPLE_FREE_COUNT = _32;
  D.249631 = gimple_call_arg (gc, 0);
  _33 = D.249631;
  _34 = _33->base.code;
  retval.660 = _34 == 131;
  if (retval.660 != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 26> :
  D.249632 = gimple_call_arg (gc, 0);
  _35 = D.249632;
  ftable.661_36 = ftable;
  set_ptb (bb, ftable.661_36, _35, loc, 0, gc, node);

  <bb 27> :
  goto <bb 64>; [INV]

  <bb 28> :
  _37 = strcmp (name, "realloc");
  if (_37 == 0)
    goto <bb 35>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 29> :
  _38 = strcmp (name, "malloc");
  if (_38 == 0)
    goto <bb 35>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 30> :
  D.249633 = gimple_call_fn (gc);
  _39 = D.249633;
  D.249634 = get_name (_39);
  _40 = D.249634;
  _41 = strcmp (_40, "calloc");
  if (_41 == 0)
    goto <bb 35>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 31> :
  _42 = strcmp (name, "xcalloc");
  if (_42 == 0)
    goto <bb 35>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 32> :
  _43 = strcmp (name, "xmalloc");
  if (_43 == 0)
    goto <bb 35>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 33> :
  _44 = strcmp (name, "strdup");
  if (_44 == 0)
    goto <bb 35>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 34> :
  _45 = strcmp (name, "xstrdup");
  if (_45 == 0)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  iftmp.663 = 1;
  goto <bb 37>; [INV]

  <bb 36> :
  iftmp.663 = 0;

  <bb 37> :
  retval.662 = iftmp.663;
  if (retval.662 != 0)
    goto <bb 38>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 38> :
  GIMPLE_MALLOC_COUNT.664_46 = GIMPLE_MALLOC_COUNT;
  _47 = GIMPLE_MALLOC_COUNT.664_46 + 1;
  GIMPLE_MALLOC_COUNT = _47;
  D.249635 = gimple_call_lhs (gc);
  _48 = D.249635;
  ptable.665_49 = ptable;
  set_ptb (bb, ptable.665_49, _48, loc, 0, gc, node);
  goto <bb 64>; [INV]

  <bb 39> :
  _50 = strcmp (name, "pthread_create");
  if (_50 == 0)
    goto <bb 40>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 40> :
  IS_PTHREAD_FUCNTION.666_51 = IS_PTHREAD_FUCNTION;
  IS_PTHREAD_FUCNTION.667_52 = (int) IS_PTHREAD_FUCNTION.666_51;
  D.249636 = gimple_call_arg (gc, 0);
  _53 = D.249636;
  ptable.668_54 = ptable;
  set_ptb (bb, ptable.668_54, _53, loc, IS_PTHREAD_FUCNTION.667_52, gc, node);
  goto <bb 64>; [INV]

  <bb 41> :
  _55 = strcmp (name, "pthread_attr_setdetachstate");
  if (_55 == 0)
    goto <bb 42>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 42> :
  D.249637 = gimple_call_arg (gc, 0);

  <bb 43> :
  _56 = D.249637;
  _57 = _56->exp.operands[0];
  getvardecl = _57;
  D.249638 = gimple_call_arg (gc, 1);

  <bb 44> :
  _58 = D.249638;
  _59 = _58->base.code;
  retval.669 = _59 == 26;

  <bb 45> :
  pthread_attr_array::pthread_attr_array (&pthread_attr_array);
  pthread_attr_setdetachstates.671_60 = pthread_attr_setdetachstates;
  D.249639 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.671_60, &getvardecl);

  <bb 46> :
  _61 = D.249639;
  retval.670 = _61 == 0B;
  if (retval.670 != 0)
    goto <bb 49>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 47> :
  pthread_attr_setdetachstates.672_62 = pthread_attr_setdetachstates;
  D.249640 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.672_62, &getvardecl);

  <bb 48> :
  _63 = D.249640;
  pthread_attr_array = MEM[(const struct pthread_attr_array &)_63];

  <bb 49> :
  pthread_attr_array.stmt = gc;
  D.249641 = gimple_call_arg (gc, 0);

  <bb 50> :
  _64 = D.249641;
  pthread_attr_array.attr_tree = _64;
  D.249642 = gimple_call_arg (gc, 1);

  <bb 51> :
  _65 = D.249642;
  _66 = _65->base.code;
  retval.673 = _66 == 26;
  if (retval.673 != 0)
    goto <bb 52>; [INV]
  else
    goto <bb 55>; [INV]

  <bb 52> :
  D.249643 = gimple_call_arg (gc, 1);

  <bb 53> :
  _67 = D.249643;
  D.249644 = int_cst_value (_67);

  <bb 54> :
  _68 = D.249644;
  _69 = (int) _68;
  pthread_attr_array.attr_type_num = _69;

  <bb 55> :
  pthread_attr_setdetachstates.674_70 = pthread_attr_setdetachstates;
  hash_map<tree_node*, pthread_attr_array>::put (pthread_attr_setdetachstates.674_70, &getvardecl, &pthread_attr_array);

  <bb 56> :
  getvardecl = {CLOBBER};
  pthread_attr_array = {CLOBBER};
  goto <bb 64>; [INV]

  <bb 57> :
  D.249646 = gimple_call_lhs (gc);
  _71 = D.249646;
  if (_71 != 0B)
    goto <bb 58>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 58> :
  D.249647 = gimple_call_fn (gc);
  _72 = D.249647;
  if (_72 != 0B)
    goto <bb 59>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 59> :
  iftmp.676 = 1;
  goto <bb 61>; [INV]

  <bb 60> :
  iftmp.676 = 0;

  <bb 61> :
  retval.675 = iftmp.676;
  if (retval.675 != 0)
    goto <bb 62>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 62> :
  D.249648 = gimple_call_lhs (gc);
  _73 = D.249648;
  _74 = _73->base.code;
  retval.677 = _74 == 153;
  if (retval.677 != 0)
    goto <bb 63>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 63> :
  D.249649 = gimple_call_lhs (gc);
  _75 = D.249649;
  ptable.678_76 = ptable;
  set_ptb (bb, ptable.678_76, _75, loc, 0, gc, node);

  <bb 64> :

  <bb 65> :
<L84>:
  return;

  <bb 66> :
<L85>:
  getvardecl = {CLOBBER};
  pthread_attr_array = {CLOBBER};
  resx 4

}



;; Function std::vector<breakpoint>::operator[] (_ZNSt6vectorI10breakpointSaIS0_EEixEm, funcdef_no=7709, decl_uid=185878, cgraph_uid=4341, symbol_order=5126)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<breakpoint>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.249650;

  <bb 2> :
  _1 = this->D.186225._M_impl.D.185570._M_start;
  _2 = __n * 40;
  D.249650 = _1 + _2;

  <bb 3> :
<L0>:
  return D.249650;

}



;; Function std::vector<breakpoint>::size (_ZNKSt6vectorI10breakpointSaIS0_EE4sizeEv, funcdef_no=7708, decl_uid=185858, cgraph_uid=4340, symbol_order=5125)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<breakpoint>::size (const struct vector * const this)
{
  size_type D.249652;

  <bb 2> :
  _1 = this->D.186225._M_impl.D.185570._M_finish;
  _2 = this->D.186225._M_impl.D.185570._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 40;
  D.249652 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.249652;

}



;; Function pthread_attr_array::pthread_attr_array (_ZN18pthread_attr_arrayC2Ev, funcdef_no=6356, decl_uid=194558, cgraph_uid=3331, symbol_order=4107)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void pthread_attr_array::pthread_attr_array (struct pthread_attr_array * const this)
{
  <bb 2> :
  this->attr_type_num = 0;
  return;

}



;; Function hash_map<tree_node*, pthread_attr_array>::get (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7711, decl_uid=194638, cgraph_uid=4343, symbol_order=5128)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct pthread_attr_array * hash_map<tree_node*, pthread_attr_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.249662;
  struct hash_entry & D.249661;
  unsigned int D.249660;
  struct hash_entry & e;
  struct pthread_attr_array * iftmp.679;
  struct pthread_attr_array * D.249654;

  <bb 2> :
  _1 = &this->m_table;
  D.249660 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::hash (k);
  _2 = D.249660;
  D.249661 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.249661;
  D.249662 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (e);
  _3 = D.249662;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.679 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.679 = &e->m_value;

  <bb 5> :
  D.249654 = iftmp.679;

  <bb 6> :
<L3>:
  return D.249654;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE4hashERKS2_, funcdef_no=8607, decl_uid=194594, cgraph_uid=5239, symbol_order=6028)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::hash (union tree_node * const & h)
{
  hashval_t D.249663;

  <bb 2> :
  D.249663 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.249663;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8608, decl_uid=194778, cgraph_uid=5240, symbol_order=6029)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.249697;
  bool D.249696;
  bool D.249695;
  bool D.249694;
  bool D.249693;
  bool D.249692;
  struct value_type * D.249691;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.683;
  bool retval.682;
  struct value_type & D.249677;
  bool iftmp.681;
  bool retval.680;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 32;
  entry = _5 + _7;
  D.249692 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.249692;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.249693 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.249693;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.249694 = hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (entry, comparable);
  _11 = D.249694;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.681 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.681 = 0;

  <bb 8> :
  retval.680 = iftmp.681;
  if (retval.680 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.249677 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  entry = _17 + _19;
  D.249695 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.249695;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.249696 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.249696;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.249697 = hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (entry, comparable);
  _23 = D.249697;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.683 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.683 = 0;

  <bb 18> :
  retval.682 = iftmp.683;
  if (retval.682 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.249677 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.249677;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8909, decl_uid=194874, cgraph_uid=5541, symbol_order=6330)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.249700;
  bool D.249698;

  <bb 2> :
  D.249700 = hash_map<tree_node*, pthread_attr_array>::hash_entry::is_empty (v);
  D.249698 = D.249700;

  <bb 3> :
<L0>:
  return D.249698;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8611, decl_uid=194707, cgraph_uid=5243, symbol_order=6032)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, pthread_attr_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.249703;
  bool D.249701;

  <bb 2> :
  D.249703 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (e);
  D.249701 = D.249703;

  <bb 3> :
<L0>:
  return D.249701;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8910, decl_uid=194872, cgraph_uid=5542, symbol_order=6331)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.249706;
  bool D.249704;

  <bb 2> :
  D.249706 = hash_map<tree_node*, pthread_attr_array>::hash_entry::is_deleted (v);
  D.249704 = D.249706;

  <bb 3> :
<L0>:
  return D.249704;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9734, decl_uid=194702, cgraph_uid=6366, symbol_order=7155)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, pthread_attr_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.249709;
  bool D.249707;

  <bb 2> :
  D.249709 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_deleted<hash_map<tree_node*, pthread_attr_array>::hash_entry> (e);
  D.249707 = D.249709;

  <bb 3> :
<L0>:
  return D.249707;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_deleted<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10292, decl_uid=237333, cgraph_uid=6924, symbol_order=7717)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_deleted<hash_map<tree_node*, pthread_attr_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.249710;

  <bb 2> :
  _1 = entry->m_key;
  D.249710 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.249710;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9394, decl_uid=194695, cgraph_uid=6026, symbol_order=6815)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.249714;
  bool D.249712;

  <bb 2> :
  _1 = &a->m_key;
  D.249714 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::equal_keys (_1, b);
  D.249712 = D.249714;

  <bb 3> :
<L0>:
  return D.249712;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE10equal_keysERKS2_S7_, funcdef_no=10047, decl_uid=194596, cgraph_uid=6679, symbol_order=7472)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.249715;

  <bb 2> :
  D.249715 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.249715;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8609, decl_uid=212577, cgraph_uid=5241, symbol_order=6030)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.249717;

  <bb 2> :
  _1 = entry->m_key;
  D.249717 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.249717;

}



;; Function hash_map<tree_node*, pthread_attr_array>::put (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7712, decl_uid=194634, cgraph_uid=4344, symbol_order=5129)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
bool hash_map<tree_node*, pthread_attr_array>::put (struct hash_map * const this, union tree_node * const & k, const struct pthread_attr_array & v)
{
  bool D.249726;
  struct hash_entry * D.249725;
  unsigned int D.249724;
  bool ins;
  struct hash_entry * e;
  bool D.249722;
  void * D.212585;
  void * D.212584;

  <bb 2> :
  _1 = &this->m_table;
  D.249724 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::hash (k);
  _2 = D.249724;
  D.249725 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.249725;
  D.249726 = hash_map<tree_node*, pthread_attr_array>::hash_entry::is_empty (e);
  ins = D.249726;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.212584 = &e->m_value;
  D.212585 = operator new (24, D.212584);
  MEM[(struct pthread_attr_array *)D.212585] = *v;
  goto <bb 5>; [INV]

  <bb 4> :
  e->m_value = *v;

  <bb 5> :
  D.249722 = ~ins;

  <bb 6> :
<L3>:
  return D.249722;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8610, decl_uid=194789, cgraph_uid=5242, symbol_order=6031)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.249776;
  bool D.249775;
  bool D.249774;
  bool D.249773;
  bool D.249772;
  bool D.249771;
  struct value_type * D.249770;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.689;
  bool retval.688;
  bool retval.687;
  bool retval.686;
  bool retval.685;
  bool retval.684;
  struct value_type * D.249732;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 32;
  entry = _11 + _13;
  size = this->m_size;
  D.249771 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.684 = D.249771;
  if (retval.684 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.249772 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.685 = D.249772;
  if (retval.685 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 32;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.249773 = hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (entry, comparable);
  retval.686 = D.249773;
  if (retval.686 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  D.249732 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 32;
  entry = _24 + _26;
  D.249774 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.687 = D.249774;
  if (retval.687 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.249775 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.688 = D.249775;
  if (retval.688 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 32;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.249776 = hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (entry, comparable);
  retval.689 = D.249776;
  if (retval.689 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 32;
  D.249732 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.249732 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.249732 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 32;
  D.249732 = _37 + _39;

  <bb 27> :
<L37>:
  return D.249732;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9395, decl_uid=194870, cgraph_uid=6027, symbol_order=6816)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.249807;
  unsigned int D.249806;
  bool D.249805;
  bool D.249804;
  struct mem_alloc_description & D.249803;
  struct value_type * D.249802;
  unsigned int D.249801;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.234201;
  void * D.234200;
  struct hash_entry * D.234226;
  bool iftmp.693;
  bool retval.692;
  bool iftmp.691;
  bool retval.690;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 32;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.691 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.691 = 0;

  <bb 6> :
  retval.690 = iftmp.691;
  if (retval.690 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.249801 = hash_table_higher_prime_index (_5);
  nindex = D.249801;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.249802 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.249802;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.249804 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.249804;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.249805 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.249805;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.693 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.693 = 0;

  <bb 15> :
  retval.692 = iftmp.693;
  if (retval.692 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.249806 = hash_map<tree_node*, pthread_attr_array>::hash_entry::hash (x);
  _16 = D.249806;
  D.249807 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.249807;
  D.234226 = std::move<hash_map<tree_node*, pthread_attr_array>::hash_entry&> (x);
  D.234200 = q;
  D.234201 = operator new (32, D.234200);
  MEM[(struct value_type *)D.234201] = *D.234226;

  <bb 17> :
  p = p + 32;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10048, decl_uid=194765, cgraph_uid=6680, symbol_order=7473)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.249808;

  <bb 2> :
  D.249808 = this->m_size;

  <bb 3> :
<L0>:
  return D.249808;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10049, decl_uid=194767, cgraph_uid=6681, symbol_order=7474)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.249810;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.249810 = _1 - _2;

  <bb 3> :
<L0>:
  return D.249810;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10050, decl_uid=194867, cgraph_uid=6682, symbol_order=7475)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.694;
  bool D.249812;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.694 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.694 = 0;

  <bb 6> :
  D.249812 = iftmp.694;

  <bb 7> :
<L4>:
  return D.249812;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9393, decl_uid=194857, cgraph_uid=6025, symbol_order=6814)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.249834;
  struct value_type * D.249833;
  struct mem_alloc_description & D.249832;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.249830;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.249833 = xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_alloc (n);
  nentries = D.249833;
  goto <bb 6>; [INV]

  <bb 5> :
  D.249834 = ggc_cleared_vec_alloc<hash_map<tree_node*, pthread_attr_array>::hash_entry> (n);
  nentries = D.249834;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.249830 = nentries;

  <bb 9> :
<L14>:
  return D.249830;

}



;; Function xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10045, decl_uid=216759, cgraph_uid=6677, symbol_order=7470)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.249837;
  struct hash_entry * D.249835;

  <bb 2> :
  D.249837 = xcalloc (count, 32);
  D.249835 = D.249837;

  <bb 3> :
<L0>:
  return D.249835;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10046, decl_uid=234171, cgraph_uid=6678, symbol_order=7471)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, pthread_attr_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.249844;
  struct hash_entry * D.249843;
  struct hash_entry * D.249841;
  bool retval.695;

  <bb 2> :
  retval.695 = need_finalization_p<hash_map<tree_node*, pthread_attr_array>::hash_entry> ();
  if (retval.695 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 32;
  D.249843 = ggc_internal_cleared_alloc (_1, finalize, 32, c);
  D.249841 = D.249843;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 32;
  D.249844 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.249841 = D.249844;

  <bb 5> :
<L2>:
  return D.249841;

}



;; Function finalize<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10550, decl_uid=240023, cgraph_uid=7182, symbol_order=7975)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, pthread_attr_array>::hash_entry> (void * p)
{
  <bb 2> :
  MEM[(struct hash_entry *)p] = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10549, decl_uid=240022, cgraph_uid=7181, symbol_order=7974)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, pthread_attr_array>::hash_entry> ()
{
  bool D.249845;

  <bb 2> :
  D.249845 = 0;

  <bb 3> :
<L0>:
  return D.249845;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10052, decl_uid=194693, cgraph_uid=6684, symbol_order=7477)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, pthread_attr_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.249849;
  hashval_t D.249847;

  <bb 2> :
  _1 = &e->m_key;
  D.249849 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::hash (_1);
  D.249847 = D.249849;

  <bb 3> :
<L0>:
  return D.249847;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10051, decl_uid=194860, cgraph_uid=6683, symbol_order=7476)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.249862;
  bool D.249861;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.697;
  struct value_type * D.249853;
  bool retval.696;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 32;
  slot = _2 + _4;
  D.249861 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.696 = D.249861;
  if (retval.696 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.249853 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 32;
  slot = _8 + _10;
  D.249862 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.697 = D.249862;
  if (retval.697 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.249853 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.249853;

}



;; Function std::move<hash_map<tree_node*, pthread_attr_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10053, decl_uid=234198, cgraph_uid=6685, symbol_order=7478)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, pthread_attr_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.249863;

  <bb 2> :
  D.249863 = __t;

  <bb 3> :
<L0>:
  return D.249863;

}



;; Function xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8912, decl_uid=216761, cgraph_uid=5544, symbol_order=6333)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9396, decl_uid=194878, cgraph_uid=6028, symbol_order=6817)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, pthread_attr_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10054, decl_uid=194705, cgraph_uid=6686, symbol_order=7479)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, pthread_attr_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::mark_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::mark_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10551, decl_uid=240049, cgraph_uid=7183, symbol_order=7976)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::mark_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function collect_FunctionMapping_Assign (_Z30collect_FunctionMapping_AssignP6gimpleP11cgraph_nodeP15basic_block_defP3ptb, funcdef_no=6358, decl_uid=186994, cgraph_uid=3379, symbol_order=4155)

Removing basic block 15
Removing basic block 29
Removing basic block 49
Removing basic block 60
Removing basic block 61
Removing basic block 80
Removing basic block 93
Removing basic block 107
Removing basic block 122
Removing basic block 135
Removing basic block 161
Removing basic block 181
Removing basic block 192
Removing basic block 194
Removing basic block 206
Removing basic block 211
Removing basic block 222
Removing basic block 223
Removing basic block 224
Removing basic block 232
Removing basic block 236
Removing basic block 237
Removing basic block 238
Merging blocks 242 and 255
Removing basic block 247
Merging blocks 254 and 256
Removing basic block 260
Removing basic block 261
Merging blocks 270 and 572
Removing basic block 279
Removing basic block 289
Removing basic block 294
Removing basic block 304
Removing basic block 310
Removing basic block 320
Removing basic block 327
Removing basic block 347
Removing basic block 358
Removing basic block 359
Removing basic block 360
Removing basic block 362
Removing basic block 369
Removing basic block 378
Removing basic block 383
Removing basic block 396
Removing basic block 402
Removing basic block 408
Removing basic block 429
Removing basic block 440
Removing basic block 441
Removing basic block 442
Removing basic block 443
Removing basic block 448
Removing basic block 468
Removing basic block 479
Removing basic block 480
Removing basic block 481
Removing basic block 482
Removing basic block 483
Removing basic block 484
Removing basic block 485
Removing basic block 491
Removing basic block 499
Removing basic block 501
Removing basic block 514
Removing basic block 525
Removing basic block 526
Removing basic block 527
Removing basic block 528
Removing basic block 533
Removing basic block 541
Removing basic block 547
Removing basic block 555
Removing basic block 562
Merging blocks 571 and 573
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 4
;;  header 214, latch 213
;;  depth 1, outer 0
;;  nodes: 214 213 210 212 211 209 215
;;
;; Loop 3
;;  header 193, latch 192
;;  depth 1, outer 0
;;  nodes: 193 192 186 191 188 187 190 189 185
;;
;; Loop 2
;;  header 160, latch 159
;;  depth 1, outer 0
;;  nodes: 160 159 141 158 157 156 155 154 150 153 152 151 149 148 145 147 146 143 142 144 139 140 138 137 136 135 161
;;
;; Loop 1
;;  header 357, latch 356
;;  depth 1, outer 0
;;  nodes: 357 356 354 355 353 349 352 350 351
;; 2 succs { 3 234 }
;; 3 succs { 4 5 }
;; 4 succs { 499 }
;; 5 succs { 6 499 }
;; 6 succs { 7 499 }
;; 7 succs { 10 8 }
;; 8 succs { 10 9 }
;; 9 succs { 10 60 }
;; 10 succs { 11 23 }
;; 11 succs { 503 12 }
;; 12 succs { 500 13 }
;; 13 succs { 14 15 }
;; 14 succs { 500 18 }
;; 15 succs { 500 16 }
;; 16 succs { 500 17 }
;; 17 succs { 500 18 }
;; 18 succs { 500 19 }
;; 19 succs { 500 20 }
;; 20 succs { 500 21 }
;; 21 succs { 500 22 }
;; 22 succs { 59 }
;; 23 succs { 24 59 }
;; 24 succs { 513 25 }
;; 25 succs { 511 26 }
;; 26 succs { 27 28 }
;; 27 succs { 511 31 }
;; 28 succs { 511 29 }
;; 29 succs { 511 30 }
;; 30 succs { 511 31 }
;; 31 succs { 511 32 }
;; 32 succs { 511 33 }
;; 33 succs { 511 34 }
;; 34 succs { 511 35 }
;; 35 succs { 36 58 }
;; 36 succs { 508 37 }
;; 37 succs { 38 57 }
;; 38 succs { 39 57 }
;; 39 succs { 508 40 }
;; 40 succs { 41 57 }
;; 41 succs { 507 42 }
;; 42 succs { 507 43 }
;; 43 succs { 507 44 }
;; 44 succs { 504 45 }
;; 45 succs { 46 47 }
;; 46 succs { 507 51 }
;; 47 succs { 507 48 }
;; 48 succs { 505 49 }
;; 49 succs { 505 50 }
;; 50 succs { 507 51 }
;; 51 succs { 507 52 }
;; 52 succs { 507 53 }
;; 53 succs { 507 54 }
;; 54 succs { 507 55 }
;; 55 succs { 506 56 }
;; 56 succs { 57 }
;; 57 succs { 58 }
;; 58 succs { 59 }
;; 59 succs { 233 }
;; 60 succs { 61 69 }
;; 61 succs { 516 62 }
;; 62 succs { 63 68 }
;; 63 succs { 514 64 }
;; 64 succs { 514 65 }
;; 65 succs { 514 66 }
;; 66 succs { 514 67 }
;; 67 succs { 68 }
;; 68 succs { 233 }
;; 69 succs { 71 70 }
;; 70 succs { 71 82 }
;; 71 succs { 518 72 }
;; 72 succs { 518 73 }
;; 73 succs { 74 75 }
;; 74 succs { 518 77 }
;; 75 succs { 518 76 }
;; 76 succs { 518 77 }
;; 77 succs { 518 78 }
;; 78 succs { 518 79 }
;; 79 succs { 518 80 }
;; 80 succs { 518 81 }
;; 81 succs { 233 }
;; 82 succs { 83 109 }
;; 83 succs { 524 84 }
;; 84 succs { 522 85 }
;; 85 succs { 86 87 }
;; 86 succs { 522 90 }
;; 87 succs { 522 88 }
;; 88 succs { 522 89 }
;; 89 succs { 522 90 }
;; 90 succs { 522 91 }
;; 91 succs { 522 92 }
;; 92 succs { 522 93 }
;; 93 succs { 522 94 }
;; 94 succs { 522 95 }
;; 95 succs { 96 108 }
;; 96 succs { 521 97 }
;; 97 succs { 521 98 }
;; 98 succs { 99 100 }
;; 99 succs { 521 103 }
;; 100 succs { 521 101 }
;; 101 succs { 521 102 }
;; 102 succs { 521 103 }
;; 103 succs { 521 104 }
;; 104 succs { 521 105 }
;; 105 succs { 521 106 }
;; 106 succs { 521 107 }
;; 107 succs { 108 }
;; 108 succs { 233 }
;; 109 succs { 110 121 }
;; 110 succs { 527 111 }
;; 111 succs { 525 112 }
;; 112 succs { 113 114 }
;; 113 succs { 525 117 }
;; 114 succs { 525 115 }
;; 115 succs { 525 116 }
;; 116 succs { 525 117 }
;; 117 succs { 525 118 }
;; 118 succs { 525 119 }
;; 119 succs { 525 120 }
;; 120 succs { 233 }
;; 121 succs { 122 133 }
;; 122 succs { 530 123 }
;; 123 succs { 528 124 }
;; 124 succs { 125 126 }
;; 125 succs { 528 129 }
;; 126 succs { 528 127 }
;; 127 succs { 528 128 }
;; 128 succs { 528 129 }
;; 129 succs { 528 130 }
;; 130 succs { 528 131 }
;; 131 succs { 528 132 }
;; 132 succs { 233 }
;; 133 succs { 543 134 }
;; 134 succs { 160 }
;; 135 succs { 534 136 }
;; 136 succs { 139 137 }
;; 137 succs { 534 138 }
;; 138 succs { 139 140 }
;; 139 succs { 141 }
;; 140 succs { 141 }
;; 141 succs { 142 159 }
;; 142 succs { 533 143 }
;; 143 succs { 144 146 }
;; 144 succs { 533 145 }
;; 145 succs { 148 }
;; 146 succs { 533 147 }
;; 147 succs { 148 }
;; 148 succs { 531 149 }
;; 149 succs { 150 151 }
;; 150 succs { 531 154 }
;; 151 succs { 531 152 }
;; 152 succs { 531 153 }
;; 153 succs { 531 154 }
;; 154 succs { 531 155 }
;; 155 succs { 531 156 }
;; 156 succs { 531 157 }
;; 157 succs { 531 158 }
;; 158 succs { 159 }
;; 159 succs { 160 }
;; 160 succs { 543 161 }
;; 161 succs { 135 162 }
;; 162 succs { 543 163 }
;; 163 succs { 164 181 }
;; 164 succs { 543 165 }
;; 165 succs { 166 181 }
;; 166 succs { 537 167 }
;; 167 succs { 535 168 }
;; 168 succs { 169 170 }
;; 169 succs { 537 174 }
;; 170 succs { 537 171 }
;; 171 succs { 536 172 }
;; 172 succs { 536 173 }
;; 173 succs { 537 174 }
;; 174 succs { 537 175 }
;; 175 succs { 537 176 }
;; 176 succs { 537 177 }
;; 177 succs { 537 178 }
;; 178 succs { 179 180 }
;; 179 succs { 537 180 }
;; 180 succs { 181 }
;; 181 succs { 543 182 }
;; 182 succs { 183 216 }
;; 183 succs { 184 196 }
;; 184 succs { 193 }
;; 185 succs { 543 186 }
;; 186 succs { 187 192 }
;; 187 succs { 543 188 }
;; 188 succs { 189 192 }
;; 189 succs { 543 190 }
;; 190 succs { 543 191 }
;; 191 succs { 192 }
;; 192 succs { 193 }
;; 193 succs { 185 194 }
;; 194 succs { 195 196 }
;; 195 succs { 232 }
;; 196 succs { 543 197 }
;; 197 succs { 543 198 }
;; 198 succs { 199 216 }
;; 199 succs { 200 206 }
;; 200 succs { 543 201 }
;; 201 succs { 202 206 }
;; 202 succs { 543 203 }
;; 203 succs { 204 206 }
;; 204 succs { 543 205 }
;; 205 succs { 543 206 }
;; 206 succs { 543 207 }
;; 207 succs { 208 216 }
;; 208 succs { 214 }
;; 209 succs { 543 210 }
;; 210 succs { 211 213 }
;; 211 succs { 543 212 }
;; 212 succs { 543 213 }
;; 213 succs { 214 }
;; 214 succs { 543 215 }
;; 215 succs { 209 216 }
;; 216 succs { 217 231 }
;; 217 succs { 542 218 }
;; 218 succs { 219 220 }
;; 219 succs { 232 }
;; 220 succs { 542 221 }
;; 221 succs { 540 222 }
;; 222 succs { 223 224 }
;; 223 succs { 540 227 }
;; 224 succs { 540 225 }
;; 225 succs { 540 226 }
;; 226 succs { 540 227 }
;; 227 succs { 540 228 }
;; 228 succs { 540 229 }
;; 229 succs { 540 230 }
;; 230 succs { 231 }
;; 231 succs { 233 }
;; 232 succs { 499 }
;; 233 succs { 499 }
;; 234 succs { 235 499 }
;; 235 succs { 607 236 }
;; 236 succs { 239 237 }
;; 237 succs { 607 238 }
;; 238 succs { 239 240 }
;; 239 succs { 241 }
;; 240 succs { 241 }
;; 241 succs { 242 243 }
;; 242 succs { 499 }
;; 243 succs { 607 244 }
;; 244 succs { 607 245 }
;; 245 succs { 246 273 }
;; 246 succs { 247 260 }
;; 247 succs { 248 498 }
;; 248 succs { 544 249 }
;; 249 succs { 250 251 }
;; 250 succs { 544 254 }
;; 251 succs { 544 252 }
;; 252 succs { 544 253 }
;; 253 succs { 544 254 }
;; 254 succs { 544 255 }
;; 255 succs { 544 256 }
;; 256 succs { 544 257 }
;; 257 succs { 544 258 }
;; 258 succs { 544 259 }
;; 259 succs { 498 }
;; 260 succs { 261 498 }
;; 261 succs { 547 262 }
;; 262 succs { 263 264 }
;; 263 succs { 547 267 }
;; 264 succs { 547 265 }
;; 265 succs { 547 266 }
;; 266 succs { 547 267 }
;; 267 succs { 547 268 }
;; 268 succs { 547 269 }
;; 269 succs { 547 270 }
;; 270 succs { 547 271 }
;; 271 succs { 547 272 }
;; 272 succs { 498 }
;; 273 succs { 274 287 }
;; 274 succs { 275 498 }
;; 275 succs { 550 276 }
;; 276 succs { 277 278 }
;; 277 succs { 550 281 }
;; 278 succs { 550 279 }
;; 279 succs { 550 280 }
;; 280 succs { 550 281 }
;; 281 succs { 550 282 }
;; 282 succs { 550 283 }
;; 283 succs { 550 284 }
;; 284 succs { 550 285 }
;; 285 succs { 550 286 }
;; 286 succs { 498 }
;; 287 succs { 288 323 }
;; 288 succs { 607 289 }
;; 289 succs { 290 301 }
;; 290 succs { 553 291 }
;; 291 succs { 292 293 }
;; 292 succs { 553 296 }
;; 293 succs { 553 294 }
;; 294 succs { 553 295 }
;; 295 succs { 553 296 }
;; 296 succs { 553 297 }
;; 297 succs { 553 298 }
;; 298 succs { 553 299 }
;; 299 succs { 553 300 }
;; 300 succs { 301 }
;; 301 succs { 302 498 }
;; 302 succs { 562 303 }
;; 303 succs { 304 322 }
;; 304 succs { 305 322 }
;; 305 succs { 306 322 }
;; 306 succs { 560 307 }
;; 307 succs { 308 322 }
;; 308 succs { 559 309 }
;; 309 succs { 556 310 }
;; 310 succs { 311 312 }
;; 311 succs { 559 316 }
;; 312 succs { 559 313 }
;; 313 succs { 557 314 }
;; 314 succs { 557 315 }
;; 315 succs { 559 316 }
;; 316 succs { 559 317 }
;; 317 succs { 559 318 }
;; 318 succs { 559 319 }
;; 319 succs { 559 320 }
;; 320 succs { 558 321 }
;; 321 succs { 322 }
;; 322 succs { 498 }
;; 323 succs { 324 439 }
;; 324 succs { 325 337 }
;; 325 succs { 326 498 }
;; 326 succs { 563 327 }
;; 327 succs { 328 329 }
;; 328 succs { 563 332 }
;; 329 succs { 563 330 }
;; 330 succs { 563 331 }
;; 331 succs { 563 332 }
;; 332 succs { 563 333 }
;; 333 succs { 563 334 }
;; 334 succs { 563 335 }
;; 335 succs { 563 336 }
;; 336 succs { 498 }
;; 337 succs { 338 359 }
;; 338 succs { 566 339 }
;; 339 succs { 340 341 }
;; 340 succs { 566 344 }
;; 341 succs { 566 342 }
;; 342 succs { 566 343 }
;; 343 succs { 566 344 }
;; 344 succs { 345 358 }
;; 345 succs { 346 347 }
;; 346 succs { 348 }
;; 347 succs { 348 }
;; 348 succs { 357 }
;; 349 succs { 350 353 }
;; 350 succs { 351 353 }
;; 351 succs { 566 352 }
;; 352 succs { 353 }
;; 353 succs { 354 355 }
;; 354 succs { 356 }
;; 355 succs { 356 }
;; 356 succs { 357 }
;; 357 succs { 349 358 }
;; 358 succs { 498 }
;; 359 succs { 360 371 }
;; 360 succs { 569 361 }
;; 361 succs { 362 363 }
;; 362 succs { 569 366 }
;; 363 succs { 569 364 }
;; 364 succs { 569 365 }
;; 365 succs { 569 366 }
;; 366 succs { 569 367 }
;; 367 succs { 569 368 }
;; 368 succs { 569 369 }
;; 369 succs { 569 370 }
;; 370 succs { 498 }
;; 371 succs { 372 498 }
;; 372 succs { 373 426 }
;; 373 succs { 374 393 }
;; 374 succs { 375 426 }
;; 375 succs { 376 426 }
;; 376 succs { 377 426 }
;; 377 succs { 590 378 }
;; 378 succs { 379 426 }
;; 379 succs { 575 380 }
;; 380 succs { 572 381 }
;; 381 succs { 382 383 }
;; 382 succs { 575 387 }
;; 383 succs { 575 384 }
;; 384 succs { 573 385 }
;; 385 succs { 573 386 }
;; 386 succs { 575 387 }
;; 387 succs { 575 388 }
;; 388 succs { 575 389 }
;; 389 succs { 575 390 }
;; 390 succs { 575 391 }
;; 391 succs { 574 392 }
;; 392 succs { 426 }
;; 393 succs { 394 404 }
;; 394 succs { 578 395 }
;; 395 succs { 396 397 }
;; 396 succs { 578 400 }
;; 397 succs { 578 398 }
;; 398 succs { 578 399 }
;; 399 succs { 578 400 }
;; 400 succs { 578 401 }
;; 401 succs { 578 402 }
;; 402 succs { 578 403 }
;; 403 succs { 426 }
;; 404 succs { 405 426 }
;; 405 succs { 406 426 }
;; 406 succs { 407 426 }
;; 407 succs { 408 426 }
;; 408 succs { 409 426 }
;; 409 succs { 410 426 }
;; 410 succs { 590 411 }
;; 411 succs { 412 426 }
;; 412 succs { 584 413 }
;; 413 succs { 581 414 }
;; 414 succs { 415 416 }
;; 415 succs { 584 420 }
;; 416 succs { 584 417 }
;; 417 succs { 582 418 }
;; 418 succs { 582 419 }
;; 419 succs { 584 420 }
;; 420 succs { 584 421 }
;; 421 succs { 584 422 }
;; 422 succs { 584 423 }
;; 423 succs { 584 424 }
;; 424 succs { 583 425 }
;; 425 succs { 426 }
;; 426 succs { 427 438 }
;; 427 succs { 428 438 }
;; 428 succs { 587 429 }
;; 429 succs { 430 431 }
;; 430 succs { 587 434 }
;; 431 succs { 587 432 }
;; 432 succs { 587 433 }
;; 433 succs { 587 434 }
;; 434 succs { 587 435 }
;; 435 succs { 587 436 }
;; 436 succs { 587 437 }
;; 437 succs { 438 }
;; 438 succs { 498 }
;; 439 succs { 440 485 }
;; 440 succs { 441 472 }
;; 441 succs { 442 461 }
;; 442 succs { 443 472 }
;; 443 succs { 444 472 }
;; 444 succs { 445 472 }
;; 445 succs { 603 446 }
;; 446 succs { 447 472 }
;; 447 succs { 594 448 }
;; 448 succs { 591 449 }
;; 449 succs { 450 451 }
;; 450 succs { 594 455 }
;; 451 succs { 594 452 }
;; 452 succs { 592 453 }
;; 453 succs { 592 454 }
;; 454 succs { 594 455 }
;; 455 succs { 594 456 }
;; 456 succs { 594 457 }
;; 457 succs { 594 458 }
;; 458 succs { 594 459 }
;; 459 succs { 593 460 }
;; 460 succs { 472 }
;; 461 succs { 462 472 }
;; 462 succs { 597 463 }
;; 463 succs { 464 465 }
;; 464 succs { 597 468 }
;; 465 succs { 597 466 }
;; 466 succs { 597 467 }
;; 467 succs { 597 468 }
;; 468 succs { 597 469 }
;; 469 succs { 597 470 }
;; 470 succs { 597 471 }
;; 471 succs { 472 }
;; 472 succs { 473 484 }
;; 473 succs { 474 484 }
;; 474 succs { 600 475 }
;; 475 succs { 476 477 }
;; 476 succs { 600 480 }
;; 477 succs { 600 478 }
;; 478 succs { 600 479 }
;; 479 succs { 600 480 }
;; 480 succs { 600 481 }
;; 481 succs { 600 482 }
;; 482 succs { 600 483 }
;; 483 succs { 484 }
;; 484 succs { 498 }
;; 485 succs { 486 498 }
;; 486 succs { 606 487 }
;; 487 succs { 604 488 }
;; 488 succs { 489 490 }
;; 489 succs { 604 493 }
;; 490 succs { 604 491 }
;; 491 succs { 604 492 }
;; 492 succs { 604 493 }
;; 493 succs { 604 494 }
;; 494 succs { 604 495 }
;; 495 succs { 604 496 }
;; 496 succs { 604 497 }
;; 497 succs { 498 }
;; 498 succs { 499 }
;; 499 succs { 1 }
;; 500 succs { 501 }
;; 501 succs { 502 }
;; 502 succs { 503 }
;; 503 succs { }
;; 504 succs { 507 }
;; 505 succs { 507 }
;; 506 succs { 507 }
;; 507 succs { 508 }
;; 508 succs { 509 }
;; 509 succs { 510 }
;; 510 succs { 511 }
;; 511 succs { 512 }
;; 512 succs { 513 }
;; 513 succs { }
;; 514 succs { 515 }
;; 515 succs { 516 }
;; 516 succs { 517 }
;; 517 succs { }
;; 518 succs { 519 }
;; 519 succs { 520 }
;; 520 succs { }
;; 521 succs { 522 }
;; 522 succs { 523 }
;; 523 succs { 524 }
;; 524 succs { }
;; 525 succs { 526 }
;; 526 succs { 527 }
;; 527 succs { }
;; 528 succs { 529 }
;; 529 succs { 530 }
;; 530 succs { }
;; 531 succs { 532 }
;; 532 succs { 533 }
;; 533 succs { 534 }
;; 534 succs { 543 }
;; 535 succs { 537 }
;; 536 succs { 537 }
;; 537 succs { 538 }
;; 538 succs { 539 }
;; 539 succs { 543 }
;; 540 succs { 541 }
;; 541 succs { 542 }
;; 542 succs { 543 }
;; 543 succs { }
;; 544 succs { 545 }
;; 545 succs { 546 }
;; 546 succs { 607 }
;; 547 succs { 548 }
;; 548 succs { 549 }
;; 549 succs { 607 }
;; 550 succs { 551 }
;; 551 succs { 552 }
;; 552 succs { 607 }
;; 553 succs { 554 }
;; 554 succs { 555 }
;; 555 succs { 607 }
;; 556 succs { 559 }
;; 557 succs { 559 }
;; 558 succs { 559 }
;; 559 succs { 560 }
;; 560 succs { 561 }
;; 561 succs { 562 }
;; 562 succs { 607 }
;; 563 succs { 564 }
;; 564 succs { 565 }
;; 565 succs { 607 }
;; 566 succs { 567 }
;; 567 succs { 568 }
;; 568 succs { 607 }
;; 569 succs { 570 }
;; 570 succs { 571 }
;; 571 succs { 607 }
;; 572 succs { 575 }
;; 573 succs { 575 }
;; 574 succs { 575 }
;; 575 succs { 576 }
;; 576 succs { 577 }
;; 577 succs { 590 }
;; 578 succs { 579 }
;; 579 succs { 580 }
;; 580 succs { 590 }
;; 581 succs { 584 }
;; 582 succs { 584 }
;; 583 succs { 584 }
;; 584 succs { 585 }
;; 585 succs { 586 }
;; 586 succs { 590 }
;; 587 succs { 588 }
;; 588 succs { 589 }
;; 589 succs { 590 }
;; 590 succs { 607 }
;; 591 succs { 594 }
;; 592 succs { 594 }
;; 593 succs { 594 }
;; 594 succs { 595 }
;; 595 succs { 596 }
;; 596 succs { 603 }
;; 597 succs { 598 }
;; 598 succs { 599 }
;; 599 succs { 603 }
;; 600 succs { 601 }
;; 601 succs { 602 }
;; 602 succs { 603 }
;; 603 succs { 607 }
;; 604 succs { 605 }
;; 605 succs { 606 }
;; 606 succs { 607 }
;; 607 succs { }
void collect_FunctionMapping_Assign (struct gimple * gc, struct cgraph_node * node, struct basic_block_def * bb, struct ptb * ptable)
{
  struct function * D.250561;
  union tree_node * D.250560;
  struct function_assign_array * D.250559;
  struct function_assign_array * D.250558;
  struct function * D.250553;
  struct function_assign_array * D.250552;
  struct function_assign_array * D.250551;
  struct function * D.250547;
  struct function_assign_array * D.250546;
  struct function_assign_array * D.250545;
  union tree_node * D.250540;
  struct function * D.250539;
  union tree_node * D.250538;
  struct function_assign_array * D.250536;
  union tree_node * D.250535;
  struct function_assign_array * D.250533;
  union tree_node * D.250532;
  union tree_node * D.250531;
  struct function * D.250526;
  struct function_assign_array * D.250525;
  struct function_assign_array * D.250524;
  union tree_node * D.250519;
  struct function * D.250518;
  union tree_node * D.250517;
  struct function_assign_array * D.250515;
  union tree_node * D.250514;
  struct function_assign_array * D.250512;
  union tree_node * D.250511;
  union tree_node * D.250510;
  struct function * D.250506;
  struct function_assign_array * D.250505;
  struct function_assign_array * D.250504;
  union tree_node * D.250499;
  struct function * D.250498;
  union tree_node * D.250497;
  struct function_assign_array * D.250495;
  union tree_node * D.250494;
  struct function_assign_array * D.250492;
  union tree_node * D.250491;
  union tree_node * D.250490;
  struct function * D.250486;
  union tree_node * D.250485;
  struct function_assign_array * D.250484;
  struct function_assign_array * D.250483;
  struct function * D.250479;
  struct function_assign_array * D.250478;
  struct function_assign_array * D.250477;
  struct function * D.250473;
  union tree_node * D.250472;
  struct function_assign_array * D.250471;
  struct function_assign_array * D.250470;
  union tree_node * D.250464;
  struct function * D.250463;
  union tree_node * D.250462;
  struct function_assign_array * D.250460;
  union tree_node * D.250459;
  struct function_assign_array * D.250457;
  union tree_node * D.250456;
  union tree_node * D.250455;
  union tree_node * D.250454;
  struct function * D.250450;
  union tree_node * D.250449;
  struct function_assign_array * D.250448;
  struct function_assign_array * D.250447;
  union tree_node * D.250446;
  struct function * D.250442;
  union tree_node * D.250441;
  union tree_node * D.250440;
  struct function_assign_array * D.250439;
  struct function_assign_array * D.250438;
  struct function * D.250434;
  union tree_node * D.250433;
  union tree_node * D.250432;
  struct function_assign_array * D.250431;
  struct function_assign_array * D.250430;
  struct function * D.250426;
  union tree_node * D.250425;
  union tree_node * D.250424;
  struct function_assign_array * D.250423;
  struct function_assign_array * D.250422;
  union tree_node * D.250421;
  union tree_node * D.250420;
  union tree_node * D.250419;
  union tree_node * D.250418;
  struct function * D.250409;
  struct function_return_array * D.250408;
  struct function_return_array * D.250407;
  struct function * D.250406;
  struct function_return_array * D.250405;
  unsigned int D.250404;
  union tree_node * D.250403;
  union tree_node * D.250402;
  unsigned int D.250401;
  union tree_node * D.250400;
  union tree_node * D.250399;
  union tree_node * D.250398;
  const char * D.250397;
  union tree_node * D.250396;
  union tree_node * D.250395;
  union tree_node * D.250391;
  struct function * D.250390;
  union tree_node * D.250389;
  struct function_assign_array * D.250387;
  union tree_node * D.250386;
  struct function_assign_array * D.250384;
  union tree_node * D.250383;
  union tree_node * D.250382;
  unsigned int D.250381;
  unsigned int D.250380;
  struct function * D.250375;
  union tree_node * D.250374;
  struct function_assign_array * D.250373;
  struct function_assign_array * D.250372;
  union tree_node * D.250371;
  union tree_node * D.250370;
  union tree_node * D.250369;
  union tree_node * D.250368;
  union tree_node * D.250367;
  union tree_node * D.250363;
  struct function_pthread_exit_array * D.250362;
  struct function_pthread_exit_array * D.250361;
  struct function * D.250360;
  union tree_node * D.250356;
  struct function_pthread_detched_array * D.250355;
  struct function_pthread_detched_array * D.250354;
  struct function * D.250353;
  struct function * D.250348;
  union tree_node * D.250347;
  struct function_assign_array * D.250346;
  struct function_assign_array * D.250345;
  union tree_node * D.250344;
  union tree_node * D.250343;
  struct function * D.250342;
  union tree_node * D.250341;
  struct function_assign_array * D.250340;
  struct function_assign_array * D.250339;
  union tree_node * D.250338;
  struct function * D.250334;
  union tree_node * D.250333;
  struct function_return_array * D.250332;
  struct function_return_array * D.250331;
  struct function * D.250330;
  struct function * D.250325;
  union tree_node * D.250324;
  union tree_node * D.250315;
  struct function * D.250314;
  union tree_node * D.250313;
  struct function_assign_array * D.250311;
  union tree_node * D.250310;
  struct function_assign_array * D.250308;
  union tree_node * D.250307;
  union tree_node * D.250306;
  union tree_node * D.250305;
  union tree_node * D.250304;
  union tree_node * D.250303;
  union tree_node * D.250302;
  struct function_free_array * D.250301;
  struct function_free_array * D.250300;
  struct function * D.250299;
  union tree_node * D.250298;
  struct function * D.250293;
  union tree_node * D.250292;
  struct function_assign_array * D.250291;
  struct function_assign_array * D.250290;
  union tree_node * D.250289;
  union tree_node * D.250288;
  union tree_node * D.250287;
  const char * D.250286;
  union tree_node * D.250285;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second2;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct gimple * def_stmt;
  union tree_node * four;
  union tree_node * three;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second2;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  union tree_node * second;
  union tree_node * t2;
  struct ptb * table1;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  union tree_node * first;
  struct assign_type assign_type;
  struct gimple * def_stmt;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  union tree_node * first;
  struct assign_type assign_type;
  union tree_node * function_return_lhstree;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  union tree_node * function_return_lhstree;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  union tree_node * function_return_lhstree;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  union tree_node * getFunctionAssignLHS;
  union tree_node * getFunctionAssignRHS;
  struct return_type ret_type;
  struct function_return_array fun_array;
  struct vector ret_type_array;
  union tree_node * getFucntionDecl;
  int i;
  size_t found;
  int i;
  int find;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * getVARDECLtree;
  int i;
  union tree_node * getreturnFucntionDecl;
  union tree_node * checklhstree;
  union tree_node * getVARDECLtree;
  struct pthread_exit_type pthread_exit_type;
  struct vector pthread_exit_array;
  struct function_pthread_exit_array fun_array;
  union tree_node * getFucntionDecl;
  struct pthread_detched_type pthread_detched_type;
  struct vector pthread_detched_array;
  struct function_pthread_detched_array fun_array;
  union tree_node * getFucntionDecl;
  struct assign_type assign_type;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * getFunctionAssignRHS;
  struct return_type ret_type;
  union tree_node * getFucntionDecl;
  struct vector ret_type_array;
  struct function_return_array fun_array;
  struct return_type ret_type;
  struct vector ret_type_array;
  union tree_node * get_function_arg_tree;
  struct function_return_array fun_array;
  struct assign_type assign_type;
  struct gimple * def_stmt;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct free_type free_type;
  struct function_free_array fun_array;
  struct vector free_type_array;
  union tree_node * getFucntionDecl;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  union tree_node * get_function_return_tree;
  const char * name;
  struct cgraph_node * node2;
  union tree_node * a;
  location_t loc;
  bool retval.903;
  bool retval.896;
  bool retval.889;
  union tree_node * const D.195723;
  union tree_node * const D.195721;
  union tree_node * const D.195720;
  bool retval.884;
  bool retval.883;
  bool retval.882;
  bool retval.871;
  union tree_node * const D.195710;
  union tree_node * const D.195708;
  union tree_node * const D.195707;
  bool retval.865;
  bool retval.864;
  bool retval.863;
  bool retval.855;
  union tree_node * const D.195698;
  union tree_node * const D.195696;
  union tree_node * const D.195695;
  bool retval.850;
  bool retval.849;
  bool retval.848;
  bool retval.838;
  union tree_node * iftmp.835;
  union tree_node * iftmp.830;
  bool retval.827;
  bool retval.822;
  union tree_node * const D.195673;
  union tree_node * const D.195671;
  union tree_node * const D.195670;
  bool retval.815;
  bool retval.814;
  bool retval.813;
  bool retval.808;
  bool retval.803;
  bool retval.797;
  bool retval.792;
  bool iftmp.788;
  bool retval.787;
  bool retval.786;
  bool retval.781;
  bool retval.779;
  bool retval.776;
  bool retval.773;
  bool retval.772;
  bool retval.771;
  bool retval.770;
  bool retval.769;
  bool retval.768;
  struct expanded_location D.195639;
  bool retval.766;
  struct expanded_location D.195636;
  bool retval.764;
  union tree_node * const D.195629;
  union tree_node * const D.195628;
  bool retval.759;
  bool retval.758;
  bool retval.757;
  bool retval.755;
  bool retval.750;
  bool retval.746;
  bool iftmp.743;
  bool retval.742;
  bool retval.738;
  bool retval.734;
  bool retval.730;
  bool retval.728;
  bool retval.724;
  bool retval.717;
  union tree_node * const D.195220;
  union tree_node * const D.195218;
  union tree_node * const D.195217;
  bool retval.712;
  bool retval.711;
  bool retval.710;
  bool retval.709;
  bool retval.705;
  bool retval.704;
  bool retval.700;
  bool retval.699;
  bool retval.698;

  <bb 2> :
  loc = gimple_location_safe (gc);
  _1 = gimple_code (gc);
  retval.698 = _1 == 8;
  if (retval.698 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 234>; [INV]

  <bb 3> :
  D.250285 = gimple_call_fn (gc);
  _2 = D.250285;
  D.250286 = get_name (_2);
  name = D.250286;
  D.250287 = gimple_call_fn (gc);
  get_function_return_tree = D.250287;
  _3 = get_function_return_tree->base.code;
  if (_3 == 153)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 499>; [INV]

  <bb 5> :
  if (name != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 499>; [INV]

  <bb 6> :
  _4 = strcmp (name, "printf");
  if (_4 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 499>; [INV]

  <bb 7> :
  _5 = strcmp (name, "free");
  if (_5 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _6 = strcmp (name, "xfree");
  if (_6 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _7 = strcmp (name, "realloc");
  if (_7 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 10> :
  D.250288 = gimple_call_arg (gc, 0);
  _8 = D.250288;
  _9 = _8->base.code;
  retval.699 = _9 == 131;
  if (retval.699 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 11> :
  D.250289 = gimple_call_arg (gc, 0);

  <bb 12> :
  _10 = D.250289;
  _11 = _10->exp.operands[0];
  second = _11;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.701_12 = function_assign_collect;
  D.250290 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.701_12, &second);

  <bb 13> :
  _13 = D.250290;
  retval.700 = _13 == 0B;
  if (retval.700 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 18>; [INV]

  <bb 15> :
  function_assign_collect.702_14 = function_assign_collect;
  D.250291 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.702_14, &second);

  <bb 16> :
  _15 = D.250291;
  function_assign_array::operator= (&assign_array, _15);

  <bb 17> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 18> :
  assign_type.stmt = gc;
  D.250292 = gimple_call_arg (gc, 0);

  <bb 19> :
  _16 = D.250292;
  assign_type.assign_tree = _16;
  D.250293 = cgraph_node::get_fun (node);

  <bb 20> :
  _17 = D.250293;
  _18 = _17->decl;
  assign_type.form_tree = _18;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 21> :
  function_assign_collect.703_19 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.703_19, &second, &assign_array);

  <bb 22> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  second = {CLOBBER};
  goto <bb 59>; [INV]

  <bb 23> :
  D.250298 = gimple_call_arg (gc, 0);
  _20 = D.250298;
  _21 = _20->base.code;
  retval.704 = _21 == 153;
  if (retval.704 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 24> :
  D.250299 = cgraph_node::get_fun (node);

  <bb 25> :
  _22 = D.250299;
  _23 = _22->decl;
  getFucntionDecl = _23;
  std::vector<free_type>::vector (&free_type_array);
  function_free_array::function_free_array (&fun_array);
  function_free_collect.706_24 = function_free_collect;
  D.250300 = hash_map<tree_node*, function_free_array>::get (function_free_collect.706_24, &getFucntionDecl);

  <bb 26> :
  _25 = D.250300;
  retval.705 = _25 == 0B;
  if (retval.705 != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  std::vector<free_type>::operator= (&fun_array.free_type_array, &free_type_array);
  goto <bb 31>; [INV]

  <bb 28> :
  function_free_collect.707_26 = function_free_collect;
  D.250301 = hash_map<tree_node*, function_free_array>::get (function_free_collect.707_26, &getFucntionDecl);

  <bb 29> :
  _27 = D.250301;
  function_free_array::operator= (&fun_array, _27);

  <bb 30> :
  std::vector<free_type>::operator= (&free_type_array, &fun_array.free_type_array);

  <bb 31> :
  free_type::free_type (&free_type);
  free_type.stmt = gc;
  D.250302 = gimple_call_arg (gc, 0);

  <bb 32> :
  _28 = D.250302;
  free_type.free_tree = _28;
  std::vector<free_type>::push_back (&fun_array.free_type_array, &free_type);

  <bb 33> :
  function_free_collect.708_29 = function_free_collect;
  hash_map<tree_node*, function_free_array>::put (function_free_collect.708_29, &getFucntionDecl, &fun_array);

  <bb 34> :
  D.250303 = gimple_call_arg (gc, 0);

  <bb 35> :
  _30 = D.250303;
  _31 = _30->base.code;
  retval.709 = _31 == 153;
  if (retval.709 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 36> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  D.250304 = gimple_call_arg (gc, 0);

  <bb 37> :
  _32 = D.250304;
  def_stmt = _32->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 38>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 38> :
  retval.710 = is_gimple_assign (def_stmt);
  if (retval.710 != 0)
    goto <bb 39>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 39> :
  D.250305 = gimple_assign_rhs1 (def_stmt);

  <bb 40> :
  _33 = D.250305;
  _34 = _33->base.code;
  retval.711 = _34 == 36;
  if (retval.711 != 0)
    goto <bb 41>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 41> :
  D.250306 = gimple_assign_rhs1 (def_stmt);

  <bb 42> :
  _35 = D.250306;
  debug_tree (_35);

  <bb 43> :
  function_assign_collect.713_36 = function_assign_collect;
  D.250307 = gimple_assign_rhs1 (def_stmt);

  <bb 44> :
  _37 = D.250307;
  D.195217 = _37;
  D.250308 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.713_36, &D.195217);

  <bb 45> :
  _38 = D.250308;
  retval.712 = _38 == 0B;
  D.195217 = {CLOBBER};
  if (retval.712 != 0)
    goto <bb 46>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 46> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 51>; [INV]

  <bb 47> :
  function_assign_collect.714_39 = function_assign_collect;
  D.250310 = gimple_assign_rhs1 (def_stmt);

  <bb 48> :
  _40 = D.250310;
  D.195218 = _40;
  D.250311 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.714_39, &D.195218);

  <bb 49> :
  _41 = D.250311;
  function_assign_array::operator= (&assign_array, _41);

  <bb 50> :
  D.195218 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 51> :
  assign_type.stmt = gc;
  D.250313 = gimple_call_arg (gc, 0);

  <bb 52> :
  _42 = D.250313;
  assign_type.assign_tree = _42;
  D.250314 = cgraph_node::get_fun (node);

  <bb 53> :
  _43 = D.250314;
  _44 = _43->decl;
  assign_type.form_tree = _44;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 54> :
  function_assign_collect.715_45 = function_assign_collect;
  D.250315 = gimple_assign_rhs1 (def_stmt);

  <bb 55> :
  _46 = D.250315;
  D.195220 = _46;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.715_45, &D.195220, &assign_array);

  <bb 56> :
  D.195220 = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 57> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};

  <bb 58> :
  function_free_array::~function_free_array (&fun_array);
  std::vector<free_type>::~vector (&free_type_array);
  getFucntionDecl = {CLOBBER};
  free_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  free_type = {CLOBBER};

  <bb 59> :
  goto <bb 233>; [INV]

  <bb 60> :
  _47 = strcmp (name, "exit");
  if (_47 == 0)
    goto <bb 61>; [INV]
  else
    goto <bb 69>; [INV]

  <bb 61> :
  function_return_array::function_return_array (&fun_array);
  D.250324 = gimple_call_arg (gc, 0);

  <bb 62> :
  get_function_arg_tree = D.250324;
  std::vector<return_type>::vector (&ret_type_array);
  if (get_function_return_tree != 0B)
    goto <bb 63>; [INV]
  else
    goto <bb 68>; [INV]

  <bb 63> :
  return_type::return_type (&ret_type);
  ret_type.stmt = gc;
  ret_type.return_tree = get_function_return_tree;
  std::vector<return_type>::push_back (&global_ret_type_array, &ret_type);

  <bb 64> :
  std::vector<return_type>::push_back (&fun_array.return_type_array, &ret_type);

  <bb 65> :
  function_return_collect.716_48 = function_return_collect;
  D.250325 = cgraph_node::get_fun (node);

  <bb 66> :
  _49 = D.250325;
  _50 = &_49->decl;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.716_48, _50, &fun_array);

  <bb 67> :
  ret_type = {CLOBBER};

  <bb 68> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  goto <bb 233>; [INV]

  <bb 69> :
  _51 = strcmp (name, "pthread_mutex_lock");
  if (_51 == 0)
    goto <bb 71>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 70> :
  _52 = strcmp (name, "pthread_mutex_unlock");
  if (_52 == 0)
    goto <bb 71>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 71> :
  function_return_array::function_return_array (&fun_array);
  std::vector<return_type>::vector (&ret_type_array);
  D.250330 = cgraph_node::get_fun (node);

  <bb 72> :
  _53 = D.250330;
  _54 = _53->decl;
  getFucntionDecl = _54;
  function_return_collect.718_55 = function_return_collect;
  D.250331 = hash_map<tree_node*, function_return_array>::get (function_return_collect.718_55, &getFucntionDecl);

  <bb 73> :
  _56 = D.250331;
  retval.717 = _56 == 0B;
  if (retval.717 != 0)
    goto <bb 74>; [INV]
  else
    goto <bb 75>; [INV]

  <bb 74> :
  std::vector<return_type>::operator= (&fun_array.return_type_array, &ret_type_array);
  goto <bb 77>; [INV]

  <bb 75> :
  function_return_collect.719_57 = function_return_collect;
  D.250332 = hash_map<tree_node*, function_return_array>::get (function_return_collect.719_57, &getFucntionDecl);

  <bb 76> :
  _58 = D.250332;
  function_return_array::operator= (&fun_array, _58);

  <bb 77> :
  return_type::return_type (&ret_type);
  ret_type.stmt = gc;
  D.250333 = gimple_call_arg (gc, 0);

  <bb 78> :
  _59 = D.250333;
  ret_type.return_tree = _59;
  FUNCITON_THREAD.720_60 = FUNCITON_THREAD;
  FUNCITON_THREAD.721_61 = (int) FUNCITON_THREAD.720_60;
  ret_type.return_type_stmt_num = FUNCITON_THREAD.721_61;
  std::vector<return_type>::push_back (&fun_array.return_type_array, &ret_type);

  <bb 79> :
  function_return_collect.722_62 = function_return_collect;
  D.250334 = cgraph_node::get_fun (node);

  <bb 80> :
  _63 = D.250334;
  _64 = &_63->decl;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.722_62, _64, &fun_array);

  <bb 81> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};
  ret_type = {CLOBBER};
  goto <bb 233>; [INV]

  <bb 82> :
  _65 = strcmp (name, "pthread_create");
  if (_65 == 0)
    goto <bb 83>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 83> :
  D.250338 = gimple_call_arg (gc, 0);

  <bb 84> :
  _66 = D.250338;
  getFunctionAssignRHS = _66;
  getFunctionAssignRHS.723_67 = getFunctionAssignRHS;
  _68 = getFunctionAssignRHS.723_67->exp.operands[0];
  getFunctionAssignRHS = _68;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.725_69 = function_assign_collect;
  D.250339 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.725_69, &getFunctionAssignRHS);

  <bb 85> :
  _70 = D.250339;
  retval.724 = _70 == 0B;
  if (retval.724 != 0)
    goto <bb 86>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 86> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 90>; [INV]

  <bb 87> :
  function_assign_collect.726_71 = function_assign_collect;
  D.250340 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.726_71, &getFunctionAssignRHS);

  <bb 88> :
  _72 = D.250340;
  function_assign_array::operator= (&assign_array, _72);

  <bb 89> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 90> :
  assign_type.stmt = gc;
  D.250341 = gimple_call_arg (gc, 0);

  <bb 91> :
  _73 = D.250341;
  assign_type.assign_tree = _73;
  D.250342 = cgraph_node::get_fun (node);

  <bb 92> :
  _74 = D.250342;
  _75 = _74->decl;
  assign_type.form_tree = _75;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 93> :
  function_assign_collect.727_76 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.727_76, &getFunctionAssignRHS, &assign_array);

  <bb 94> :
  D.250343 = gimple_call_arg (gc, 3);

  <bb 95> :
  _77 = D.250343;
  retval.728 = _77 != 0B;
  if (retval.728 != 0)
    goto <bb 96>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 96> :
  D.250344 = gimple_call_arg (gc, 3);

  <bb 97> :
  _78 = D.250344;
  getFunctionAssignRHS = _78;
  getFunctionAssignRHS.729_79 = getFunctionAssignRHS;
  _80 = getFunctionAssignRHS.729_79->exp.operands[0];
  getFunctionAssignRHS = _80;
  function_assign_collect.731_81 = function_assign_collect;
  D.250345 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.731_81, &getFunctionAssignRHS);

  <bb 98> :
  _82 = D.250345;
  retval.730 = _82 == 0B;
  if (retval.730 != 0)
    goto <bb 99>; [INV]
  else
    goto <bb 100>; [INV]

  <bb 99> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 103>; [INV]

  <bb 100> :
  function_assign_collect.732_83 = function_assign_collect;
  D.250346 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.732_83, &getFunctionAssignRHS);

  <bb 101> :
  _84 = D.250346;
  function_assign_array::operator= (&assign_array, _84);

  <bb 102> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 103> :
  assign_type.stmt = gc;
  D.250347 = gimple_call_arg (gc, 3);

  <bb 104> :
  _85 = D.250347;
  assign_type.assign_tree = _85;
  D.250348 = cgraph_node::get_fun (node);

  <bb 105> :
  _86 = D.250348;
  _87 = _86->decl;
  assign_type.form_tree = _87;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 106> :
  function_assign_collect.733_88 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.733_88, &getFunctionAssignRHS, &assign_array);

  <bb 107> :
  assign_type = {CLOBBER};

  <bb 108> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  getFunctionAssignRHS = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 233>; [INV]

  <bb 109> :
  _89 = strcmp (name, "pthread_detach");
  if (_89 == 0)
    goto <bb 110>; [INV]
  else
    goto <bb 121>; [INV]

  <bb 110> :
  D.250353 = cgraph_node::get_fun (node);

  <bb 111> :
  _90 = D.250353;
  _91 = _90->decl;
  getFucntionDecl = _91;
  function_pthread_detched_array::function_pthread_detched_array (&fun_array);
  std::vector<pthread_detched_type>::vector (&pthread_detched_array);
  function_pthread_detched_collect.735_92 = function_pthread_detched_collect;
  D.250354 = hash_map<tree_node*, function_pthread_detched_array>::get (function_pthread_detched_collect.735_92, &getFucntionDecl);

  <bb 112> :
  _93 = D.250354;
  retval.734 = _93 == 0B;
  if (retval.734 != 0)
    goto <bb 113>; [INV]
  else
    goto <bb 114>; [INV]

  <bb 113> :
  std::vector<pthread_detched_type>::operator= (&fun_array.pthread_detched_array, &pthread_detched_array);
  goto <bb 117>; [INV]

  <bb 114> :
  function_pthread_detched_collect.736_94 = function_pthread_detched_collect;
  D.250355 = hash_map<tree_node*, function_pthread_detched_array>::get (function_pthread_detched_collect.736_94, &getFucntionDecl);

  <bb 115> :
  _95 = D.250355;
  function_pthread_detched_array::operator= (&fun_array, _95);

  <bb 116> :
  std::vector<pthread_detched_type>::operator= (&pthread_detched_array, &fun_array.pthread_detched_array);

  <bb 117> :
  pthread_detched_type.stmt = gc;
  D.250356 = gimple_call_arg (gc, 0);

  <bb 118> :
  _96 = D.250356;
  pthread_detched_type.pthread_detched_tree = _96;
  std::vector<pthread_detched_type>::push_back (&fun_array.pthread_detched_array, &pthread_detched_type);

  <bb 119> :
  function_pthread_detched_collect.737_97 = function_pthread_detched_collect;
  hash_map<tree_node*, function_pthread_detched_array>::put (function_pthread_detched_collect.737_97, &getFucntionDecl, &fun_array);

  <bb 120> :
  std::vector<pthread_detched_type>::~vector (&pthread_detched_array);
  function_pthread_detched_array::~function_pthread_detched_array (&fun_array);
  getFucntionDecl = {CLOBBER};
  fun_array = {CLOBBER};
  pthread_detched_array = {CLOBBER};
  pthread_detched_type = {CLOBBER};
  goto <bb 233>; [INV]

  <bb 121> :
  _98 = strcmp (name, "pthread_exit");
  if (_98 == 0)
    goto <bb 122>; [INV]
  else
    goto <bb 133>; [INV]

  <bb 122> :
  D.250360 = cgraph_node::get_fun (node);

  <bb 123> :
  _99 = D.250360;
  _100 = _99->decl;
  getFucntionDecl = _100;
  function_pthread_exit_array::function_pthread_exit_array (&fun_array);
  std::vector<pthread_exit_type>::vector (&pthread_exit_array);
  function_pthread_exit_collect.739_101 = function_pthread_exit_collect;
  D.250361 = hash_map<tree_node*, function_pthread_exit_array>::get (function_pthread_exit_collect.739_101, &getFucntionDecl);

  <bb 124> :
  _102 = D.250361;
  retval.738 = _102 == 0B;
  if (retval.738 != 0)
    goto <bb 125>; [INV]
  else
    goto <bb 126>; [INV]

  <bb 125> :
  std::vector<pthread_exit_type>::operator= (&fun_array.pthread_exit_array, &pthread_exit_array);
  goto <bb 129>; [INV]

  <bb 126> :
  function_pthread_exit_collect.740_103 = function_pthread_exit_collect;
  D.250362 = hash_map<tree_node*, function_pthread_exit_array>::get (function_pthread_exit_collect.740_103, &getFucntionDecl);

  <bb 127> :
  _104 = D.250362;
  function_pthread_exit_array::operator= (&fun_array, _104);

  <bb 128> :
  std::vector<pthread_exit_type>::operator= (&pthread_exit_array, &fun_array.pthread_exit_array);

  <bb 129> :
  pthread_exit_type.stmt = gc;
  D.250363 = gimple_call_arg (gc, 0);

  <bb 130> :
  _105 = D.250363;
  pthread_exit_type.pthread_exit_tree = _105;
  std::vector<pthread_exit_type>::push_back (&fun_array.pthread_exit_array, &pthread_exit_type);

  <bb 131> :
  function_pthread_exit_collect.741_106 = function_pthread_exit_collect;
  hash_map<tree_node*, function_pthread_exit_array>::put (function_pthread_exit_collect.741_106, &getFucntionDecl, &fun_array);

  <bb 132> :
  std::vector<pthread_exit_type>::~vector (&pthread_exit_array);
  function_pthread_exit_array::~function_pthread_exit_array (&fun_array);
  getFucntionDecl = {CLOBBER};
  fun_array = {CLOBBER};
  pthread_exit_array = {CLOBBER};
  pthread_exit_type = {CLOBBER};
  goto <bb 233>; [INV]

  <bb 133> :
  debug_gimple_stmt (gc);

  <bb 134> :
  i = 0;
  goto <bb 160>; [INV]

  <bb 135> :
  i.744_107 = (unsigned int) i;
  D.250367 = gimple_call_arg (gc, i.744_107);

  <bb 136> :
  _108 = D.250367;
  _109 = _108->base.code;
  if (_109 == 131)
    goto <bb 139>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 137> :
  i.745_110 = (unsigned int) i;
  D.250368 = gimple_call_arg (gc, i.745_110);

  <bb 138> :
  _111 = D.250368;
  _112 = _111->base.code;
  if (_112 == 36)
    goto <bb 139>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 139> :
  iftmp.743 = 1;
  goto <bb 141>; [INV]

  <bb 140> :
  iftmp.743 = 0;

  <bb 141> :
  retval.742 = iftmp.743;
  if (retval.742 != 0)
    goto <bb 142>; [INV]
  else
    goto <bb 159>; [INV]

  <bb 142> :
  i.747_113 = (unsigned int) i;
  D.250369 = gimple_call_arg (gc, i.747_113);

  <bb 143> :
  _114 = D.250369;
  _115 = _114->base.code;
  retval.746 = _115 == 131;
  if (retval.746 != 0)
    goto <bb 144>; [INV]
  else
    goto <bb 146>; [INV]

  <bb 144> :
  i.748_116 = (unsigned int) i;
  D.250370 = gimple_call_arg (gc, i.748_116);

  <bb 145> :
  _117 = D.250370;
  _118 = _117->exp.operands[0];
  getVARDECLtree = _118;
  goto <bb 148>; [INV]

  <bb 146> :
  i.749_119 = (unsigned int) i;
  D.250371 = gimple_call_arg (gc, i.749_119);

  <bb 147> :
  _120 = D.250371;
  getVARDECLtree = _120;

  <bb 148> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.751_121 = function_assign_collect;
  D.250372 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.751_121, &getVARDECLtree);

  <bb 149> :
  _122 = D.250372;
  retval.750 = _122 == 0B;
  if (retval.750 != 0)
    goto <bb 150>; [INV]
  else
    goto <bb 151>; [INV]

  <bb 150> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 154>; [INV]

  <bb 151> :
  function_assign_collect.752_123 = function_assign_collect;
  D.250373 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.752_123, &getVARDECLtree);

  <bb 152> :
  _124 = D.250373;
  function_assign_array::operator= (&assign_array, _124);

  <bb 153> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 154> :
  assign_type.stmt = gc;
  i.753_125 = (unsigned int) i;
  D.250374 = gimple_call_arg (gc, i.753_125);

  <bb 155> :
  _126 = D.250374;
  assign_type.assign_tree = _126;
  D.250375 = cgraph_node::get_fun (node);

  <bb 156> :
  _127 = D.250375;
  _128 = _127->decl;
  assign_type.form_tree = _128;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 157> :
  function_assign_collect.754_129 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.754_129, &getVARDECLtree, &assign_array);

  <bb 158> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 159> :
  getVARDECLtree = {CLOBBER};
  i = i + 1;

  <bb 160> :
  D.250380 = gimple_call_num_args (gc);

  <bb 161> :
  _130 = D.250380;
  i.756_131 = (unsigned int) i;
  retval.755 = _130 > i.756_131;
  if (retval.755 != 0)
    goto <bb 135>; [INV]
  else
    goto <bb 162>; [INV]

  <bb 162> :
  D.250381 = gimple_call_num_args (gc);

  <bb 163> :
  _132 = D.250381;
  retval.757 = _132 != 0;
  if (retval.757 != 0)
    goto <bb 164>; [INV]
  else
    goto <bb 181>; [INV]

  <bb 164> :
  D.250382 = gimple_call_arg (gc, 0);

  <bb 165> :
  _133 = D.250382;
  _134 = _133->base.code;
  retval.758 = _134 == 131;
  if (retval.758 != 0)
    goto <bb 166>; [INV]
  else
    goto <bb 181>; [INV]

  <bb 166> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.760_135 = function_assign_collect;
  D.250383 = gimple_call_fn (gc);

  <bb 167> :
  _136 = D.250383;
  D.195628 = _136;
  D.250384 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.760_135, &D.195628);

  <bb 168> :
  _137 = D.250384;
  retval.759 = _137 == 0B;
  D.195628 = {CLOBBER};
  if (retval.759 != 0)
    goto <bb 169>; [INV]
  else
    goto <bb 170>; [INV]

  <bb 169> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 174>; [INV]

  <bb 170> :
  function_assign_collect.761_138 = function_assign_collect;
  D.250386 = gimple_call_fn (gc);

  <bb 171> :
  _139 = D.250386;
  D.195629 = _139;
  D.250387 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.761_138, &D.195629);

  <bb 172> :
  _140 = D.250387;
  function_assign_array::operator= (&assign_array, _140);

  <bb 173> :
  D.195629 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 174> :
  assign_type.stmt = gc;
  D.250389 = gimple_call_arg (gc, 0);

  <bb 175> :
  _141 = D.250389;
  assign_type.assign_tree = _141;
  D.250390 = cgraph_node::get_fun (node);

  <bb 176> :
  _142 = D.250390;
  _143 = _142->decl;
  assign_type.form_tree = _143;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 177> :
  D.250391 = gimple_call_arg (gc, 0);

  <bb 178> :
  _144 = D.250391;
  _145 = _144->exp.operands[0];
  second = _145;
  second.762_146 = second;
  _147 = second.762_146->base.code;
  if (_147 == 36)
    goto <bb 179>; [INV]
  else
    goto <bb 180>; [INV]

  <bb 179> :
  function_assign_collect.763_148 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.763_148, &second, &assign_array);

  <bb 180> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  second = {CLOBBER};

  <bb 181> :
  D.250395 = gimple_call_lhs (gc);

  <bb 182> :
  checklhstree = D.250395;
  _149 = gimple_code (gc);
  retval.764 = _149 == 8;
  if (retval.764 != 0)
    goto <bb 183>; [INV]
  else
    goto <bb 216>; [INV]

  <bb 183> :
  vscode_extensionmod.765_150 = vscode_extensionmod;
  if (vscode_extensionmod.765_150 != 0)
    goto <bb 184>; [INV]
  else
    goto <bb 196>; [INV]

  <bb 184> :
  find = 0;
  i = 0;
  goto <bb 193>; [INV]

  <bb 185> :
  _151 = (long unsigned int) i;
  _152 = std::vector<breakpoint>::operator[] (&vbreakpoint, _151);
  _153 = &_152->name;
  D.195636 = expand_location (loc); [return slot optimization]

  <bb 186> :
  _154 = D.195636.file;
  found = std::__cxx11::basic_string<char>::find (_153, _154, 0);
  D.195636 = {CLOBBER};
  if (found != 0)
    goto <bb 187>; [INV]
  else
    goto <bb 192>; [INV]

  <bb 187> :
  _155 = (long unsigned int) i;
  _156 = std::vector<breakpoint>::operator[] (&vbreakpoint, _155);
  _157 = _156->line;
  D.195639 = expand_location (loc); [return slot optimization]

  <bb 188> :
  _158 = D.195639.line;
  retval.766 = _157 == _158;
  D.195639 = {CLOBBER};
  if (retval.766 != 0)
    goto <bb 189>; [INV]
  else
    goto <bb 192>; [INV]

  <bb 189> :
  debug_gimple_stmt (gc);

  <bb 190> :
  _159 = (long unsigned int) i;
  _160 = std::vector<breakpoint>::operator[] (&vbreakpoint, _159);
  _161 = _160->line;
  _162 = (long unsigned int) i;
  _163 = std::vector<breakpoint>::operator[] (&vbreakpoint, _162);
  _164 = &_163->name;
  _165 = std::__cxx11::basic_string<char>::c_str (_164);
  stderr.767_166 = stderr;
  fprintf (stderr.767_166, "set breakpoint %s %d\n", _165, _161);

  <bb 191> :
  find = 1;

  <bb 192> :
  i = i + 1;

  <bb 193> :
  _167 = (long unsigned int) i;
  _168 = std::vector<breakpoint>::size (&vbreakpoint);
  retval.768 = _167 < _168;
  if (retval.768 != 0)
    goto <bb 185>; [INV]
  else
    goto <bb 194>; [INV]

  <bb 194> :
  if (find == 0)
    goto <bb 195>; [INV]
  else
    goto <bb 196>; [INV]

  <bb 195> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 232>; [INV]

  <bb 196> :
  D.250396 = gimple_call_fn (gc);

  <bb 197> :
  _169 = D.250396;
  D.250397 = get_name (_169);

  <bb 198> :
  name = D.250397;
  if (name != 0B)
    goto <bb 199>; [INV]
  else
    goto <bb 216>; [INV]

  <bb 199> :
  _170 = gimple_code (gc);
  retval.769 = _170 == 8;
  if (retval.769 != 0)
    goto <bb 200>; [INV]
  else
    goto <bb 206>; [INV]

  <bb 200> :
  D.250398 = gimple_call_lhs (gc);

  <bb 201> :
  _171 = D.250398;
  retval.770 = _171 != 0B;
  if (retval.770 != 0)
    goto <bb 202>; [INV]
  else
    goto <bb 206>; [INV]

  <bb 202> :
  D.250399 = gimple_call_lhs (gc);

  <bb 203> :
  _172 = D.250399;
  _173 = _172->base.code;
  retval.771 = _173 == 153;
  if (retval.771 != 0)
    goto <bb 204>; [INV]
  else
    goto <bb 206>; [INV]

  <bb 204> :
  D.250400 = gimple_call_lhs (gc);

  <bb 205> :
  _174 = D.250400;
  set_ptb (bb, ptable, _174, loc, 0, gc, node);

  <bb 206> :
  D.250401 = gimple_call_num_args (gc);

  <bb 207> :
  _175 = D.250401;
  retval.772 = _175 != 0;
  if (retval.772 != 0)
    goto <bb 208>; [INV]
  else
    goto <bb 216>; [INV]

  <bb 208> :
  i = 0;
  goto <bb 214>; [INV]

  <bb 209> :
  i.774_176 = (unsigned int) i;
  D.250402 = gimple_call_arg (gc, i.774_176);

  <bb 210> :
  _177 = D.250402;
  _178 = _177->base.code;
  retval.773 = _178 == 153;
  if (retval.773 != 0)
    goto <bb 211>; [INV]
  else
    goto <bb 213>; [INV]

  <bb 211> :
  i.775_179 = (unsigned int) i;
  D.250403 = gimple_call_arg (gc, i.775_179);

  <bb 212> :
  _180 = D.250403;
  set_ptb (bb, ptable, _180, loc, 0, gc, node);

  <bb 213> :
  i = i + 1;

  <bb 214> :
  D.250404 = gimple_call_num_args (gc);

  <bb 215> :
  _181 = D.250404;
  i.777_182 = (unsigned int) i;
  retval.776 = _181 > i.777_182;
  if (retval.776 != 0)
    goto <bb 209>; [INV]
  else
    goto <bb 216>; [INV]

  <bb 216> :
  _183 = get_function_return_tree->exp.operands[0];
  getreturnFucntionDecl = _183;
  getreturnFucntionDecl.778_184 = getreturnFucntionDecl;
  if (getreturnFucntionDecl.778_184 != 0B)
    goto <bb 217>; [INV]
  else
    goto <bb 231>; [INV]

  <bb 217> :
  function_return_collect.780_185 = function_return_collect;
  D.250405 = hash_map<tree_node*, function_return_array>::get (function_return_collect.780_185, &getreturnFucntionDecl);

  <bb 218> :
  _186 = D.250405;
  retval.779 = _186 == 0B;
  if (retval.779 != 0)
    goto <bb 219>; [INV]
  else
    goto <bb 220>; [INV]

  <bb 219> :
  // predicted unlikely by early return (on trees) predictor.
  getFucntionDecl = {CLOBBER};
  ret_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  ret_type = {CLOBBER};
  goto <bb 232>; [INV]

  <bb 220> :
  D.250406 = cgraph_node::get_fun (node);

  <bb 221> :
  _187 = D.250406;
  _188 = _187->decl;
  getFucntionDecl = _188;
  std::vector<return_type>::vector (&ret_type_array);
  function_return_array::function_return_array (&fun_array);
  function_return_collect.782_189 = function_return_collect;
  D.250407 = hash_map<tree_node*, function_return_array>::get (function_return_collect.782_189, &getFucntionDecl);

  <bb 222> :
  _190 = D.250407;
  retval.781 = _190 == 0B;
  if (retval.781 != 0)
    goto <bb 223>; [INV]
  else
    goto <bb 224>; [INV]

  <bb 223> :
  std::vector<return_type>::operator= (&fun_array.return_type_array, &ret_type_array);
  goto <bb 227>; [INV]

  <bb 224> :
  function_return_collect.783_191 = function_return_collect;
  D.250408 = hash_map<tree_node*, function_return_array>::get (function_return_collect.783_191, &getFucntionDecl);

  <bb 225> :
  _192 = D.250408;
  function_return_array::operator= (&fun_array, _192);

  <bb 226> :
  std::vector<return_type>::operator= (&ret_type_array, &fun_array.return_type_array);

  <bb 227> :
  return_type::return_type (&ret_type);
  ret_type.stmt = gc;
  getreturnFucntionDecl.784_193 = getreturnFucntionDecl;
  ret_type.return_tree = getreturnFucntionDecl.784_193;
  std::vector<return_type>::push_back (&fun_array.return_type_array, &ret_type);

  <bb 228> :
  function_return_collect.785_194 = function_return_collect;
  D.250409 = cgraph_node::get_fun (node);

  <bb 229> :
  _195 = D.250409;
  _196 = &_195->decl;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.785_194, _196, &fun_array);

  <bb 230> :
  function_return_array::~function_return_array (&fun_array);
  std::vector<return_type>::~vector (&ret_type_array);
  getFucntionDecl = {CLOBBER};
  ret_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  ret_type = {CLOBBER};

  <bb 231> :
  getreturnFucntionDecl = {CLOBBER};
  goto <bb 233>; [INV]

  <bb 232> :
  getreturnFucntionDecl = {CLOBBER};
  goto <bb 499>; [INV]

  <bb 233> :
  goto <bb 499>; [INV]

  <bb 234> :
  _197 = gimple_code (gc);
  retval.786 = _197 == 6;
  if (retval.786 != 0)
    goto <bb 235>; [INV]
  else
    goto <bb 499>; [INV]

  <bb 235> :
  D.250418 = gimple_assign_lhs (gc);

  <bb 236> :
  _198 = D.250418;
  if (_198 == 0B)
    goto <bb 239>; [INV]
  else
    goto <bb 237>; [INV]

  <bb 237> :
  D.250419 = gimple_assign_rhs1 (gc);

  <bb 238> :
  _199 = D.250419;
  if (_199 == 0B)
    goto <bb 239>; [INV]
  else
    goto <bb 240>; [INV]

  <bb 239> :
  iftmp.788 = 1;
  goto <bb 241>; [INV]

  <bb 240> :
  iftmp.788 = 0;

  <bb 241> :
  retval.787 = iftmp.788;
  if (retval.787 != 0)
    goto <bb 242>; [INV]
  else
    goto <bb 243>; [INV]

  <bb 242> :
  // predicted unlikely by early return (on trees) predictor.
  getFunctionAssignRHS = {CLOBBER};
  getFunctionAssignLHS = {CLOBBER};
  goto <bb 499>; [INV]

  <bb 243> :
  D.250420 = gimple_assign_rhs1 (gc);

  <bb 244> :
  _200 = D.250420;
  getFunctionAssignRHS = _200;
  D.250421 = gimple_assign_lhs (gc);

  <bb 245> :
  _201 = D.250421;
  getFunctionAssignLHS = _201;
  getFunctionAssignLHS.789_202 = getFunctionAssignLHS;
  _203 = getFunctionAssignLHS.789_202->base.code;
  if (_203 == 36)
    goto <bb 246>; [INV]
  else
    goto <bb 273>; [INV]

  <bb 246> :
  getFunctionAssignRHS.790_204 = getFunctionAssignRHS;
  _205 = getFunctionAssignRHS.790_204->base.code;
  if (_205 == 131)
    goto <bb 247>; [INV]
  else
    goto <bb 260>; [INV]

  <bb 247> :
  getFunctionAssignRHS.791_206 = getFunctionAssignRHS;
  second = getFunctionAssignRHS.791_206->exp.operands[0];
  _207 = second->base.code;
  if (_207 == 36)
    goto <bb 248>; [INV]
  else
    goto <bb 498>; [INV]

  <bb 248> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.793_208 = function_assign_collect;
  D.250422 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.793_208, &getFunctionAssignLHS);

  <bb 249> :
  _209 = D.250422;
  retval.792 = _209 == 0B;
  if (retval.792 != 0)
    goto <bb 250>; [INV]
  else
    goto <bb 251>; [INV]

  <bb 250> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 254>; [INV]

  <bb 251> :
  function_assign_collect.794_210 = function_assign_collect;
  D.250423 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.794_210, &getFunctionAssignLHS);

  <bb 252> :
  _211 = D.250423;
  function_assign_array::operator= (&assign_array, _211);

  <bb 253> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 254> :
  D.250424 = gimple_call_lhs (gc);

  <bb 255> :
  function_return_lhstree = D.250424;
  assign_type.stmt = gc;
  D.250425 = gimple_assign_lhs (gc);

  <bb 256> :
  _212 = D.250425;
  assign_type.assign_tree = _212;
  D.250426 = cgraph_node::get_fun (node);

  <bb 257> :
  _213 = D.250426;
  _214 = _213->decl;
  assign_type.form_tree = _214;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 258> :
  function_assign_collect.795_215 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.795_215, &getFunctionAssignLHS, &assign_array);

  <bb 259> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 498>; [INV]

  <bb 260> :
  getFunctionAssignRHS.796_216 = getFunctionAssignRHS;
  _217 = getFunctionAssignRHS.796_216->base.code;
  if (_217 == 153)
    goto <bb 261>; [INV]
  else
    goto <bb 498>; [INV]

  <bb 261> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.798_218 = function_assign_collect;
  D.250430 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.798_218, &getFunctionAssignLHS);

  <bb 262> :
  _219 = D.250430;
  retval.797 = _219 == 0B;
  if (retval.797 != 0)
    goto <bb 263>; [INV]
  else
    goto <bb 264>; [INV]

  <bb 263> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 267>; [INV]

  <bb 264> :
  function_assign_collect.799_220 = function_assign_collect;
  D.250431 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.799_220, &getFunctionAssignLHS);

  <bb 265> :
  _221 = D.250431;
  function_assign_array::operator= (&assign_array, _221);

  <bb 266> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 267> :
  D.250432 = gimple_assign_rhs1 (gc);

  <bb 268> :
  function_return_lhstree = D.250432;
  assign_type.stmt = gc;
  D.250433 = gimple_assign_rhs1 (gc);

  <bb 269> :
  _222 = D.250433;
  assign_type.assign_tree = _222;
  D.250434 = cgraph_node::get_fun (node);

  <bb 270> :
  _223 = D.250434;
  _224 = _223->decl;
  assign_type.form_tree = _224;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 271> :
  function_assign_collect.800_225 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.800_225, &getFunctionAssignLHS, &assign_array);

  <bb 272> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 498>; [INV]

  <bb 273> :
  getFunctionAssignRHS.801_226 = getFunctionAssignRHS;
  _227 = getFunctionAssignRHS.801_226->base.code;
  if (_227 == 36)
    goto <bb 274>; [INV]
  else
    goto <bb 287>; [INV]

  <bb 274> :
  getFunctionAssignLHS.802_228 = getFunctionAssignLHS;
  _229 = getFunctionAssignLHS.802_228->base.code;
  if (_229 == 153)
    goto <bb 275>; [INV]
  else
    goto <bb 498>; [INV]

  <bb 275> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.804_230 = function_assign_collect;
  D.250438 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.804_230, &getFunctionAssignRHS);

  <bb 276> :
  _231 = D.250438;
  retval.803 = _231 == 0B;
  if (retval.803 != 0)
    goto <bb 277>; [INV]
  else
    goto <bb 278>; [INV]

  <bb 277> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 281>; [INV]

  <bb 278> :
  function_assign_collect.805_232 = function_assign_collect;
  D.250439 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.805_232, &getFunctionAssignRHS);

  <bb 279> :
  _233 = D.250439;
  function_assign_array::operator= (&assign_array, _233);

  <bb 280> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 281> :
  D.250440 = gimple_assign_lhs (gc);

  <bb 282> :
  function_return_lhstree = D.250440;
  assign_type.stmt = gc;
  D.250441 = gimple_assign_lhs (gc);

  <bb 283> :
  _234 = D.250441;
  assign_type.assign_tree = _234;
  D.250442 = cgraph_node::get_fun (node);

  <bb 284> :
  _235 = D.250442;
  _236 = _235->decl;
  assign_type.form_tree = _236;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 285> :
  function_assign_collect.806_237 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.806_237, &getFunctionAssignRHS, &assign_array);

  <bb 286> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 498>; [INV]

  <bb 287> :
  getFunctionAssignLHS.807_238 = getFunctionAssignLHS;
  _239 = getFunctionAssignLHS.807_238->base.code;
  if (_239 == 165)
    goto <bb 288>; [INV]
  else
    goto <bb 323>; [INV]

  <bb 288> :
  D.250446 = gimple_assign_lhs (gc);

  <bb 289> :
  _240 = D.250446;
  first = _240->exp.operands[0];
  _241 = first->base.code;
  if (_241 == 131)
    goto <bb 290>; [INV]
  else
    goto <bb 301>; [INV]

  <bb 290> :
  _242 = first->exp.operands[0];
  second = _242;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.809_243 = function_assign_collect;
  D.250447 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.809_243, &second);

  <bb 291> :
  _244 = D.250447;
  retval.808 = _244 == 0B;
  if (retval.808 != 0)
    goto <bb 292>; [INV]
  else
    goto <bb 293>; [INV]

  <bb 292> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 296>; [INV]

  <bb 293> :
  function_assign_collect.810_245 = function_assign_collect;
  D.250448 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.810_245, &second);

  <bb 294> :
  _246 = D.250448;
  function_assign_array::operator= (&assign_array, _246);

  <bb 295> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 296> :
  assign_type.stmt = gc;
  D.250449 = gimple_assign_lhs (gc);

  <bb 297> :
  _247 = D.250449;
  assign_type.assign_tree = _247;
  D.250450 = cgraph_node::get_fun (node);

  <bb 298> :
  _248 = D.250450;
  _249 = _248->decl;
  assign_type.form_tree = _249;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 299> :
  function_assign_collect.811_250 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.811_250, &second, &assign_array);

  <bb 300> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 301> :
  getFunctionAssignRHS.812_251 = getFunctionAssignRHS;
  _252 = getFunctionAssignRHS.812_251->base.code;
  if (_252 == 26)
    goto <bb 302>; [INV]
  else
    goto <bb 498>; [INV]

  <bb 302> :
  second = 0B;
  D.250454 = gimple_assign_lhs (gc);

  <bb 303> :
  _253 = D.250454;
  second = _253->exp.operands[0];
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  _254 = second->base.code;
  if (_254 == 153)
    goto <bb 304>; [INV]
  else
    goto <bb 322>; [INV]

  <bb 304> :
  def_stmt = second->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 305>; [INV]
  else
    goto <bb 322>; [INV]

  <bb 305> :
  retval.813 = is_gimple_assign (def_stmt);
  if (retval.813 != 0)
    goto <bb 306>; [INV]
  else
    goto <bb 322>; [INV]

  <bb 306> :
  D.250455 = gimple_assign_rhs1 (def_stmt);

  <bb 307> :
  _255 = D.250455;
  _256 = _255->base.code;
  retval.814 = _256 == 36;
  if (retval.814 != 0)
    goto <bb 308>; [INV]
  else
    goto <bb 322>; [INV]

  <bb 308> :
  function_assign_collect.816_257 = function_assign_collect;
  D.250456 = gimple_assign_rhs1 (def_stmt);

  <bb 309> :
  _258 = D.250456;
  D.195670 = _258;
  D.250457 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.816_257, &D.195670);

  <bb 310> :
  _259 = D.250457;
  retval.815 = _259 == 0B;
  D.195670 = {CLOBBER};
  if (retval.815 != 0)
    goto <bb 311>; [INV]
  else
    goto <bb 312>; [INV]

  <bb 311> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 316>; [INV]

  <bb 312> :
  function_assign_collect.817_260 = function_assign_collect;
  D.250459 = gimple_assign_rhs1 (def_stmt);

  <bb 313> :
  _261 = D.250459;
  D.195671 = _261;
  D.250460 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.817_260, &D.195671);

  <bb 314> :
  _262 = D.250460;
  function_assign_array::operator= (&assign_array, _262);

  <bb 315> :
  D.195671 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 316> :
  assign_type.stmt = gc;
  D.250462 = gimple_assign_lhs (gc);

  <bb 317> :
  _263 = D.250462;
  assign_type.assign_tree = _263;
  D.250463 = cgraph_node::get_fun (node);

  <bb 318> :
  _264 = D.250463;
  _265 = _264->decl;
  assign_type.form_tree = _265;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 319> :
  function_assign_collect.818_266 = function_assign_collect;
  D.250464 = gimple_assign_rhs1 (def_stmt);

  <bb 320> :
  _267 = D.250464;
  D.195673 = _267;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.818_266, &D.195673, &assign_array);

  <bb 321> :
  D.195673 = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 322> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  goto <bb 498>; [INV]

  <bb 323> :
  getFunctionAssignLHS.819_268 = getFunctionAssignLHS;
  _269 = getFunctionAssignLHS.819_268->base.code;
  if (_269 == 153)
    goto <bb 324>; [INV]
  else
    goto <bb 439>; [INV]

  <bb 324> :
  getFunctionAssignRHS.820_270 = getFunctionAssignRHS;
  _271 = getFunctionAssignRHS.820_270->base.code;
  if (_271 == 165)
    goto <bb 325>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 325> :
  getFunctionAssignRHS.821_272 = getFunctionAssignRHS;
  first = getFunctionAssignRHS.821_272->exp.operands[0];
  _273 = first->base.code;
  if (_273 == 131)
    goto <bb 326>; [INV]
  else
    goto <bb 498>; [INV]

  <bb 326> :
  _274 = first->exp.operands[0];
  second = _274;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.823_275 = function_assign_collect;
  D.250470 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.823_275, &second);

  <bb 327> :
  _276 = D.250470;
  retval.822 = _276 == 0B;
  if (retval.822 != 0)
    goto <bb 328>; [INV]
  else
    goto <bb 329>; [INV]

  <bb 328> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 332>; [INV]

  <bb 329> :
  function_assign_collect.824_277 = function_assign_collect;
  D.250471 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.824_277, &second);

  <bb 330> :
  _278 = D.250471;
  function_assign_array::operator= (&assign_array, _278);

  <bb 331> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 332> :
  assign_type.stmt = gc;
  D.250472 = gimple_assign_lhs (gc);

  <bb 333> :
  _279 = D.250472;
  assign_type.assign_tree = _279;
  D.250473 = cgraph_node::get_fun (node);

  <bb 334> :
  _280 = D.250473;
  _281 = _280->decl;
  assign_type.form_tree = _281;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 335> :
  function_assign_collect.825_282 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.825_282, &second, &assign_array);

  <bb 336> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 498>; [INV]

  <bb 337> :
  getFunctionAssignRHS.826_283 = getFunctionAssignRHS;
  _284 = getFunctionAssignRHS.826_283->base.code;
  if (_284 == 36)
    goto <bb 338>; [INV]
  else
    goto <bb 359>; [INV]

  <bb 338> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.828_285 = function_assign_collect;
  D.250477 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.828_285, &getFunctionAssignRHS);

  <bb 339> :
  _286 = D.250477;
  retval.827 = _286 == 0B;
  if (retval.827 != 0)
    goto <bb 340>; [INV]
  else
    goto <bb 341>; [INV]

  <bb 340> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 344>; [INV]

  <bb 341> :
  function_assign_collect.829_287 = function_assign_collect;
  D.250478 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.829_287, &getFunctionAssignRHS);

  <bb 342> :
  _288 = D.250478;
  function_assign_array::operator= (&assign_array, _288);

  <bb 343> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 344> :
  table1 = ptable;
  t2 = 0B;
  _289 = ptable->size;
  if (_289 >= 0)
    goto <bb 345>; [INV]
  else
    goto <bb 358>; [INV]

  <bb 345> :
  if (table1 != 0B)
    goto <bb 346>; [INV]
  else
    goto <bb 347>; [INV]

  <bb 346> :
  iftmp.830 = table1->target;
  goto <bb 348>; [INV]

  <bb 347> :
  iftmp.830 = 0B;

  <bb 348> :
  t2 = iftmp.830;
  goto <bb 357>; [INV]

  <bb 349> :
  _290 = table1->target;
  _291 = _290->base.code;
  if (_291 == 131)
    goto <bb 350>; [INV]
  else
    goto <bb 353>; [INV]

  <bb 350> :
  _292 = table1->target;
  second = _292->exp.operands[0];
  getFunctionAssignRHS.831_293 = getFunctionAssignRHS;
  if (second == getFunctionAssignRHS.831_293)
    goto <bb 351>; [INV]
  else
    goto <bb 353>; [INV]

  <bb 351> :
  _294 = table1->target;
  table1->swap_target = _294;
  _295 = table1->last_stmt;
  table1->swap_stmt = _295;
  getFunctionAssignLHS.832_296 = getFunctionAssignLHS;
  table1->target = getFunctionAssignLHS.832_296;
  table1->last_stmt = gc;
  FUNCITON_THREAD.833_297 = FUNCITON_THREAD;
  FUNCITON_THREAD.834_298 = (int) FUNCITON_THREAD.833_297;
  table1->swap_type = FUNCITON_THREAD.834_298;
  _299 = table1->last_stmt;
  assign_type.stmt = _299;
  _300 = table1->target;
  assign_type.assign_tree = _300;
  D.250479 = cgraph_node::get_fun (node);

  <bb 352> :
  _301 = D.250479;
  _302 = _301->decl;
  assign_type.form_tree = _302;

  <bb 353> :
  table1 = table1->next;
  if (table1 != 0B)
    goto <bb 354>; [INV]
  else
    goto <bb 355>; [INV]

  <bb 354> :
  iftmp.835 = table1->target;
  goto <bb 356>; [INV]

  <bb 355> :
  iftmp.835 = 0B;

  <bb 356> :
  t2 = iftmp.835;

  <bb 357> :
  if (t2 != 0B)
    goto <bb 349>; [INV]
  else
    goto <bb 358>; [INV]

  <bb 358> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 498>; [INV]

  <bb 359> :
  getFunctionAssignRHS.836_303 = getFunctionAssignRHS;
  _304 = getFunctionAssignRHS.836_303->base.code;
  if (_304 == 49)
    goto <bb 360>; [INV]
  else
    goto <bb 371>; [INV]

  <bb 360> :
  getFunctionAssignRHS.837_305 = getFunctionAssignRHS;
  _306 = getFunctionAssignRHS.837_305->exp.operands[0];
  second = _306;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.839_307 = function_assign_collect;
  D.250483 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.839_307, &second);

  <bb 361> :
  _308 = D.250483;
  retval.838 = _308 == 0B;
  if (retval.838 != 0)
    goto <bb 362>; [INV]
  else
    goto <bb 363>; [INV]

  <bb 362> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 366>; [INV]

  <bb 363> :
  function_assign_collect.840_309 = function_assign_collect;
  D.250484 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.840_309, &second);

  <bb 364> :
  _310 = D.250484;
  function_assign_array::operator= (&assign_array, _310);

  <bb 365> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 366> :
  assign_type.stmt = gc;
  D.250485 = gimple_assign_lhs (gc);

  <bb 367> :
  _311 = D.250485;
  assign_type.assign_tree = _311;
  D.250486 = cgraph_node::get_fun (node);

  <bb 368> :
  _312 = D.250486;
  _313 = _312->decl;
  assign_type.form_tree = _313;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 369> :
  function_assign_collect.841_314 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.841_314, &second, &assign_array);

  <bb 370> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 498>; [INV]

  <bb 371> :
  getFunctionAssignRHS.842_315 = getFunctionAssignRHS;
  _316 = getFunctionAssignRHS.842_315->base.code;
  if (_316 == 47)
    goto <bb 372>; [INV]
  else
    goto <bb 498>; [INV]

  <bb 372> :
  getFunctionAssignRHS.843_317 = getFunctionAssignRHS;
  _318 = getFunctionAssignRHS.843_317->exp.operands[0];
  second = _318;
  getFunctionAssignRHS.844_319 = getFunctionAssignRHS;
  _320 = getFunctionAssignRHS.844_319->exp.operands[1];
  second2 = _320;
  second.845_321 = second;
  if (second.845_321 != 0B)
    goto <bb 373>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 373> :
  second.846_322 = second;
  _323 = second.846_322->base.code;
  if (_323 == 165)
    goto <bb 374>; [INV]
  else
    goto <bb 393>; [INV]

  <bb 374> :
  second.847_324 = second;
  three = second.847_324->exp.operands[0];
  if (three != 0B)
    goto <bb 375>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 375> :
  _325 = three->base.code;
  if (_325 == 153)
    goto <bb 376>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 376> :
  def_stmt = three->ssa_name.def_stmt;
  retval.848 = is_gimple_assign (def_stmt);
  if (retval.848 != 0)
    goto <bb 377>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 377> :
  D.250490 = gimple_assign_rhs1 (def_stmt);

  <bb 378> :
  _326 = D.250490;
  _327 = _326->base.code;
  retval.849 = _327 == 36;
  if (retval.849 != 0)
    goto <bb 379>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 379> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.851_328 = function_assign_collect;
  D.250491 = gimple_assign_rhs1 (def_stmt);

  <bb 380> :
  _329 = D.250491;
  D.195695 = _329;
  D.250492 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.851_328, &D.195695);

  <bb 381> :
  _330 = D.250492;
  retval.850 = _330 == 0B;
  D.195695 = {CLOBBER};
  if (retval.850 != 0)
    goto <bb 382>; [INV]
  else
    goto <bb 383>; [INV]

  <bb 382> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 387>; [INV]

  <bb 383> :
  function_assign_collect.852_331 = function_assign_collect;
  D.250494 = gimple_assign_rhs1 (def_stmt);

  <bb 384> :
  _332 = D.250494;
  D.195696 = _332;
  D.250495 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.852_331, &D.195696);

  <bb 385> :
  _333 = D.250495;
  function_assign_array::operator= (&assign_array, _333);

  <bb 386> :
  D.195696 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 387> :
  assign_type.stmt = gc;
  D.250497 = gimple_assign_lhs (def_stmt);

  <bb 388> :
  _334 = D.250497;
  assign_type.assign_tree = _334;
  D.250498 = cgraph_node::get_fun (node);

  <bb 389> :
  _335 = D.250498;
  _336 = _335->decl;
  assign_type.form_tree = _336;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 390> :
  function_assign_collect.853_337 = function_assign_collect;
  D.250499 = gimple_assign_rhs1 (def_stmt);

  <bb 391> :
  _338 = D.250499;
  D.195698 = _338;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.853_337, &D.195698, &assign_array);

  <bb 392> :
  D.195698 = {CLOBBER};
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 426>; [INV]

  <bb 393> :
  second.854_339 = second;
  _340 = second.854_339->base.code;
  if (_340 == 36)
    goto <bb 394>; [INV]
  else
    goto <bb 404>; [INV]

  <bb 394> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.856_341 = function_assign_collect;
  D.250504 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.856_341, &second);

  <bb 395> :
  _342 = D.250504;
  retval.855 = _342 == 0B;
  if (retval.855 != 0)
    goto <bb 396>; [INV]
  else
    goto <bb 397>; [INV]

  <bb 396> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 400>; [INV]

  <bb 397> :
  function_assign_collect.857_343 = function_assign_collect;
  D.250505 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.857_343, &second);

  <bb 398> :
  _344 = D.250505;
  function_assign_array::operator= (&assign_array, _344);

  <bb 399> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 400> :
  assign_type.stmt = gc;
  second.858_345 = second;
  assign_type.assign_tree = second.858_345;
  D.250506 = cgraph_node::get_fun (node);

  <bb 401> :
  _346 = D.250506;
  _347 = _346->decl;
  assign_type.form_tree = _347;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 402> :
  function_assign_collect.859_348 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.859_348, &second, &assign_array);

  <bb 403> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 426>; [INV]

  <bb 404> :
  second.860_349 = second;
  _350 = second.860_349->base.code;
  if (_350 == 47)
    goto <bb 405>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 405> :
  getFunctionAssignLHS.861_351 = getFunctionAssignLHS;
  three = getFunctionAssignLHS.861_351->exp.operands[0];
  if (three != 0B)
    goto <bb 406>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 406> :
  _352 = three->base.code;
  if (_352 == 165)
    goto <bb 407>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 407> :
  second.862_353 = second;
  four = second.862_353->exp.operands[0];
  if (four != 0B)
    goto <bb 408>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 408> :
  _354 = four->base.code;
  if (_354 == 153)
    goto <bb 409>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 409> :
  def_stmt = four->ssa_name.def_stmt;
  retval.863 = is_gimple_assign (def_stmt);
  if (retval.863 != 0)
    goto <bb 410>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 410> :
  D.250510 = gimple_assign_rhs1 (def_stmt);

  <bb 411> :
  _355 = D.250510;
  _356 = _355->base.code;
  retval.864 = _356 == 36;
  if (retval.864 != 0)
    goto <bb 412>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 412> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.866_357 = function_assign_collect;
  D.250511 = gimple_assign_rhs1 (def_stmt);

  <bb 413> :
  _358 = D.250511;
  D.195707 = _358;
  D.250512 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.866_357, &D.195707);

  <bb 414> :
  _359 = D.250512;
  retval.865 = _359 == 0B;
  D.195707 = {CLOBBER};
  if (retval.865 != 0)
    goto <bb 415>; [INV]
  else
    goto <bb 416>; [INV]

  <bb 415> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 420>; [INV]

  <bb 416> :
  function_assign_collect.867_360 = function_assign_collect;
  D.250514 = gimple_assign_rhs1 (def_stmt);

  <bb 417> :
  _361 = D.250514;
  D.195708 = _361;
  D.250515 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.867_360, &D.195708);

  <bb 418> :
  _362 = D.250515;
  function_assign_array::operator= (&assign_array, _362);

  <bb 419> :
  D.195708 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 420> :
  assign_type.stmt = gc;
  D.250517 = gimple_assign_lhs (def_stmt);

  <bb 421> :
  _363 = D.250517;
  assign_type.assign_tree = _363;
  D.250518 = cgraph_node::get_fun (node);

  <bb 422> :
  _364 = D.250518;
  _365 = _364->decl;
  assign_type.form_tree = _365;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 423> :
  function_assign_collect.868_366 = function_assign_collect;
  D.250519 = gimple_assign_rhs1 (def_stmt);

  <bb 424> :
  _367 = D.250519;
  D.195710 = _367;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.868_366, &D.195710, &assign_array);

  <bb 425> :
  D.195710 = {CLOBBER};
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 426> :
  second2.869_368 = second2;
  if (second2.869_368 != 0B)
    goto <bb 427>; [INV]
  else
    goto <bb 438>; [INV]

  <bb 427> :
  second2.870_369 = second2;
  _370 = second2.870_369->base.code;
  if (_370 == 35)
    goto <bb 428>; [INV]
  else
    goto <bb 438>; [INV]

  <bb 428> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.872_371 = function_assign_collect;
  D.250524 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.872_371, &second2);

  <bb 429> :
  _372 = D.250524;
  retval.871 = _372 == 0B;
  if (retval.871 != 0)
    goto <bb 430>; [INV]
  else
    goto <bb 431>; [INV]

  <bb 430> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 434>; [INV]

  <bb 431> :
  function_assign_collect.873_373 = function_assign_collect;
  D.250525 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.873_373, &second2);

  <bb 432> :
  _374 = D.250525;
  function_assign_array::operator= (&assign_array, _374);

  <bb 433> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 434> :
  assign_type.stmt = gc;
  getFunctionAssignRHS.874_375 = getFunctionAssignRHS;
  assign_type.assign_tree = getFunctionAssignRHS.874_375;
  D.250526 = cgraph_node::get_fun (node);

  <bb 435> :
  _376 = D.250526;
  _377 = _376->decl;
  assign_type.form_tree = _377;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 436> :
  function_assign_collect.875_378 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.875_378, &second2, &assign_array);

  <bb 437> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 438> :
  second = {CLOBBER};
  second2 = {CLOBBER};
  goto <bb 498>; [INV]

  <bb 439> :
  getFunctionAssignLHS.876_379 = getFunctionAssignLHS;
  _380 = getFunctionAssignLHS.876_379->base.code;
  if (_380 == 47)
    goto <bb 440>; [INV]
  else
    goto <bb 485>; [INV]

  <bb 440> :
  getFunctionAssignLHS.877_381 = getFunctionAssignLHS;
  _382 = getFunctionAssignLHS.877_381->exp.operands[0];
  second = _382;
  getFunctionAssignLHS.878_383 = getFunctionAssignLHS;
  _384 = getFunctionAssignLHS.878_383->exp.operands[1];
  second2 = _384;
  second.879_385 = second;
  if (second.879_385 != 0B)
    goto <bb 441>; [INV]
  else
    goto <bb 472>; [INV]

  <bb 441> :
  second.880_386 = second;
  _387 = second.880_386->base.code;
  if (_387 == 165)
    goto <bb 442>; [INV]
  else
    goto <bb 461>; [INV]

  <bb 442> :
  second.881_388 = second;
  three = second.881_388->exp.operands[0];
  if (three != 0B)
    goto <bb 443>; [INV]
  else
    goto <bb 472>; [INV]

  <bb 443> :
  _389 = three->base.code;
  if (_389 == 153)
    goto <bb 444>; [INV]
  else
    goto <bb 472>; [INV]

  <bb 444> :
  def_stmt = three->ssa_name.def_stmt;
  retval.882 = is_gimple_assign (def_stmt);
  if (retval.882 != 0)
    goto <bb 445>; [INV]
  else
    goto <bb 472>; [INV]

  <bb 445> :
  D.250531 = gimple_assign_rhs1 (def_stmt);

  <bb 446> :
  _390 = D.250531;
  _391 = _390->base.code;
  retval.883 = _391 == 36;
  if (retval.883 != 0)
    goto <bb 447>; [INV]
  else
    goto <bb 472>; [INV]

  <bb 447> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.885_392 = function_assign_collect;
  D.250532 = gimple_assign_rhs1 (def_stmt);

  <bb 448> :
  _393 = D.250532;
  D.195720 = _393;
  D.250533 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.885_392, &D.195720);

  <bb 449> :
  _394 = D.250533;
  retval.884 = _394 == 0B;
  D.195720 = {CLOBBER};
  if (retval.884 != 0)
    goto <bb 450>; [INV]
  else
    goto <bb 451>; [INV]

  <bb 450> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 455>; [INV]

  <bb 451> :
  function_assign_collect.886_395 = function_assign_collect;
  D.250535 = gimple_assign_rhs1 (def_stmt);

  <bb 452> :
  _396 = D.250535;
  D.195721 = _396;
  D.250536 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.886_395, &D.195721);

  <bb 453> :
  _397 = D.250536;
  function_assign_array::operator= (&assign_array, _397);

  <bb 454> :
  D.195721 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 455> :
  assign_type.stmt = gc;
  D.250538 = gimple_assign_lhs (def_stmt);

  <bb 456> :
  _398 = D.250538;
  assign_type.assign_tree = _398;
  D.250539 = cgraph_node::get_fun (node);

  <bb 457> :
  _399 = D.250539;
  _400 = _399->decl;
  assign_type.form_tree = _400;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 458> :
  function_assign_collect.887_401 = function_assign_collect;
  D.250540 = gimple_assign_rhs1 (def_stmt);

  <bb 459> :
  _402 = D.250540;
  D.195723 = _402;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.887_401, &D.195723, &assign_array);

  <bb 460> :
  D.195723 = {CLOBBER};
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 472>; [INV]

  <bb 461> :
  second.888_403 = second;
  _404 = second.888_403->base.code;
  if (_404 == 36)
    goto <bb 462>; [INV]
  else
    goto <bb 472>; [INV]

  <bb 462> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.890_405 = function_assign_collect;
  D.250545 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.890_405, &second);

  <bb 463> :
  _406 = D.250545;
  retval.889 = _406 == 0B;
  if (retval.889 != 0)
    goto <bb 464>; [INV]
  else
    goto <bb 465>; [INV]

  <bb 464> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 468>; [INV]

  <bb 465> :
  function_assign_collect.891_407 = function_assign_collect;
  D.250546 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.891_407, &second);

  <bb 466> :
  _408 = D.250546;
  function_assign_array::operator= (&assign_array, _408);

  <bb 467> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 468> :
  assign_type.stmt = gc;
  second.892_409 = second;
  assign_type.assign_tree = second.892_409;
  D.250547 = cgraph_node::get_fun (node);

  <bb 469> :
  _410 = D.250547;
  _411 = _410->decl;
  assign_type.form_tree = _411;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 470> :
  function_assign_collect.893_412 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.893_412, &second, &assign_array);

  <bb 471> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 472> :
  second2.894_413 = second2;
  if (second2.894_413 != 0B)
    goto <bb 473>; [INV]
  else
    goto <bb 484>; [INV]

  <bb 473> :
  second2.895_414 = second2;
  _415 = second2.895_414->base.code;
  if (_415 == 35)
    goto <bb 474>; [INV]
  else
    goto <bb 484>; [INV]

  <bb 474> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.897_416 = function_assign_collect;
  D.250551 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.897_416, &second2);

  <bb 475> :
  _417 = D.250551;
  retval.896 = _417 == 0B;
  if (retval.896 != 0)
    goto <bb 476>; [INV]
  else
    goto <bb 477>; [INV]

  <bb 476> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 480>; [INV]

  <bb 477> :
  function_assign_collect.898_418 = function_assign_collect;
  D.250552 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.898_418, &second2);

  <bb 478> :
  _419 = D.250552;
  function_assign_array::operator= (&assign_array, _419);

  <bb 479> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 480> :
  assign_type.stmt = gc;
  getFunctionAssignLHS.899_420 = getFunctionAssignLHS;
  assign_type.assign_tree = getFunctionAssignLHS.899_420;
  D.250553 = cgraph_node::get_fun (node);

  <bb 481> :
  _421 = D.250553;
  _422 = _421->decl;
  assign_type.form_tree = _422;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 482> :
  function_assign_collect.900_423 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.900_423, &second2, &assign_array);

  <bb 483> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 484> :
  second = {CLOBBER};
  second2 = {CLOBBER};
  goto <bb 498>; [INV]

  <bb 485> :
  getFunctionAssignLHS.901_424 = getFunctionAssignLHS;
  _425 = getFunctionAssignLHS.901_424->base.code;
  if (_425 == 49)
    goto <bb 486>; [INV]
  else
    goto <bb 498>; [INV]

  <bb 486> :
  debug_gimple_stmt (gc);

  <bb 487> :
  getFunctionAssignLHS.902_426 = getFunctionAssignLHS;
  _427 = getFunctionAssignLHS.902_426->exp.operands[0];
  second = _427;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.904_428 = function_assign_collect;
  D.250558 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.904_428, &second);

  <bb 488> :
  _429 = D.250558;
  retval.903 = _429 == 0B;
  if (retval.903 != 0)
    goto <bb 489>; [INV]
  else
    goto <bb 490>; [INV]

  <bb 489> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 493>; [INV]

  <bb 490> :
  function_assign_collect.905_430 = function_assign_collect;
  D.250559 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.905_430, &second);

  <bb 491> :
  _431 = D.250559;
  function_assign_array::operator= (&assign_array, _431);

  <bb 492> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 493> :
  assign_type.stmt = gc;
  D.250560 = gimple_assign_rhs1 (gc);

  <bb 494> :
  _432 = D.250560;
  assign_type.assign_tree = _432;
  D.250561 = cgraph_node::get_fun (node);

  <bb 495> :
  _433 = D.250561;
  _434 = _433->decl;
  assign_type.form_tree = _434;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 496> :
  function_assign_collect.906_435 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.906_435, &second, &assign_array);

  <bb 497> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 498> :
  getFunctionAssignRHS = {CLOBBER};
  getFunctionAssignLHS = {CLOBBER};

  <bb 499> :
<L373>:
  return;

  <bb 500> :
<L374>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 4

  <bb 501> :
<L375>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 3

  <bb 502> :
<L376>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 2

  <bb 503> :
<L377>:
  second = {CLOBBER};
  resx 1

  <bb 504> :
<L378>:
  D.195217 = {CLOBBER};
  resx 16

  <bb 505> :
<L379>:
  D.195218 = {CLOBBER};
  resx 18

  <bb 506> :
<L380>:
  D.195220 = {CLOBBER};
  resx 20

  <bb 507> :
<L381>:
  assign_type = {CLOBBER};
  resx 15

  <bb 508> :
<L382>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 14

  <bb 509> :
<L383>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 13

  <bb 510> :
<L384>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  resx 12

  <bb 511> :
<L385>:
  function_free_array::~function_free_array (&fun_array);
  resx 11

  <bb 512> :
<L386>:
  std::vector<free_type>::~vector (&free_type_array);
  resx 10

  <bb 513> :
<L387>:
  getFucntionDecl = {CLOBBER};
  free_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  free_type = {CLOBBER};
  resx 9

  <bb 514> :
<L388>:
  ret_type = {CLOBBER};
  resx 32

  <bb 515> :
<L389>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 31

  <bb 516> :
<L390>:
  function_return_array::~function_return_array (&fun_array);
  resx 30

  <bb 517> :
<L391>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  resx 29

  <bb 518> :
<L392>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 39

  <bb 519> :
<L393>:
  function_return_array::~function_return_array (&fun_array);
  resx 38

  <bb 520> :
<L394>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};
  ret_type = {CLOBBER};
  resx 37

  <bb 521> :
<L395>:
  assign_type = {CLOBBER};
  resx 46

  <bb 522> :
<L396>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 45

  <bb 523> :
<L397>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 44

  <bb 524> :
<L398>:
  getFunctionAssignRHS = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 43

  <bb 525> :
<L399>:
  std::vector<pthread_detched_type>::~vector (&pthread_detched_array);
  resx 53

  <bb 526> :
<L400>:
  function_pthread_detched_array::~function_pthread_detched_array (&fun_array);
  resx 52

  <bb 527> :
<L401>:
  getFucntionDecl = {CLOBBER};
  fun_array = {CLOBBER};
  pthread_detched_array = {CLOBBER};
  pthread_detched_type = {CLOBBER};
  resx 51

  <bb 528> :
<L402>:
  std::vector<pthread_exit_type>::~vector (&pthread_exit_array);
  resx 59

  <bb 529> :
<L403>:
  function_pthread_exit_array::~function_pthread_exit_array (&fun_array);
  resx 58

  <bb 530> :
<L404>:
  getFucntionDecl = {CLOBBER};
  fun_array = {CLOBBER};
  pthread_exit_array = {CLOBBER};
  pthread_exit_type = {CLOBBER};
  resx 57

  <bb 531> :
<L405>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 67

  <bb 532> :
<L406>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 66

  <bb 533> :
<L407>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 65

  <bb 534> :
<L408>:
  getVARDECLtree = {CLOBBER};
  resx 64

  <bb 535> :
<L409>:
  D.195628 = {CLOBBER};
  resx 75

  <bb 536> :
<L410>:
  D.195629 = {CLOBBER};
  resx 77

  <bb 537> :
<L411>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 74

  <bb 538> :
<L412>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 73

  <bb 539> :
<L413>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  second = {CLOBBER};
  resx 72

  <bb 540> :
<L414>:
  function_return_array::~function_return_array (&fun_array);
  resx 86

  <bb 541> :
<L415>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 85

  <bb 542> :
<L416>:
  getFucntionDecl = {CLOBBER};
  ret_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  ret_type = {CLOBBER};
  resx 84

  <bb 543> :
<L417>:
  getreturnFucntionDecl = {CLOBBER};
  resx 63

  <bb 544> :
<L418>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 94

  <bb 545> :
<L419>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 93

  <bb 546> :
<L420>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 92

  <bb 547> :
<L421>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 100

  <bb 548> :
<L422>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 99

  <bb 549> :
<L423>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 98

  <bb 550> :
<L424>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 106

  <bb 551> :
<L425>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 105

  <bb 552> :
<L426>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 104

  <bb 553> :
<L427>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 112

  <bb 554> :
<L428>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 111

  <bb 555> :
<L429>:
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 110

  <bb 556> :
<L430>:
  D.195670 = {CLOBBER};
  resx 120

  <bb 557> :
<L431>:
  D.195671 = {CLOBBER};
  resx 122

  <bb 558> :
<L432>:
  D.195673 = {CLOBBER};
  resx 124

  <bb 559> :
<L433>:
  assign_type = {CLOBBER};
  resx 119

  <bb 560> :
<L434>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 118

  <bb 561> :
<L435>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 117

  <bb 562> :
<L436>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  resx 116

  <bb 563> :
<L437>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 132

  <bb 564> :
<L438>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 131

  <bb 565> :
<L439>:
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 130

  <bb 566> :
<L440>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 138

  <bb 567> :
<L441>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 137

  <bb 568> :
<L442>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 136

  <bb 569> :
<L443>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 144

  <bb 570> :
<L444>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 143

  <bb 571> :
<L445>:
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 142

  <bb 572> :
<L446>:
  D.195695 = {CLOBBER};
  resx 152

  <bb 573> :
<L447>:
  D.195696 = {CLOBBER};
  resx 154

  <bb 574> :
<L448>:
  D.195698 = {CLOBBER};
  resx 156

  <bb 575> :
<L449>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 151

  <bb 576> :
<L450>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 150

  <bb 577> :
<L451>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 149

  <bb 578> :
<L452>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 163

  <bb 579> :
<L453>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 162

  <bb 580> :
<L454>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 161

  <bb 581> :
<L455>:
  D.195707 = {CLOBBER};
  resx 170

  <bb 582> :
<L456>:
  D.195708 = {CLOBBER};
  resx 172

  <bb 583> :
<L457>:
  D.195710 = {CLOBBER};
  resx 174

  <bb 584> :
<L458>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 169

  <bb 585> :
<L459>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 168

  <bb 586> :
<L460>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 167

  <bb 587> :
<L461>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 181

  <bb 588> :
<L462>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 180

  <bb 589> :
<L463>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 179

  <bb 590> :
<L464>:
  second = {CLOBBER};
  second2 = {CLOBBER};
  resx 148

  <bb 591> :
<L465>:
  D.195720 = {CLOBBER};
  resx 190

  <bb 592> :
<L466>:
  D.195721 = {CLOBBER};
  resx 192

  <bb 593> :
<L467>:
  D.195723 = {CLOBBER};
  resx 194

  <bb 594> :
<L468>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 189

  <bb 595> :
<L469>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 188

  <bb 596> :
<L470>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 187

  <bb 597> :
<L471>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 201

  <bb 598> :
<L472>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 200

  <bb 599> :
<L473>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 199

  <bb 600> :
<L474>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 207

  <bb 601> :
<L475>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 206

  <bb 602> :
<L476>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 205

  <bb 603> :
<L477>:
  second = {CLOBBER};
  second2 = {CLOBBER};
  resx 186

  <bb 604> :
<L478>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 214

  <bb 605> :
<L479>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 213

  <bb 606> :
<L480>:
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 212

  <bb 607> :
<L481>:
  getFunctionAssignRHS = {CLOBBER};
  getFunctionAssignLHS = {CLOBBER};
  resx 91

}



;; Function std::vector<free_type>::vector (_ZNSt6vectorI9free_typeSaIS0_EEC2Ev, funcdef_no=6367, decl_uid=176650, cgraph_uid=3342, symbol_order=4118)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<free_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.176658;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_ZNSt12_Vector_baseI9free_typeSaIS0_EEC2Ev, funcdef_no=6365, decl_uid=176108, cgraph_uid=3339, symbol_order=4115)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI9free_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7716, decl_uid=176000, cgraph_uid=4348, symbol_order=5133)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<free_type>::allocator (this);
  _1 = &this->D.176003;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<free_type>::allocator (_ZNSaI9free_typeEC2Ev, funcdef_no=8618, decl_uid=175778, cgraph_uid=5250, symbol_order=6039)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<free_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<free_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI9free_typeEC2Ev, funcdef_no=9405, decl_uid=175707, cgraph_uid=6037, symbol_order=6826)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function function_free_array::function_free_array (_ZN19function_free_arrayC2Ev, funcdef_no=6370, decl_uid=192721, cgraph_uid=3345, symbol_order=4121)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_free_array::function_free_array (struct function_free_array * const this)
{
  <bb 2> :
  _1 = &this->free_type_array;
  std::vector<free_type>::vector (_1);
  return;

}



;; Function function_free_array::operator= (_ZN19function_free_arrayaSERKS_, funcdef_no=6372, decl_uid=195170, cgraph_uid=3347, symbol_order=4123)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_free_array & function_free_array::operator= (struct function_free_array * const this, const struct function_free_array & D.195171)
{
  struct function_free_array & D.250568;

  <bb 2> :
  _1 = &D.195171->free_type_array;
  _2 = &this->free_type_array;
  std::vector<free_type>::operator= (_2, _1);
  D.250568 = this;

  <bb 3> :
<L0>:
  return D.250568;

}



;; Function std::vector<free_type>::operator= (_ZNSt6vectorI9free_typeSaIS0_EEaSERKS2_, funcdef_no=7724, decl_uid=176236, cgraph_uid=4358, symbol_order=5143)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<free_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct free_type * D.250603;
  struct free_type * __tmp;
  const size_type __xlen;
  struct vector & D.250601;
  struct __normal_iterator D.250598;
  struct __normal_iterator D.250597;
  struct __normal_iterator D.250596;
  struct __normal_iterator D.250595;
  struct __normal_iterator D.250594;
  bool retval.911;
  struct __normal_iterator D.250589;
  struct __normal_iterator D.250588;
  bool retval.910;
  bool iftmp.909;
  bool retval.908;
  bool retval.907;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.907 = __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_propagate_on_copy_assign ();
  if (retval.907 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.176658;
  _4 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.176658;
  _6 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.909 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.909 = 0;

  <bb 8> :
  retval.908 = iftmp.909;
  if (retval.908 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<free_type>::clear (this);
  _8 = &this->D.176658;
  _9 = this->D.176658._M_impl.D.176003._M_end_of_storage;
  _10 = this->D.176658._M_impl.D.176003._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 24;
  _13 = (long unsigned int) _12;
  _14 = this->D.176658._M_impl.D.176003._M_start;
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (_8, _14, _13);
  this->D.176658._M_impl.D.176003._M_start = 0B;
  this->D.176658._M_impl.D.176003._M_finish = 0B;
  this->D.176658._M_impl.D.176003._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.176658;
  _16 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.176658;
  _18 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<free_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<free_type>::size (__x);
  _19 = std::vector<free_type>::capacity (this);
  retval.910 = __xlen > _19;
  if (retval.910 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.250588 = std::vector<free_type>::end (__x);
  D.250589 = std::vector<free_type>::begin (__x);
  D.250603 = std::vector<free_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (this, __xlen, D.250589, D.250588);
  __tmp = D.250603;
  _20 = &this->D.176658;
  _21 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.176658._M_impl.D.176003._M_finish;
  _23 = this->D.176658._M_impl.D.176003._M_start;
  std::_Destroy<free_type*, free_type> (_23, _22, _21);
  _24 = &this->D.176658;
  _25 = this->D.176658._M_impl.D.176003._M_end_of_storage;
  _26 = this->D.176658._M_impl.D.176003._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 24;
  _29 = (long unsigned int) _28;
  _30 = this->D.176658._M_impl.D.176003._M_start;
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (_24, _30, _29);
  this->D.176658._M_impl.D.176003._M_start = __tmp;
  _31 = this->D.176658._M_impl.D.176003._M_start;
  _32 = __xlen * 24;
  _33 = _31 + _32;
  this->D.176658._M_impl.D.176003._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<free_type>::size (this);
  retval.911 = __xlen <= _34;
  if (retval.911 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.176658;
  _36 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_35);
  D.250594 = std::vector<free_type>::end (this);
  D.250595 = std::vector<free_type>::begin (this);
  D.250596 = std::vector<free_type>::end (__x);
  D.250597 = std::vector<free_type>::begin (__x);
  D.250598 = std::copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (D.250597, D.250596, D.250595);
  std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type> (D.250598, D.250594, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.176658._M_impl.D.176003._M_start;
  _38 = __x->D.176658._M_impl.D.176003._M_start;
  _39 = std::vector<free_type>::size (this);
  _40 = _39 * 24;
  _41 = _38 + _40;
  _42 = __x->D.176658._M_impl.D.176003._M_start;
  std::copy<free_type*, free_type*> (_42, _41, _37);
  _43 = &this->D.176658;
  _44 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.176658._M_impl.D.176003._M_finish;
  _46 = __x->D.176658._M_impl.D.176003._M_finish;
  _47 = __x->D.176658._M_impl.D.176003._M_start;
  _48 = std::vector<free_type>::size (this);
  _49 = _48 * 24;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<free_type*, free_type*, free_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.176658._M_impl.D.176003._M_start;
  _52 = __xlen * 24;
  _53 = _51 + _52;
  this->D.176658._M_impl.D.176003._M_finish = _53;

  <bb 17> :
  D.250601 = this;

  <bb 18> :
<L19>:
  return D.250601;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI9free_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7725, decl_uid=175870, cgraph_uid=4356, symbol_order=5141)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_propagate_on_copy_assign ()
{
  bool D.250604;

  <bb 2> :
  D.250604 = 0;

  <bb 3> :
<L0>:
  return D.250604;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI9free_typeES1_E15_S_always_equalEv, funcdef_no=7726, decl_uid=175873, cgraph_uid=4357, symbol_order=5142)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_always_equal ()
{
  bool D.250606;

  <bb 2> :
  D.250606 = 1;

  <bb 3> :
<L0>:
  return D.250606;

}



;; Function std::operator!= (_ZStneRKSaI9free_typeES2_, funcdef_no=8627, decl_uid=175756, cgraph_uid=5259, symbol_order=6048)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.224014, const struct allocator & D.224015)
{
  bool D.250608;

  <bb 2> :
  D.250608 = 0;

  <bb 3> :
<L0>:
  return D.250608;

}



;; Function std::vector<free_type>::clear (_ZNSt6vectorI9free_typeSaIS0_EE5clearEv, funcdef_no=8628, decl_uid=176388, cgraph_uid=5260, symbol_order=6049)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<free_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.176658._M_impl.D.176003._M_start;
  std::vector<free_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<free_type>::_M_erase_at_end (_ZNSt6vectorI9free_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9408, decl_uid=176516, cgraph_uid=6040, symbol_order=6829)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<free_type>::_M_erase_at_end (struct vector * const this, struct free_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.176658._M_impl.D.176003._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 24;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.176658;
  _5 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.176658._M_impl.D.176003._M_finish;
  std::_Destroy<free_type*, free_type> (__pos, _6, _5);
  this->D.176658._M_impl.D.176003._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<free_type> > (_ZSt15__alloc_on_copyISaI9free_typeEEvRT_RKS2_, funcdef_no=8629, decl_uid=212801, cgraph_uid=5261, symbol_order=6050)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<free_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<free_type>::capacity (_ZNKSt6vectorI9free_typeSaIS0_EE8capacityEv, funcdef_no=8630, decl_uid=176304, cgraph_uid=5262, symbol_order=6051)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<free_type>::capacity (const struct vector * const this)
{
  size_type D.250613;

  <bb 2> :
  _1 = this->D.176658._M_impl.D.176003._M_end_of_storage;
  _2 = this->D.176658._M_impl.D.176003._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.250613 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.250613;

}



;; Function std::vector<free_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (_ZNSt6vectorI9free_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8631, decl_uid=212808, cgraph_uid=5263, symbol_order=6052)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct free_type * std::vector<free_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct free_type * D.250617;
  struct free_type * __result;
  struct free_type * D.250615;

  <bb 2> :
  _1 = &this->D.176658;
  D.250617 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_allocate (_1, __n);
  __result = D.250617;
  _2 = &this->D.176658;
  _3 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*, free_type> (__first, __last, __result, _3);

  <bb 3> :
  D.250615 = __result;

  <bb 4> :
<L0>:
  return D.250615;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.176658;
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<free_type>::end (_ZNSt6vectorI9free_typeSaIS0_EE3endEv, funcdef_no=8634, decl_uid=176271, cgraph_uid=5266, symbol_order=6055)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<free_type>::end (struct vector * const this)
{
  struct iterator D.224101;
  struct iterator D.250621;

  <bb 2> :
  _1 = &this->D.176658._M_impl.D.176003._M_finish;
  __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::__normal_iterator (&D.224101, _1);
  D.250621 = D.224101;
  D.224101 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250621;

}



;; Function __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9411, decl_uid=212890, cgraph_uid=6043, symbol_order=6832)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::__normal_iterator (struct __normal_iterator * const this, struct free_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<free_type>::begin (_ZNSt6vectorI9free_typeSaIS0_EE5beginEv, funcdef_no=8632, decl_uid=176267, cgraph_uid=5264, symbol_order=6053)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<free_type>::begin (struct vector * const this)
{
  struct iterator D.224055;
  struct iterator D.250624;

  <bb 2> :
  _1 = &this->D.176658._M_impl.D.176003._M_start;
  __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::__normal_iterator (&D.224055, _1);
  D.250624 = D.224055;
  D.224055 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250624;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8633, decl_uid=212909, cgraph_uid=5265, symbol_order=6054)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.250629;
  struct __normal_iterator D.250628;
  struct __normal_iterator D.250627;

  <bb 2> :
  D.250628 = std::__miter_base<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (__last);
  D.250629 = std::__miter_base<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (__first);
  D.250627 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (D.250629, D.250628, __result);

  <bb 3> :
<L0>:
  return D.250627;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9413, decl_uid=224067, cgraph_uid=6045, symbol_order=6834)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.250631;

  <bb 2> :
  D.250631 = __it;

  <bb 3> :
<L0>:
  return D.250631;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9414, decl_uid=224073, cgraph_uid=6047, symbol_order=6836)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct free_type * D.250635;
  struct __normal_iterator D.250633;

  <bb 2> :
  _1 = std::__niter_base<free_type*, std::vector<free_type> > (__result);
  _2 = std::__niter_base<const free_type*, std::vector<free_type> > (__last);
  _3 = std::__niter_base<const free_type*, std::vector<free_type> > (__first);
  D.250635 = std::__copy_move_a1<false, const free_type*, free_type*> (_3, _2, _1);
  _4 = D.250635;
  D.250633 = std::__niter_wrap<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.250633;

}



;; Function std::__niter_base<free_type*, std::vector<free_type> > (_ZSt12__niter_baseIP9free_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10061, decl_uid=234441, cgraph_uid=6693, symbol_order=7486)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__niter_base<free_type*, std::vector<free_type> > (struct __normal_iterator __it)
{
  struct free_type * D.250636;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (&__it);
  D.250636 = *_1;

  <bb 3> :
<L0>:
  return D.250636;

}



;; Function __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9425, decl_uid=212877, cgraph_uid=6057, symbol_order=6846)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * const & __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (const struct __normal_iterator * const this)
{
  struct free_type * const & D.250638;

  <bb 2> :
  D.250638 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.250638;

}



;; Function std::__niter_base<const free_type*, std::vector<free_type> > (_ZSt12__niter_baseIPK9free_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10060, decl_uid=234290, cgraph_uid=6692, symbol_order=7485)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct free_type * std::__niter_base<const free_type*, std::vector<free_type> > (struct __normal_iterator __it)
{
  const struct free_type * D.250640;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::base (&__it);
  D.250640 = *_1;

  <bb 3> :
<L0>:
  return D.250640;

}



;; Function std::__copy_move_a1<false, const free_type*, free_type*> (_ZSt14__copy_move_a1ILb0EPK9free_typePS0_ET1_T0_S5_S4_, funcdef_no=10062, decl_uid=234444, cgraph_uid=6694, symbol_order=7487)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__copy_move_a1<false, const free_type*, free_type*> (const struct free_type * __first, const struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.250644;
  struct free_type * D.250642;

  <bb 2> :
  D.250644 = std::__copy_move_a2<false, const free_type*, free_type*> (__first, __last, __result);
  D.250642 = D.250644;

  <bb 3> :
<L0>:
  return D.250642;

}



;; Function std::__copy_move_a2<false, const free_type*, free_type*> (_ZSt14__copy_move_a2ILb0EPK9free_typePS0_ET1_T0_S5_S4_, funcdef_no=10557, decl_uid=240074, cgraph_uid=7189, symbol_order=7982)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__copy_move_a2<false, const free_type*, free_type*> (const struct free_type * __first, const struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.250645;

  <bb 2> :
  D.250645 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<free_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.250645;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<free_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI9free_typeEEPT_PKS4_S7_S5_, funcdef_no=10796, decl_uid=243408, cgraph_uid=7428, symbol_order=8223)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct free_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<free_type> (const struct free_type * __first, const struct free_type * __last, struct free_type * __result)
{
  const ptrdiff_t _Num;
  struct free_type * D.250650;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 24;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.912_2 = (long unsigned int) _Num;
  _3 = _Num.912_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.913_4 = (long unsigned int) _Num;
  _5 = _Num.913_4 * 24;
  D.250650 = __result + _5;

  <bb 5> :
<L3>:
  return D.250650;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10063, decl_uid=234448, cgraph_uid=6695, symbol_order=7488)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type*> (struct __normal_iterator __from, struct free_type * __res)
{
  struct __normal_iterator D.250652;

  <bb 2> :
  _1 = std::__niter_base<free_type*, std::vector<free_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 24;
  D.250652 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.250652;

}



;; Function __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10558, decl_uid=212868, cgraph_uid=7190, symbol_order=7983)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct free_type * const D.243414;
  struct __normal_iterator D.243415;
  struct __normal_iterator D.250654;

  <bb 2> :
  _1 = this->_M_current;
  __n.914_2 = (long unsigned int) __n;
  _3 = __n.914_2 * 24;
  _4 = _1 + _3;
  D.243414 = _4;
  __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::__normal_iterator (&D.243415, &D.243414);
  D.250654 = D.243415;
  D.243415 = {CLOBBER};
  D.243414 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.250654;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8635, decl_uid=212915, cgraph_uid=5267, symbol_order=6056)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.224104)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9416, decl_uid=224106, cgraph_uid=6048, symbol_order=6837)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10064, decl_uid=234472, cgraph_uid=6696, symbol_order=7489)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (struct __normal_iterator D.240083, struct __normal_iterator D.240084)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<free_type*, free_type*> (_ZSt4copyIP9free_typeS1_ET0_T_S3_S2_, funcdef_no=8636, decl_uid=212923, cgraph_uid=5268, symbol_order=6057)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::copy<free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.250660;
  struct free_type * D.250658;

  <bb 2> :
  _1 = std::__miter_base<free_type*> (__last);
  _2 = std::__miter_base<free_type*> (__first);
  D.250660 = std::__copy_move_a<false, free_type*, free_type*> (_2, _1, __result);
  D.250658 = D.250660;

  <bb 3> :
<L0>:
  return D.250658;

}



;; Function std::__miter_base<free_type*> (_ZSt12__miter_baseIP9free_typeET_S2_, funcdef_no=9417, decl_uid=224122, cgraph_uid=6049, symbol_order=6838)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__miter_base<free_type*> (struct free_type * __it)
{
  struct free_type * D.250661;

  <bb 2> :
  D.250661 = __it;

  <bb 3> :
<L0>:
  return D.250661;

}



;; Function std::__copy_move_a<false, free_type*, free_type*> (_ZSt13__copy_move_aILb0EP9free_typeS1_ET1_T0_S3_S2_, funcdef_no=9418, decl_uid=224124, cgraph_uid=6050, symbol_order=6839)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__copy_move_a<false, free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.250665;
  struct free_type * D.250663;

  <bb 2> :
  __result.915_1 = __result;
  _2 = std::__niter_base<free_type*> (__result.915_1);
  _3 = std::__niter_base<free_type*> (__last);
  _4 = std::__niter_base<free_type*> (__first);
  D.250665 = std::__copy_move_a1<false, free_type*, free_type*> (_4, _3, _2);
  _5 = D.250665;
  D.250663 = std::__niter_wrap<free_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.250663;

}



;; Function std::__niter_base<free_type*> (_ZSt12__niter_baseIP9free_typeET_S2_, funcdef_no=10065, decl_uid=224333, cgraph_uid=6697, symbol_order=7490)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__niter_base<free_type*> (struct free_type * __it)
{
  struct free_type * D.250666;

  <bb 2> :
  D.250666 = __it;

  <bb 3> :
<L0>:
  return D.250666;

}



;; Function std::__copy_move_a1<false, free_type*, free_type*> (_ZSt14__copy_move_a1ILb0EP9free_typeS1_ET1_T0_S3_S2_, funcdef_no=10066, decl_uid=234483, cgraph_uid=6698, symbol_order=7491)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__copy_move_a1<false, free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.250670;
  struct free_type * D.250668;

  <bb 2> :
  D.250670 = std::__copy_move_a2<false, free_type*, free_type*> (__first, __last, __result);
  D.250668 = D.250670;

  <bb 3> :
<L0>:
  return D.250668;

}



;; Function std::__copy_move_a2<false, free_type*, free_type*> (_ZSt14__copy_move_a2ILb0EP9free_typeS1_ET1_T0_S3_S2_, funcdef_no=10559, decl_uid=240092, cgraph_uid=7191, symbol_order=7984)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__copy_move_a2<false, free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.250671;

  <bb 2> :
  D.250671 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<free_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.250671;

}



;; Function std::__niter_wrap<free_type*> (_ZSt12__niter_wrapIP9free_typeET_RKS2_S2_, funcdef_no=10067, decl_uid=234487, cgraph_uid=6699, symbol_order=7492)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__niter_wrap<free_type*> (struct free_type * const & D.240096, struct free_type * __res)
{
  struct free_type * D.250673;

  <bb 2> :
  D.250673 = __res;

  <bb 3> :
<L0>:
  return D.250673;

}



;; Function std::__uninitialized_copy_a<free_type*, free_type*, free_type> (_ZSt22__uninitialized_copy_aIP9free_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8637, decl_uid=212927, cgraph_uid=5269, symbol_order=6058)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__uninitialized_copy_a<free_type*, free_type*, free_type> (struct free_type * __first, struct free_type * __last, struct free_type * __result, struct allocator & D.224131)
{
  struct free_type * D.250677;
  struct free_type * D.250675;

  <bb 2> :
  D.250677 = std::uninitialized_copy<free_type*, free_type*> (__first, __last, __result);
  D.250675 = D.250677;

  <bb 3> :
<L0>:
  return D.250675;

}



;; Function std::uninitialized_copy<free_type*, free_type*> (_ZSt18uninitialized_copyIP9free_typeS1_ET0_T_S3_S2_, funcdef_no=9419, decl_uid=224133, cgraph_uid=6051, symbol_order=6840)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::uninitialized_copy<free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.250680;
  const bool __assignable;
  struct free_type * D.250678;

  <bb 2> :
  __assignable = 1;
  D.250680 = std::__uninitialized_copy<false>::__uninit_copy<free_type*, free_type*> (__first, __last, __result);
  D.250678 = D.250680;

  <bb 3> :
<L0>:
  return D.250678;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<free_type*, free_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP9free_typeS3_EET0_T_S5_S4_, funcdef_no=10068, decl_uid=234521, cgraph_uid=6700, symbol_order=7493)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct free_type * std::__uninitialized_copy<false>::__uninit_copy<free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * __cur;
  struct free_type * D.250681;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<free_type> (__cur);
  std::_Construct<free_type, free_type&> (_1, __first);
  __first = __first + 24;
  __cur = __cur + 24;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.250681 = __cur;

  <bb 6> :
<L3>:
  return D.250681;

}



;; Function std::_Construct<free_type, free_type&> (_ZSt10_ConstructI9free_typeJRS0_EEvPT_DpOT0_, funcdef_no=10560, decl_uid=240104, cgraph_uid=7192, symbol_order=7985)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<free_type, free_type&> (struct free_type * __p, struct free_type & __args#0)
{
  void * D.243434;
  void * D.243433;
  const struct free_type * D.243435;

  <bb 2> :
  D.243435 = std::forward<free_type&> (__args#0);
  D.243433 = __p;
  D.243434 = operator new (24, D.243433);
  MEM[(struct free_type *)D.243434] = *D.243435;
  return;

}



;; Function std::forward<free_type&> (_ZSt7forwardIR9free_typeEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=10797, decl_uid=243431, cgraph_uid=7429, symbol_order=8224)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct free_type & std::forward<free_type&> (struct type & __t)
{
  struct free_type & D.250683;

  <bb 2> :
  D.250683 = __t;

  <bb 3> :
<L0>:
  return D.250683;

}



;; Function free_type::free_type (_ZN9free_typeC2Ev, funcdef_no=6374, decl_uid=195182, cgraph_uid=3349, symbol_order=4125)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void free_type::free_type (struct free_type * const this)
{
  <bb 2> :
  this->Looserulesfree = 0;
  return;

}



;; Function std::vector<free_type>::push_back (_ZNSt6vectorI9free_typeSaIS0_EE9push_backERKS0_, funcdef_no=7727, decl_uid=176338, cgraph_uid=4360, symbol_order=5145)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<free_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.250688;

  <bb 2> :
  _1 = this->D.176658._M_impl.D.176003._M_finish;
  _2 = this->D.176658._M_impl.D.176003._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.176658._M_impl.D.176003._M_finish;
  _4 = &this->D.176658._M_impl;
  std::allocator_traits<std::allocator<free_type> >::construct<free_type, const free_type&> (_4, _3, __x);
  _5 = this->D.176658._M_impl.D.176003._M_finish;
  _6 = _5 + 24;
  this->D.176658._M_impl.D.176003._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.250688 = std::vector<free_type>::end (this);
  std::vector<free_type>::_M_realloc_insert<const free_type&> (this, D.250688, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<free_type> >::construct<free_type, const free_type&> (_ZNSt16allocator_traitsISaI9free_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8638, decl_uid=212939, cgraph_uid=5270, symbol_order=6059)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<free_type> >::construct<free_type, const free_type&> (struct allocator_type & __a, struct free_type * __p, const struct free_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const free_type&> (__args#0);
  __gnu_cxx::new_allocator<free_type>::construct<free_type, const free_type&> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::construct<free_type, const free_type&> (_ZN9__gnu_cxx13new_allocatorI9free_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9421, decl_uid=224150, cgraph_uid=6053, symbol_order=6842)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::construct<free_type, const free_type&> (struct new_allocator * const this, struct free_type * __p, const struct free_type & __args#0)
{
  void * D.234533;
  void * D.234532;
  const struct free_type * D.234534;

  <bb 2> :
  D.234534 = std::forward<const free_type&> (__args#0);
  D.234532 = __p;
  D.234533 = operator new (24, D.234532);
  MEM[(struct free_type *)D.234533] = *D.234534;
  return;

}



;; Function std::vector<free_type>::_M_realloc_insert<const free_type&> (_ZNSt6vectorI9free_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8639, decl_uid=213108, cgraph_uid=5274, symbol_order=6063)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<free_type>::_M_realloc_insert<const free_type&> (struct vector * const this, struct iterator __position, const struct free_type & __args#0)
{
  struct free_type * D.250693;
  const size_type D.250692;
  struct free_type * __new_finish;
  struct free_type * __new_start;
  const size_type __elems_before;
  struct free_type * __old_finish;
  struct free_type * __old_start;
  const size_type __len;
  struct iterator D.224161;

  <bb 2> :
  D.250692 = std::vector<free_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.250692;
  __old_start = this->D.176658._M_impl.D.176003._M_start;
  __old_finish = this->D.176658._M_impl.D.176003._M_finish;
  D.224161 = std::vector<free_type>::begin (this);
  _1 = __gnu_cxx::operator-<free_type*, std::vector<free_type> > (&__position, &D.224161);
  __elems_before = (const size_type) _1;
  D.224161 = {CLOBBER};
  _2 = &this->D.176658;
  D.250693 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_allocate (_2, __len);
  __new_start = D.250693;
  __new_finish = __new_start;
  _3 = std::forward<const free_type&> (__args#0);
  _4 = __elems_before * 24;
  _5 = __new_start + _4;
  _6 = &this->D.176658._M_impl;
  std::allocator_traits<std::allocator<free_type> >::construct<free_type, const free_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.176658;
  _8 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<free_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 24;
  _11 = &this->D.176658;
  _12 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<free_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.176658;
  _23 = this->D.176658._M_impl.D.176003._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 24;
  _26 = (long unsigned int) _25;
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.176658._M_impl.D.176003._M_start = __new_start;
  this->D.176658._M_impl.D.176003._M_finish = __new_finish;
  _27 = __len * 24;
  _28 = __new_start + _27;
  this->D.176658._M_impl.D.176003._M_end_of_storage = _28;
  return;

}



;; Function std::vector<free_type>::_M_check_len (_ZNKSt6vectorI9free_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9422, decl_uid=176507, cgraph_uid=6054, symbol_order=6843)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<free_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.918;
  size_type D.250697;
  const long unsigned int D.234539;
  bool retval.916;

  <bb 2> :
  _1 = std::vector<free_type>::max_size (this);
  _2 = std::vector<free_type>::size (this);
  _3 = _1 - _2;
  __n.917_4 = __n;
  retval.916 = _3 < __n.917_4;
  if (retval.916 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<free_type>::size (this);
  _6 = std::vector<free_type>::size (this);
  D.234539 = _6;
  _7 = std::max<long unsigned int> (&D.234539, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.234539 = {CLOBBER};
  _9 = std::vector<free_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<free_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.918 = std::vector<free_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.918 = __len;

  <bb 8> :
  D.250697 = iftmp.918;

  <bb 9> :
<L6>:
  return D.250697;

}



;; Function std::vector<free_type>::max_size (_ZNKSt6vectorI9free_typeSaIS0_EE8max_sizeEv, funcdef_no=10069, decl_uid=176293, cgraph_uid=6701, symbol_order=7494)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<free_type>::max_size (const struct vector * const this)
{
  size_type D.250704;

  <bb 2> :
  _1 = &this->D.176658;
  _2 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_1);
  D.250704 = std::vector<free_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.250704;

}



;; Function std::vector<free_type>::_S_max_size (_ZNSt6vectorI9free_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10561, decl_uid=176514, cgraph_uid=7193, symbol_order=7986)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<free_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.250706;

  <bb 2> :
  __diffmax = 384307168202282325;
  _1 = std::allocator_traits<std::allocator<free_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.250706 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250706;

}



;; Function std::allocator_traits<std::allocator<free_type> >::max_size (_ZNSt16allocator_traitsISaI9free_typeEE8max_sizeERKS1_, funcdef_no=10798, decl_uid=175828, cgraph_uid=7430, symbol_order=8225)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<free_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.250709;

  <bb 2> :
  D.250709 = __gnu_cxx::new_allocator<free_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.250709;

}



;; Function __gnu_cxx::new_allocator<free_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI9free_typeE8max_sizeEv, funcdef_no=10902, decl_uid=175670, cgraph_uid=7534, symbol_order=8329)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<free_type>::max_size (const struct new_allocator * const this)
{
  size_type D.250711;

  <bb 2> :
  D.250711 = __gnu_cxx::new_allocator<free_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.250711;

}



;; Function __gnu_cxx::operator-<free_type*, std::vector<free_type> > (_ZN9__gnu_cxxmiIP9free_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9423, decl_uid=224162, cgraph_uid=6055, symbol_order=6844)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<free_type*, std::vector<free_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.250713;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.250713 = _5 /[ex] 24;

  <bb 3> :
<L0>:
  return D.250713;

}



;; Function std::vector<free_type>::_S_relocate (_ZNSt6vectorI9free_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9424, decl_uid=176165, cgraph_uid=6056, symbol_order=6845)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::vector<free_type>::_S_relocate (struct free_type * __first, struct free_type * __last, struct free_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.250716;
  struct free_type * D.250715;

  <bb 2> :
  D.250715 = std::vector<free_type>::_S_do_relocate (__first, __last, __result, __alloc, D.250716);

  <bb 3> :
<L0>:
  return D.250715;

}



;; Function std::vector<free_type>::_S_do_relocate (_ZNSt6vectorI9free_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10070, decl_uid=176153, cgraph_uid=6702, symbol_order=7495)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::vector<free_type>::_S_do_relocate (struct free_type * __first, struct free_type * __last, struct free_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.240116)
{
  struct free_type * D.250718;

  <bb 2> :
  D.250718 = std::__relocate_a<free_type*, free_type*, std::allocator<free_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.250718;

}



;; Function std::__relocate_a<free_type*, free_type*, std::allocator<free_type> > (_ZSt12__relocate_aIP9free_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10562, decl_uid=224327, cgraph_uid=7194, symbol_order=7987)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__relocate_a<free_type*, free_type*, std::allocator<free_type> > (struct free_type * __first, struct free_type * __last, struct free_type * __result, struct allocator & __alloc)
{
  struct free_type * D.250720;

  <bb 2> :
  _1 = std::__niter_base<free_type*> (__result);
  _2 = std::__niter_base<free_type*> (__last);
  _3 = std::__niter_base<free_type*> (__first);
  D.250720 = std::__relocate_a_1<free_type*, free_type*, std::allocator<free_type> > (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.250720;

}



;; Function std::__relocate_a_1<free_type*, free_type*, std::allocator<free_type> > (_ZSt14__relocate_a_1IP9free_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10799, decl_uid=224478, cgraph_uid=7431, symbol_order=8226)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct free_type * std::__relocate_a_1<free_type*, free_type*, std::allocator<free_type> > (struct free_type * __first, struct free_type * __last, struct free_type * __result, struct allocator & __alloc)
{
  struct free_type * __cur;
  struct free_type * D.250722;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<free_type> (__first);
  _2 = std::__addressof<free_type> (__cur);
  std::__relocate_object_a<free_type, free_type, std::allocator<free_type> > (_2, _1, __alloc);
  __first = __first + 24;
  __cur = __cur + 24;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.250722 = __cur;

  <bb 6> :
<L3>:
  return D.250722;

}



;; Function std::__relocate_object_a<free_type, free_type, std::allocator<free_type> > (_ZSt19__relocate_object_aI9free_typeS0_SaIS0_EEvPT_PT0_RT1_, funcdef_no=10903, decl_uid=224507, cgraph_uid=7535, symbol_order=8330)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__relocate_object_a<free_type, free_type, std::allocator<free_type> > (struct free_type * restrict __dest, struct free_type * restrict __orig, struct allocator & __alloc)
{
  <bb 2> :
  _1 = std::move<free_type&> (__orig);
  std::allocator_traits<std::allocator<free_type> >::construct<free_type, free_type> (__alloc, __dest, _1);
  _2 = std::__addressof<free_type> (__orig);
  std::allocator_traits<std::allocator<free_type> >::destroy<free_type> (__alloc, _2);
  return;

}



;; Function std::move<free_type&> (_ZSt4moveIR9free_typeEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=10949, decl_uid=224519, cgraph_uid=7581, symbol_order=8376)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<free_type&> (struct free_type & __t)
{
  struct type & D.250724;

  <bb 2> :
  D.250724 = __t;

  <bb 3> :
<L0>:
  return D.250724;

}



;; Function std::allocator_traits<std::allocator<free_type> >::construct<free_type, free_type> (_ZNSt16allocator_traitsISaI9free_typeEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_, funcdef_no=10950, decl_uid=224521, cgraph_uid=7582, symbol_order=8377)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<free_type> >::construct<free_type, free_type> (struct allocator_type & __a, struct free_type * __p, struct free_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<free_type> (__args#0);
  __gnu_cxx::new_allocator<free_type>::construct<free_type, free_type> (__a, __p, _1);
  return;

}



;; Function std::forward<free_type> (_ZSt7forwardI9free_typeEOT_RNSt16remove_referenceIS1_E4typeE, funcdef_no=10969, decl_uid=245333, cgraph_uid=7601, symbol_order=8396)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct free_type & std::forward<free_type> (struct type & __t)
{
  struct free_type & D.250726;

  <bb 2> :
  D.250726 = __t;

  <bb 3> :
<L0>:
  return D.250726;

}



;; Function __gnu_cxx::new_allocator<free_type>::construct<free_type, free_type> (_ZN9__gnu_cxx13new_allocatorI9free_typeE9constructIS1_JS1_EEEvPT_DpOT0_, funcdef_no=10970, decl_uid=245335, cgraph_uid=7602, symbol_order=8397)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::construct<free_type, free_type> (struct new_allocator * const this, struct free_type * __p, struct free_type & __args#0)
{
  void * D.245742;
  void * D.245741;
  struct free_type * D.245743;

  <bb 2> :
  D.245743 = std::forward<free_type> (__args#0);
  D.245741 = __p;
  D.245742 = operator new (24, D.245741);
  MEM[(struct free_type *)D.245742] = *D.245743;
  return;

}



;; Function std::allocator_traits<std::allocator<free_type> >::destroy<free_type> (_ZNSt16allocator_traitsISaI9free_typeEE7destroyIS0_EEvRS1_PT_, funcdef_no=9426, decl_uid=224536, cgraph_uid=6058, symbol_order=6847)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<free_type> >::destroy<free_type> (struct allocator_type & __a, struct free_type * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<free_type>::destroy<free_type> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::destroy<free_type> (_ZN9__gnu_cxx13new_allocatorI9free_typeE7destroyIS1_EEvPT_, funcdef_no=10071, decl_uid=234554, cgraph_uid=6703, symbol_order=7496)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::destroy<free_type> (struct new_allocator * const this, struct free_type * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_free_array>::put (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7729, decl_uid=192387, cgraph_uid=4361, symbol_order=5146)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_free_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_free_array & v)
{
  bool D.250735;
  struct hash_entry * D.250734;
  unsigned int D.250733;
  bool ins;
  struct hash_entry * e;
  bool D.250731;
  void * D.213118;
  void * D.213117;

  <bb 2> :
  _1 = &this->m_table;
  D.250733 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::hash (k);
  _2 = D.250733;
  D.250734 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.250734;
  D.250735 = hash_map<tree_node*, function_free_array>::hash_entry::is_empty (e);
  ins = D.250735;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.213117 = &e->m_value;
  D.213118 = operator new (24, D.213117);
  function_free_array::function_free_array (D.213118, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_free_array::operator= (_4, v);

  <bb 5> :
  D.250731 = ~ins;

  <bb 6> :
<L3>:
  return D.250731;

  <bb 7> :
<L4>:
  operator delete (D.213118, D.213117);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8643, decl_uid=192545, cgraph_uid=5275, symbol_order=6064)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.250786;
  bool D.250785;
  bool D.250784;
  bool D.250783;
  bool D.250782;
  bool D.250781;
  struct value_type * D.250780;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.924;
  bool retval.923;
  bool retval.922;
  bool retval.921;
  bool retval.920;
  bool retval.919;
  struct value_type * D.250742;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 32;
  entry = _11 + _13;
  size = this->m_size;
  D.250781 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.919 = D.250781;
  if (retval.919 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.250782 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.920 = D.250782;
  if (retval.920 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 32;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.250783 = hash_map<tree_node*, function_free_array>::hash_entry::equal (entry, comparable);
  retval.921 = D.250783;
  if (retval.921 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  D.250742 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 32;
  entry = _24 + _26;
  D.250784 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.922 = D.250784;
  if (retval.922 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.250785 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.923 = D.250785;
  if (retval.923 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 32;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.250786 = hash_map<tree_node*, function_free_array>::hash_entry::equal (entry, comparable);
  retval.924 = D.250786;
  if (retval.924 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 32;
  D.250742 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.250742 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.250742 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 32;
  D.250742 = _37 + _39;

  <bb 27> :
<L37>:
  return D.250742;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9427, decl_uid=192626, cgraph_uid=6071, symbol_order=6860)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.250817;
  unsigned int D.250816;
  bool D.250815;
  bool D.250814;
  struct mem_alloc_description & D.250813;
  struct value_type * D.250812;
  unsigned int D.250811;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.234577;
  void * D.234576;
  struct hash_entry & D.234614;
  bool iftmp.928;
  bool retval.927;
  bool iftmp.926;
  bool retval.925;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 32;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.926 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.926 = 0;

  <bb 6> :
  retval.925 = iftmp.926;
  if (retval.925 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.250811 = hash_table_higher_prime_index (_5);
  nindex = D.250811;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.250812 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.250812;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.250814 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.250814;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.250815 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.250815;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.928 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.928 = 0;

  <bb 15> :
  retval.927 = iftmp.928;
  if (retval.927 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.250816 = hash_map<tree_node*, function_free_array>::hash_entry::hash (x);
  _16 = D.250816;
  D.250817 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.250817;
  D.234614 = std::move<hash_map<tree_node*, function_free_array>::hash_entry&> (x);
  D.234576 = q;
  D.234577 = operator new (32, D.234576);
  hash_map<tree_node*, function_free_array>::hash_entry::hash_entry (D.234577, D.234614);

  <bb 17> :
  p = p + 32;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10072, decl_uid=192521, cgraph_uid=6704, symbol_order=7497)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.250818;

  <bb 2> :
  D.250818 = this->m_size;

  <bb 3> :
<L0>:
  return D.250818;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10073, decl_uid=192523, cgraph_uid=6705, symbol_order=7498)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.250820;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.250820 = _1 - _2;

  <bb 3> :
<L0>:
  return D.250820;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10074, decl_uid=192623, cgraph_uid=6706, symbol_order=7499)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.929;
  bool D.250822;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.929 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.929 = 0;

  <bb 6> :
  D.250822 = iftmp.929;

  <bb 7> :
<L4>:
  return D.250822;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9301, decl_uid=192613, cgraph_uid=5933, symbol_order=6722)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.250844;
  struct value_type * D.250843;
  struct mem_alloc_description & D.250842;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.250840;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.250843 = xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_alloc (n);
  nentries = D.250843;
  goto <bb 6>; [INV]

  <bb 5> :
  D.250844 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_free_array>::hash_entry> (n);
  nentries = D.250844;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.250840 = nentries;

  <bb 9> :
<L14>:
  return D.250840;

}



;; Function xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=9982, decl_uid=216855, cgraph_uid=6614, symbol_order=7407)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.250847;
  struct hash_entry * D.250845;

  <bb 2> :
  D.250847 = xcalloc (count, 32);
  D.250845 = D.250847;

  <bb 3> :
<L0>:
  return D.250845;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_free_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=9983, decl_uid=233199, cgraph_uid=6615, symbol_order=7408)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_free_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.250854;
  struct hash_entry * D.250853;
  struct hash_entry * D.250851;
  bool retval.930;

  <bb 2> :
  retval.930 = need_finalization_p<hash_map<tree_node*, function_free_array>::hash_entry> ();
  if (retval.930 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 32;
  D.250853 = ggc_internal_cleared_alloc (_1, finalize, 32, c);
  D.250851 = D.250853;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 32;
  D.250854 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.250851 = D.250854;

  <bb 5> :
<L2>:
  return D.250851;

}



;; Function finalize<hash_map<tree_node*, function_free_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10495, decl_uid=239730, cgraph_uid=7130, symbol_order=7923)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_free_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_free_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10497, decl_uid=243154, cgraph_uid=7128, symbol_order=7921)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_free_array::~function_free_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_free_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10494, decl_uid=239729, cgraph_uid=7126, symbol_order=7919)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_free_array>::hash_entry> ()
{
  bool D.250855;

  <bb 2> :
  D.250855 = 1;

  <bb 3> :
<L0>:
  return D.250855;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10076, decl_uid=192446, cgraph_uid=6708, symbol_order=7501)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_free_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.250859;
  hashval_t D.250857;

  <bb 2> :
  _1 = &e->m_key;
  D.250859 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::hash (_1);
  D.250857 = D.250859;

  <bb 3> :
<L0>:
  return D.250857;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10075, decl_uid=192616, cgraph_uid=6707, symbol_order=7500)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.250872;
  bool D.250871;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.932;
  struct value_type * D.250863;
  bool retval.931;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 32;
  slot = _2 + _4;
  D.250871 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.931 = D.250871;
  if (retval.931 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.250863 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 32;
  slot = _8 + _10;
  D.250872 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.932 = D.250872;
  if (retval.932 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.250863 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.250863;

}



;; Function std::move<hash_map<tree_node*, function_free_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10077, decl_uid=234574, cgraph_uid=6709, symbol_order=7502)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_free_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.250873;

  <bb 2> :
  D.250873 = __t;

  <bb 3> :
<L0>:
  return D.250873;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9438, decl_uid=234599, cgraph_uid=6069, symbol_order=6858)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.234601)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.234601->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.234601->m_value;
  function_free_array::function_free_array (_2, _3);
  return;

}



;; Function function_free_array::function_free_array (_ZN19function_free_arrayC2EOS_, funcdef_no=9436, decl_uid=192738, cgraph_uid=6066, symbol_order=6855)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_free_array::function_free_array (struct function_free_array * const this, struct function_free_array & D.192740)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->free_type_array;
  _2 = &D.192740->free_type_array;
  std::vector<free_type>::vector (_1, _2);
  return;

}



;; Function std::vector<free_type>::vector (_ZNSt6vectorI9free_typeSaIS0_EEC2EOS2_, funcdef_no=9434, decl_uid=176615, cgraph_uid=6063, symbol_order=6852)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<free_type>::vector (struct vector * const this, struct vector & D.176617)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.176658;
  _2 = &D.176617->D.176658;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_ZNSt12_Vector_baseI9free_typeSaIS0_EEC2EOS2_, funcdef_no=9432, decl_uid=176083, cgraph_uid=6060, symbol_order=6849)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.176085)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.176085->_M_impl;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI9free_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10079, decl_uid=175989, cgraph_uid=6711, symbol_order=7504)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl&> (__x);
  std::allocator<free_type>::allocator (this, _1);
  _2 = &this->D.176003;
  _3 = std::move<std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.176003;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI9free_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10563, decl_uid=240146, cgraph_uid=7195, symbol_order=7988)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.250875;

  <bb 2> :
  D.250875 = __t;

  <bb 3> :
<L0>:
  return D.250875;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI9free_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10565, decl_uid=175945, cgraph_uid=7197, symbol_order=7990)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8928, decl_uid=216857, cgraph_uid=5560, symbol_order=6349)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9440, decl_uid=192634, cgraph_uid=6072, symbol_order=6861)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_free_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10081, decl_uid=192458, cgraph_uid=6713, symbol_order=7506)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::mark_empty<hash_map<tree_node*, function_free_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::mark_empty<hash_map<tree_node*, function_free_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10567, decl_uid=240161, cgraph_uid=7199, symbol_order=7992)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::mark_empty<hash_map<tree_node*, function_free_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function function_pthread_detched_array::function_pthread_detched_array (_ZN30function_pthread_detched_arrayC2Ev, funcdef_no=6387, decl_uid=193593, cgraph_uid=3362, symbol_order=4138)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_detched_array::function_pthread_detched_array (struct function_pthread_detched_array * const this)
{
  <bb 2> :
  _1 = &this->pthread_detched_array;
  std::vector<pthread_detched_type>::vector (_1);
  return;

}



;; Function std::vector<pthread_detched_type>::vector (_ZNSt6vectorI20pthread_detched_typeSaIS0_EEC2Ev, funcdef_no=6385, decl_uid=177695, cgraph_uid=3359, symbol_order=4135)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_detched_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.177703;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EEC2Ev, funcdef_no=6383, decl_uid=177153, cgraph_uid=3356, symbol_order=4132)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7731, decl_uid=177045, cgraph_uid=4363, symbol_order=5148)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<pthread_detched_type>::allocator (this);
  _1 = &this->D.177048;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<pthread_detched_type>::allocator (_ZNSaI20pthread_detched_typeEC2Ev, funcdef_no=8646, decl_uid=176823, cgraph_uid=5278, symbol_order=6067)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_detched_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeEC2Ev, funcdef_no=9442, decl_uid=176752, cgraph_uid=6074, symbol_order=6863)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function function_pthread_detched_array::operator= (_ZN30function_pthread_detched_arrayaSERKS_, funcdef_no=6389, decl_uid=195386, cgraph_uid=3364, symbol_order=4140)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_pthread_detched_array & function_pthread_detched_array::operator= (struct function_pthread_detched_array * const this, const struct function_pthread_detched_array & D.195387)
{
  struct function_pthread_detched_array & D.250878;

  <bb 2> :
  _1 = &D.195387->pthread_detched_array;
  _2 = &this->pthread_detched_array;
  std::vector<pthread_detched_type>::operator= (_2, _1);
  D.250878 = this;

  <bb 3> :
<L0>:
  return D.250878;

}



;; Function std::vector<pthread_detched_type>::operator= (_ZNSt6vectorI20pthread_detched_typeSaIS0_EEaSERKS2_, funcdef_no=7739, decl_uid=177281, cgraph_uid=4373, symbol_order=5158)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<pthread_detched_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct pthread_detched_type * D.250913;
  struct pthread_detched_type * __tmp;
  const size_type __xlen;
  struct vector & D.250911;
  struct __normal_iterator D.250908;
  struct __normal_iterator D.250907;
  struct __normal_iterator D.250906;
  struct __normal_iterator D.250905;
  struct __normal_iterator D.250904;
  bool retval.937;
  struct __normal_iterator D.250899;
  struct __normal_iterator D.250898;
  bool retval.936;
  bool iftmp.935;
  bool retval.934;
  bool retval.933;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.933 = __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_propagate_on_copy_assign ();
  if (retval.933 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.177703;
  _4 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.177703;
  _6 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.935 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.935 = 0;

  <bb 8> :
  retval.934 = iftmp.935;
  if (retval.934 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<pthread_detched_type>::clear (this);
  _8 = &this->D.177703;
  _9 = this->D.177703._M_impl.D.177048._M_end_of_storage;
  _10 = this->D.177703._M_impl.D.177048._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 16;
  _13 = (long unsigned int) _12;
  _14 = this->D.177703._M_impl.D.177048._M_start;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (_8, _14, _13);
  this->D.177703._M_impl.D.177048._M_start = 0B;
  this->D.177703._M_impl.D.177048._M_finish = 0B;
  this->D.177703._M_impl.D.177048._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.177703;
  _16 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.177703;
  _18 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<pthread_detched_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<pthread_detched_type>::size (__x);
  _19 = std::vector<pthread_detched_type>::capacity (this);
  retval.936 = __xlen > _19;
  if (retval.936 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.250898 = std::vector<pthread_detched_type>::end (__x);
  D.250899 = std::vector<pthread_detched_type>::begin (__x);
  D.250913 = std::vector<pthread_detched_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (this, __xlen, D.250899, D.250898);
  __tmp = D.250913;
  _20 = &this->D.177703;
  _21 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.177703._M_impl.D.177048._M_finish;
  _23 = this->D.177703._M_impl.D.177048._M_start;
  std::_Destroy<pthread_detched_type*, pthread_detched_type> (_23, _22, _21);
  _24 = &this->D.177703;
  _25 = this->D.177703._M_impl.D.177048._M_end_of_storage;
  _26 = this->D.177703._M_impl.D.177048._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 16;
  _29 = (long unsigned int) _28;
  _30 = this->D.177703._M_impl.D.177048._M_start;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (_24, _30, _29);
  this->D.177703._M_impl.D.177048._M_start = __tmp;
  _31 = this->D.177703._M_impl.D.177048._M_start;
  _32 = __xlen * 16;
  _33 = _31 + _32;
  this->D.177703._M_impl.D.177048._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<pthread_detched_type>::size (this);
  retval.937 = __xlen <= _34;
  if (retval.937 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.177703;
  _36 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_35);
  D.250904 = std::vector<pthread_detched_type>::end (this);
  D.250905 = std::vector<pthread_detched_type>::begin (this);
  D.250906 = std::vector<pthread_detched_type>::end (__x);
  D.250907 = std::vector<pthread_detched_type>::begin (__x);
  D.250908 = std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (D.250907, D.250906, D.250905);
  std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type> (D.250908, D.250904, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.177703._M_impl.D.177048._M_start;
  _38 = __x->D.177703._M_impl.D.177048._M_start;
  _39 = std::vector<pthread_detched_type>::size (this);
  _40 = _39 * 16;
  _41 = _38 + _40;
  _42 = __x->D.177703._M_impl.D.177048._M_start;
  std::copy<pthread_detched_type*, pthread_detched_type*> (_42, _41, _37);
  _43 = &this->D.177703;
  _44 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.177703._M_impl.D.177048._M_finish;
  _46 = __x->D.177703._M_impl.D.177048._M_finish;
  _47 = __x->D.177703._M_impl.D.177048._M_start;
  _48 = std::vector<pthread_detched_type>::size (this);
  _49 = _48 * 16;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<pthread_detched_type*, pthread_detched_type*, pthread_detched_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.177703._M_impl.D.177048._M_start;
  _52 = __xlen * 16;
  _53 = _51 + _52;
  this->D.177703._M_impl.D.177048._M_finish = _53;

  <bb 17> :
  D.250911 = this;

  <bb 18> :
<L19>:
  return D.250911;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI20pthread_detched_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7740, decl_uid=176915, cgraph_uid=4371, symbol_order=5156)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_propagate_on_copy_assign ()
{
  bool D.250914;

  <bb 2> :
  D.250914 = 0;

  <bb 3> :
<L0>:
  return D.250914;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI20pthread_detched_typeES1_E15_S_always_equalEv, funcdef_no=7741, decl_uid=176918, cgraph_uid=4372, symbol_order=5157)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_always_equal ()
{
  bool D.250916;

  <bb 2> :
  D.250916 = 1;

  <bb 3> :
<L0>:
  return D.250916;

}



;; Function std::operator!= (_ZStneRKSaI20pthread_detched_typeES2_, funcdef_no=8655, decl_uid=176801, cgraph_uid=5287, symbol_order=6076)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.224750, const struct allocator & D.224751)
{
  bool D.250918;

  <bb 2> :
  D.250918 = 0;

  <bb 3> :
<L0>:
  return D.250918;

}



;; Function std::vector<pthread_detched_type>::clear (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE5clearEv, funcdef_no=8656, decl_uid=177433, cgraph_uid=5288, symbol_order=6077)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_detched_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.177703._M_impl.D.177048._M_start;
  std::vector<pthread_detched_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<pthread_detched_type>::_M_erase_at_end (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9445, decl_uid=177561, cgraph_uid=6077, symbol_order=6866)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<pthread_detched_type>::_M_erase_at_end (struct vector * const this, struct pthread_detched_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.177703._M_impl.D.177048._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 16;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.177703;
  _5 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.177703._M_impl.D.177048._M_finish;
  std::_Destroy<pthread_detched_type*, pthread_detched_type> (__pos, _6, _5);
  this->D.177703._M_impl.D.177048._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<pthread_detched_type> > (_ZSt15__alloc_on_copyISaI20pthread_detched_typeEEvRT_RKS2_, funcdef_no=8657, decl_uid=213159, cgraph_uid=5289, symbol_order=6078)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<pthread_detched_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<pthread_detched_type>::capacity (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE8capacityEv, funcdef_no=8658, decl_uid=177349, cgraph_uid=5290, symbol_order=6079)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_detched_type>::capacity (const struct vector * const this)
{
  size_type D.250923;

  <bb 2> :
  _1 = this->D.177703._M_impl.D.177048._M_end_of_storage;
  _2 = this->D.177703._M_impl.D.177048._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.250923 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.250923;

}



;; Function std::vector<pthread_detched_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8659, decl_uid=213166, cgraph_uid=5291, symbol_order=6080)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct pthread_detched_type * std::vector<pthread_detched_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct pthread_detched_type * D.250927;
  struct pthread_detched_type * __result;
  struct pthread_detched_type * D.250925;

  <bb 2> :
  _1 = &this->D.177703;
  D.250927 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_allocate (_1, __n);
  __result = D.250927;
  _2 = &this->D.177703;
  _3 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*, pthread_detched_type> (__first, __last, __result, _3);

  <bb 3> :
  D.250925 = __result;

  <bb 4> :
<L0>:
  return D.250925;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.177703;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<pthread_detched_type>::end (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE3endEv, funcdef_no=8662, decl_uid=177316, cgraph_uid=5294, symbol_order=6083)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<pthread_detched_type>::end (struct vector * const this)
{
  struct iterator D.224837;
  struct iterator D.250931;

  <bb 2> :
  _1 = &this->D.177703._M_impl.D.177048._M_finish;
  __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (&D.224837, _1);
  D.250931 = D.224837;
  D.224837 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250931;

}



;; Function __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9448, decl_uid=213248, cgraph_uid=6080, symbol_order=6869)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (struct __normal_iterator * const this, struct pthread_detched_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<pthread_detched_type>::begin (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE5beginEv, funcdef_no=8660, decl_uid=177312, cgraph_uid=5292, symbol_order=6081)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<pthread_detched_type>::begin (struct vector * const this)
{
  struct iterator D.224791;
  struct iterator D.250934;

  <bb 2> :
  _1 = &this->D.177703._M_impl.D.177048._M_start;
  __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (&D.224791, _1);
  D.250934 = D.224791;
  D.224791 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250934;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8661, decl_uid=213267, cgraph_uid=5293, symbol_order=6082)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.250939;
  struct __normal_iterator D.250938;
  struct __normal_iterator D.250937;

  <bb 2> :
  D.250938 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (__last);
  D.250939 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (__first);
  D.250937 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (D.250939, D.250938, __result);

  <bb 3> :
<L0>:
  return D.250937;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9451, decl_uid=224809, cgraph_uid=6084, symbol_order=6873)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct pthread_detched_type * D.250943;
  struct __normal_iterator D.250941;

  <bb 2> :
  _1 = std::__niter_base<pthread_detched_type*, std::vector<pthread_detched_type> > (__result);
  _2 = std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (__last);
  _3 = std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (__first);
  D.250943 = std::__copy_move_a1<false, const pthread_detched_type*, pthread_detched_type*> (_3, _2, _1);
  _4 = D.250943;
  D.250941 = std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.250941;

}



;; Function std::__niter_base<pthread_detched_type*, std::vector<pthread_detched_type> > (_ZSt12__niter_baseIP20pthread_detched_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10085, decl_uid=234797, cgraph_uid=6717, symbol_order=7510)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__niter_base<pthread_detched_type*, std::vector<pthread_detched_type> > (struct __normal_iterator __it)
{
  struct pthread_detched_type * D.250944;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (&__it);
  D.250944 = *_1;

  <bb 3> :
<L0>:
  return D.250944;

}



;; Function __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9462, decl_uid=213235, cgraph_uid=6094, symbol_order=6883)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * const & __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (const struct __normal_iterator * const this)
{
  struct pthread_detched_type * const & D.250946;

  <bb 2> :
  D.250946 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.250946;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10087, decl_uid=234804, cgraph_uid=6719, symbol_order=7512)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (struct __normal_iterator __from, struct pthread_detched_type * __res)
{
  struct __normal_iterator D.250948;

  <bb 2> :
  _1 = std::__niter_base<pthread_detched_type*, std::vector<pthread_detched_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 16;
  D.250948 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.250948;

}



;; Function __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10572, decl_uid=213226, cgraph_uid=7204, symbol_order=7997)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct pthread_detched_type * const D.243486;
  struct __normal_iterator D.243487;
  struct __normal_iterator D.250950;

  <bb 2> :
  _1 = this->_M_current;
  __n.938_2 = (long unsigned int) __n;
  _3 = __n.938_2 * 16;
  _4 = _1 + _3;
  D.243486 = _4;
  __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (&D.243487, &D.243486);
  D.250950 = D.243487;
  D.243487 = {CLOBBER};
  D.243486 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.250950;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8663, decl_uid=213273, cgraph_uid=5295, symbol_order=6084)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.224840)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9453, decl_uid=224842, cgraph_uid=6085, symbol_order=6874)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10088, decl_uid=234828, cgraph_uid=6720, symbol_order=7513)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (struct __normal_iterator D.240186, struct __normal_iterator D.240187)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<pthread_detched_type*, pthread_detched_type*> (_ZSt4copyIP20pthread_detched_typeS1_ET0_T_S3_S2_, funcdef_no=8664, decl_uid=213281, cgraph_uid=5296, symbol_order=6085)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::copy<pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.250956;
  struct pthread_detched_type * D.250954;

  <bb 2> :
  _1 = std::__miter_base<pthread_detched_type*> (__last);
  _2 = std::__miter_base<pthread_detched_type*> (__first);
  D.250956 = std::__copy_move_a<false, pthread_detched_type*, pthread_detched_type*> (_2, _1, __result);
  D.250954 = D.250956;

  <bb 3> :
<L0>:
  return D.250954;

}



;; Function std::__miter_base<pthread_detched_type*> (_ZSt12__miter_baseIP20pthread_detched_typeET_S2_, funcdef_no=9454, decl_uid=224858, cgraph_uid=6086, symbol_order=6875)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__miter_base<pthread_detched_type*> (struct pthread_detched_type * __it)
{
  struct pthread_detched_type * D.250957;

  <bb 2> :
  D.250957 = __it;

  <bb 3> :
<L0>:
  return D.250957;

}



;; Function std::__copy_move_a<false, pthread_detched_type*, pthread_detched_type*> (_ZSt13__copy_move_aILb0EP20pthread_detched_typeS1_ET1_T0_S3_S2_, funcdef_no=9455, decl_uid=224860, cgraph_uid=6087, symbol_order=6876)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a<false, pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.250961;
  struct pthread_detched_type * D.250959;

  <bb 2> :
  __result.939_1 = __result;
  _2 = std::__niter_base<pthread_detched_type*> (__result.939_1);
  _3 = std::__niter_base<pthread_detched_type*> (__last);
  _4 = std::__niter_base<pthread_detched_type*> (__first);
  D.250961 = std::__copy_move_a1<false, pthread_detched_type*, pthread_detched_type*> (_4, _3, _2);
  _5 = D.250961;
  D.250959 = std::__niter_wrap<pthread_detched_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.250959;

}



;; Function std::__copy_move_a1<false, pthread_detched_type*, pthread_detched_type*> (_ZSt14__copy_move_a1ILb0EP20pthread_detched_typeS1_ET1_T0_S3_S2_, funcdef_no=10090, decl_uid=234839, cgraph_uid=6722, symbol_order=7515)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a1<false, pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.250964;
  struct pthread_detched_type * D.250962;

  <bb 2> :
  D.250964 = std::__copy_move_a2<false, pthread_detched_type*, pthread_detched_type*> (__first, __last, __result);
  D.250962 = D.250964;

  <bb 3> :
<L0>:
  return D.250962;

}



;; Function std::__copy_move_a2<false, pthread_detched_type*, pthread_detched_type*> (_ZSt14__copy_move_a2ILb0EP20pthread_detched_typeS1_ET1_T0_S3_S2_, funcdef_no=10573, decl_uid=240195, cgraph_uid=7205, symbol_order=7998)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a2<false, pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.250965;

  <bb 2> :
  D.250965 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_detched_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.250965;

}



;; Function std::__uninitialized_copy_a<pthread_detched_type*, pthread_detched_type*, pthread_detched_type> (_ZSt22__uninitialized_copy_aIP20pthread_detched_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8665, decl_uid=213285, cgraph_uid=5297, symbol_order=6086)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__uninitialized_copy_a<pthread_detched_type*, pthread_detched_type*, pthread_detched_type> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result, struct allocator & D.224867)
{
  struct pthread_detched_type * D.250969;
  struct pthread_detched_type * D.250967;

  <bb 2> :
  D.250969 = std::uninitialized_copy<pthread_detched_type*, pthread_detched_type*> (__first, __last, __result);
  D.250967 = D.250969;

  <bb 3> :
<L0>:
  return D.250967;

}



;; Function std::uninitialized_copy<pthread_detched_type*, pthread_detched_type*> (_ZSt18uninitialized_copyIP20pthread_detched_typeS1_ET0_T_S3_S2_, funcdef_no=9456, decl_uid=224869, cgraph_uid=6088, symbol_order=6877)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::uninitialized_copy<pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.250972;
  const bool __assignable;
  struct pthread_detched_type * D.250970;

  <bb 2> :
  __assignable = 1;
  D.250972 = std::__uninitialized_copy<true>::__uninit_copy<pthread_detched_type*, pthread_detched_type*> (__first, __last, __result);
  D.250970 = D.250972;

  <bb 3> :
<L0>:
  return D.250970;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<pthread_detched_type*, pthread_detched_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIP20pthread_detched_typeS3_EET0_T_S5_S4_, funcdef_no=10092, decl_uid=234877, cgraph_uid=6724, symbol_order=7517)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__uninitialized_copy<true>::__uninit_copy<pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.250975;
  struct pthread_detched_type * D.250973;

  <bb 2> :
  D.250975 = std::copy<pthread_detched_type*, pthread_detched_type*> (__first, __last, __result);
  D.250973 = D.250975;

  <bb 3> :
<L0>:
  return D.250973;

}



;; Function std::vector<pthread_detched_type>::push_back (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE9push_backERKS0_, funcdef_no=7742, decl_uid=177383, cgraph_uid=4375, symbol_order=5160)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<pthread_detched_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.250979;

  <bb 2> :
  _1 = this->D.177703._M_impl.D.177048._M_finish;
  _2 = this->D.177703._M_impl.D.177048._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.177703._M_impl.D.177048._M_finish;
  _4 = &this->D.177703._M_impl;
  std::allocator_traits<std::allocator<pthread_detched_type> >::construct<pthread_detched_type, const pthread_detched_type&> (_4, _3, __x);
  _5 = this->D.177703._M_impl.D.177048._M_finish;
  _6 = _5 + 16;
  this->D.177703._M_impl.D.177048._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.250979 = std::vector<pthread_detched_type>::end (this);
  std::vector<pthread_detched_type>::_M_realloc_insert<const pthread_detched_type&> (this, D.250979, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<pthread_detched_type> >::construct<pthread_detched_type, const pthread_detched_type&> (_ZNSt16allocator_traitsISaI20pthread_detched_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8666, decl_uid=213297, cgraph_uid=5298, symbol_order=6087)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<pthread_detched_type> >::construct<pthread_detched_type, const pthread_detched_type&> (struct allocator_type & __a, struct pthread_detched_type * __p, const struct pthread_detched_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const pthread_detched_type&> (__args#0);
  __gnu_cxx::new_allocator<pthread_detched_type>::construct<pthread_detched_type, const pthread_detched_type&> (__a, __p, _1);
  return;

}



;; Function std::forward<const pthread_detched_type&> (_ZSt7forwardIRK20pthread_detched_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9457, decl_uid=224884, cgraph_uid=6089, symbol_order=6878)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct pthread_detched_type & std::forward<const pthread_detched_type&> (const struct type & __t)
{
  const struct pthread_detched_type & D.250980;

  <bb 2> :
  D.250980 = __t;

  <bb 3> :
<L0>:
  return D.250980;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::construct<pthread_detched_type, const pthread_detched_type&> (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9458, decl_uid=224886, cgraph_uid=6090, symbol_order=6879)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_detched_type>::construct<pthread_detched_type, const pthread_detched_type&> (struct new_allocator * const this, struct pthread_detched_type * __p, const struct pthread_detched_type & __args#0)
{
  void * D.234889;
  void * D.234888;
  const struct pthread_detched_type * D.234890;

  <bb 2> :
  D.234890 = std::forward<const pthread_detched_type&> (__args#0);
  D.234888 = __p;
  D.234889 = operator new (16, D.234888);
  MEM[(struct pthread_detched_type *)D.234889] = *D.234890;
  return;

}



;; Function std::vector<pthread_detched_type>::_M_realloc_insert<const pthread_detched_type&> (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8667, decl_uid=213466, cgraph_uid=5302, symbol_order=6091)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_detched_type>::_M_realloc_insert<const pthread_detched_type&> (struct vector * const this, struct iterator __position, const struct pthread_detched_type & __args#0)
{
  struct pthread_detched_type * D.250986;
  const size_type D.250985;
  struct pthread_detched_type * __new_finish;
  struct pthread_detched_type * __new_start;
  const size_type __elems_before;
  struct pthread_detched_type * __old_finish;
  struct pthread_detched_type * __old_start;
  const size_type __len;
  struct iterator D.224897;

  <bb 2> :
  D.250985 = std::vector<pthread_detched_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.250985;
  __old_start = this->D.177703._M_impl.D.177048._M_start;
  __old_finish = this->D.177703._M_impl.D.177048._M_finish;
  D.224897 = std::vector<pthread_detched_type>::begin (this);
  _1 = __gnu_cxx::operator-<pthread_detched_type*, std::vector<pthread_detched_type> > (&__position, &D.224897);
  __elems_before = (const size_type) _1;
  D.224897 = {CLOBBER};
  _2 = &this->D.177703;
  D.250986 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_allocate (_2, __len);
  __new_start = D.250986;
  __new_finish = __new_start;
  _3 = std::forward<const pthread_detched_type&> (__args#0);
  _4 = __elems_before * 16;
  _5 = __new_start + _4;
  _6 = &this->D.177703._M_impl;
  std::allocator_traits<std::allocator<pthread_detched_type> >::construct<pthread_detched_type, const pthread_detched_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.177703;
  _8 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<pthread_detched_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 16;
  _11 = &this->D.177703;
  _12 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<pthread_detched_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.177703;
  _23 = this->D.177703._M_impl.D.177048._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 16;
  _26 = (long unsigned int) _25;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.177703._M_impl.D.177048._M_start = __new_start;
  this->D.177703._M_impl.D.177048._M_finish = __new_finish;
  _27 = __len * 16;
  _28 = __new_start + _27;
  this->D.177703._M_impl.D.177048._M_end_of_storage = _28;
  return;

}



;; Function std::vector<pthread_detched_type>::_M_check_len (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9459, decl_uid=177552, cgraph_uid=6091, symbol_order=6880)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<pthread_detched_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.942;
  size_type D.250990;
  const long unsigned int D.234895;
  bool retval.940;

  <bb 2> :
  _1 = std::vector<pthread_detched_type>::max_size (this);
  _2 = std::vector<pthread_detched_type>::size (this);
  _3 = _1 - _2;
  __n.941_4 = __n;
  retval.940 = _3 < __n.941_4;
  if (retval.940 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<pthread_detched_type>::size (this);
  _6 = std::vector<pthread_detched_type>::size (this);
  D.234895 = _6;
  _7 = std::max<long unsigned int> (&D.234895, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.234895 = {CLOBBER};
  _9 = std::vector<pthread_detched_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<pthread_detched_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.942 = std::vector<pthread_detched_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.942 = __len;

  <bb 8> :
  D.250990 = iftmp.942;

  <bb 9> :
<L6>:
  return D.250990;

}



;; Function std::vector<pthread_detched_type>::max_size (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE8max_sizeEv, funcdef_no=10093, decl_uid=177338, cgraph_uid=6725, symbol_order=7518)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_detched_type>::max_size (const struct vector * const this)
{
  size_type D.250997;

  <bb 2> :
  _1 = &this->D.177703;
  _2 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_1);
  D.250997 = std::vector<pthread_detched_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.250997;

}



;; Function std::vector<pthread_detched_type>::_S_max_size (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10574, decl_uid=177559, cgraph_uid=7206, symbol_order=7999)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_detched_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.250999;

  <bb 2> :
  __diffmax = 576460752303423487;
  _1 = std::allocator_traits<std::allocator<pthread_detched_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.250999 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250999;

}



;; Function std::allocator_traits<std::allocator<pthread_detched_type> >::max_size (_ZNSt16allocator_traitsISaI20pthread_detched_typeEE8max_sizeERKS1_, funcdef_no=10801, decl_uid=176873, cgraph_uid=7433, symbol_order=8228)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<pthread_detched_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.251002;

  <bb 2> :
  D.251002 = __gnu_cxx::new_allocator<pthread_detched_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.251002;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI20pthread_detched_typeE8max_sizeEv, funcdef_no=10904, decl_uid=176715, cgraph_uid=7536, symbol_order=8331)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<pthread_detched_type>::max_size (const struct new_allocator * const this)
{
  size_type D.251004;

  <bb 2> :
  D.251004 = __gnu_cxx::new_allocator<pthread_detched_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.251004;

}



;; Function __gnu_cxx::operator-<pthread_detched_type*, std::vector<pthread_detched_type> > (_ZN9__gnu_cxxmiIP20pthread_detched_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9460, decl_uid=224898, cgraph_uid=6092, symbol_order=6881)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<pthread_detched_type*, std::vector<pthread_detched_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.251006;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.251006 = _5 /[ex] 16;

  <bb 3> :
<L0>:
  return D.251006;

}



;; Function std::vector<pthread_detched_type>::_S_relocate (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9461, decl_uid=177210, cgraph_uid=6093, symbol_order=6882)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::vector<pthread_detched_type>::_S_relocate (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.251009;
  struct pthread_detched_type * D.251008;

  <bb 2> :
  D.251008 = std::vector<pthread_detched_type>::_S_do_relocate (__first, __last, __result, __alloc, D.251009);

  <bb 3> :
<L0>:
  return D.251008;

}



;; Function std::vector<pthread_detched_type>::_S_do_relocate (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10094, decl_uid=177198, cgraph_uid=6726, symbol_order=7519)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::vector<pthread_detched_type>::_S_do_relocate (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.240211)
{
  struct pthread_detched_type * D.251011;

  <bb 2> :
  D.251011 = std::__relocate_a<pthread_detched_type*, pthread_detched_type*, std::allocator<pthread_detched_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.251011;

}



;; Function std::__relocate_a<pthread_detched_type*, pthread_detched_type*, std::allocator<pthread_detched_type> > (_ZSt12__relocate_aIP20pthread_detched_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10575, decl_uid=225063, cgraph_uid=7207, symbol_order=8000)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__relocate_a<pthread_detched_type*, pthread_detched_type*, std::allocator<pthread_detched_type> > (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result, struct allocator & __alloc)
{
  struct pthread_detched_type * D.251013;

  <bb 2> :
  _1 = std::__niter_base<pthread_detched_type*> (__result);
  _2 = std::__niter_base<pthread_detched_type*> (__last);
  _3 = std::__niter_base<pthread_detched_type*> (__first);
  D.251013 = std::__relocate_a_1<pthread_detched_type, pthread_detched_type> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.251013;

}



;; Function std::__relocate_a_1<pthread_detched_type, pthread_detched_type> (_ZSt14__relocate_a_1I20pthread_detched_typeS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E, funcdef_no=10802, decl_uid=225237, cgraph_uid=7434, symbol_order=8229)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct pthread_detched_type * std::__relocate_a_1<pthread_detched_type, pthread_detched_type> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result, struct allocator & D.244578)
{
  ptrdiff_t __count;
  struct pthread_detched_type * D.251018;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 16;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.943_2 = (long unsigned int) __count;
  _3 = __count.943_2 * 16;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.944_4 = (long unsigned int) __count;
  _5 = __count.944_4 * 16;
  D.251018 = __result + _5;

  <bb 5> :
<L3>:
  return D.251018;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::put (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7744, decl_uid=193259, cgraph_uid=4376, symbol_order=5161)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_pthread_detched_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_pthread_detched_array & v)
{
  bool D.251027;
  struct hash_entry * D.251026;
  unsigned int D.251025;
  bool ins;
  struct hash_entry * e;
  bool D.251023;
  void * D.213476;
  void * D.213475;

  <bb 2> :
  _1 = &this->m_table;
  D.251025 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::hash (k);
  _2 = D.251025;
  D.251026 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.251026;
  D.251027 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_empty (e);
  ins = D.251027;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.213475 = &e->m_value;
  D.213476 = operator new (24, D.213475);
  function_pthread_detched_array::function_pthread_detched_array (D.213476, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_pthread_detched_array::operator= (_4, v);

  <bb 5> :
  D.251023 = ~ins;

  <bb 6> :
<L3>:
  return D.251023;

  <bb 7> :
<L4>:
  operator delete (D.213476, D.213475);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8671, decl_uid=193417, cgraph_uid=5303, symbol_order=6092)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.251078;
  bool D.251077;
  bool D.251076;
  bool D.251075;
  bool D.251074;
  bool D.251073;
  struct value_type * D.251072;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.950;
  bool retval.949;
  bool retval.948;
  bool retval.947;
  bool retval.946;
  bool retval.945;
  struct value_type * D.251034;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 32;
  entry = _11 + _13;
  size = this->m_size;
  D.251073 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.945 = D.251073;
  if (retval.945 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.251074 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.946 = D.251074;
  if (retval.946 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 32;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.251075 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (entry, comparable);
  retval.947 = D.251075;
  if (retval.947 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  D.251034 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 32;
  entry = _24 + _26;
  D.251076 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.948 = D.251076;
  if (retval.948 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.251077 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.949 = D.251077;
  if (retval.949 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 32;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.251078 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (entry, comparable);
  retval.950 = D.251078;
  if (retval.950 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 32;
  D.251034 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.251034 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.251034 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 32;
  D.251034 = _37 + _39;

  <bb 27> :
<L37>:
  return D.251034;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9464, decl_uid=193498, cgraph_uid=6108, symbol_order=6897)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.251109;
  unsigned int D.251108;
  bool D.251107;
  bool D.251106;
  struct mem_alloc_description & D.251105;
  struct value_type * D.251104;
  unsigned int D.251103;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.234933;
  void * D.234932;
  struct hash_entry & D.234970;
  bool iftmp.954;
  bool retval.953;
  bool iftmp.952;
  bool retval.951;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 32;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.952 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.952 = 0;

  <bb 6> :
  retval.951 = iftmp.952;
  if (retval.951 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.251103 = hash_table_higher_prime_index (_5);
  nindex = D.251103;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.251104 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.251104;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.251106 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.251106;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.251107 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.251107;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.954 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.954 = 0;

  <bb 15> :
  retval.953 = iftmp.954;
  if (retval.953 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.251108 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash (x);
  _16 = D.251108;
  D.251109 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.251109;
  D.234970 = std::move<hash_map<tree_node*, function_pthread_detched_array>::hash_entry&> (x);
  D.234932 = q;
  D.234933 = operator new (32, D.234932);
  hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash_entry (D.234933, D.234970);

  <bb 17> :
  p = p + 32;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10096, decl_uid=193393, cgraph_uid=6728, symbol_order=7521)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.251110;

  <bb 2> :
  D.251110 = this->m_size;

  <bb 3> :
<L0>:
  return D.251110;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10097, decl_uid=193395, cgraph_uid=6729, symbol_order=7522)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.251112;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.251112 = _1 - _2;

  <bb 3> :
<L0>:
  return D.251112;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10098, decl_uid=193495, cgraph_uid=6730, symbol_order=7523)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.955;
  bool D.251114;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.955 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.955 = 0;

  <bb 6> :
  D.251114 = iftmp.955;

  <bb 7> :
<L4>:
  return D.251114;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9320, decl_uid=193485, cgraph_uid=5952, symbol_order=6741)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.251136;
  struct value_type * D.251135;
  struct mem_alloc_description & D.251134;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.251132;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.251135 = xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_alloc (n);
  nentries = D.251135;
  goto <bb 6>; [INV]

  <bb 5> :
  D.251136 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (n);
  nentries = D.251136;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.251132 = nentries;

  <bb 9> :
<L14>:
  return D.251132;

}



;; Function xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10002, decl_uid=216783, cgraph_uid=6634, symbol_order=7427)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.251139;
  struct hash_entry * D.251137;

  <bb 2> :
  D.251139 = xcalloc (count, 32);
  D.251137 = D.251139;

  <bb 3> :
<L0>:
  return D.251137;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10003, decl_uid=233439, cgraph_uid=6635, symbol_order=7428)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.251146;
  struct hash_entry * D.251145;
  struct hash_entry * D.251143;
  bool retval.956;

  <bb 2> :
  retval.956 = need_finalization_p<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> ();
  if (retval.956 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 32;
  D.251145 = ggc_internal_cleared_alloc (_1, finalize, 32, c);
  D.251143 = D.251145;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 32;
  D.251146 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.251143 = D.251146;

  <bb 5> :
<L2>:
  return D.251143;

}



;; Function finalize<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10512, decl_uid=239822, cgraph_uid=7147, symbol_order=7940)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_pthread_detched_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10514, decl_uid=243208, cgraph_uid=7145, symbol_order=7938)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_pthread_detched_array::~function_pthread_detched_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10511, decl_uid=239821, cgraph_uid=7143, symbol_order=7936)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> ()
{
  bool D.251147;

  <bb 2> :
  D.251147 = 1;

  <bb 3> :
<L0>:
  return D.251147;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10100, decl_uid=193318, cgraph_uid=6732, symbol_order=7525)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.251151;
  hashval_t D.251149;

  <bb 2> :
  _1 = &e->m_key;
  D.251151 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::hash (_1);
  D.251149 = D.251151;

  <bb 3> :
<L0>:
  return D.251149;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10099, decl_uid=193488, cgraph_uid=6731, symbol_order=7524)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.251164;
  bool D.251163;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.958;
  struct value_type * D.251155;
  bool retval.957;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 32;
  slot = _2 + _4;
  D.251163 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.957 = D.251163;
  if (retval.957 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.251155 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 32;
  slot = _8 + _10;
  D.251164 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.958 = D.251164;
  if (retval.958 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.251155 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.251155;

}



;; Function std::move<hash_map<tree_node*, function_pthread_detched_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10101, decl_uid=234930, cgraph_uid=6733, symbol_order=7526)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_pthread_detched_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.251165;

  <bb 2> :
  D.251165 = __t;

  <bb 3> :
<L0>:
  return D.251165;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9475, decl_uid=234955, cgraph_uid=6106, symbol_order=6895)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.234957)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.234957->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.234957->m_value;
  function_pthread_detched_array::function_pthread_detched_array (_2, _3);
  return;

}



;; Function function_pthread_detched_array::function_pthread_detched_array (_ZN30function_pthread_detched_arrayC2EOS_, funcdef_no=9473, decl_uid=193610, cgraph_uid=6103, symbol_order=6892)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_detched_array::function_pthread_detched_array (struct function_pthread_detched_array * const this, struct function_pthread_detched_array & D.193612)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->pthread_detched_array;
  _2 = &D.193612->pthread_detched_array;
  std::vector<pthread_detched_type>::vector (_1, _2);
  return;

}



;; Function std::vector<pthread_detched_type>::vector (_ZNSt6vectorI20pthread_detched_typeSaIS0_EEC2EOS2_, funcdef_no=9471, decl_uid=177660, cgraph_uid=6100, symbol_order=6889)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_detched_type>::vector (struct vector * const this, struct vector & D.177662)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.177703;
  _2 = &D.177662->D.177703;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EEC2EOS2_, funcdef_no=9469, decl_uid=177128, cgraph_uid=6097, symbol_order=6886)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.177130)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.177130->_M_impl;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10103, decl_uid=177034, cgraph_uid=6735, symbol_order=7528)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl&> (__x);
  std::allocator<pthread_detched_type>::allocator (this, _1);
  _2 = &this->D.177048;
  _3 = std::move<std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.177048;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI20pthread_detched_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10576, decl_uid=240241, cgraph_uid=7208, symbol_order=8001)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.251167;

  <bb 2> :
  D.251167 = __t;

  <bb 3> :
<L0>:
  return D.251167;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10578, decl_uid=176990, cgraph_uid=7210, symbol_order=8003)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8916, decl_uid=216785, cgraph_uid=5548, symbol_order=6337)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9477, decl_uid=193506, cgraph_uid=6109, symbol_order=6898)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_pthread_detched_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10105, decl_uid=193330, cgraph_uid=6737, symbol_order=7530)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::mark_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::mark_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10580, decl_uid=240256, cgraph_uid=7212, symbol_order=8005)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::mark_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function function_pthread_exit_array::function_pthread_exit_array (_ZN27function_pthread_exit_arrayC2Ev, funcdef_no=6401, decl_uid=194069, cgraph_uid=3376, symbol_order=4152)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_exit_array::function_pthread_exit_array (struct function_pthread_exit_array * const this)
{
  <bb 2> :
  _1 = &this->pthread_exit_array;
  std::vector<pthread_exit_type>::vector (_1);
  return;

}



;; Function std::vector<pthread_exit_type>::vector (_ZNSt6vectorI17pthread_exit_typeSaIS0_EEC2Ev, funcdef_no=6399, decl_uid=178740, cgraph_uid=3373, symbol_order=4149)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_exit_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.178748;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EEC2Ev, funcdef_no=6397, decl_uid=178198, cgraph_uid=3370, symbol_order=4146)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7746, decl_uid=178090, cgraph_uid=4378, symbol_order=5163)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<pthread_exit_type>::allocator (this);
  _1 = &this->D.178093;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<pthread_exit_type>::allocator (_ZNSaI17pthread_exit_typeEC2Ev, funcdef_no=8674, decl_uid=177868, cgraph_uid=5306, symbol_order=6095)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_exit_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeEC2Ev, funcdef_no=9479, decl_uid=177797, cgraph_uid=6111, symbol_order=6900)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function function_pthread_exit_array::operator= (_ZN27function_pthread_exit_arrayaSERKS_, funcdef_no=6403, decl_uid=195579, cgraph_uid=3378, symbol_order=4154)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_pthread_exit_array & function_pthread_exit_array::operator= (struct function_pthread_exit_array * const this, const struct function_pthread_exit_array & D.195580)
{
  struct function_pthread_exit_array & D.251170;

  <bb 2> :
  _1 = &D.195580->pthread_exit_array;
  _2 = &this->pthread_exit_array;
  std::vector<pthread_exit_type>::operator= (_2, _1);
  D.251170 = this;

  <bb 3> :
<L0>:
  return D.251170;

}



;; Function std::vector<pthread_exit_type>::operator= (_ZNSt6vectorI17pthread_exit_typeSaIS0_EEaSERKS2_, funcdef_no=7754, decl_uid=178326, cgraph_uid=4388, symbol_order=5173)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<pthread_exit_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct pthread_exit_type * D.251205;
  struct pthread_exit_type * __tmp;
  const size_type __xlen;
  struct vector & D.251203;
  struct __normal_iterator D.251200;
  struct __normal_iterator D.251199;
  struct __normal_iterator D.251198;
  struct __normal_iterator D.251197;
  struct __normal_iterator D.251196;
  bool retval.963;
  struct __normal_iterator D.251191;
  struct __normal_iterator D.251190;
  bool retval.962;
  bool iftmp.961;
  bool retval.960;
  bool retval.959;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.959 = __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_propagate_on_copy_assign ();
  if (retval.959 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.178748;
  _4 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.178748;
  _6 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.961 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.961 = 0;

  <bb 8> :
  retval.960 = iftmp.961;
  if (retval.960 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<pthread_exit_type>::clear (this);
  _8 = &this->D.178748;
  _9 = this->D.178748._M_impl.D.178093._M_end_of_storage;
  _10 = this->D.178748._M_impl.D.178093._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 16;
  _13 = (long unsigned int) _12;
  _14 = this->D.178748._M_impl.D.178093._M_start;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (_8, _14, _13);
  this->D.178748._M_impl.D.178093._M_start = 0B;
  this->D.178748._M_impl.D.178093._M_finish = 0B;
  this->D.178748._M_impl.D.178093._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.178748;
  _16 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.178748;
  _18 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<pthread_exit_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<pthread_exit_type>::size (__x);
  _19 = std::vector<pthread_exit_type>::capacity (this);
  retval.962 = __xlen > _19;
  if (retval.962 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.251190 = std::vector<pthread_exit_type>::end (__x);
  D.251191 = std::vector<pthread_exit_type>::begin (__x);
  D.251205 = std::vector<pthread_exit_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (this, __xlen, D.251191, D.251190);
  __tmp = D.251205;
  _20 = &this->D.178748;
  _21 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.178748._M_impl.D.178093._M_finish;
  _23 = this->D.178748._M_impl.D.178093._M_start;
  std::_Destroy<pthread_exit_type*, pthread_exit_type> (_23, _22, _21);
  _24 = &this->D.178748;
  _25 = this->D.178748._M_impl.D.178093._M_end_of_storage;
  _26 = this->D.178748._M_impl.D.178093._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 16;
  _29 = (long unsigned int) _28;
  _30 = this->D.178748._M_impl.D.178093._M_start;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (_24, _30, _29);
  this->D.178748._M_impl.D.178093._M_start = __tmp;
  _31 = this->D.178748._M_impl.D.178093._M_start;
  _32 = __xlen * 16;
  _33 = _31 + _32;
  this->D.178748._M_impl.D.178093._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<pthread_exit_type>::size (this);
  retval.963 = __xlen <= _34;
  if (retval.963 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.178748;
  _36 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_35);
  D.251196 = std::vector<pthread_exit_type>::end (this);
  D.251197 = std::vector<pthread_exit_type>::begin (this);
  D.251198 = std::vector<pthread_exit_type>::end (__x);
  D.251199 = std::vector<pthread_exit_type>::begin (__x);
  D.251200 = std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (D.251199, D.251198, D.251197);
  std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type> (D.251200, D.251196, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.178748._M_impl.D.178093._M_start;
  _38 = __x->D.178748._M_impl.D.178093._M_start;
  _39 = std::vector<pthread_exit_type>::size (this);
  _40 = _39 * 16;
  _41 = _38 + _40;
  _42 = __x->D.178748._M_impl.D.178093._M_start;
  std::copy<pthread_exit_type*, pthread_exit_type*> (_42, _41, _37);
  _43 = &this->D.178748;
  _44 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.178748._M_impl.D.178093._M_finish;
  _46 = __x->D.178748._M_impl.D.178093._M_finish;
  _47 = __x->D.178748._M_impl.D.178093._M_start;
  _48 = std::vector<pthread_exit_type>::size (this);
  _49 = _48 * 16;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<pthread_exit_type*, pthread_exit_type*, pthread_exit_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.178748._M_impl.D.178093._M_start;
  _52 = __xlen * 16;
  _53 = _51 + _52;
  this->D.178748._M_impl.D.178093._M_finish = _53;

  <bb 17> :
  D.251203 = this;

  <bb 18> :
<L19>:
  return D.251203;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI17pthread_exit_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7755, decl_uid=177960, cgraph_uid=4386, symbol_order=5171)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_propagate_on_copy_assign ()
{
  bool D.251206;

  <bb 2> :
  D.251206 = 0;

  <bb 3> :
<L0>:
  return D.251206;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI17pthread_exit_typeES1_E15_S_always_equalEv, funcdef_no=7756, decl_uid=177963, cgraph_uid=4387, symbol_order=5172)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_always_equal ()
{
  bool D.251208;

  <bb 2> :
  D.251208 = 1;

  <bb 3> :
<L0>:
  return D.251208;

}



;; Function std::operator!= (_ZStneRKSaI17pthread_exit_typeES2_, funcdef_no=8683, decl_uid=177846, cgraph_uid=5315, symbol_order=6104)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.225456, const struct allocator & D.225457)
{
  bool D.251210;

  <bb 2> :
  D.251210 = 0;

  <bb 3> :
<L0>:
  return D.251210;

}



;; Function std::vector<pthread_exit_type>::clear (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE5clearEv, funcdef_no=8684, decl_uid=178478, cgraph_uid=5316, symbol_order=6105)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_exit_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.178748._M_impl.D.178093._M_start;
  std::vector<pthread_exit_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<pthread_exit_type>::_M_erase_at_end (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9482, decl_uid=178606, cgraph_uid=6114, symbol_order=6903)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<pthread_exit_type>::_M_erase_at_end (struct vector * const this, struct pthread_exit_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.178748._M_impl.D.178093._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 16;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.178748;
  _5 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.178748._M_impl.D.178093._M_finish;
  std::_Destroy<pthread_exit_type*, pthread_exit_type> (__pos, _6, _5);
  this->D.178748._M_impl.D.178093._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<pthread_exit_type> > (_ZSt15__alloc_on_copyISaI17pthread_exit_typeEEvRT_RKS2_, funcdef_no=8685, decl_uid=213517, cgraph_uid=5317, symbol_order=6106)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<pthread_exit_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<pthread_exit_type>::capacity (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE8capacityEv, funcdef_no=8686, decl_uid=178394, cgraph_uid=5318, symbol_order=6107)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_exit_type>::capacity (const struct vector * const this)
{
  size_type D.251215;

  <bb 2> :
  _1 = this->D.178748._M_impl.D.178093._M_end_of_storage;
  _2 = this->D.178748._M_impl.D.178093._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.251215 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.251215;

}



;; Function std::vector<pthread_exit_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8687, decl_uid=213524, cgraph_uid=5319, symbol_order=6108)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct pthread_exit_type * std::vector<pthread_exit_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct pthread_exit_type * D.251219;
  struct pthread_exit_type * __result;
  struct pthread_exit_type * D.251217;

  <bb 2> :
  _1 = &this->D.178748;
  D.251219 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_allocate (_1, __n);
  __result = D.251219;
  _2 = &this->D.178748;
  _3 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*, pthread_exit_type> (__first, __last, __result, _3);

  <bb 3> :
  D.251217 = __result;

  <bb 4> :
<L0>:
  return D.251217;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.178748;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<pthread_exit_type>::end (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE3endEv, funcdef_no=8690, decl_uid=178361, cgraph_uid=5322, symbol_order=6111)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<pthread_exit_type>::end (struct vector * const this)
{
  struct iterator D.225543;
  struct iterator D.251223;

  <bb 2> :
  _1 = &this->D.178748._M_impl.D.178093._M_finish;
  __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (&D.225543, _1);
  D.251223 = D.225543;
  D.225543 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251223;

}



;; Function __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9485, decl_uid=213606, cgraph_uid=6117, symbol_order=6906)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (struct __normal_iterator * const this, struct pthread_exit_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<pthread_exit_type>::begin (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE5beginEv, funcdef_no=8688, decl_uid=178357, cgraph_uid=5320, symbol_order=6109)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<pthread_exit_type>::begin (struct vector * const this)
{
  struct iterator D.225497;
  struct iterator D.251226;

  <bb 2> :
  _1 = &this->D.178748._M_impl.D.178093._M_start;
  __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (&D.225497, _1);
  D.251226 = D.225497;
  D.225497 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251226;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8689, decl_uid=213625, cgraph_uid=5321, symbol_order=6110)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.251231;
  struct __normal_iterator D.251230;
  struct __normal_iterator D.251229;

  <bb 2> :
  D.251230 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (__last);
  D.251231 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (__first);
  D.251229 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (D.251231, D.251230, __result);

  <bb 3> :
<L0>:
  return D.251229;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9488, decl_uid=225515, cgraph_uid=6121, symbol_order=6910)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct pthread_exit_type * D.251235;
  struct __normal_iterator D.251233;

  <bb 2> :
  _1 = std::__niter_base<pthread_exit_type*, std::vector<pthread_exit_type> > (__result);
  _2 = std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (__last);
  _3 = std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (__first);
  D.251235 = std::__copy_move_a1<false, const pthread_exit_type*, pthread_exit_type*> (_3, _2, _1);
  _4 = D.251235;
  D.251233 = std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.251233;

}



;; Function std::__niter_base<pthread_exit_type*, std::vector<pthread_exit_type> > (_ZSt12__niter_baseIP17pthread_exit_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10109, decl_uid=235153, cgraph_uid=6741, symbol_order=7534)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__niter_base<pthread_exit_type*, std::vector<pthread_exit_type> > (struct __normal_iterator __it)
{
  struct pthread_exit_type * D.251236;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (&__it);
  D.251236 = *_1;

  <bb 3> :
<L0>:
  return D.251236;

}



;; Function __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9499, decl_uid=213593, cgraph_uid=6131, symbol_order=6920)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * const & __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (const struct __normal_iterator * const this)
{
  struct pthread_exit_type * const & D.251238;

  <bb 2> :
  D.251238 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.251238;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10111, decl_uid=235160, cgraph_uid=6743, symbol_order=7536)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (struct __normal_iterator __from, struct pthread_exit_type * __res)
{
  struct __normal_iterator D.251240;

  <bb 2> :
  _1 = std::__niter_base<pthread_exit_type*, std::vector<pthread_exit_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 16;
  D.251240 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.251240;

}



;; Function __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10585, decl_uid=213584, cgraph_uid=7217, symbol_order=8010)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct pthread_exit_type * const D.243547;
  struct __normal_iterator D.243548;
  struct __normal_iterator D.251242;

  <bb 2> :
  _1 = this->_M_current;
  __n.964_2 = (long unsigned int) __n;
  _3 = __n.964_2 * 16;
  _4 = _1 + _3;
  D.243547 = _4;
  __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (&D.243548, &D.243547);
  D.251242 = D.243548;
  D.243548 = {CLOBBER};
  D.243547 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.251242;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8691, decl_uid=213631, cgraph_uid=5323, symbol_order=6112)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.225546)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9490, decl_uid=225548, cgraph_uid=6122, symbol_order=6911)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10112, decl_uid=235184, cgraph_uid=6744, symbol_order=7537)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (struct __normal_iterator D.240281, struct __normal_iterator D.240282)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<pthread_exit_type*, pthread_exit_type*> (_ZSt4copyIP17pthread_exit_typeS1_ET0_T_S3_S2_, funcdef_no=8692, decl_uid=213639, cgraph_uid=5324, symbol_order=6113)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::copy<pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251248;
  struct pthread_exit_type * D.251246;

  <bb 2> :
  _1 = std::__miter_base<pthread_exit_type*> (__last);
  _2 = std::__miter_base<pthread_exit_type*> (__first);
  D.251248 = std::__copy_move_a<false, pthread_exit_type*, pthread_exit_type*> (_2, _1, __result);
  D.251246 = D.251248;

  <bb 3> :
<L0>:
  return D.251246;

}



;; Function std::__miter_base<pthread_exit_type*> (_ZSt12__miter_baseIP17pthread_exit_typeET_S2_, funcdef_no=9491, decl_uid=225564, cgraph_uid=6123, symbol_order=6912)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__miter_base<pthread_exit_type*> (struct pthread_exit_type * __it)
{
  struct pthread_exit_type * D.251249;

  <bb 2> :
  D.251249 = __it;

  <bb 3> :
<L0>:
  return D.251249;

}



;; Function std::__copy_move_a<false, pthread_exit_type*, pthread_exit_type*> (_ZSt13__copy_move_aILb0EP17pthread_exit_typeS1_ET1_T0_S3_S2_, funcdef_no=9492, decl_uid=225566, cgraph_uid=6124, symbol_order=6913)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a<false, pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251253;
  struct pthread_exit_type * D.251251;

  <bb 2> :
  __result.965_1 = __result;
  _2 = std::__niter_base<pthread_exit_type*> (__result.965_1);
  _3 = std::__niter_base<pthread_exit_type*> (__last);
  _4 = std::__niter_base<pthread_exit_type*> (__first);
  D.251253 = std::__copy_move_a1<false, pthread_exit_type*, pthread_exit_type*> (_4, _3, _2);
  _5 = D.251253;
  D.251251 = std::__niter_wrap<pthread_exit_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.251251;

}



;; Function std::__copy_move_a1<false, pthread_exit_type*, pthread_exit_type*> (_ZSt14__copy_move_a1ILb0EP17pthread_exit_typeS1_ET1_T0_S3_S2_, funcdef_no=10114, decl_uid=235195, cgraph_uid=6746, symbol_order=7539)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a1<false, pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251256;
  struct pthread_exit_type * D.251254;

  <bb 2> :
  D.251256 = std::__copy_move_a2<false, pthread_exit_type*, pthread_exit_type*> (__first, __last, __result);
  D.251254 = D.251256;

  <bb 3> :
<L0>:
  return D.251254;

}



;; Function std::__copy_move_a2<false, pthread_exit_type*, pthread_exit_type*> (_ZSt14__copy_move_a2ILb0EP17pthread_exit_typeS1_ET1_T0_S3_S2_, funcdef_no=10586, decl_uid=240290, cgraph_uid=7218, symbol_order=8011)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a2<false, pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251257;

  <bb 2> :
  D.251257 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_exit_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.251257;

}



;; Function std::__uninitialized_copy_a<pthread_exit_type*, pthread_exit_type*, pthread_exit_type> (_ZSt22__uninitialized_copy_aIP17pthread_exit_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8693, decl_uid=213643, cgraph_uid=5325, symbol_order=6114)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__uninitialized_copy_a<pthread_exit_type*, pthread_exit_type*, pthread_exit_type> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result, struct allocator & D.225573)
{
  struct pthread_exit_type * D.251261;
  struct pthread_exit_type * D.251259;

  <bb 2> :
  D.251261 = std::uninitialized_copy<pthread_exit_type*, pthread_exit_type*> (__first, __last, __result);
  D.251259 = D.251261;

  <bb 3> :
<L0>:
  return D.251259;

}



;; Function std::uninitialized_copy<pthread_exit_type*, pthread_exit_type*> (_ZSt18uninitialized_copyIP17pthread_exit_typeS1_ET0_T_S3_S2_, funcdef_no=9493, decl_uid=225575, cgraph_uid=6125, symbol_order=6914)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::uninitialized_copy<pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251264;
  const bool __assignable;
  struct pthread_exit_type * D.251262;

  <bb 2> :
  __assignable = 1;
  D.251264 = std::__uninitialized_copy<true>::__uninit_copy<pthread_exit_type*, pthread_exit_type*> (__first, __last, __result);
  D.251262 = D.251264;

  <bb 3> :
<L0>:
  return D.251262;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<pthread_exit_type*, pthread_exit_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIP17pthread_exit_typeS3_EET0_T_S5_S4_, funcdef_no=10116, decl_uid=235233, cgraph_uid=6748, symbol_order=7541)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__uninitialized_copy<true>::__uninit_copy<pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251267;
  struct pthread_exit_type * D.251265;

  <bb 2> :
  D.251267 = std::copy<pthread_exit_type*, pthread_exit_type*> (__first, __last, __result);
  D.251265 = D.251267;

  <bb 3> :
<L0>:
  return D.251265;

}



;; Function std::vector<pthread_exit_type>::push_back (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE9push_backERKS0_, funcdef_no=7757, decl_uid=178428, cgraph_uid=4390, symbol_order=5175)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<pthread_exit_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.251271;

  <bb 2> :
  _1 = this->D.178748._M_impl.D.178093._M_finish;
  _2 = this->D.178748._M_impl.D.178093._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.178748._M_impl.D.178093._M_finish;
  _4 = &this->D.178748._M_impl;
  std::allocator_traits<std::allocator<pthread_exit_type> >::construct<pthread_exit_type, const pthread_exit_type&> (_4, _3, __x);
  _5 = this->D.178748._M_impl.D.178093._M_finish;
  _6 = _5 + 16;
  this->D.178748._M_impl.D.178093._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.251271 = std::vector<pthread_exit_type>::end (this);
  std::vector<pthread_exit_type>::_M_realloc_insert<const pthread_exit_type&> (this, D.251271, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<pthread_exit_type> >::construct<pthread_exit_type, const pthread_exit_type&> (_ZNSt16allocator_traitsISaI17pthread_exit_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8694, decl_uid=213655, cgraph_uid=5326, symbol_order=6115)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<pthread_exit_type> >::construct<pthread_exit_type, const pthread_exit_type&> (struct allocator_type & __a, struct pthread_exit_type * __p, const struct pthread_exit_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const pthread_exit_type&> (__args#0);
  __gnu_cxx::new_allocator<pthread_exit_type>::construct<pthread_exit_type, const pthread_exit_type&> (__a, __p, _1);
  return;

}



;; Function std::forward<const pthread_exit_type&> (_ZSt7forwardIRK17pthread_exit_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9494, decl_uid=225590, cgraph_uid=6126, symbol_order=6915)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct pthread_exit_type & std::forward<const pthread_exit_type&> (const struct type & __t)
{
  const struct pthread_exit_type & D.251272;

  <bb 2> :
  D.251272 = __t;

  <bb 3> :
<L0>:
  return D.251272;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::construct<pthread_exit_type, const pthread_exit_type&> (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9495, decl_uid=225592, cgraph_uid=6127, symbol_order=6916)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_exit_type>::construct<pthread_exit_type, const pthread_exit_type&> (struct new_allocator * const this, struct pthread_exit_type * __p, const struct pthread_exit_type & __args#0)
{
  void * D.235245;
  void * D.235244;
  const struct pthread_exit_type * D.235246;

  <bb 2> :
  D.235246 = std::forward<const pthread_exit_type&> (__args#0);
  D.235244 = __p;
  D.235245 = operator new (16, D.235244);
  MEM[(struct pthread_exit_type *)D.235245] = *D.235246;
  return;

}



;; Function std::vector<pthread_exit_type>::_M_realloc_insert<const pthread_exit_type&> (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8695, decl_uid=213824, cgraph_uid=5330, symbol_order=6119)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_exit_type>::_M_realloc_insert<const pthread_exit_type&> (struct vector * const this, struct iterator __position, const struct pthread_exit_type & __args#0)
{
  struct pthread_exit_type * D.251278;
  const size_type D.251277;
  struct pthread_exit_type * __new_finish;
  struct pthread_exit_type * __new_start;
  const size_type __elems_before;
  struct pthread_exit_type * __old_finish;
  struct pthread_exit_type * __old_start;
  const size_type __len;
  struct iterator D.225603;

  <bb 2> :
  D.251277 = std::vector<pthread_exit_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.251277;
  __old_start = this->D.178748._M_impl.D.178093._M_start;
  __old_finish = this->D.178748._M_impl.D.178093._M_finish;
  D.225603 = std::vector<pthread_exit_type>::begin (this);
  _1 = __gnu_cxx::operator-<pthread_exit_type*, std::vector<pthread_exit_type> > (&__position, &D.225603);
  __elems_before = (const size_type) _1;
  D.225603 = {CLOBBER};
  _2 = &this->D.178748;
  D.251278 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_allocate (_2, __len);
  __new_start = D.251278;
  __new_finish = __new_start;
  _3 = std::forward<const pthread_exit_type&> (__args#0);
  _4 = __elems_before * 16;
  _5 = __new_start + _4;
  _6 = &this->D.178748._M_impl;
  std::allocator_traits<std::allocator<pthread_exit_type> >::construct<pthread_exit_type, const pthread_exit_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.178748;
  _8 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<pthread_exit_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 16;
  _11 = &this->D.178748;
  _12 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<pthread_exit_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.178748;
  _23 = this->D.178748._M_impl.D.178093._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 16;
  _26 = (long unsigned int) _25;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.178748._M_impl.D.178093._M_start = __new_start;
  this->D.178748._M_impl.D.178093._M_finish = __new_finish;
  _27 = __len * 16;
  _28 = __new_start + _27;
  this->D.178748._M_impl.D.178093._M_end_of_storage = _28;
  return;

}



;; Function std::vector<pthread_exit_type>::_M_check_len (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9496, decl_uid=178597, cgraph_uid=6128, symbol_order=6917)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<pthread_exit_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.968;
  size_type D.251282;
  const long unsigned int D.235251;
  bool retval.966;

  <bb 2> :
  _1 = std::vector<pthread_exit_type>::max_size (this);
  _2 = std::vector<pthread_exit_type>::size (this);
  _3 = _1 - _2;
  __n.967_4 = __n;
  retval.966 = _3 < __n.967_4;
  if (retval.966 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<pthread_exit_type>::size (this);
  _6 = std::vector<pthread_exit_type>::size (this);
  D.235251 = _6;
  _7 = std::max<long unsigned int> (&D.235251, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.235251 = {CLOBBER};
  _9 = std::vector<pthread_exit_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<pthread_exit_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.968 = std::vector<pthread_exit_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.968 = __len;

  <bb 8> :
  D.251282 = iftmp.968;

  <bb 9> :
<L6>:
  return D.251282;

}



;; Function std::vector<pthread_exit_type>::max_size (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE8max_sizeEv, funcdef_no=10117, decl_uid=178383, cgraph_uid=6749, symbol_order=7542)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_exit_type>::max_size (const struct vector * const this)
{
  size_type D.251289;

  <bb 2> :
  _1 = &this->D.178748;
  _2 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_1);
  D.251289 = std::vector<pthread_exit_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.251289;

}



;; Function std::vector<pthread_exit_type>::_S_max_size (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10587, decl_uid=178604, cgraph_uid=7219, symbol_order=8012)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_exit_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.251291;

  <bb 2> :
  __diffmax = 576460752303423487;
  _1 = std::allocator_traits<std::allocator<pthread_exit_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.251291 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251291;

}



;; Function std::allocator_traits<std::allocator<pthread_exit_type> >::max_size (_ZNSt16allocator_traitsISaI17pthread_exit_typeEE8max_sizeERKS1_, funcdef_no=10804, decl_uid=177918, cgraph_uid=7436, symbol_order=8231)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<pthread_exit_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.251294;

  <bb 2> :
  D.251294 = __gnu_cxx::new_allocator<pthread_exit_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.251294;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI17pthread_exit_typeE8max_sizeEv, funcdef_no=10905, decl_uid=177760, cgraph_uid=7537, symbol_order=8332)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<pthread_exit_type>::max_size (const struct new_allocator * const this)
{
  size_type D.251296;

  <bb 2> :
  D.251296 = __gnu_cxx::new_allocator<pthread_exit_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.251296;

}



;; Function __gnu_cxx::operator-<pthread_exit_type*, std::vector<pthread_exit_type> > (_ZN9__gnu_cxxmiIP17pthread_exit_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9497, decl_uid=225604, cgraph_uid=6129, symbol_order=6918)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<pthread_exit_type*, std::vector<pthread_exit_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.251298;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.251298 = _5 /[ex] 16;

  <bb 3> :
<L0>:
  return D.251298;

}



;; Function std::vector<pthread_exit_type>::_S_relocate (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9498, decl_uid=178255, cgraph_uid=6130, symbol_order=6919)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::vector<pthread_exit_type>::_S_relocate (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.251301;
  struct pthread_exit_type * D.251300;

  <bb 2> :
  D.251300 = std::vector<pthread_exit_type>::_S_do_relocate (__first, __last, __result, __alloc, D.251301);

  <bb 3> :
<L0>:
  return D.251300;

}



;; Function std::vector<pthread_exit_type>::_S_do_relocate (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10118, decl_uid=178243, cgraph_uid=6750, symbol_order=7543)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::vector<pthread_exit_type>::_S_do_relocate (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.240306)
{
  struct pthread_exit_type * D.251303;

  <bb 2> :
  D.251303 = std::__relocate_a<pthread_exit_type*, pthread_exit_type*, std::allocator<pthread_exit_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.251303;

}



;; Function std::__relocate_a<pthread_exit_type*, pthread_exit_type*, std::allocator<pthread_exit_type> > (_ZSt12__relocate_aIP17pthread_exit_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10588, decl_uid=225769, cgraph_uid=7220, symbol_order=8013)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__relocate_a<pthread_exit_type*, pthread_exit_type*, std::allocator<pthread_exit_type> > (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result, struct allocator & __alloc)
{
  struct pthread_exit_type * D.251305;

  <bb 2> :
  _1 = std::__niter_base<pthread_exit_type*> (__result);
  _2 = std::__niter_base<pthread_exit_type*> (__last);
  _3 = std::__niter_base<pthread_exit_type*> (__first);
  D.251305 = std::__relocate_a_1<pthread_exit_type, pthread_exit_type> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.251305;

}



;; Function std::__relocate_a_1<pthread_exit_type, pthread_exit_type> (_ZSt14__relocate_a_1I17pthread_exit_typeS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E, funcdef_no=10805, decl_uid=225943, cgraph_uid=7437, symbol_order=8232)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct pthread_exit_type * std::__relocate_a_1<pthread_exit_type, pthread_exit_type> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result, struct allocator & D.244610)
{
  ptrdiff_t __count;
  struct pthread_exit_type * D.251310;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 16;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.969_2 = (long unsigned int) __count;
  _3 = __count.969_2 * 16;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.970_4 = (long unsigned int) __count;
  _5 = __count.970_4 * 16;
  D.251310 = __result + _5;

  <bb 5> :
<L3>:
  return D.251310;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::put (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7759, decl_uid=193735, cgraph_uid=4391, symbol_order=5176)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_pthread_exit_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_pthread_exit_array & v)
{
  bool D.251319;
  struct hash_entry * D.251318;
  unsigned int D.251317;
  bool ins;
  struct hash_entry * e;
  bool D.251315;
  void * D.213834;
  void * D.213833;

  <bb 2> :
  _1 = &this->m_table;
  D.251317 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::hash (k);
  _2 = D.251317;
  D.251318 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.251318;
  D.251319 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_empty (e);
  ins = D.251319;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.213833 = &e->m_value;
  D.213834 = operator new (24, D.213833);
  function_pthread_exit_array::function_pthread_exit_array (D.213834, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_pthread_exit_array::operator= (_4, v);

  <bb 5> :
  D.251315 = ~ins;

  <bb 6> :
<L3>:
  return D.251315;

  <bb 7> :
<L4>:
  operator delete (D.213834, D.213833);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8699, decl_uid=193893, cgraph_uid=5331, symbol_order=6120)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.251370;
  bool D.251369;
  bool D.251368;
  bool D.251367;
  bool D.251366;
  bool D.251365;
  struct value_type * D.251364;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.976;
  bool retval.975;
  bool retval.974;
  bool retval.973;
  bool retval.972;
  bool retval.971;
  struct value_type * D.251326;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 32;
  entry = _11 + _13;
  size = this->m_size;
  D.251365 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.971 = D.251365;
  if (retval.971 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.251366 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.972 = D.251366;
  if (retval.972 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 32;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.251367 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (entry, comparable);
  retval.973 = D.251367;
  if (retval.973 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  D.251326 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 32;
  entry = _24 + _26;
  D.251368 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.974 = D.251368;
  if (retval.974 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.251369 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.975 = D.251369;
  if (retval.975 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 32;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.251370 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (entry, comparable);
  retval.976 = D.251370;
  if (retval.976 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 32;
  D.251326 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.251326 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.251326 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 32;
  D.251326 = _37 + _39;

  <bb 27> :
<L37>:
  return D.251326;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9501, decl_uid=193974, cgraph_uid=6145, symbol_order=6934)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.251401;
  unsigned int D.251400;
  bool D.251399;
  bool D.251398;
  struct mem_alloc_description & D.251397;
  struct value_type * D.251396;
  unsigned int D.251395;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.235289;
  void * D.235288;
  struct hash_entry & D.235326;
  bool iftmp.980;
  bool retval.979;
  bool iftmp.978;
  bool retval.977;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 32;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.978 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.978 = 0;

  <bb 6> :
  retval.977 = iftmp.978;
  if (retval.977 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.251395 = hash_table_higher_prime_index (_5);
  nindex = D.251395;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.251396 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.251396;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.251398 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.251398;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.251399 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.251399;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.980 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.980 = 0;

  <bb 15> :
  retval.979 = iftmp.980;
  if (retval.979 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.251400 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash (x);
  _16 = D.251400;
  D.251401 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.251401;
  D.235326 = std::move<hash_map<tree_node*, function_pthread_exit_array>::hash_entry&> (x);
  D.235288 = q;
  D.235289 = operator new (32, D.235288);
  hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash_entry (D.235289, D.235326);

  <bb 17> :
  p = p + 32;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10120, decl_uid=193869, cgraph_uid=6752, symbol_order=7545)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.251402;

  <bb 2> :
  D.251402 = this->m_size;

  <bb 3> :
<L0>:
  return D.251402;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10121, decl_uid=193871, cgraph_uid=6753, symbol_order=7546)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.251404;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.251404 = _1 - _2;

  <bb 3> :
<L0>:
  return D.251404;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10122, decl_uid=193971, cgraph_uid=6754, symbol_order=7547)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.981;
  bool D.251406;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.981 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.981 = 0;

  <bb 6> :
  D.251406 = iftmp.981;

  <bb 7> :
<L4>:
  return D.251406;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9333, decl_uid=193961, cgraph_uid=5965, symbol_order=6754)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.251428;
  struct value_type * D.251427;
  struct mem_alloc_description & D.251426;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.251424;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.251427 = xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_alloc (n);
  nentries = D.251427;
  goto <bb 6>; [INV]

  <bb 5> :
  D.251428 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (n);
  nentries = D.251428;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.251424 = nentries;

  <bb 9> :
<L14>:
  return D.251424;

}



;; Function xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10010, decl_uid=216807, cgraph_uid=6642, symbol_order=7435)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.251431;
  struct hash_entry * D.251429;

  <bb 2> :
  D.251431 = xcalloc (count, 32);
  D.251429 = D.251431;

  <bb 3> :
<L0>:
  return D.251429;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10011, decl_uid=233608, cgraph_uid=6643, symbol_order=7436)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.251438;
  struct hash_entry * D.251437;
  struct hash_entry * D.251435;
  bool retval.982;

  <bb 2> :
  retval.982 = need_finalization_p<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> ();
  if (retval.982 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 32;
  D.251437 = ggc_internal_cleared_alloc (_1, finalize, 32, c);
  D.251435 = D.251437;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 32;
  D.251438 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.251435 = D.251438;

  <bb 5> :
<L2>:
  return D.251435;

}



;; Function finalize<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10521, decl_uid=239858, cgraph_uid=7156, symbol_order=7949)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_pthread_exit_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10523, decl_uid=243243, cgraph_uid=7154, symbol_order=7947)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_pthread_exit_array::~function_pthread_exit_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10520, decl_uid=239857, cgraph_uid=7152, symbol_order=7945)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> ()
{
  bool D.251439;

  <bb 2> :
  D.251439 = 1;

  <bb 3> :
<L0>:
  return D.251439;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10124, decl_uid=193794, cgraph_uid=6756, symbol_order=7549)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.251443;
  hashval_t D.251441;

  <bb 2> :
  _1 = &e->m_key;
  D.251443 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::hash (_1);
  D.251441 = D.251443;

  <bb 3> :
<L0>:
  return D.251441;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10123, decl_uid=193964, cgraph_uid=6755, symbol_order=7548)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.251456;
  bool D.251455;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.984;
  struct value_type * D.251447;
  bool retval.983;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 32;
  slot = _2 + _4;
  D.251455 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.983 = D.251455;
  if (retval.983 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.251447 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 32;
  slot = _8 + _10;
  D.251456 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.984 = D.251456;
  if (retval.984 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.251447 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.251447;

}



;; Function std::move<hash_map<tree_node*, function_pthread_exit_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10125, decl_uid=235286, cgraph_uid=6757, symbol_order=7550)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_pthread_exit_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.251457;

  <bb 2> :
  D.251457 = __t;

  <bb 3> :
<L0>:
  return D.251457;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9512, decl_uid=235311, cgraph_uid=6143, symbol_order=6932)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.235313)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.235313->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.235313->m_value;
  function_pthread_exit_array::function_pthread_exit_array (_2, _3);
  return;

}



;; Function function_pthread_exit_array::function_pthread_exit_array (_ZN27function_pthread_exit_arrayC2EOS_, funcdef_no=9510, decl_uid=194086, cgraph_uid=6140, symbol_order=6929)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_exit_array::function_pthread_exit_array (struct function_pthread_exit_array * const this, struct function_pthread_exit_array & D.194088)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->pthread_exit_array;
  _2 = &D.194088->pthread_exit_array;
  std::vector<pthread_exit_type>::vector (_1, _2);
  return;

}



;; Function std::vector<pthread_exit_type>::vector (_ZNSt6vectorI17pthread_exit_typeSaIS0_EEC2EOS2_, funcdef_no=9508, decl_uid=178705, cgraph_uid=6137, symbol_order=6926)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_exit_type>::vector (struct vector * const this, struct vector & D.178707)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.178748;
  _2 = &D.178707->D.178748;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EEC2EOS2_, funcdef_no=9506, decl_uid=178173, cgraph_uid=6134, symbol_order=6923)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.178175)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.178175->_M_impl;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10127, decl_uid=178079, cgraph_uid=6759, symbol_order=7552)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl&> (__x);
  std::allocator<pthread_exit_type>::allocator (this, _1);
  _2 = &this->D.178093;
  _3 = std::move<std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.178093;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI17pthread_exit_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10589, decl_uid=240336, cgraph_uid=7221, symbol_order=8014)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.251459;

  <bb 2> :
  D.251459 = __t;

  <bb 3> :
<L0>:
  return D.251459;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10591, decl_uid=178035, cgraph_uid=7223, symbol_order=8016)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8920, decl_uid=216809, cgraph_uid=5552, symbol_order=6341)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9514, decl_uid=193982, cgraph_uid=6146, symbol_order=6935)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_pthread_exit_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10129, decl_uid=193806, cgraph_uid=6761, symbol_order=7554)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::mark_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::mark_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10593, decl_uid=240351, cgraph_uid=7225, symbol_order=8018)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::mark_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function std::vector<assign_type>::push_back (_ZNSt6vectorI11assign_typeSaIS0_EE9push_backERKS0_, funcdef_no=7713, decl_uid=175285, cgraph_uid=4346, symbol_order=5131)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<assign_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.251465;

  <bb 2> :
  _1 = this->D.175605._M_impl.D.174950._M_finish;
  _2 = this->D.175605._M_impl.D.174950._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.175605._M_impl.D.174950._M_finish;
  _4 = &this->D.175605._M_impl;
  std::allocator_traits<std::allocator<assign_type> >::construct<assign_type, const assign_type&> (_4, _3, __x);
  _5 = this->D.175605._M_impl.D.174950._M_finish;
  _6 = _5 + 24;
  this->D.175605._M_impl.D.174950._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.251465 = std::vector<assign_type>::end (this);
  std::vector<assign_type>::_M_realloc_insert<const assign_type&> (this, D.251465, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<assign_type> >::construct<assign_type, const assign_type&> (_ZNSt16allocator_traitsISaI11assign_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8612, decl_uid=212588, cgraph_uid=5244, symbol_order=6033)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<assign_type> >::construct<assign_type, const assign_type&> (struct allocator_type & __a, struct assign_type * __p, const struct assign_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const assign_type&> (__args#0);
  __gnu_cxx::new_allocator<assign_type>::construct<assign_type, const assign_type&> (__a, __p, _1);
  return;

}



;; Function std::forward<const assign_type&> (_ZSt7forwardIRK11assign_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9397, decl_uid=223457, cgraph_uid=6029, symbol_order=6818)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct assign_type & std::forward<const assign_type&> (const struct type & __t)
{
  const struct assign_type & D.251466;

  <bb 2> :
  D.251466 = __t;

  <bb 3> :
<L0>:
  return D.251466;

}



;; Function __gnu_cxx::new_allocator<assign_type>::construct<assign_type, const assign_type&> (_ZN9__gnu_cxx13new_allocatorI11assign_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9398, decl_uid=223459, cgraph_uid=6030, symbol_order=6819)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<assign_type>::construct<assign_type, const assign_type&> (struct new_allocator * const this, struct assign_type * __p, const struct assign_type & __args#0)
{
  void * D.234240;
  void * D.234239;
  const struct assign_type * D.234241;

  <bb 2> :
  D.234241 = std::forward<const assign_type&> (__args#0);
  D.234239 = __p;
  D.234240 = operator new (24, D.234239);
  MEM[(struct assign_type *)D.234240] = *D.234241;
  return;

}



;; Function std::vector<assign_type>::_M_realloc_insert<const assign_type&> (_ZNSt6vectorI11assign_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8613, decl_uid=212757, cgraph_uid=5248, symbol_order=6037)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::_M_realloc_insert<const assign_type&> (struct vector * const this, struct iterator __position, const struct assign_type & __args#0)
{
  struct assign_type * D.251472;
  const size_type D.251471;
  struct assign_type * __new_finish;
  struct assign_type * __new_start;
  const size_type __elems_before;
  struct assign_type * __old_finish;
  struct assign_type * __old_start;
  const size_type __len;
  struct iterator D.223470;

  <bb 2> :
  D.251471 = std::vector<assign_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.251471;
  __old_start = this->D.175605._M_impl.D.174950._M_start;
  __old_finish = this->D.175605._M_impl.D.174950._M_finish;
  D.223470 = std::vector<assign_type>::begin (this);
  _1 = __gnu_cxx::operator-<assign_type*, std::vector<assign_type> > (&__position, &D.223470);
  __elems_before = (const size_type) _1;
  D.223470 = {CLOBBER};
  _2 = &this->D.175605;
  D.251472 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_allocate (_2, __len);
  __new_start = D.251472;
  __new_finish = __new_start;
  _3 = std::forward<const assign_type&> (__args#0);
  _4 = __elems_before * 24;
  _5 = __new_start + _4;
  _6 = &this->D.175605._M_impl;
  std::allocator_traits<std::allocator<assign_type> >::construct<assign_type, const assign_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.175605;
  _8 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<assign_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 24;
  _11 = &this->D.175605;
  _12 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<assign_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.175605;
  _23 = this->D.175605._M_impl.D.174950._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 24;
  _26 = (long unsigned int) _25;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.175605._M_impl.D.174950._M_start = __new_start;
  this->D.175605._M_impl.D.174950._M_finish = __new_finish;
  _27 = __len * 24;
  _28 = __new_start + _27;
  this->D.175605._M_impl.D.174950._M_end_of_storage = _28;
  return;

}



;; Function std::vector<assign_type>::_M_check_len (_ZNKSt6vectorI11assign_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9399, decl_uid=175454, cgraph_uid=6031, symbol_order=6820)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<assign_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.987;
  size_type D.251476;
  const long unsigned int D.234246;
  bool retval.985;

  <bb 2> :
  _1 = std::vector<assign_type>::max_size (this);
  _2 = std::vector<assign_type>::size (this);
  _3 = _1 - _2;
  __n.986_4 = __n;
  retval.985 = _3 < __n.986_4;
  if (retval.985 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<assign_type>::size (this);
  _6 = std::vector<assign_type>::size (this);
  D.234246 = _6;
  _7 = std::max<long unsigned int> (&D.234246, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.234246 = {CLOBBER};
  _9 = std::vector<assign_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<assign_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.987 = std::vector<assign_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.987 = __len;

  <bb 8> :
  D.251476 = iftmp.987;

  <bb 9> :
<L6>:
  return D.251476;

}



;; Function std::vector<assign_type>::max_size (_ZNKSt6vectorI11assign_typeSaIS0_EE8max_sizeEv, funcdef_no=10055, decl_uid=175240, cgraph_uid=6687, symbol_order=7480)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<assign_type>::max_size (const struct vector * const this)
{
  size_type D.251483;

  <bb 2> :
  _1 = &this->D.175605;
  _2 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_1);
  D.251483 = std::vector<assign_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.251483;

}



;; Function std::vector<assign_type>::_S_max_size (_ZNSt6vectorI11assign_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10552, decl_uid=175461, cgraph_uid=7184, symbol_order=7977)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<assign_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.251485;

  <bb 2> :
  __diffmax = 384307168202282325;
  _1 = std::allocator_traits<std::allocator<assign_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.251485 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251485;

}



;; Function std::allocator_traits<std::allocator<assign_type> >::max_size (_ZNSt16allocator_traitsISaI11assign_typeEE8max_sizeERKS1_, funcdef_no=10794, decl_uid=174775, cgraph_uid=7426, symbol_order=8221)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<assign_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.251488;

  <bb 2> :
  D.251488 = __gnu_cxx::new_allocator<assign_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.251488;

}



;; Function __gnu_cxx::new_allocator<assign_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI11assign_typeE8max_sizeEv, funcdef_no=10901, decl_uid=174617, cgraph_uid=7533, symbol_order=8328)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<assign_type>::max_size (const struct new_allocator * const this)
{
  size_type D.251490;

  <bb 2> :
  D.251490 = __gnu_cxx::new_allocator<assign_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.251490;

}



;; Function __gnu_cxx::operator-<assign_type*, std::vector<assign_type> > (_ZN9__gnu_cxxmiIP11assign_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9400, decl_uid=223471, cgraph_uid=6032, symbol_order=6821)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<assign_type*, std::vector<assign_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.251492;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.251492 = _5 /[ex] 24;

  <bb 3> :
<L0>:
  return D.251492;

}



;; Function std::vector<assign_type>::_S_relocate (_ZNSt6vectorI11assign_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9401, decl_uid=175112, cgraph_uid=6033, symbol_order=6822)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::vector<assign_type>::_S_relocate (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.251495;
  struct assign_type * D.251494;

  <bb 2> :
  D.251494 = std::vector<assign_type>::_S_do_relocate (__first, __last, __result, __alloc, D.251495);

  <bb 3> :
<L0>:
  return D.251494;

}



;; Function std::vector<assign_type>::_S_do_relocate (_ZNSt6vectorI11assign_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10056, decl_uid=175100, cgraph_uid=6688, symbol_order=7481)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::vector<assign_type>::_S_do_relocate (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.240056)
{
  struct assign_type * D.251497;

  <bb 2> :
  D.251497 = std::__relocate_a<assign_type*, assign_type*, std::allocator<assign_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.251497;

}



;; Function std::__relocate_a<assign_type*, assign_type*, std::allocator<assign_type> > (_ZSt12__relocate_aIP11assign_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10553, decl_uid=223636, cgraph_uid=7185, symbol_order=7978)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__relocate_a<assign_type*, assign_type*, std::allocator<assign_type> > (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result, struct allocator & __alloc)
{
  struct assign_type * D.251499;

  <bb 2> :
  _1 = std::__niter_base<assign_type*> (__result);
  _2 = std::__niter_base<assign_type*> (__last);
  _3 = std::__niter_base<assign_type*> (__first);
  D.251499 = std::__relocate_a_1<assign_type, assign_type> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.251499;

}



;; Function std::__relocate_a_1<assign_type, assign_type> (_ZSt14__relocate_a_1I11assign_typeS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E, funcdef_no=10795, decl_uid=223810, cgraph_uid=7427, symbol_order=8222)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct assign_type * std::__relocate_a_1<assign_type, assign_type> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result, struct allocator & D.244504)
{
  ptrdiff_t __count;
  struct assign_type * D.251504;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 24;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.988_2 = (long unsigned int) __count;
  _3 = __count.988_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.989_4 = (long unsigned int) __count;
  _5 = __count.989_4 * 24;
  D.251504 = __result + _5;

  <bb 5> :
<L3>:
  return D.251504;

}



;; Function collect_function_return (_Z23collect_function_returnP6gimpleP11cgraph_nodeP15basic_block_def, funcdef_no=6404, decl_uid=187018, cgraph_uid=3380, symbol_order=4156)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;; 2 succs { 14 3 }
;; 3 succs { 4 6 }
;; 4 succs { 14 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 13 8 }
;; 8 succs { 13 9 }
;; 9 succs { 13 10 }
;; 10 succs { 13 11 }
;; 11 succs { 13 12 }
;; 12 succs { 1 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { }
void collect_function_return (struct gimple * gc, struct cgraph_node * node, struct basic_block_def * bb)
{
  struct function * D.251512;
  struct greturn * D.251511;
  struct greturn * D.251510;
  struct return_type ret_type;
  struct vector ret_type_array;
  union tree_node * get_function_return_tree;
  struct function_return_array fun_array;
  bool retval.990;

  <bb 2> :
  function_return_array::function_return_array (&fun_array);
  D.251510 = as_a<greturn*, gimple> (gc);

  <bb 3> :
  _1 = D.251510;
  _2 = gimple_return_retval (_1);
  retval.990 = _2 != 0B;
  if (retval.990 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  D.251511 = as_a<greturn*, gimple> (gc);

  <bb 5> :
  _3 = D.251511;
  get_function_return_tree = gimple_return_retval (_3);
  goto <bb 7>; [INV]

  <bb 6> :
  get_function_return_tree = 0B;

  <bb 7> :
  std::vector<return_type>::vector (&ret_type_array);
  std::vector<return_type>::operator= (&fun_array.return_type_array, &ret_type_array);

  <bb 8> :
  return_type::return_type (&ret_type);
  ret_type.stmt = gc;
  ret_type.return_tree = get_function_return_tree;
  std::vector<return_type>::push_back (&global_ret_type_array, &ret_type);

  <bb 9> :
  std::vector<return_type>::push_back (&fun_array.return_type_array, &ret_type);

  <bb 10> :
  function_return_collect.991_4 = function_return_collect;
  D.251512 = cgraph_node::get_fun (node);

  <bb 11> :
  _5 = D.251512;
  _6 = &_5->decl;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.991_4, _6, &fun_array);

  <bb 12> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  ret_type = {CLOBBER};
  return;

  <bb 13> :
<L3>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 3

  <bb 14> :
<L4>:
  function_return_array::~function_return_array (&fun_array);
  resx 2

  <bb 15> :
<L5>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  ret_type = {CLOBBER};
  resx 1

}



;; Function as_a<greturn*, gimple> (_Z4as_aIP7greturn6gimpleET_PT0_, funcdef_no=7760, decl_uid=195757, cgraph_uid=4392, symbol_order=5177)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct greturn * as_a<greturn*, gimple> (struct gimple * p)
{
  struct greturn * D.251516;

  <bb 2> :
  D.251516 = reinterpret_is_a_helper<greturn*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.251516;

}



;; Function reinterpret_is_a_helper<greturn*>::cast<gimple> (_ZN23reinterpret_is_a_helperIP7greturnE4castI6gimpleEES1_PT_, funcdef_no=8702, decl_uid=213841, cgraph_uid=5334, symbol_order=6123)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct greturn * reinterpret_is_a_helper<greturn*>::cast<gimple> (struct gimple * p)
{
  struct greturn * D.251518;

  <bb 2> :
  D.251518 = p;

  <bb 3> :
<L0>:
  return D.251518;

}



;; Function gimple_return_retval (_ZL20gimple_return_retvalPK7greturn, funcdef_no=2464, decl_uid=94269, cgraph_uid=1601, symbol_order=1761)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_return_retval (const struct greturn * gs)
{
  union tree_node * D.251520;

  <bb 2> :
  D.251520 = gs->D.90483.op[0];

  <bb 3> :
<L0>:
  return D.251520;

}



;; Function FunctionStmtMappingRet (_Z22FunctionStmtMappingRetP3ptbS0_P12gimple_array, funcdef_no=6405, decl_uid=187022, cgraph_uid=3381, symbol_order=4157)

Removing basic block 41
Removing basic block 42
Removing basic block 43
Removing basic block 55
Removing basic block 69
Removing basic block 70
Removing basic block 76
Removing basic block 82
Merging blocks 83 and 85
Removing basic block 86
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88
;;
;; Loop 1
;;  header 81, latch 80
;;  depth 1, outer 0
;;  nodes: 81 80 78 79 77 6 76 75 8 7 74 73 19 72 71 23 70 51 58 65 69 67 25 53 64 57 56 55 54 61 63 62 60 59 52 24 66 68 41 43 44 50 47 49 48 46 45 42 30 29 28 27 26 35 40 36 38 37 39 33 34 31 32 21 22 20 18 17 16 15 13 12 11 10 9 14
;;
;; Loop 2
;;  header 71, latch 70
;;  depth 2, outer 1
;;  nodes: 71 70 51 58 65 69 67 25 53 64 57 56 55 54 61 63 62 60 59 52 24 66 68 41 43 44 50 47 49 48 46 45 42 30 29 28 27 26 35 40 36 38 37 39 33 34 31 32
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 81 }
;; 6 succs { 7 77 }
;; 7 succs { 88 8 }
;; 8 succs { 9 77 }
;; 9 succs { 87 10 }
;; 10 succs { 87 11 }
;; 11 succs { 87 12 }
;; 12 succs { 87 13 }
;; 13 succs { 14 15 }
;; 14 succs { 76 }
;; 15 succs { 87 16 }
;; 16 succs { 87 17 }
;; 17 succs { 87 18 }
;; 18 succs { 19 20 }
;; 19 succs { 73 }
;; 20 succs { 86 21 }
;; 21 succs { 22 23 }
;; 22 succs { 23 }
;; 23 succs { 71 }
;; 24 succs { 25 52 }
;; 25 succs { 26 70 }
;; 26 succs { 31 27 }
;; 27 succs { 31 28 }
;; 28 succs { 31 29 }
;; 29 succs { 31 30 }
;; 30 succs { 31 42 }
;; 31 succs { 32 34 }
;; 32 succs { 33 34 }
;; 33 succs { 35 }
;; 34 succs { 35 }
;; 35 succs { 36 41 }
;; 36 succs { 37 41 }
;; 37 succs { 85 38 }
;; 38 succs { 39 41 }
;; 39 succs { 85 40 }
;; 40 succs { 85 41 }
;; 41 succs { 51 }
;; 42 succs { 44 43 }
;; 43 succs { 44 51 }
;; 44 succs { 45 51 }
;; 45 succs { 83 46 }
;; 46 succs { 83 47 }
;; 47 succs { 48 50 }
;; 48 succs { 83 49 }
;; 49 succs { 50 }
;; 50 succs { 51 }
;; 51 succs { 70 }
;; 52 succs { 53 65 }
;; 53 succs { 54 70 }
;; 54 succs { 85 55 }
;; 55 succs { 85 56 }
;; 56 succs { 58 57 }
;; 57 succs { 58 70 }
;; 58 succs { 59 70 }
;; 59 succs { 84 60 }
;; 60 succs { 84 61 }
;; 61 succs { 62 64 }
;; 62 succs { 84 63 }
;; 63 succs { 64 }
;; 64 succs { 70 }
;; 65 succs { 66 70 }
;; 66 succs { 85 67 }
;; 67 succs { 68 70 }
;; 68 succs { 85 69 }
;; 69 succs { 70 }
;; 70 succs { 71 }
;; 71 succs { 24 72 }
;; 72 succs { 73 }
;; 73 succs { 76 74 }
;; 74 succs { 75 }
;; 75 succs { 77 }
;; 76 succs { 77 }
;; 77 succs { 78 79 }
;; 78 succs { 80 }
;; 79 succs { 80 }
;; 80 succs { 81 }
;; 81 succs { 6 82 }
;; 82 succs { 1 }
;; 83 succs { 85 }
;; 84 succs { 85 }
;; 85 succs { 86 }
;; 86 succs { 87 }
;; 87 succs { 88 }
;; 88 succs { }
void FunctionStmtMappingRet (struct ptb * ptable, struct ptb * ftable, struct gimple_array * user_tmp)
{
  int finally_tmp.1017;
  union tree_node * D.251629;
  struct pthread_attr_array * D.251627;
  struct pthread_attr_array * D.251626;
  union tree_node * D.251625;
  const char * D.251624;
  union tree_node * D.251623;
  struct pthread_attr_array * D.251621;
  struct pthread_attr_array * D.251620;
  union tree_node * D.251619;
  struct function * D.251618;
  bool D.251617;
  struct function_return_array * D.251616;
  struct function * D.251615;
  struct function_return_array * D.251614;
  struct function * D.251613;
  const char * D.251612;
  union tree_node * D.251611;
  struct gimple_array * D.251610;
  union tree_node * getvardecl;
  struct pthread_attr_array pthread_attr_array;
  const char * name;
  union tree_node * getvardecl;
  struct pthread_attr_array pthread_attr_array;
  int i;
  struct gimple * def_stmt;
  union tree_node * second;
  struct vector ret_type_array;
  struct function_return_array fun_array;
  const char * name;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;
  union tree_node * iftmp.1016;
  bool retval.1015;
  bool retval.1014;
  bool retval.1013;
  bool retval.1010;
  bool retval.1008;
  bool retval.1003;
  bool retval.1001;
  bool retval.1000;
  bool iftmp.999;
  bool retval.998;
  bool retval.997;
  bool retval.994;
  union tree_node * iftmp.992;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  if (table_temp != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.992 = table_temp->target;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.992 = 0B;

  <bb 5> :
  t = iftmp.992;
  goto <bb 81>; [INV]

  <bb 6> :
  _1 = table_temp->target;
  if (_1 != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 7> :
  treeGimpleArray.993_2 = treeGimpleArray;
  _3 = &table_temp->target;
  D.251610 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.993_2, _3);

  <bb 8> :
  user_tmp = D.251610;
  if (user_tmp != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 9> :
  _4 = table_temp->last_stmt;
  D.251611 = gimple_call_fn (_4);

  <bb 10> :
  _5 = D.251611;
  D.251612 = get_name (_5);

  <bb 11> :
  name = D.251612;
  function_return_collect.995_6 = function_return_collect;
  _7 = table_temp->node;
  D.251613 = cgraph_node::get_fun (_7);

  <bb 12> :
  _8 = D.251613;
  _9 = &_8->decl;
  D.251614 = hash_map<tree_node*, function_return_array>::get (function_return_collect.995_6, _9);

  <bb 13> :
  _10 = D.251614;
  retval.994 = _10 == 0B;
  if (retval.994 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  // predicted unlikely by continue predictor.
  goto <bb 76>; [INV]

  <bb 15> :
  function_return_collect.996_11 = function_return_collect;
  _12 = table_temp->node;
  D.251615 = cgraph_node::get_fun (_12);

  <bb 16> :
  _13 = D.251615;
  _14 = &_13->decl;
  D.251616 = hash_map<tree_node*, function_return_array>::get (function_return_collect.996_11, _14);

  <bb 17> :
  _15 = D.251616;
  function_return_array::function_return_array (&fun_array, _15);

  <bb 18> :
  _16 = fun_array.return_type_num;
  if (_16 == 2)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  // predicted unlikely by continue predictor.
  finally_tmp.1017 = 0;
  goto <bb 73>; [INV]

  <bb 20> :
  std::vector<return_type>::vector (&ret_type_array, &fun_array.return_type_array);

  <bb 21> :
  _17 = table_temp->target;
  _18 = _17->base.code;
  if (_18 == 131)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  _19 = table_temp->target;
  second = _19->exp.operands[0];
  _20 = table_temp->target;
  def_stmt = _20->ssa_name.def_stmt;
  table_temp->target = second;
  table_temp->last_stmt = def_stmt;

  <bb 23> :
  i = 0;
  goto <bb 71>; [INV]

  <bb 24> :
  _21 = table_temp->last_stmt;
  _22 = gimple_code (_21);
  retval.997 = _22 == 8;
  if (retval.997 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 25> :
  if (name != 0B)
    goto <bb 26>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 26> :
  _23 = strcmp (name, "realloc");
  if (_23 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 27> :
  _24 = strcmp (name, "malloc");
  if (_24 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 28> :
  _25 = strcmp (name, "calloc");
  if (_25 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 29> :
  _26 = strcmp (name, "xmalloc");
  if (_26 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 30> :
  _27 = strcmp (name, "strdup");
  if (_27 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 31> :
  _28 = (long unsigned int) i;
  _29 = std::vector<return_type>::operator[] (&ret_type_array, _28);
  _30 = _29->return_tree;
  if (_30 != 0B)
    goto <bb 32>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 32> :
  _31 = table_temp->target;
  if (_31 != 0B)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  iftmp.999 = 1;
  goto <bb 35>; [INV]

  <bb 34> :
  iftmp.999 = 0;

  <bb 35> :
  retval.998 = iftmp.999;
  if (retval.998 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 36> :
  _32 = (long unsigned int) i;
  _33 = std::vector<return_type>::operator[] (&ret_type_array, _32);
  _34 = _33->return_tree;
  _35 = _34->base.code;
  retval.1000 = _35 == 153;
  if (retval.1000 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 37> :
  _36 = (long unsigned int) i;
  _37 = std::vector<return_type>::operator[] (&ret_type_array, _36);
  _38 = _37->return_tree;
  _39 = table_temp->target;
  D.251617 = ptr_derefs_may_alias_p (_39, _38);

  <bb 38> :
  retval.1001 = D.251617;
  if (retval.1001 != 0)
    goto <bb 39>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 39> :
  fun_array.return_type_num = 2;
  function_return_collect.1002_40 = function_return_collect;
  _41 = table_temp->node;
  D.251618 = cgraph_node::get_fun (_41);

  <bb 40> :
  _42 = D.251618;
  _43 = &_42->decl;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.1002_40, _43, &fun_array);

  <bb 41> :
  goto <bb 51>; [INV]

  <bb 42> :
  _44 = strcmp (name, "pthread_create");
  if (_44 == 0)
    goto <bb 44>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 43> :
  _45 = strcmp (name, "pthread_join");
  if (_45 == 0)
    goto <bb 44>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 44> :
  _46 = strcmp (name, "pthread_create");
  if (_46 == 0)
    goto <bb 45>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 45> :
  pthread_attr_array::pthread_attr_array (&pthread_attr_array);
  _47 = table_temp->last_stmt;
  D.251619 = gimple_call_arg (_47, 1);

  <bb 46> :
  _48 = D.251619;
  _49 = _48->exp.operands[0];
  getvardecl = _49;
  pthread_attr_setdetachstates.1004_50 = pthread_attr_setdetachstates;
  D.251620 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.1004_50, &getvardecl);

  <bb 47> :
  _51 = D.251620;
  retval.1003 = _51 != 0B;
  if (retval.1003 != 0)
    goto <bb 48>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 48> :
  pthread_attr_setdetachstates.1005_52 = pthread_attr_setdetachstates;
  D.251621 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.1005_52, &getvardecl);

  <bb 49> :
  _53 = D.251621;
  pthread_attr_array = MEM[(const struct pthread_attr_array &)_53];
  FUNCITON_THREAD.1006_54 = FUNCITON_THREAD;
  FUNCITON_THREAD.1007_55 = (int) FUNCITON_THREAD.1006_54;
  table_temp->swap_type = FUNCITON_THREAD.1007_55;
  _56 = pthread_attr_array.attr_type_num;
  table_temp->pthread_type = _56;

  <bb 50> :
  pthread_attr_array = {CLOBBER};
  getvardecl = {CLOBBER};

  <bb 51> :
  goto <bb 70>; [INV]

  <bb 52> :
  _57 = table_temp->last_stmt;
  _58 = gimple_code (_57);
  retval.1008 = _58 == 6;
  if (retval.1008 != 0)
    goto <bb 53>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 53> :
  _59 = table_temp->swap_type;
  _60 = (unsigned int) _59;
  FUNCITON_THREAD.1009_61 = FUNCITON_THREAD;
  if (_60 == FUNCITON_THREAD.1009_61)
    goto <bb 54>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 54> :
  _62 = table_temp->swap_stmt;
  D.251623 = gimple_call_fn (_62);

  <bb 55> :
  _63 = D.251623;
  D.251624 = get_name (_63);

  <bb 56> :
  name = D.251624;
  _64 = strcmp (name, "pthread_create");
  if (_64 == 0)
    goto <bb 58>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 57> :
  _65 = strcmp (name, "pthread_join");
  if (_65 == 0)
    goto <bb 58>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 58> :
  _66 = strcmp (name, "pthread_create");
  if (_66 == 0)
    goto <bb 59>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 59> :
  pthread_attr_array::pthread_attr_array (&pthread_attr_array);
  _67 = table_temp->swap_stmt;
  D.251625 = gimple_call_arg (_67, 1);

  <bb 60> :
  _68 = D.251625;
  _69 = _68->exp.operands[0];
  getvardecl = _69;
  pthread_attr_setdetachstates.1011_70 = pthread_attr_setdetachstates;
  D.251626 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.1011_70, &getvardecl);

  <bb 61> :
  _71 = D.251626;
  retval.1010 = _71 != 0B;
  if (retval.1010 != 0)
    goto <bb 62>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 62> :
  pthread_attr_setdetachstates.1012_72 = pthread_attr_setdetachstates;
  D.251627 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.1012_72, &getvardecl);

  <bb 63> :
  _73 = D.251627;
  pthread_attr_array = MEM[(const struct pthread_attr_array &)_73];
  _74 = pthread_attr_array.attr_type_num;
  table_temp->pthread_type = _74;

  <bb 64> :
  pthread_attr_array = {CLOBBER};
  getvardecl = {CLOBBER};
  goto <bb 70>; [INV]

  <bb 65> :
  _75 = table_temp->last_stmt;
  _76 = gimple_code (_75);
  retval.1013 = _76 == 18;
  if (retval.1013 != 0)
    goto <bb 66>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 66> :
  _77 = (long unsigned int) i;
  _78 = std::vector<return_type>::operator[] (&ret_type_array, _77);
  _79 = _78->return_tree;
  _80 = table_temp->last_stmt;
  D.251629 = gimple_phi_result (_80);

  <bb 67> :
  _81 = D.251629;
  retval.1014 = _79 == _81;
  if (retval.1014 != 0)
    goto <bb 68>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 68> :
  _82 = (long unsigned int) i;
  _83 = std::vector<return_type>::operator[] (&ret_type_array, _82);
  _84 = _83->stmt;
  _85 = (long unsigned int) i;
  _86 = std::vector<return_type>::operator[] (&ret_type_array, _85);
  _87 = _86->return_tree;
  _88 = (long unsigned int) i;
  _89 = std::vector<return_type>::operator[] (&ret_type_array, _88);
  _90 = _89->return_tree;
  _91 = table_temp->last_stmt;
  set_gimple_array (user_tmp, _91, _90, _87, _84);

  <bb 69> :
  // predicted unlikely by continue predictor.

  <bb 70> :
  i = i + 1;

  <bb 71> :
  _92 = (long unsigned int) i;
  _93 = std::vector<return_type>::size (&ret_type_array);
  retval.1015 = _92 < _93;
  if (retval.1015 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 72> :
  std::vector<return_type>::~vector (&ret_type_array);
  finally_tmp.1017 = 1;

  <bb 73> :
  function_return_array::~function_return_array (&fun_array);
  if (finally_tmp.1017 == 1)
    goto <bb 74>; [INV]
  else
    goto <bb 76>; [INV]

  <bb 74> :
<L73>:

  <bb 75> :
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  goto <bb 77>; [INV]

  <bb 76> :
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};

  <bb 77> :
  table_temp = table_temp->next;
  if (table_temp != 0B)
    goto <bb 78>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 78> :
  iftmp.1016 = table_temp->target;
  goto <bb 80>; [INV]

  <bb 79> :
  iftmp.1016 = 0B;

  <bb 80> :
  t = iftmp.1016;

  <bb 81> :
  if (t != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 82> :
  start = {CLOBBER};
  return;

  <bb 83> :
<L88>:
  pthread_attr_array = {CLOBBER};
  getvardecl = {CLOBBER};
  resx 5

  <bb 84> :
<L89>:
  pthread_attr_array = {CLOBBER};
  getvardecl = {CLOBBER};
  resx 7

  <bb 85> :
<L90>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 4

  <bb 86> :
<L91>:
  function_return_array::~function_return_array (&fun_array);
  resx 3

  <bb 87> :
<L92>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  resx 2

  <bb 88> :
<L93>:
  start = {CLOBBER};
  resx 1

}



;; Function gimple_phi_result (_ZL17gimple_phi_resultPK6gimple, funcdef_no=2265, decl_uid=93420, cgraph_uid=1402, symbol_order=1562)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_phi_result (const struct gimple * gs)
{
  const struct gphi * D.251643;
  const struct gphi * phi_stmt;
  union tree_node * D.251641;

  <bb 2> :
  D.251643 = as_a<const gphi*, const gimple> (gs);
  phi_stmt = D.251643;
  D.251641 = gimple_phi_result (phi_stmt);

  <bb 3> :
<L0>:
  return D.251641;

}



;; Function as_a<const gphi*, const gimple> (_Z4as_aIPK4gphiK6gimpleET_PT0_, funcdef_no=7055, decl_uid=93408, cgraph_uid=3687, symbol_order=4469)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gphi * as_a<const gphi*, const gimple> (const struct gimple * p)
{
  const struct gphi * D.251646;
  const struct gphi * D.251644;

  <bb 2> :
  D.251646 = is_a_helper<const gphi*>::cast<gimple> (p);
  D.251644 = D.251646;

  <bb 3> :
<L0>:
  return D.251644;

}



;; Function is_a_helper<const gphi*>::cast<gimple> (_ZN11is_a_helperIPK4gphiE4castI6gimpleEES2_PKT_, funcdef_no=8052, decl_uid=205918, cgraph_uid=4684, symbol_order=5469)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gphi * is_a_helper<const gphi*>::cast<gimple> (const struct gimple * p)
{
  const struct gphi * D.251647;

  <bb 2> :
  D.251647 = reinterpret_is_a_helper<gphi*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.251647;

}



;; Function reinterpret_is_a_helper<gphi*>::cast<gimple> (_ZN23reinterpret_is_a_helperIP4gphiE4castI6gimpleEES1_PT_, funcdef_no=8054, decl_uid=205926, cgraph_uid=4686, symbol_order=5471)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gphi * reinterpret_is_a_helper<gphi*>::cast<gimple> (struct gimple * p)
{
  struct gphi * D.251649;

  <bb 2> :
  D.251649 = p;

  <bb 3> :
<L0>:
  return D.251649;

}



;; Function gimple_phi_result (_ZL17gimple_phi_resultPK4gphi, funcdef_no=2264, decl_uid=93417, cgraph_uid=1401, symbol_order=1561)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_phi_result (const struct gphi * gs)
{
  union tree_node * D.251651;

  <bb 2> :
  D.251651 = gs->result;

  <bb 3> :
<L0>:
  return D.251651;

}



;; Function FunctionStmtMappingAssign (_Z25FunctionStmtMappingAssignP3ptbP12gimple_array, funcdef_no=6406, decl_uid=187025, cgraph_uid=3382, symbol_order=4158)

Removing basic block 21
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
;;
;; Loop 1
;;  header 28, latch 27
;;  depth 1, outer 0
;;  nodes: 28 27 26 6 11 25 24 13 23 22 14 21 19 20 17 18 16 15 12 9 8 7 5 4 10
;;
;; Loop 2
;;  header 24, latch 23
;;  depth 2, outer 1
;;  nodes: 24 23 22 14 21 19 20 17 18 16 15
;;
;; Loop 3
;;  header 22, latch 21
;;  depth 3, outer 2
;;  nodes: 22 21 19 20 17 18 16 15
;; 2 succs { 31 3 }
;; 3 succs { 28 }
;; 4 succs { 31 5 }
;; 5 succs { 6 7 }
;; 6 succs { 26 }
;; 7 succs { 31 8 }
;; 8 succs { 31 9 }
;; 9 succs { 10 12 }
;; 10 succs { 31 11 }
;; 11 succs { 26 }
;; 12 succs { 31 13 }
;; 13 succs { 24 }
;; 14 succs { 22 }
;; 15 succs { 17 16 }
;; 16 succs { 17 18 }
;; 17 succs { 19 }
;; 18 succs { 19 }
;; 19 succs { 20 21 }
;; 20 succs { 30 21 }
;; 21 succs { 22 }
;; 22 succs { 15 23 }
;; 23 succs { 24 }
;; 24 succs { 14 25 }
;; 25 succs { 31 26 }
;; 26 succs { 31 27 }
;; 27 succs { 28 }
;; 28 succs { 4 29 }
;; 29 succs { 1 }
;; 30 succs { 31 }
;; 31 succs { }
void FunctionStmtMappingAssign (struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct cgraph_node * D.251672;
  struct function * D.251670;
  bool D.251669;
  struct cgraph_node * D.251668;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct cgraph_node * node;
  struct basic_block_def * bb;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;
  bool retval.1024;
  bool iftmp.1023;
  bool retval.1022;
  bool retval.1019;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  symtab.1018_1 = symtab;
  D.251668 = symbol_table::first_defined_function (symtab.1018_1);

  <bb 3> :
  node = D.251668;
  goto <bb 28>; [INV]

  <bb 4> :
  _2 = node->D.97512.decl;
  D.251669 = gimple_has_body_p (_2);

  <bb 5> :
  _3 = D.251669;
  retval.1019 = ~_3;
  if (retval.1019 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  // predicted unlikely by continue predictor.
  goto <bb 26>; [INV]

  <bb 7> :
  D.251670 = cgraph_node::get_fun (node);

  <bb 8> :
  _4 = D.251670;
  push_cfun (_4);

  <bb 9> :
  cfun.1020_5 = cfun;
  if (cfun.1020_5 == 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  pop_cfun ();

  <bb 11> :
  // predicted unlikely by continue predictor.
  goto <bb 26>; [INV]

  <bb 12> :
  calculate_dominance_info (1);

  <bb 13> :
  cfun.1021_6 = cfun;
  _7 = cfun.1021_6->cfg;
  _8 = _7->x_entry_block_ptr;
  bb = _8->next_bb;
  goto <bb 24>; [INV]

  <bb 14> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 22>; [INV]

  <bb 15> :
  gc = gsi_stmt (gsi);
  _9 = is_gimple_call (gc);
  if (_9 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  _10 = is_gimple_assign (gc);
  if (_10 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  iftmp.1023 = 1;
  goto <bb 19>; [INV]

  <bb 18> :
  iftmp.1023 = 0;

  <bb 19> :
  retval.1022 = iftmp.1023;
  if (retval.1022 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  collect_FunctionMapping_Assign (gc, node, bb, ptable);

  <bb 21> :
  gsi_next (&gsi);

  <bb 22> :
  _11 = gsi_end_p (gsi);
  retval.1024 = ~_11;
  if (retval.1024 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 23> :
  gsi = {CLOBBER};
  bb = bb->next_bb;

  <bb 24> :
  cfun.1025_12 = cfun;
  _13 = cfun.1025_12->cfg;
  _14 = _13->x_exit_block_ptr;
  if (bb != _14)
    goto <bb 14>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 25> :
  pop_cfun ();

  <bb 26> :
  symtab.1026_15 = symtab;
  D.251672 = symbol_table::next_defined_function (symtab.1026_15, node);

  <bb 27> :
  node = D.251672;

  <bb 28> :
  if (node != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 29> :
  start = {CLOBBER};
  return;

  <bb 30> :
<L21>:
  gsi = {CLOBBER};
  resx 2

  <bb 31> :
<L22>:
  start = {CLOBBER};
  resx 1

}



;; Function parseLine (_Z9parseLinePc, funcdef_no=6407, decl_uid=195823, cgraph_uid=3383, symbol_order=4159)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3 5
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 3 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
int parseLine (char * line)
{
  const char * p;
  int i;
  int D.251675;

  <bb 2> :
  _1 = strlen (line);
  i = (int) _1;
  p = line;
  goto <bb 4>; [INV]

  <bb 3> :
  p = p + 1;

  <bb 4> :
  _2 = *p;
  if (_2 <= 47)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _3 = *p;
  if (_3 > 57)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _4 = (sizetype) i;
  _5 = _4 + 18446744073709551613;
  _6 = line + _5;
  *_6 = 0;
  i = atoi (p);
  D.251675 = i;

  <bb 7> :
<L4>:
  return D.251675;

}



;; Function GetProcessMemory (_Z16GetProcessMemoryv, funcdef_no=6408, decl_uid=195835, cgraph_uid=3384, symbol_order=4160)

Merging blocks 13 and 14
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;;
;; Loop 1
;;  header 10, latch 7
;;  depth 1, outer 0
;;  nodes: 10 7 4 11
;; 2 succs { 15 3 }
;; 3 succs { 10 }
;; 4 succs { 5 7 }
;; 5 succs { 15 6 }
;; 6 succs { 12 }
;; 7 succs { 8 10 }
;; 8 succs { 15 9 }
;; 9 succs { 12 }
;; 10 succs { 15 11 }
;; 11 succs { 4 12 }
;; 12 succs { 15 13 }
;; 13 succs { 14 }
;; 14 succs { 1 }
;; 15 succs { }
struct processMem_t GetProcessMemory ()
{
  char * D.251687;
  int D.251686;
  int D.251685;
  struct FILE * D.251684;
  struct processMem_t processMem;
  char line[128];
  struct FILE * file;
  struct processMem_t D.251682;
  bool retval.1027;

  <bb 2> :
  D.251684 = fopen ("/proc/self/status", "r");

  <bb 3> :
  file = D.251684;
  goto <bb 10>; [INV]

  <bb 4> :
  _1 = strncmp (&line, "VmSize:", 7);
  if (_1 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.251685 = parseLine (&line);

  <bb 6> :
  _2 = D.251685;
  _3 = (unsigned int) _2;
  processMem.virtualMem = _3;
  goto <bb 12>; [INV]

  <bb 7> :
  _4 = strncmp (&line, "VmRSS:", 6);
  if (_4 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  D.251686 = parseLine (&line);

  <bb 9> :
  _5 = D.251686;
  _6 = (unsigned int) _5;
  processMem.physicalMem = _6;
  goto <bb 12>; [INV]

  <bb 10> :
  D.251687 = fgets (&line, 128, file);

  <bb 11> :
  _7 = D.251687;
  retval.1027 = _7 != 0B;
  if (retval.1027 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  fclose (file);

  <bb 13> :
  D.251682 = processMem;
  line = {CLOBBER};
  processMem = {CLOBBER};

  <bb 14> :
<L8>:
  return D.251682;

  <bb 15> :
<L9>:
  line = {CLOBBER};
  processMem = {CLOBBER};
  resx 1

}



;; Function diff (_Z4diff8timespecS_, funcdef_no=6409, decl_uid=187028, cgraph_uid=3385, symbol_order=4161)

Merging blocks 5 and 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct timespec diff (struct timespec start, struct timespec end)
{
  struct timespec temp;
  struct timespec D.251693;

  <bb 2> :
  _1 = end.tv_nsec;
  _2 = start.tv_nsec;
  _3 = _1 - _2;
  if (_3 < 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = end.tv_sec;
  _5 = start.tv_sec;
  _6 = _4 - _5;
  _7 = _6 + -1;
  temp.tv_sec = _7;
  _8 = end.tv_nsec;
  _9 = _8 + 1000000000;
  _10 = start.tv_nsec;
  _11 = _9 - _10;
  temp.tv_nsec = _11;
  goto <bb 5>; [INV]

  <bb 4> :
  _12 = end.tv_sec;
  _13 = start.tv_sec;
  _14 = _12 - _13;
  temp.tv_sec = _14;
  _15 = end.tv_nsec;
  _16 = start.tv_nsec;
  _17 = _15 - _16;
  temp.tv_nsec = _17;

  <bb 5> :
  D.251693 = temp;
  temp = {CLOBBER};

  <bb 6> :
<L4>:
  return D.251693;

}



;; Function Varnew_search_imm_use (_Z21Varnew_search_imm_useP12gimple_arrayP6gimpleP9tree_nodeS4_, funcdef_no=6412, decl_uid=196150, cgraph_uid=3392, symbol_order=4168)

Removing basic block 43
Removing basic block 44
Removing basic block 52
Removing basic block 53
Removing basic block 69
Removing basic block 70
Removing basic block 73
Removing basic block 74
Removing basic block 105
Removing basic block 106
Removing basic block 107
Removing basic block 108
Removing basic block 109
Removing basic block 120
Removing basic block 121
Removing basic block 122
Removing basic block 123
Removing basic block 146
Removing basic block 147
Removing basic block 148
Removing basic block 149
Removing basic block 164
Removing basic block 165
Removing basic block 166
Removing basic block 167
Removing basic block 168
Removing basic block 179
Removing basic block 180
Removing basic block 181
Removing basic block 182
Removing basic block 205
Removing basic block 206
Removing basic block 207
Removing basic block 208
Removing basic block 209
Removing basic block 212
Removing basic block 213
Removing basic block 214
Removing basic block 216
Removing basic block 217
Removing basic block 219
Removing basic block 235
Removing basic block 246
Removing basic block 247
Removing basic block 248
Removing basic block 251
Removing basic block 252
Removing basic block 286
Removing basic block 287
Removing basic block 288
Removing basic block 289
Removing basic block 290
Removing basic block 304
Removing basic block 305
Removing basic block 306
Removing basic block 307
Removing basic block 330
Removing basic block 331
Removing basic block 332
Removing basic block 333
Removing basic block 351
Removing basic block 352
Removing basic block 353
Removing basic block 354
Removing basic block 355
Removing basic block 369
Removing basic block 370
Removing basic block 371
Removing basic block 372
Removing basic block 373
Removing basic block 374
Removing basic block 396
Removing basic block 397
Removing basic block 398
Removing basic block 399
Removing basic block 400
Removing basic block 403
Removing basic block 404
Removing basic block 405
Removing basic block 407
Removing basic block 408
Removing basic block 412
Removing basic block 413
Removing basic block 424
Removing basic block 435
Removing basic block 449
Removing basic block 463
Removing basic block 464
Removing basic block 465
Removing basic block 466
Removing basic block 467
Removing basic block 468
Removing basic block 469
Removing basic block 477
Removing basic block 492
Removing basic block 493
Removing basic block 494
Removing basic block 518
Removing basic block 519
Removing basic block 520
Removing basic block 521
Removing basic block 522
Removing basic block 523
Removing basic block 524
Removing basic block 525
Removing basic block 526
Removing basic block 539
Removing basic block 552
Removing basic block 553
Removing basic block 554
Removing basic block 555
Removing basic block 556
Removing basic block 557
Removing basic block 570
Removing basic block 573
Removing basic block 574
Removing basic block 575
Removing basic block 583
Removing basic block 600
Removing basic block 601
Removing basic block 602
Removing basic block 603
Removing basic block 627
Removing basic block 628
Removing basic block 629
Removing basic block 630
Removing basic block 631
Removing basic block 632
Removing basic block 633
Removing basic block 634
Removing basic block 635
Removing basic block 656
Removing basic block 657
Removing basic block 658
Removing basic block 659
Removing basic block 660
Removing basic block 661
Removing basic block 669
Removing basic block 672
Removing basic block 673
Removing basic block 674
Removing basic block 675
Removing basic block 698
Removing basic block 699
Removing basic block 702
Removing basic block 705
Removing basic block 718
Removing basic block 719
Removing basic block 724
Removing basic block 725
Removing basic block 728
Removing basic block 735
Removing basic block 751
Removing basic block 752
Removing basic block 753
Removing basic block 754
Removing basic block 757
Removing basic block 758
Removing basic block 759
Removing basic block 760
Removing basic block 761
Removing basic block 764
;; 6 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 3
;;  header 602, latch 601
;;  depth 1, outer 0
;;  nodes
;;
;; Loop 5
;;  header 577, latch 576
;;  depth 2, outer 3
;;  nodes: 577 576 564 573 571 568 575 574 567 566 565 570 569 572 563 562
;;
;; Loop 4
;;  header 600, latch 599
;;  depth 2, outer 3
;;  nodes: 600 599 588 598 590 595 593 592 591 594 589 597 596 587 586
;;
;; Loop 2
;;  header 326, latch 325
;;  depth 1, outer 0
;;  nodes: 326 325 221 275 273 312 319 309 261 268 258 324 323 322 321 320 256 257 254 255 252 253 240 241 238 239 229 232 237 234 230 233 236 235 231 228 226 227 224 225 223 222 242 251 243 247 250 245 244 249 248 246 266 267 263 265 264 262 260 259 307 308 305 306 303 304 293 295 299 302 297 294 296 301 300 298 292 290 291 281 284 289 286 282 285 288 287 283 280 278 279 276 277 317 318 314 316 315 313 311 310 272 271 270 269 274
;;
;; Loop 1
;;  header 176, latch 175
;;  depth 1, outer 0
;;  nodes: 176 175 82 130 128 162 169 159 116 123 113 174 173 172 171 170 111 112 109 110 107 108 98 99 96 97 90 93 95 94 92 91 89 87 88 85 86 84 83 100 106 102 104 105 103 101 121 122 118 120 119 117 115 114 157 158 155 156 153 154 144 145 142 143 136 139 141 140 138 137 135 133 134 131 132 146 152 148 150 151 149 147 167 168 164 166 165 163 161 160 127 126 125 124 129
;; 2 succs { 3 4 }
;; 3 succs { 14 4 }
;; 4 succs { 5 6 }
;; 5 succs { 14 6 }
;; 6 succs { 7 8 }
;; 7 succs { 14 8 }
;; 8 succs { 9 10 }
;; 9 succs { 14 10 }
;; 10 succs { 11 12 }
;; 11 succs { 14 12 }
;; 12 succs { 13 15 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 605 }
;; 17 succs { 18 331 }
;; 18 succs { 616 19 }
;; 19 succs { 20 23 }
;; 20 succs { 616 21 }
;; 21 succs { 22 23 }
;; 22 succs { 24 }
;; 23 succs { 24 }
;; 24 succs { 25 27 }
;; 25 succs { 616 26 }
;; 26 succs { 27 }
;; 27 succs { 616 28 }
;; 28 succs { 29 32 }
;; 29 succs { 616 30 }
;; 30 succs { 31 32 }
;; 31 succs { 33 }
;; 32 succs { 33 }
;; 33 succs { 34 36 }
;; 34 succs { 616 35 }
;; 35 succs { 36 }
;; 36 succs { 616 37 }
;; 37 succs { 38 43 }
;; 38 succs { 616 39 }
;; 39 succs { 40 43 }
;; 40 succs { 616 41 }
;; 41 succs { 42 43 }
;; 42 succs { 43 }
;; 43 succs { 616 44 }
;; 44 succs { 45 50 }
;; 45 succs { 616 46 }
;; 46 succs { 47 50 }
;; 47 succs { 616 48 }
;; 48 succs { 49 50 }
;; 49 succs { 50 }
;; 50 succs { 616 51 }
;; 51 succs { 52 179 }
;; 52 succs { 616 53 }
;; 53 succs { 54 179 }
;; 54 succs { 609 55 }
;; 55 succs { 609 56 }
;; 56 succs { 57 178 }
;; 57 succs { 58 67 }
;; 58 succs { 59 69 }
;; 59 succs { 60 65 }
;; 60 succs { 61 69 }
;; 61 succs { 609 62 }
;; 62 succs { 63 69 }
;; 63 succs { 609 64 }
;; 64 succs { 69 }
;; 65 succs { 66 69 }
;; 66 succs { 69 }
;; 67 succs { 68 69 }
;; 68 succs { 69 }
;; 69 succs { 70 178 }
;; 70 succs { 71 178 }
;; 71 succs { 72 73 }
;; 72 succs { 73 }
;; 73 succs { 606 74 }
;; 74 succs { 75 177 }
;; 75 succs { 606 76 }
;; 76 succs { 606 77 }
;; 77 succs { 606 78 }
;; 78 succs { 606 79 }
;; 79 succs { 80 177 }
;; 80 succs { 81 177 }
;; 81 succs { 176 }
;; 82 succs { 83 175 }
;; 83 succs { 606 84 }
;; 84 succs { 85 129 }
;; 85 succs { 86 87 }
;; 86 succs { 87 }
;; 87 succs { 88 89 }
;; 88 succs { 89 }
;; 89 succs { 90 97 }
;; 90 succs { 91 98 }
;; 91 succs { 606 92 }
;; 92 succs { 93 98 }
;; 93 succs { 94 98 }
;; 94 succs { 95 98 }
;; 95 succs { 96 98 }
;; 96 succs { 98 }
;; 97 succs { 98 }
;; 98 succs { 99 108 }
;; 99 succs { 100 108 }
;; 100 succs { 101 107 }
;; 101 succs { 606 102 }
;; 102 succs { 103 107 }
;; 103 succs { 104 107 }
;; 104 succs { 105 107 }
;; 105 succs { 106 107 }
;; 106 succs { 107 }
;; 107 succs { 109 }
;; 108 succs { 109 }
;; 109 succs { 110 111 }
;; 110 succs { 111 }
;; 111 succs { 112 113 }
;; 112 succs { 113 }
;; 113 succs { 114 175 }
;; 114 succs { 606 115 }
;; 115 succs { 606 116 }
;; 116 succs { 117 175 }
;; 117 succs { 606 118 }
;; 118 succs { 119 122 }
;; 119 succs { 606 120 }
;; 120 succs { 121 122 }
;; 121 succs { 123 }
;; 122 succs { 123 }
;; 123 succs { 124 175 }
;; 124 succs { 606 125 }
;; 125 succs { 606 126 }
;; 126 succs { 606 127 }
;; 127 succs { 606 128 }
;; 128 succs { 606 175 }
;; 129 succs { 606 130 }
;; 130 succs { 131 175 }
;; 131 succs { 132 133 }
;; 132 succs { 133 }
;; 133 succs { 134 135 }
;; 134 succs { 135 }
;; 135 succs { 136 143 }
;; 136 succs { 137 144 }
;; 137 succs { 606 138 }
;; 138 succs { 139 144 }
;; 139 succs { 140 144 }
;; 140 succs { 141 144 }
;; 141 succs { 142 144 }
;; 142 succs { 144 }
;; 143 succs { 144 }
;; 144 succs { 145 154 }
;; 145 succs { 146 154 }
;; 146 succs { 147 153 }
;; 147 succs { 606 148 }
;; 148 succs { 149 153 }
;; 149 succs { 150 153 }
;; 150 succs { 151 153 }
;; 151 succs { 152 153 }
;; 152 succs { 153 }
;; 153 succs { 155 }
;; 154 succs { 155 }
;; 155 succs { 156 157 }
;; 156 succs { 157 }
;; 157 succs { 158 159 }
;; 158 succs { 159 }
;; 159 succs { 160 175 }
;; 160 succs { 606 161 }
;; 161 succs { 606 162 }
;; 162 succs { 163 175 }
;; 163 succs { 606 164 }
;; 164 succs { 165 168 }
;; 165 succs { 606 166 }
;; 166 succs { 167 168 }
;; 167 succs { 169 }
;; 168 succs { 169 }
;; 169 succs { 170 175 }
;; 170 succs { 606 171 }
;; 171 succs { 606 172 }
;; 172 succs { 606 173 }
;; 173 succs { 606 174 }
;; 174 succs { 606 175 }
;; 175 succs { 176 }
;; 176 succs { 82 177 }
;; 177 succs { 178 }
;; 178 succs { 179 }
;; 179 succs { 616 180 }
;; 180 succs { 181 331 }
;; 181 succs { 616 182 }
;; 182 succs { 183 331 }
;; 183 succs { 613 184 }
;; 184 succs { 613 185 }
;; 185 succs { 186 328 }
;; 186 succs { 187 206 }
;; 187 succs { 188 206 }
;; 188 succs { 189 204 }
;; 189 succs { 190 194 }
;; 190 succs { 613 191 }
;; 191 succs { 192 194 }
;; 192 succs { 613 193 }
;; 193 succs { 194 }
;; 194 succs { 613 195 }
;; 195 succs { 196 206 }
;; 196 succs { 197 200 }
;; 197 succs { 613 198 }
;; 198 succs { 199 200 }
;; 199 succs { 201 }
;; 200 succs { 201 }
;; 201 succs { 202 206 }
;; 202 succs { 613 203 }
;; 203 succs { 613 206 }
;; 204 succs { 205 206 }
;; 205 succs { 206 }
;; 206 succs { 207 330 }
;; 207 succs { 208 330 }
;; 208 succs { 209 210 }
;; 209 succs { 210 }
;; 210 succs { 610 211 }
;; 211 succs { 212 327 }
;; 212 succs { 610 213 }
;; 213 succs { 610 214 }
;; 214 succs { 610 215 }
;; 215 succs { 610 216 }
;; 216 succs { 217 327 }
;; 217 succs { 218 219 }
;; 218 succs { 219 }
;; 219 succs { 220 327 }
;; 220 succs { 326 }
;; 221 succs { 222 325 }
;; 222 succs { 610 223 }
;; 223 succs { 224 274 }
;; 224 succs { 225 226 }
;; 225 succs { 226 }
;; 226 succs { 227 228 }
;; 227 succs { 228 }
;; 228 succs { 229 239 }
;; 229 succs { 230 240 }
;; 230 succs { 231 240 }
;; 231 succs { 610 232 }
;; 232 succs { 233 240 }
;; 233 succs { 610 234 }
;; 234 succs { 235 240 }
;; 235 succs { 236 238 }
;; 236 succs { 610 237 }
;; 237 succs { 240 }
;; 238 succs { 240 }
;; 239 succs { 240 }
;; 240 succs { 241 253 }
;; 241 succs { 242 253 }
;; 242 succs { 243 252 }
;; 243 succs { 244 252 }
;; 244 succs { 610 245 }
;; 245 succs { 246 252 }
;; 246 succs { 610 247 }
;; 247 succs { 248 252 }
;; 248 succs { 249 251 }
;; 249 succs { 610 250 }
;; 250 succs { 252 }
;; 251 succs { 252 }
;; 252 succs { 254 }
;; 253 succs { 254 }
;; 254 succs { 255 256 }
;; 255 succs { 256 }
;; 256 succs { 257 258 }
;; 257 succs { 258 }
;; 258 succs { 259 325 }
;; 259 succs { 610 260 }
;; 260 succs { 610 261 }
;; 261 succs { 262 325 }
;; 262 succs { 610 263 }
;; 263 succs { 264 267 }
;; 264 succs { 610 265 }
;; 265 succs { 266 267 }
;; 266 succs { 268 }
;; 267 succs { 268 }
;; 268 succs { 269 325 }
;; 269 succs { 610 270 }
;; 270 succs { 610 271 }
;; 271 succs { 610 272 }
;; 272 succs { 610 273 }
;; 273 succs { 610 325 }
;; 274 succs { 610 275 }
;; 275 succs { 276 325 }
;; 276 succs { 277 278 }
;; 277 succs { 278 }
;; 278 succs { 279 280 }
;; 279 succs { 280 }
;; 280 succs { 281 291 }
;; 281 succs { 282 292 }
;; 282 succs { 283 292 }
;; 283 succs { 610 284 }
;; 284 succs { 285 292 }
;; 285 succs { 610 286 }
;; 286 succs { 287 292 }
;; 287 succs { 288 290 }
;; 288 succs { 610 289 }
;; 289 succs { 292 }
;; 290 succs { 292 }
;; 291 succs { 292 }
;; 292 succs { 293 304 }
;; 293 succs { 294 305 }
;; 294 succs { 295 305 }
;; 295 succs { 296 305 }
;; 296 succs { 610 297 }
;; 297 succs { 298 305 }
;; 298 succs { 610 299 }
;; 299 succs { 300 305 }
;; 300 succs { 301 303 }
;; 301 succs { 610 302 }
;; 302 succs { 305 }
;; 303 succs { 305 }
;; 304 succs { 305 }
;; 305 succs { 306 307 }
;; 306 succs { 307 }
;; 307 succs { 308 309 }
;; 308 succs { 309 }
;; 309 succs { 310 325 }
;; 310 succs { 610 311 }
;; 311 succs { 610 312 }
;; 312 succs { 313 325 }
;; 313 succs { 610 314 }
;; 314 succs { 315 318 }
;; 315 succs { 610 316 }
;; 316 succs { 317 318 }
;; 317 succs { 319 }
;; 318 succs { 319 }
;; 319 succs { 320 325 }
;; 320 succs { 610 321 }
;; 321 succs { 610 322 }
;; 322 succs { 610 323 }
;; 323 succs { 610 324 }
;; 324 succs { 610 325 }
;; 325 succs { 326 }
;; 326 succs { 221 327 }
;; 327 succs { 330 }
;; 328 succs { 329 330 }
;; 329 succs { 330 }
;; 330 succs { 331 }
;; 331 succs { 616 332 }
;; 332 succs { 616 333 }
;; 333 succs { 334 337 }
;; 334 succs { 616 335 }
;; 335 succs { 336 337 }
;; 336 succs { 338 }
;; 337 succs { 338 }
;; 338 succs { 339 341 }
;; 339 succs { 616 340 }
;; 340 succs { 616 351 }
;; 341 succs { 616 342 }
;; 342 succs { 616 343 }
;; 343 succs { 344 347 }
;; 344 succs { 616 345 }
;; 345 succs { 346 347 }
;; 346 succs { 348 }
;; 347 succs { 348 }
;; 348 succs { 349 351 }
;; 349 succs { 616 350 }
;; 350 succs { 616 351 }
;; 351 succs { 352 604 }
;; 352 succs { 614 353 }
;; 353 succs { 354 603 }
;; 354 succs { 614 355 }
;; 355 succs { 602 }
;; 356 succs { 357 534 }
;; 357 succs { 614 358 }
;; 358 succs { 359 377 }
;; 359 succs { 614 360 }
;; 360 succs { 614 361 }
;; 361 succs { 362 601 }
;; 362 succs { 363 364 }
;; 363 succs { 614 366 }
;; 364 succs { 614 365 }
;; 365 succs { 614 366 }
;; 366 succs { 614 367 }
;; 367 succs { 368 601 }
;; 368 succs { 369 601 }
;; 369 succs { 370 601 }
;; 370 succs { 614 371 }
;; 371 succs { 372 601 }
;; 372 succs { 614 373 }
;; 373 succs { 374 601 }
;; 374 succs { 614 375 }
;; 375 succs { 614 376 }
;; 376 succs { 614 601 }
;; 377 succs { 614 378 }
;; 378 succs { 379 459 }
;; 379 succs { 614 380 }
;; 380 succs { 614 381 }
;; 381 succs { 382 398 }
;; 382 succs { 383 384 }
;; 383 succs { 614 386 }
;; 384 succs { 614 385 }
;; 385 succs { 614 386 }
;; 386 succs { 614 387 }
;; 387 succs { 388 398 }
;; 388 succs { 614 389 }
;; 389 succs { 390 393 }
;; 390 succs { 614 391 }
;; 391 succs { 392 393 }
;; 392 succs { 394 }
;; 393 succs { 394 }
;; 394 succs { 395 398 }
;; 395 succs { 614 396 }
;; 396 succs { 614 397 }
;; 397 succs { 614 398 }
;; 398 succs { 614 399 }
;; 399 succs { 400 403 }
;; 400 succs { 614 401 }
;; 401 succs { 402 403 }
;; 402 succs { 404 }
;; 403 succs { 404 }
;; 404 succs { 405 421 }
;; 405 succs { 614 406 }
;; 406 succs { 614 407 }
;; 407 succs { 408 601 }
;; 408 succs { 614 409 }
;; 409 succs { 410 601 }
;; 410 succs { 411 601 }
;; 411 succs { 412 601 }
;; 412 succs { 413 601 }
;; 413 succs { 414 601 }
;; 414 succs { 614 415 }
;; 415 succs { 416 601 }
;; 416 succs { 614 417 }
;; 417 succs { 418 601 }
;; 418 succs { 614 419 }
;; 419 succs { 614 420 }
;; 420 succs { 614 601 }
;; 421 succs { 614 422 }
;; 422 succs { 423 426 }
;; 423 succs { 614 424 }
;; 424 succs { 425 426 }
;; 425 succs { 427 }
;; 426 succs { 427 }
;; 427 succs { 428 445 }
;; 428 succs { 614 429 }
;; 429 succs { 614 430 }
;; 430 succs { 431 601 }
;; 431 succs { 432 433 }
;; 432 succs { 614 435 }
;; 433 succs { 614 434 }
;; 434 succs { 614 435 }
;; 435 succs { 614 436 }
;; 436 succs { 437 601 }
;; 437 succs { 438 601 }
;; 438 succs { 614 439 }
;; 439 succs { 440 601 }
;; 440 succs { 614 441 }
;; 441 succs { 442 601 }
;; 442 succs { 614 443 }
;; 443 succs { 614 444 }
;; 444 succs { 614 601 }
;; 445 succs { 614 446 }
;; 446 succs { 447 450 }
;; 447 succs { 614 448 }
;; 448 succs { 449 450 }
;; 449 succs { 451 }
;; 450 succs { 451 }
;; 451 succs { 452 601 }
;; 452 succs { 614 453 }
;; 453 succs { 614 454 }
;; 454 succs { 455 601 }
;; 455 succs { 456 457 }
;; 456 succs { 614 601 }
;; 457 succs { 614 458 }
;; 458 succs { 614 601 }
;; 459 succs { 614 460 }
;; 460 succs { 461 601 }
;; 461 succs { 614 462 }
;; 462 succs { 614 463 }
;; 463 succs { 464 482 }
;; 464 succs { 465 466 }
;; 465 succs { 614 468 }
;; 466 succs { 614 467 }
;; 467 succs { 614 468 }
;; 468 succs { 614 469 }
;; 469 succs { 470 482 }
;; 470 succs { 614 471 }
;; 471 succs { 472 482 }
;; 472 succs { 614 473 }
;; 473 succs { 474 477 }
;; 474 succs { 614 475 }
;; 475 succs { 476 477 }
;; 476 succs { 478 }
;; 477 succs { 478 }
;; 478 succs { 479 482 }
;; 479 succs { 614 480 }
;; 480 succs { 614 481 }
;; 481 succs { 614 482 }
;; 482 succs { 614 483 }
;; 483 succs { 484 487 }
;; 484 succs { 614 485 }
;; 485 succs { 486 487 }
;; 486 succs { 488 }
;; 487 succs { 488 }
;; 488 succs { 489 505 }
;; 489 succs { 614 490 }
;; 490 succs { 614 491 }
;; 491 succs { 492 601 }
;; 492 succs { 614 493 }
;; 493 succs { 494 601 }
;; 494 succs { 495 601 }
;; 495 succs { 496 601 }
;; 496 succs { 497 601 }
;; 497 succs { 498 601 }
;; 498 succs { 614 499 }
;; 499 succs { 500 601 }
;; 500 succs { 614 501 }
;; 501 succs { 502 601 }
;; 502 succs { 614 503 }
;; 503 succs { 614 504 }
;; 504 succs { 614 601 }
;; 505 succs { 614 506 }
;; 506 succs { 507 510 }
;; 507 succs { 614 508 }
;; 508 succs { 509 510 }
;; 509 succs { 511 }
;; 510 succs { 511 }
;; 511 succs { 512 525 }
;; 512 succs { 614 513 }
;; 513 succs { 614 514 }
;; 514 succs { 515 601 }
;; 515 succs { 614 516 }
;; 516 succs { 517 601 }
;; 517 succs { 518 601 }
;; 518 succs { 614 519 }
;; 519 succs { 520 601 }
;; 520 succs { 614 521 }
;; 521 succs { 522 601 }
;; 522 succs { 614 523 }
;; 523 succs { 614 524 }
;; 524 succs { 614 601 }
;; 525 succs { 614 526 }
;; 526 succs { 527 601 }
;; 527 succs { 614 528 }
;; 528 succs { 614 529 }
;; 529 succs { 530 601 }
;; 530 succs { 531 532 }
;; 531 succs { 614 601 }
;; 532 succs { 614 533 }
;; 533 succs { 614 601 }
;; 534 succs { 535 601 }
;; 535 succs { 536 601 }
;; 536 succs { 614 537 }
;; 537 succs { 538 601 }
;; 538 succs { 614 539 }
;; 539 succs { 614 540 }
;; 540 succs { 614 541 }
;; 541 succs { 544 542 }
;; 542 succs { 614 543 }
;; 543 succs { 544 545 }
;; 544 succs { 546 }
;; 545 succs { 546 }
;; 546 succs { 547 601 }
;; 547 succs { 614 548 }
;; 548 succs { 614 549 }
;; 549 succs { 550 578 }
;; 550 succs { 551 560 }
;; 551 succs { 552 556 }
;; 552 succs { 614 553 }
;; 553 succs { 554 560 }
;; 554 succs { 614 555 }
;; 555 succs { 614 560 }
;; 556 succs { 557 558 }
;; 557 succs { 614 560 }
;; 558 succs { 614 559 }
;; 559 succs { 614 560 }
;; 560 succs { 614 561 }
;; 561 succs { 577 }
;; 562 succs { 614 563 }
;; 563 succs { 614 564 }
;; 564 succs { 565 576 }
;; 565 succs { 614 566 }
;; 566 succs { 567 572 }
;; 567 succs { 614 568 }
;; 568 succs { 569 576 }
;; 569 succs { 614 570 }
;; 570 succs { 614 571 }
;; 571 succs { 614 576 }
;; 572 succs { 614 573 }
;; 573 succs { 574 576 }
;; 574 succs { 614 575 }
;; 575 succs { 614 576 }
;; 576 succs { 577 }
;; 577 succs { 562 601 }
;; 578 succs { 614 579 }
;; 579 succs { 580 601 }
;; 580 succs { 614 581 }
;; 581 succs { 582 584 }
;; 582 succs { 614 583 }
;; 583 succs { 614 584 }
;; 584 succs { 614 585 }
;; 585 succs { 600 }
;; 586 succs { 614 587 }
;; 587 succs { 614 588 }
;; 588 succs { 589 599 }
;; 589 succs { 614 590 }
;; 590 succs { 591 599 }
;; 591 succs { 614 592 }
;; 592 succs { 614 593 }
;; 593 succs { 594 599 }
;; 594 succs { 614 595 }
;; 595 succs { 596 599 }
;; 596 succs { 614 597 }
;; 597 succs { 614 598 }
;; 598 succs { 614 599 }
;; 599 succs { 600 }
;; 600 succs { 586 601 }
;; 601 succs { 602 }
;; 602 succs { 356 603 }
;; 603 succs { 604 }
;; 604 succs { 605 }
;; 605 succs { 1 }
;; 606 succs { 607 }
;; 607 succs { 608 }
;; 608 succs { 609 }
;; 609 succs { 616 }
;; 610 succs { 611 }
;; 611 succs { 612 }
;; 612 succs { 613 }
;; 613 succs { 616 }
;; 614 succs { 615 }
;; 615 succs { 616 }
;; 616 succs { }
void Varnew_search_imm_use (struct gimple_array * used_stmt, struct gimple * use_stmt, union tree_node * target, union tree_node * target2)
{
  union tree_node * D.252756;
  union tree_node * D.252755;
  union tree_node * D.252754;
  int D.252753;
  union tree_node * D.252752;
  union tree_node * D.252751;
  int D.252750;
  union tree_node * D.252749;
  unsigned int D.252748;
  union tree_node * D.252747;
  union tree_node * D.252746;
  int D.252745;
  union tree_node * D.252744;
  union tree_node * D.252743;
  union tree_node * D.252742;
  union tree_node * D.252741;
  union tree_node * D.252740;
  union tree_node * D.252739;
  int D.252738;
  union tree_node * D.252737;
  unsigned int D.252736;
  union tree_node * D.252735;
  union tree_node * D.252734;
  int D.252733;
  int D.252732;
  union tree_node * D.252731;
  union tree_node * D.252730;
  union tree_node * D.252729;
  const char * D.252728;
  union tree_node * D.252727;
  union tree_node * D.252726;
  union tree_node * D.252725;
  int D.252724;
  union tree_node * D.252723;
  union tree_node * D.252722;
  union tree_node * D.252721;
  union tree_node * D.252720;
  union tree_node * D.252719;
  union tree_node * D.252718;
  union tree_node * D.252717;
  int D.252716;
  union tree_node * D.252715;
  union tree_node * D.252714;
  union tree_node * D.252713;
  union tree_node * D.252712;
  union tree_node * D.252711;
  union tree_node * D.252710;
  union tree_node * D.252709;
  union tree_node * D.252708;
  int D.252707;
  union tree_node * D.252706;
  union tree_node * D.252705;
  union tree_node * D.252704;
  union tree_node * D.252703;
  union tree_node * D.252702;
  int D.252701;
  union tree_node * D.252700;
  int D.252699;
  union tree_node * D.252698;
  union tree_node * D.252697;
  int D.252696;
  union tree_node * D.252695;
  union tree_node * D.252694;
  union tree_node * D.252693;
  int D.252692;
  union tree_node * D.252691;
  union tree_node * D.252690;
  union tree_node * D.252689;
  union tree_node * D.252688;
  union tree_node * D.252687;
  union tree_node * D.252686;
  union tree_node * D.252685;
  union tree_node * D.252684;
  union tree_node * D.252683;
  int D.252682;
  union tree_node * D.252681;
  union tree_node * D.252680;
  union tree_node * D.252679;
  union tree_node * D.252678;
  union tree_node * D.252677;
  union tree_node * D.252676;
  union tree_node * D.252675;
  union tree_node * D.252674;
  int D.252673;
  union tree_node * D.252672;
  union tree_node * D.252671;
  union tree_node * D.252670;
  union tree_node * D.252669;
  union tree_node * D.252668;
  int D.252667;
  union tree_node * D.252666;
  int D.252665;
  union tree_node * D.252664;
  int D.252663;
  union tree_node * D.252662;
  union tree_node * D.252661;
  union tree_node * D.252660;
  union tree_node * D.252659;
  union tree_node * D.252658;
  union tree_node * D.252657;
  union tree_node * D.252656;
  union tree_node * D.252655;
  int D.252654;
  union tree_node * D.252653;
  union tree_node * D.252652;
  struct function_assign_array * D.252651;
  union tree_node * D.252650;
  int D.252649;
  int D.252648;
  union tree_node * D.252647;
  union tree_node * D.252646;
  int D.252645;
  int D.252644;
  union tree_node * D.252643;
  union tree_node * D.252638;
  union tree_node * D.252637;
  union tree_node * D.252636;
  int D.252635;
  union tree_node * D.252634;
  int D.252633;
  union tree_node * D.252632;
  union tree_node * D.252631;
  union tree_node * D.252630;
  union tree_node * D.252629;
  union tree_node * D.252628;
  union tree_node * D.252627;
  union tree_node * D.252626;
  union tree_node * D.252625;
  union tree_node * D.252624;
  union tree_node * D.252623;
  union tree_node * D.252622;
  int D.252621;
  union tree_node * D.252620;
  int D.252619;
  union tree_node * D.252618;
  union tree_node * D.252617;
  union tree_node * D.252616;
  union tree_node * D.252615;
  union tree_node * D.252614;
  union tree_node * D.252613;
  union tree_node * D.252612;
  union tree_node * D.252611;
  struct function_assign_array * D.252610;
  struct function_assign_array * D.252609;
  struct function_assign_array * D.252608;
  int D.252607;
  int D.252606;
  union tree_node * D.252605;
  union tree_node * D.252604;
  union tree_node * D.252603;
  union tree_node * D.252602;
  union tree_node * D.252601;
  union tree_node * D.252600;
  union tree_node * D.252595;
  union tree_node * D.252594;
  union tree_node * D.252593;
  int D.252592;
  union tree_node * D.252591;
  int D.252590;
  union tree_node * D.252589;
  union tree_node * D.252588;
  union tree_node * D.252587;
  union tree_node * D.252586;
  union tree_node * D.252585;
  union tree_node * D.252584;
  union tree_node * D.252583;
  int D.252582;
  union tree_node * D.252581;
  int D.252580;
  union tree_node * D.252579;
  union tree_node * D.252578;
  union tree_node * D.252577;
  union tree_node * D.252576;
  struct function_assign_array * D.252575;
  struct function_assign_array * D.252574;
  struct function_assign_array * D.252573;
  union tree_node * D.252572;
  union tree_node * D.252571;
  union tree_node * D.252570;
  union tree_node * D.252569;
  union tree_node * D.252568;
  union tree_node * D.252567;
  union tree_node * D.252566;
  union tree_node * D.252565;
  union tree_node * D.252564;
  union tree_node * D.252563;
  union tree_node * D.252562;
  union tree_node * D.252561;
  union tree_node * D.252560;
  union tree_node * D.252559;
  union tree_node * D.252558;
  union tree_node * D.252557;
  union tree_node * D.252556;
  union tree_node * D.252555;
  union tree_node * D.252554;
  union tree_node * D.252553;
  union tree_node * D.252552;
  union tree_node * D.252551;
  union tree_node * D.252550;
  union tree_node * D.252549;
  union tree_node * D.252548;
  union tree_node * D.252547;
  union tree_node * D.252546;
  union tree_node * D.252545;
  union tree_node * D.252544;
  union tree_node * D.252543;
  int i;
  int size;
  int i;
  int size;
  const char * name;
  struct gimple * def_stmt;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * second;
  struct gimple * nowstmt;
  int i;
  struct function_assign_array assign_array;
  struct gimple * def_stmt2;
  union tree_node * treecheck2;
  struct gimple * def_stmt2;
  struct gimple * def_stmt;
  union tree_node * treecheck;
  union tree_node * filed_from2;
  union tree_node * filed_from;
  struct gimple * def_stmt2;
  union tree_node * treecheck2;
  struct gimple * def_stmt2;
  struct gimple * def_stmt;
  union tree_node * treecheck;
  union tree_node * filed_from2;
  union tree_node * filed_from;
  int i;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second2;
  union tree_node * second;
  union tree_node * getfiledtree;
  struct gimple * def_stmt2;
  union tree_node * getfiledtree;
  union tree_node * treecheck2;
  struct gimple * def_stmt2;
  struct gimple * def_stmt;
  union tree_node * treecheck;
  union tree_node * filed_from2;
  union tree_node * filed_from;
  union tree_node * getfiledtree;
  struct gimple * def_stmt2;
  union tree_node * getfiledtree;
  union tree_node * treecheck2;
  struct gimple * def_stmt2;
  struct gimple * def_stmt;
  union tree_node * treecheck;
  union tree_node * filed_from2;
  union tree_node * filed_from;
  int i;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second2;
  union tree_node * second;
  union tree_node * second;
  union tree_node * second;
  union tree_node * getFunctionAssignVAR;
  bool retval.1191;
  bool retval.1187;
  bool retval.1185;
  bool retval.1183;
  bool retval.1181;
  bool retval.1180;
  bool retval.1179;
  bool retval.1176;
  bool retval.1172;
  bool retval.1170;
  bool retval.1168;
  bool retval.1167;
  bool retval.1166;
  bool retval.1165;
  bool iftmp.1164;
  bool retval.1163;
  bool retval.1162;
  bool retval.1161;
  bool retval.1160;
  bool retval.1159;
  bool retval.1158;
  bool retval.1157;
  bool retval.1156;
  bool retval.1155;
  bool retval.1154;
  bool retval.1153;
  bool iftmp.1152;
  bool retval.1151;
  bool retval.1150;
  bool retval.1149;
  bool retval.1148;
  bool retval.1147;
  bool iftmp.1146;
  bool retval.1145;
  bool iftmp.1144;
  bool retval.1143;
  bool retval.1142;
  bool retval.1141;
  bool retval.1140;
  bool retval.1139;
  bool retval.1138;
  bool retval.1137;
  bool retval.1136;
  bool iftmp.1135;
  bool retval.1134;
  bool retval.1133;
  bool retval.1132;
  bool retval.1131;
  bool retval.1130;
  bool retval.1129;
  bool iftmp.1128;
  bool retval.1127;
  bool retval.1126;
  bool retval.1125;
  bool retval.1124;
  bool retval.1123;
  bool iftmp.1122;
  bool retval.1121;
  bool iftmp.1120;
  bool retval.1119;
  bool retval.1118;
  bool retval.1117;
  bool retval.1116;
  bool retval.1115;
  bool retval.1114;
  bool retval.1113;
  bool retval.1112;
  bool retval.1111;
  bool retval.1110;
  bool retval.1109;
  bool retval.1108;
  struct function_assign_array D.196202;
  bool retval.1105;
  bool iftmp.1103;
  bool retval.1102;
  bool iftmp.1101;
  bool retval.1100;
  bool retval.1099;
  bool iftmp.1098;
  bool retval.1097;
  bool retval.1096;
  bool retval.1095;
  bool retval.1094;
  bool retval.1093;
  bool retval.1092;
  bool retval.1091;
  bool retval.1090;
  bool retval.1089;
  bool iftmp.1088;
  bool retval.1087;
  bool retval.1086;
  bool retval.1085;
  bool retval.1084;
  bool retval.1083;
  bool retval.1082;
  bool retval.1081;
  bool retval.1080;
  bool retval.1079;
  bool retval.1078;
  bool retval.1076;
  bool retval.1073;
  bool iftmp.1070;
  bool retval.1069;
  bool retval.1068;
  bool retval.1067;
  bool retval.1066;
  bool retval.1065;
  bool retval.1064;
  bool retval.1063;
  bool iftmp.1062;
  bool retval.1061;
  bool retval.1060;
  bool retval.1059;
  bool retval.1058;
  bool retval.1057;
  bool iftmp.1056;
  bool retval.1055;
  bool retval.1054;
  bool retval.1053;
  bool retval.1052;
  bool retval.1051;
  bool retval.1050;
  bool retval.1048;
  bool retval.1045;
  bool retval.1042;
  bool retval.1041;
  bool retval.1040;
  bool retval.1039;
  bool retval.1038;
  bool retval.1037;
  bool retval.1036;
  bool retval.1035;
  bool iftmp.1034;
  bool retval.1033;
  bool iftmp.1032;
  bool retval.1031;
  bool retval.1030;
  bool iftmp.1029;
  bool retval.1028;

  <bb 2> :
  D.252543 = gimple_assign_lhs (use_stmt);
  _1 = D.252543;
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.252544 = gimple_assign_lhs (use_stmt);
  _2 = D.252544;
  _3 = _2->base.code;
  if (_3 == 36)
    goto <bb 14>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.252545 = gimple_assign_rhs1 (use_stmt);
  _4 = D.252545;
  if (_4 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.252546 = gimple_assign_rhs1 (use_stmt);
  _5 = D.252546;
  _6 = _5->base.code;
  if (_6 == 36)
    goto <bb 14>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  D.252547 = gimple_assign_rhs1 (use_stmt);
  _7 = D.252547;
  if (_7 != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  D.252548 = gimple_assign_rhs1 (use_stmt);
  _8 = D.252548;
  _9 = _8->base.code;
  if (_9 == 49)
    goto <bb 14>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  D.252549 = gimple_assign_lhs (use_stmt);
  _10 = D.252549;
  if (_10 != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.252550 = gimple_assign_lhs (use_stmt);
  _11 = D.252550;
  _12 = _11->base.code;
  if (_12 == 49)
    goto <bb 14>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  D.252551 = gimple_assign_rhs1 (use_stmt);
  _13 = D.252551;
  if (_13 != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  D.252552 = gimple_assign_rhs1 (use_stmt);
  _14 = D.252552;
  _15 = _14->base.code;
  if (_15 == 47)
    goto <bb 14>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  D.252553 = gimple_assign_lhs (use_stmt);
  _16 = D.252553;
  if (_16 != 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 13> :
  D.252554 = gimple_assign_lhs (use_stmt);
  _17 = D.252554;
  _18 = _17->base.code;
  if (_18 == 47)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  iftmp.1029 = 1;
  goto <bb 16>; [INV]

  <bb 15> :
  iftmp.1029 = 0;

  <bb 16> :
  retval.1028 = iftmp.1029;
  if (retval.1028 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 605>; [INV]

  <bb 17> :
  _19 = gimple_code (use_stmt);
  retval.1030 = _19 == 6;
  if (retval.1030 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 331>; [INV]

  <bb 18> :
  D.252555 = gimple_assign_lhs (use_stmt);

  <bb 19> :
  _20 = D.252555;
  if (_20 != 0B)
    goto <bb 20>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 20> :
  D.252556 = gimple_assign_lhs (use_stmt);

  <bb 21> :
  _21 = D.252556;
  _22 = _21->base.code;
  if (_22 == 36)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  iftmp.1032 = 1;
  goto <bb 24>; [INV]

  <bb 23> :
  iftmp.1032 = 0;

  <bb 24> :
  retval.1031 = iftmp.1032;
  if (retval.1031 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 25> :
  D.252557 = gimple_assign_lhs (use_stmt);

  <bb 26> :
  _23 = D.252557;
  getFunctionAssignVAR = _23;

  <bb 27> :
  D.252558 = gimple_assign_rhs1 (use_stmt);

  <bb 28> :
  _24 = D.252558;
  if (_24 != 0B)
    goto <bb 29>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 29> :
  D.252559 = gimple_assign_rhs1 (use_stmt);

  <bb 30> :
  _25 = D.252559;
  _26 = _25->base.code;
  if (_26 == 36)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  iftmp.1034 = 1;
  goto <bb 33>; [INV]

  <bb 32> :
  iftmp.1034 = 0;

  <bb 33> :
  retval.1033 = iftmp.1034;
  if (retval.1033 != 0)
    goto <bb 34>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 34> :
  D.252560 = gimple_assign_rhs1 (use_stmt);

  <bb 35> :
  _27 = D.252560;
  getFunctionAssignVAR = _27;

  <bb 36> :
  D.252561 = gimple_assign_rhs1 (use_stmt);

  <bb 37> :
  _28 = D.252561;
  retval.1035 = _28 != 0B;
  if (retval.1035 != 0)
    goto <bb 38>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 38> :
  D.252562 = gimple_assign_rhs1 (use_stmt);

  <bb 39> :
  _29 = D.252562;
  _30 = _29->base.code;
  retval.1036 = _30 == 49;
  if (retval.1036 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 40> :
  D.252563 = gimple_assign_rhs1 (use_stmt);

  <bb 41> :
  _31 = D.252563;
  second = _31->exp.operands[0];
  if (second != 0B)
    goto <bb 42>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 42> :
  getFunctionAssignVAR = second;

  <bb 43> :
  D.252564 = gimple_assign_lhs (use_stmt);

  <bb 44> :
  _32 = D.252564;
  retval.1037 = _32 != 0B;
  if (retval.1037 != 0)
    goto <bb 45>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 45> :
  D.252565 = gimple_assign_lhs (use_stmt);

  <bb 46> :
  _33 = D.252565;
  _34 = _33->base.code;
  retval.1038 = _34 == 49;
  if (retval.1038 != 0)
    goto <bb 47>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 47> :
  D.252566 = gimple_assign_lhs (use_stmt);

  <bb 48> :
  _35 = D.252566;
  second = _35->exp.operands[0];
  if (second != 0B)
    goto <bb 49>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 49> :
  getFunctionAssignVAR = second;

  <bb 50> :
  D.252567 = gimple_assign_rhs1 (use_stmt);

  <bb 51> :
  _36 = D.252567;
  retval.1039 = _36 != 0B;
  if (retval.1039 != 0)
    goto <bb 52>; [INV]
  else
    goto <bb 179>; [INV]

  <bb 52> :
  D.252568 = gimple_assign_rhs1 (use_stmt);

  <bb 53> :
  _37 = D.252568;
  _38 = _37->base.code;
  retval.1040 = _38 == 47;
  if (retval.1040 != 0)
    goto <bb 54>; [INV]
  else
    goto <bb 179>; [INV]

  <bb 54> :
  D.252569 = gimple_assign_rhs1 (use_stmt);

  <bb 55> :
  _39 = D.252569;
  second = _39->exp.operands[0];
  D.252570 = gimple_assign_rhs1 (use_stmt);

  <bb 56> :
  _40 = D.252570;
  _41 = _40->exp.operands[1];
  second2 = _41;
  if (second != 0B)
    goto <bb 57>; [INV]
  else
    goto <bb 178>; [INV]

  <bb 57> :
  _42 = second->base.code;
  if (_42 == 165)
    goto <bb 58>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 58> :
  three = second->exp.operands[0];
  if (three != 0B)
    goto <bb 59>; [INV]
  else
    goto <bb 69>; [INV]

  <bb 59> :
  _43 = three->base.code;
  if (_43 == 153)
    goto <bb 60>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 60> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1041 = is_gimple_assign (def_stmt);
  if (retval.1041 != 0)
    goto <bb 61>; [INV]
  else
    goto <bb 69>; [INV]

  <bb 61> :
  D.252571 = gimple_assign_rhs1 (def_stmt);

  <bb 62> :
  _44 = D.252571;
  _45 = _44->base.code;
  retval.1042 = _45 == 36;
  if (retval.1042 != 0)
    goto <bb 63>; [INV]
  else
    goto <bb 69>; [INV]

  <bb 63> :
  D.252572 = gimple_assign_rhs1 (def_stmt);

  <bb 64> :
  _46 = D.252572;
  getFunctionAssignVAR = _46;
  goto <bb 69>; [INV]

  <bb 65> :
  _47 = three->base.code;
  if (_47 == 36)
    goto <bb 66>; [INV]
  else
    goto <bb 69>; [INV]

  <bb 66> :
  getFunctionAssignVAR = three;
  goto <bb 69>; [INV]

  <bb 67> :
  _48 = second->base.code;
  if (_48 == 36)
    goto <bb 68>; [INV]
  else
    goto <bb 69>; [INV]

  <bb 68> :
  getFunctionAssignVAR = second;

  <bb 69> :
  second2.1043_49 = second2;
  if (second2.1043_49 != 0B)
    goto <bb 70>; [INV]
  else
    goto <bb 178>; [INV]

  <bb 70> :
  second2.1044_50 = second2;
  _51 = second2.1044_50->base.code;
  if (_51 == 35)
    goto <bb 71>; [INV]
  else
    goto <bb 178>; [INV]

  <bb 71> :
  _52 = second->base.code;
  if (_52 == 36)
    goto <bb 72>; [INV]
  else
    goto <bb 73>; [INV]

  <bb 72> :
  getFunctionAssignVAR = second;

  <bb 73> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.1046_53 = function_assign_collect;
  D.252573 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1046_53, &second2);

  <bb 74> :
  _54 = D.252573;
  retval.1045 = _54 != 0B;
  if (retval.1045 != 0)
    goto <bb 75>; [INV]
  else
    goto <bb 177>; [INV]

  <bb 75> :
  function_assign_collect.1047_55 = function_assign_collect;
  D.252574 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1047_55, &second2);

  <bb 76> :
  _56 = D.252574;
  function_assign_array::operator= (&assign_array, _56);

  <bb 77> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 78> :
  function_assign_collect.1049_57 = function_assign_collect;
  D.252575 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1049_57, &second2);

  <bb 79> :
  _58 = D.252575;
  retval.1048 = _58 != 0B;
  if (retval.1048 != 0)
    goto <bb 80>; [INV]
  else
    goto <bb 177>; [INV]

  <bb 80> :
  _59 = second->base.code;
  if (_59 != 36)
    goto <bb 81>; [INV]
  else
    goto <bb 177>; [INV]

  <bb 81> :
  i = 0;
  goto <bb 176>; [INV]

  <bb 82> :
  _60 = (long unsigned int) i;
  _61 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _60);
  _62 = _61->stmt;
  _63 = gimple_code (_62);
  retval.1050 = _63 == 6;
  if (retval.1050 != 0)
    goto <bb 83>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 83> :
  _64 = (long unsigned int) i;
  _65 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _64);
  _66 = _65->stmt;
  D.252576 = gimple_assign_rhs1 (_66);

  <bb 84> :
  _67 = D.252576;
  _68 = _67->base.code;
  retval.1051 = _68 == 153;
  if (retval.1051 != 0)
    goto <bb 85>; [INV]
  else
    goto <bb 129>; [INV]

  <bb 85> :
  filed_from = second->exp.operands[0];
  _69 = (long unsigned int) i;
  _70 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _69);
  _71 = _70->assign_tree;
  filed_from2 = _71->exp.operands[0];
  _72 = filed_from2->base.code;
  if (_72 == 165)
    goto <bb 86>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 86> :
  filed_from2 = filed_from2->exp.operands[0];

  <bb 87> :
  _73 = filed_from->base.code;
  if (_73 == 165)
    goto <bb 88>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 88> :
  filed_from = filed_from->exp.operands[0];

  <bb 89> :
  _74 = filed_from2->base.code;
  if (_74 == 153)
    goto <bb 90>; [INV]
  else
    goto <bb 97>; [INV]

  <bb 90> :
  def_stmt = filed_from2->ssa_name.def_stmt;
  getfiledtree = filed_from2;
  _75 = filed_from->base.code;
  if (_75 != 36)
    goto <bb 91>; [INV]
  else
    goto <bb 98>; [INV]

  <bb 91> :
  D.252577 = gimple_assign_rhs1 (def_stmt);

  <bb 92> :
  getfiledtree = D.252577;
  if (def_stmt != 0B)
    goto <bb 93>; [INV]
  else
    goto <bb 98>; [INV]

  <bb 93> :
  _76 = gimple_code (def_stmt);
  retval.1052 = _76 != 20;
  if (retval.1052 != 0)
    goto <bb 94>; [INV]
  else
    goto <bb 98>; [INV]

  <bb 94> :
  if (getfiledtree != 0B)
    goto <bb 95>; [INV]
  else
    goto <bb 98>; [INV]

  <bb 95> :
  _77 = getfiledtree->base.code;
  if (_77 != 0)
    goto <bb 96>; [INV]
  else
    goto <bb 98>; [INV]

  <bb 96> :
  treecheck = getfiledtree;
  goto <bb 98>; [INV]

  <bb 97> :
  treecheck = filed_from2;

  <bb 98> :
  _78 = second->base.code;
  if (_78 != 36)
    goto <bb 99>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 99> :
  _79 = filed_from->base.code;
  if (_79 != 26)
    goto <bb 100>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 100> :
  def_stmt2 = filed_from->ssa_name.def_stmt;
  getfiledtree = filed_from;
  _80 = filed_from->base.code;
  if (_80 != 36)
    goto <bb 101>; [INV]
  else
    goto <bb 107>; [INV]

  <bb 101> :
  D.252578 = gimple_assign_rhs1 (def_stmt2);

  <bb 102> :
  getfiledtree = D.252578;
  if (def_stmt2 != 0B)
    goto <bb 103>; [INV]
  else
    goto <bb 107>; [INV]

  <bb 103> :
  _81 = gimple_code (def_stmt2);
  retval.1053 = _81 != 20;
  if (retval.1053 != 0)
    goto <bb 104>; [INV]
  else
    goto <bb 107>; [INV]

  <bb 104> :
  if (getfiledtree != 0B)
    goto <bb 105>; [INV]
  else
    goto <bb 107>; [INV]

  <bb 105> :
  _82 = getfiledtree->base.code;
  if (_82 != 0)
    goto <bb 106>; [INV]
  else
    goto <bb 107>; [INV]

  <bb 106> :
  treecheck2 = getfiledtree;

  <bb 107> :
  goto <bb 109>; [INV]

  <bb 108> :
  treecheck2 = filed_from;

  <bb 109> :
  if (treecheck == 0B)
    goto <bb 110>; [INV]
  else
    goto <bb 111>; [INV]

  <bb 110> :
  treecheck = filed_from2;

  <bb 111> :
  if (treecheck2 == 0B)
    goto <bb 112>; [INV]
  else
    goto <bb 113>; [INV]

  <bb 112> :
  treecheck2 = filed_from;

  <bb 113> :
  if (treecheck2 == treecheck)
    goto <bb 114>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 114> :
  _83 = (long unsigned int) i;
  _84 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _83);
  _85 = _84->stmt;
  D.252579 = gimple_assign_rhs1 (_85);

  <bb 115> :
  _86 = D.252579;
  D.252580 = check_stmtStack (_86);

  <bb 116> :
  _87 = D.252580;
  retval.1054 = _87 == 0;
  if (retval.1054 != 0)
    goto <bb 117>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 117> :
  _88 = (long unsigned int) i;
  _89 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _88);
  _90 = _89->stmt;
  D.252581 = gimple_assign_rhs1 (_90);

  <bb 118> :
  _91 = D.252581;
  if (target2 != _91)
    goto <bb 119>; [INV]
  else
    goto <bb 122>; [INV]

  <bb 119> :
  _92 = (long unsigned int) i;
  _93 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _92);
  _94 = _93->stmt;
  D.252582 = check_stmtStack2 (_94);

  <bb 120> :
  _95 = D.252582;
  if (_95 == 0)
    goto <bb 121>; [INV]
  else
    goto <bb 122>; [INV]

  <bb 121> :
  iftmp.1056 = 1;
  goto <bb 123>; [INV]

  <bb 122> :
  iftmp.1056 = 0;

  <bb 123> :
  retval.1055 = iftmp.1056;
  if (retval.1055 != 0)
    goto <bb 124>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 124> :
  _96 = (long unsigned int) i;
  _97 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _96);
  _98 = _97->stmt;
  D.252583 = gimple_assign_rhs1 (_98);

  <bb 125> :
  _99 = D.252583;
  _100 = (long unsigned int) i;
  _101 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _100);
  _102 = _101->stmt;
  set_gimple_array (used_stmt, _102, _99, target, 0B);

  <bb 126> :
  _103 = (long unsigned int) i;
  _104 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _103);
  _105 = _104->stmt;
  D.252584 = gimple_assign_rhs1 (_105);

  <bb 127> :
  _106 = D.252584;
  _107 = (long unsigned int) i;
  _108 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _107);
  _109 = _108->stmt;
  D.252585 = gimple_assign_rhs1 (_109);

  <bb 128> :
  _110 = D.252585;
  new_search_imm_use (used_stmt, _110, _106);
  goto <bb 175>; [INV]

  <bb 129> :
  _111 = (long unsigned int) i;
  _112 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _111);
  _113 = _112->stmt;
  D.252586 = gimple_assign_lhs (_113);

  <bb 130> :
  _114 = D.252586;
  _115 = _114->base.code;
  retval.1057 = _115 == 153;
  if (retval.1057 != 0)
    goto <bb 131>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 131> :
  filed_from = second->exp.operands[0];
  _116 = (long unsigned int) i;
  _117 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _116);
  _118 = _117->assign_tree;
  filed_from2 = _118->exp.operands[0];
  _119 = filed_from2->base.code;
  if (_119 == 165)
    goto <bb 132>; [INV]
  else
    goto <bb 133>; [INV]

  <bb 132> :
  filed_from2 = filed_from2->exp.operands[0];

  <bb 133> :
  _120 = filed_from->base.code;
  if (_120 == 165)
    goto <bb 134>; [INV]
  else
    goto <bb 135>; [INV]

  <bb 134> :
  filed_from = filed_from->exp.operands[0];

  <bb 135> :
  _121 = filed_from2->base.code;
  if (_121 == 153)
    goto <bb 136>; [INV]
  else
    goto <bb 143>; [INV]

  <bb 136> :
  def_stmt = filed_from2->ssa_name.def_stmt;
  getfiledtree = filed_from2;
  _122 = filed_from->base.code;
  if (_122 != 36)
    goto <bb 137>; [INV]
  else
    goto <bb 144>; [INV]

  <bb 137> :
  D.252587 = gimple_assign_rhs1 (def_stmt);

  <bb 138> :
  getfiledtree = D.252587;
  if (def_stmt != 0B)
    goto <bb 139>; [INV]
  else
    goto <bb 144>; [INV]

  <bb 139> :
  _123 = gimple_code (def_stmt);
  retval.1058 = _123 != 20;
  if (retval.1058 != 0)
    goto <bb 140>; [INV]
  else
    goto <bb 144>; [INV]

  <bb 140> :
  if (getfiledtree != 0B)
    goto <bb 141>; [INV]
  else
    goto <bb 144>; [INV]

  <bb 141> :
  _124 = getfiledtree->base.code;
  if (_124 != 0)
    goto <bb 142>; [INV]
  else
    goto <bb 144>; [INV]

  <bb 142> :
  treecheck = getfiledtree;
  goto <bb 144>; [INV]

  <bb 143> :
  treecheck = filed_from2;

  <bb 144> :
  _125 = second->base.code;
  if (_125 != 36)
    goto <bb 145>; [INV]
  else
    goto <bb 154>; [INV]

  <bb 145> :
  _126 = filed_from->base.code;
  if (_126 != 26)
    goto <bb 146>; [INV]
  else
    goto <bb 154>; [INV]

  <bb 146> :
  def_stmt2 = filed_from->ssa_name.def_stmt;
  getfiledtree = filed_from;
  _127 = filed_from->base.code;
  if (_127 != 36)
    goto <bb 147>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 147> :
  D.252588 = gimple_assign_rhs1 (def_stmt2);

  <bb 148> :
  getfiledtree = D.252588;
  if (def_stmt2 != 0B)
    goto <bb 149>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 149> :
  _128 = gimple_code (def_stmt2);
  retval.1059 = _128 != 20;
  if (retval.1059 != 0)
    goto <bb 150>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 150> :
  if (getfiledtree != 0B)
    goto <bb 151>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 151> :
  _129 = getfiledtree->base.code;
  if (_129 != 0)
    goto <bb 152>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 152> :
  treecheck2 = getfiledtree;

  <bb 153> :
  goto <bb 155>; [INV]

  <bb 154> :
  treecheck2 = filed_from;

  <bb 155> :
  if (treecheck == 0B)
    goto <bb 156>; [INV]
  else
    goto <bb 157>; [INV]

  <bb 156> :
  treecheck = filed_from2;

  <bb 157> :
  if (treecheck2 == 0B)
    goto <bb 158>; [INV]
  else
    goto <bb 159>; [INV]

  <bb 158> :
  treecheck2 = filed_from;

  <bb 159> :
  if (treecheck2 == treecheck)
    goto <bb 160>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 160> :
  _130 = (long unsigned int) i;
  _131 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _130);
  _132 = _131->stmt;
  D.252589 = gimple_assign_lhs (_132);

  <bb 161> :
  _133 = D.252589;
  D.252590 = check_stmtStack (_133);

  <bb 162> :
  _134 = D.252590;
  retval.1060 = _134 == 0;
  if (retval.1060 != 0)
    goto <bb 163>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 163> :
  _135 = (long unsigned int) i;
  _136 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _135);
  _137 = _136->stmt;
  D.252591 = gimple_assign_lhs (_137);

  <bb 164> :
  _138 = D.252591;
  if (target2 != _138)
    goto <bb 165>; [INV]
  else
    goto <bb 168>; [INV]

  <bb 165> :
  _139 = (long unsigned int) i;
  _140 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _139);
  _141 = _140->stmt;
  D.252592 = check_stmtStack2 (_141);

  <bb 166> :
  _142 = D.252592;
  if (_142 == 0)
    goto <bb 167>; [INV]
  else
    goto <bb 168>; [INV]

  <bb 167> :
  iftmp.1062 = 1;
  goto <bb 169>; [INV]

  <bb 168> :
  iftmp.1062 = 0;

  <bb 169> :
  retval.1061 = iftmp.1062;
  if (retval.1061 != 0)
    goto <bb 170>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 170> :
  _143 = (long unsigned int) i;
  _144 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _143);
  _145 = _144->stmt;
  D.252593 = gimple_assign_rhs1 (_145);

  <bb 171> :
  _146 = D.252593;
  _147 = (long unsigned int) i;
  _148 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _147);
  _149 = _148->stmt;
  set_gimple_array (used_stmt, _149, _146, target, 0B);

  <bb 172> :
  _150 = (long unsigned int) i;
  _151 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _150);
  _152 = _151->stmt;
  D.252594 = gimple_assign_lhs (_152);

  <bb 173> :
  _153 = D.252594;
  _154 = (long unsigned int) i;
  _155 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _154);
  _156 = _155->stmt;
  D.252595 = gimple_assign_lhs (_156);

  <bb 174> :
  _157 = D.252595;
  new_search_imm_use (used_stmt, _157, _153);

  <bb 175> :
  i = i + 1;

  <bb 176> :
  _158 = (long unsigned int) i;
  _159 = std::vector<assign_type>::size (&assign_array.assign_type_array);
  retval.1063 = _158 < _159;
  if (retval.1063 != 0)
    goto <bb 82>; [INV]
  else
    goto <bb 177>; [INV]

  <bb 177> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};

  <bb 178> :
  second2 = {CLOBBER};

  <bb 179> :
  D.252600 = gimple_assign_lhs (use_stmt);

  <bb 180> :
  _160 = D.252600;
  retval.1064 = _160 != 0B;
  if (retval.1064 != 0)
    goto <bb 181>; [INV]
  else
    goto <bb 331>; [INV]

  <bb 181> :
  D.252601 = gimple_assign_lhs (use_stmt);

  <bb 182> :
  _161 = D.252601;
  _162 = _161->base.code;
  retval.1065 = _162 == 47;
  if (retval.1065 != 0)
    goto <bb 183>; [INV]
  else
    goto <bb 331>; [INV]

  <bb 183> :
  D.252602 = gimple_assign_lhs (use_stmt);

  <bb 184> :
  _163 = D.252602;
  second = _163->exp.operands[0];
  D.252603 = gimple_assign_lhs (use_stmt);

  <bb 185> :
  _164 = D.252603;
  _165 = _164->exp.operands[1];
  second2 = _165;
  if (second != 0B)
    goto <bb 186>; [INV]
  else
    goto <bb 328>; [INV]

  <bb 186> :
  three = second->exp.operands[0];
  _166 = second->base.code;
  if (_166 == 165)
    goto <bb 187>; [INV]
  else
    goto <bb 206>; [INV]

  <bb 187> :
  if (three != 0B)
    goto <bb 188>; [INV]
  else
    goto <bb 206>; [INV]

  <bb 188> :
  _167 = three->base.code;
  if (_167 == 153)
    goto <bb 189>; [INV]
  else
    goto <bb 204>; [INV]

  <bb 189> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1066 = is_gimple_assign (def_stmt);
  if (retval.1066 != 0)
    goto <bb 190>; [INV]
  else
    goto <bb 194>; [INV]

  <bb 190> :
  D.252604 = gimple_assign_rhs1 (def_stmt);

  <bb 191> :
  _168 = D.252604;
  _169 = _168->base.code;
  retval.1067 = _169 == 36;
  if (retval.1067 != 0)
    goto <bb 192>; [INV]
  else
    goto <bb 194>; [INV]

  <bb 192> :
  D.252605 = gimple_assign_rhs1 (def_stmt);

  <bb 193> :
  _170 = D.252605;
  getFunctionAssignVAR = _170;

  <bb 194> :
  D.252606 = check_stmtStack (three);

  <bb 195> :
  _171 = D.252606;
  retval.1068 = _171 == 0;
  if (retval.1068 != 0)
    goto <bb 196>; [INV]
  else
    goto <bb 206>; [INV]

  <bb 196> :
  if (three != target2)
    goto <bb 197>; [INV]
  else
    goto <bb 200>; [INV]

  <bb 197> :
  D.252607 = check_stmtStack2 (use_stmt);

  <bb 198> :
  _172 = D.252607;
  if (_172 == 0)
    goto <bb 199>; [INV]
  else
    goto <bb 200>; [INV]

  <bb 199> :
  iftmp.1070 = 1;
  goto <bb 201>; [INV]

  <bb 200> :
  iftmp.1070 = 0;

  <bb 201> :
  retval.1069 = iftmp.1070;
  if (retval.1069 != 0)
    goto <bb 202>; [INV]
  else
    goto <bb 206>; [INV]

  <bb 202> :
  set_gimple_array (used_stmt, use_stmt, three, target, 0B);

  <bb 203> :
  new_search_imm_use (used_stmt, three, three);
  goto <bb 206>; [INV]

  <bb 204> :
  _173 = three->base.code;
  if (_173 == 36)
    goto <bb 205>; [INV]
  else
    goto <bb 206>; [INV]

  <bb 205> :
  getFunctionAssignVAR = three;

  <bb 206> :
  second2.1071_174 = second2;
  if (second2.1071_174 != 0B)
    goto <bb 207>; [INV]
  else
    goto <bb 330>; [INV]

  <bb 207> :
  second2.1072_175 = second2;
  _176 = second2.1072_175->base.code;
  if (_176 == 35)
    goto <bb 208>; [INV]
  else
    goto <bb 330>; [INV]

  <bb 208> :
  _177 = second->base.code;
  if (_177 == 36)
    goto <bb 209>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 209> :
  getFunctionAssignVAR = second;

  <bb 210> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.1074_178 = function_assign_collect;
  D.252608 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1074_178, &second2);

  <bb 211> :
  _179 = D.252608;
  retval.1073 = _179 != 0B;
  if (retval.1073 != 0)
    goto <bb 212>; [INV]
  else
    goto <bb 327>; [INV]

  <bb 212> :
  function_assign_collect.1075_180 = function_assign_collect;
  D.252609 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1075_180, &second2);

  <bb 213> :
  _181 = D.252609;
  function_assign_array::operator= (&assign_array, _181);

  <bb 214> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 215> :
  function_assign_collect.1077_182 = function_assign_collect;
  D.252610 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1077_182, &second2);

  <bb 216> :
  _183 = D.252610;
  retval.1076 = _183 != 0B;
  if (retval.1076 != 0)
    goto <bb 217>; [INV]
  else
    goto <bb 327>; [INV]

  <bb 217> :
  _184 = second->base.code;
  if (_184 == 36)
    goto <bb 218>; [INV]
  else
    goto <bb 219>; [INV]

  <bb 218> :
  getFunctionAssignVAR = second;

  <bb 219> :
  _185 = second->base.code;
  if (_185 != 36)
    goto <bb 220>; [INV]
  else
    goto <bb 327>; [INV]

  <bb 220> :
  i = 0;
  goto <bb 326>; [INV]

  <bb 221> :
  _186 = (long unsigned int) i;
  _187 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _186);
  _188 = _187->stmt;
  _189 = gimple_code (_188);
  retval.1078 = _189 == 6;
  if (retval.1078 != 0)
    goto <bb 222>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 222> :
  _190 = (long unsigned int) i;
  _191 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _190);
  _192 = _191->stmt;
  D.252611 = gimple_assign_rhs1 (_192);

  <bb 223> :
  _193 = D.252611;
  _194 = _193->base.code;
  retval.1079 = _194 == 153;
  if (retval.1079 != 0)
    goto <bb 224>; [INV]
  else
    goto <bb 274>; [INV]

  <bb 224> :
  filed_from = second->exp.operands[0];
  _195 = (long unsigned int) i;
  _196 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _195);
  _197 = _196->assign_tree;
  filed_from2 = _197->exp.operands[0];
  _198 = filed_from2->base.code;
  if (_198 == 165)
    goto <bb 225>; [INV]
  else
    goto <bb 226>; [INV]

  <bb 225> :
  filed_from2 = filed_from2->exp.operands[0];

  <bb 226> :
  _199 = filed_from->base.code;
  if (_199 == 165)
    goto <bb 227>; [INV]
  else
    goto <bb 228>; [INV]

  <bb 227> :
  filed_from = filed_from->exp.operands[0];

  <bb 228> :
  _200 = filed_from2->base.code;
  if (_200 == 153)
    goto <bb 229>; [INV]
  else
    goto <bb 239>; [INV]

  <bb 229> :
  def_stmt = filed_from2->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 230>; [INV]
  else
    goto <bb 240>; [INV]

  <bb 230> :
  _201 = gimple_code (def_stmt);
  retval.1080 = _201 != 20;
  if (retval.1080 != 0)
    goto <bb 231>; [INV]
  else
    goto <bb 240>; [INV]

  <bb 231> :
  D.252612 = gimple_assign_rhs1 (def_stmt);

  <bb 232> :
  _202 = D.252612;
  retval.1081 = _202 != 0B;
  if (retval.1081 != 0)
    goto <bb 233>; [INV]
  else
    goto <bb 240>; [INV]

  <bb 233> :
  D.252613 = gimple_assign_rhs1 (def_stmt);

  <bb 234> :
  _203 = D.252613;
  _204 = _203->base.code;
  retval.1082 = _204 != 0;
  if (retval.1082 != 0)
    goto <bb 235>; [INV]
  else
    goto <bb 240>; [INV]

  <bb 235> :
  if (def_stmt != 0B)
    goto <bb 236>; [INV]
  else
    goto <bb 238>; [INV]

  <bb 236> :
  D.252614 = gimple_assign_rhs1 (def_stmt);

  <bb 237> :
  treecheck = D.252614;
  goto <bb 240>; [INV]

  <bb 238> :
  treecheck = filed_from2;
  goto <bb 240>; [INV]

  <bb 239> :
  treecheck = filed_from2;

  <bb 240> :
  _205 = second->base.code;
  if (_205 != 36)
    goto <bb 241>; [INV]
  else
    goto <bb 253>; [INV]

  <bb 241> :
  _206 = filed_from->base.code;
  if (_206 != 26)
    goto <bb 242>; [INV]
  else
    goto <bb 253>; [INV]

  <bb 242> :
  def_stmt2 = filed_from->ssa_name.def_stmt;
  if (def_stmt2 != 0B)
    goto <bb 243>; [INV]
  else
    goto <bb 252>; [INV]

  <bb 243> :
  _207 = gimple_code (def_stmt2);
  retval.1083 = _207 != 20;
  if (retval.1083 != 0)
    goto <bb 244>; [INV]
  else
    goto <bb 252>; [INV]

  <bb 244> :
  D.252615 = gimple_assign_rhs1 (def_stmt2);

  <bb 245> :
  _208 = D.252615;
  retval.1084 = _208 != 0B;
  if (retval.1084 != 0)
    goto <bb 246>; [INV]
  else
    goto <bb 252>; [INV]

  <bb 246> :
  D.252616 = gimple_assign_rhs1 (def_stmt2);

  <bb 247> :
  _209 = D.252616;
  _210 = _209->base.code;
  retval.1085 = _210 != 0;
  if (retval.1085 != 0)
    goto <bb 248>; [INV]
  else
    goto <bb 252>; [INV]

  <bb 248> :
  if (def_stmt2 != 0B)
    goto <bb 249>; [INV]
  else
    goto <bb 251>; [INV]

  <bb 249> :
  D.252617 = gimple_assign_rhs1 (def_stmt2);

  <bb 250> :
  treecheck2 = D.252617;
  goto <bb 252>; [INV]

  <bb 251> :
  treecheck2 = filed_from;

  <bb 252> :
  goto <bb 254>; [INV]

  <bb 253> :
  treecheck2 = filed_from;

  <bb 254> :
  if (treecheck == 0B)
    goto <bb 255>; [INV]
  else
    goto <bb 256>; [INV]

  <bb 255> :
  treecheck = filed_from2;

  <bb 256> :
  if (treecheck2 == 0B)
    goto <bb 257>; [INV]
  else
    goto <bb 258>; [INV]

  <bb 257> :
  treecheck2 = filed_from;

  <bb 258> :
  if (treecheck2 == treecheck)
    goto <bb 259>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 259> :
  _211 = (long unsigned int) i;
  _212 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _211);
  _213 = _212->stmt;
  D.252618 = gimple_assign_rhs1 (_213);

  <bb 260> :
  _214 = D.252618;
  D.252619 = check_stmtStack (_214);

  <bb 261> :
  _215 = D.252619;
  retval.1086 = _215 == 0;
  if (retval.1086 != 0)
    goto <bb 262>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 262> :
  _216 = (long unsigned int) i;
  _217 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _216);
  _218 = _217->stmt;
  D.252620 = gimple_assign_rhs1 (_218);

  <bb 263> :
  _219 = D.252620;
  if (target2 != _219)
    goto <bb 264>; [INV]
  else
    goto <bb 267>; [INV]

  <bb 264> :
  _220 = (long unsigned int) i;
  _221 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _220);
  _222 = _221->stmt;
  D.252621 = check_stmtStack2 (_222);

  <bb 265> :
  _223 = D.252621;
  if (_223 == 0)
    goto <bb 266>; [INV]
  else
    goto <bb 267>; [INV]

  <bb 266> :
  iftmp.1088 = 1;
  goto <bb 268>; [INV]

  <bb 267> :
  iftmp.1088 = 0;

  <bb 268> :
  retval.1087 = iftmp.1088;
  if (retval.1087 != 0)
    goto <bb 269>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 269> :
  _224 = (long unsigned int) i;
  _225 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _224);
  _226 = _225->stmt;
  D.252622 = gimple_assign_rhs1 (_226);

  <bb 270> :
  _227 = D.252622;
  _228 = (long unsigned int) i;
  _229 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _228);
  _230 = _229->stmt;
  set_gimple_array (used_stmt, _230, _227, target, 0B);

  <bb 271> :
  _231 = (long unsigned int) i;
  _232 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _231);
  _233 = _232->stmt;
  D.252623 = gimple_assign_rhs1 (_233);

  <bb 272> :
  _234 = D.252623;
  _235 = (long unsigned int) i;
  _236 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _235);
  _237 = _236->stmt;
  D.252624 = gimple_assign_rhs1 (_237);

  <bb 273> :
  _238 = D.252624;
  new_search_imm_use (used_stmt, _238, _234);
  goto <bb 325>; [INV]

  <bb 274> :
  _239 = (long unsigned int) i;
  _240 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _239);
  _241 = _240->stmt;
  D.252625 = gimple_assign_lhs (_241);

  <bb 275> :
  _242 = D.252625;
  _243 = _242->base.code;
  retval.1089 = _243 == 153;
  if (retval.1089 != 0)
    goto <bb 276>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 276> :
  filed_from = second->exp.operands[0];
  _244 = (long unsigned int) i;
  _245 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _244);
  _246 = _245->assign_tree;
  filed_from2 = _246->exp.operands[0];
  _247 = filed_from2->base.code;
  if (_247 == 165)
    goto <bb 277>; [INV]
  else
    goto <bb 278>; [INV]

  <bb 277> :
  filed_from2 = filed_from2->exp.operands[0];

  <bb 278> :
  _248 = filed_from->base.code;
  if (_248 == 165)
    goto <bb 279>; [INV]
  else
    goto <bb 280>; [INV]

  <bb 279> :
  filed_from = filed_from->exp.operands[0];

  <bb 280> :
  _249 = filed_from2->base.code;
  if (_249 == 153)
    goto <bb 281>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 281> :
  def_stmt = filed_from2->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 282>; [INV]
  else
    goto <bb 292>; [INV]

  <bb 282> :
  _250 = gimple_code (def_stmt);
  retval.1090 = _250 != 20;
  if (retval.1090 != 0)
    goto <bb 283>; [INV]
  else
    goto <bb 292>; [INV]

  <bb 283> :
  D.252626 = gimple_assign_rhs1 (def_stmt);

  <bb 284> :
  _251 = D.252626;
  retval.1091 = _251 != 0B;
  if (retval.1091 != 0)
    goto <bb 285>; [INV]
  else
    goto <bb 292>; [INV]

  <bb 285> :
  D.252627 = gimple_assign_rhs1 (def_stmt);

  <bb 286> :
  _252 = D.252627;
  _253 = _252->base.code;
  retval.1092 = _253 != 0;
  if (retval.1092 != 0)
    goto <bb 287>; [INV]
  else
    goto <bb 292>; [INV]

  <bb 287> :
  if (def_stmt != 0B)
    goto <bb 288>; [INV]
  else
    goto <bb 290>; [INV]

  <bb 288> :
  D.252628 = gimple_assign_rhs1 (def_stmt);

  <bb 289> :
  treecheck = D.252628;
  goto <bb 292>; [INV]

  <bb 290> :
  treecheck = filed_from2;
  goto <bb 292>; [INV]

  <bb 291> :
  treecheck = filed_from2;

  <bb 292> :
  _254 = filed_from->base.code;
  if (_254 == 153)
    goto <bb 293>; [INV]
  else
    goto <bb 304>; [INV]

  <bb 293> :
  def_stmt2 = filed_from->ssa_name.def_stmt;
  if (def_stmt2 != 0B)
    goto <bb 294>; [INV]
  else
    goto <bb 305>; [INV]

  <bb 294> :
  _255 = filed_from->base.code;
  if (_255 != 20)
    goto <bb 295>; [INV]
  else
    goto <bb 305>; [INV]

  <bb 295> :
  _256 = gimple_code (def_stmt2);
  retval.1093 = _256 != 20;
  if (retval.1093 != 0)
    goto <bb 296>; [INV]
  else
    goto <bb 305>; [INV]

  <bb 296> :
  D.252629 = gimple_assign_rhs1 (def_stmt2);

  <bb 297> :
  _257 = D.252629;
  retval.1094 = _257 != 0B;
  if (retval.1094 != 0)
    goto <bb 298>; [INV]
  else
    goto <bb 305>; [INV]

  <bb 298> :
  D.252630 = gimple_assign_rhs1 (def_stmt2);

  <bb 299> :
  _258 = D.252630;
  _259 = _258->base.code;
  retval.1095 = _259 != 0;
  if (retval.1095 != 0)
    goto <bb 300>; [INV]
  else
    goto <bb 305>; [INV]

  <bb 300> :
  if (def_stmt2 != 0B)
    goto <bb 301>; [INV]
  else
    goto <bb 303>; [INV]

  <bb 301> :
  D.252631 = gimple_assign_rhs1 (def_stmt2);

  <bb 302> :
  treecheck2 = D.252631;
  goto <bb 305>; [INV]

  <bb 303> :
  treecheck2 = filed_from;
  goto <bb 305>; [INV]

  <bb 304> :
  treecheck2 = filed_from;

  <bb 305> :
  if (treecheck == 0B)
    goto <bb 306>; [INV]
  else
    goto <bb 307>; [INV]

  <bb 306> :
  treecheck = filed_from2;

  <bb 307> :
  if (treecheck2 == 0B)
    goto <bb 308>; [INV]
  else
    goto <bb 309>; [INV]

  <bb 308> :
  treecheck2 = filed_from;

  <bb 309> :
  if (treecheck2 == treecheck)
    goto <bb 310>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 310> :
  _260 = (long unsigned int) i;
  _261 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _260);
  _262 = _261->stmt;
  D.252632 = gimple_assign_lhs (_262);

  <bb 311> :
  _263 = D.252632;
  D.252633 = check_stmtStack (_263);

  <bb 312> :
  _264 = D.252633;
  retval.1096 = _264 == 0;
  if (retval.1096 != 0)
    goto <bb 313>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 313> :
  _265 = (long unsigned int) i;
  _266 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _265);
  _267 = _266->stmt;
  D.252634 = gimple_assign_lhs (_267);

  <bb 314> :
  _268 = D.252634;
  if (target2 != _268)
    goto <bb 315>; [INV]
  else
    goto <bb 318>; [INV]

  <bb 315> :
  _269 = (long unsigned int) i;
  _270 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _269);
  _271 = _270->stmt;
  D.252635 = check_stmtStack2 (_271);

  <bb 316> :
  _272 = D.252635;
  if (_272 == 0)
    goto <bb 317>; [INV]
  else
    goto <bb 318>; [INV]

  <bb 317> :
  iftmp.1098 = 1;
  goto <bb 319>; [INV]

  <bb 318> :
  iftmp.1098 = 0;

  <bb 319> :
  retval.1097 = iftmp.1098;
  if (retval.1097 != 0)
    goto <bb 320>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 320> :
  _273 = (long unsigned int) i;
  _274 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _273);
  _275 = _274->stmt;
  D.252636 = gimple_assign_rhs1 (_275);

  <bb 321> :
  _276 = D.252636;
  _277 = (long unsigned int) i;
  _278 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _277);
  _279 = _278->stmt;
  set_gimple_array (used_stmt, _279, _276, target, 0B);

  <bb 322> :
  _280 = (long unsigned int) i;
  _281 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _280);
  _282 = _281->stmt;
  D.252637 = gimple_assign_lhs (_282);

  <bb 323> :
  _283 = D.252637;
  _284 = (long unsigned int) i;
  _285 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _284);
  _286 = _285->stmt;
  D.252638 = gimple_assign_lhs (_286);

  <bb 324> :
  _287 = D.252638;
  new_search_imm_use (used_stmt, _287, _283);

  <bb 325> :
  i = i + 1;

  <bb 326> :
  _288 = (long unsigned int) i;
  _289 = std::vector<assign_type>::size (&assign_array.assign_type_array);
  retval.1099 = _288 < _289;
  if (retval.1099 != 0)
    goto <bb 221>; [INV]
  else
    goto <bb 327>; [INV]

  <bb 327> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  goto <bb 330>; [INV]

  <bb 328> :
  _290 = second->base.code;
  if (_290 == 36)
    goto <bb 329>; [INV]
  else
    goto <bb 330>; [INV]

  <bb 329> :
  getFunctionAssignVAR = second;

  <bb 330> :
  second2 = {CLOBBER};

  <bb 331> :
  D.252643 = gimple_assign_lhs (use_stmt);

  <bb 332> :
  _291 = D.252643;
  D.252644 = check_stmtStack (_291);

  <bb 333> :
  _292 = D.252644;
  if (_292 == 0)
    goto <bb 334>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 334> :
  D.252645 = check_stmtStack2 (use_stmt);

  <bb 335> :
  _293 = D.252645;
  if (_293 == 0)
    goto <bb 336>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 336> :
  iftmp.1101 = 1;
  goto <bb 338>; [INV]

  <bb 337> :
  iftmp.1101 = 0;

  <bb 338> :
  retval.1100 = iftmp.1101;
  if (retval.1100 != 0)
    goto <bb 339>; [INV]
  else
    goto <bb 341>; [INV]

  <bb 339> :
  D.252646 = gimple_assign_lhs (use_stmt);

  <bb 340> :
  _294 = D.252646;
  set_gimple_array (used_stmt, use_stmt, _294, target, 0B);
  goto <bb 351>; [INV]

  <bb 341> :
  D.252647 = gimple_assign_rhs1 (use_stmt);

  <bb 342> :
  _295 = D.252647;
  D.252648 = check_stmtStack (_295);

  <bb 343> :
  _296 = D.252648;
  if (_296 == 0)
    goto <bb 344>; [INV]
  else
    goto <bb 347>; [INV]

  <bb 344> :
  D.252649 = check_stmtStack2 (use_stmt);

  <bb 345> :
  _297 = D.252649;
  if (_297 == 0)
    goto <bb 346>; [INV]
  else
    goto <bb 347>; [INV]

  <bb 346> :
  iftmp.1103 = 1;
  goto <bb 348>; [INV]

  <bb 347> :
  iftmp.1103 = 0;

  <bb 348> :
  retval.1102 = iftmp.1103;
  if (retval.1102 != 0)
    goto <bb 349>; [INV]
  else
    goto <bb 351>; [INV]

  <bb 349> :
  D.252650 = gimple_assign_rhs1 (use_stmt);

  <bb 350> :
  _298 = D.252650;
  set_gimple_array (used_stmt, use_stmt, _298, target, 0B);

  <bb 351> :
  getFunctionAssignVAR.1104_299 = getFunctionAssignVAR;
  if (getFunctionAssignVAR.1104_299 != 0B)
    goto <bb 352>; [INV]
  else
    goto <bb 604>; [INV]

  <bb 352> :
  function_assign_array::function_assign_array (&assign_array);
  function_assign_collect.1106_300 = function_assign_collect;
  D.252651 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1106_300, &getFunctionAssignVAR);

  <bb 353> :
  _301 = D.252651;
  retval.1105 = _301 != 0B;
  if (retval.1105 != 0)
    goto <bb 354>; [INV]
  else
    goto <bb 603>; [INV]

  <bb 354> :
  getFunctionAssignVAR.1107_302 = getFunctionAssignVAR;
  D.196202 = ret_function_varstmt (getFunctionAssignVAR.1107_302); [return slot optimization]

  <bb 355> :
  function_assign_array::operator= (&assign_array, &D.196202);
  function_assign_array::~function_assign_array (&D.196202);
  D.196202 = {CLOBBER};
  i = 0;
  goto <bb 602>; [INV]

  <bb 356> :
  _303 = (long unsigned int) i;
  _304 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _303);
  nowstmt = _304->stmt;
  _305 = gimple_code (nowstmt);
  retval.1108 = _305 == 6;
  if (retval.1108 != 0)
    goto <bb 357>; [INV]
  else
    goto <bb 534>; [INV]

  <bb 357> :
  D.252652 = gimple_assign_lhs (nowstmt);

  <bb 358> :
  _306 = D.252652;
  _307 = _306->base.code;
  retval.1109 = _307 == 165;
  if (retval.1109 != 0)
    goto <bb 359>; [INV]
  else
    goto <bb 377>; [INV]

  <bb 359> :
  D.252653 = gimple_assign_lhs (nowstmt);

  <bb 360> :
  _308 = D.252653;
  D.252654 = check_stmtStack (_308);

  <bb 361> :
  _309 = D.252654;
  retval.1110 = _309 == 0;
  if (retval.1110 != 0)
    goto <bb 362>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 362> :
  _310 = (long unsigned int) i;
  _311 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _310);
  _312 = _311->form_tree;
  retval.1111 = _312 != 0B;
  if (retval.1111 != 0)
    goto <bb 363>; [INV]
  else
    goto <bb 364>; [INV]

  <bb 363> :
  _313 = (long unsigned int) i;
  _314 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _313);
  _315 = _314->form_tree;
  set_gimple_array (used_stmt, nowstmt, _315, target, 0B);
  goto <bb 366>; [INV]

  <bb 364> :
  D.252655 = gimple_assign_lhs (nowstmt);

  <bb 365> :
  _316 = D.252655;
  set_gimple_array (used_stmt, nowstmt, _316, target, 0B);

  <bb 366> :
  D.252656 = gimple_assign_lhs (nowstmt);

  <bb 367> :
  _317 = D.252656;
  second = _317->exp.operands[0];
  if (second != 0B)
    goto <bb 368>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 368> :
  _318 = second->base.code;
  if (_318 == 153)
    goto <bb 369>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 369> :
  def_stmt = second->ssa_name.def_stmt;
  retval.1112 = is_gimple_assign (def_stmt);
  if (retval.1112 != 0)
    goto <bb 370>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 370> :
  D.252657 = gimple_assign_lhs (def_stmt);

  <bb 371> :
  _319 = D.252657;
  _320 = _319->base.code;
  retval.1113 = _320 == 153;
  if (retval.1113 != 0)
    goto <bb 372>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 372> :
  D.252658 = gimple_assign_lhs (def_stmt);

  <bb 373> :
  _321 = D.252658;
  retval.1114 = target2 != _321;
  if (retval.1114 != 0)
    goto <bb 374>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 374> :
  D.252659 = gimple_assign_lhs (def_stmt);

  <bb 375> :
  _322 = D.252659;
  D.252660 = gimple_assign_lhs (def_stmt);

  <bb 376> :
  _323 = D.252660;
  new_search_imm_use (used_stmt, _323, _322);
  goto <bb 601>; [INV]

  <bb 377> :
  D.252661 = gimple_assign_lhs (nowstmt);

  <bb 378> :
  _324 = D.252661;
  _325 = _324->base.code;
  retval.1115 = _325 == 153;
  if (retval.1115 != 0)
    goto <bb 379>; [INV]
  else
    goto <bb 459>; [INV]

  <bb 379> :
  D.252662 = gimple_assign_lhs (nowstmt);

  <bb 380> :
  _326 = D.252662;
  D.252663 = check_stmtStack (_326);

  <bb 381> :
  _327 = D.252663;
  retval.1116 = _327 == 0;
  if (retval.1116 != 0)
    goto <bb 382>; [INV]
  else
    goto <bb 398>; [INV]

  <bb 382> :
  _328 = (long unsigned int) i;
  _329 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _328);
  _330 = _329->form_tree;
  retval.1117 = _330 != 0B;
  if (retval.1117 != 0)
    goto <bb 383>; [INV]
  else
    goto <bb 384>; [INV]

  <bb 383> :
  _331 = (long unsigned int) i;
  _332 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _331);
  _333 = _332->form_tree;
  set_gimple_array (used_stmt, nowstmt, _333, target, 0B);
  goto <bb 386>; [INV]

  <bb 384> :
  D.252664 = gimple_assign_lhs (nowstmt);

  <bb 385> :
  _334 = D.252664;
  set_gimple_array (used_stmt, nowstmt, _334, target, 0B);

  <bb 386> :
  D.252665 = check_stmtStack4 (nowstmt);

  <bb 387> :
  _335 = D.252665;
  retval.1118 = _335 == 0;
  if (retval.1118 != 0)
    goto <bb 388>; [INV]
  else
    goto <bb 398>; [INV]

  <bb 388> :
  D.252666 = gimple_assign_lhs (nowstmt);

  <bb 389> :
  _336 = D.252666;
  if (target2 != _336)
    goto <bb 390>; [INV]
  else
    goto <bb 393>; [INV]

  <bb 390> :
  D.252667 = check_stmtStack2 (nowstmt);

  <bb 391> :
  _337 = D.252667;
  if (_337 == 0)
    goto <bb 392>; [INV]
  else
    goto <bb 393>; [INV]

  <bb 392> :
  iftmp.1120 = 1;
  goto <bb 394>; [INV]

  <bb 393> :
  iftmp.1120 = 0;

  <bb 394> :
  retval.1119 = iftmp.1120;
  if (retval.1119 != 0)
    goto <bb 395>; [INV]
  else
    goto <bb 398>; [INV]

  <bb 395> :
  D.252668 = gimple_assign_lhs (nowstmt);

  <bb 396> :
  _338 = D.252668;
  D.252669 = gimple_assign_lhs (nowstmt);

  <bb 397> :
  _339 = D.252669;
  new_search_imm_use (used_stmt, _339, _338);

  <bb 398> :
  D.252670 = gimple_assign_rhs1 (nowstmt);

  <bb 399> :
  _340 = D.252670;
  if (_340 != 0B)
    goto <bb 400>; [INV]
  else
    goto <bb 403>; [INV]

  <bb 400> :
  D.252671 = gimple_assign_rhs1 (nowstmt);

  <bb 401> :
  _341 = D.252671;
  _342 = _341->base.code;
  if (_342 == 47)
    goto <bb 402>; [INV]
  else
    goto <bb 403>; [INV]

  <bb 402> :
  iftmp.1122 = 1;
  goto <bb 404>; [INV]

  <bb 403> :
  iftmp.1122 = 0;

  <bb 404> :
  retval.1121 = iftmp.1122;
  if (retval.1121 != 0)
    goto <bb 405>; [INV]
  else
    goto <bb 421>; [INV]

  <bb 405> :
  D.252672 = gimple_assign_rhs1 (nowstmt);

  <bb 406> :
  _343 = D.252672;
  D.252673 = check_stmtStack (_343);

  <bb 407> :
  _344 = D.252673;
  retval.1123 = _344 == 0;
  if (retval.1123 != 0)
    goto <bb 408>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 408> :
  D.252674 = gimple_assign_rhs1 (nowstmt);

  <bb 409> :
  _345 = D.252674;
  second = _345->exp.operands[0];
  if (second != 0B)
    goto <bb 410>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 410> :
  _346 = second->base.code;
  if (_346 == 165)
    goto <bb 411>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 411> :
  three = second->exp.operands[0];
  if (three != 0B)
    goto <bb 412>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 412> :
  _347 = three->base.code;
  if (_347 == 153)
    goto <bb 413>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 413> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1124 = is_gimple_assign (def_stmt);
  if (retval.1124 != 0)
    goto <bb 414>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 414> :
  D.252675 = gimple_assign_lhs (def_stmt);

  <bb 415> :
  _348 = D.252675;
  _349 = _348->base.code;
  retval.1125 = _349 == 153;
  if (retval.1125 != 0)
    goto <bb 416>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 416> :
  D.252676 = gimple_assign_lhs (def_stmt);

  <bb 417> :
  _350 = D.252676;
  retval.1126 = target2 != _350;
  if (retval.1126 != 0)
    goto <bb 418>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 418> :
  D.252677 = gimple_assign_lhs (def_stmt);

  <bb 419> :
  _351 = D.252677;
  D.252678 = gimple_assign_lhs (def_stmt);

  <bb 420> :
  _352 = D.252678;
  new_search_imm_use (used_stmt, _352, _351);
  goto <bb 601>; [INV]

  <bb 421> :
  D.252679 = gimple_assign_rhs1 (nowstmt);

  <bb 422> :
  _353 = D.252679;
  if (_353 != 0B)
    goto <bb 423>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 423> :
  D.252680 = gimple_assign_rhs1 (nowstmt);

  <bb 424> :
  _354 = D.252680;
  _355 = _354->base.code;
  if (_355 == 165)
    goto <bb 425>; [INV]
  else
    goto <bb 426>; [INV]

  <bb 425> :
  iftmp.1128 = 1;
  goto <bb 427>; [INV]

  <bb 426> :
  iftmp.1128 = 0;

  <bb 427> :
  retval.1127 = iftmp.1128;
  if (retval.1127 != 0)
    goto <bb 428>; [INV]
  else
    goto <bb 445>; [INV]

  <bb 428> :
  D.252681 = gimple_assign_rhs1 (nowstmt);

  <bb 429> :
  _356 = D.252681;
  D.252682 = check_stmtStack (_356);

  <bb 430> :
  _357 = D.252682;
  retval.1129 = _357 == 0;
  if (retval.1129 != 0)
    goto <bb 431>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 431> :
  _358 = (long unsigned int) i;
  _359 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _358);
  _360 = _359->form_tree;
  retval.1130 = _360 != 0B;
  if (retval.1130 != 0)
    goto <bb 432>; [INV]
  else
    goto <bb 433>; [INV]

  <bb 432> :
  _361 = (long unsigned int) i;
  _362 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _361);
  _363 = _362->form_tree;
  set_gimple_array (used_stmt, nowstmt, _363, target, 0B);
  goto <bb 435>; [INV]

  <bb 433> :
  D.252683 = gimple_assign_rhs1 (nowstmt);

  <bb 434> :
  _364 = D.252683;
  set_gimple_array (used_stmt, nowstmt, _364, target, 0B);

  <bb 435> :
  D.252684 = gimple_assign_rhs1 (nowstmt);

  <bb 436> :
  _365 = D.252684;
  second = _365->exp.operands[0];
  _366 = second->base.code;
  if (_366 == 165)
    goto <bb 437>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 437> :
  def_stmt = second->ssa_name.def_stmt;
  retval.1131 = is_gimple_assign (def_stmt);
  if (retval.1131 != 0)
    goto <bb 438>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 438> :
  D.252685 = gimple_assign_lhs (def_stmt);

  <bb 439> :
  _367 = D.252685;
  _368 = _367->base.code;
  retval.1132 = _368 == 153;
  if (retval.1132 != 0)
    goto <bb 440>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 440> :
  D.252686 = gimple_assign_lhs (def_stmt);

  <bb 441> :
  _369 = D.252686;
  retval.1133 = target2 != _369;
  if (retval.1133 != 0)
    goto <bb 442>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 442> :
  D.252687 = gimple_assign_lhs (def_stmt);

  <bb 443> :
  _370 = D.252687;
  D.252688 = gimple_assign_lhs (def_stmt);

  <bb 444> :
  _371 = D.252688;
  new_search_imm_use (used_stmt, _371, _370);
  goto <bb 601>; [INV]

  <bb 445> :
  D.252689 = gimple_assign_rhs1 (nowstmt);

  <bb 446> :
  _372 = D.252689;
  if (_372 != 0B)
    goto <bb 447>; [INV]
  else
    goto <bb 450>; [INV]

  <bb 447> :
  D.252690 = gimple_assign_rhs1 (nowstmt);

  <bb 448> :
  _373 = D.252690;
  _374 = _373->base.code;
  if (_374 == 49)
    goto <bb 449>; [INV]
  else
    goto <bb 450>; [INV]

  <bb 449> :
  iftmp.1135 = 1;
  goto <bb 451>; [INV]

  <bb 450> :
  iftmp.1135 = 0;

  <bb 451> :
  retval.1134 = iftmp.1135;
  if (retval.1134 != 0)
    goto <bb 452>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 452> :
  D.252691 = gimple_assign_rhs1 (nowstmt);

  <bb 453> :
  _375 = D.252691;
  D.252692 = check_stmtStack (_375);

  <bb 454> :
  _376 = D.252692;
  retval.1136 = _376 == 0;
  if (retval.1136 != 0)
    goto <bb 455>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 455> :
  _377 = (long unsigned int) i;
  _378 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _377);
  _379 = _378->form_tree;
  retval.1137 = _379 != 0B;
  if (retval.1137 != 0)
    goto <bb 456>; [INV]
  else
    goto <bb 457>; [INV]

  <bb 456> :
  _380 = (long unsigned int) i;
  _381 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _380);
  _382 = _381->form_tree;
  set_gimple_array (used_stmt, nowstmt, _382, target, 0B);
  goto <bb 601>; [INV]

  <bb 457> :
  D.252693 = gimple_assign_rhs1 (nowstmt);

  <bb 458> :
  _383 = D.252693;
  set_gimple_array (used_stmt, nowstmt, _383, target, 0B);
  goto <bb 601>; [INV]

  <bb 459> :
  D.252694 = gimple_assign_rhs1 (nowstmt);

  <bb 460> :
  _384 = D.252694;
  _385 = _384->base.code;
  retval.1138 = _385 == 153;
  if (retval.1138 != 0)
    goto <bb 461>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 461> :
  D.252695 = gimple_assign_rhs1 (nowstmt);

  <bb 462> :
  _386 = D.252695;
  D.252696 = check_stmtStack (_386);

  <bb 463> :
  _387 = D.252696;
  retval.1139 = _387 == 0;
  if (retval.1139 != 0)
    goto <bb 464>; [INV]
  else
    goto <bb 482>; [INV]

  <bb 464> :
  _388 = (long unsigned int) i;
  _389 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _388);
  _390 = _389->form_tree;
  retval.1140 = _390 != 0B;
  if (retval.1140 != 0)
    goto <bb 465>; [INV]
  else
    goto <bb 466>; [INV]

  <bb 465> :
  _391 = (long unsigned int) i;
  _392 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _391);
  _393 = _392->form_tree;
  set_gimple_array (used_stmt, nowstmt, _393, target, 0B);
  goto <bb 468>; [INV]

  <bb 466> :
  D.252697 = gimple_assign_rhs1 (nowstmt);

  <bb 467> :
  _394 = D.252697;
  set_gimple_array (used_stmt, nowstmt, _394, target, 0B);

  <bb 468> :
  D.252698 = gimple_assign_rhs1 (nowstmt);

  <bb 469> :
  _395 = D.252698;
  retval.1141 = target2 != _395;
  if (retval.1141 != 0)
    goto <bb 470>; [INV]
  else
    goto <bb 482>; [INV]

  <bb 470> :
  D.252699 = check_stmtStack4 (nowstmt);

  <bb 471> :
  _396 = D.252699;
  retval.1142 = _396 == 0;
  if (retval.1142 != 0)
    goto <bb 472>; [INV]
  else
    goto <bb 482>; [INV]

  <bb 472> :
  D.252700 = gimple_assign_rhs1 (nowstmt);

  <bb 473> :
  _397 = D.252700;
  if (target2 != _397)
    goto <bb 474>; [INV]
  else
    goto <bb 477>; [INV]

  <bb 474> :
  D.252701 = check_stmtStack2 (nowstmt);

  <bb 475> :
  _398 = D.252701;
  if (_398 == 0)
    goto <bb 476>; [INV]
  else
    goto <bb 477>; [INV]

  <bb 476> :
  iftmp.1144 = 1;
  goto <bb 478>; [INV]

  <bb 477> :
  iftmp.1144 = 0;

  <bb 478> :
  retval.1143 = iftmp.1144;
  if (retval.1143 != 0)
    goto <bb 479>; [INV]
  else
    goto <bb 482>; [INV]

  <bb 479> :
  D.252702 = gimple_assign_rhs1 (nowstmt);

  <bb 480> :
  _399 = D.252702;
  D.252703 = gimple_assign_rhs1 (nowstmt);

  <bb 481> :
  _400 = D.252703;
  new_search_imm_use (used_stmt, _400, _399);

  <bb 482> :
  D.252704 = gimple_assign_lhs (nowstmt);

  <bb 483> :
  _401 = D.252704;
  if (_401 != 0B)
    goto <bb 484>; [INV]
  else
    goto <bb 487>; [INV]

  <bb 484> :
  D.252705 = gimple_assign_lhs (nowstmt);

  <bb 485> :
  _402 = D.252705;
  _403 = _402->base.code;
  if (_403 == 47)
    goto <bb 486>; [INV]
  else
    goto <bb 487>; [INV]

  <bb 486> :
  iftmp.1146 = 1;
  goto <bb 488>; [INV]

  <bb 487> :
  iftmp.1146 = 0;

  <bb 488> :
  retval.1145 = iftmp.1146;
  if (retval.1145 != 0)
    goto <bb 489>; [INV]
  else
    goto <bb 505>; [INV]

  <bb 489> :
  D.252706 = gimple_assign_lhs (nowstmt);

  <bb 490> :
  _404 = D.252706;
  D.252707 = check_stmtStack (_404);

  <bb 491> :
  _405 = D.252707;
  retval.1147 = _405 == 0;
  if (retval.1147 != 0)
    goto <bb 492>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 492> :
  D.252708 = gimple_assign_lhs (nowstmt);

  <bb 493> :
  _406 = D.252708;
  second = _406->exp.operands[0];
  if (second != 0B)
    goto <bb 494>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 494> :
  _407 = second->base.code;
  if (_407 == 165)
    goto <bb 495>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 495> :
  three = second->exp.operands[0];
  if (three != 0B)
    goto <bb 496>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 496> :
  _408 = three->base.code;
  if (_408 == 153)
    goto <bb 497>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 497> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1148 = is_gimple_assign (def_stmt);
  if (retval.1148 != 0)
    goto <bb 498>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 498> :
  D.252709 = gimple_assign_lhs (def_stmt);

  <bb 499> :
  _409 = D.252709;
  _410 = _409->base.code;
  retval.1149 = _410 == 153;
  if (retval.1149 != 0)
    goto <bb 500>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 500> :
  D.252710 = gimple_assign_lhs (def_stmt);

  <bb 501> :
  _411 = D.252710;
  retval.1150 = target2 != _411;
  if (retval.1150 != 0)
    goto <bb 502>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 502> :
  D.252711 = gimple_assign_lhs (def_stmt);

  <bb 503> :
  _412 = D.252711;
  D.252712 = gimple_assign_lhs (def_stmt);

  <bb 504> :
  _413 = D.252712;
  new_search_imm_use (used_stmt, _413, _412);
  goto <bb 601>; [INV]

  <bb 505> :
  D.252713 = gimple_assign_lhs (nowstmt);

  <bb 506> :
  _414 = D.252713;
  if (_414 != 0B)
    goto <bb 507>; [INV]
  else
    goto <bb 510>; [INV]

  <bb 507> :
  D.252714 = gimple_assign_lhs (nowstmt);

  <bb 508> :
  _415 = D.252714;
  _416 = _415->base.code;
  if (_416 == 165)
    goto <bb 509>; [INV]
  else
    goto <bb 510>; [INV]

  <bb 509> :
  iftmp.1152 = 1;
  goto <bb 511>; [INV]

  <bb 510> :
  iftmp.1152 = 0;

  <bb 511> :
  retval.1151 = iftmp.1152;
  if (retval.1151 != 0)
    goto <bb 512>; [INV]
  else
    goto <bb 525>; [INV]

  <bb 512> :
  D.252715 = gimple_assign_lhs (nowstmt);

  <bb 513> :
  _417 = D.252715;
  D.252716 = check_stmtStack (_417);

  <bb 514> :
  _418 = D.252716;
  retval.1153 = _418 == 0;
  if (retval.1153 != 0)
    goto <bb 515>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 515> :
  D.252717 = gimple_assign_lhs (nowstmt);

  <bb 516> :
  _419 = D.252717;
  second = _419->exp.operands[0];
  _420 = second->base.code;
  if (_420 == 165)
    goto <bb 517>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 517> :
  def_stmt = second->ssa_name.def_stmt;
  retval.1154 = is_gimple_assign (def_stmt);
  if (retval.1154 != 0)
    goto <bb 518>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 518> :
  D.252718 = gimple_assign_lhs (def_stmt);

  <bb 519> :
  _421 = D.252718;
  _422 = _421->base.code;
  retval.1155 = _422 == 153;
  if (retval.1155 != 0)
    goto <bb 520>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 520> :
  D.252719 = gimple_assign_lhs (def_stmt);

  <bb 521> :
  _423 = D.252719;
  retval.1156 = target2 != _423;
  if (retval.1156 != 0)
    goto <bb 522>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 522> :
  D.252720 = gimple_assign_lhs (def_stmt);

  <bb 523> :
  _424 = D.252720;
  D.252721 = gimple_assign_lhs (def_stmt);

  <bb 524> :
  _425 = D.252721;
  new_search_imm_use (used_stmt, _425, _424);
  goto <bb 601>; [INV]

  <bb 525> :
  D.252722 = gimple_assign_lhs (nowstmt);

  <bb 526> :
  _426 = D.252722;
  _427 = _426->base.code;
  retval.1157 = _427 == 49;
  if (retval.1157 != 0)
    goto <bb 527>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 527> :
  D.252723 = gimple_assign_lhs (nowstmt);

  <bb 528> :
  _428 = D.252723;
  D.252724 = check_stmtStack (_428);

  <bb 529> :
  _429 = D.252724;
  retval.1158 = _429 == 0;
  if (retval.1158 != 0)
    goto <bb 530>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 530> :
  _430 = (long unsigned int) i;
  _431 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _430);
  _432 = _431->form_tree;
  retval.1159 = _432 != 0B;
  if (retval.1159 != 0)
    goto <bb 531>; [INV]
  else
    goto <bb 532>; [INV]

  <bb 531> :
  _433 = (long unsigned int) i;
  _434 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _433);
  _435 = _434->form_tree;
  set_gimple_array (used_stmt, nowstmt, _435, target, 0B);
  goto <bb 601>; [INV]

  <bb 532> :
  D.252725 = gimple_assign_lhs (nowstmt);

  <bb 533> :
  _436 = D.252725;
  set_gimple_array (used_stmt, nowstmt, _436, target, 0B);
  goto <bb 601>; [INV]

  <bb 534> :
  _437 = gimple_code (nowstmt);
  retval.1160 = _437 == 8;
  if (retval.1160 != 0)
    goto <bb 535>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 535> :
  _438 = gimple_code (nowstmt);
  retval.1161 = _438 == 8;
  if (retval.1161 != 0)
    goto <bb 536>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 536> :
  D.252726 = gimple_call_fn (nowstmt);

  <bb 537> :
  _439 = D.252726;
  retval.1162 = _439 != 0B;
  if (retval.1162 != 0)
    goto <bb 538>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 538> :
  D.252727 = gimple_call_fn (nowstmt);

  <bb 539> :
  _440 = D.252727;
  D.252728 = get_name (_440);

  <bb 540> :
  name = D.252728;
  D.252729 = gimple_call_lhs (nowstmt);

  <bb 541> :
  _441 = D.252729;
  if (_441 != 0B)
    goto <bb 544>; [INV]
  else
    goto <bb 542>; [INV]

  <bb 542> :
  D.252730 = gimple_call_fndecl (nowstmt);

  <bb 543> :
  _442 = D.252730;
  if (_442 != 0B)
    goto <bb 544>; [INV]
  else
    goto <bb 545>; [INV]

  <bb 544> :
  iftmp.1164 = 1;
  goto <bb 546>; [INV]

  <bb 545> :
  iftmp.1164 = 0;

  <bb 546> :
  retval.1163 = iftmp.1164;
  if (retval.1163 != 0)
    goto <bb 547>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 547> :
  D.252731 = gimple_call_lhs (nowstmt);

  <bb 548> :
  _443 = D.252731;
  D.252732 = check_stmtStack (_443);

  <bb 549> :
  _444 = D.252732;
  retval.1165 = _444 == 0;
  if (retval.1165 != 0)
    goto <bb 550>; [INV]
  else
    goto <bb 578>; [INV]

  <bb 550> :
  if (name != 0B)
    goto <bb 551>; [INV]
  else
    goto <bb 560>; [INV]

  <bb 551> :
  _445 = strcmp (name, "free");
  if (_445 == 0)
    goto <bb 552>; [INV]
  else
    goto <bb 556>; [INV]

  <bb 552> :
  D.252733 = check_stmtStack2 (nowstmt);

  <bb 553> :
  _446 = D.252733;
  retval.1166 = _446 == 0;
  if (retval.1166 != 0)
    goto <bb 554>; [INV]
  else
    goto <bb 560>; [INV]

  <bb 554> :
  D.252734 = gimple_call_arg (nowstmt, 0);

  <bb 555> :
  _447 = D.252734;
  set_gimple_array (used_stmt, nowstmt, _447, target, 0B);
  goto <bb 560>; [INV]

  <bb 556> :
  _448 = (long unsigned int) i;
  _449 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _448);
  _450 = _449->form_tree;
  retval.1167 = _450 != 0B;
  if (retval.1167 != 0)
    goto <bb 557>; [INV]
  else
    goto <bb 558>; [INV]

  <bb 557> :
  _451 = (long unsigned int) i;
  _452 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _451);
  _453 = _452->form_tree;
  set_gimple_array (used_stmt, nowstmt, _453, target, 0B);
  goto <bb 560>; [INV]

  <bb 558> :
  D.252735 = gimple_call_lhs (nowstmt);

  <bb 559> :
  _454 = D.252735;
  set_gimple_array (used_stmt, nowstmt, _454, target, 0B);

  <bb 560> :
  D.252736 = gimple_call_num_args (nowstmt);

  <bb 561> :
  _455 = D.252736;
  size = (int) _455;
  i = 0;
  goto <bb 577>; [INV]

  <bb 562> :
  i.1169_456 = (unsigned int) i;
  D.252737 = gimple_call_arg (nowstmt, i.1169_456);

  <bb 563> :
  _457 = D.252737;
  D.252738 = check_stmtStack (_457);

  <bb 564> :
  _458 = D.252738;
  retval.1168 = _458 == 0;
  if (retval.1168 != 0)
    goto <bb 565>; [INV]
  else
    goto <bb 576>; [INV]

  <bb 565> :
  i.1171_459 = (unsigned int) i;
  D.252739 = gimple_call_arg (nowstmt, i.1171_459);

  <bb 566> :
  _460 = D.252739;
  _461 = _460->base.code;
  retval.1170 = _461 == 153;
  if (retval.1170 != 0)
    goto <bb 567>; [INV]
  else
    goto <bb 572>; [INV]

  <bb 567> :
  i.1173_462 = (unsigned int) i;
  D.252740 = gimple_call_arg (nowstmt, i.1173_462);

  <bb 568> :
  _463 = D.252740;
  retval.1172 = target2 != _463;
  if (retval.1172 != 0)
    goto <bb 569>; [INV]
  else
    goto <bb 576>; [INV]

  <bb 569> :
  i.1174_464 = (unsigned int) i;
  D.252741 = gimple_call_arg (nowstmt, i.1174_464);

  <bb 570> :
  _465 = D.252741;
  i.1175_466 = (unsigned int) i;
  D.252742 = gimple_call_arg (nowstmt, i.1175_466);

  <bb 571> :
  _467 = D.252742;
  new_search_imm_use (used_stmt, _467, _465);
  goto <bb 576>; [INV]

  <bb 572> :
  i.1177_468 = (unsigned int) i;
  D.252743 = gimple_call_arg (nowstmt, i.1177_468);

  <bb 573> :
  _469 = D.252743;
  _470 = _469->base.code;
  retval.1176 = _470 == 131;
  if (retval.1176 != 0)
    goto <bb 574>; [INV]
  else
    goto <bb 576>; [INV]

  <bb 574> :
  i.1178_471 = (unsigned int) i;
  D.252744 = gimple_call_arg (nowstmt, i.1178_471);

  <bb 575> :
  _472 = D.252744;
  set_gimple_array (used_stmt, nowstmt, _472, target, 0B);

  <bb 576> :
  i = i + 1;

  <bb 577> :
  if (i < size)
    goto <bb 562>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 578> :
  D.252745 = check_stmtStack2 (nowstmt);

  <bb 579> :
  _473 = D.252745;
  retval.1179 = _473 == 0;
  if (retval.1179 != 0)
    goto <bb 580>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 580> :
  D.252746 = gimple_call_arg (nowstmt, 0);

  <bb 581> :
  _474 = D.252746;
  _475 = _474->base.code;
  retval.1180 = _475 == 131;
  if (retval.1180 != 0)
    goto <bb 582>; [INV]
  else
    goto <bb 584>; [INV]

  <bb 582> :
  D.252747 = gimple_call_arg (nowstmt, 0);

  <bb 583> :
  _476 = D.252747;
  set_gimple_array (used_stmt, nowstmt, _476, target, 0B);

  <bb 584> :
  D.252748 = gimple_call_num_args (nowstmt);

  <bb 585> :
  _477 = D.252748;
  size = (int) _477;
  i = 0;
  goto <bb 600>; [INV]

  <bb 586> :
  i.1182_478 = (unsigned int) i;
  D.252749 = gimple_call_arg (nowstmt, i.1182_478);

  <bb 587> :
  _479 = D.252749;
  D.252750 = check_stmtStack (_479);

  <bb 588> :
  _480 = D.252750;
  retval.1181 = _480 == 0;
  if (retval.1181 != 0)
    goto <bb 589>; [INV]
  else
    goto <bb 599>; [INV]

  <bb 589> :
  i.1184_481 = (unsigned int) i;
  D.252751 = gimple_call_arg (nowstmt, i.1184_481);

  <bb 590> :
  _482 = D.252751;
  _483 = _482->base.code;
  retval.1183 = _483 == 153;
  if (retval.1183 != 0)
    goto <bb 591>; [INV]
  else
    goto <bb 599>; [INV]

  <bb 591> :
  i.1186_484 = (unsigned int) i;
  D.252752 = gimple_call_arg (nowstmt, i.1186_484);

  <bb 592> :
  _485 = D.252752;
  D.252753 = check_stmtStack (_485);

  <bb 593> :
  _486 = D.252753;
  retval.1185 = _486 == 0;
  if (retval.1185 != 0)
    goto <bb 594>; [INV]
  else
    goto <bb 599>; [INV]

  <bb 594> :
  i.1188_487 = (unsigned int) i;
  D.252754 = gimple_call_arg (nowstmt, i.1188_487);

  <bb 595> :
  _488 = D.252754;
  retval.1187 = target2 != _488;
  if (retval.1187 != 0)
    goto <bb 596>; [INV]
  else
    goto <bb 599>; [INV]

  <bb 596> :
  i.1189_489 = (unsigned int) i;
  D.252755 = gimple_call_arg (nowstmt, i.1189_489);

  <bb 597> :
  _490 = D.252755;
  i.1190_491 = (unsigned int) i;
  D.252756 = gimple_call_arg (nowstmt, i.1190_491);

  <bb 598> :
  _492 = D.252756;
  new_search_imm_use (used_stmt, _492, _490);

  <bb 599> :
  i = i + 1;

  <bb 600> :
  if (i < size)
    goto <bb 586>; [INV]
  else
    goto <bb 601>; [INV]

  <bb 601> :
  i = i + 1;

  <bb 602> :
  _493 = (long unsigned int) i;
  _494 = std::vector<assign_type>::size (&assign_array.assign_type_array);
  retval.1191 = _493 < _494;
  if (retval.1191 != 0)
    goto <bb 356>; [INV]
  else
    goto <bb 603>; [INV]

  <bb 603> :
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};

  <bb 604> :
  getFunctionAssignVAR = {CLOBBER};

  <bb 605> :
  return;

  <bb 606> :
<L724>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 5

  <bb 607> :
<L725>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 4

  <bb 608> :
<L726>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  resx 3

  <bb 609> :
<L727>:
  second2 = {CLOBBER};
  resx 2

  <bb 610> :
<L728>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 13

  <bb 611> :
<L729>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 12

  <bb 612> :
<L730>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  resx 11

  <bb 613> :
<L731>:
  second2 = {CLOBBER};
  resx 10

  <bb 614> :
<L732>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 19

  <bb 615> :
<L733>:
  assign_array = {CLOBBER};
  resx 18

  <bb 616> :
<L734>:
  getFunctionAssignVAR = {CLOBBER};
  resx 1

}



;; Function function_assign_array::operator= (_ZN21function_assign_arrayaSEOS_, funcdef_no=6416, decl_uid=191026, cgraph_uid=3391, symbol_order=4167)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_assign_array & function_assign_array::operator= (struct function_assign_array * const this, struct function_assign_array & D.191027)
{
  struct function_assign_array & D.252760;

  <bb 2> :
  _1 = D.191027->pass;
  this->pass = _1;
  _2 = &D.191027->assign_type_array;
  _3 = &this->assign_type_array;
  std::vector<assign_type>::operator= (_3, _2);
  D.252760 = this;

  <bb 3> :
<L0>:
  return D.252760;

}



;; Function std::vector<assign_type>::operator= (_ZNSt6vectorI11assign_typeSaIS0_EEaSEOS2_, funcdef_no=7761, decl_uid=175195, cgraph_uid=4393, symbol_order=5178)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct vector & std::vector<assign_type>::operator= (struct vector * const this, struct vector & __x)
{
  const bool __move_storage;
  struct vector & D.252763;
  struct integral_constant D.252762;

  <bb 2> :
  __move_storage = 1;
  _1 = std::move<std::vector<assign_type>&> (__x);
  std::vector<assign_type>::_M_move_assign (this, _1, D.252762);
  D.252763 = this;

  <bb 3> :
<L0>:
  return D.252763;

}



;; Function std::move<std::vector<assign_type>&> (_ZSt4moveIRSt6vectorI11assign_typeSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_, funcdef_no=8703, decl_uid=213851, cgraph_uid=5335, symbol_order=6124)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::vector<assign_type>&> (struct vector & __t)
{
  struct type & D.252765;

  <bb 2> :
  D.252765 = __t;

  <bb 3> :
<L0>:
  return D.252765;

}



;; Function std::vector<assign_type>::_M_move_assign (_ZNSt6vectorI11assign_typeSaIS0_EE14_M_move_assignEOS2_St17integral_constantIbLb1EE, funcdef_no=8704, decl_uid=175473, cgraph_uid=5336, symbol_order=6125)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::_M_move_assign (struct vector * const this, struct vector & __x, struct true_type D.226154)
{
  struct vector __tmp;
  struct allocator_type D.226157;

  <bb 2> :
  _1 = &this->D.175605;
  D.226157 = std::_Vector_base<assign_type, std::allocator<assign_type> >::get_allocator (_1); [return slot optimization]
  std::vector<assign_type>::vector (&__tmp, &D.226157);
  std::allocator<assign_type>::~allocator (&D.226157);
  D.226157 = {CLOBBER};
  _2 = &this->D.175605._M_impl.D.174950;
  _3 = &__x->D.175605._M_impl.D.174950;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_swap_data (_2, _3);
  _4 = &__x->D.175605._M_impl.D.174950;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_swap_data (&__tmp.D.175605._M_impl.D.174950, _4);
  _5 = &__x->D.175605;
  _6 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_5);
  _7 = &this->D.175605;
  _8 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_7);
  std::__alloc_on_move<std::allocator<assign_type> > (_8, _6);
  std::vector<assign_type>::~vector (&__tmp);
  __tmp = {CLOBBER};
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::get_allocator (_ZNKSt12_Vector_baseI11assign_typeSaIS0_EE13get_allocatorEv, funcdef_no=9515, decl_uid=174842, cgraph_uid=6147, symbol_order=6936)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::_Vector_base<assign_type, std::allocator<assign_type> >::get_allocator (const struct _Vector_base * const this)
{
  <bb 2> :
  _1 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (this);
  std::allocator<assign_type>::allocator (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::vector<assign_type>::vector (_ZNSt6vectorI11assign_typeSaIS0_EEC2ERKS1_, funcdef_no=9517, decl_uid=175592, cgraph_uid=6149, symbol_order=6938)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::vector (struct vector * const this, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.175605;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_1, __a);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_ZNSt12_Vector_baseI11assign_typeSaIS0_EEC2ERKS1_, funcdef_no=10131, decl_uid=175050, cgraph_uid=6763, symbol_order=7556)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (struct _Vector_base * const this, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_1, __a);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_swap_data (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE17_Vector_impl_data12_M_swap_dataERS3_, funcdef_no=9519, decl_uid=174886, cgraph_uid=6151, symbol_order=6940)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_swap_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  struct _Vector_impl_data __tmp;

  <bb 2> :
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (&__tmp);
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_copy_data (&__tmp, this);
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_copy_data (this, __x);
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_copy_data (__x, &__tmp);
  __tmp = {CLOBBER};
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_copy_data (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE17_Vector_impl_data12_M_copy_dataERKS3_, funcdef_no=10133, decl_uid=174883, cgraph_uid=6765, symbol_order=7558)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_copy_data (struct _Vector_impl_data * const this, const struct _Vector_impl_data & __x)
{
  <bb 2> :
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  return;

}



;; Function std::__alloc_on_move<std::allocator<assign_type> > (_ZSt15__alloc_on_moveISaI11assign_typeEEvRT_S3_, funcdef_no=9520, decl_uid=226158, cgraph_uid=6152, symbol_order=6941)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_move<std::allocator<assign_type> > (struct allocator & __one, struct allocator & __two)
{
  <bb 2> :
  std::move<std::allocator<assign_type>&> (__two);
  return;

}



;; Function std::move<std::allocator<assign_type>&> (_ZSt4moveIRSaI11assign_typeEEONSt16remove_referenceIT_E4typeEOS4_, funcdef_no=10134, decl_uid=235351, cgraph_uid=6766, symbol_order=7559)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::allocator<assign_type>&> (struct allocator & __t)
{
  struct type & D.252769;

  <bb 2> :
  D.252769 = __t;

  <bb 3> :
<L0>:
  return D.252769;

}



;; Function gimple_call_fndecl (_ZL18gimple_call_fndeclPK6gimple, funcdef_no=2132, decl_uid=92888, cgraph_uid=1269, symbol_order=1429)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_fndecl (const struct gimple * gs)
{
  union tree_node * D.252774;
  const struct gcall * D.252773;
  const struct gcall * gc;
  union tree_node * D.252771;

  <bb 2> :
  D.252773 = GIMPLE_CHECK2<const gcall*> (gs);
  gc = D.252773;
  D.252774 = gimple_call_fndecl (gc);
  D.252771 = D.252774;

  <bb 3> :
<L0>:
  return D.252771;

}



;; Function gimple_call_fndecl (_ZL18gimple_call_fndeclPK5gcall, funcdef_no=2131, decl_uid=92885, cgraph_uid=1268, symbol_order=1428)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_fndecl (const struct gcall * gs)
{
  union tree_node * D.252777;
  union tree_node * D.252775;

  <bb 2> :
  _1 = gimple_call_fn (gs);
  D.252777 = gimple_call_addr_fndecl (_1);
  D.252775 = D.252777;

  <bb 3> :
<L0>:
  return D.252775;

}



;; Function gimple_call_addr_fndecl (_ZL23gimple_call_addr_fndeclPK9tree_node, funcdef_no=1909, decl_uid=89977, cgraph_uid=1048, symbol_order=1208)

Removing basic block 13
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;; 2 succs { 3 13 }
;; 3 succs { 4 13 }
;; 4 succs { 5 8 }
;; 5 succs { 6 8 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
union tree_node * gimple_call_addr_fndecl (const union tree_node * fn)
{
  bool D.252797;
  union tree_node * fndecl;
  union tree_node * D.252794;
  bool iftmp.1193;
  bool retval.1192;

  <bb 2> :
  if (fn != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 3> :
  _1 = fn->base.code;
  if (_1 == 131)
    goto <bb 4>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 4> :
  fndecl = fn->exp.operands[0];
  _2 = fndecl->base.code;
  if (_2 == 165)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  _3 = fndecl->exp.operands[0];
  _4 = _3->base.code;
  if (_4 == 131)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  _5 = fndecl->exp.operands[1];
  D.252797 = integer_zerop (_5);
  _6 = D.252797;
  if (_6 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1193 = 1;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.1193 = 0;

  <bb 9> :
  retval.1192 = iftmp.1193;
  if (retval.1192 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _7 = fndecl->exp.operands[0];
  fndecl = _7->exp.operands[0];

  <bb 11> :
  _8 = fndecl->base.code;
  if (_8 == 33)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.252794 = fndecl;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 14>; [INV]

  <bb 13> :
  D.252794 = 0B;

  <bb 14> :
<L15>:
  return D.252794;

}



;; Function Prenew_search_imm_use (_Z21Prenew_search_imm_useP12gimple_arrayP9tree_nodeS2_, funcdef_no=6417, decl_uid=187041, cgraph_uid=3393, symbol_order=4169)

Removing basic block 36
Removing basic block 39
Removing basic block 40
Removing basic block 48
Removing basic block 63
Removing basic block 64
Removing basic block 65
Removing basic block 89
Removing basic block 90
Removing basic block 91
Removing basic block 92
Removing basic block 93
Removing basic block 94
Removing basic block 95
Removing basic block 96
Removing basic block 97
Removing basic block 118
Removing basic block 119
Removing basic block 120
Removing basic block 121
Removing basic block 122
Removing basic block 123
Removing basic block 124
Removing basic block 132
Removing basic block 149
Removing basic block 150
Removing basic block 151
Removing basic block 152
Removing basic block 176
Removing basic block 177
Removing basic block 178
Removing basic block 179
Removing basic block 180
Removing basic block 181
Removing basic block 182
Removing basic block 183
Removing basic block 184
Removing basic block 205
Removing basic block 206
Removing basic block 207
Removing basic block 208
Removing basic block 209
Removing basic block 210
Removing basic block 211
Removing basic block 212
Removing basic block 221
Removing basic block 222
Removing basic block 230
Removing basic block 233
Removing basic block 234
Removing basic block 235
Removing basic block 238
Removing basic block 243
Removing basic block 246
Removing basic block 247
Removing basic block 248
Removing basic block 249
Removing basic block 250
Removing basic block 251
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 1
;;  header 192, latch 191
;;  depth 1, outer 0
;;  nodes
;;
;; Loop 2
;;  header 186, latch 185
;;  depth 2, outer 1
;;  nodes: 186 185 88 168 184 37 167 134 137 139 142 144 140 138 136 157 160 164 162 159 147 101 68 71 73 76 78 74 72 70 91 94 98 96 93 81 35 33 154 103 178 182 180 179 181 177 176 170 175 173 172 171 174 169 102 39 38 30 29 28 152 153 149 151 150 148 131 129 130 126 128 127 125 106 124 112 121 114 113 119 120 116 118 117 115 111 108 110 109 107 123 122 105 104 32 31 34 80 79 92 95 97 90 89 69 77 75 67 66 65 63 64 60 62 61 59 42 58 48 55 53 54 50 52 51 49 47 44 46 45 43 57 56 41 40 100 99 146 145 158 161 163 156 155 135 143 141 133 132 166 165 36 183 86 87 83 85 84 82
;; 2 succs { 3 193 }
;; 3 succs { 4 193 }
;; 4 succs { 5 193 }
;; 5 succs { 6 8 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 193 }
;; 10 succs { 11 193 }
;; 11 succs { 12 193 }
;; 12 succs { 192 }
;; 13 succs { 15 14 }
;; 14 succs { 15 16 }
;; 15 succs { 17 }
;; 16 succs { 17 }
;; 17 succs { 18 188 }
;; 18 succs { 195 19 }
;; 19 succs { 20 22 }
;; 20 succs { 195 21 }
;; 21 succs { 24 }
;; 22 succs { 195 23 }
;; 23 succs { 24 }
;; 24 succs { 194 25 }
;; 25 succs { 26 187 }
;; 26 succs { 194 27 }
;; 27 succs { 186 }
;; 28 succs { 29 168 }
;; 29 succs { 194 30 }
;; 30 succs { 31 38 }
;; 31 succs { 194 32 }
;; 32 succs { 194 33 }
;; 33 succs { 34 185 }
;; 34 succs { 35 36 }
;; 35 succs { 194 185 }
;; 36 succs { 194 37 }
;; 37 succs { 194 185 }
;; 38 succs { 194 39 }
;; 39 succs { 40 102 }
;; 40 succs { 194 41 }
;; 41 succs { 194 42 }
;; 42 succs { 43 59 }
;; 43 succs { 44 45 }
;; 44 succs { 194 47 }
;; 45 succs { 194 46 }
;; 46 succs { 194 47 }
;; 47 succs { 194 48 }
;; 48 succs { 49 59 }
;; 49 succs { 194 50 }
;; 50 succs { 51 54 }
;; 51 succs { 194 52 }
;; 52 succs { 53 54 }
;; 53 succs { 55 }
;; 54 succs { 55 }
;; 55 succs { 56 59 }
;; 56 succs { 194 57 }
;; 57 succs { 194 58 }
;; 58 succs { 194 59 }
;; 59 succs { 194 60 }
;; 60 succs { 61 64 }
;; 61 succs { 194 62 }
;; 62 succs { 63 64 }
;; 63 succs { 65 }
;; 64 succs { 65 }
;; 65 succs { 66 82 }
;; 66 succs { 194 67 }
;; 67 succs { 194 68 }
;; 68 succs { 69 185 }
;; 69 succs { 194 70 }
;; 70 succs { 71 185 }
;; 71 succs { 72 185 }
;; 72 succs { 73 185 }
;; 73 succs { 74 185 }
;; 74 succs { 75 185 }
;; 75 succs { 194 76 }
;; 76 succs { 77 185 }
;; 77 succs { 194 78 }
;; 78 succs { 79 185 }
;; 79 succs { 194 80 }
;; 80 succs { 194 81 }
;; 81 succs { 194 185 }
;; 82 succs { 194 83 }
;; 83 succs { 84 87 }
;; 84 succs { 194 85 }
;; 85 succs { 86 87 }
;; 86 succs { 88 }
;; 87 succs { 88 }
;; 88 succs { 89 185 }
;; 89 succs { 194 90 }
;; 90 succs { 194 91 }
;; 91 succs { 92 185 }
;; 92 succs { 194 93 }
;; 93 succs { 94 185 }
;; 94 succs { 95 185 }
;; 95 succs { 194 96 }
;; 96 succs { 97 185 }
;; 97 succs { 194 98 }
;; 98 succs { 99 185 }
;; 99 succs { 194 100 }
;; 100 succs { 194 101 }
;; 101 succs { 194 185 }
;; 102 succs { 194 103 }
;; 103 succs { 104 185 }
;; 104 succs { 194 105 }
;; 105 succs { 194 106 }
;; 106 succs { 107 125 }
;; 107 succs { 108 109 }
;; 108 succs { 194 111 }
;; 109 succs { 194 110 }
;; 110 succs { 194 111 }
;; 111 succs { 194 112 }
;; 112 succs { 113 125 }
;; 113 succs { 194 114 }
;; 114 succs { 115 125 }
;; 115 succs { 194 116 }
;; 116 succs { 117 120 }
;; 117 succs { 194 118 }
;; 118 succs { 119 120 }
;; 119 succs { 121 }
;; 120 succs { 121 }
;; 121 succs { 122 125 }
;; 122 succs { 194 123 }
;; 123 succs { 194 124 }
;; 124 succs { 194 125 }
;; 125 succs { 194 126 }
;; 126 succs { 127 130 }
;; 127 succs { 194 128 }
;; 128 succs { 129 130 }
;; 129 succs { 131 }
;; 130 succs { 131 }
;; 131 succs { 132 148 }
;; 132 succs { 194 133 }
;; 133 succs { 194 134 }
;; 134 succs { 135 185 }
;; 135 succs { 194 136 }
;; 136 succs { 137 185 }
;; 137 succs { 138 185 }
;; 138 succs { 139 185 }
;; 139 succs { 140 185 }
;; 140 succs { 141 185 }
;; 141 succs { 194 142 }
;; 142 succs { 143 185 }
;; 143 succs { 194 144 }
;; 144 succs { 145 185 }
;; 145 succs { 194 146 }
;; 146 succs { 194 147 }
;; 147 succs { 194 185 }
;; 148 succs { 194 149 }
;; 149 succs { 150 153 }
;; 150 succs { 194 151 }
;; 151 succs { 152 153 }
;; 152 succs { 154 }
;; 153 succs { 154 }
;; 154 succs { 155 185 }
;; 155 succs { 194 156 }
;; 156 succs { 194 157 }
;; 157 succs { 158 185 }
;; 158 succs { 194 159 }
;; 159 succs { 160 185 }
;; 160 succs { 161 185 }
;; 161 succs { 194 162 }
;; 162 succs { 163 185 }
;; 163 succs { 194 164 }
;; 164 succs { 165 185 }
;; 165 succs { 194 166 }
;; 166 succs { 194 167 }
;; 167 succs { 194 185 }
;; 168 succs { 169 185 }
;; 169 succs { 194 170 }
;; 170 succs { 171 176 }
;; 171 succs { 194 172 }
;; 172 succs { 194 173 }
;; 173 succs { 174 176 }
;; 174 succs { 194 175 }
;; 175 succs { 194 176 }
;; 176 succs { 194 177 }
;; 177 succs { 194 178 }
;; 178 succs { 179 185 }
;; 179 succs { 194 180 }
;; 180 succs { 181 185 }
;; 181 succs { 182 183 }
;; 182 succs { 194 185 }
;; 183 succs { 194 184 }
;; 184 succs { 194 185 }
;; 185 succs { 186 }
;; 186 succs { 28 187 }
;; 187 succs { 191 }
;; 188 succs { 189 191 }
;; 189 succs { 190 191 }
;; 190 succs { 191 }
;; 191 succs { 192 }
;; 192 succs { 13 193 }
;; 193 succs { 1 }
;; 194 succs { 195 }
;; 195 succs { }
void Prenew_search_imm_use (struct gimple_array * used_stmt, union tree_node * target, union tree_node * target2)
{
  unsigned int D.253162;
  union tree_node * D.253161;
  union tree_node * D.253160;
  int D.253159;
  union tree_node * D.253158;
  union tree_node * D.253157;
  union tree_node * D.253154;
  union tree_node * D.253153;
  int D.253152;
  union tree_node * D.253151;
  union tree_node * D.253150;
  int D.253149;
  union tree_node * D.253148;
  union tree_node * D.253147;
  union tree_node * D.253146;
  union tree_node * D.253145;
  union tree_node * D.253144;
  union tree_node * D.253143;
  union tree_node * D.253142;
  int D.253141;
  union tree_node * D.253140;
  union tree_node * D.253139;
  union tree_node * D.253138;
  union tree_node * D.253137;
  union tree_node * D.253136;
  union tree_node * D.253135;
  union tree_node * D.253134;
  union tree_node * D.253133;
  int D.253132;
  union tree_node * D.253131;
  union tree_node * D.253130;
  union tree_node * D.253129;
  union tree_node * D.253128;
  union tree_node * D.253127;
  int D.253126;
  union tree_node * D.253125;
  int D.253124;
  union tree_node * D.253123;
  union tree_node * D.253122;
  int D.253121;
  union tree_node * D.253120;
  union tree_node * D.253119;
  union tree_node * D.253118;
  union tree_node * D.253117;
  union tree_node * D.253116;
  union tree_node * D.253115;
  union tree_node * D.253114;
  int D.253113;
  union tree_node * D.253112;
  union tree_node * D.253111;
  union tree_node * D.253110;
  union tree_node * D.253109;
  union tree_node * D.253108;
  union tree_node * D.253107;
  union tree_node * D.253106;
  union tree_node * D.253105;
  int D.253104;
  union tree_node * D.253103;
  union tree_node * D.253102;
  union tree_node * D.253101;
  union tree_node * D.253100;
  union tree_node * D.253099;
  int D.253098;
  union tree_node * D.253097;
  int D.253096;
  union tree_node * D.253095;
  int D.253094;
  union tree_node * D.253093;
  union tree_node * D.253092;
  union tree_node * D.253091;
  int D.253090;
  union tree_node * D.253089;
  union tree_node * D.253088;
  struct function_assign_array * D.253087;
  union tree_node * D.253086;
  union tree_node * D.253085;
  union tree_node * D.253084;
  union tree_node * D.253083;
  union tree_node * D.253082;
  unsigned int D.253081;
  union tree_node * D.253080;
  union tree_node * D.253079;
  union tree_node * D.253078;
  union tree_node * D.253077;
  struct gimple * def_stmt;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second;
  int i;
  struct function_assign_array assign_array;
  union tree_node * getFunctionAssignVAR;
  union tree_node * second;
  int i;
  struct gimple * def_stmt;
  bool retval.1265;
  bool retval.1261;
  bool retval.1259;
  bool retval.1258;
  bool retval.1257;
  bool retval.1256;
  bool retval.1255;
  bool retval.1254;
  bool retval.1253;
  bool retval.1252;
  bool retval.1251;
  bool retval.1250;
  bool retval.1249;
  bool retval.1248;
  bool iftmp.1247;
  bool retval.1246;
  bool retval.1245;
  bool retval.1244;
  bool retval.1243;
  bool retval.1242;
  bool iftmp.1241;
  bool retval.1240;
  bool iftmp.1239;
  bool retval.1238;
  bool retval.1237;
  bool retval.1236;
  bool retval.1235;
  bool retval.1234;
  bool retval.1233;
  bool retval.1232;
  bool retval.1231;
  bool retval.1230;
  bool retval.1229;
  bool iftmp.1228;
  bool retval.1227;
  bool retval.1226;
  bool retval.1225;
  bool retval.1224;
  bool retval.1223;
  bool iftmp.1222;
  bool retval.1221;
  bool iftmp.1220;
  bool retval.1219;
  bool retval.1218;
  bool retval.1217;
  bool retval.1216;
  bool retval.1215;
  bool retval.1214;
  bool retval.1213;
  bool retval.1212;
  bool retval.1211;
  struct function_assign_array D.196259;
  bool retval.1208;
  bool retval.1204;
  bool iftmp.1201;
  bool retval.1200;
  bool retval.1199;
  bool retval.1198;
  bool iftmp.1197;
  bool retval.1196;
  bool retval.1195;
  bool retval.1194;

  <bb 2> :
  def_stmt = target->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 3> :
  _1 = gimple_code (def_stmt);
  retval.1194 = _1 == 8;
  if (retval.1194 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 4> :
  D.253077 = gimple_call_lhs (def_stmt);
  _2 = D.253077;
  retval.1195 = _2 != 0B;
  if (retval.1195 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 5> :
  D.253078 = gimple_call_lhs (def_stmt);
  _3 = D.253078;
  if (_3 != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  D.253079 = gimple_call_lhs (def_stmt);
  _4 = D.253079;
  _5 = _4->base.code;
  if (_5 == 153)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1197 = 1;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.1197 = 0;

  <bb 9> :
  retval.1196 = iftmp.1197;
  if (retval.1196 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 10> :
  D.253080 = gimple_assign_rhs1 (def_stmt);
  _6 = D.253080;
  retval.1198 = _6 != 0B;
  if (retval.1198 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 11> :
  D.253081 = gimple_call_num_args (def_stmt);
  _7 = D.253081;
  retval.1199 = _7 != 0;
  if (retval.1199 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 12> :
  i = 0;
  goto <bb 192>; [INV]

  <bb 13> :
  i.1202_8 = (unsigned int) i;
  D.253082 = gimple_call_arg (def_stmt, i.1202_8);
  _9 = D.253082;
  _10 = _9->base.code;
  if (_10 == 131)
    goto <bb 15>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  i.1203_11 = (unsigned int) i;
  D.253083 = gimple_call_arg (def_stmt, i.1203_11);
  _12 = D.253083;
  _13 = _12->base.code;
  if (_13 == 36)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  iftmp.1201 = 1;
  goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1201 = 0;

  <bb 17> :
  retval.1200 = iftmp.1201;
  if (retval.1200 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 188>; [INV]

  <bb 18> :
  i.1205_14 = (unsigned int) i;
  D.253084 = gimple_call_arg (def_stmt, i.1205_14);

  <bb 19> :
  _15 = D.253084;
  _16 = _15->base.code;
  retval.1204 = _16 == 131;
  if (retval.1204 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 20> :
  i.1206_17 = (unsigned int) i;
  D.253085 = gimple_call_arg (def_stmt, i.1206_17);

  <bb 21> :
  _18 = D.253085;
  second = _18->exp.operands[0];
  goto <bb 24>; [INV]

  <bb 22> :
  i.1207_19 = (unsigned int) i;
  D.253086 = gimple_call_arg (def_stmt, i.1207_19);

  <bb 23> :
  second = D.253086;

  <bb 24> :
  getFunctionAssignVAR = second;
  function_assign_array::function_assign_array (&assign_array);
  function_assign_collect.1209_20 = function_assign_collect;
  D.253087 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1209_20, &getFunctionAssignVAR);

  <bb 25> :
  _21 = D.253087;
  retval.1208 = _21 != 0B;
  if (retval.1208 != 0)
    goto <bb 26>; [INV]
  else
    goto <bb 187>; [INV]

  <bb 26> :
  getFunctionAssignVAR.1210_22 = getFunctionAssignVAR;
  D.196259 = ret_function_varstmt (getFunctionAssignVAR.1210_22); [return slot optimization]

  <bb 27> :
  function_assign_array::operator= (&assign_array, &D.196259);
  function_assign_array::~function_assign_array (&D.196259);
  D.196259 = {CLOBBER};
  i = 0;
  goto <bb 186>; [INV]

  <bb 28> :
  _23 = (long unsigned int) i;
  _24 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _23);
  _25 = _24->stmt;
  _26 = gimple_code (_25);
  retval.1211 = _26 == 6;
  if (retval.1211 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 168>; [INV]

  <bb 29> :
  _27 = (long unsigned int) i;
  _28 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _27);
  _29 = _28->stmt;
  D.253088 = gimple_assign_lhs (_29);

  <bb 30> :
  _30 = D.253088;
  _31 = _30->base.code;
  retval.1212 = _31 == 165;
  if (retval.1212 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 31> :
  _32 = (long unsigned int) i;
  _33 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _32);
  _34 = _33->stmt;
  D.253089 = gimple_assign_lhs (_34);

  <bb 32> :
  _35 = D.253089;
  D.253090 = check_stmtStack (_35);

  <bb 33> :
  _36 = D.253090;
  retval.1213 = _36 == 0;
  if (retval.1213 != 0)
    goto <bb 34>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 34> :
  _37 = (long unsigned int) i;
  _38 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _37);
  _39 = _38->form_tree;
  retval.1214 = _39 != 0B;
  if (retval.1214 != 0)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  _40 = (long unsigned int) i;
  _41 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _40);
  _42 = _41->form_tree;
  _43 = (long unsigned int) i;
  _44 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _43);
  _45 = _44->stmt;
  set_gimple_array (used_stmt, _45, _42, target, 0B);
  goto <bb 185>; [INV]

  <bb 36> :
  _46 = (long unsigned int) i;
  _47 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _46);
  _48 = _47->stmt;
  D.253091 = gimple_assign_lhs (_48);

  <bb 37> :
  _49 = D.253091;
  _50 = (long unsigned int) i;
  _51 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _50);
  _52 = _51->stmt;
  set_gimple_array (used_stmt, _52, _49, target, 0B);
  goto <bb 185>; [INV]

  <bb 38> :
  _53 = (long unsigned int) i;
  _54 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _53);
  _55 = _54->stmt;
  D.253092 = gimple_assign_lhs (_55);

  <bb 39> :
  _56 = D.253092;
  _57 = _56->base.code;
  retval.1215 = _57 == 153;
  if (retval.1215 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 40> :
  _58 = (long unsigned int) i;
  _59 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _58);
  _60 = _59->stmt;
  D.253093 = gimple_assign_lhs (_60);

  <bb 41> :
  _61 = D.253093;
  D.253094 = check_stmtStack (_61);

  <bb 42> :
  _62 = D.253094;
  retval.1216 = _62 == 0;
  if (retval.1216 != 0)
    goto <bb 43>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 43> :
  _63 = (long unsigned int) i;
  _64 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _63);
  _65 = _64->form_tree;
  retval.1217 = _65 != 0B;
  if (retval.1217 != 0)
    goto <bb 44>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 44> :
  _66 = (long unsigned int) i;
  _67 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _66);
  _68 = _67->form_tree;
  _69 = (long unsigned int) i;
  _70 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _69);
  _71 = _70->stmt;
  set_gimple_array (used_stmt, _71, _68, target, 0B);
  goto <bb 47>; [INV]

  <bb 45> :
  _72 = (long unsigned int) i;
  _73 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _72);
  _74 = _73->stmt;
  D.253095 = gimple_assign_lhs (_74);

  <bb 46> :
  _75 = D.253095;
  _76 = (long unsigned int) i;
  _77 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _76);
  _78 = _77->stmt;
  set_gimple_array (used_stmt, _78, _75, target, 0B);

  <bb 47> :
  _79 = (long unsigned int) i;
  _80 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _79);
  _81 = _80->stmt;
  D.253096 = check_stmtStack4 (_81);

  <bb 48> :
  _82 = D.253096;
  retval.1218 = _82 == 0;
  if (retval.1218 != 0)
    goto <bb 49>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 49> :
  _83 = (long unsigned int) i;
  _84 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _83);
  _85 = _84->stmt;
  D.253097 = gimple_assign_lhs (_85);

  <bb 50> :
  _86 = D.253097;
  if (target2 != _86)
    goto <bb 51>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 51> :
  _87 = (long unsigned int) i;
  _88 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _87);
  _89 = _88->stmt;
  D.253098 = check_stmtStack2 (_89);

  <bb 52> :
  _90 = D.253098;
  if (_90 == 0)
    goto <bb 53>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 53> :
  iftmp.1220 = 1;
  goto <bb 55>; [INV]

  <bb 54> :
  iftmp.1220 = 0;

  <bb 55> :
  retval.1219 = iftmp.1220;
  if (retval.1219 != 0)
    goto <bb 56>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 56> :
  _91 = (long unsigned int) i;
  _92 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _91);
  _93 = _92->stmt;
  D.253099 = gimple_assign_lhs (_93);

  <bb 57> :
  _94 = D.253099;
  _95 = (long unsigned int) i;
  _96 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _95);
  _97 = _96->stmt;
  D.253100 = gimple_assign_lhs (_97);

  <bb 58> :
  _98 = D.253100;
  new_search_imm_use (used_stmt, _98, _94);

  <bb 59> :
  _99 = (long unsigned int) i;
  _100 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _99);
  _101 = _100->stmt;
  D.253101 = gimple_assign_rhs1 (_101);

  <bb 60> :
  _102 = D.253101;
  if (_102 != 0B)
    goto <bb 61>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 61> :
  _103 = (long unsigned int) i;
  _104 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _103);
  _105 = _104->stmt;
  D.253102 = gimple_assign_rhs1 (_105);

  <bb 62> :
  _106 = D.253102;
  _107 = _106->base.code;
  if (_107 == 47)
    goto <bb 63>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 63> :
  iftmp.1222 = 1;
  goto <bb 65>; [INV]

  <bb 64> :
  iftmp.1222 = 0;

  <bb 65> :
  retval.1221 = iftmp.1222;
  if (retval.1221 != 0)
    goto <bb 66>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 66> :
  _108 = (long unsigned int) i;
  _109 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _108);
  _110 = _109->stmt;
  D.253103 = gimple_assign_rhs1 (_110);

  <bb 67> :
  _111 = D.253103;
  D.253104 = check_stmtStack (_111);

  <bb 68> :
  _112 = D.253104;
  retval.1223 = _112 == 0;
  if (retval.1223 != 0)
    goto <bb 69>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 69> :
  _113 = (long unsigned int) i;
  _114 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _113);
  _115 = _114->stmt;
  D.253105 = gimple_assign_rhs1 (_115);

  <bb 70> :
  _116 = D.253105;
  second = _116->exp.operands[0];
  if (second != 0B)
    goto <bb 71>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 71> :
  _117 = second->base.code;
  if (_117 == 165)
    goto <bb 72>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 72> :
  three = second->exp.operands[0];
  if (three != 0B)
    goto <bb 73>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 73> :
  _118 = three->base.code;
  if (_118 == 153)
    goto <bb 74>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 74> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1224 = is_gimple_assign (def_stmt);
  if (retval.1224 != 0)
    goto <bb 75>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 75> :
  D.253106 = gimple_assign_lhs (def_stmt);

  <bb 76> :
  _119 = D.253106;
  _120 = _119->base.code;
  retval.1225 = _120 == 153;
  if (retval.1225 != 0)
    goto <bb 77>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 77> :
  D.253107 = gimple_assign_lhs (def_stmt);

  <bb 78> :
  _121 = D.253107;
  retval.1226 = target2 != _121;
  if (retval.1226 != 0)
    goto <bb 79>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 79> :
  D.253108 = gimple_assign_lhs (def_stmt);

  <bb 80> :
  _122 = D.253108;
  D.253109 = gimple_assign_lhs (def_stmt);

  <bb 81> :
  _123 = D.253109;
  new_search_imm_use (used_stmt, _123, _122);
  goto <bb 185>; [INV]

  <bb 82> :
  _124 = (long unsigned int) i;
  _125 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _124);
  _126 = _125->stmt;
  D.253110 = gimple_assign_rhs1 (_126);

  <bb 83> :
  _127 = D.253110;
  if (_127 != 0B)
    goto <bb 84>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 84> :
  _128 = (long unsigned int) i;
  _129 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _128);
  _130 = _129->stmt;
  D.253111 = gimple_assign_rhs1 (_130);

  <bb 85> :
  _131 = D.253111;
  _132 = _131->base.code;
  if (_132 == 165)
    goto <bb 86>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 86> :
  iftmp.1228 = 1;
  goto <bb 88>; [INV]

  <bb 87> :
  iftmp.1228 = 0;

  <bb 88> :
  retval.1227 = iftmp.1228;
  if (retval.1227 != 0)
    goto <bb 89>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 89> :
  _133 = (long unsigned int) i;
  _134 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _133);
  _135 = _134->stmt;
  D.253112 = gimple_assign_rhs1 (_135);

  <bb 90> :
  _136 = D.253112;
  D.253113 = check_stmtStack (_136);

  <bb 91> :
  _137 = D.253113;
  retval.1229 = _137 == 0;
  if (retval.1229 != 0)
    goto <bb 92>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 92> :
  _138 = (long unsigned int) i;
  _139 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _138);
  _140 = _139->stmt;
  D.253114 = gimple_assign_rhs1 (_140);

  <bb 93> :
  _141 = D.253114;
  second = _141->exp.operands[0];
  _142 = second->base.code;
  if (_142 == 165)
    goto <bb 94>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 94> :
  def_stmt = second->ssa_name.def_stmt;
  retval.1230 = is_gimple_assign (def_stmt);
  if (retval.1230 != 0)
    goto <bb 95>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 95> :
  D.253115 = gimple_assign_lhs (def_stmt);

  <bb 96> :
  _143 = D.253115;
  _144 = _143->base.code;
  retval.1231 = _144 == 153;
  if (retval.1231 != 0)
    goto <bb 97>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 97> :
  D.253116 = gimple_assign_lhs (def_stmt);

  <bb 98> :
  _145 = D.253116;
  retval.1232 = target2 != _145;
  if (retval.1232 != 0)
    goto <bb 99>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 99> :
  D.253117 = gimple_assign_lhs (def_stmt);

  <bb 100> :
  _146 = D.253117;
  D.253118 = gimple_assign_lhs (def_stmt);

  <bb 101> :
  _147 = D.253118;
  new_search_imm_use (used_stmt, _147, _146);
  goto <bb 185>; [INV]

  <bb 102> :
  _148 = (long unsigned int) i;
  _149 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _148);
  _150 = _149->stmt;
  D.253119 = gimple_assign_rhs1 (_150);

  <bb 103> :
  _151 = D.253119;
  _152 = _151->base.code;
  retval.1233 = _152 == 153;
  if (retval.1233 != 0)
    goto <bb 104>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 104> :
  _153 = (long unsigned int) i;
  _154 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _153);
  _155 = _154->stmt;
  D.253120 = gimple_assign_rhs1 (_155);

  <bb 105> :
  _156 = D.253120;
  D.253121 = check_stmtStack (_156);

  <bb 106> :
  _157 = D.253121;
  retval.1234 = _157 == 0;
  if (retval.1234 != 0)
    goto <bb 107>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 107> :
  _158 = (long unsigned int) i;
  _159 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _158);
  _160 = _159->form_tree;
  retval.1235 = _160 != 0B;
  if (retval.1235 != 0)
    goto <bb 108>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 108> :
  _161 = (long unsigned int) i;
  _162 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _161);
  _163 = _162->form_tree;
  _164 = (long unsigned int) i;
  _165 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _164);
  _166 = _165->stmt;
  set_gimple_array (used_stmt, _166, _163, target, 0B);
  goto <bb 111>; [INV]

  <bb 109> :
  _167 = (long unsigned int) i;
  _168 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _167);
  _169 = _168->stmt;
  D.253122 = gimple_assign_rhs1 (_169);

  <bb 110> :
  _170 = D.253122;
  _171 = (long unsigned int) i;
  _172 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _171);
  _173 = _172->stmt;
  set_gimple_array (used_stmt, _173, _170, target, 0B);

  <bb 111> :
  _174 = (long unsigned int) i;
  _175 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _174);
  _176 = _175->stmt;
  D.253123 = gimple_assign_rhs1 (_176);

  <bb 112> :
  _177 = D.253123;
  retval.1236 = target2 != _177;
  if (retval.1236 != 0)
    goto <bb 113>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 113> :
  _178 = (long unsigned int) i;
  _179 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _178);
  _180 = _179->stmt;
  D.253124 = check_stmtStack4 (_180);

  <bb 114> :
  _181 = D.253124;
  retval.1237 = _181 == 0;
  if (retval.1237 != 0)
    goto <bb 115>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 115> :
  _182 = (long unsigned int) i;
  _183 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _182);
  _184 = _183->stmt;
  D.253125 = gimple_assign_rhs1 (_184);

  <bb 116> :
  _185 = D.253125;
  if (target2 != _185)
    goto <bb 117>; [INV]
  else
    goto <bb 120>; [INV]

  <bb 117> :
  _186 = (long unsigned int) i;
  _187 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _186);
  _188 = _187->stmt;
  D.253126 = check_stmtStack2 (_188);

  <bb 118> :
  _189 = D.253126;
  if (_189 == 0)
    goto <bb 119>; [INV]
  else
    goto <bb 120>; [INV]

  <bb 119> :
  iftmp.1239 = 1;
  goto <bb 121>; [INV]

  <bb 120> :
  iftmp.1239 = 0;

  <bb 121> :
  retval.1238 = iftmp.1239;
  if (retval.1238 != 0)
    goto <bb 122>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 122> :
  _190 = (long unsigned int) i;
  _191 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _190);
  _192 = _191->stmt;
  D.253127 = gimple_assign_rhs1 (_192);

  <bb 123> :
  _193 = D.253127;
  _194 = (long unsigned int) i;
  _195 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _194);
  _196 = _195->stmt;
  D.253128 = gimple_assign_rhs1 (_196);

  <bb 124> :
  _197 = D.253128;
  new_search_imm_use (used_stmt, _197, _193);

  <bb 125> :
  _198 = (long unsigned int) i;
  _199 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _198);
  _200 = _199->stmt;
  D.253129 = gimple_assign_lhs (_200);

  <bb 126> :
  _201 = D.253129;
  if (_201 != 0B)
    goto <bb 127>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 127> :
  _202 = (long unsigned int) i;
  _203 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _202);
  _204 = _203->stmt;
  D.253130 = gimple_assign_lhs (_204);

  <bb 128> :
  _205 = D.253130;
  _206 = _205->base.code;
  if (_206 == 47)
    goto <bb 129>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 129> :
  iftmp.1241 = 1;
  goto <bb 131>; [INV]

  <bb 130> :
  iftmp.1241 = 0;

  <bb 131> :
  retval.1240 = iftmp.1241;
  if (retval.1240 != 0)
    goto <bb 132>; [INV]
  else
    goto <bb 148>; [INV]

  <bb 132> :
  _207 = (long unsigned int) i;
  _208 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _207);
  _209 = _208->stmt;
  D.253131 = gimple_assign_lhs (_209);

  <bb 133> :
  _210 = D.253131;
  D.253132 = check_stmtStack (_210);

  <bb 134> :
  _211 = D.253132;
  retval.1242 = _211 == 0;
  if (retval.1242 != 0)
    goto <bb 135>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 135> :
  _212 = (long unsigned int) i;
  _213 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _212);
  _214 = _213->stmt;
  D.253133 = gimple_assign_lhs (_214);

  <bb 136> :
  _215 = D.253133;
  second = _215->exp.operands[0];
  if (second != 0B)
    goto <bb 137>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 137> :
  _216 = second->base.code;
  if (_216 == 165)
    goto <bb 138>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 138> :
  three = second->exp.operands[0];
  if (three != 0B)
    goto <bb 139>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 139> :
  _217 = three->base.code;
  if (_217 == 153)
    goto <bb 140>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 140> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1243 = is_gimple_assign (def_stmt);
  if (retval.1243 != 0)
    goto <bb 141>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 141> :
  D.253134 = gimple_assign_lhs (def_stmt);

  <bb 142> :
  _218 = D.253134;
  _219 = _218->base.code;
  retval.1244 = _219 == 153;
  if (retval.1244 != 0)
    goto <bb 143>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 143> :
  D.253135 = gimple_assign_lhs (def_stmt);

  <bb 144> :
  _220 = D.253135;
  retval.1245 = target2 != _220;
  if (retval.1245 != 0)
    goto <bb 145>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 145> :
  D.253136 = gimple_assign_lhs (def_stmt);

  <bb 146> :
  _221 = D.253136;
  D.253137 = gimple_assign_lhs (def_stmt);

  <bb 147> :
  _222 = D.253137;
  new_search_imm_use (used_stmt, _222, _221);
  goto <bb 185>; [INV]

  <bb 148> :
  _223 = (long unsigned int) i;
  _224 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _223);
  _225 = _224->stmt;
  D.253138 = gimple_assign_lhs (_225);

  <bb 149> :
  _226 = D.253138;
  if (_226 != 0B)
    goto <bb 150>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 150> :
  _227 = (long unsigned int) i;
  _228 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _227);
  _229 = _228->stmt;
  D.253139 = gimple_assign_lhs (_229);

  <bb 151> :
  _230 = D.253139;
  _231 = _230->base.code;
  if (_231 == 165)
    goto <bb 152>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 152> :
  iftmp.1247 = 1;
  goto <bb 154>; [INV]

  <bb 153> :
  iftmp.1247 = 0;

  <bb 154> :
  retval.1246 = iftmp.1247;
  if (retval.1246 != 0)
    goto <bb 155>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 155> :
  _232 = (long unsigned int) i;
  _233 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _232);
  _234 = _233->stmt;
  D.253140 = gimple_assign_lhs (_234);

  <bb 156> :
  _235 = D.253140;
  D.253141 = check_stmtStack (_235);

  <bb 157> :
  _236 = D.253141;
  retval.1248 = _236 == 0;
  if (retval.1248 != 0)
    goto <bb 158>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 158> :
  _237 = (long unsigned int) i;
  _238 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _237);
  _239 = _238->stmt;
  D.253142 = gimple_assign_lhs (_239);

  <bb 159> :
  _240 = D.253142;
  second = _240->exp.operands[0];
  _241 = second->base.code;
  if (_241 == 165)
    goto <bb 160>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 160> :
  def_stmt = second->ssa_name.def_stmt;
  retval.1249 = is_gimple_assign (def_stmt);
  if (retval.1249 != 0)
    goto <bb 161>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 161> :
  D.253143 = gimple_assign_lhs (def_stmt);

  <bb 162> :
  _242 = D.253143;
  _243 = _242->base.code;
  retval.1250 = _243 == 153;
  if (retval.1250 != 0)
    goto <bb 163>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 163> :
  D.253144 = gimple_assign_lhs (def_stmt);

  <bb 164> :
  _244 = D.253144;
  retval.1251 = target2 != _244;
  if (retval.1251 != 0)
    goto <bb 165>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 165> :
  D.253145 = gimple_assign_lhs (def_stmt);

  <bb 166> :
  _245 = D.253145;
  D.253146 = gimple_assign_lhs (def_stmt);

  <bb 167> :
  _246 = D.253146;
  new_search_imm_use (used_stmt, _246, _245);
  goto <bb 185>; [INV]

  <bb 168> :
  _247 = (long unsigned int) i;
  _248 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _247);
  _249 = _248->stmt;
  _250 = gimple_code (_249);
  retval.1252 = _250 == 8;
  if (retval.1252 != 0)
    goto <bb 169>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 169> :
  _251 = (long unsigned int) i;
  _252 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _251);
  _253 = _252->stmt;
  D.253147 = gimple_call_arg (_253, 0);

  <bb 170> :
  _254 = D.253147;
  _255 = _254->base.code;
  retval.1253 = _255 == 131;
  if (retval.1253 != 0)
    goto <bb 171>; [INV]
  else
    goto <bb 176>; [INV]

  <bb 171> :
  _256 = (long unsigned int) i;
  _257 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _256);
  _258 = _257->stmt;
  D.253148 = gimple_call_arg (_258, 0);

  <bb 172> :
  _259 = D.253148;
  D.253149 = check_stmtStack (_259);

  <bb 173> :
  _260 = D.253149;
  retval.1254 = _260 == 0;
  if (retval.1254 != 0)
    goto <bb 174>; [INV]
  else
    goto <bb 176>; [INV]

  <bb 174> :
  _261 = (long unsigned int) i;
  _262 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _261);
  _263 = _262->stmt;
  D.253150 = gimple_call_arg (_263, 0);

  <bb 175> :
  _264 = D.253150;
  _265 = (long unsigned int) i;
  _266 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _265);
  _267 = _266->stmt;
  set_gimple_array (used_stmt, _267, _264, target, 0B);

  <bb 176> :
  _268 = (long unsigned int) i;
  _269 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _268);
  _270 = _269->stmt;
  D.253151 = gimple_call_arg (_270, 0);

  <bb 177> :
  _271 = D.253151;
  D.253152 = check_stmtStack (_271);

  <bb 178> :
  _272 = D.253152;
  retval.1255 = _272 == 0;
  if (retval.1255 != 0)
    goto <bb 179>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 179> :
  _273 = (long unsigned int) i;
  _274 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _273);
  _275 = _274->stmt;
  D.253153 = gimple_call_arg (_275, 0);

  <bb 180> :
  _276 = D.253153;
  _277 = _276->base.code;
  retval.1256 = _277 == 153;
  if (retval.1256 != 0)
    goto <bb 181>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 181> :
  _278 = (long unsigned int) i;
  _279 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _278);
  _280 = _279->form_tree;
  retval.1257 = _280 != 0B;
  if (retval.1257 != 0)
    goto <bb 182>; [INV]
  else
    goto <bb 183>; [INV]

  <bb 182> :
  _281 = (long unsigned int) i;
  _282 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _281);
  _283 = _282->form_tree;
  _284 = (long unsigned int) i;
  _285 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _284);
  _286 = _285->stmt;
  set_gimple_array (used_stmt, _286, _283, target, 0B);
  goto <bb 185>; [INV]

  <bb 183> :
  _287 = (long unsigned int) i;
  _288 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _287);
  _289 = _288->stmt;
  D.253154 = gimple_call_arg (_289, 0);

  <bb 184> :
  _290 = D.253154;
  _291 = (long unsigned int) i;
  _292 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _291);
  _293 = _292->stmt;
  set_gimple_array (used_stmt, _293, _290, target, 0B);

  <bb 185> :
  i = i + 1;

  <bb 186> :
  _294 = (long unsigned int) i;
  _295 = std::vector<assign_type>::size (&assign_array.assign_type_array);
  retval.1258 = _294 < _295;
  if (retval.1258 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 187>; [INV]

  <bb 187> :
  function_assign_array::~function_assign_array (&assign_array);
  getFunctionAssignVAR = {CLOBBER};
  assign_array = {CLOBBER};
  goto <bb 191>; [INV]

  <bb 188> :
  i.1260_296 = (unsigned int) i;
  D.253157 = gimple_call_arg (def_stmt, i.1260_296);
  _297 = D.253157;
  _298 = _297->base.code;
  retval.1259 = _298 == 153;
  if (retval.1259 != 0)
    goto <bb 189>; [INV]
  else
    goto <bb 191>; [INV]

  <bb 189> :
  i.1262_299 = (unsigned int) i;
  D.253158 = gimple_call_arg (def_stmt, i.1262_299);
  _300 = D.253158;
  D.253159 = check_stmtStack (_300);
  _301 = D.253159;
  retval.1261 = _301 == 0;
  if (retval.1261 != 0)
    goto <bb 190>; [INV]
  else
    goto <bb 191>; [INV]

  <bb 190> :
  i.1263_302 = (unsigned int) i;
  D.253160 = gimple_call_arg (def_stmt, i.1263_302);
  _303 = D.253160;
  i.1264_304 = (unsigned int) i;
  D.253161 = gimple_call_arg (def_stmt, i.1264_304);
  _305 = D.253161;
  new_search_imm_use (used_stmt, _305, _303);

  <bb 191> :
  i = i + 1;

  <bb 192> :
  D.253162 = gimple_call_num_args (def_stmt);
  _306 = D.253162;
  i.1266_307 = (unsigned int) i;
  retval.1265 = _306 > i.1266_307;
  if (retval.1265 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 193> :
  return;

  <bb 194> :
<L224>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 2

  <bb 195> :
<L225>:
  getFunctionAssignVAR = {CLOBBER};
  assign_array = {CLOBBER};
  resx 1

}



;; Function new_search_imm_use (_Z18new_search_imm_useP12gimple_arrayP9tree_nodeS2_, funcdef_no=6418, decl_uid=187037, cgraph_uid=3394, symbol_order=4170)

Removing basic block 11
Removing basic block 12
Removing basic block 16
Removing basic block 39
Removing basic block 40
Removing basic block 41
Removing basic block 42
Removing basic block 43
Removing basic block 49
Removing basic block 50
Removing basic block 76
Removing basic block 78
Removing basic block 90
Removing basic block 92
Removing basic block 93
Removing basic block 94
Removing basic block 106
Removing basic block 108
Removing basic block 109
Removing basic block 118
Removing basic block 120
Removing basic block 121
Removing basic block 125
Removing basic block 132
Removing basic block 142
Removing basic block 143
Removing basic block 144
Removing basic block 159
Removing basic block 160
Removing basic block 161
Removing basic block 162
Removing basic block 189
Removing basic block 190
Removing basic block 191
Removing basic block 192
Removing basic block 193
Removing basic block 214
Removing basic block 215
Removing basic block 228
Removing basic block 229
Removing basic block 230
Removing basic block 231
Removing basic block 232
Removing basic block 245
Removing basic block 246
Removing basic block 256
Removing basic block 284
Removing basic block 290
Removing basic block 291
Removing basic block 304
Removing basic block 310
Removing basic block 311
Removing basic block 312
Removing basic block 321
Removing basic block 322
Removing basic block 323
Removing basic block 326
Removing basic block 328
Removing basic block 338
Removing basic block 339
Removing basic block 362
Removing basic block 363
Removing basic block 386
Removing basic block 387
Removing basic block 388
Removing basic block 389
Removing basic block 390
Removing basic block 394
Removing basic block 395
Removing basic block 396
Removing basic block 397
Removing basic block 398
Removing basic block 409
Removing basic block 410
Removing basic block 412
Removing basic block 413
Removing basic block 417
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 2
;;  header 325, latch 324
;;  depth 1, outer 0
;;  nodes: 325 324 311 323 313 318 320 315 314 319 317 316 312 322 321 310 326
;;
;; Loop 1
;;  header 269, latch 268
;;  depth 1, outer 0
;;  nodes: 269 268 249 260 267 242 252 235 259 262 265 264 263 261 258 257 254 256 255 253 234 233 232 230 231 227 229 228 226 225 251 250 241 240 237 239 238 236 266 247 248 244 246 245 243
;; 2 succs { 4 3 }
;; 3 succs { 4 341 }
;; 4 succs { 5 7 }
;; 5 succs { 346 6 }
;; 6 succs { 208 }
;; 7 succs { 8 11 }
;; 8 succs { 9 11 }
;; 9 succs { 10 11 }
;; 10 succs { 22 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 342 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 341 }
;; 19 succs { 340 }
;; 20 succs { 346 21 }
;; 21 succs { 22 338 }
;; 22 succs { 346 23 }
;; 23 succs { 24 36 }
;; 24 succs { 25 36 }
;; 25 succs { 346 26 }
;; 26 succs { 27 36 }
;; 27 succs { 346 28 }
;; 28 succs { 29 31 }
;; 29 succs { 30 31 }
;; 30 succs { 32 }
;; 31 succs { 32 }
;; 32 succs { 33 36 }
;; 33 succs { 346 34 }
;; 34 succs { 35 36 }
;; 35 succs { 346 36 }
;; 36 succs { 37 41 }
;; 37 succs { 346 38 }
;; 38 succs { 346 39 }
;; 39 succs { 40 338 }
;; 40 succs { 346 338 }
;; 41 succs { 42 133 }
;; 42 succs { 346 43 }
;; 43 succs { 346 44 }
;; 44 succs { 346 45 }
;; 45 succs { 346 46 }
;; 46 succs { 47 92 }
;; 47 succs { 48 92 }
;; 48 succs { 346 49 }
;; 49 succs { 50 79 }
;; 50 succs { 346 51 }
;; 51 succs { 52 56 }
;; 52 succs { 346 53 }
;; 53 succs { 346 54 }
;; 54 succs { 55 56 }
;; 55 succs { 57 }
;; 56 succs { 57 }
;; 57 succs { 58 67 }
;; 58 succs { 346 59 }
;; 59 succs { 60 63 }
;; 60 succs { 346 61 }
;; 61 succs { 62 63 }
;; 62 succs { 64 }
;; 63 succs { 64 }
;; 64 succs { 65 66 }
;; 65 succs { 346 66 }
;; 66 succs { 346 91 }
;; 67 succs { 68 91 }
;; 68 succs { 69 91 }
;; 69 succs { 346 70 }
;; 70 succs { 71 91 }
;; 71 succs { 72 75 }
;; 72 succs { 346 73 }
;; 73 succs { 74 75 }
;; 74 succs { 76 }
;; 75 succs { 76 }
;; 76 succs { 77 78 }
;; 77 succs { 346 78 }
;; 78 succs { 346 91 }
;; 79 succs { 80 91 }
;; 80 succs { 81 91 }
;; 81 succs { 346 82 }
;; 82 succs { 83 91 }
;; 83 succs { 84 87 }
;; 84 succs { 346 85 }
;; 85 succs { 86 87 }
;; 86 succs { 88 }
;; 87 succs { 88 }
;; 88 succs { 89 90 }
;; 89 succs { 346 90 }
;; 90 succs { 346 91 }
;; 91 succs { 100 }
;; 92 succs { 93 100 }
;; 93 succs { 94 100 }
;; 94 succs { 346 95 }
;; 95 succs { 96 100 }
;; 96 succs { 346 97 }
;; 97 succs { 98 99 }
;; 98 succs { 346 99 }
;; 99 succs { 346 100 }
;; 100 succs { 346 101 }
;; 101 succs { 102 103 }
;; 102 succs { 346 103 }
;; 103 succs { 346 104 }
;; 104 succs { 105 110 }
;; 105 succs { 106 110 }
;; 106 succs { 346 107 }
;; 107 succs { 108 109 }
;; 108 succs { 346 109 }
;; 109 succs { 132 }
;; 110 succs { 111 119 }
;; 111 succs { 112 119 }
;; 112 succs { 113 118 }
;; 113 succs { 346 114 }
;; 114 succs { 115 118 }
;; 115 succs { 346 116 }
;; 116 succs { 117 118 }
;; 117 succs { 346 118 }
;; 118 succs { 132 }
;; 119 succs { 120 132 }
;; 120 succs { 121 132 }
;; 121 succs { 122 132 }
;; 122 succs { 346 123 }
;; 123 succs { 126 124 }
;; 124 succs { 346 125 }
;; 125 succs { 126 127 }
;; 126 succs { 128 }
;; 127 succs { 128 }
;; 128 succs { 129 132 }
;; 129 succs { 346 130 }
;; 130 succs { 131 132 }
;; 131 succs { 346 132 }
;; 132 succs { 338 }
;; 133 succs { 134 158 }
;; 134 succs { 346 135 }
;; 135 succs { 136 139 }
;; 136 succs { 346 137 }
;; 137 succs { 138 139 }
;; 138 succs { 140 }
;; 139 succs { 140 }
;; 140 succs { 141 338 }
;; 141 succs { 346 142 }
;; 142 succs { 143 338 }
;; 143 succs { 346 144 }
;; 144 succs { 346 145 }
;; 145 succs { 146 149 }
;; 146 succs { 346 147 }
;; 147 succs { 148 149 }
;; 148 succs { 150 }
;; 149 succs { 150 }
;; 150 succs { 151 338 }
;; 151 succs { 346 152 }
;; 152 succs { 346 153 }
;; 153 succs { 346 154 }
;; 154 succs { 155 338 }
;; 155 succs { 346 156 }
;; 156 succs { 346 157 }
;; 157 succs { 346 338 }
;; 158 succs { 159 338 }
;; 159 succs { 346 160 }
;; 160 succs { 161 162 }
;; 161 succs { 342 }
;; 162 succs { 346 163 }
;; 163 succs { 346 164 }
;; 164 succs { 165 338 }
;; 165 succs { 166 190 }
;; 166 succs { 346 167 }
;; 167 succs { 168 337 }
;; 168 succs { 346 169 }
;; 169 succs { 346 170 }
;; 170 succs { 171 178 }
;; 171 succs { 346 172 }
;; 172 succs { 346 173 }
;; 173 succs { 346 174 }
;; 174 succs { 175 337 }
;; 175 succs { 346 176 }
;; 176 succs { 346 177 }
;; 177 succs { 346 337 }
;; 178 succs { 346 179 }
;; 179 succs { 180 337 }
;; 180 succs { 346 181 }
;; 181 succs { 346 182 }
;; 182 succs { 183 337 }
;; 183 succs { 346 184 }
;; 184 succs { 346 185 }
;; 185 succs { 346 186 }
;; 186 succs { 187 337 }
;; 187 succs { 346 188 }
;; 188 succs { 346 189 }
;; 189 succs { 346 337 }
;; 190 succs { 192 191 }
;; 191 succs { 192 203 }
;; 192 succs { 346 193 }
;; 193 succs { 346 194 }
;; 194 succs { 195 202 }
;; 195 succs { 346 196 }
;; 196 succs { 346 197 }
;; 197 succs { 346 198 }
;; 198 succs { 199 202 }
;; 199 succs { 346 200 }
;; 200 succs { 346 201 }
;; 201 succs { 346 202 }
;; 202 succs { 337 }
;; 203 succs { 205 204 }
;; 204 succs { 205 281 }
;; 205 succs { 346 206 }
;; 206 succs { 346 207 }
;; 207 succs { 208 280 }
;; 208 succs { 209 211 }
;; 209 succs { 210 211 }
;; 210 succs { 211 }
;; 211 succs { 346 212 }
;; 212 succs { 213 215 }
;; 213 succs { 346 214 }
;; 214 succs { 219 }
;; 215 succs { 346 216 }
;; 216 succs { 217 219 }
;; 217 succs { 346 218 }
;; 218 succs { 219 }
;; 219 succs { 220 271 }
;; 220 succs { 221 271 }
;; 221 succs { 344 222 }
;; 222 succs { 223 270 }
;; 223 succs { 344 224 }
;; 224 succs { 269 }
;; 225 succs { 226 260 }
;; 226 succs { 344 227 }
;; 227 succs { 228 231 }
;; 228 succs { 344 229 }
;; 229 succs { 230 231 }
;; 230 succs { 232 }
;; 231 succs { 232 }
;; 232 succs { 233 243 }
;; 233 succs { 344 234 }
;; 234 succs { 344 235 }
;; 235 succs { 236 268 }
;; 236 succs { 237 238 }
;; 237 succs { 344 240 }
;; 238 succs { 344 239 }
;; 239 succs { 344 240 }
;; 240 succs { 344 241 }
;; 241 succs { 344 242 }
;; 242 succs { 344 268 }
;; 243 succs { 344 244 }
;; 244 succs { 245 248 }
;; 245 succs { 344 246 }
;; 246 succs { 247 248 }
;; 247 succs { 249 }
;; 248 succs { 249 }
;; 249 succs { 250 268 }
;; 250 succs { 344 251 }
;; 251 succs { 344 252 }
;; 252 succs { 253 268 }
;; 253 succs { 254 255 }
;; 254 succs { 344 257 }
;; 255 succs { 344 256 }
;; 256 succs { 344 257 }
;; 257 succs { 344 258 }
;; 258 succs { 344 259 }
;; 259 succs { 344 268 }
;; 260 succs { 261 268 }
;; 261 succs { 344 262 }
;; 262 succs { 263 268 }
;; 263 succs { 344 264 }
;; 264 succs { 344 265 }
;; 265 succs { 266 268 }
;; 266 succs { 344 267 }
;; 267 succs { 344 268 }
;; 268 succs { 269 }
;; 269 succs { 225 270 }
;; 270 succs { 271 }
;; 271 succs { 272 273 }
;; 272 succs { 342 }
;; 273 succs { 346 274 }
;; 274 succs { 346 275 }
;; 275 succs { 346 276 }
;; 276 succs { 277 280 }
;; 277 succs { 346 278 }
;; 278 succs { 346 279 }
;; 279 succs { 346 280 }
;; 280 succs { 337 }
;; 281 succs { 346 282 }
;; 282 succs { 283 288 }
;; 283 succs { 346 284 }
;; 284 succs { 285 288 }
;; 285 succs { 346 286 }
;; 286 succs { 287 288 }
;; 287 succs { 289 }
;; 288 succs { 289 }
;; 289 succs { 290 327 }
;; 290 succs { 346 291 }
;; 291 succs { 346 292 }
;; 292 succs { 293 337 }
;; 293 succs { 346 294 }
;; 294 succs { 346 295 }
;; 295 succs { 346 296 }
;; 296 succs { 297 302 }
;; 297 succs { 346 298 }
;; 298 succs { 299 302 }
;; 299 succs { 346 300 }
;; 300 succs { 346 301 }
;; 301 succs { 346 302 }
;; 302 succs { 346 303 }
;; 303 succs { 304 337 }
;; 304 succs { 346 305 }
;; 305 succs { 346 306 }
;; 306 succs { 307 337 }
;; 307 succs { 346 308 }
;; 308 succs { 309 337 }
;; 309 succs { 325 }
;; 310 succs { 346 311 }
;; 311 succs { 312 324 }
;; 312 succs { 346 313 }
;; 313 succs { 314 324 }
;; 314 succs { 346 315 }
;; 315 succs { 316 324 }
;; 316 succs { 346 317 }
;; 317 succs { 346 318 }
;; 318 succs { 319 324 }
;; 319 succs { 346 320 }
;; 320 succs { 321 324 }
;; 321 succs { 346 322 }
;; 322 succs { 346 323 }
;; 323 succs { 346 324 }
;; 324 succs { 325 }
;; 325 succs { 346 326 }
;; 326 succs { 310 337 }
;; 327 succs { 346 328 }
;; 328 succs { 346 329 }
;; 329 succs { 330 337 }
;; 330 succs { 346 331 }
;; 331 succs { 346 332 }
;; 332 succs { 346 333 }
;; 333 succs { 334 337 }
;; 334 succs { 346 335 }
;; 335 succs { 346 336 }
;; 336 succs { 346 337 }
;; 337 succs { 338 }
;; 338 succs { 346 339 }
;; 339 succs { 340 }
;; 340 succs { 20 341 }
;; 341 succs { 343 }
;; 342 succs { 343 }
;; 343 succs { 1 }
;; 344 succs { 345 }
;; 345 succs { 346 }
;; 346 succs { }
void new_search_imm_use (struct gimple_array * used_stmt, union tree_node * target, union tree_node * target2)
{
  struct ssa_use_operand_t * D.253704;
  union tree_node * D.253703;
  union tree_node * D.253702;
  union tree_node * D.253701;
  union tree_node * D.253700;
  int D.253699;
  union tree_node * D.253698;
  unsigned int D.253697;
  union tree_node * D.253696;
  union tree_node * D.253695;
  union tree_node * D.253694;
  int D.253693;
  union tree_node * D.253692;
  union tree_node * D.253691;
  union tree_node * D.253690;
  union tree_node * D.253689;
  unsigned int D.253688;
  int D.253687;
  union tree_node * D.253686;
  union tree_node * D.253685;
  union tree_node * D.253684;
  union tree_node * D.253683;
  int D.253682;
  union tree_node * D.253681;
  union tree_node * D.253680;
  int D.253679;
  union tree_node * D.253678;
  union tree_node * D.253677;
  union tree_node * D.253676;
  union tree_node * D.253675;
  union tree_node * D.253674;
  union tree_node * D.253673;
  union tree_node * D.253672;
  union tree_node * D.253671;
  union tree_node * D.253668;
  int D.253667;
  union tree_node * D.253666;
  union tree_node * D.253665;
  union tree_node * D.253664;
  union tree_node * D.253663;
  union tree_node * D.253662;
  int D.253661;
  union tree_node * D.253660;
  union tree_node * D.253659;
  union tree_node * D.253658;
  union tree_node * D.253657;
  union tree_node * D.253656;
  union tree_node * D.253655;
  int D.253654;
  union tree_node * D.253653;
  union tree_node * D.253652;
  union tree_node * D.253651;
  struct function_assign_array * D.253650;
  union tree_node * D.253649;
  union tree_node * D.253648;
  union tree_node * D.253647;
  union tree_node * D.253646;
  int D.253645;
  union tree_node * D.253644;
  union tree_node * D.253643;
  union tree_node * D.253642;
  union tree_node * D.253641;
  union tree_node * D.253640;
  int D.253639;
  union tree_node * D.253638;
  union tree_node * D.253637;
  union tree_node * D.253636;
  union tree_node * D.253635;
  union tree_node * D.253634;
  int D.253633;
  union tree_node * D.253632;
  union tree_node * D.253631;
  union tree_node * D.253630;
  union tree_node * D.253629;
  union tree_node * D.253628;
  union tree_node * D.253627;
  int D.253626;
  union tree_node * D.253625;
  union tree_node * D.253624;
  const char * D.253623;
  union tree_node * D.253622;
  union tree_node * D.253621;
  union tree_node * D.253620;
  union tree_node * D.253619;
  union tree_node * D.253618;
  union tree_node * D.253617;
  int D.253616;
  int D.253615;
  union tree_node * D.253614;
  union tree_node * D.253613;
  union tree_node * D.253612;
  union tree_node * D.253611;
  int D.253610;
  int D.253609;
  int D.253608;
  int D.253607;
  int D.253606;
  int D.253605;
  int D.253604;
  int D.253603;
  int D.253602;
  int D.253601;
  int D.253600;
  int D.253599;
  union tree_node * D.253598;
  int D.253597;
  union tree_node * D.253596;
  union tree_node * D.253595;
  union tree_node * D.253594;
  union tree_node * D.253593;
  union tree_node * D.253592;
  int D.253591;
  struct greturn * D.253590;
  int D.253589;
  const struct gcond * D.253588;
  union tree_node * D.253587;
  tree_code D.253586;
  int D.253585;
  int i;
  int i;
  struct function_assign_array assign_array;
  union tree_node * getFunctionAssignVAR;
  int isVardecl;
  union tree_node * second;
  union tree_node * fundecl;
  union tree_node * gimpleassignrhs;
  union tree_node * gimpleassignlhs;
  int ssa_name_assign;
  union tree_node * return_tree;
  const struct gcond * gc;
  const struct ssa_use_operand_t * const head;
  int has_single_use_flag;
  int var_declsuperjump;
  int size;
  struct gimple * def_stmt;
  const char * name;
  struct gimple * gc;
  struct gimple * use_stmt;
  struct ssa_use_operand_t * use_p;
  struct imm_use_iterator imm_iter;
  bool retval.1362;
  bool retval.1361;
  bool retval.1360;
  bool retval.1358;
  bool retval.1354;
  bool retval.1352;
  bool retval.1350;
  bool retval.1348;
  bool retval.1346;
  bool retval.1345;
  bool retval.1344;
  bool retval.1343;
  bool retval.1342;
  bool retval.1341;
  bool retval.1340;
  bool iftmp.1339;
  bool retval.1338;
  bool retval.1337;
  bool retval.1336;
  bool retval.1335;
  bool retval.1334;
  bool retval.1333;
  bool retval.1332;
  bool retval.1331;
  bool iftmp.1330;
  bool retval.1329;
  bool retval.1328;
  bool retval.1327;
  bool iftmp.1326;
  bool retval.1325;
  bool retval.1324;
  struct function_assign_array D.196339;
  bool retval.1321;
  bool retval.1320;
  bool retval.1319;
  bool retval.1318;
  bool retval.1317;
  bool retval.1316;
  bool retval.1315;
  bool retval.1314;
  bool retval.1313;
  bool retval.1312;
  bool retval.1311;
  bool retval.1310;
  bool retval.1309;
  bool retval.1308;
  bool retval.1307;
  bool iftmp.1306;
  bool retval.1305;
  bool retval.1304;
  bool iftmp.1303;
  bool retval.1302;
  bool retval.1301;
  bool iftmp.1300;
  bool retval.1299;
  bool retval.1298;
  bool retval.1297;
  bool retval.1296;
  bool retval.1295;
  bool iftmp.1294;
  bool retval.1293;
  bool retval.1292;
  bool iftmp.1291;
  bool retval.1290;
  bool retval.1289;
  bool iftmp.1288;
  bool retval.1287;
  bool iftmp.1286;
  bool retval.1285;
  bool retval.1284;
  bool retval.1283;
  bool retval.1282;
  bool retval.1281;
  bool retval.1280;
  bool iftmp.1279;
  bool retval.1278;
  bool retval.1277;
  bool retval.1276;
  bool retval.1275;
  bool retval.1274;
  bool iftmp.1273;
  bool retval.1272;
  bool retval.1269;

  <bb 2> :
  def_stmt = target->ssa_name.def_stmt;
  size = 8;
  var_declsuperjump = 0;
  has_single_use_flag = 0;
  levelsize.1267_1 = levelsize;
  _2 = levelsize.1267_1 + 1;
  levelsize = _2;
  _3 = target->base.code;
  if (_3 == 153)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _4 = target->base.code;
  if (_4 == 131)
    goto <bb 4>; [INV]
  else
    goto <bb 341>; [INV]

  <bb 4> :
  head = &target->ssa_name.imm_uses;
  _5 = target->base.code;
  if (_5 == 131)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  stderr.1268_6 = stderr;
  __builtin_fwrite ("GIMPLE CODE :var_declsuperjump-------\n", 1, 38, stderr.1268_6);

  <bb 6> :
  var_declsuperjump = 1;
  // predicted unlikely by goto predictor.
  goto <bb 208>; [INV]

  <bb 7> :
  _7 = head->next;
  _8 = _7->loc.stmt;
  if (_8 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 8> :
  _9 = num_imm_uses (target);
  retval.1269 = _9 == 1;
  if (retval.1269 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  has_single_use_flag = 1;
  if (target != target2)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _10 = head->next;
  use_stmt = _10->loc.stmt;
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 11> :
  levelsize.1270_11 = levelsize;
  if (levelsize.1270_11 > 1)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  now_tree.1271_12 = now_tree;
  if (target == now_tree.1271_12)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 342>; [INV]

  <bb 14> :
  _13 = num_imm_uses (target);
  if (_13 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  _14 = head->next;
  if (_14 != 0B)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1273 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.1273 = 0;

  <bb 18> :
  retval.1272 = iftmp.1273;
  if (retval.1272 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 341>; [INV]

  <bb 19> :
  use_p = first_readonly_imm_use (&imm_iter, target);
  goto <bb 340>; [INV]

  <bb 20> :
  use_stmt = use_p->loc.stmt;
  D.253585 = check_stmtStack4 (use_stmt);

  <bb 21> :
  _15 = D.253585;
  retval.1274 = _15 == 0;
  if (retval.1274 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 338>; [INV]

  <bb 22> :
has_single_use_jump:
  D.253586 = gimple_cond_code (use_stmt);

  <bb 23> :
  _16 = D.253586;
  retval.1275 = _16 != 0;
  if (retval.1275 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 24> :
  _17 = is_gimple_assign (use_stmt);
  retval.1276 = ~_17;
  if (retval.1276 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 25> :
  D.253587 = gimple_cond_lhs (use_stmt);

  <bb 26> :
  _18 = D.253587;
  retval.1277 = _18 != 0B;
  if (retval.1277 != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 27> :
  D.253588 = GIMPLE_CHECK2<const gcond*> (use_stmt);

  <bb 28> :
  gc = D.253588;
  _19 = gimple_cond_rhs (gc);
  if (_19 != 0B)
    goto <bb 29>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 29> :
  _20 = gimple_cond_lhs (gc);
  if (_20 != 0B)
    goto <bb 30>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 30> :
  iftmp.1279 = 1;
  goto <bb 32>; [INV]

  <bb 31> :
  iftmp.1279 = 0;

  <bb 32> :
  retval.1278 = iftmp.1279;
  if (retval.1278 != 0)
    goto <bb 33>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 33> :
  _21 = gimple_cond_rhs (gc);
  D.253589 = check_stmtStack (_21);

  <bb 34> :
  _22 = D.253589;
  retval.1280 = _22 == 0;
  if (retval.1280 != 0)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  _23 = gimple_cond_lhs (gc);
  set_gimple_array (used_stmt, use_stmt, _23, target, 0B);

  <bb 36> :
  _24 = gimple_code (use_stmt);
  retval.1281 = _24 == 10;
  if (retval.1281 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 37> :
  D.253590 = as_a<greturn*, gimple> (use_stmt);

  <bb 38> :
  _25 = D.253590;
  return_tree = gimple_return_retval (_25);
  D.253591 = check_stmtStack (return_tree);

  <bb 39> :
  _26 = D.253591;
  retval.1282 = _26 == 0;
  if (retval.1282 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 338>; [INV]

  <bb 40> :
  set_gimple_array (used_stmt, use_stmt, return_tree, return_tree, 0B);
  goto <bb 338>; [INV]

  <bb 41> :
  _27 = gimple_code (use_stmt);
  retval.1283 = _27 == 6;
  if (retval.1283 != 0)
    goto <bb 42>; [INV]
  else
    goto <bb 133>; [INV]

  <bb 42> :
  ssa_name_assign = 0;
  D.253592 = gimple_assign_lhs (use_stmt);

  <bb 43> :
  _28 = D.253592;
  D.253593 = prechecktree (_28);

  <bb 44> :
  gimpleassignlhs = D.253593;
  D.253594 = gimple_assign_rhs1 (use_stmt);

  <bb 45> :
  _29 = D.253594;
  D.253595 = prechecktree (_29);

  <bb 46> :
  gimpleassignrhs = D.253595;
  if (gimpleassignlhs != 0B)
    goto <bb 47>; [INV]
  else
    goto <bb 92>; [INV]

  <bb 47> :
  _30 = gimpleassignlhs->base.code;
  if (_30 == 153)
    goto <bb 48>; [INV]
  else
    goto <bb 92>; [INV]

  <bb 48> :
  D.253596 = gimple_call_fn (use_stmt);

  <bb 49> :
  _31 = D.253596;
  retval.1284 = _31 != 0B;
  if (retval.1284 != 0)
    goto <bb 50>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 50> :
  D.253597 = check_stmtStack (gimpleassignlhs);

  <bb 51> :
  _32 = D.253597;
  if (_32 == 0)
    goto <bb 52>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 52> :
  D.253598 = gimple_call_fn (use_stmt);

  <bb 53> :
  _33 = D.253598;
  D.253599 = check_stmtStack (_33);

  <bb 54> :
  _34 = D.253599;
  if (_34 == 0)
    goto <bb 55>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 55> :
  iftmp.1286 = 1;
  goto <bb 57>; [INV]

  <bb 56> :
  iftmp.1286 = 0;

  <bb 57> :
  retval.1285 = iftmp.1286;
  if (retval.1285 != 0)
    goto <bb 58>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 58> :
  set_gimple_array (used_stmt, use_stmt, gimpleassignlhs, target, 0B);

  <bb 59> :
  ssa_name_assign = 1;
  if (gimpleassignlhs != target2)
    goto <bb 60>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 60> :
  D.253600 = check_stmtStack2 (use_stmt);

  <bb 61> :
  _35 = D.253600;
  if (_35 == 0)
    goto <bb 62>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 62> :
  iftmp.1288 = 1;
  goto <bb 64>; [INV]

  <bb 63> :
  iftmp.1288 = 0;

  <bb 64> :
  retval.1287 = iftmp.1288;
  if (retval.1287 != 0)
    goto <bb 65>; [INV]
  else
    goto <bb 66>; [INV]

  <bb 65> :
  new_search_imm_use (used_stmt, gimpleassignlhs, gimpleassignlhs);

  <bb 66> :
  Checknew_search_imm_use_lhs (used_stmt, use_stmt, target, target2);
  goto <bb 91>; [INV]

  <bb 67> :
  if (gimpleassignrhs != 0B)
    goto <bb 68>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 68> :
  _36 = gimpleassignrhs->base.code;
  if (_36 == 153)
    goto <bb 69>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 69> :
  D.253601 = check_stmtStack (gimpleassignrhs);

  <bb 70> :
  _37 = D.253601;
  retval.1289 = _37 == 0;
  if (retval.1289 != 0)
    goto <bb 71>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 71> :
  if (gimpleassignrhs != target2)
    goto <bb 72>; [INV]
  else
    goto <bb 75>; [INV]

  <bb 72> :
  D.253602 = check_stmtStack2 (use_stmt);

  <bb 73> :
  _38 = D.253602;
  if (_38 == 0)
    goto <bb 74>; [INV]
  else
    goto <bb 75>; [INV]

  <bb 74> :
  iftmp.1291 = 1;
  goto <bb 76>; [INV]

  <bb 75> :
  iftmp.1291 = 0;

  <bb 76> :
  retval.1290 = iftmp.1291;
  if (retval.1290 != 0)
    goto <bb 77>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 77> :
  new_search_imm_use (used_stmt, gimpleassignrhs, gimpleassignrhs);

  <bb 78> :
  Checknew_search_imm_use_rhs (used_stmt, use_stmt, target, target2);
  goto <bb 91>; [INV]

  <bb 79> :
  if (gimpleassignlhs != 0B)
    goto <bb 80>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 80> :
  _39 = gimpleassignlhs->base.code;
  if (_39 == 153)
    goto <bb 81>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 81> :
  D.253603 = check_stmtStack (gimpleassignlhs);

  <bb 82> :
  _40 = D.253603;
  retval.1292 = _40 == 0;
  if (retval.1292 != 0)
    goto <bb 83>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 83> :
  if (gimpleassignlhs != target2)
    goto <bb 84>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 84> :
  D.253604 = check_stmtStack2 (use_stmt);

  <bb 85> :
  _41 = D.253604;
  if (_41 == 0)
    goto <bb 86>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 86> :
  iftmp.1294 = 1;
  goto <bb 88>; [INV]

  <bb 87> :
  iftmp.1294 = 0;

  <bb 88> :
  retval.1293 = iftmp.1294;
  if (retval.1293 != 0)
    goto <bb 89>; [INV]
  else
    goto <bb 90>; [INV]

  <bb 89> :
  new_search_imm_use (used_stmt, gimpleassignlhs, gimpleassignlhs);

  <bb 90> :
  Checknew_search_imm_use_rhs (used_stmt, use_stmt, target, target2);

  <bb 91> :
  goto <bb 100>; [INV]

  <bb 92> :
  if (gimpleassignrhs != 0B)
    goto <bb 93>; [INV]
  else
    goto <bb 100>; [INV]

  <bb 93> :
  _42 = gimpleassignrhs->base.code;
  if (_42 == 153)
    goto <bb 94>; [INV]
  else
    goto <bb 100>; [INV]

  <bb 94> :
  D.253605 = check_stmtStack (gimpleassignrhs);

  <bb 95> :
  _43 = D.253605;
  retval.1295 = _43 == 0;
  if (retval.1295 != 0)
    goto <bb 96>; [INV]
  else
    goto <bb 100>; [INV]

  <bb 96> :
  set_gimple_array (used_stmt, use_stmt, gimpleassignrhs, target, 0B);

  <bb 97> :
  if (gimpleassignrhs != target2)
    goto <bb 98>; [INV]
  else
    goto <bb 99>; [INV]

  <bb 98> :
  new_search_imm_use (used_stmt, gimpleassignrhs, gimpleassignrhs);

  <bb 99> :
  Checknew_search_imm_use_rhs (used_stmt, use_stmt, target, target2);

  <bb 100> :
  D.253606 = check_stmtStack (target);

  <bb 101> :
  _44 = D.253606;
  retval.1296 = _44 == 0;
  if (retval.1296 != 0)
    goto <bb 102>; [INV]
  else
    goto <bb 103>; [INV]

  <bb 102> :
  set_gimple_array (used_stmt, use_stmt, target, target2, 0B);

  <bb 103> :
  Varnew_search_imm_use (used_stmt, use_stmt, target, target2);

  <bb 104> :
  if (gimpleassignlhs != 0B)
    goto <bb 105>; [INV]
  else
    goto <bb 110>; [INV]

  <bb 105> :
  _45 = gimpleassignlhs->base.code;
  if (_45 == 165)
    goto <bb 106>; [INV]
  else
    goto <bb 110>; [INV]

  <bb 106> :
  fundecl = gimpleassignlhs->exp.operands[0];
  D.253607 = check_stmtStack (gimpleassignlhs);

  <bb 107> :
  _46 = D.253607;
  retval.1297 = _46 == 0;
  if (retval.1297 != 0)
    goto <bb 108>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 108> :
  set_gimple_array (used_stmt, use_stmt, gimpleassignlhs, target, 0B);

  <bb 109> :
  goto <bb 132>; [INV]

  <bb 110> :
  if (gimpleassignlhs != 0B)
    goto <bb 111>; [INV]
  else
    goto <bb 119>; [INV]

  <bb 111> :
  _47 = gimpleassignlhs->base.code;
  if (_47 == 47)
    goto <bb 112>; [INV]
  else
    goto <bb 119>; [INV]

  <bb 112> :
  _48 = gimpleassignrhs->base.code;
  if (_48 == 153)
    goto <bb 113>; [INV]
  else
    goto <bb 118>; [INV]

  <bb 113> :
  D.253608 = check_stmtStack (gimpleassignrhs);

  <bb 114> :
  _49 = D.253608;
  retval.1298 = _49 == 0;
  if (retval.1298 != 0)
    goto <bb 115>; [INV]
  else
    goto <bb 118>; [INV]

  <bb 115> :
  set_gimple_array (used_stmt, use_stmt, gimpleassignrhs, target, 0B);

  <bb 116> :
  if (gimpleassignrhs != target2)
    goto <bb 117>; [INV]
  else
    goto <bb 118>; [INV]

  <bb 117> :
  new_search_imm_use (used_stmt, gimpleassignrhs, gimpleassignrhs);

  <bb 118> :
  goto <bb 132>; [INV]

  <bb 119> :
  if (gimpleassignrhs != 0B)
    goto <bb 120>; [INV]
  else
    goto <bb 132>; [INV]

  <bb 120> :
  _50 = gimpleassignrhs->base.code;
  if (_50 == 47)
    goto <bb 121>; [INV]
  else
    goto <bb 132>; [INV]

  <bb 121> :
  _51 = gimpleassignlhs->base.code;
  if (_51 == 153)
    goto <bb 122>; [INV]
  else
    goto <bb 132>; [INV]

  <bb 122> :
  D.253609 = check_stmtStack (gimpleassignlhs);

  <bb 123> :
  _52 = D.253609;
  if (_52 == 0)
    goto <bb 126>; [INV]
  else
    goto <bb 124>; [INV]

  <bb 124> :
  D.253610 = check_stmtStack2 (use_stmt);

  <bb 125> :
  _53 = D.253610;
  if (_53 == 0)
    goto <bb 126>; [INV]
  else
    goto <bb 127>; [INV]

  <bb 126> :
  iftmp.1300 = 1;
  goto <bb 128>; [INV]

  <bb 127> :
  iftmp.1300 = 0;

  <bb 128> :
  retval.1299 = iftmp.1300;
  if (retval.1299 != 0)
    goto <bb 129>; [INV]
  else
    goto <bb 132>; [INV]

  <bb 129> :
  set_gimple_array (used_stmt, use_stmt, gimpleassignlhs, target, 0B);

  <bb 130> :
  if (gimpleassignlhs != target2)
    goto <bb 131>; [INV]
  else
    goto <bb 132>; [INV]

  <bb 131> :
  new_search_imm_use (used_stmt, gimpleassignlhs, gimpleassignlhs);

  <bb 132> :
  goto <bb 338>; [INV]

  <bb 133> :
  _54 = gimple_code (use_stmt);
  retval.1301 = _54 == 18;
  if (retval.1301 != 0)
    goto <bb 134>; [INV]
  else
    goto <bb 158>; [INV]

  <bb 134> :
  D.253611 = gimple_phi_result (use_stmt);

  <bb 135> :
  _55 = D.253611;
  if (_55 != 0B)
    goto <bb 136>; [INV]
  else
    goto <bb 139>; [INV]

  <bb 136> :
  D.253612 = gimple_phi_result (use_stmt);

  <bb 137> :
  _56 = D.253612;
  _57 = _56->base.code;
  if (_57 == 153)
    goto <bb 138>; [INV]
  else
    goto <bb 139>; [INV]

  <bb 138> :
  iftmp.1303 = 1;
  goto <bb 140>; [INV]

  <bb 139> :
  iftmp.1303 = 0;

  <bb 140> :
  retval.1302 = iftmp.1303;
  if (retval.1302 != 0)
    goto <bb 141>; [INV]
  else
    goto <bb 338>; [INV]

  <bb 141> :
  D.253613 = gimple_phi_result (use_stmt);

  <bb 142> :
  _58 = D.253613;
  _59 = _58->base.code;
  retval.1304 = _59 == 153;
  if (retval.1304 != 0)
    goto <bb 143>; [INV]
  else
    goto <bb 338>; [INV]

  <bb 143> :
  D.253614 = gimple_phi_result (use_stmt);

  <bb 144> :
  _60 = D.253614;
  D.253615 = check_stmtStack (_60);

  <bb 145> :
  _61 = D.253615;
  if (_61 == 0)
    goto <bb 146>; [INV]
  else
    goto <bb 149>; [INV]

  <bb 146> :
  D.253616 = check_stmtStack2 (use_stmt);

  <bb 147> :
  _62 = D.253616;
  if (_62 == 0)
    goto <bb 148>; [INV]
  else
    goto <bb 149>; [INV]

  <bb 148> :
  iftmp.1306 = 1;
  goto <bb 150>; [INV]

  <bb 149> :
  iftmp.1306 = 0;

  <bb 150> :
  retval.1305 = iftmp.1306;
  if (retval.1305 != 0)
    goto <bb 151>; [INV]
  else
    goto <bb 338>; [INV]

  <bb 151> :
  D.253617 = gimple_phi_result (use_stmt);

  <bb 152> :
  _63 = D.253617;
  set_gimple_array (used_stmt, use_stmt, _63, target, 0B);

  <bb 153> :
  D.253618 = gimple_phi_result (use_stmt);

  <bb 154> :
  _64 = D.253618;
  retval.1307 = target2 != _64;
  if (retval.1307 != 0)
    goto <bb 155>; [INV]
  else
    goto <bb 338>; [INV]

  <bb 155> :
  D.253619 = gimple_phi_result (use_stmt);

  <bb 156> :
  _65 = D.253619;
  D.253620 = gimple_phi_result (use_stmt);

  <bb 157> :
  _66 = D.253620;
  new_search_imm_use (used_stmt, _66, _65);
  goto <bb 338>; [INV]

  <bb 158> :
  _67 = gimple_code (use_stmt);
  retval.1308 = _67 == 8;
  if (retval.1308 != 0)
    goto <bb 159>; [INV]
  else
    goto <bb 338>; [INV]

  <bb 159> :
  D.253621 = gimple_call_fn (use_stmt);

  <bb 160> :
  _68 = D.253621;
  retval.1309 = _68 == 0B;
  if (retval.1309 != 0)
    goto <bb 161>; [INV]
  else
    goto <bb 162>; [INV]

  <bb 161> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 342>; [INV]

  <bb 162> :
  D.253622 = gimple_call_fn (use_stmt);

  <bb 163> :
  _69 = D.253622;
  D.253623 = get_name (_69);

  <bb 164> :
  name = D.253623;
  if (name != 0B)
    goto <bb 165>; [INV]
  else
    goto <bb 338>; [INV]

  <bb 165> :
  _70 = strcmp (name, "realloc");
  if (_70 == 0)
    goto <bb 166>; [INV]
  else
    goto <bb 190>; [INV]

  <bb 166> :
  D.253624 = gimple_call_lhs (use_stmt);

  <bb 167> :
  _71 = D.253624;
  retval.1310 = _71 != 0B;
  if (retval.1310 != 0)
    goto <bb 168>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 168> :
  D.253625 = gimple_call_lhs (use_stmt);

  <bb 169> :
  _72 = D.253625;
  D.253626 = check_stmtStack (_72);

  <bb 170> :
  _73 = D.253626;
  retval.1311 = _73 == 0;
  if (retval.1311 != 0)
    goto <bb 171>; [INV]
  else
    goto <bb 178>; [INV]

  <bb 171> :
  D.253627 = gimple_call_lhs (use_stmt);

  <bb 172> :
  _74 = D.253627;
  set_gimple_array (used_stmt, use_stmt, _74, target, 0B);

  <bb 173> :
  D.253628 = gimple_call_lhs (use_stmt);

  <bb 174> :
  _75 = D.253628;
  _76 = _75->base.code;
  retval.1312 = _76 == 153;
  if (retval.1312 != 0)
    goto <bb 175>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 175> :
  D.253629 = gimple_call_lhs (use_stmt);

  <bb 176> :
  _77 = D.253629;
  D.253630 = gimple_call_lhs (use_stmt);

  <bb 177> :
  _78 = D.253630;
  new_search_imm_use (used_stmt, _78, _77);
  goto <bb 337>; [INV]

  <bb 178> :
  D.253631 = gimple_call_fn (use_stmt);

  <bb 179> :
  _79 = D.253631;
  retval.1313 = _79 != 0B;
  if (retval.1313 != 0)
    goto <bb 180>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 180> :
  D.253632 = gimple_call_arg (use_stmt, 0);

  <bb 181> :
  _80 = D.253632;
  D.253633 = check_stmtStack (_80);

  <bb 182> :
  _81 = D.253633;
  retval.1314 = _81 == 0;
  if (retval.1314 != 0)
    goto <bb 183>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 183> :
  D.253634 = gimple_call_arg (use_stmt, 0);

  <bb 184> :
  _82 = D.253634;
  set_gimple_array (used_stmt, use_stmt, _82, target, 0B);

  <bb 185> :
  D.253635 = gimple_call_arg (use_stmt, 0);

  <bb 186> :
  _83 = D.253635;
  _84 = _83->base.code;
  retval.1315 = _84 == 153;
  if (retval.1315 != 0)
    goto <bb 187>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 187> :
  D.253636 = gimple_call_arg (use_stmt, 0);

  <bb 188> :
  _85 = D.253636;
  D.253637 = gimple_call_arg (use_stmt, 0);

  <bb 189> :
  _86 = D.253637;
  new_search_imm_use (used_stmt, _86, _85);
  goto <bb 337>; [INV]

  <bb 190> :
  _87 = strcmp (name, "free");
  if (_87 == 0)
    goto <bb 192>; [INV]
  else
    goto <bb 191>; [INV]

  <bb 191> :
  _88 = strcmp (name, "xfree");
  if (_88 == 0)
    goto <bb 192>; [INV]
  else
    goto <bb 203>; [INV]

  <bb 192> :
  D.253638 = gimple_call_fn (use_stmt);

  <bb 193> :
  _89 = D.253638;
  D.253639 = check_stmtStack (_89);

  <bb 194> :
  _90 = D.253639;
  retval.1316 = _90 == 0;
  if (retval.1316 != 0)
    goto <bb 195>; [INV]
  else
    goto <bb 202>; [INV]

  <bb 195> :
  D.253640 = gimple_call_fn (use_stmt);

  <bb 196> :
  _91 = D.253640;
  set_gimple_array (used_stmt, use_stmt, _91, target, 0B);

  <bb 197> :
  D.253641 = gimple_call_fn (use_stmt);

  <bb 198> :
  _92 = D.253641;
  _93 = _92->base.code;
  retval.1317 = _93 == 153;
  if (retval.1317 != 0)
    goto <bb 199>; [INV]
  else
    goto <bb 202>; [INV]

  <bb 199> :
  D.253642 = gimple_call_fn (use_stmt);

  <bb 200> :
  _94 = D.253642;
  D.253643 = gimple_call_fn (use_stmt);

  <bb 201> :
  _95 = D.253643;
  new_search_imm_use (used_stmt, _95, _94);

  <bb 202> :
  goto <bb 337>; [INV]

  <bb 203> :
  _96 = strcmp (name, "pthread_create");
  if (_96 == 0)
    goto <bb 205>; [INV]
  else
    goto <bb 204>; [INV]

  <bb 204> :
  _97 = strcmp (name, "pthread_join");
  if (_97 == 0)
    goto <bb 205>; [INV]
  else
    goto <bb 281>; [INV]

  <bb 205> :
  D.253644 = gimple_call_fn (use_stmt);

  <bb 206> :
  _98 = D.253644;
  D.253645 = check_stmtStack (_98);

  <bb 207> :
  _99 = D.253645;
  retval.1318 = _99 == 0;
  if (retval.1318 != 0)
    goto <bb 208>; [INV]
  else
    goto <bb 280>; [INV]

  <bb 208> :
has_single_use_addr_expr_jump:
  second = 0B;
  isVardecl = 0;
  if (var_declsuperjump == 1)
    goto <bb 209>; [INV]
  else
    goto <bb 211>; [INV]

  <bb 209> :
  _100 = target->base.code;
  if (_100 == 131)
    goto <bb 210>; [INV]
  else
    goto <bb 211>; [INV]

  <bb 210> :
  second = target->exp.operands[0];
  target = target;
  isVardecl = 1;

  <bb 211> :
  D.253646 = gimple_assign_rhs1 (def_stmt);

  <bb 212> :
  _101 = D.253646;
  _102 = _101->base.code;
  retval.1319 = _102 == 131;
  if (retval.1319 != 0)
    goto <bb 213>; [INV]
  else
    goto <bb 215>; [INV]

  <bb 213> :
  D.253647 = gimple_assign_rhs1 (def_stmt);

  <bb 214> :
  _103 = D.253647;
  second = _103->exp.operands[0];
  second = second->exp.operands[0];
  isVardecl = 1;
  goto <bb 219>; [INV]

  <bb 215> :
  D.253648 = gimple_assign_rhs1 (def_stmt);

  <bb 216> :
  _104 = D.253648;
  _105 = _104->base.code;
  retval.1320 = _105 == 36;
  if (retval.1320 != 0)
    goto <bb 217>; [INV]
  else
    goto <bb 219>; [INV]

  <bb 217> :
  D.253649 = gimple_assign_rhs1 (def_stmt);

  <bb 218> :
  second = D.253649;
  isVardecl = 1;

  <bb 219> :
  if (second != 0B)
    goto <bb 220>; [INV]
  else
    goto <bb 271>; [INV]

  <bb 220> :
  _106 = second->base.code;
  if (_106 == 36)
    goto <bb 221>; [INV]
  else
    goto <bb 271>; [INV]

  <bb 221> :
  getFunctionAssignVAR = second;
  function_assign_array::function_assign_array (&assign_array);
  function_assign_collect.1322_107 = function_assign_collect;
  D.253650 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1322_107, &getFunctionAssignVAR);

  <bb 222> :
  _108 = D.253650;
  retval.1321 = _108 != 0B;
  if (retval.1321 != 0)
    goto <bb 223>; [INV]
  else
    goto <bb 270>; [INV]

  <bb 223> :
  getFunctionAssignVAR.1323_109 = getFunctionAssignVAR;
  D.196339 = ret_function_varstmt (getFunctionAssignVAR.1323_109); [return slot optimization]

  <bb 224> :
  function_assign_array::operator= (&assign_array, &D.196339);
  function_assign_array::~function_assign_array (&D.196339);
  D.196339 = {CLOBBER};
  i = 0;
  goto <bb 269>; [INV]

  <bb 225> :
  _110 = (long unsigned int) i;
  _111 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _110);
  _112 = _111->stmt;
  _113 = gimple_code (_112);
  retval.1324 = _113 == 6;
  if (retval.1324 != 0)
    goto <bb 226>; [INV]
  else
    goto <bb 260>; [INV]

  <bb 226> :
  _114 = (long unsigned int) i;
  _115 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _114);
  _116 = _115->stmt;
  D.253651 = gimple_assign_lhs (_116);

  <bb 227> :
  _117 = D.253651;
  if (target != _117)
    goto <bb 228>; [INV]
  else
    goto <bb 231>; [INV]

  <bb 228> :
  _118 = (long unsigned int) i;
  _119 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _118);
  _120 = _119->stmt;
  D.253652 = gimple_assign_lhs (_120);

  <bb 229> :
  _121 = D.253652;
  _122 = _121->base.code;
  if (_122 == 153)
    goto <bb 230>; [INV]
  else
    goto <bb 231>; [INV]

  <bb 230> :
  iftmp.1326 = 1;
  goto <bb 232>; [INV]

  <bb 231> :
  iftmp.1326 = 0;

  <bb 232> :
  retval.1325 = iftmp.1326;
  if (retval.1325 != 0)
    goto <bb 233>; [INV]
  else
    goto <bb 243>; [INV]

  <bb 233> :
  _123 = (long unsigned int) i;
  _124 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _123);
  _125 = _124->stmt;
  D.253653 = gimple_assign_lhs (_125);

  <bb 234> :
  _126 = D.253653;
  D.253654 = check_stmtStack (_126);

  <bb 235> :
  _127 = D.253654;
  retval.1327 = _127 == 0;
  if (retval.1327 != 0)
    goto <bb 236>; [INV]
  else
    goto <bb 268>; [INV]

  <bb 236> :
  _128 = (long unsigned int) i;
  _129 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _128);
  _130 = _129->form_tree;
  retval.1328 = _130 != 0B;
  if (retval.1328 != 0)
    goto <bb 237>; [INV]
  else
    goto <bb 238>; [INV]

  <bb 237> :
  _131 = (long unsigned int) i;
  _132 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _131);
  _133 = _132->form_tree;
  _134 = (long unsigned int) i;
  _135 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _134);
  _136 = _135->stmt;
  set_gimple_array (used_stmt, _136, _133, target, 0B);
  goto <bb 240>; [INV]

  <bb 238> :
  _137 = (long unsigned int) i;
  _138 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _137);
  _139 = _138->stmt;
  D.253655 = gimple_assign_lhs (_139);

  <bb 239> :
  _140 = D.253655;
  _141 = (long unsigned int) i;
  _142 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _141);
  _143 = _142->stmt;
  set_gimple_array (used_stmt, _143, _140, target, 0B);

  <bb 240> :
  _144 = (long unsigned int) i;
  _145 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _144);
  _146 = _145->stmt;
  D.253656 = gimple_assign_lhs (_146);

  <bb 241> :
  _147 = D.253656;
  _148 = (long unsigned int) i;
  _149 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _148);
  _150 = _149->stmt;
  D.253657 = gimple_assign_lhs (_150);

  <bb 242> :
  _151 = D.253657;
  new_search_imm_use (used_stmt, _151, _147);
  goto <bb 268>; [INV]

  <bb 243> :
  _152 = (long unsigned int) i;
  _153 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _152);
  _154 = _153->stmt;
  D.253658 = gimple_assign_rhs1 (_154);

  <bb 244> :
  _155 = D.253658;
  if (target != _155)
    goto <bb 245>; [INV]
  else
    goto <bb 248>; [INV]

  <bb 245> :
  _156 = (long unsigned int) i;
  _157 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _156);
  _158 = _157->stmt;
  D.253659 = gimple_assign_rhs1 (_158);

  <bb 246> :
  _159 = D.253659;
  _160 = _159->base.code;
  if (_160 == 153)
    goto <bb 247>; [INV]
  else
    goto <bb 248>; [INV]

  <bb 247> :
  iftmp.1330 = 1;
  goto <bb 249>; [INV]

  <bb 248> :
  iftmp.1330 = 0;

  <bb 249> :
  retval.1329 = iftmp.1330;
  if (retval.1329 != 0)
    goto <bb 250>; [INV]
  else
    goto <bb 268>; [INV]

  <bb 250> :
  _161 = (long unsigned int) i;
  _162 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _161);
  _163 = _162->stmt;
  D.253660 = gimple_assign_rhs1 (_163);

  <bb 251> :
  _164 = D.253660;
  D.253661 = check_stmtStack (_164);

  <bb 252> :
  _165 = D.253661;
  retval.1331 = _165 == 0;
  if (retval.1331 != 0)
    goto <bb 253>; [INV]
  else
    goto <bb 268>; [INV]

  <bb 253> :
  _166 = (long unsigned int) i;
  _167 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _166);
  _168 = _167->form_tree;
  retval.1332 = _168 != 0B;
  if (retval.1332 != 0)
    goto <bb 254>; [INV]
  else
    goto <bb 255>; [INV]

  <bb 254> :
  _169 = (long unsigned int) i;
  _170 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _169);
  _171 = _170->form_tree;
  _172 = (long unsigned int) i;
  _173 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _172);
  _174 = _173->stmt;
  set_gimple_array (used_stmt, _174, _171, target, 0B);
  goto <bb 257>; [INV]

  <bb 255> :
  _175 = (long unsigned int) i;
  _176 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _175);
  _177 = _176->stmt;
  D.253662 = gimple_assign_rhs1 (_177);

  <bb 256> :
  _178 = D.253662;
  _179 = (long unsigned int) i;
  _180 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _179);
  _181 = _180->stmt;
  set_gimple_array (used_stmt, _181, _178, target, 0B);

  <bb 257> :
  _182 = (long unsigned int) i;
  _183 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _182);
  _184 = _183->stmt;
  D.253663 = gimple_assign_rhs1 (_184);

  <bb 258> :
  _185 = D.253663;
  _186 = (long unsigned int) i;
  _187 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _186);
  _188 = _187->stmt;
  D.253664 = gimple_assign_rhs1 (_188);

  <bb 259> :
  _189 = D.253664;
  new_search_imm_use (used_stmt, _189, _185);
  goto <bb 268>; [INV]

  <bb 260> :
  _190 = (long unsigned int) i;
  _191 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _190);
  _192 = _191->stmt;
  _193 = gimple_code (_192);
  retval.1333 = _193 == 8;
  if (retval.1333 != 0)
    goto <bb 261>; [INV]
  else
    goto <bb 268>; [INV]

  <bb 261> :
  _194 = (long unsigned int) i;
  _195 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _194);
  _196 = _195->stmt;
  D.253665 = gimple_call_arg (_196, 0);

  <bb 262> :
  _197 = D.253665;
  _198 = _197->base.code;
  retval.1334 = _198 == 131;
  if (retval.1334 != 0)
    goto <bb 263>; [INV]
  else
    goto <bb 268>; [INV]

  <bb 263> :
  _199 = (long unsigned int) i;
  _200 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _199);
  _201 = _200->stmt;
  D.253666 = gimple_call_arg (_201, 0);

  <bb 264> :
  _202 = D.253666;
  D.253667 = check_stmtStack (_202);

  <bb 265> :
  _203 = D.253667;
  retval.1335 = _203 == 0;
  if (retval.1335 != 0)
    goto <bb 266>; [INV]
  else
    goto <bb 268>; [INV]

  <bb 266> :
  _204 = (long unsigned int) i;
  _205 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _204);
  _206 = _205->stmt;
  D.253668 = gimple_call_arg (_206, 0);

  <bb 267> :
  _207 = D.253668;
  _208 = (long unsigned int) i;
  _209 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _208);
  _210 = _209->stmt;
  set_gimple_array (used_stmt, _210, _207, target, 0B);

  <bb 268> :
  i = i + 1;

  <bb 269> :
  _211 = (long unsigned int) i;
  _212 = std::vector<assign_type>::size (&assign_array.assign_type_array);
  retval.1336 = _211 < _212;
  if (retval.1336 != 0)
    goto <bb 225>; [INV]
  else
    goto <bb 270>; [INV]

  <bb 270> :
  function_assign_array::~function_assign_array (&assign_array);
  getFunctionAssignVAR = {CLOBBER};
  assign_array = {CLOBBER};

  <bb 271> :
  if (var_declsuperjump == 1)
    goto <bb 272>; [INV]
  else
    goto <bb 273>; [INV]

  <bb 272> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 342>; [INV]

  <bb 273> :
  D.253671 = gimple_call_fn (use_stmt);

  <bb 274> :
  _213 = D.253671;
  set_gimple_array (used_stmt, use_stmt, _213, target, 0B);

  <bb 275> :
  D.253672 = gimple_call_fn (use_stmt);

  <bb 276> :
  _214 = D.253672;
  _215 = _214->base.code;
  retval.1337 = _215 == 153;
  if (retval.1337 != 0)
    goto <bb 277>; [INV]
  else
    goto <bb 280>; [INV]

  <bb 277> :
  D.253673 = gimple_call_fn (use_stmt);

  <bb 278> :
  _216 = D.253673;
  D.253674 = gimple_call_fn (use_stmt);

  <bb 279> :
  _217 = D.253674;
  new_search_imm_use (used_stmt, _217, _216);

  <bb 280> :
  goto <bb 337>; [INV]

  <bb 281> :
  D.253675 = gimple_call_fn (use_stmt);

  <bb 282> :
  _218 = D.253675;
  if (_218 != 0B)
    goto <bb 283>; [INV]
  else
    goto <bb 288>; [INV]

  <bb 283> :
  D.253676 = gimple_call_lhs (use_stmt);

  <bb 284> :
  _219 = D.253676;
  if (_219 != 0B)
    goto <bb 285>; [INV]
  else
    goto <bb 288>; [INV]

  <bb 285> :
  D.253677 = gimple_call_lhs (use_stmt);

  <bb 286> :
  _220 = D.253677;
  _221 = _220->base.code;
  if (_221 == 153)
    goto <bb 287>; [INV]
  else
    goto <bb 288>; [INV]

  <bb 287> :
  iftmp.1339 = 1;
  goto <bb 289>; [INV]

  <bb 288> :
  iftmp.1339 = 0;

  <bb 289> :
  retval.1338 = iftmp.1339;
  if (retval.1338 != 0)
    goto <bb 290>; [INV]
  else
    goto <bb 327>; [INV]

  <bb 290> :
  D.253678 = gimple_call_lhs (use_stmt);

  <bb 291> :
  _222 = D.253678;
  D.253679 = check_stmtStack (_222);

  <bb 292> :
  _223 = D.253679;
  retval.1340 = _223 == 0;
  if (retval.1340 != 0)
    goto <bb 293>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 293> :
  D.253680 = gimple_call_lhs (use_stmt);

  <bb 294> :
  _224 = D.253680;
  set_gimple_array (used_stmt, use_stmt, _224, target, 0B);

  <bb 295> :
  D.253681 = gimple_call_lhs (use_stmt);

  <bb 296> :
  _225 = D.253681;
  retval.1341 = target2 != _225;
  if (retval.1341 != 0)
    goto <bb 297>; [INV]
  else
    goto <bb 302>; [INV]

  <bb 297> :
  D.253682 = check_stmtStack2 (use_stmt);

  <bb 298> :
  _226 = D.253682;
  retval.1342 = _226 == 0;
  if (retval.1342 != 0)
    goto <bb 299>; [INV]
  else
    goto <bb 302>; [INV]

  <bb 299> :
  D.253683 = gimple_call_lhs (use_stmt);

  <bb 300> :
  _227 = D.253683;
  D.253684 = gimple_call_lhs (use_stmt);

  <bb 301> :
  _228 = D.253684;
  new_search_imm_use (used_stmt, _228, _227);

  <bb 302> :
  D.253685 = gimple_call_fn (use_stmt);

  <bb 303> :
  _229 = D.253685;
  retval.1343 = _229 != 0B;
  if (retval.1343 != 0)
    goto <bb 304>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 304> :
  D.253686 = gimple_call_fn (use_stmt);

  <bb 305> :
  _230 = D.253686;
  D.253687 = check_stmtStack (_230);

  <bb 306> :
  _231 = D.253687;
  retval.1344 = _231 == 0;
  if (retval.1344 != 0)
    goto <bb 307>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 307> :
  D.253688 = gimple_call_num_args (use_stmt);

  <bb 308> :
  _232 = D.253688;
  retval.1345 = _232 != 0;
  if (retval.1345 != 0)
    goto <bb 309>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 309> :
  i = 0;
  goto <bb 325>; [INV]

  <bb 310> :
  i.1347_233 = (unsigned int) i;
  D.253689 = gimple_call_arg (use_stmt, i.1347_233);

  <bb 311> :
  _234 = D.253689;
  retval.1346 = _234 != 0B;
  if (retval.1346 != 0)
    goto <bb 312>; [INV]
  else
    goto <bb 324>; [INV]

  <bb 312> :
  i.1349_235 = (unsigned int) i;
  D.253690 = gimple_call_arg (use_stmt, i.1349_235);

  <bb 313> :
  _236 = D.253690;
  retval.1348 = target2 != _236;
  if (retval.1348 != 0)
    goto <bb 314>; [INV]
  else
    goto <bb 324>; [INV]

  <bb 314> :
  i.1351_237 = (unsigned int) i;
  D.253691 = gimple_call_arg (use_stmt, i.1351_237);

  <bb 315> :
  _238 = D.253691;
  _239 = _238->base.code;
  retval.1350 = _239 == 153;
  if (retval.1350 != 0)
    goto <bb 316>; [INV]
  else
    goto <bb 324>; [INV]

  <bb 316> :
  i.1353_240 = (unsigned int) i;
  D.253692 = gimple_call_arg (use_stmt, i.1353_240);

  <bb 317> :
  _241 = D.253692;
  D.253693 = check_stmtStack (_241);

  <bb 318> :
  _242 = D.253693;
  retval.1352 = _242 == 0;
  if (retval.1352 != 0)
    goto <bb 319>; [INV]
  else
    goto <bb 324>; [INV]

  <bb 319> :
  i.1355_243 = (unsigned int) i;
  D.253694 = gimple_call_arg (use_stmt, i.1355_243);

  <bb 320> :
  _244 = D.253694;
  retval.1354 = target2 != _244;
  if (retval.1354 != 0)
    goto <bb 321>; [INV]
  else
    goto <bb 324>; [INV]

  <bb 321> :
  i.1356_245 = (unsigned int) i;
  D.253695 = gimple_call_arg (use_stmt, i.1356_245);

  <bb 322> :
  _246 = D.253695;
  i.1357_247 = (unsigned int) i;
  D.253696 = gimple_call_arg (use_stmt, i.1357_247);

  <bb 323> :
  _248 = D.253696;
  new_search_imm_use (used_stmt, _248, _246);

  <bb 324> :
  i = i + 1;

  <bb 325> :
  D.253697 = gimple_call_num_args (use_stmt);

  <bb 326> :
  _249 = D.253697;
  i.1359_250 = (unsigned int) i;
  retval.1358 = _249 > i.1359_250;
  if (retval.1358 != 0)
    goto <bb 310>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 327> :
  D.253698 = gimple_call_fn (use_stmt);

  <bb 328> :
  _251 = D.253698;
  D.253699 = check_stmtStack (_251);

  <bb 329> :
  _252 = D.253699;
  retval.1360 = _252 == 0;
  if (retval.1360 != 0)
    goto <bb 330>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 330> :
  D.253700 = gimple_call_fn (use_stmt);

  <bb 331> :
  _253 = D.253700;
  set_gimple_array (used_stmt, use_stmt, _253, target, 0B);

  <bb 332> :
  D.253701 = gimple_call_fn (use_stmt);

  <bb 333> :
  _254 = D.253701;
  _255 = _254->base.code;
  retval.1361 = _255 == 153;
  if (retval.1361 != 0)
    goto <bb 334>; [INV]
  else
    goto <bb 337>; [INV]

  <bb 334> :
  D.253702 = gimple_call_fn (use_stmt);

  <bb 335> :
  _256 = D.253702;
  D.253703 = gimple_call_fn (use_stmt);

  <bb 336> :
  _257 = D.253703;
  new_search_imm_use (used_stmt, _257, _256);

  <bb 337> :

  <bb 338> :
  D.253704 = next_readonly_imm_use (&imm_iter);

  <bb 339> :
  use_p = D.253704;

  <bb 340> :
  _258 = end_readonly_imm_use_p (&imm_iter);
  retval.1362 = ~_258;
  if (retval.1362 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 341>; [INV]

  <bb 341> :
  imm_iter = {CLOBBER};
  goto <bb 343>; [INV]

  <bb 342> :
  imm_iter = {CLOBBER};

  <bb 343> :
<L352>:
  return;

  <bb 344> :
<L353>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 3

  <bb 345> :
<L354>:
  getFunctionAssignVAR = {CLOBBER};
  assign_array = {CLOBBER};
  resx 2

  <bb 346> :
<L355>:
  imm_iter = {CLOBBER};
  resx 1

}



;; Function num_imm_uses (_ZL12num_imm_usesPK9tree_node, funcdef_no=2993, decl_uid=109485, cgraph_uid=2095, symbol_order=2260)

Removing basic block 8
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;;
;; Loop 2
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 4 5
;;
;; Loop 1
;;  header 16, latch 15
;;  depth 1, outer 0
;;  nodes: 16 15 13 14 11 12 9 10
;; 2 succs { 3 8 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 4 17 }
;; 8 succs { 16 }
;; 9 succs { 10 12 }
;; 10 succs { 11 12 }
;; 11 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 }
;; 16 succs { 9 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
unsigned int num_imm_uses (const union tree_node * var)
{
  unsigned int num;
  const struct ssa_use_operand_t * ptr;
  const struct ssa_use_operand_t * const start;
  unsigned int D.253723;
  bool iftmp.1364;
  bool retval.1363;

  <bb 2> :
  start = &var->ssa_name.imm_uses;
  num = 0;
  _1 = global_options.x_flag_var_tracking_assignments;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  ptr = start->next;
  goto <bb 7>; [INV]

  <bb 4> :
  _2 = ptr->loc.stmt;
  if (_2 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  num = num + 1;

  <bb 6> :
  ptr = ptr->next;

  <bb 7> :
  if (ptr != start)
    goto <bb 4>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 8> :
  ptr = start->next;
  goto <bb 16>; [INV]

  <bb 9> :
  _3 = ptr->loc.stmt;
  if (_3 != 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  _4 = ptr->loc.stmt;
  _5 = is_gimple_debug (_4);
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  iftmp.1364 = 1;
  goto <bb 13>; [INV]

  <bb 12> :
  iftmp.1364 = 0;

  <bb 13> :
  retval.1363 = iftmp.1364;
  if (retval.1363 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  num = num + 1;

  <bb 15> :
  ptr = ptr->next;

  <bb 16> :
  if (ptr != start)
    goto <bb 9>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  D.253723 = num;

  <bb 18> :
<L19>:
  return D.253723;

}



;; Function is_gimple_debug (_ZL15is_gimple_debugPK6gimple, funcdef_no=2297, decl_uid=93567, cgraph_uid=1434, symbol_order=1594)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool is_gimple_debug (const struct gimple * gs)
{
  bool D.253725;

  <bb 2> :
  _1 = gimple_code (gs);
  D.253725 = _1 == 2;

  <bb 3> :
<L0>:
  return D.253725;

}



;; Function first_readonly_imm_use (_ZL22first_readonly_imm_useP16imm_use_iteratorP9tree_node, funcdef_no=2988, decl_uid=109451, cgraph_uid=2090, symbol_order=2255)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct ssa_use_operand_t * first_readonly_imm_use (struct imm_use_iterator * imm, union tree_node * var)
{
  struct ssa_use_operand_t * D.253730;
  bool retval.1365;

  <bb 2> :
  _1 = &var->ssa_name.imm_uses;
  imm->end_p = _1;
  _2 = imm->end_p;
  _3 = _2->next;
  imm->imm_use = _3;
  _4 = imm->imm_use;
  _5 = _4->next;
  imm->iter_node.next = _5;
  retval.1365 = end_readonly_imm_use_p (imm);
  if (retval.1365 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.253730 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.253730 = imm->imm_use;

  <bb 5> :
<L2>:
  return D.253730;

}



;; Function gimple_cond_code (_ZL16gimple_cond_codePK6gimple, funcdef_no=2174, decl_uid=93048, cgraph_uid=1311, symbol_order=1471)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
tree_code gimple_cond_code (const struct gimple * gs)
{
  const struct gcond * D.253734;
  const struct gcond * gc;
  tree_code D.253732;

  <bb 2> :
  D.253734 = GIMPLE_CHECK2<const gcond*> (gs);
  gc = D.253734;
  D.253732 = gimple_cond_code (gc);

  <bb 3> :
<L0>:
  return D.253732;

}



;; Function GIMPLE_CHECK2<const gcond*> (_Z13GIMPLE_CHECK2IPK5gcondET_PK6gimple, funcdef_no=7048, decl_uid=93051, cgraph_uid=3680, symbol_order=4462)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcond * GIMPLE_CHECK2<const gcond*> (const struct gimple * gs)
{
  const struct gcond * D.253737;
  const struct gcond * D.253735;

  <bb 2> :
  D.253737 = as_a<const gcond*, const gimple> (gs);
  D.253735 = D.253737;

  <bb 3> :
<L0>:
  return D.253735;

}



;; Function as_a<const gcond*, const gimple> (_Z4as_aIPK5gcondK6gimpleET_PT0_, funcdef_no=8038, decl_uid=205860, cgraph_uid=4670, symbol_order=5455)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcond * as_a<const gcond*, const gimple> (const struct gimple * p)
{
  const struct gcond * D.253740;
  const struct gcond * D.253738;

  <bb 2> :
  D.253740 = is_a_helper<const gcond*>::cast<gimple> (p);
  D.253738 = D.253740;

  <bb 3> :
<L0>:
  return D.253738;

}



;; Function is_a_helper<const gcond*>::cast<gimple> (_ZN11is_a_helperIPK5gcondE4castI6gimpleEES2_PKT_, funcdef_no=8042, decl_uid=205878, cgraph_uid=4674, symbol_order=5459)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcond * is_a_helper<const gcond*>::cast<gimple> (const struct gimple * p)
{
  const struct gcond * D.253741;

  <bb 2> :
  D.253741 = reinterpret_is_a_helper<gcond*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.253741;

}



;; Function reinterpret_is_a_helper<gcond*>::cast<gimple> (_ZN23reinterpret_is_a_helperIP5gcondE4castI6gimpleEES1_PT_, funcdef_no=8997, decl_uid=218016, cgraph_uid=5629, symbol_order=6418)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gcond * reinterpret_is_a_helper<gcond*>::cast<gimple> (struct gimple * p)
{
  struct gcond * D.253743;

  <bb 2> :
  D.253743 = p;

  <bb 3> :
<L0>:
  return D.253743;

}



;; Function gimple_cond_code (_ZL16gimple_cond_codePK5gcond, funcdef_no=2173, decl_uid=93045, cgraph_uid=1310, symbol_order=1470)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
tree_code gimple_cond_code (const struct gcond * gs)
{
  tree_code D.253745;

  <bb 2> :
  _1 = gs->D.90458.D.90144.D.90137.subcode;
  D.253745 = (tree_code) _1;

  <bb 3> :
<L0>:
  return D.253745;

}



;; Function gimple_cond_lhs (_ZL15gimple_cond_lhsPK6gimple, funcdef_no=2177, decl_uid=93063, cgraph_uid=1314, symbol_order=1474)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_cond_lhs (const struct gimple * gs)
{
  const struct gcond * D.253749;
  const struct gcond * gc;
  union tree_node * D.253747;

  <bb 2> :
  D.253749 = GIMPLE_CHECK2<const gcond*> (gs);
  gc = D.253749;
  D.253747 = gimple_cond_lhs (gc);

  <bb 3> :
<L0>:
  return D.253747;

}



;; Function GIMPLE_CHECK2<const gcond*> (_Z13GIMPLE_CHECK2IPK5gcondET_P6gimple, funcdef_no=7762, decl_uid=93053, cgraph_uid=4394, symbol_order=5179)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcond * GIMPLE_CHECK2<const gcond*> (struct gimple * gs)
{
  const struct gcond * D.253752;
  const struct gcond * D.253750;

  <bb 2> :
  D.253752 = as_a<const gcond*, gimple> (gs);
  D.253750 = D.253752;

  <bb 3> :
<L0>:
  return D.253750;

}



;; Function as_a<const gcond*, gimple> (_Z4as_aIPK5gcond6gimpleET_PT0_, funcdef_no=8705, decl_uid=213856, cgraph_uid=5337, symbol_order=6126)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcond * as_a<const gcond*, gimple> (struct gimple * p)
{
  const struct gcond * D.253755;
  const struct gcond * D.253753;

  <bb 2> :
  D.253755 = is_a_helper<const gcond*>::cast<gimple> (p);
  D.253753 = D.253755;

  <bb 3> :
<L0>:
  return D.253753;

}



;; Function gimple_cond_rhs (_ZL15gimple_cond_rhsPK5gcond, funcdef_no=2180, decl_uid=93074, cgraph_uid=1317, symbol_order=1477)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_cond_rhs (const struct gcond * gs)
{
  union tree_node * D.253756;

  <bb 2> :
  D.253756 = gs->D.90458.op[1];

  <bb 3> :
<L0>:
  return D.253756;

}



;; Function gimple_cond_lhs (_ZL15gimple_cond_lhsPK5gcond, funcdef_no=2176, decl_uid=93060, cgraph_uid=1313, symbol_order=1473)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_cond_lhs (const struct gcond * gs)
{
  union tree_node * D.253758;

  <bb 2> :
  D.253758 = gs->D.90458.op[0];

  <bb 3> :
<L0>:
  return D.253758;

}



;; Function next_readonly_imm_use (_ZL21next_readonly_imm_useP16imm_use_iterator, funcdef_no=2989, decl_uid=109454, cgraph_uid=2091, symbol_order=2256)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct ssa_use_operand_t * next_readonly_imm_use (struct imm_use_iterator * imm)
{
  static const char __FUNCTION__[22] [value-expr: "next_readonly_imm_use"];
  struct ssa_use_operand_t * old;
  struct ssa_use_operand_t * D.253768;
  bool retval.1366;

  <bb 2> :
  old = imm->imm_use;
  _1 = global_options.x_flag_checking;
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  _2 = imm->iter_node.next;
  _3 = old->next;
  if (_2 != _3)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/ssa-iterators.h", 374, "next_readonly_imm_use");

  <bb 5> :
  _4 = old->next;
  _5 = _4->next;
  imm->iter_node.next = _5;

  <bb 6> :
  _6 = old->next;
  imm->imm_use = _6;
  retval.1366 = end_readonly_imm_use_p (imm);
  if (retval.1366 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  D.253768 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  D.253768 = imm->imm_use;

  <bb 9> :
<L7>:
  return D.253768;

}



;; Function end_readonly_imm_use_p (_ZL22end_readonly_imm_use_pPK16imm_use_iterator, funcdef_no=2987, decl_uid=109447, cgraph_uid=2089, symbol_order=2254)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool end_readonly_imm_use_p (const struct imm_use_iterator * imm)
{
  bool D.253770;

  <bb 2> :
  _1 = imm->imm_use;
  _2 = imm->end_p;
  D.253770 = _1 == _2;

  <bb 3> :
<L0>:
  return D.253770;

}



;; Function check_bbStack (_Z13check_bbStackP15basic_block_def, funcdef_no=6419, decl_uid=196355, cgraph_uid=3395, symbol_order=4171)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int check_bbStack (struct basic_block_def * target)
{
  int o;
  int size;
  int D.253775;
  bool retval.1367;

  <bb 2> :
  _1 = std::vector<basic_block_def*>::size (&new_path_array);
  _2 = (unsigned int) _1;
  _3 = _2 + 4294967295;
  o = (int) _3;
  goto <bb 6>; [INV]

  <bb 3> :
  _4 = (long unsigned int) o;
  _5 = std::vector<basic_block_def*>::operator[] (&new_path_array, _4);
  _6 = *_5;
  target.1368_7 = target;
  retval.1367 = _6 == target.1368_7;
  if (retval.1367 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.253775 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  o = o + -1;

  <bb 6> :
  if (o >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  size = 8;
  totalsize.1369_8 = totalsize;
  _9 = size + totalsize.1369_8;
  totalsize = _9;
  std::vector<basic_block_def*>::push_back (&new_path_array, &target);
  D.253775 = 0;

  <bb 8> :
<L5>:
  return D.253775;

}



;; Function std::vector<basic_block_def*>::size (_ZNKSt6vectorIP15basic_block_defSaIS1_EE4sizeEv, funcdef_no=7763, decl_uid=169933, cgraph_uid=4395, symbol_order=5180)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<basic_block_def*>::size (const struct vector * const this)
{
  size_type D.253777;

  <bb 2> :
  _1 = this->D.170300._M_impl.D.169645._M_finish;
  _2 = this->D.170300._M_impl.D.169645._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  D.253777 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.253777;

}



;; Function std::vector<basic_block_def*>::operator[] (_ZNSt6vectorIP15basic_block_defSaIS1_EEixEm, funcdef_no=7764, decl_uid=169953, cgraph_uid=4396, symbol_order=5181)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * & std::vector<basic_block_def*>::operator[] (struct vector * const this, size_type __n)
{
  struct basic_block_def * & D.253779;

  <bb 2> :
  _1 = this->D.170300._M_impl.D.169645._M_start;
  _2 = __n * 8;
  D.253779 = _1 + _2;

  <bb 3> :
<L0>:
  return D.253779;

}



;; Function std::vector<basic_block_def*>::push_back (_ZNSt6vectorIP15basic_block_defSaIS1_EE9push_backERKS1_, funcdef_no=7765, decl_uid=169980, cgraph_uid=4398, symbol_order=5183)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<basic_block_def*>::push_back (struct vector * const this, struct basic_block_def * const & __x)
{
  struct __normal_iterator D.253784;

  <bb 2> :
  _1 = this->D.170300._M_impl.D.169645._M_finish;
  _2 = this->D.170300._M_impl.D.169645._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.170300._M_impl.D.169645._M_finish;
  _4 = &this->D.170300._M_impl;
  std::allocator_traits<std::allocator<basic_block_def*> >::construct<basic_block_def*, basic_block_def* const&> (_4, _3, __x);
  _5 = this->D.170300._M_impl.D.169645._M_finish;
  _6 = _5 + 8;
  this->D.170300._M_impl.D.169645._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.253784 = std::vector<basic_block_def*>::end (this);
  std::vector<basic_block_def*>::_M_realloc_insert<basic_block_def* const&> (this, D.253784, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<basic_block_def*> >::construct<basic_block_def*, basic_block_def* const&> (_ZNSt16allocator_traitsISaIP15basic_block_defEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_, funcdef_no=8706, decl_uid=213863, cgraph_uid=5338, symbol_order=6127)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<basic_block_def*> >::construct<basic_block_def*, basic_block_def* const&> (struct allocator_type & __a, struct basic_block_def * * __p, struct basic_block_def * const & __args#0)
{
  <bb 2> :
  _1 = std::forward<basic_block_def* const&> (__args#0);
  __gnu_cxx::new_allocator<basic_block_def*>::construct<basic_block_def*, basic_block_def* const&> (__a, __p, _1);
  return;

}



;; Function std::forward<basic_block_def* const&> (_ZSt7forwardIRKP15basic_block_defEOT_RNSt16remove_referenceIS4_E4typeE, funcdef_no=9522, decl_uid=226176, cgraph_uid=6154, symbol_order=6943)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct basic_block_def * const & std::forward<basic_block_def* const&> (struct basic_block_def * const & __t)
{
  struct basic_block_def * const & D.253785;

  <bb 2> :
  D.253785 = __t;

  <bb 3> :
<L0>:
  return D.253785;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::construct<basic_block_def*, basic_block_def* const&> (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defE9constructIS2_JRKS2_EEEvPT_DpOT0_, funcdef_no=9523, decl_uid=226178, cgraph_uid=6155, symbol_order=6944)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<basic_block_def*>::construct<basic_block_def*, basic_block_def* const&> (struct new_allocator * const this, struct basic_block_def * * __p, struct basic_block_def * const & __args#0)
{
  void * D.235368;
  void * D.235367;
  struct basic_block_def * D.235369;

  <bb 2> :
  _1 = std::forward<basic_block_def* const&> (__args#0);
  D.235369 = *_1;
  D.235367 = __p;
  D.235368 = operator new (8, D.235367);
  MEM[(struct basic_block_def * *)D.235368] = D.235369;
  return;

}



;; Function std::vector<basic_block_def*>::end (_ZNSt6vectorIP15basic_block_defSaIS1_EE3endEv, funcdef_no=8707, decl_uid=169913, cgraph_uid=5339, symbol_order=6128)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<basic_block_def*>::end (struct vector * const this)
{
  struct iterator D.226201;
  struct iterator D.253787;

  <bb 2> :
  _1 = &this->D.170300._M_impl.D.169645._M_finish;
  __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::__normal_iterator (&D.226201, _1);
  D.253787 = D.226201;
  D.226201 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253787;

}



;; Function __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS2_SaIS2_EEEC2ERKS3_, funcdef_no=9525, decl_uid=214110, cgraph_uid=6157, symbol_order=6946)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::__normal_iterator (struct __normal_iterator * const this, struct basic_block_def * * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<basic_block_def*>::_M_realloc_insert<basic_block_def* const&> (_ZNSt6vectorIP15basic_block_defSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_, funcdef_no=8708, decl_uid=214129, cgraph_uid=5343, symbol_order=6132)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<basic_block_def*>::_M_realloc_insert<basic_block_def* const&> (struct vector * const this, struct iterator __position, struct basic_block_def * const & __args#0)
{
  struct basic_block_def * * D.253794;
  const size_type D.253793;
  struct basic_block_def * * __new_finish;
  struct basic_block_def * * __new_start;
  const size_type __elems_before;
  struct basic_block_def * * __old_finish;
  struct basic_block_def * * __old_start;
  const size_type __len;
  struct iterator D.226209;

  <bb 2> :
  D.253793 = std::vector<basic_block_def*>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.253793;
  __old_start = this->D.170300._M_impl.D.169645._M_start;
  __old_finish = this->D.170300._M_impl.D.169645._M_finish;
  D.226209 = std::vector<basic_block_def*>::begin (this);
  _1 = __gnu_cxx::operator-<basic_block_def**, std::vector<basic_block_def*> > (&__position, &D.226209);
  __elems_before = (const size_type) _1;
  D.226209 = {CLOBBER};
  _2 = &this->D.170300;
  D.253794 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_allocate (_2, __len);
  __new_start = D.253794;
  __new_finish = __new_start;
  _3 = std::forward<basic_block_def* const&> (__args#0);
  _4 = __elems_before * 8;
  _5 = __new_start + _4;
  _6 = &this->D.170300._M_impl;
  std::allocator_traits<std::allocator<basic_block_def*> >::construct<basic_block_def*, basic_block_def* const&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.170300;
  _8 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<basic_block_def*>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 8;
  _11 = &this->D.170300;
  _12 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<basic_block_def*>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.170300;
  _23 = this->D.170300._M_impl.D.169645._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 8;
  _26 = (long unsigned int) _25;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (_22, __old_start, _26);
  this->D.170300._M_impl.D.169645._M_start = __new_start;
  this->D.170300._M_impl.D.169645._M_finish = __new_finish;
  _27 = __len * 8;
  _28 = __new_start + _27;
  this->D.170300._M_impl.D.169645._M_end_of_storage = _28;
  return;

}



;; Function std::vector<basic_block_def*>::_M_check_len (_ZNKSt6vectorIP15basic_block_defSaIS1_EE12_M_check_lenEmPKc, funcdef_no=9527, decl_uid=170149, cgraph_uid=6159, symbol_order=6948)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<basic_block_def*>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.1372;
  size_type D.253798;
  const long unsigned int D.235378;
  bool retval.1370;

  <bb 2> :
  _1 = std::vector<basic_block_def*>::max_size (this);
  _2 = std::vector<basic_block_def*>::size (this);
  _3 = _1 - _2;
  __n.1371_4 = __n;
  retval.1370 = _3 < __n.1371_4;
  if (retval.1370 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<basic_block_def*>::size (this);
  _6 = std::vector<basic_block_def*>::size (this);
  D.235378 = _6;
  _7 = std::max<long unsigned int> (&D.235378, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.235378 = {CLOBBER};
  _9 = std::vector<basic_block_def*>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<basic_block_def*>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1372 = std::vector<basic_block_def*>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1372 = __len;

  <bb 8> :
  D.253798 = iftmp.1372;

  <bb 9> :
<L6>:
  return D.253798;

}



;; Function std::vector<basic_block_def*>::max_size (_ZNKSt6vectorIP15basic_block_defSaIS1_EE8max_sizeEv, funcdef_no=10135, decl_uid=169935, cgraph_uid=6767, symbol_order=7560)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<basic_block_def*>::max_size (const struct vector * const this)
{
  size_type D.253805;

  <bb 2> :
  _1 = &this->D.170300;
  _2 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_1);
  D.253805 = std::vector<basic_block_def*>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.253805;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseIP15basic_block_defSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=9600, decl_uid=169535, cgraph_uid=6232, symbol_order=7021)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.253807;

  <bb 2> :
  D.253807 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.253807;

}



;; Function std::vector<basic_block_def*>::_S_max_size (_ZNSt6vectorIP15basic_block_defSaIS1_EE11_S_max_sizeERKS2_, funcdef_no=10594, decl_uid=170156, cgraph_uid=7226, symbol_order=8019)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<basic_block_def*>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.253809;

  <bb 2> :
  __diffmax = 1152921504606846975;
  _1 = std::allocator_traits<std::allocator<basic_block_def*> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.253809 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253809;

}



;; Function std::allocator_traits<std::allocator<basic_block_def*> >::max_size (_ZNSt16allocator_traitsISaIP15basic_block_defEE8max_sizeERKS2_, funcdef_no=10806, decl_uid=169470, cgraph_uid=7438, symbol_order=8233)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<basic_block_def*> >::max_size (const struct allocator_type & __a)
{
  size_type D.253812;

  <bb 2> :
  D.253812 = __gnu_cxx::new_allocator<basic_block_def*>::max_size (__a);

  <bb 3> :
<L0>:
  return D.253812;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::max_size (_ZNK9__gnu_cxx13new_allocatorIP15basic_block_defE8max_sizeEv, funcdef_no=10906, decl_uid=169312, cgraph_uid=7538, symbol_order=8333)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<basic_block_def*>::max_size (const struct new_allocator * const this)
{
  size_type D.253814;

  <bb 2> :
  D.253814 = __gnu_cxx::new_allocator<basic_block_def*>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.253814;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIP15basic_block_defE11_M_max_sizeEv, funcdef_no=10596, decl_uid=169331, cgraph_uid=7227, symbol_order=8020)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<basic_block_def*>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.253816;

  <bb 2> :
  D.253816 = 1152921504606846975;

  <bb 3> :
<L0>:
  return D.253816;

}



;; Function std::vector<basic_block_def*>::begin (_ZNSt6vectorIP15basic_block_defSaIS1_EE5beginEv, funcdef_no=9528, decl_uid=169909, cgraph_uid=6160, symbol_order=6949)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<basic_block_def*>::begin (struct vector * const this)
{
  struct iterator D.235380;
  struct iterator D.253818;

  <bb 2> :
  _1 = &this->D.170300._M_impl.D.169645._M_start;
  __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::__normal_iterator (&D.235380, _1);
  D.253818 = D.235380;
  D.235380 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253818;

}



;; Function __gnu_cxx::operator-<basic_block_def**, std::vector<basic_block_def*> > (_ZN9__gnu_cxxmiIPP15basic_block_defSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_, funcdef_no=9529, decl_uid=226210, cgraph_uid=6161, symbol_order=6950)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<basic_block_def**, std::vector<basic_block_def*> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.253821;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.253821 = _5 /[ex] 8;

  <bb 3> :
<L0>:
  return D.253821;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_allocate (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE11_M_allocateEm, funcdef_no=9530, decl_uid=169649, cgraph_uid=6162, symbol_order=6951)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct basic_block_def * * std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct basic_block_def * * D.253829;
  struct basic_block_def * * iftmp.1373;
  struct basic_block_def * * D.253823;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.253829 = std::allocator_traits<std::allocator<basic_block_def*> >::allocate (_1, __n);
  iftmp.1373 = D.253829;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1373 = 0B;

  <bb 5> :
  D.253823 = iftmp.1373;

  <bb 6> :
<L3>:
  return D.253823;

}



;; Function std::allocator_traits<std::allocator<basic_block_def*> >::allocate (_ZNSt16allocator_traitsISaIP15basic_block_defEE8allocateERS2_m, funcdef_no=10136, decl_uid=169450, cgraph_uid=6768, symbol_order=7561)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct basic_block_def * * std::allocator_traits<std::allocator<basic_block_def*> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct basic_block_def * * D.253832;
  struct basic_block_def * * D.253830;

  <bb 2> :
  D.253832 = __gnu_cxx::new_allocator<basic_block_def*>::allocate (__a, __n, 0B);
  D.253830 = D.253832;

  <bb 3> :
<L0>:
  return D.253830;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::allocate (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defE8allocateEmPKv, funcdef_no=10595, decl_uid=169304, cgraph_uid=7228, symbol_order=8021)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct basic_block_def * * __gnu_cxx::new_allocator<basic_block_def*>::allocate (struct new_allocator * const this, size_type __n, const void * D.243583)
{
  struct basic_block_def * * D.253843;
  struct basic_block_def * * D.253842;
  align_val_t __al;
  struct basic_block_def * * D.253840;
  bool retval.1374;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<basic_block_def*>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.1374 = _4 != 0;
  if (retval.1374 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 2305843009213693951)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 8;
  D.253843 = operator new (_6);
  D.253840 = D.253843;

  <bb 7> :
<L6>:
  return D.253840;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=8721, decl_uid=169533, cgraph_uid=5353, symbol_order=6142)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.253844;

  <bb 2> :
  D.253844 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.253844;

}



;; Function __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS2_SaIS2_EEE4baseEv, funcdef_no=9532, decl_uid=214097, cgraph_uid=6164, symbol_order=6953)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * const & __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (const struct __normal_iterator * const this)
{
  struct basic_block_def * * const & D.253846;

  <bb 2> :
  D.253846 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.253846;

}



;; Function std::vector<basic_block_def*>::_S_relocate (_ZNSt6vectorIP15basic_block_defSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_, funcdef_no=9531, decl_uid=169807, cgraph_uid=6163, symbol_order=6952)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::vector<basic_block_def*>::_S_relocate (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.253849;
  struct basic_block_def * * D.253848;

  <bb 2> :
  D.253848 = std::vector<basic_block_def*>::_S_do_relocate (__first, __last, __result, __alloc, D.253849);

  <bb 3> :
<L0>:
  return D.253848;

}



;; Function std::vector<basic_block_def*>::_S_do_relocate (_ZNSt6vectorIP15basic_block_defSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE, funcdef_no=10137, decl_uid=169795, cgraph_uid=6769, symbol_order=7562)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::vector<basic_block_def*>::_S_do_relocate (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result, struct _Tp_alloc_type & __alloc, struct true_type D.240371)
{
  struct basic_block_def * * D.253851;

  <bb 2> :
  D.253851 = std::__relocate_a<basic_block_def**, basic_block_def**, std::allocator<basic_block_def*> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.253851;

}



;; Function std::__relocate_a<basic_block_def**, basic_block_def**, std::allocator<basic_block_def*> > (_ZSt12__relocate_aIPP15basic_block_defS2_SaIS1_EET0_T_S5_S4_RT1_, funcdef_no=10597, decl_uid=226375, cgraph_uid=7229, symbol_order=8022)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__relocate_a<basic_block_def**, basic_block_def**, std::allocator<basic_block_def*> > (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result, struct allocator & __alloc)
{
  struct basic_block_def * * D.253853;

  <bb 2> :
  _1 = std::__niter_base<basic_block_def**> (__result);
  _2 = std::__niter_base<basic_block_def**> (__last);
  _3 = std::__niter_base<basic_block_def**> (__first);
  D.253853 = std::__relocate_a_1<basic_block_def*, basic_block_def*> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.253853;

}



;; Function std::__niter_base<basic_block_def**> (_ZSt12__niter_baseIPP15basic_block_defET_S3_, funcdef_no=10640, decl_uid=226381, cgraph_uid=7272, symbol_order=8065)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__niter_base<basic_block_def**> (struct basic_block_def * * __it)
{
  struct basic_block_def * * D.253855;

  <bb 2> :
  D.253855 = __it;

  <bb 3> :
<L0>:
  return D.253855;

}



;; Function std::__relocate_a_1<basic_block_def*, basic_block_def*> (_ZSt14__relocate_a_1IP15basic_block_defS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E, funcdef_no=10807, decl_uid=226549, cgraph_uid=7439, symbol_order=8234)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct basic_block_def * * std::__relocate_a_1<basic_block_def*, basic_block_def*> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result, struct allocator & D.244618)
{
  ptrdiff_t __count;
  struct basic_block_def * * D.253860;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 8;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.1375_2 = (long unsigned int) __count;
  _3 = __count.1375_2 * 8;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.1376_4 = (long unsigned int) __count;
  _5 = __count.1376_4 * 8;
  D.253860 = __result + _5;

  <bb 5> :
<L3>:
  return D.253860;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE13_M_deallocateEPS1_m, funcdef_no=8373, decl_uid=169652, cgraph_uid=5005, symbol_order=5794)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (struct _Vector_base * const this, struct basic_block_def * * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<basic_block_def*> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<basic_block_def*> >::deallocate (_ZNSt16allocator_traitsISaIP15basic_block_defEE10deallocateERS2_PS1_m, funcdef_no=9160, decl_uid=169457, cgraph_uid=5792, symbol_order=6581)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<basic_block_def*> >::deallocate (struct allocator_type & __a, struct basic_block_def * * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<basic_block_def*>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::deallocate (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defE10deallocateEPS2_m, funcdef_no=9877, decl_uid=169308, cgraph_uid=6509, symbol_order=7302)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<basic_block_def*>::deallocate (struct new_allocator * const this, struct basic_block_def * * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 8;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function check_stmtStack (_Z15check_stmtStackP9tree_node, funcdef_no=6420, decl_uid=186967, cgraph_uid=3396, symbol_order=4172)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int check_stmtStack (union tree_node * target)
{
  int o;
  int size;
  int D.253871;
  bool retval.1377;

  <bb 2> :
  _1 = std::vector<tree_node*>::size (&new_gimpletree_array);
  _2 = (unsigned int) _1;
  _3 = _2 + 4294967295;
  o = (int) _3;
  goto <bb 6>; [INV]

  <bb 3> :
  _4 = (long unsigned int) o;
  _5 = std::vector<tree_node*>::operator[] (&new_gimpletree_array, _4);
  _6 = *_5;
  target.1378_7 = target;
  retval.1377 = _6 == target.1378_7;
  if (retval.1377 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.253871 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  o = o + -1;

  <bb 6> :
  if (o >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  size = 8;
  totalsize.1379_8 = totalsize;
  _9 = size + totalsize.1379_8;
  totalsize = _9;
  std::vector<tree_node*>::push_back (&new_gimpletree_array, &target);
  D.253871 = 0;

  <bb 8> :
<L5>:
  return D.253871;

}



;; Function check_stmtStack2 (_Z16check_stmtStack2P6gimple, funcdef_no=6421, decl_uid=186965, cgraph_uid=3397, symbol_order=4173)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int check_stmtStack2 (struct gimple * stmt)
{
  int o;
  int size;
  int D.253876;
  bool retval.1380;

  <bb 2> :
  _1 = std::vector<gimple*>::size (&new_gimple_array);
  _2 = (unsigned int) _1;
  _3 = _2 + 4294967295;
  o = (int) _3;
  goto <bb 6>; [INV]

  <bb 3> :
  _4 = (long unsigned int) o;
  _5 = std::vector<gimple*>::operator[] (&new_gimple_array, _4);
  _6 = *_5;
  stmt.1381_7 = stmt;
  retval.1380 = _6 == stmt.1381_7;
  if (retval.1380 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.253876 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  o = o + -1;

  <bb 6> :
  if (o >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  size = 8;
  totalsize.1382_8 = totalsize;
  _9 = size + totalsize.1382_8;
  totalsize = _9;
  std::vector<gimple*>::push_back (&new_gimple_array, &stmt);
  D.253876 = 0;

  <bb 8> :
<L5>:
  return D.253876;

}



;; Function std::vector<gimple*>::size (_ZNKSt6vectorIP6gimpleSaIS1_EE4sizeEv, funcdef_no=7767, decl_uid=183606, cgraph_uid=4399, symbol_order=5184)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<gimple*>::size (const struct vector * const this)
{
  size_type D.253878;

  <bb 2> :
  _1 = this->D.183973._M_impl.D.183329._M_finish;
  _2 = this->D.183973._M_impl.D.183329._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  D.253878 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.253878;

}



;; Function std::vector<gimple*>::operator[] (_ZNSt6vectorIP6gimpleSaIS1_EEixEm, funcdef_no=7768, decl_uid=183626, cgraph_uid=4400, symbol_order=5185)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * & std::vector<gimple*>::operator[] (struct vector * const this, size_type __n)
{
  struct gimple * & D.253880;

  <bb 2> :
  _1 = this->D.183973._M_impl.D.183329._M_start;
  _2 = __n * 8;
  D.253880 = _1 + _2;

  <bb 3> :
<L0>:
  return D.253880;

}



;; Function std::vector<gimple*>::push_back (_ZNSt6vectorIP6gimpleSaIS1_EE9push_backERKS1_, funcdef_no=7769, decl_uid=183653, cgraph_uid=4402, symbol_order=5187)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<gimple*>::push_back (struct vector * const this, struct gimple * const & __x)
{
  struct __normal_iterator D.253885;

  <bb 2> :
  _1 = this->D.183973._M_impl.D.183329._M_finish;
  _2 = this->D.183973._M_impl.D.183329._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.183973._M_impl.D.183329._M_finish;
  _4 = &this->D.183973._M_impl;
  std::allocator_traits<std::allocator<gimple*> >::construct<gimple*, gimple* const&> (_4, _3, __x);
  _5 = this->D.183973._M_impl.D.183329._M_finish;
  _6 = _5 + 8;
  this->D.183973._M_impl.D.183329._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.253885 = std::vector<gimple*>::end (this);
  std::vector<gimple*>::_M_realloc_insert<gimple* const&> (this, D.253885, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<gimple*> >::construct<gimple*, gimple* const&> (_ZNSt16allocator_traitsISaIP6gimpleEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_, funcdef_no=8712, decl_uid=214138, cgraph_uid=5344, symbol_order=6133)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<gimple*> >::construct<gimple*, gimple* const&> (struct allocator_type & __a, struct gimple * * __p, struct gimple * const & __args#0)
{
  <bb 2> :
  _1 = std::forward<gimple* const&> (__args#0);
  __gnu_cxx::new_allocator<gimple*>::construct<gimple*, gimple* const&> (__a, __p, _1);
  return;

}



;; Function std::forward<gimple* const&> (_ZSt7forwardIRKP6gimpleEOT_RNSt16remove_referenceIS4_E4typeE, funcdef_no=9534, decl_uid=226701, cgraph_uid=6166, symbol_order=6955)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct gimple * const & std::forward<gimple* const&> (struct gimple * const & __t)
{
  struct gimple * const & D.253886;

  <bb 2> :
  D.253886 = __t;

  <bb 3> :
<L0>:
  return D.253886;

}



;; Function __gnu_cxx::new_allocator<gimple*>::construct<gimple*, gimple* const&> (_ZN9__gnu_cxx13new_allocatorIP6gimpleE9constructIS2_JRKS2_EEEvPT_DpOT0_, funcdef_no=9535, decl_uid=226703, cgraph_uid=6167, symbol_order=6956)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple*>::construct<gimple*, gimple* const&> (struct new_allocator * const this, struct gimple * * __p, struct gimple * const & __args#0)
{
  void * D.235409;
  void * D.235408;
  struct gimple * D.235410;

  <bb 2> :
  _1 = std::forward<gimple* const&> (__args#0);
  D.235410 = *_1;
  D.235408 = __p;
  D.235409 = operator new (8, D.235408);
  MEM[(struct gimple * *)D.235409] = D.235410;
  return;

}



;; Function std::vector<gimple*>::end (_ZNSt6vectorIP6gimpleSaIS1_EE3endEv, funcdef_no=8713, decl_uid=183586, cgraph_uid=5345, symbol_order=6134)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<gimple*>::end (struct vector * const this)
{
  struct iterator D.226726;
  struct iterator D.253888;

  <bb 2> :
  _1 = &this->D.183973._M_impl.D.183329._M_finish;
  __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::__normal_iterator (&D.226726, _1);
  D.253888 = D.226726;
  D.226726 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253888;

}



;; Function __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPP6gimpleSt6vectorIS2_SaIS2_EEEC2ERKS3_, funcdef_no=9537, decl_uid=214375, cgraph_uid=6169, symbol_order=6958)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::__normal_iterator (struct __normal_iterator * const this, struct gimple * * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<gimple*>::_M_realloc_insert<gimple* const&> (_ZNSt6vectorIP6gimpleSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_, funcdef_no=8714, decl_uid=214394, cgraph_uid=5349, symbol_order=6138)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<gimple*>::_M_realloc_insert<gimple* const&> (struct vector * const this, struct iterator __position, struct gimple * const & __args#0)
{
  struct gimple * * D.253895;
  const size_type D.253894;
  struct gimple * * __new_finish;
  struct gimple * * __new_start;
  const size_type __elems_before;
  struct gimple * * __old_finish;
  struct gimple * * __old_start;
  const size_type __len;
  struct iterator D.226734;

  <bb 2> :
  D.253894 = std::vector<gimple*>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.253894;
  __old_start = this->D.183973._M_impl.D.183329._M_start;
  __old_finish = this->D.183973._M_impl.D.183329._M_finish;
  D.226734 = std::vector<gimple*>::begin (this);
  _1 = __gnu_cxx::operator-<gimple**, std::vector<gimple*> > (&__position, &D.226734);
  __elems_before = (const size_type) _1;
  D.226734 = {CLOBBER};
  _2 = &this->D.183973;
  D.253895 = std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_allocate (_2, __len);
  __new_start = D.253895;
  __new_finish = __new_start;
  _3 = std::forward<gimple* const&> (__args#0);
  _4 = __elems_before * 8;
  _5 = __new_start + _4;
  _6 = &this->D.183973._M_impl;
  std::allocator_traits<std::allocator<gimple*> >::construct<gimple*, gimple* const&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.183973;
  _8 = std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<gimple*>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 8;
  _11 = &this->D.183973;
  _12 = std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<gimple*>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.183973;
  _23 = this->D.183973._M_impl.D.183329._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 8;
  _26 = (long unsigned int) _25;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_deallocate (_22, __old_start, _26);
  this->D.183973._M_impl.D.183329._M_start = __new_start;
  this->D.183973._M_impl.D.183329._M_finish = __new_finish;
  _27 = __len * 8;
  _28 = __new_start + _27;
  this->D.183973._M_impl.D.183329._M_end_of_storage = _28;
  return;

}



;; Function std::vector<gimple*>::_M_check_len (_ZNKSt6vectorIP6gimpleSaIS1_EE12_M_check_lenEmPKc, funcdef_no=9539, decl_uid=183822, cgraph_uid=6171, symbol_order=6960)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<gimple*>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.1385;
  size_type D.253899;
  const long unsigned int D.235419;
  bool retval.1383;

  <bb 2> :
  _1 = std::vector<gimple*>::max_size (this);
  _2 = std::vector<gimple*>::size (this);
  _3 = _1 - _2;
  __n.1384_4 = __n;
  retval.1383 = _3 < __n.1384_4;
  if (retval.1383 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<gimple*>::size (this);
  _6 = std::vector<gimple*>::size (this);
  D.235419 = _6;
  _7 = std::max<long unsigned int> (&D.235419, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.235419 = {CLOBBER};
  _9 = std::vector<gimple*>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<gimple*>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1385 = std::vector<gimple*>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1385 = __len;

  <bb 8> :
  D.253899 = iftmp.1385;

  <bb 9> :
<L6>:
  return D.253899;

}



;; Function std::vector<gimple*>::max_size (_ZNKSt6vectorIP6gimpleSaIS1_EE8max_sizeEv, funcdef_no=10139, decl_uid=183608, cgraph_uid=6771, symbol_order=7564)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<gimple*>::max_size (const struct vector * const this)
{
  size_type D.253906;

  <bb 2> :
  _1 = &this->D.183973;
  _2 = std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_1);
  D.253906 = std::vector<gimple*>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.253906;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseIP6gimpleSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=10599, decl_uid=183219, cgraph_uid=7231, symbol_order=8024)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.253908;

  <bb 2> :
  D.253908 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.253908;

}



;; Function std::vector<gimple*>::_S_max_size (_ZNSt6vectorIP6gimpleSaIS1_EE11_S_max_sizeERKS2_, funcdef_no=10598, decl_uid=183829, cgraph_uid=7230, symbol_order=8023)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<gimple*>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.253910;

  <bb 2> :
  __diffmax = 1152921504606846975;
  _1 = std::allocator_traits<std::allocator<gimple*> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.253910 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253910;

}



;; Function std::allocator_traits<std::allocator<gimple*> >::max_size (_ZNSt16allocator_traitsISaIP6gimpleEE8max_sizeERKS2_, funcdef_no=10808, decl_uid=181785, cgraph_uid=7440, symbol_order=8235)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<gimple*> >::max_size (const struct allocator_type & __a)
{
  size_type D.253913;

  <bb 2> :
  D.253913 = __gnu_cxx::new_allocator<gimple*>::max_size (__a);

  <bb 3> :
<L0>:
  return D.253913;

}



;; Function __gnu_cxx::new_allocator<gimple*>::max_size (_ZNK9__gnu_cxx13new_allocatorIP6gimpleE8max_sizeEv, funcdef_no=10907, decl_uid=181627, cgraph_uid=7539, symbol_order=8334)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<gimple*>::max_size (const struct new_allocator * const this)
{
  size_type D.253915;

  <bb 2> :
  D.253915 = __gnu_cxx::new_allocator<gimple*>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.253915;

}



;; Function __gnu_cxx::new_allocator<gimple*>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIP6gimpleE11_M_max_sizeEv, funcdef_no=10601, decl_uid=181646, cgraph_uid=7232, symbol_order=8025)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<gimple*>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.253917;

  <bb 2> :
  D.253917 = 1152921504606846975;

  <bb 3> :
<L0>:
  return D.253917;

}



;; Function std::vector<gimple*>::begin (_ZNSt6vectorIP6gimpleSaIS1_EE5beginEv, funcdef_no=9540, decl_uid=183582, cgraph_uid=6172, symbol_order=6961)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<gimple*>::begin (struct vector * const this)
{
  struct iterator D.235421;
  struct iterator D.253919;

  <bb 2> :
  _1 = &this->D.183973._M_impl.D.183329._M_start;
  __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::__normal_iterator (&D.235421, _1);
  D.253919 = D.235421;
  D.235421 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253919;

}



;; Function __gnu_cxx::operator-<gimple**, std::vector<gimple*> > (_ZN9__gnu_cxxmiIPP6gimpleSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_, funcdef_no=9541, decl_uid=226735, cgraph_uid=6173, symbol_order=6962)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<gimple**, std::vector<gimple*> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.253922;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.253922 = _5 /[ex] 8;

  <bb 3> :
<L0>:
  return D.253922;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_allocate (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE11_M_allocateEm, funcdef_no=9542, decl_uid=183333, cgraph_uid=6174, symbol_order=6963)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct gimple * * std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct gimple * * D.253930;
  struct gimple * * iftmp.1386;
  struct gimple * * D.253924;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.253930 = std::allocator_traits<std::allocator<gimple*> >::allocate (_1, __n);
  iftmp.1386 = D.253930;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1386 = 0B;

  <bb 5> :
  D.253924 = iftmp.1386;

  <bb 6> :
<L3>:
  return D.253924;

}



;; Function std::allocator_traits<std::allocator<gimple*> >::allocate (_ZNSt16allocator_traitsISaIP6gimpleEE8allocateERS2_m, funcdef_no=10140, decl_uid=181765, cgraph_uid=6772, symbol_order=7565)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct gimple * * std::allocator_traits<std::allocator<gimple*> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct gimple * * D.253933;
  struct gimple * * D.253931;

  <bb 2> :
  D.253933 = __gnu_cxx::new_allocator<gimple*>::allocate (__a, __n, 0B);
  D.253931 = D.253933;

  <bb 3> :
<L0>:
  return D.253931;

}



;; Function __gnu_cxx::new_allocator<gimple*>::allocate (_ZN9__gnu_cxx13new_allocatorIP6gimpleE8allocateEmPKv, funcdef_no=10600, decl_uid=181619, cgraph_uid=7233, symbol_order=8026)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct gimple * * __gnu_cxx::new_allocator<gimple*>::allocate (struct new_allocator * const this, size_type __n, const void * D.243600)
{
  struct gimple * * D.253944;
  struct gimple * * D.253943;
  align_val_t __al;
  struct gimple * * D.253941;
  bool retval.1387;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<gimple*>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.1387 = _4 != 0;
  if (retval.1387 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 2305843009213693951)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 8;
  D.253944 = operator new (_6);
  D.253941 = D.253944;

  <bb 7> :
<L6>:
  return D.253941;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=9545, decl_uid=183217, cgraph_uid=6177, symbol_order=6966)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.253945;

  <bb 2> :
  D.253945 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.253945;

}



;; Function __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPP6gimpleSt6vectorIS2_SaIS2_EEE4baseEv, funcdef_no=9544, decl_uid=214362, cgraph_uid=6176, symbol_order=6965)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * const & __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (const struct __normal_iterator * const this)
{
  struct gimple * * const & D.253947;

  <bb 2> :
  D.253947 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.253947;

}



;; Function std::vector<gimple*>::_S_relocate (_ZNSt6vectorIP6gimpleSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_, funcdef_no=9543, decl_uid=183481, cgraph_uid=6175, symbol_order=6964)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * std::vector<gimple*>::_S_relocate (struct gimple * * __first, struct gimple * * __last, struct gimple * * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.253950;
  struct gimple * * D.253949;

  <bb 2> :
  D.253949 = std::vector<gimple*>::_S_do_relocate (__first, __last, __result, __alloc, D.253950);

  <bb 3> :
<L0>:
  return D.253949;

}



;; Function std::vector<gimple*>::_S_do_relocate (_ZNSt6vectorIP6gimpleSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE, funcdef_no=10141, decl_uid=183469, cgraph_uid=6773, symbol_order=7566)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * std::vector<gimple*>::_S_do_relocate (struct gimple * * __first, struct gimple * * __last, struct gimple * * __result, struct _Tp_alloc_type & __alloc, struct true_type D.240383)
{
  struct gimple * * D.253952;

  <bb 2> :
  D.253952 = std::__relocate_a<gimple**, gimple**, std::allocator<gimple*> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.253952;

}



;; Function std::__relocate_a<gimple**, gimple**, std::allocator<gimple*> > (_ZSt12__relocate_aIPP6gimpleS2_SaIS1_EET0_T_S5_S4_RT1_, funcdef_no=10602, decl_uid=226900, cgraph_uid=7234, symbol_order=8027)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * std::__relocate_a<gimple**, gimple**, std::allocator<gimple*> > (struct gimple * * __first, struct gimple * * __last, struct gimple * * __result, struct allocator & __alloc)
{
  struct gimple * * D.253954;

  <bb 2> :
  _1 = std::__niter_base<gimple**> (__result);
  _2 = std::__niter_base<gimple**> (__last);
  _3 = std::__niter_base<gimple**> (__first);
  D.253954 = std::__relocate_a_1<gimple*, gimple*> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.253954;

}



;; Function std::__niter_base<gimple**> (_ZSt12__niter_baseIPP6gimpleET_S3_, funcdef_no=10809, decl_uid=226906, cgraph_uid=7441, symbol_order=8236)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * std::__niter_base<gimple**> (struct gimple * * __it)
{
  struct gimple * * D.253956;

  <bb 2> :
  D.253956 = __it;

  <bb 3> :
<L0>:
  return D.253956;

}



;; Function std::__relocate_a_1<gimple*, gimple*> (_ZSt14__relocate_a_1IP6gimpleS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E, funcdef_no=10810, decl_uid=227074, cgraph_uid=7442, symbol_order=8237)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct gimple * * std::__relocate_a_1<gimple*, gimple*> (struct gimple * * __first, struct gimple * * __last, struct gimple * * __result, struct allocator & D.244628)
{
  ptrdiff_t __count;
  struct gimple * * D.253961;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 8;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.1388_2 = (long unsigned int) __count;
  _3 = __count.1388_2 * 8;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.1389_4 = (long unsigned int) __count;
  _5 = __count.1389_4 * 8;
  D.253961 = __result + _5;

  <bb 5> :
<L3>:
  return D.253961;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_deallocate (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE13_M_deallocateEPS1_m, funcdef_no=8353, decl_uid=183336, cgraph_uid=4985, symbol_order=5774)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_deallocate (struct _Vector_base * const this, struct gimple * * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<gimple*> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<gimple*> >::deallocate (_ZNSt16allocator_traitsISaIP6gimpleEE10deallocateERS2_PS1_m, funcdef_no=9152, decl_uid=181772, cgraph_uid=5784, symbol_order=6573)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<gimple*> >::deallocate (struct allocator_type & __a, struct gimple * * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple*>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple*>::deallocate (_ZN9__gnu_cxx13new_allocatorIP6gimpleE10deallocateEPS2_m, funcdef_no=9875, decl_uid=181623, cgraph_uid=6507, symbol_order=7300)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<gimple*>::deallocate (struct new_allocator * const this, struct gimple * * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 8;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function check_stmtStack3 (_Z16check_stmtStack3P9tree_node, funcdef_no=6422, decl_uid=186963, cgraph_uid=3398, symbol_order=4174)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int check_stmtStack3 (union tree_node * target)
{
  int o;
  int D.253972;
  bool retval.1390;

  <bb 2> :
  _1 = std::vector<tree_node*>::size (&new_gimpletree_array);
  _2 = (unsigned int) _1;
  _3 = _2 + 4294967295;
  o = (int) _3;
  goto <bb 6>; [INV]

  <bb 3> :
  _4 = (long unsigned int) o;
  _5 = std::vector<tree_node*>::operator[] (&new_gimpletree_array, _4);
  _6 = *_5;
  retval.1390 = target == _6;
  if (retval.1390 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.253972 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  o = o + -1;

  <bb 6> :
  if (o >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  D.253972 = 0;

  <bb 8> :
<L5>:
  return D.253972;

}



;; Function check_stmtStack4 (_Z16check_stmtStack4P6gimple, funcdef_no=6423, decl_uid=186961, cgraph_uid=3399, symbol_order=4175)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int check_stmtStack4 (struct gimple * stmt)
{
  int o;
  int D.253977;
  bool retval.1391;

  <bb 2> :
  _1 = std::vector<gimple*>::size (&new_gimple_array);
  _2 = (unsigned int) _1;
  _3 = _2 + 4294967295;
  o = (int) _3;
  goto <bb 6>; [INV]

  <bb 3> :
  _4 = (long unsigned int) o;
  _5 = std::vector<gimple*>::operator[] (&new_gimple_array, _4);
  _6 = *_5;
  retval.1391 = stmt == _6;
  if (retval.1391 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.253977 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  o = o + -1;

  <bb 6> :
  if (o >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  D.253977 = 0;

  <bb 8> :
<L5>:
  return D.253977;

}



;; Function Checknew_search_imm_use_lhs (_Z27Checknew_search_imm_use_lhsP12gimple_arrayP6gimpleP9tree_nodeS4_, funcdef_no=6424, decl_uid=186959, cgraph_uid=3400, symbol_order=4176)

Removing basic block 12
Removing basic block 13
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 12 }
;; 5 succs { 6 12 }
;; 6 succs { 7 8 }
;; 7 succs { 12 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 1 }
void Checknew_search_imm_use_lhs (struct gimple_array * used_stmt, struct gimple * use_stmt, union tree_node * target, union tree_node * target2)
{
  union tree_node * D.254007;
  union tree_node * D.254006;
  union tree_node * D.254005;
  union tree_node * D.254004;
  union tree_node * D.254003;
  union tree_node * D.254002;
  struct gimple * def_stmt;
  struct gimple * def_stmt;
  bool retval.1396;
  bool retval.1395;
  bool retval.1394;
  bool retval.1393;
  bool retval.1392;

  <bb 2> :
  def_stmt = use_stmt;
  D.254002 = gimple_assign_rhs1 (use_stmt);
  _1 = D.254002;
  _2 = _1->base.code;
  retval.1392 = _2 == 153;
  if (retval.1392 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.254003 = gimple_assign_lhs (use_stmt);
  _3 = D.254003;
  def_stmt = _3->ssa_name.def_stmt;

  <bb 4> :
  if (def_stmt != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 5> :
  D.254004 = gimple_assign_lhs (def_stmt);
  _4 = D.254004;
  retval.1393 = _4 != 0B;
  if (retval.1393 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 6> :
  D.254005 = gimple_assign_lhs (def_stmt);
  _5 = D.254005;
  _6 = _5->base.code;
  retval.1394 = _6 == 49;
  if (retval.1394 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 12>; [INV]

  <bb 8> :
  D.254006 = gimple_assign_lhs (def_stmt);
  _7 = D.254006;
  _8 = _7->base.code;
  retval.1395 = _8 == 47;
  if (retval.1395 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 12>; [INV]

  <bb 10> :
  D.254007 = gimple_assign_lhs (def_stmt);
  _9 = D.254007;
  _10 = _9->base.code;
  retval.1396 = _10 == 165;
  if (retval.1396 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);

  <bb 12> :
  return;

}



;; Function Checknew_search_imm_use_rhs (_Z27Checknew_search_imm_use_rhsP12gimple_arrayP6gimpleP9tree_nodeS4_, funcdef_no=6425, decl_uid=186954, cgraph_uid=3401, symbol_order=4177)

Removing basic block 14
Removing basic block 15
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 14 }
;; 5 succs { 6 14 }
;; 6 succs { 7 8 }
;; 7 succs { 14 }
;; 8 succs { 9 10 }
;; 9 succs { 14 }
;; 10 succs { 11 12 }
;; 11 succs { 14 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void Checknew_search_imm_use_rhs (struct gimple_array * used_stmt, struct gimple * use_stmt, union tree_node * target, union tree_node * target2)
{
  union tree_node * D.254039;
  union tree_node * D.254038;
  union tree_node * D.254037;
  union tree_node * D.254036;
  union tree_node * D.254035;
  union tree_node * D.254034;
  struct gimple * def_stmt;
  bool retval.1401;
  bool retval.1400;
  bool retval.1399;
  bool retval.1398;
  bool retval.1397;

  <bb 2> :
  def_stmt = use_stmt;
  D.254034 = gimple_assign_rhs1 (use_stmt);
  _1 = D.254034;
  _2 = _1->base.code;
  retval.1397 = _2 == 153;
  if (retval.1397 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.254035 = gimple_assign_rhs1 (use_stmt);
  _3 = D.254035;
  def_stmt = _3->ssa_name.def_stmt;

  <bb 4> :
  if (def_stmt != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 5> :
  D.254036 = gimple_assign_rhs1 (def_stmt);
  _4 = D.254036;
  retval.1398 = _4 != 0B;
  if (retval.1398 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 6> :
  D.254037 = gimple_assign_rhs1 (def_stmt);
  _5 = D.254037;
  _6 = _5->base.code;
  retval.1399 = _6 == 49;
  if (retval.1399 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 14>; [INV]

  <bb 8> :
  D.254038 = gimple_assign_rhs1 (def_stmt);
  _7 = D.254038;
  _8 = _7->base.code;
  retval.1400 = _8 == 47;
  if (retval.1400 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 14>; [INV]

  <bb 10> :
  D.254039 = gimple_assign_rhs1 (def_stmt);
  _9 = D.254039;
  _10 = _9->base.code;
  retval.1401 = _10 == 165;
  if (retval.1401 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 14>; [INV]

  <bb 12> :
  _11 = target->base.code;
  if (_11 == 36)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  Varnew_search_imm_use (used_stmt, use_stmt, target, target2);

  <bb 14> :
  return;

}



;; Function prechecktree (_Z12prechecktreeP9tree_node, funcdef_no=6426, decl_uid=186943, cgraph_uid=3402, symbol_order=4179)

Removing basic block 7
Removing basic block 8
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 7 }
;; 3 succs { 4 7 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
union tree_node * prechecktree (union tree_node * tree)
{
  union tree_node * D.254048;

  <bb 2> :
  if (tree != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  _1 = tree->base.code;
  if (_1 == 131)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  _2 = tree->exp.operands[0];
  gettree = _2;
  gettree.1402_3 = gettree;
  if (gettree.1402_3 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  gettree.1403_4 = gettree;
  _5 = gettree.1403_4->base.code;
  if (_5 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  D.254048 = gettree;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 7> :
  D.254048 = tree;

  <bb 8> :
<L10>:
  return D.254048;

}



;; Function check_bbinfo (_Z12check_bbinfoP11cgraph_nodeP15basic_block_def, funcdef_no=6427, decl_uid=186949, cgraph_uid=3403, symbol_order=4180)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
;;
;; Loop 1
;;  header 23, latch 22
;;  depth 1, outer 0
;;  nodes: 23 22 4 21 17 20 18 19 15 16 14 13 9 12 10 11 7 8 6 5
;; 2 succs { 3 28 }
;; 3 succs { 23 }
;; 4 succs { 5 22 }
;; 5 succs { 7 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 13 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { 15 14 }
;; 14 succs { 15 16 }
;; 15 succs { 17 }
;; 16 succs { 17 }
;; 17 succs { 18 21 }
;; 18 succs { 19 20 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 4 24 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 28 }
;; 28 succs { 1 }
void check_bbinfo (struct cgraph_node * m, struct basic_block_def * bb)
{
  bool D.254093;
  bool D.254092;
  struct function * D.254091;
  struct symbolicinfo * D.254090;
  struct symbolicinfo * D.254089;
  struct symbolicinfo * symbolicinfotmp;
  int o;
  int find_path_constraint;
  bool retval.1415;
  bool retval.1414;
  bool iftmp.1413;
  bool retval.1412;
  bool retval.1411;
  bool iftmp.1410;
  bool retval.1409;
  bool retval.1406;

  <bb 2> :
  pathconstraint.1404_1 = pathconstraint;
  if (pathconstraint.1404_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 3> :
  find_path_constraint = 0;
  stderr.1405_2 = stderr;
  __builtin_fwrite ("=======================Path Constaint===========================\n\n", 1, 66, stderr.1405_2);
  o = 0;
  goto <bb 23>; [INV]

  <bb 4> :
  syminfo.1407_3 = syminfo;
  _4 = (long unsigned int) o;
  _5 = std::vector<basic_block_def*>::operator[] (&symbolicExecution, _4);
  D.254089 = hash_map<basic_block_def*, symbolicinfo>::get (syminfo.1407_3, _5);
  _6 = D.254089;
  retval.1406 = _6 != 0B;
  if (retval.1406 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 5> :
  syminfo.1408_7 = syminfo;
  _8 = (long unsigned int) o;
  _9 = std::vector<basic_block_def*>::operator[] (&symbolicExecution, _8);
  D.254090 = hash_map<basic_block_def*, symbolicinfo>::get (syminfo.1408_7, _9);
  symbolicinfotmp = D.254090;
  _10 = symbolicinfotmp->node;
  D.254091 = cgraph_node::get_fun (_10);
  _11 = D.254091;
  push_cfun (_11);
  calculate_dominance_info (1);
  _12 = symbolicinfotmp->cond_truebranch;
  if (bb == _12)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _13 = symbolicinfotmp->cond_truebranch;
  D.254092 = dominated_by_p (1, bb, _13);
  _14 = D.254092;
  if (_14 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1410 = 1;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.1410 = 0;

  <bb 9> :
  retval.1409 = iftmp.1410;
  if (retval.1409 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  _15 = symbolicinfotmp->cond_stmt;
  gimple_location_safe (_15);
  retval.1411 = 1;
  if (retval.1411 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _16 = symbolicinfotmp->cond_stmt;
  debug_gimple_stmt (_16);

  <bb 12> :
  _17 = symbolicinfotmp->cond_stmt;
  _18 = gimple_location_safe (_17);
  warning_at (_18, 0, "use location");
  find_path_constraint = find_path_constraint + 1;

  <bb 13> :
  _19 = symbolicinfotmp->cond_falsebranch;
  if (bb == _19)
    goto <bb 15>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  _20 = symbolicinfotmp->cond_falsebranch;
  D.254093 = dominated_by_p (1, bb, _20);
  _21 = D.254093;
  if (_21 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  iftmp.1413 = 1;
  goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1413 = 0;

  <bb 17> :
  retval.1412 = iftmp.1413;
  if (retval.1412 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _22 = symbolicinfotmp->cond_stmt;
  gimple_location_safe (_22);
  retval.1414 = 1;
  if (retval.1414 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  _23 = symbolicinfotmp->cond_stmt;
  debug_gimple_stmt (_23);

  <bb 20> :
  _24 = symbolicinfotmp->cond_stmt;
  _25 = gimple_location_safe (_24);
  warning_at (_25, 0, "use location");
  find_path_constraint = find_path_constraint + 1;

  <bb 21> :
  pop_cfun ();

  <bb 22> :
  o = o + 1;

  <bb 23> :
  _26 = (long unsigned int) o;
  _27 = std::vector<basic_block_def*>::size (&symbolicExecution);
  retval.1415 = _26 < _27;
  if (retval.1415 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  if (find_path_constraint == 0)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  stderr.1416_28 = stderr;
  __builtin_fwrite ("=======================NO find Path Constaint===========================\n\n", 1, 74, stderr.1416_28);
  goto <bb 27>; [INV]

  <bb 26> :
  stderr.1417_29 = stderr;
  fprintf (stderr.1417_29, "=======================Path Constaint=====%d======================\n\n", find_path_constraint);

  <bb 27> :
  stderr.1418_30 = stderr;
  __builtin_fwrite ("=======================Path Constaint===========================\n\n", 1, 66, stderr.1418_30);

  <bb 28> :
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::get (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7771, decl_uid=196517, cgraph_uid=4403, symbol_order=5188)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct symbolicinfo * hash_map<basic_block_def*, symbolicinfo>::get (struct hash_map * const this, struct basic_block_def * const & k)
{
  bool D.254102;
  struct hash_entry & D.254101;
  unsigned int D.254100;
  struct hash_entry & e;
  struct symbolicinfo * iftmp.1419;
  struct symbolicinfo * D.254094;

  <bb 2> :
  _1 = &this->m_table;
  D.254100 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::hash (k);
  _2 = D.254100;
  D.254101 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.254101;
  D.254102 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (e);
  _3 = D.254102;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.1419 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1419 = &e->m_value;

  <bb 5> :
  D.254094 = iftmp.1419;

  <bb 6> :
<L3>:
  return D.254094;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE4hashERKS2_, funcdef_no=8718, decl_uid=196473, cgraph_uid=5350, symbol_order=6139)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::hash (struct basic_block_def * const & h)
{
  hashval_t D.254103;

  <bb 2> :
  D.254103 = pointer_hash<basic_block_def>::hash (h);

  <bb 3> :
<L0>:
  return D.254103;

}



;; Function pointer_hash<basic_block_def>::hash (_ZN12pointer_hashI15basic_block_defE4hashERKPS0_, funcdef_no=9547, decl_uid=196430, cgraph_uid=6179, symbol_order=6968)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t pointer_hash<basic_block_def>::hash (struct basic_block_def * const & candidate)
{
  hashval_t D.254105;

  <bb 2> :
  _1 = *candidate;
  _2 = (long int) _1;
  _3 = _2 >> 3;
  D.254105 = (hashval_t) _3;

  <bb 3> :
<L0>:
  return D.254105;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8719, decl_uid=196660, cgraph_uid=5351, symbol_order=6140)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, struct basic_block_def * const & comparable, hashval_t hash)
{
  bool D.254139;
  bool D.254138;
  bool D.254137;
  bool D.254136;
  bool D.254135;
  bool D.254134;
  struct value_type * D.254133;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.1423;
  bool retval.1422;
  struct value_type & D.254119;
  bool iftmp.1421;
  bool retval.1420;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 168;
  entry = _5 + _7;
  D.254134 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.254134;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.254135 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.254135;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.254136 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (entry, comparable);
  _11 = D.254136;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1421 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1421 = 0;

  <bb 8> :
  retval.1420 = iftmp.1421;
  if (retval.1420 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.254119 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 168;
  entry = _17 + _19;
  D.254137 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.254137;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.254138 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.254138;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.254139 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (entry, comparable);
  _23 = D.254139;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1423 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.1423 = 0;

  <bb 18> :
  retval.1422 = iftmp.1423;
  if (retval.1422 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.254119 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.254119;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8893, decl_uid=196756, cgraph_uid=5525, symbol_order=6314)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.254142;
  bool D.254140;

  <bb 2> :
  D.254142 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_empty (v);
  D.254140 = D.254142;

  <bb 3> :
<L0>:
  return D.254140;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_empty (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8776, decl_uid=196586, cgraph_uid=5408, symbol_order=6197)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.254145;
  bool D.254143;

  <bb 2> :
  D.254145 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (e);
  D.254143 = D.254145;

  <bb 3> :
<L0>:
  return D.254143;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8894, decl_uid=196754, cgraph_uid=5526, symbol_order=6315)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.254148;
  bool D.254146;

  <bb 2> :
  D.254148 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_deleted (v);
  D.254146 = D.254148;

  <bb 3> :
<L0>:
  return D.254146;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_deleted (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9726, decl_uid=196581, cgraph_uid=6358, symbol_order=7147)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.254151;
  bool D.254149;

  <bb 2> :
  D.254151 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_deleted<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (e);
  D.254149 = D.254151;

  <bb 3> :
<L0>:
  return D.254149;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_deleted<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10286, decl_uid=237309, cgraph_uid=6918, symbol_order=7711)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_deleted<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (const struct hash_entry & entry)
{
  bool D.254152;

  <bb 2> :
  _1 = entry->m_key;
  D.254152 = pointer_hash<basic_block_def>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.254152;

}



;; Function pointer_hash<basic_block_def>::is_deleted (_ZN12pointer_hashI15basic_block_defE10is_deletedEPS0_, funcdef_no=10701, decl_uid=196440, cgraph_uid=7333, symbol_order=8126)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<basic_block_def>::is_deleted (struct basic_block_def * e)
{
  bool D.254154;

  <bb 2> :
  D.254154 = e == 1B;

  <bb 3> :
<L0>:
  return D.254154;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9549, decl_uid=196574, cgraph_uid=6181, symbol_order=6970)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (const struct hash_entry & a, struct basic_block_def * const & b)
{
  bool D.254158;
  bool D.254156;

  <bb 2> :
  _1 = &a->m_key;
  D.254158 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::equal_keys (_1, b);
  D.254156 = D.254158;

  <bb 3> :
<L0>:
  return D.254156;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE10equal_keysERKS2_S7_, funcdef_no=10145, decl_uid=196475, cgraph_uid=6777, symbol_order=7570)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::equal_keys (struct basic_block_def * const & k1, struct basic_block_def * const & k2)
{
  bool D.254159;

  <bb 2> :
  D.254159 = pointer_hash<basic_block_def>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.254159;

}



;; Function pointer_hash<basic_block_def>::equal (_ZN12pointer_hashI15basic_block_defE5equalERKPS0_S4_, funcdef_no=10609, decl_uid=196432, cgraph_uid=7241, symbol_order=8034)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<basic_block_def>::equal (struct basic_block_def * const & existing, struct basic_block_def * const & candidate)
{
  bool D.254161;

  <bb 2> :
  _1 = *existing;
  _2 = *candidate;
  D.254161 = _1 == _2;

  <bb 3> :
<L0>:
  return D.254161;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8720, decl_uid=214401, cgraph_uid=5352, symbol_order=6141)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (const struct hash_entry & entry)
{
  bool D.254163;

  <bb 2> :
  _1 = entry->m_key;
  D.254163 = pointer_hash<basic_block_def>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.254163;

}



;; Function pointer_hash<basic_block_def>::is_empty (_ZN12pointer_hashI15basic_block_defE8is_emptyEPS0_, funcdef_no=9550, decl_uid=196442, cgraph_uid=6182, symbol_order=6971)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<basic_block_def>::is_empty (struct basic_block_def * e)
{
  bool D.254165;

  <bb 2> :
  D.254165 = e == 0B;

  <bb 3> :
<L0>:
  return D.254165;

}



;; Function checkPointerConstraint (_Z22checkPointerConstraintP9tree_nodeP3ptbP12gimple_arrayS0_i, funcdef_no=6785, decl_uid=186983, cgraph_uid=3423, symbol_order=4200)

Removing basic block 57
Removing basic block 58
Removing basic block 59
Removing basic block 60
Removing basic block 69
Removing basic block 70
Removing basic block 83
Removing basic block 84
Removing basic block 85
Removing basic block 86
Removing basic block 87
Removing basic block 89
Removing basic block 90
Removing basic block 111
Removing basic block 117
Removing basic block 140
Removing basic block 149
Removing basic block 175
Removing basic block 176
Removing basic block 177
Removing basic block 189
Removing basic block 190
Removing basic block 200
Removing basic block 207
Removing basic block 208
Removing basic block 221
Removing basic block 222
Removing basic block 238
Removing basic block 239
Removing basic block 240
Removing basic block 241
Removing basic block 242
Removing basic block 243
Removing basic block 250
Removing basic block 286
Removing basic block 287
Removing basic block 292
Removing basic block 293
Removing basic block 294
Removing basic block 300
Removing basic block 337
Removing basic block 346
Removing basic block 361
Removing basic block 364
Removing basic block 367
Removing basic block 374
Removing basic block 380
Removing basic block 386
Removing basic block 395
Removing basic block 397
Removing basic block 398
Removing basic block 401
Removing basic block 415
Removing basic block 434
Removing basic block 435
Removing basic block 455
Removing basic block 471
Removing basic block 474
Removing basic block 483
Removing basic block 486
Removing basic block 487
Removing basic block 488
Removing basic block 498
Removing basic block 499
Removing basic block 514
Removing basic block 515
Removing basic block 523
Removing basic block 527
Removing basic block 528
Removing basic block 533
Removing basic block 542
Removing basic block 550
Removing basic block 551
Removing basic block 553
Removing basic block 554
Removing basic block 555
Removing basic block 577
Removing basic block 578
Removing basic block 595
Removing basic block 601
Removing basic block 602
Removing basic block 623
Removing basic block 625
Removing basic block 651
Removing basic block 660
Removing basic block 661
Removing basic block 682
Removing basic block 690
Removing basic block 701
Removing basic block 702
Removing basic block 712
Removing basic block 715
Removing basic block 716
Removing basic block 717
Removing basic block 725
Removing basic block 737
Removing basic block 741
Removing basic block 745
Removing basic block 755
Removing basic block 758
Removing basic block 760
Removing basic block 766
Removing basic block 771
Removing basic block 774
Removing basic block 779
Removing basic block 780
Removing basic block 785
Removing basic block 793
Removing basic block 795
Removing basic block 804
Removing basic block 810
Removing basic block 813
Removing basic block 819
Removing basic block 820
Removing basic block 825
Merging blocks 826 and 828
Merging blocks 827 and 831
Removing basic block 829
;; 16 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 3
;;  header 718, latch 717
;;  depth 1, outer 0
;;  nodes
;;
;; Loop 9
;;  header 630, latch 629
;;  depth 2, outer 3
;;  nodes: 630 629 627 628 626 625 584 624 587 595 623 589 598 597 596 590 594 593 592 591 588 621 622 620 619 618 617 616 615 614 613 609 612 611 610 608 607 606 605 604 603 601 602 600 599 586 585
;;
;; Loop 10
;;  header 625, latch 624
;;  depth 3, outer 9
;;  nodes: 625 624 587 595 623 589 598 597 596 590 594 593 592 591 588 621 622 620 619 618 617 616 615 614 613 609 612 611 610 608 607 606 605 604 603 601 602 600 599 586 585
;;
;; Loop 8
;;  header 574, latch 573
;;  depth 2, outer 3
;;  nodes: 574 573 560 572 571 570 569 567 568 565 561 564 563 562 566 559
;;
;; Loop 7
;;  header 541, latch 540
;;  depth 2, outer 3
;;  nodes: 541 540 539 538 537 536 535 534 533 532 531
;;
;; Loop 6
;;  header 518, latch 517
;;  depth 2, outer 3
;;  nodes: 518 517 507 516 515 514 513 512 511 510 509 508 506
;;
;; Loop 5
;;  header 504, latch 503
;;  depth 2, outer 3
;;  nodes: 504 503 502 496 501 497 500 499 498 495
;;
;; Loop 11
;;  header 502, latch 501
;;  depth 3, outer 5
;;  nodes: 502 501 497 500 499 498
;;
;; Loop 4
;;  header 486, latch 485
;;  depth 2, outer 3
;;  nodes
;;
;; Loop 12
;;  header 176, latch 175
;;  depth 3, outer 4
;;  nodes: 176 175 174 173 116 172 171 170 117 169 129 168 135 140 138 139 137 136 133 134 130 132 131 167 166 141 165 157 158 159 164 144 146 145 143 142 163 162 161 160 156 155 154 153 152 151 150 149 148 147 127 128 126 125 119 124 121 120 123 122 118 115
;;
;; Loop 13
;;  header 173, latch 172
;;  depth 4, outer 12
;;  nodes: 173 172 171 170 117 169 129 168 135 140 138 139 137 136 133 134 130 132 131 167 166 141 165 157 158 159 164 144 146 145 143 142 163 162 161 160 156 155 154 153 152 151 150 149 148 147 127 128 126 125 119 124 121 120 123 122 118 174
;;
;; Loop 14
;;  header 170, latch 169
;;  depth 5, outer 13
;;  nodes: 170 169 129 168 135 140 138 139 137 136 133 134 130 132 131 167 166 141 165 157 158 159 164 144 146 145 143 142 163 162 161 160 156 155 154 153 152 151 150 149 148 147 127 128 126 125 119 124 121 120 123 122 118 171
;;
;; Loop 15
;;  header 166, latch 165
;;  depth 6, outer 14
;;  nodes: 166 165 157 158 159 164 144 146 145 143 142 167 163 162 161 160 156 155 154 153 152 151 150 149 148 147
;;
;; Loop 2
;;  header 21, latch 20
;;  depth 1, outer 0
;;  nodes: 21 20 15 19 18 17 16
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 745 6 }
;; 6 succs { 745 7 }
;; 7 succs { 8 24 }
;; 8 succs { 9 24 }
;; 9 succs { 721 10 }
;; 10 succs { 721 11 }
;; 11 succs { 721 12 }
;; 12 succs { 721 13 }
;; 13 succs { 721 14 }
;; 14 succs { 21 }
;; 15 succs { 16 20 }
;; 16 succs { 720 17 }
;; 17 succs { 720 18 }
;; 18 succs { 720 19 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { 15 22 }
;; 22 succs { 720 23 }
;; 23 succs { 24 }
;; 24 succs { 745 25 }
;; 25 succs { 745 26 }
;; 26 succs { 27 28 }
;; 27 succs { 29 }
;; 28 succs { 29 }
;; 29 succs { 718 }
;; 30 succs { 744 31 }
;; 31 succs { 32 713 }
;; 32 succs { 33 713 }
;; 33 succs { 742 34 }
;; 34 succs { 742 35 }
;; 35 succs { 37 36 }
;; 36 succs { 37 40 }
;; 37 succs { 742 38 }
;; 38 succs { 742 39 }
;; 39 succs { 709 }
;; 40 succs { 41 78 }
;; 41 succs { 42 78 }
;; 42 succs { 43 57 }
;; 43 succs { 742 44 }
;; 44 succs { 45 47 }
;; 45 succs { 742 46 }
;; 46 succs { 47 }
;; 47 succs { 48 57 }
;; 48 succs { 49 57 }
;; 49 succs { 50 57 }
;; 50 succs { 742 51 }
;; 51 succs { 52 57 }
;; 52 succs { 742 53 }
;; 53 succs { 54 57 }
;; 54 succs { 742 55 }
;; 55 succs { 742 56 }
;; 56 succs { 57 }
;; 57 succs { 742 58 }
;; 58 succs { 59 77 }
;; 59 succs { 60 65 }
;; 60 succs { 742 61 }
;; 61 succs { 742 62 }
;; 62 succs { 742 63 }
;; 63 succs { 64 77 }
;; 64 succs { 742 77 }
;; 65 succs { 66 77 }
;; 66 succs { 67 77 }
;; 67 succs { 68 77 }
;; 68 succs { 742 69 }
;; 69 succs { 70 77 }
;; 70 succs { 742 71 }
;; 71 succs { 742 72 }
;; 72 succs { 742 73 }
;; 73 succs { 742 74 }
;; 74 succs { 742 75 }
;; 75 succs { 76 77 }
;; 76 succs { 742 77 }
;; 77 succs { 742 78 }
;; 78 succs { 742 79 }
;; 79 succs { 80 91 }
;; 80 succs { 87 81 }
;; 81 succs { 87 82 }
;; 82 succs { 87 83 }
;; 83 succs { 87 84 }
;; 84 succs { 87 85 }
;; 85 succs { 87 86 }
;; 86 succs { 87 89 }
;; 87 succs { 742 88 }
;; 88 succs { 90 }
;; 89 succs { 742 90 }
;; 90 succs { 91 }
;; 91 succs { 742 92 }
;; 92 succs { 93 635 }
;; 93 succs { 740 94 }
;; 94 succs { 723 95 }
;; 95 succs { 738 96 }
;; 96 succs { 97 98 }
;; 97 succs { 738 101 }
;; 98 succs { 738 99 }
;; 99 succs { 738 100 }
;; 100 succs { 738 101 }
;; 101 succs { 102 103 }
;; 102 succs { 738 104 }
;; 103 succs { 738 104 }
;; 104 succs { 738 105 }
;; 105 succs { 106 522 }
;; 106 succs { 107 108 }
;; 107 succs { 109 }
;; 108 succs { 109 }
;; 109 succs { 486 }
;; 110 succs { 111 178 }
;; 111 succs { 727 112 }
;; 112 succs { 727 113 }
;; 113 succs { 727 114 }
;; 114 succs { 176 }
;; 115 succs { 727 116 }
;; 116 succs { 173 }
;; 117 succs { 170 }
;; 118 succs { 725 119 }
;; 119 succs { 120 125 }
;; 120 succs { 725 121 }
;; 121 succs { 122 125 }
;; 122 succs { 725 123 }
;; 123 succs { 725 124 }
;; 124 succs { 125 }
;; 125 succs { 127 126 }
;; 126 succs { 127 128 }
;; 127 succs { 129 }
;; 128 succs { 129 }
;; 129 succs { 130 169 }
;; 130 succs { 131 133 }
;; 131 succs { 132 133 }
;; 132 succs { 133 }
;; 133 succs { 134 135 }
;; 134 succs { 135 }
;; 135 succs { 136 169 }
;; 136 succs { 138 137 }
;; 137 succs { 138 139 }
;; 138 succs { 140 }
;; 139 succs { 140 }
;; 140 succs { 141 169 }
;; 141 succs { 166 }
;; 142 succs { 143 158 }
;; 143 succs { 724 144 }
;; 144 succs { 145 165 }
;; 145 succs { 724 146 }
;; 146 succs { 147 165 }
;; 147 succs { 724 148 }
;; 148 succs { 724 149 }
;; 149 succs { 724 150 }
;; 150 succs { 724 151 }
;; 151 succs { 724 152 }
;; 152 succs { 724 153 }
;; 153 succs { 724 154 }
;; 154 succs { 724 155 }
;; 155 succs { 724 156 }
;; 156 succs { 724 157 }
;; 157 succs { 724 165 }
;; 158 succs { 159 165 }
;; 159 succs { 160 165 }
;; 160 succs { 724 161 }
;; 161 succs { 724 162 }
;; 162 succs { 724 163 }
;; 163 succs { 724 164 }
;; 164 succs { 165 }
;; 165 succs { 724 166 }
;; 166 succs { 724 167 }
;; 167 succs { 142 168 }
;; 168 succs { 169 }
;; 169 succs { 725 170 }
;; 170 succs { 725 171 }
;; 171 succs { 118 172 }
;; 172 succs { 173 }
;; 173 succs { 727 174 }
;; 174 succs { 117 175 }
;; 175 succs { 176 }
;; 176 succs { 115 177 }
;; 177 succs { 727 178 }
;; 178 succs { 179 184 }
;; 179 succs { 727 180 }
;; 180 succs { 181 184 }
;; 181 succs { 727 182 }
;; 182 succs { 727 183 }
;; 183 succs { 727 184 }
;; 184 succs { 185 211 }
;; 185 succs { 186 211 }
;; 186 succs { 187 211 }
;; 187 succs { 727 188 }
;; 188 succs { 189 211 }
;; 189 succs { 727 190 }
;; 190 succs { 191 211 }
;; 191 succs { 727 192 }
;; 192 succs { 727 193 }
;; 193 succs { 194 196 }
;; 194 succs { 195 211 }
;; 195 succs { 727 211 }
;; 196 succs { 727 197 }
;; 197 succs { 727 198 }
;; 198 succs { 199 211 }
;; 199 succs { 727 200 }
;; 200 succs { 727 201 }
;; 201 succs { 202 211 }
;; 202 succs { 727 203 }
;; 203 succs { 727 204 }
;; 204 succs { 727 205 }
;; 205 succs { 727 206 }
;; 206 succs { 727 207 }
;; 207 succs { 727 208 }
;; 208 succs { 727 209 }
;; 209 succs { 727 210 }
;; 210 succs { 481 }
;; 211 succs { 212 480 }
;; 212 succs { 213 256 }
;; 213 succs { 214 217 }
;; 214 succs { 727 215 }
;; 215 succs { 727 216 }
;; 216 succs { 727 217 }
;; 217 succs { 218 480 }
;; 218 succs { 727 219 }
;; 219 succs { 727 220 }
;; 220 succs { 727 221 }
;; 221 succs { 222 480 }
;; 222 succs { 727 223 }
;; 223 succs { 727 224 }
;; 224 succs { 727 225 }
;; 225 succs { 727 226 }
;; 226 succs { 727 227 }
;; 227 succs { 727 228 }
;; 228 succs { 727 229 }
;; 229 succs { 727 230 }
;; 230 succs { 727 231 }
;; 231 succs { 727 232 }
;; 232 succs { 727 233 }
;; 233 succs { 727 234 }
;; 234 succs { 727 235 }
;; 235 succs { 727 236 }
;; 236 succs { 727 237 }
;; 237 succs { 727 238 }
;; 238 succs { 727 239 }
;; 239 succs { 240 252 }
;; 240 succs { 727 241 }
;; 241 succs { 242 245 }
;; 242 succs { 727 243 }
;; 243 succs { 244 245 }
;; 244 succs { 246 }
;; 245 succs { 246 }
;; 246 succs { 247 252 }
;; 247 succs { 727 248 }
;; 248 succs { 727 249 }
;; 249 succs { 727 250 }
;; 250 succs { 727 251 }
;; 251 succs { 727 252 }
;; 252 succs { 727 253 }
;; 253 succs { 727 254 }
;; 254 succs { 727 255 }
;; 255 succs { 727 480 }
;; 256 succs { 257 339 }
;; 257 succs { 258 261 }
;; 258 succs { 727 259 }
;; 259 succs { 727 260 }
;; 260 succs { 727 261 }
;; 261 succs { 727 262 }
;; 262 succs { 727 263 }
;; 263 succs { 264 339 }
;; 264 succs { 726 265 }
;; 265 succs { 726 266 }
;; 266 succs { 726 267 }
;; 267 succs { 726 268 }
;; 268 succs { 726 269 }
;; 269 succs { 726 270 }
;; 270 succs { 726 271 }
;; 271 succs { 726 272 }
;; 272 succs { 726 273 }
;; 273 succs { 726 274 }
;; 274 succs { 726 275 }
;; 275 succs { 726 276 }
;; 276 succs { 726 277 }
;; 277 succs { 726 278 }
;; 278 succs { 726 279 }
;; 279 succs { 726 280 }
;; 280 succs { 726 281 }
;; 281 succs { 282 297 }
;; 282 succs { 726 283 }
;; 283 succs { 284 287 }
;; 284 succs { 726 285 }
;; 285 succs { 286 287 }
;; 286 succs { 288 }
;; 287 succs { 288 }
;; 288 succs { 289 296 }
;; 289 succs { 726 290 }
;; 290 succs { 726 291 }
;; 291 succs { 726 292 }
;; 292 succs { 726 293 }
;; 293 succs { 726 294 }
;; 294 succs { 726 295 }
;; 295 succs { 297 }
;; 296 succs { 297 }
;; 297 succs { 726 298 }
;; 298 succs { 726 299 }
;; 299 succs { 300 329 }
;; 300 succs { 301 305 }
;; 301 succs { 726 302 }
;; 302 succs { 726 303 }
;; 303 succs { 726 304 }
;; 304 succs { 726 305 }
;; 305 succs { 726 306 }
;; 306 succs { 726 307 }
;; 307 succs { 308 338 }
;; 308 succs { 311 309 }
;; 309 succs { 311 310 }
;; 310 succs { 311 324 }
;; 311 succs { 726 312 }
;; 312 succs { 726 313 }
;; 313 succs { 726 314 }
;; 314 succs { 726 315 }
;; 315 succs { 316 321 }
;; 316 succs { 726 317 }
;; 317 succs { 318 319 }
;; 318 succs { 726 320 }
;; 319 succs { 726 320 }
;; 320 succs { 726 321 }
;; 321 succs { 322 323 }
;; 322 succs { 726 323 }
;; 323 succs { 328 }
;; 324 succs { 726 325 }
;; 325 succs { 726 326 }
;; 326 succs { 726 327 }
;; 327 succs { 726 328 }
;; 328 succs { 338 }
;; 329 succs { 330 334 }
;; 330 succs { 726 331 }
;; 331 succs { 726 332 }
;; 332 succs { 726 333 }
;; 333 succs { 726 334 }
;; 334 succs { 726 335 }
;; 335 succs { 726 336 }
;; 336 succs { 726 337 }
;; 337 succs { 726 338 }
;; 338 succs { 339 }
;; 339 succs { 340 480 }
;; 340 succs { 341 348 }
;; 341 succs { 727 342 }
;; 342 succs { 343 348 }
;; 343 succs { 727 344 }
;; 344 succs { 727 345 }
;; 345 succs { 346 347 }
;; 346 succs { 727 348 }
;; 347 succs { 727 348 }
;; 348 succs { 349 350 }
;; 349 succs { 727 350 }
;; 350 succs { 351 361 }
;; 351 succs { 358 352 }
;; 352 succs { 358 353 }
;; 353 succs { 358 354 }
;; 354 succs { 358 355 }
;; 355 succs { 358 356 }
;; 356 succs { 358 357 }
;; 357 succs { 358 359 }
;; 358 succs { 360 }
;; 359 succs { 360 }
;; 360 succs { 361 }
;; 361 succs { 362 363 }
;; 362 succs { 727 381 }
;; 363 succs { 364 381 }
;; 364 succs { 365 381 }
;; 365 succs { 366 381 }
;; 366 succs { 727 367 }
;; 367 succs { 368 373 }
;; 368 succs { 727 369 }
;; 369 succs { 727 370 }
;; 370 succs { 727 371 }
;; 371 succs { 727 372 }
;; 372 succs { 481 }
;; 373 succs { 727 374 }
;; 374 succs { 727 375 }
;; 375 succs { 727 376 }
;; 376 succs { 727 377 }
;; 377 succs { 727 378 }
;; 378 succs { 727 379 }
;; 379 succs { 727 380 }
;; 380 succs { 727 381 }
;; 381 succs { 382 385 }
;; 382 succs { 384 383 }
;; 383 succs { 384 385 }
;; 384 succs { 386 }
;; 385 succs { 386 }
;; 386 succs { 387 480 }
;; 387 succs { 727 388 }
;; 388 succs { 727 389 }
;; 389 succs { 390 480 }
;; 390 succs { 393 391 }
;; 391 succs { 393 392 }
;; 392 succs { 393 403 }
;; 393 succs { 727 394 }
;; 394 succs { 727 395 }
;; 395 succs { 727 396 }
;; 396 succs { 727 397 }
;; 397 succs { 398 400 }
;; 398 succs { 727 399 }
;; 399 succs { 727 401 }
;; 400 succs { 727 401 }
;; 401 succs { 727 402 }
;; 402 succs { 479 }
;; 403 succs { 404 460 }
;; 404 succs { 405 479 }
;; 405 succs { 727 406 }
;; 406 succs { 727 407 }
;; 407 succs { 727 408 }
;; 408 succs { 727 409 }
;; 409 succs { 727 410 }
;; 410 succs { 727 411 }
;; 411 succs { 412 417 }
;; 412 succs { 413 415 }
;; 413 succs { 727 414 }
;; 414 succs { 727 417 }
;; 415 succs { 727 416 }
;; 416 succs { 727 417 }
;; 417 succs { 727 418 }
;; 418 succs { 727 419 }
;; 419 succs { 420 427 }
;; 420 succs { 727 421 }
;; 421 succs { 422 427 }
;; 422 succs { 727 423 }
;; 423 succs { 424 425 }
;; 424 succs { 727 427 }
;; 425 succs { 426 427 }
;; 426 succs { 727 427 }
;; 427 succs { 428 436 }
;; 428 succs { 727 429 }
;; 429 succs { 430 432 }
;; 430 succs { 431 432 }
;; 431 succs { 433 }
;; 432 succs { 433 }
;; 433 succs { 434 436 }
;; 434 succs { 727 435 }
;; 435 succs { 727 436 }
;; 436 succs { 437 440 }
;; 437 succs { 727 438 }
;; 438 succs { 439 440 }
;; 439 succs { 441 }
;; 440 succs { 441 }
;; 441 succs { 442 450 }
;; 442 succs { 727 443 }
;; 443 succs { 727 444 }
;; 444 succs { 727 445 }
;; 445 succs { 727 446 }
;; 446 succs { 727 447 }
;; 447 succs { 448 450 }
;; 448 succs { 727 449 }
;; 449 succs { 727 450 }
;; 450 succs { 451 457 }
;; 451 succs { 452 453 }
;; 452 succs { 454 }
;; 453 succs { 454 }
;; 454 succs { 727 455 }
;; 455 succs { 456 459 }
;; 456 succs { 459 }
;; 457 succs { 727 458 }
;; 458 succs { 459 }
;; 459 succs { 727 479 }
;; 460 succs { 461 464 }
;; 461 succs { 462 479 }
;; 462 succs { 727 463 }
;; 463 succs { 479 }
;; 464 succs { 465 479 }
;; 465 succs { 479 466 }
;; 466 succs { 479 467 }
;; 467 succs { 479 468 }
;; 468 succs { 479 469 }
;; 469 succs { 479 470 }
;; 470 succs { 479 471 }
;; 471 succs { 479 472 }
;; 472 succs { 727 473 }
;; 473 succs { 727 474 }
;; 474 succs { 727 475 }
;; 475 succs { 727 476 }
;; 476 succs { 727 477 }
;; 477 succs { 478 479 }
;; 478 succs { 727 479 }
;; 479 succs { 480 }
;; 480 succs { 482 }
;; 481 succs { 482 }
;; 482 succs { 483 484 }
;; 483 succs { 485 }
;; 484 succs { 485 }
;; 485 succs { 486 }
;; 486 succs { 110 487 }
;; 487 succs { 488 523 }
;; 488 succs { 489 523 }
;; 489 succs { 729 490 }
;; 490 succs { 729 491 }
;; 491 succs { 729 492 }
;; 492 succs { 729 493 }
;; 493 succs { 728 494 }
;; 494 succs { 504 }
;; 495 succs { 729 496 }
;; 496 succs { 502 }
;; 497 succs { 498 501 }
;; 498 succs { 729 499 }
;; 499 succs { 500 501 }
;; 500 succs { 729 501 }
;; 501 succs { 502 }
;; 502 succs { 497 503 }
;; 503 succs { 504 }
;; 504 succs { 495 505 }
;; 505 succs { 518 }
;; 506 succs { 729 507 }
;; 507 succs { 508 517 }
;; 508 succs { 729 509 }
;; 509 succs { 729 510 }
;; 510 succs { 729 511 }
;; 511 succs { 729 512 }
;; 512 succs { 729 513 }
;; 513 succs { 729 514 }
;; 514 succs { 729 515 }
;; 515 succs { 729 516 }
;; 516 succs { 729 517 }
;; 517 succs { 518 }
;; 518 succs { 506 519 }
;; 519 succs { 520 521 }
;; 520 succs { 521 }
;; 521 succs { 523 }
;; 522 succs { 523 }
;; 523 succs { 524 543 }
;; 524 succs { 525 543 }
;; 525 succs { 730 526 }
;; 526 succs { 527 542 }
;; 527 succs { 730 528 }
;; 528 succs { 730 529 }
;; 529 succs { 730 530 }
;; 530 succs { 541 }
;; 531 succs { 730 532 }
;; 532 succs { 730 533 }
;; 533 succs { 730 534 }
;; 534 succs { 730 535 }
;; 535 succs { 730 536 }
;; 536 succs { 730 537 }
;; 537 succs { 730 538 }
;; 538 succs { 730 539 }
;; 539 succs { 730 540 }
;; 540 succs { 541 }
;; 541 succs { 531 542 }
;; 542 succs { 543 }
;; 543 succs { 544 576 }
;; 544 succs { 738 545 }
;; 545 succs { 738 546 }
;; 546 succs { 738 547 }
;; 547 succs { 738 548 }
;; 548 succs { 550 549 }
;; 549 succs { 550 576 }
;; 550 succs { 551 576 }
;; 551 succs { 738 552 }
;; 552 succs { 738 553 }
;; 553 succs { 738 554 }
;; 554 succs { 555 576 }
;; 555 succs { 736 556 }
;; 556 succs { 736 557 }
;; 557 succs { 735 558 }
;; 558 succs { 574 }
;; 559 succs { 734 560 }
;; 560 succs { 561 573 }
;; 561 succs { 562 565 }
;; 562 succs { 733 563 }
;; 563 succs { 733 564 }
;; 564 succs { 565 }
;; 565 succs { 566 568 }
;; 566 succs { 733 567 }
;; 567 succs { 733 569 }
;; 568 succs { 733 569 }
;; 569 succs { 733 570 }
;; 570 succs { 733 571 }
;; 571 succs { 733 572 }
;; 572 succs { 573 }
;; 573 succs { 574 }
;; 574 succs { 559 575 }
;; 575 succs { 576 }
;; 576 succs { 577 633 }
;; 577 succs { 737 578 }
;; 578 succs { 737 579 }
;; 579 succs { 580 631 }
;; 580 succs { 581 582 }
;; 581 succs { 583 }
;; 582 succs { 583 }
;; 583 succs { 630 }
;; 584 succs { 625 }
;; 585 succs { 737 586 }
;; 586 succs { 737 587 }
;; 587 succs { 588 624 }
;; 588 succs { 737 589 }
;; 589 succs { 590 624 }
;; 590 succs { 591 596 }
;; 591 succs { 737 592 }
;; 592 succs { 737 593 }
;; 593 succs { 737 594 }
;; 594 succs { 595 596 }
;; 595 succs { 624 }
;; 596 succs { 737 597 }
;; 597 succs { 737 598 }
;; 598 succs { 599 624 }
;; 599 succs { 737 600 }
;; 600 succs { 737 601 }
;; 601 succs { 602 603 }
;; 602 succs { 737 603 }
;; 603 succs { 737 604 }
;; 604 succs { 737 605 }
;; 605 succs { 737 606 }
;; 606 succs { 737 607 }
;; 607 succs { 737 608 }
;; 608 succs { 737 609 }
;; 609 succs { 610 613 }
;; 610 succs { 737 611 }
;; 611 succs { 612 613 }
;; 612 succs { 737 613 }
;; 613 succs { 737 614 }
;; 614 succs { 737 615 }
;; 615 succs { 737 616 }
;; 616 succs { 737 617 }
;; 617 succs { 737 618 }
;; 618 succs { 737 619 }
;; 619 succs { 737 620 }
;; 620 succs { 621 622 }
;; 621 succs { 737 623 }
;; 622 succs { 737 623 }
;; 623 succs { 737 624 }
;; 624 succs { 625 }
;; 625 succs { 585 626 }
;; 626 succs { 627 628 }
;; 627 succs { 629 }
;; 628 succs { 629 }
;; 629 succs { 630 }
;; 630 succs { 584 631 }
;; 631 succs { 737 632 }
;; 632 succs { 633 }
;; 633 succs { 738 634 }
;; 634 succs { 636 }
;; 635 succs { 636 }
;; 636 succs { 637 648 }
;; 637 succs { 638 645 }
;; 638 succs { 639 642 }
;; 639 succs { 741 640 }
;; 640 succs { 741 641 }
;; 641 succs { 741 648 }
;; 642 succs { 741 643 }
;; 643 succs { 741 644 }
;; 644 succs { 741 648 }
;; 645 succs { 741 646 }
;; 646 succs { 741 647 }
;; 647 succs { 741 648 }
;; 648 succs { 649 651 }
;; 649 succs { 650 651 }
;; 650 succs { 651 }
;; 651 succs { 652 660 }
;; 652 succs { 741 653 }
;; 653 succs { 741 654 }
;; 654 succs { 741 655 }
;; 655 succs { 656 657 }
;; 656 succs { 741 657 }
;; 657 succs { 658 659 }
;; 658 succs { 741 659 }
;; 659 succs { 741 660 }
;; 660 succs { 661 675 }
;; 661 succs { 662 665 }
;; 662 succs { 741 663 }
;; 663 succs { 741 664 }
;; 664 succs { 741 707 }
;; 665 succs { 666 671 }
;; 666 succs { 741 667 }
;; 667 succs { 668 669 }
;; 668 succs { 741 670 }
;; 669 succs { 741 670 }
;; 670 succs { 741 707 }
;; 671 succs { 672 707 }
;; 672 succs { 741 673 }
;; 673 succs { 741 674 }
;; 674 succs { 741 707 }
;; 675 succs { 676 679 }
;; 676 succs { 741 677 }
;; 677 succs { 741 678 }
;; 678 succs { 741 707 }
;; 679 succs { 680 687 }
;; 680 succs { 741 681 }
;; 681 succs { 741 682 }
;; 682 succs { 741 683 }
;; 683 succs { 741 684 }
;; 684 succs { 685 686 }
;; 685 succs { 741 686 }
;; 686 succs { 741 707 }
;; 687 succs { 741 688 }
;; 688 succs { 741 689 }
;; 689 succs { 690 707 }
;; 690 succs { 691 695 }
;; 691 succs { 741 692 }
;; 692 succs { 741 693 }
;; 693 succs { 741 694 }
;; 694 succs { 741 707 }
;; 695 succs { 696 702 }
;; 696 succs { 741 697 }
;; 697 succs { 741 698 }
;; 698 succs { 699 700 }
;; 699 succs { 741 701 }
;; 700 succs { 741 701 }
;; 701 succs { 741 707 }
;; 702 succs { 703 707 }
;; 703 succs { 741 704 }
;; 704 succs { 741 705 }
;; 705 succs { 741 706 }
;; 706 succs { 741 707 }
;; 707 succs { 741 708 }
;; 708 succs { 709 }
;; 709 succs { 712 710 }
;; 710 succs { 711 }
;; 711 succs { 713 }
;; 712 succs { 714 }
;; 713 succs { 714 }
;; 714 succs { 715 716 }
;; 715 succs { 717 }
;; 716 succs { 717 }
;; 717 succs { 718 }
;; 718 succs { 30 719 }
;; 719 succs { 1 }
;; 720 succs { 721 }
;; 721 succs { 722 }
;; 722 succs { 745 }
;; 723 succs { 740 }
;; 724 succs { 725 }
;; 725 succs { 727 }
;; 726 succs { 727 }
;; 727 succs { 738 }
;; 728 succs { 729 }
;; 729 succs { 738 }
;; 730 succs { 731 }
;; 731 succs { 732 }
;; 732 succs { 738 }
;; 733 succs { 734 }
;; 734 succs { 735 }
;; 735 succs { 736 }
;; 736 succs { 738 }
;; 737 succs { 738 }
;; 738 succs { 739 }
;; 739 succs { 740 }
;; 740 succs { 741 }
;; 741 succs { 742 }
;; 742 succs { 743 }
;; 743 succs { 744 }
;; 744 succs { 745 }
;; 745 succs { }
void checkPointerConstraint (union tree_node * function_tree, struct ptb * ptable, struct gimple_array * user_tmp, union tree_node * checkTree, int calleetype)
{
  int finally_tmp.1804;
  bool D.254914;
  const char * D.254909;
  union tree_node * D.254908;
  struct value_type & D.254907;
  const char * D.254906;
  struct value_type & D.254905;
  struct value_type & D.254904;
  struct value_type & D.254903;
  struct value_type & D.254902;
  bool D.254901;
  struct value_type & D.254900;
  union tree_node * D.254899;
  union tree_node * D.254898;
  struct value_type & D.254897;
  struct value_type & D.254896;
  union tree_node * D.254895;
  struct value_type & D.254894;
  struct gimple_array * D.254893;
  const char * D.254888;
  union tree_node * D.254887;
  bool D.254886;
  struct function_free_array * D.254885;
  struct function_free_array * D.254884;
  const char * D.254880;
  struct function_relate_array * D.254879;
  struct function_relate_array * D.254878;
  const char * D.254876;
  int * D.254875;
  int * D.254874;
  void * D.254872;
  struct function_relate_array * D.254871;
  union tree_node * D.254867;
  union tree_node * D.254866;
  union tree_node * D.254865;
  union tree_node * D.254864;
  unsigned int D.254863;
  union tree_node * D.254862;
  unsigned int D.254861;
  union tree_node * D.254860;
  unsigned int D.254859;
  union tree_node * D.254858;
  union tree_node * D.254857;
  union tree_node * D.254856;
  unsigned int D.254855;
  const char * D.254854;
  union tree_node * D.254853;
  union tree_node * D.254852;
  const char * D.254851;
  union tree_node * D.254850;
  union tree_node * D.254849;
  const char * D.254847;
  union tree_node * D.254846;
  union tree_node * D.254845;
  const char * D.254844;
  union tree_node * D.254843;
  union tree_node * D.254842;
  union tree_node * D.254841;
  union tree_node * D.254840;
  const char * D.254839;
  const char * D.254838;
  const char * D.254837;
  union tree_node * D.254836;
  union tree_node * D.254835;
  union tree_node * D.254834;
  union tree_node * D.254833;
  const char * D.254832;
  const char * D.254831;
  const char * D.254830;
  union tree_node * D.254829;
  const char * D.254828;
  union tree_node * D.254827;
  union tree_node * D.254826;
  union tree_node * D.254825;
  union tree_node * D.254824;
  union tree_node * D.254823;
  bool D.254822;
  struct function * D.254821;
  bool D.254819;
  bool D.254817;
  bool D.254816;
  bool D.254815;
  const char * D.254814;
  union tree_node * D.254813;
  union tree_node * D.254812;
  union tree_node * D.254811;
  struct function * D.254810;
  struct function * D.254809;
  struct function_relate_array * D.254808;
  struct function_relate_array * D.254807;
  void * D.254805;
  struct gimple_array * D.254804;
  union tree_node * D.254803;
  const char * D.254802;
  union tree_node * D.254801;
  union tree_node * D.254800;
  const char * D.254799;
  const char * D.254798;
  union tree_node * D.254797;
  union tree_node * D.254796;
  const char * D.254795;
  struct function * D.254794;
  const char * D.254793;
  struct function_return_array * D.254789;
  const char * D.254788;
  const char * D.254787;
  int i;
  struct gimple_array start;
  struct free_type free_type;
  int k;
  struct vector callerRetTypearray;
  struct function_free_array callerFunArray;
  long unsigned int x;
  int k;
  struct function_relate_array fun_array;
  struct vector relate_type_array;
  long unsigned int x;
  struct gimple * def_stmt;
  int max_bb;
  int max_bb;
  int j;
  int i;
  struct iterator it_i;
  struct hash_map * function_maxbasicblock_collect;
  int freecount;
  union tree_node * findtree;
  union tree_node * findtree;
  const char * name;
  struct gimple * def_stmt;
  struct gimple * use_stmt;
  struct relate_type relate_type;
  struct gimple * finalstmt;
  struct gimple * tmp;
  struct edge_iterator ei2;
  struct edge_def * e2;
  int check;
  struct edge_iterator ei;
  struct edge_def * e;
  struct basic_block_def * bb;
  int k;
  int succ_havereturn;
  struct free_type free_type;
  int lastbasicblock;
  struct function_relate_array maxbb_array;
  struct vector maxbb_type_array;
  struct gimple * laststmt;
  union tree_node * lastfucntion;
  struct hash_map * function_maxbb_collect;
  const char * name;
  const char * name;
  struct vector earlyend;
  struct gimple * def_stmt;
  const char * name;
  struct vector free_array;
  int init_check_table_stmt;
  int find_mallocstmt;
  int is_pthread_detched;
  int find_pthread_join;
  int find_pthread_detched;
  int find_retheapstmt;
  int find_freestmt;
  int find_phistmt;
  int childptable_type;
  int ptable_type;
  int find_Looserulesfreestmt;
  int k;
  int find_thread_count;
  int find_thread;
  struct vector funcalleeRetTypearray;
  struct function_return_array find_fun_array;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * user_tmp2;
  struct gimple_array * used_stmt2;
  struct gimple_array * used_stmt;
  struct gimple_array start2;
  struct gimple_array start;
  struct gimple * u_stmt2;
  struct gimple * u_stmt;
  union tree_node * iftmp.1803;
  bool retval.1780;
  struct gimple * iftmp.1725;
  bool retval.1724;
  bool retval.1717;
  bool retval.1714;
  bool retval.1713;
  bool retval.1712;
  bool retval.1711;
  bool retval.1710;
  struct gimple * iftmp.1709;
  bool retval.1705;
  bool retval.1701;
  bool retval.1700;
  bool retval.1697;
  bool retval.1690;
  bool retval.1681;
  struct hash_map * function_maxbb_collect.1677;
  struct iterator D.201563;
  bool retval.1676;
  bool retval.1669;
  bool retval.1668;
  bool retval.1667;
  bool retval.1666;
  bool retval.1665;
  void * D.201429;
  struct gimple * iftmp.1662;
  const char[16] * iftmp.1650;
  bool iftmp.1646;
  bool retval.1645;
  bool iftmp.1644;
  bool retval.1643;
  bool retval.1640;
  bool retval.1639;
  bool retval.1637;
  bool retval.1636;
  bool iftmp.1614;
  bool retval.1613;
  bool retval.1604;
  bool retval.1603;
  bool retval.1593;
  bool retval.1590;
  bool retval.1589;
  bool retval.1570;
  bool iftmp.1564;
  bool retval.1563;
  bool retval.1562;
  bool iftmp.1539;
  bool retval.1538;
  bool retval.1537;
  bool retval.1525;
  bool retval.1516;
  bool retval.1515;
  bool retval.1514;
  bool retval.1513;
  bool retval.1512;
  bool retval.1511;
  bool retval.1506;
  bool retval.1504;
  bool retval.1503;
  bool retval.1502;
  bool retval.1501;
  bool retval.1488;
  bool retval.1486;
  bool iftmp.1482;
  bool retval.1481;
  bool retval.1480;
  bool iftmp.1479;
  bool retval.1478;
  bool retval.1477;
  bool retval.1476;
  struct gimple * iftmp.1474;
  bool retval.1469;
  void * D.201307;
  bool retval.1456;
  bool retval.1455;
  bool retval.1448;
  bool retval.1447;
  bool retval.1446;
  bool retval.1441;
  union tree_node * iftmp.1440;
  bool retval.1436;
  bool retval.1433;
  bool retval.1424;

  <bb 2> :
  gimple_array::gimple_array (&start);
  gimple_array::gimple_array (&start2);
  start.stmt = 0B;
  start2.stmt = 0B;
  used_stmt = &start;
  used_stmt2 = &start;
  user_tmp2 = user_tmp;
  table_temp = ptable;
  goto <bb 4>; [INV]

  <bb 3> :
  std::vector<tree_node*>::pop_back (&traceStack);

  <bb 4> :
  _1 = std::vector<tree_node*>::size (&traceStack);
  retval.1424 = _1 != 0;
  if (retval.1424 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  function_tree.1425_2 = function_tree;
  D.254787 = get_name (function_tree.1425_2);

  <bb 6> :
  _3 = D.254787;
  stderr.1426_4 = stderr;
  fprintf (stderr.1426_4, "\x1b[40;42m =======pre_check_funciton:%s========= \x1b[0m\n", _3);

  <bb 7> :
  calleetype.1427_5 = (unsigned int) calleetype;
  FUNCITON_THREAD.1428_6 = FUNCITON_THREAD;
  if (calleetype.1427_5 == FUNCITON_THREAD.1428_6)
    goto <bb 8>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 8> :
  threadmod.1429_7 = threadmod;
  _8 = (int) threadmod.1429_7;
  if (_8 == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 9> :
  function_return_array::function_return_array (&find_fun_array);
  function_tree.1430_9 = function_tree;
  D.254788 = get_name (function_tree.1430_9);

  <bb 10> :
  _10 = D.254788;
  stderr.1431_11 = stderr;
  fprintf (stderr.1431_11, "\x1b[40;42m =======thread job funciton:%s========= \x1b[0m\n", _10);

  <bb 11> :
  function_return_collect.1432_12 = function_return_collect;
  D.254789 = hash_map<tree_node*, function_return_array>::get (function_return_collect.1432_12, &function_tree);

  <bb 12> :
  _13 = D.254789;
  function_return_array::operator= (&find_fun_array, _13);

  <bb 13> :
  std::vector<return_type>::vector (&funcalleeRetTypearray, &find_fun_array.return_type_array);

  <bb 14> :
  find_thread = 0;
  find_thread_count = 0;
  k = 0;
  goto <bb 21>; [INV]

  <bb 15> :
  _14 = (long unsigned int) k;
  _15 = std::vector<return_type>::operator[] (&funcalleeRetTypearray, _14);
  _16 = _15->return_type_stmt_num;
  _17 = (unsigned int) _16;
  FUNCITON_THREAD.1434_18 = FUNCITON_THREAD;
  retval.1433 = _17 == FUNCITON_THREAD.1434_18;
  if (retval.1433 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 16> :
  _19 = (long unsigned int) k;
  _20 = std::vector<return_type>::operator[] (&funcalleeRetTypearray, _19);
  _21 = _20->return_type_stmt_num;
  stderr.1435_22 = stderr;
  fprintf (stderr.1435_22, "\x1b[40;44m ======= print pthread lock stmt %d ========  \x1b[0m\n", _21);

  <bb 17> :
  _23 = (long unsigned int) k;
  _24 = std::vector<return_type>::operator[] (&funcalleeRetTypearray, _23);
  _25 = _24->stmt;
  debug_gimple_stmt (_25);

  <bb 18> :
  _26 = (long unsigned int) k;
  _27 = std::vector<return_type>::operator[] (&funcalleeRetTypearray, _26);
  _28 = _27->stmt;
  _29 = gimple_location_safe (_28);
  warning_at (_29, 0, "use location");

  <bb 19> :
  find_thread_count = find_thread_count + 1;

  <bb 20> :
  k = k + 1;

  <bb 21> :
  _30 = (long unsigned int) k;
  _31 = std::vector<return_type>::size (&funcalleeRetTypearray);
  retval.1436 = _30 < _31;
  if (retval.1436 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 22> :
  stderr.1437_32 = stderr;
  fprintf (stderr.1437_32, "\x1b[40;42m =======thread job funciton lock count :%d========= \x1b[0m\n", find_thread_count);

  <bb 23> :
  std::vector<return_type>::~vector (&funcalleeRetTypearray);
  function_return_array::~function_return_array (&find_fun_array);
  find_fun_array = {CLOBBER};
  funcalleeRetTypearray = {CLOBBER};

  <bb 24> :
  function_tree.1438_33 = function_tree;
  D.254793 = get_name (function_tree.1438_33);

  <bb 25> :
  _34 = D.254793;
  stderr.1439_35 = stderr;
  fprintf (stderr.1439_35, "\x1b[40;42m =======start_check_funciton:%s========= \x1b[0m\n", _34);

  <bb 26> :
  if (table_temp != 0B)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  iftmp.1440 = table_temp->target;
  goto <bb 29>; [INV]

  <bb 28> :
  iftmp.1440 = 0B;

  <bb 29> :
  t = iftmp.1440;
  goto <bb 718>; [INV]

  <bb 30> :
  find_Looserulesfreestmt = 0;
  ptable_type = 0;
  childptable_type = 0;
  find_phistmt = 0;
  find_freestmt = 0;
  find_retheapstmt = -2;
  find_pthread_detched = 0;
  find_pthread_join = 0;
  is_pthread_detched = 0;
  find_mallocstmt = 0;
  init_check_table_stmt = 0;
  _36 = table_temp->node;
  D.254794 = cgraph_node::get_fun (_36);

  <bb 31> :
  _37 = D.254794;
  _38 = _37->decl;
  function_tree.1442_39 = function_tree;
  retval.1441 = _38 == function_tree.1442_39;
  if (retval.1441 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 713>; [INV]

  <bb 32> :
  _40 = table_temp->target;
  if (_40 != 0B)
    goto <bb 33>; [INV]
  else
    goto <bb 713>; [INV]

  <bb 33> :
  std::vector<free_type>::vector (&free_array);
  find_phistmt = 0;
  find_mallocstmt = find_phistmt;
  find_freestmt = find_mallocstmt;
  stderr.1443_41 = stderr;
  __builtin_fwrite ("\ndot graph START\n", 1, 17, stderr.1443_41);

  <bb 34> :
  stderr.1444_42 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1444_42);

  <bb 35> :
  name = "";
  _43 = table_temp->target;
  _44 = _43->base.code;
  if (_44 == 26)
    goto <bb 37>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 36> :
  _45 = table_temp->target;
  _46 = _45->base.code;
  if (_46 == 32)
    goto <bb 37>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 37> :
  stderr.1445_47 = stderr;
  __builtin_fwrite ("\n ================== collect possiable invalid ================== \n", 1, 67, stderr.1445_47);

  <bb 38> :
  _48 = table_temp->target;
  debug_tree (_48);

  <bb 39> :
  // predicted unlikely by continue predictor.
  finally_tmp.1804 = 0;
  goto <bb 709>; [INV]

  <bb 40> :
  _49 = table_temp->target;
  def_stmt = _49->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 41>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 41> :
  _50 = table_temp->target;
  _51 = _50->base.code;
  if (_51 != 36)
    goto <bb 42>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 42> :
  if (def_stmt != 0B)
    goto <bb 43>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 43> :
  _52 = table_temp->target;
  debug_tree (_52);

  <bb 44> :
  _53 = table_temp->target;
  _54 = _53->base.code;
  if (_54 == 33)
    goto <bb 45>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 45> :
  _55 = table_temp->target;
  D.254795 = get_name (_55);

  <bb 46> :
  name = D.254795;

  <bb 47> :
  _56 = table_temp->target;
  _57 = _56->base.code;
  if (_57 != 131)
    goto <bb 48>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 48> :
  _58 = table_temp->target;
  _59 = _58->base.code;
  if (_59 != 0)
    goto <bb 49>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 49> :
  _60 = gimple_code (def_stmt);
  retval.1446 = _60 != 0;
  if (retval.1446 != 0)
    goto <bb 50>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 50> :
  debug_gimple_stmt (def_stmt);

  <bb 51> :
  _61 = gimple_code (def_stmt);
  retval.1447 = _61 == 8;
  if (retval.1447 != 0)
    goto <bb 52>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 52> :
  D.254796 = gimple_call_fndecl (def_stmt);

  <bb 53> :
  _62 = D.254796;
  retval.1448 = _62 != 0B;
  if (retval.1448 != 0)
    goto <bb 54>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 54> :
  D.254797 = gimple_call_fndecl (def_stmt);

  <bb 55> :
  _63 = D.254797;
  D.254798 = get_name (_63);

  <bb 56> :
  name = D.254798;

  <bb 57> :
  stderr.1449_64 = stderr;
  __builtin_fwrite ("\n ================== pre trace ptable ================== \n", 1, 58, stderr.1449_64);

  <bb 58> :
  if (def_stmt != 0B)
    goto <bb 59>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 59> :
  _65 = table_temp->target;
  _66 = _65->base.code;
  if (_66 == 33)
    goto <bb 60>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 60> :
  _67 = table_temp->target;
  D.254799 = get_name (_67);

  <bb 61> :
  name = D.254799;
  stderr.1450_68 = stderr;
  fprintf (stderr.1450_68, "trace fucntion name:%s \n", name);

  <bb 62> :
  _69 = table_temp->target;
  RET_HEAP_OBJECT.1451_70 = RET_HEAP_OBJECT;
  RET_HEAP_OBJECT.1452_71 = (int) RET_HEAP_OBJECT.1451_70;
  _72 = table_temp->target;
  trace_function_path (_72, RET_HEAP_OBJECT.1452_71, _69, &find_retheapstmt);

  <bb 63> :
  find_retheapstmt.1453_73 = find_retheapstmt;
  if (find_retheapstmt.1453_73 > 0)
    goto <bb 64>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 64> :
  stderr.1454_74 = stderr;
  __builtin_fwrite ("some fucntion return value is heap-object and with Collection SSA_NAME alias relation\n", 1, 86, stderr.1454_74);
  goto <bb 77>; [INV]

  <bb 65> :
  _75 = table_temp->target;
  _76 = _75->base.code;
  if (_76 != 131)
    goto <bb 66>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 66> :
  _77 = table_temp->target;
  _78 = _77->base.code;
  if (_78 != 38)
    goto <bb 67>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 67> :
  retval.1455 = is_gimple_call (def_stmt);
  if (retval.1455 != 0)
    goto <bb 68>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 68> :
  D.254800 = gimple_call_fn (def_stmt);

  <bb 69> :
  _79 = D.254800;
  retval.1456 = _79 != 0B;
  if (retval.1456 != 0)
    goto <bb 70>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 70> :
  D.254801 = gimple_call_fn (def_stmt);

  <bb 71> :
  _80 = D.254801;
  D.254802 = get_name (_80);

  <bb 72> :
  name = D.254802;
  stderr.1457_81 = stderr;
  fprintf (stderr.1457_81, "trace fucntion name:%s \n", name);

  <bb 73> :
  _82 = table_temp->target;
  RET_HEAP_OBJECT.1458_83 = RET_HEAP_OBJECT;
  RET_HEAP_OBJECT.1459_84 = (int) RET_HEAP_OBJECT.1458_83;
  D.254803 = gimple_call_fndecl (def_stmt);

  <bb 74> :
  _85 = D.254803;
  trace_function_path (_85, RET_HEAP_OBJECT.1459_84, _82, &find_retheapstmt);

  <bb 75> :
  find_retheapstmt.1460_86 = find_retheapstmt;
  if (find_retheapstmt.1460_86 > 0)
    goto <bb 76>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 76> :
  stderr.1461_87 = stderr;
  __builtin_fwrite ("some fucntion return value is heap-object and with Collection SSA_NAME alias relation\n", 1, 86, stderr.1461_87);

  <bb 77> :
  stderr.1462_88 = stderr;
  __builtin_fwrite ("\n ================== pre trace ptable finish================== \n", 1, 64, stderr.1462_88);

  <bb 78> :
  stderr.1463_89 = stderr;
  __builtin_fwrite ("\n ================== this stmt hava call fucntion ================== \n", 1, 70, stderr.1463_89);

  <bb 79> :
  if (name != 0B)
    goto <bb 80>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 80> :
  _90 = strcmp (name, "realloc");
  if (_90 == 0)
    goto <bb 87>; [INV]
  else
    goto <bb 81>; [INV]

  <bb 81> :
  _91 = strcmp (name, "malloc");
  if (_91 == 0)
    goto <bb 87>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 82> :
  _92 = strcmp (name, "xmalloc");
  if (_92 == 0)
    goto <bb 87>; [INV]
  else
    goto <bb 83>; [INV]

  <bb 83> :
  _93 = strcmp (name, "calloc");
  if (_93 == 0)
    goto <bb 87>; [INV]
  else
    goto <bb 84>; [INV]

  <bb 84> :
  _94 = strcmp (name, "xcalloc");
  if (_94 == 0)
    goto <bb 87>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 85> :
  _95 = strcmp (name, "strdup");
  if (_95 == 0)
    goto <bb 87>; [INV]
  else
    goto <bb 86>; [INV]

  <bb 86> :
  _96 = strcmp (name, "xstrdup");
  if (_96 == 0)
    goto <bb 87>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 87> :
  IS_MALLOC_FUCNTION.1464_97 = IS_MALLOC_FUCNTION;
  ptable_type = (int) IS_MALLOC_FUCNTION.1464_97;
  stderr.1465_98 = stderr;
  fprintf (stderr.1465_98, "is Reserved word function :%s\n", name);

  <bb 88> :
  goto <bb 90>; [INV]

  <bb 89> :
  IS_OTHRER_FUCNTION.1466_99 = IS_OTHRER_FUCNTION;
  ptable_type = (int) IS_OTHRER_FUCNTION.1466_99;
  stderr.1467_100 = stderr;
  fprintf (stderr.1467_100, "is Other function %s\n", name);

  <bb 90> :

  <bb 91> :
  treeGimpleArray.1468_101 = treeGimpleArray;
  _102 = &table_temp->target;
  D.254804 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.1468_101, _102);

  <bb 92> :
  user_tmp = D.254804;
  std::vector<basic_block_def*>::vector (&earlyend);
  start.stmt = 0B;
  used_stmt = &start;
  if (user_tmp != 0B)
    goto <bb 93>; [INV]
  else
    goto <bb 635>; [INV]

  <bb 93> :
  D.254805 = operator new (48);

  <bb 94> :
  D.201307 = D.254805;
  hash_map<tree_node*, function_relate_array>::hash_map (D.201307, 13, 0, 1, 0);

  <bb 95> :
  function_maxbb_collect = D.201307;
  lastfucntion = 0B;
  laststmt = 0B;
  std::vector<relate_type>::vector (&maxbb_type_array);
  function_relate_array::function_relate_array (&maxbb_array);
  _103 = &table_temp->target;
  D.254807 = hash_map<tree_node*, function_relate_array>::get (function_maxbb_collect, _103);

  <bb 96> :
  _104 = D.254807;
  retval.1469 = _104 == 0B;
  if (retval.1469 != 0)
    goto <bb 97>; [INV]
  else
    goto <bb 98>; [INV]

  <bb 97> :
  std::vector<relate_type>::operator= (&maxbb_array.relate_type_array, &maxbb_type_array);
  goto <bb 101>; [INV]

  <bb 98> :
  _105 = &table_temp->target;
  D.254808 = hash_map<tree_node*, function_relate_array>::get (function_maxbb_collect, _105);

  <bb 99> :
  _106 = D.254808;
  function_relate_array::operator= (&maxbb_array, _106);

  <bb 100> :
  std::vector<relate_type>::operator= (&maxbb_type_array, &maxbb_array.relate_type_array);

  <bb 101> :
  lastbasicblock = -1;
  _107 = table_temp->swap_type;
  _108 = (unsigned int) _107;
  FUNCITON_THREAD.1470_109 = FUNCITON_THREAD;
  if (_108 == FUNCITON_THREAD.1470_109)
    goto <bb 102>; [INV]
  else
    goto <bb 103>; [INV]

  <bb 102> :
  stderr.1471_110 = stderr;
  __builtin_fwrite (" \n Start is Pthread Job Collect  \n", 1, 34, stderr.1471_110);
  goto <bb 104>; [INV]

  <bb 103> :
  stderr.1472_111 = stderr;
  __builtin_fwrite (" \n Start check Pointer Collect  \n", 1, 33, stderr.1472_111);

  <bb 104> :
  stderr.1473_112 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1473_112);

  <bb 105> :
  _113 = user_tmp->size;
  if (_113 > 0)
    goto <bb 106>; [INV]
  else
    goto <bb 522>; [INV]

  <bb 106> :
  if (user_tmp != 0B)
    goto <bb 107>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 107> :
  iftmp.1474 = user_tmp->stmt;
  goto <bb 109>; [INV]

  <bb 108> :
  iftmp.1474 = 0B;

  <bb 109> :
  u_stmt = iftmp.1474;
  goto <bb 486>; [INV]

  <bb 110> :
  prebranchexit.1475_114 = prebranchexit;
  if (prebranchexit.1475_114 != 0)
    goto <bb 111>; [INV]
  else
    goto <bb 178>; [INV]

  <bb 111> :
  _115 = table_temp->node;
  D.254809 = cgraph_node::get_fun (_115);

  <bb 112> :
  _116 = D.254809;
  push_cfun (_116);

  <bb 113> :
  calculate_dominance_info (1);

  <bb 114> :
  succ_havereturn = 0;
  k = 0;
  goto <bb 176>; [INV]

  <bb 115> :
  _117 = table_temp->node;
  D.254810 = cgraph_node::get_fun (_117);

  <bb 116> :
  _118 = D.254810;
  _119 = _118->cfg;
  _120 = _119->x_entry_block_ptr;
  bb = _120->next_bb;
  goto <bb 173>; [INV]

  <bb 117> :
  _121 = &bb->succs;
  ei = ei_start_1 (_121);
  goto <bb 170>; [INV]

  <bb 118> :
  name = "";
  _122 = (long unsigned int) k;
  _123 = std::vector<return_type>::operator[] (&global_ret_type_array, _122);
  _124 = _123->stmt;
  D.254811 = gimple_call_lhs (_124);

  <bb 119> :
  _125 = D.254811;
  retval.1476 = _125 == 0B;
  if (retval.1476 != 0)
    goto <bb 120>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 120> :
  _126 = (long unsigned int) k;
  _127 = std::vector<return_type>::operator[] (&global_ret_type_array, _126);
  _128 = _127->stmt;
  D.254812 = gimple_call_fn (_128);

  <bb 121> :
  _129 = D.254812;
  retval.1477 = _129 != 0B;
  if (retval.1477 != 0)
    goto <bb 122>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 122> :
  _130 = (long unsigned int) k;
  _131 = std::vector<return_type>::operator[] (&global_ret_type_array, _130);
  _132 = _131->stmt;
  D.254813 = gimple_call_fn (_132);

  <bb 123> :
  _133 = D.254813;
  D.254814 = get_name (_133);

  <bb 124> :
  name = D.254814;

  <bb 125> :
  if (name != 0B)
    goto <bb 127>; [INV]
  else
    goto <bb 126>; [INV]

  <bb 126> :
  _134 = (long unsigned int) k;
  _135 = std::vector<return_type>::operator[] (&global_ret_type_array, _134);
  _136 = _135->stmt;
  _137 = gimple_code (_136);
  if (_137 == 10)
    goto <bb 127>; [INV]
  else
    goto <bb 128>; [INV]

  <bb 127> :
  iftmp.1479 = 1;
  goto <bb 129>; [INV]

  <bb 128> :
  iftmp.1479 = 0;

  <bb 129> :
  retval.1478 = iftmp.1479;
  if (retval.1478 != 0)
    goto <bb 130>; [INV]
  else
    goto <bb 169>; [INV]

  <bb 130> :
  check = 0;
  if (name != 0B)
    goto <bb 131>; [INV]
  else
    goto <bb 133>; [INV]

  <bb 131> :
  _138 = strcmp (name, "exit");
  if (_138 == 0)
    goto <bb 132>; [INV]
  else
    goto <bb 133>; [INV]

  <bb 132> :
  check = 1;

  <bb 133> :
  _139 = (long unsigned int) k;
  _140 = std::vector<return_type>::operator[] (&global_ret_type_array, _139);
  _141 = _140->stmt;
  _142 = gimple_code (_141);
  retval.1480 = _142 == 10;
  if (retval.1480 != 0)
    goto <bb 134>; [INV]
  else
    goto <bb 135>; [INV]

  <bb 134> :
  check = 1;

  <bb 135> :
  if (check == 1)
    goto <bb 136>; [INV]
  else
    goto <bb 169>; [INV]

  <bb 136> :
  _143 = bb->index;
  _144 = gimple_bb (u_stmt);
  _145 = _144->index;
  if (_143 == _145)
    goto <bb 138>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 137> :
  e.1483_146 = e;
  _147 = e.1483_146->dest;
  _148 = _147->index;
  _149 = gimple_bb (u_stmt);
  _150 = _149->index;
  if (_148 == _150)
    goto <bb 138>; [INV]
  else
    goto <bb 139>; [INV]

  <bb 138> :
  iftmp.1482 = 1;
  goto <bb 140>; [INV]

  <bb 139> :
  iftmp.1482 = 0;

  <bb 140> :
  retval.1481 = iftmp.1482;
  if (retval.1481 != 0)
    goto <bb 141>; [INV]
  else
    goto <bb 169>; [INV]

  <bb 141> :
  _151 = (long unsigned int) k;
  _152 = std::vector<return_type>::operator[] (&global_ret_type_array, _151);
  tmp = _152->stmt;
  _153 = &bb->succs;
  ei2 = ei_start_1 (_153);
  goto <bb 166>; [INV]

  <bb 142> :
  e.1484_154 = e;
  _155 = e.1484_154->dest;
  _156 = _155->index;
  e2.1485_157 = e2;
  _158 = e2.1485_157->dest;
  _159 = _158->index;
  if (_156 != _159)
    goto <bb 143>; [INV]
  else
    goto <bb 158>; [INV]

  <bb 143> :
  e2.1487_160 = e2;
  _161 = e2.1487_160->dest;
  _162 = gimple_bb (tmp);
  D.254815 = dominated_by_p (1, _162, _161);

  <bb 144> :
  retval.1486 = D.254815;
  if (retval.1486 != 0)
    goto <bb 145>; [INV]
  else
    goto <bb 165>; [INV]

  <bb 145> :
  _163 = gimple_bb (tmp);
  cfun.1489_164 = cfun;
  _165 = cfun.1489_164->cfg;
  _166 = _165->x_exit_block_ptr;
  _167 = _166->prev_bb;
  D.254816 = dominated_by_p (1, _167, _163);

  <bb 146> :
  _168 = D.254816;
  retval.1488 = ~_168;
  if (retval.1488 != 0)
    goto <bb 147>; [INV]
  else
    goto <bb 165>; [INV]

  <bb 147> :
  stderr.1490_169 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1490_169);

  <bb 148> :
  stderr.1491_170 = stderr;
  __builtin_fwrite ("\x1b[40;31m    branch possiable have return or exit  \x1b[0m\n", 1, 55, stderr.1491_170);

  <bb 149> :
  debug_gimple_stmt (u_stmt);

  <bb 150> :
  _171 = gimple_bb (u_stmt);
  _172 = _171->index;
  stderr.1492_173 = stderr;
  fprintf (stderr.1492_173, "bb index := %d\n", _172);

  <bb 151> :
  debug_gimple_stmt (tmp);

  <bb 152> :
  _174 = gimple_location_safe (tmp);
  warning_at (_174, 0, "use location");

  <bb 153> :
  _175 = gimple_bb (tmp);
  _176 = _175->index;
  stderr.1493_177 = stderr;
  fprintf (stderr.1493_177, "beacuse in succ := %d have return or exit\n", _176);

  <bb 154> :
  _178 = (long unsigned int) k;
  _179 = std::vector<return_type>::operator[] (&global_ret_type_array, _178);
  _180 = _179->stmt;
  debug_gimple_stmt (_180);

  <bb 155> :
  _181 = (long unsigned int) k;
  _182 = std::vector<return_type>::operator[] (&global_ret_type_array, _181);
  _183 = _182->stmt;
  _184 = gimple_location_safe (_183);
  warning_at (_184, 0, "use location");

  <bb 156> :
  _185 = gimple_bb (tmp);
  _186 = _185->index;
  _187 = gimple_bb (u_stmt);
  _188 = _187->index;
  stderr.1494_189 = stderr;
  fprintf (stderr.1494_189, "gimple stmt in succ := %d ,possiable got to succ := %d\n", _188, _186);

  <bb 157> :
  stderr.1495_190 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1495_190);
  goto <bb 165>; [INV]

  <bb 158> :
  if (succ_havereturn == 0)
    goto <bb 159>; [INV]
  else
    goto <bb 165>; [INV]

  <bb 159> :
  e2.1496_191 = e2;
  _192 = e2.1496_191->dest;
  _193 = _192->index;
  cfun.1497_194 = cfun;
  _195 = cfun.1497_194->cfg;
  _196 = _195->x_exit_block_ptr;
  _197 = _196->prev_bb;
  _198 = _197->index;
  if (_193 == _198)
    goto <bb 160>; [INV]
  else
    goto <bb 165>; [INV]

  <bb 160> :
  debug_gimple_stmt (u_stmt);

  <bb 161> :
  _199 = gimple_location_safe (u_stmt);
  warning_at (_199, 0, "use location");

  <bb 162> :
  succ_havereturn = 1;
  _200 = bb->index;
  stderr.1498_201 = stderr;
  fprintf (stderr.1498_201, "\x1b[40;31m    branch possiable have return in bb:%d \x1b[0m\n", _200);

  <bb 163> :
  cfun.1499_202 = cfun;
  _203 = cfun.1499_202->cfg;
  _204 = _203->x_exit_block_ptr;
  _205 = _204->prev_bb;
  _206 = _205->index;
  stderr.1500_207 = stderr;
  fprintf (stderr.1500_207, "beacuse in succ := %d have return \n", _206);

  <bb 164> :
  // predicted unlikely by continue predictor.

  <bb 165> :
  ei_next (&ei2);

  <bb 166> :
  D.254817 = ei_cond (ei2, &e2);

  <bb 167> :
  retval.1501 = D.254817;
  if (retval.1501 != 0)
    goto <bb 142>; [INV]
  else
    goto <bb 168>; [INV]

  <bb 168> :
  e2 = {CLOBBER};
  ei2 = {CLOBBER};

  <bb 169> :
  ei_next (&ei);

  <bb 170> :
  D.254819 = ei_cond (ei, &e);

  <bb 171> :
  retval.1502 = D.254819;
  if (retval.1502 != 0)
    goto <bb 118>; [INV]
  else
    goto <bb 172>; [INV]

  <bb 172> :
  e = {CLOBBER};
  ei = {CLOBBER};
  bb = bb->next_bb;

  <bb 173> :
  _208 = table_temp->node;
  D.254821 = cgraph_node::get_fun (_208);

  <bb 174> :
  _209 = D.254821;
  _210 = _209->cfg;
  _211 = _210->x_exit_block_ptr;
  retval.1503 = bb != _211;
  if (retval.1503 != 0)
    goto <bb 117>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 175> :
  k = k + 1;

  <bb 176> :
  _212 = (long unsigned int) k;
  _213 = std::vector<return_type>::size (&global_ret_type_array);
  retval.1504 = _212 < _213;
  if (retval.1504 != 0)
    goto <bb 115>; [INV]
  else
    goto <bb 177>; [INV]

  <bb 177> :
  pop_cfun ();

  <bb 178> :
  stmtloopcheck.1505_214 = stmtloopcheck;
  if (stmtloopcheck.1505_214 != 0)
    goto <bb 179>; [INV]
  else
    goto <bb 184>; [INV]

  <bb 179> :
  _215 = gimple_bb (u_stmt);
  D.254822 = bb_in_loop_p (_215);

  <bb 180> :
  retval.1506 = D.254822;
  if (retval.1506 != 0)
    goto <bb 181>; [INV]
  else
    goto <bb 184>; [INV]

  <bb 181> :
  stderr.1507_216 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1507_216);

  <bb 182> :
  stderr.1508_217 = stderr;
  __builtin_fwrite ("\x1b[40;31m    collect Stmt in loop \x1b[0m\n", 1, 38, stderr.1508_217);

  <bb 183> :
  stderr.1509_218 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1509_218);

  <bb 184> :
  samefucntioncheck.1510_219 = samefucntioncheck;
  if (samefucntioncheck.1510_219 != 0)
    goto <bb 185>; [INV]
  else
    goto <bb 211>; [INV]

  <bb 185> :
  _220 = table_temp->last_stmt;
  _221 = gimple_code (_220);
  retval.1511 = _221 == 8;
  if (retval.1511 != 0)
    goto <bb 186>; [INV]
  else
    goto <bb 211>; [INV]

  <bb 186> :
  _222 = gimple_code (u_stmt);
  retval.1512 = _222 == 8;
  if (retval.1512 != 0)
    goto <bb 187>; [INV]
  else
    goto <bb 211>; [INV]

  <bb 187> :
  _223 = table_temp->last_stmt;
  D.254823 = gimple_call_fn (_223);

  <bb 188> :
  _224 = D.254823;
  retval.1513 = _224 != 0B;
  if (retval.1513 != 0)
    goto <bb 189>; [INV]
  else
    goto <bb 211>; [INV]

  <bb 189> :
  D.254824 = gimple_call_fn (u_stmt);

  <bb 190> :
  _225 = D.254824;
  retval.1514 = _225 != 0B;
  if (retval.1514 != 0)
    goto <bb 191>; [INV]
  else
    goto <bb 211>; [INV]

  <bb 191> :
  _226 = table_temp->last_stmt;
  D.254825 = gimple_call_fn (_226);

  <bb 192> :
  _227 = D.254825;
  D.254826 = gimple_call_fn (u_stmt);

  <bb 193> :
  _228 = D.254826;
  retval.1515 = _227 == _228;
  if (retval.1515 != 0)
    goto <bb 194>; [INV]
  else
    goto <bb 196>; [INV]

  <bb 194> :
  _229 = table_temp->last_stmt;
  if (u_stmt == _229)
    goto <bb 195>; [INV]
  else
    goto <bb 211>; [INV]

  <bb 195> :
  debug_gimple_stmt (u_stmt);
  goto <bb 211>; [INV]

  <bb 196> :
  D.254827 = gimple_call_fn (u_stmt);

  <bb 197> :
  _230 = D.254827;
  D.254828 = get_name (_230);

  <bb 198> :
  name = D.254828;
  if (name != 0B)
    goto <bb 199>; [INV]
  else
    goto <bb 211>; [INV]

  <bb 199> :
  _231 = table_temp->last_stmt;
  D.254829 = gimple_call_fn (_231);

  <bb 200> :
  _232 = D.254829;
  D.254830 = get_name (_232);

  <bb 201> :
  _233 = D.254830;
  _234 = strcmp (name, _233);
  retval.1516 = _234 == 0;
  if (retval.1516 != 0)
    goto <bb 202>; [INV]
  else
    goto <bb 211>; [INV]

  <bb 202> :
  stderr.1517_235 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1517_235);

  <bb 203> :
  stderr.1518_236 = stderr;
  fprintf (stderr.1518_236, "\n Expand conflict \n", name);

  <bb 204> :
  stderr.1519_237 = stderr;
  fprintf (stderr.1519_237, " The same function may have multiple branches :%s\n", name);

  <bb 205> :
  _238 = table_temp->last_stmt;
  debug_gimple_stmt (_238);

  <bb 206> :
  _239 = table_temp->last_stmt;
  _240 = gimple_location_safe (_239);
  warning_at (_240, 0, "use location");

  <bb 207> :
  debug_gimple_stmt (u_stmt);

  <bb 208> :
  _241 = gimple_location_safe (u_stmt);
  warning_at (_241, 0, "use location");

  <bb 209> :
  _242 = gimple_bb (u_stmt);
  _243 = table_temp->node;
  check_bbinfo (_243, _242);

  <bb 210> :
  // predicted unlikely by continue predictor.
  goto <bb 481>; [INV]

  <bb 211> :
  free_type::free_type (&free_type);
  memoryleakcheck.1520_244 = memoryleakcheck;
  if (memoryleakcheck.1520_244 != 0)
    goto <bb 212>; [INV]
  else
    goto <bb 480>; [INV]

  <bb 212> :
  _245 = user_tmp->ret_stmt;
  if (_245 != 0B)
    goto <bb 213>; [INV]
  else
    goto <bb 256>; [INV]

  <bb 213> :
  debugmod.1521_246 = debugmod;
  if (debugmod.1521_246 != 0)
    goto <bb 214>; [INV]
  else
    goto <bb 217>; [INV]

  <bb 214> :
  function_tree.1522_247 = function_tree;
  D.254831 = get_name (function_tree.1522_247);

  <bb 215> :
  _248 = D.254831;
  stderr.1523_249 = stderr;
  fprintf (stderr.1523_249, "dot graph entry %s\n", _248);

  <bb 216> :
  stderr.1524_250 = stderr;
  __builtin_fwrite ("dot graph target entry end\n\n", 1, 28, stderr.1524_250);

  <bb 217> :
  _251 = user_tmp->ret_stmt;
  _252 = gimple_code (_251);
  retval.1525 = _252 == 10;
  if (retval.1525 != 0)
    goto <bb 218>; [INV]
  else
    goto <bb 480>; [INV]

  <bb 218> :
  _253 = user_tmp->ret_stmt;
  debug (_253);

  <bb 219> :
  _254 = user_tmp->ret_stmt;
  _255 = gimple_location_safe (_254);
  warning_at (_255, 0, "use location");

  <bb 220> :
  _256 = user_tmp->ret_stmt;
  debug_gimple_stmt (_256);

  <bb 221> :
  _257 = user_tmp->ret_stmt;
  now_stmt = _257;
  debugmod.1526_258 = debugmod;
  if (debugmod.1526_258 != 0)
    goto <bb 222>; [INV]
  else
    goto <bb 480>; [INV]

  <bb 222> :
  stderr.1527_259 = stderr;
  __builtin_fwrite ("dot graph target loc start ", 1, 27, stderr.1527_259);

  <bb 223> :
  _260 = user_tmp->ret_stmt;
  debug_gimple_stmt (_260);

  <bb 224> :
  _261 = user_tmp->ret_stmt;
  _262 = gimple_location_safe (_261);
  warning_at (_262, 0, "use location");

  <bb 225> :
  stderr.1528_263 = stderr;
  __builtin_fwrite ("dot graph target loc en1\n\n", 1, 26, stderr.1528_263);

  <bb 226> :
  _264 = user_tmp->ret_stmt;
  _265 = gimple_bb (_264);
  _266 = _265->index;
  stderr.1529_267 = stderr;
  fprintf (stderr.1529_267, "dot graph target line desc form basic block %d: ", _266);

  <bb 227> :
  _268 = user_tmp->ret_stmt;
  debug_gimple_stmt (_268);

  <bb 228> :
  _269 = user_tmp->ret_stmt;
  _270 = gimple_location_safe (_269);
  warning_at (_270, 0, "use location");

  <bb 229> :
  stderr.1530_271 = stderr;
  __builtin_fwrite ("dot graph target line desend\n\n", 1, 30, stderr.1530_271);

  <bb 230> :
  stderr.1531_272 = stderr;
  __builtin_fwrite ("dot graph target loc start ", 1, 27, stderr.1531_272);

  <bb 231> :
  _273 = user_tmp->ret_stmt;
  debug_gimple_stmt (_273);

  <bb 232> :
  _274 = user_tmp->ret_stmt;
  _275 = gimple_location_safe (_274);
  warning_at (_275, 0, "use location");

  <bb 233> :
  stderr.1532_276 = stderr;
  __builtin_fwrite ("dot graph target loc end\n\n", 1, 26, stderr.1532_276);

  <bb 234> :
  stderr.1533_277 = stderr;
  __builtin_fwrite ("dot graph target basicblock start ", 1, 34, stderr.1533_277);

  <bb 235> :
  _278 = user_tmp->ret_stmt;
  _279 = gimple_bb (_278);
  _280 = _279->index;
  function_tree.1534_281 = function_tree;
  D.254832 = get_name (function_tree.1534_281);

  <bb 236> :
  _282 = D.254832;
  stderr.1535_283 = stderr;
  fprintf (stderr.1535_283, "from %s basic block %d", _282, _280);

  <bb 237> :
  stderr.1536_284 = stderr;
  __builtin_fwrite ("dot graph target basicblock end\n\n", 1, 33, stderr.1536_284);

  <bb 238> :
  _285 = user_tmp->ret_stmt;
  D.254833 = gimple_block (_285);

  <bb 239> :
  _286 = D.254833;
  retval.1537 = _286 != 0B;
  if (retval.1537 != 0)
    goto <bb 240>; [INV]
  else
    goto <bb 252>; [INV]

  <bb 240> :
  _287 = user_tmp->ret_stmt;
  D.254834 = gimple_block (_287);

  <bb 241> :
  _288 = D.254834;
  _289 = _288->block.supercontext;
  _290 = _289->base.code;
  if (_290 == 33)
    goto <bb 242>; [INV]
  else
    goto <bb 245>; [INV]

  <bb 242> :
  _291 = user_tmp->ret_stmt;
  D.254835 = gimple_block (_291);

  <bb 243> :
  _292 = D.254835;
  _293 = _292->block.supercontext;
  function_tree.1540_294 = function_tree;
  if (_293 != function_tree.1540_294)
    goto <bb 244>; [INV]
  else
    goto <bb 245>; [INV]

  <bb 244> :
  iftmp.1539 = 1;
  goto <bb 246>; [INV]

  <bb 245> :
  iftmp.1539 = 0;

  <bb 246> :
  retval.1538 = iftmp.1539;
  if (retval.1538 != 0)
    goto <bb 247>; [INV]
  else
    goto <bb 252>; [INV]

  <bb 247> :
  stderr.1541_295 = stderr;
  __builtin_fwrite ("dot graph target basicblock star1 ", 1, 34, stderr.1541_295);

  <bb 248> :
  _296 = user_tmp->ret_stmt;
  _297 = gimple_bb (_296);
  _298 = _297->index;
  _299 = user_tmp->ret_stmt;
  D.254836 = gimple_block (_299);

  <bb 249> :
  _300 = D.254836;
  _301 = _300->block.supercontext;
  D.254837 = get_name (_301);

  <bb 250> :
  _302 = D.254837;
  stderr.1542_303 = stderr;
  fprintf (stderr.1542_303, "from %s basic block %d", _302, _298);

  <bb 251> :
  stderr.1543_304 = stderr;
  __builtin_fwrite ("dot graph target basicblock end\n\n", 1, 33, stderr.1543_304);

  <bb 252> :
  stderr.1544_305 = stderr;
  __builtin_fwrite ("dot graph stmt start ", 1, 21, stderr.1544_305);

  <bb 253> :
  _306 = user_tmp->ret_stmt;
  debug (_306);

  <bb 254> :
  _307 = user_tmp->ret_stmt;
  _308 = gimple_location_safe (_307);
  warning_at (_308, 0, "use location");

  <bb 255> :
  stderr.1545_309 = stderr;
  __builtin_fwrite ("dot graph stmt end\n\n", 1, 20, stderr.1545_309);
  goto <bb 480>; [INV]

  <bb 256> :
  _310 = user_tmp->target;
  if (_310 != 0B)
    goto <bb 257>; [INV]
  else
    goto <bb 339>; [INV]

  <bb 257> :
  debugmod.1546_311 = debugmod;
  if (debugmod.1546_311 != 0)
    goto <bb 258>; [INV]
  else
    goto <bb 261>; [INV]

  <bb 258> :
  function_tree.1547_312 = function_tree;
  D.254838 = get_name (function_tree.1547_312);

  <bb 259> :
  _313 = D.254838;
  stderr.1548_314 = stderr;
  fprintf (stderr.1548_314, "dot graph entry %s\n", _313);

  <bb 260> :
  stderr.1549_315 = stderr;
  __builtin_fwrite ("dot graph target entry end\n\n", 1, 28, stderr.1549_315);

  <bb 261> :
  finalstmt = u_stmt;
  debug (u_stmt);

  <bb 262> :
  _316 = gimple_location_safe (u_stmt);
  warning_at (_316, 0, "use location");

  <bb 263> :
  now_stmt = u_stmt;
  debugmod.1550_317 = debugmod;
  if (debugmod.1550_317 != 0)
    goto <bb 264>; [INV]
  else
    goto <bb 339>; [INV]

  <bb 264> :
  stderr.1551_318 = stderr;
  __builtin_fwrite ("dot graph target loc start ", 1, 27, stderr.1551_318);

  <bb 265> :
  _319 = table_temp->last_stmt;
  debug_gimple_stmt (_319);

  <bb 266> :
  _320 = table_temp->last_stmt;
  _321 = gimple_location_safe (_320);
  warning_at (_321, 0, "use location");

  <bb 267> :
  stderr.1552_322 = stderr;
  __builtin_fwrite ("dot graph target loc en1\n\n", 1, 26, stderr.1552_322);

  <bb 268> :
  _323 = gimple_bb (u_stmt);
  _324 = _323->index;
  stderr.1553_325 = stderr;
  fprintf (stderr.1553_325, "dot graph target line desc form basic block %d: ", _324);

  <bb 269> :
  debug (u_stmt);

  <bb 270> :
  _326 = gimple_location_safe (u_stmt);
  warning_at (_326, 0, "use location");

  <bb 271> :
  stderr.1554_327 = stderr;
  __builtin_fwrite ("dot graph target line desend\n\n", 1, 30, stderr.1554_327);

  <bb 272> :
  stderr.1555_328 = stderr;
  __builtin_fwrite ("dot graph target loc start ", 1, 27, stderr.1555_328);

  <bb 273> :
  _329 = table_temp->last_stmt;
  debug_gimple_stmt (_329);

  <bb 274> :
  _330 = table_temp->last_stmt;
  _331 = gimple_location_safe (_330);
  warning_at (_331, 0, "use location");

  <bb 275> :
  stderr.1556_332 = stderr;
  __builtin_fwrite ("dot graph target loc end\n\n", 1, 26, stderr.1556_332);

  <bb 276> :
  stderr.1557_333 = stderr;
  __builtin_fwrite ("dot graph target basicblock start ", 1, 34, stderr.1557_333);

  <bb 277> :
  _334 = gimple_bb (u_stmt);
  _335 = _334->index;
  function_tree.1558_336 = function_tree;
  D.254839 = get_name (function_tree.1558_336);

  <bb 278> :
  _337 = D.254839;
  stderr.1559_338 = stderr;
  fprintf (stderr.1559_338, "from %s basic block %d", _337, _335);

  <bb 279> :
  stderr.1560_339 = stderr;
  __builtin_fwrite ("dot graph target basicblock en1\n\n", 1, 33, stderr.1560_339);

  <bb 280> :
  relate_type::relate_type (&relate_type);
  function_tree.1561_340 = function_tree;
  relate_type.relate_funtree = function_tree.1561_340;
  D.254840 = gimple_block (u_stmt);

  <bb 281> :
  _341 = D.254840;
  retval.1562 = _341 != 0B;
  if (retval.1562 != 0)
    goto <bb 282>; [INV]
  else
    goto <bb 297>; [INV]

  <bb 282> :
  D.254841 = gimple_block (u_stmt);

  <bb 283> :
  _342 = D.254841;
  _343 = _342->block.supercontext;
  _344 = _343->base.code;
  if (_344 == 33)
    goto <bb 284>; [INV]
  else
    goto <bb 287>; [INV]

  <bb 284> :
  D.254842 = gimple_block (u_stmt);

  <bb 285> :
  _345 = D.254842;
  _346 = _345->block.supercontext;
  function_tree.1565_347 = function_tree;
  if (_346 != function_tree.1565_347)
    goto <bb 286>; [INV]
  else
    goto <bb 287>; [INV]

  <bb 286> :
  iftmp.1564 = 1;
  goto <bb 288>; [INV]

  <bb 287> :
  iftmp.1564 = 0;

  <bb 288> :
  retval.1563 = iftmp.1564;
  if (retval.1563 != 0)
    goto <bb 289>; [INV]
  else
    goto <bb 296>; [INV]

  <bb 289> :
  stderr.1566_348 = stderr;
  __builtin_fwrite ("dot graph target basicblock star1 ", 1, 34, stderr.1566_348);

  <bb 290> :
  _349 = gimple_bb (u_stmt);
  _350 = _349->index;
  D.254843 = gimple_block (u_stmt);

  <bb 291> :
  _351 = D.254843;
  _352 = _351->block.supercontext;
  D.254844 = get_name (_352);

  <bb 292> :
  _353 = D.254844;
  stderr.1567_354 = stderr;
  fprintf (stderr.1567_354, "from %s basic block %d", _353, _350);

  <bb 293> :
  stderr.1568_355 = stderr;
  __builtin_fwrite ("dot graph target basicblock end\n\n", 1, 33, stderr.1568_355);

  <bb 294> :
  D.254845 = gimple_block (u_stmt);

  <bb 295> :
  _356 = D.254845;
  _357 = _356->block.supercontext;
  relate_type.relate_funtree = _357;
  goto <bb 297>; [INV]

  <bb 296> :
  function_tree.1569_358 = function_tree;
  relate_type.relate_funtree = function_tree.1569_358;

  <bb 297> :
  _359 = table_temp->last_stmt;
  relate_type.laststmt = _359;
  relate_type.stmt = u_stmt;
  _360 = user_tmp->target;
  relate_type.relate_tree = _360;
  _361 = gimple_bb (u_stmt);
  _362 = _361->index;
  relate_type.now_basicblock = _362;
  std::vector<relate_type>::push_back (&maxbb_array.relate_type_array, &relate_type);

  <bb 298> :
  _363 = &table_temp->target;
  hash_map<tree_node*, function_relate_array>::put (function_maxbb_collect, _363, &maxbb_array);

  <bb 299> :
  _364 = gimple_code (u_stmt);
  retval.1570 = _364 == 8;
  if (retval.1570 != 0)
    goto <bb 300>; [INV]
  else
    goto <bb 329>; [INV]

  <bb 300> :
  debugmod.1571_365 = debugmod;
  if (debugmod.1571_365 != 0)
    goto <bb 301>; [INV]
  else
    goto <bb 305>; [INV]

  <bb 301> :
  stderr.1572_366 = stderr;
  __builtin_fwrite ("dot graph stmt start ", 1, 21, stderr.1572_366);

  <bb 302> :
  debug (finalstmt);

  <bb 303> :
  _367 = table_temp->last_stmt;
  debug (_367);

  <bb 304> :
  stderr.1573_368 = stderr;
  __builtin_fwrite ("dot graph stmt end\n\n", 1, 20, stderr.1573_368);

  <bb 305> :
  D.254846 = gimple_call_fn (u_stmt);

  <bb 306> :
  _369 = D.254846;
  D.254847 = get_name (_369);

  <bb 307> :
  name = D.254847;
  if (name != 0B)
    goto <bb 308>; [INV]
  else
    goto <bb 338>; [INV]

  <bb 308> :
  _370 = strcmp (name, "free");
  if (_370 == 0)
    goto <bb 311>; [INV]
  else
    goto <bb 309>; [INV]

  <bb 309> :
  _371 = strcmp (name, "xfree");
  if (_371 == 0)
    goto <bb 311>; [INV]
  else
    goto <bb 310>; [INV]

  <bb 310> :
  _372 = strcmp (name, "realloc");
  if (_372 == 0)
    goto <bb 311>; [INV]
  else
    goto <bb 324>; [INV]

  <bb 311> :
  stderr.1574_373 = stderr;
  __builtin_fwrite ("dot graph stmt start ", 1, 21, stderr.1574_373);

  <bb 312> :
  debug (u_stmt);

  <bb 313> :
  _374 = gimple_location_safe (u_stmt);
  warning_at (_374, 0, "use location");

  <bb 314> :
  stderr.1575_375 = stderr;
  __builtin_fwrite ("dot graph stmt end\n\n", 1, 20, stderr.1575_375);

  <bb 315> :
  freemod.1576_376 = freemod;
  if (freemod.1576_376 != 0)
    goto <bb 316>; [INV]
  else
    goto <bb 321>; [INV]

  <bb 316> :
  stderr.1577_377 = stderr;
  __builtin_fwrite ("dot graph target color desc", 1, 27, stderr.1577_377);

  <bb 317> :
  _378 = strcmp (name, "realloc");
  if (_378 == 0)
    goto <bb 318>; [INV]
  else
    goto <bb 319>; [INV]

  <bb 318> :
  stderr.1578_379 = stderr;
  __builtin_fwrite ("red", 1, 3, stderr.1578_379);
  goto <bb 320>; [INV]

  <bb 319> :
  stderr.1579_380 = stderr;
  __builtin_fwrite ("green", 1, 5, stderr.1579_380);

  <bb 320> :
  stderr.1580_381 = stderr;
  __builtin_fwrite ("dot graph target color desend\n\n", 1, 31, stderr.1580_381);

  <bb 321> :
  _382 = strcmp (name, "realloc");
  if (_382 == 0)
    goto <bb 322>; [INV]
  else
    goto <bb 323>; [INV]

  <bb 322> :
  stderr.1581_383 = stderr;
  __builtin_fwrite ("If realloc() fails, the initial memory block will not be freed() ", 1, 65, stderr.1581_383);

  <bb 323> :
  goto <bb 328>; [INV]

  <bb 324> :
  stderr.1582_384 = stderr;
  __builtin_fwrite ("dot graph stmt start ", 1, 21, stderr.1582_384);

  <bb 325> :
  debug (u_stmt);

  <bb 326> :
  _385 = gimple_location_safe (u_stmt);
  warning_at (_385, 0, "use location");

  <bb 327> :
  stderr.1583_386 = stderr;
  __builtin_fwrite ("dot graph stmt end\n\n", 1, 20, stderr.1583_386);

  <bb 328> :
  goto <bb 338>; [INV]

  <bb 329> :
  debugmod.1584_387 = debugmod;
  if (debugmod.1584_387 != 0)
    goto <bb 330>; [INV]
  else
    goto <bb 334>; [INV]

  <bb 330> :
  stderr.1585_388 = stderr;
  __builtin_fwrite ("dot graph stmt start ", 1, 21, stderr.1585_388);

  <bb 331> :
  debug (u_stmt);

  <bb 332> :
  _389 = table_temp->last_stmt;
  debug (_389);

  <bb 333> :
  stderr.1586_390 = stderr;
  __builtin_fwrite ("dot graph stmt end\n\n", 1, 20, stderr.1586_390);

  <bb 334> :
  stderr.1587_391 = stderr;
  __builtin_fwrite ("dot graph stmt start ", 1, 21, stderr.1587_391);

  <bb 335> :
  debug (u_stmt);

  <bb 336> :
  _392 = gimple_location_safe (u_stmt);
  warning_at (_392, 0, "use location");

  <bb 337> :
  stderr.1588_393 = stderr;
  __builtin_fwrite ("dot graph stmt end\n\n", 1, 20, stderr.1588_393);

  <bb 338> :
  relate_type = {CLOBBER};

  <bb 339> :
  _394 = user_tmp->target;
  if (_394 != 0B)
    goto <bb 340>; [INV]
  else
    goto <bb 480>; [INV]

  <bb 340> :
  _395 = user_tmp->target;
  use_stmt = _395->ssa_name.def_stmt;
  _396 = gimple_code (u_stmt);
  retval.1589 = _396 == 8;
  if (retval.1589 != 0)
    goto <bb 341>; [INV]
  else
    goto <bb 348>; [INV]

  <bb 341> :
  D.254849 = gimple_call_fndecl (u_stmt);

  <bb 342> :
  _397 = D.254849;
  retval.1590 = _397 != 0B;
  if (retval.1590 != 0)
    goto <bb 343>; [INV]
  else
    goto <bb 348>; [INV]

  <bb 343> :
  D.254850 = gimple_call_fndecl (u_stmt);

  <bb 344> :
  _398 = D.254850;
  D.254851 = get_name (_398);

  <bb 345> :
  name = D.254851;
  if (name != 0B)
    goto <bb 346>; [INV]
  else
    goto <bb 347>; [INV]

  <bb 346> :
  stderr.1591_399 = stderr;
  fprintf (stderr.1591_399, "this stmt call this function :%s\n", name);
  goto <bb 348>; [INV]

  <bb 347> :
  stderr.1592_400 = stderr;
  fprintf (stderr.1592_400, "this stmt call this function :null\n", name);

  <bb 348> :
  _401 = gimple_code (u_stmt);
  retval.1593 = _401 == 18;
  if (retval.1593 != 0)
    goto <bb 349>; [INV]
  else
    goto <bb 350>; [INV]

  <bb 349> :
  find_phistmt = 1;
  stderr.1594_402 = stderr;
  fprintf (stderr.1594_402, "this stmt have mutiple branch ---%s-----\n", name);

  <bb 350> :
  if (name != 0B)
    goto <bb 351>; [INV]
  else
    goto <bb 361>; [INV]

  <bb 351> :
  _403 = strcmp (name, "realloc");
  if (_403 == 0)
    goto <bb 358>; [INV]
  else
    goto <bb 352>; [INV]

  <bb 352> :
  _404 = strcmp (name, "malloc");
  if (_404 == 0)
    goto <bb 358>; [INV]
  else
    goto <bb 353>; [INV]

  <bb 353> :
  _405 = strcmp (name, "xmalloc");
  if (_405 == 0)
    goto <bb 358>; [INV]
  else
    goto <bb 354>; [INV]

  <bb 354> :
  _406 = strcmp (name, "calloc");
  if (_406 == 0)
    goto <bb 358>; [INV]
  else
    goto <bb 355>; [INV]

  <bb 355> :
  _407 = strcmp (name, "xcalloc");
  if (_407 == 0)
    goto <bb 358>; [INV]
  else
    goto <bb 356>; [INV]

  <bb 356> :
  _408 = strcmp (name, "strdup");
  if (_408 == 0)
    goto <bb 358>; [INV]
  else
    goto <bb 357>; [INV]

  <bb 357> :
  _409 = strcmp (name, "xstrdup");
  if (_409 == 0)
    goto <bb 358>; [INV]
  else
    goto <bb 359>; [INV]

  <bb 358> :
  IS_MALLOC_FUCNTION.1595_410 = IS_MALLOC_FUCNTION;
  find_mallocstmt = (int) IS_MALLOC_FUCNTION.1595_410;
  goto <bb 360>; [INV]

  <bb 359> :
  IS_OTHRER_FUCNTION.1596_411 = IS_OTHRER_FUCNTION;
  find_mallocstmt = (int) IS_OTHRER_FUCNTION.1596_411;

  <bb 360> :

  <bb 361> :
  calleetype.1597_412 = (unsigned int) calleetype;
  FUNCITON_HEAP.1598_413 = FUNCITON_HEAP;
  if (calleetype.1597_412 == FUNCITON_HEAP.1598_413)
    goto <bb 362>; [INV]
  else
    goto <bb 363>; [INV]

  <bb 362> :
  function_tree.1599_414 = function_tree;
  debug_tree (function_tree.1599_414);
  goto <bb 381>; [INV]

  <bb 363> :
  calleetype.1600_415 = (unsigned int) calleetype;
  FUNCITON_THREAD.1601_416 = FUNCITON_THREAD;
  if (calleetype.1600_415 == FUNCITON_THREAD.1601_416)
    goto <bb 364>; [INV]
  else
    goto <bb 381>; [INV]

  <bb 364> :
  threadmod.1602_417 = threadmod;
  _418 = (int) threadmod.1602_417;
  if (_418 == 1)
    goto <bb 365>; [INV]
  else
    goto <bb 381>; [INV]

  <bb 365> :
  _419 = gimple_code (finalstmt);
  retval.1603 = _419 == 6;
  if (retval.1603 != 0)
    goto <bb 366>; [INV]
  else
    goto <bb 381>; [INV]

  <bb 366> :
  D.254852 = gimple_assign_lhs (finalstmt);

  <bb 367> :
  _420 = D.254852;
  _421 = BIT_FIELD_REF <_420->base, 8, 24>;
  _422 = _421 & 4;
  _423 = _422 == 0;
  _424 = (int) _423;
  retval.1604 = _424 == 1;
  if (retval.1604 != 0)
    goto <bb 368>; [INV]
  else
    goto <bb 373>; [INV]

  <bb 368> :
  stderr.1605_425 = stderr;
  __builtin_fwrite (" \n LOCAL VARIBALE  \n", 1, 20, stderr.1605_425);

  <bb 369> :
  debug_gimple_stmt (finalstmt);

  <bb 370> :
  _426 = gimple_location_safe (finalstmt);
  warning_at (_426, 0, "use location");

  <bb 371> :
  stderr.1606_427 = stderr;
  __builtin_fwrite (" \n LOCAL VARIBALE  \n", 1, 20, stderr.1606_427);

  <bb 372> :
  // predicted unlikely by continue predictor.
  goto <bb 481>; [INV]

  <bb 373> :
  stderr.1607_428 = stderr;
  __builtin_fwrite ("\n ================== warring  ================== \n", 1, 50, stderr.1607_428);

  <bb 374> :
  stderr.1608_429 = stderr;
  __builtin_fwrite ("\x1b[40;35m warring thread fucntion detction is on \x1b[0m\n", 1, 53, stderr.1608_429);

  <bb 375> :
  stderr.1609_430 = stderr;
  __builtin_fwrite ("\x1b[40;35m Detect GLOBAL VARIBALE \x1b[0m\n", 1, 37, stderr.1609_430);

  <bb 376> :
  debug_gimple_stmt (finalstmt);

  <bb 377> :
  _431 = gimple_location_safe (finalstmt);
  warning_at (_431, 0, "use location");

  <bb 378> :
  stderr.1610_432 = stderr;
  __builtin_fwrite ("\x1b[40;35m thread job function \x1b[0m\n", 1, 34, stderr.1610_432);

  <bb 379> :
  stderr.1611_433 = stderr;
  __builtin_fwrite ("\x1b[40;35m this stmt possible have Race Condition \xe3\x80\x82 \x1b[0m\n", 1, 57, stderr.1611_433);

  <bb 380> :
  stderr.1612_434 = stderr;
  __builtin_fwrite ("\n ================== warring  ================== \n", 1, 50, stderr.1612_434);

  <bb 381> :
  _435 = gimple_code (u_stmt);
  if (_435 == 8)
    goto <bb 382>; [INV]
  else
    goto <bb 385>; [INV]

  <bb 382> :
  find_mallocstmt.1615_436 = (unsigned int) find_mallocstmt;
  IS_MALLOC_FUCNTION.1616_437 = IS_MALLOC_FUCNTION;
  if (find_mallocstmt.1615_436 == IS_MALLOC_FUCNTION.1616_437)
    goto <bb 384>; [INV]
  else
    goto <bb 383>; [INV]

  <bb 383> :
  find_mallocstmt.1617_438 = (unsigned int) find_mallocstmt;
  IS_OTHRER_FUCNTION.1618_439 = IS_OTHRER_FUCNTION;
  if (find_mallocstmt.1617_438 == IS_OTHRER_FUCNTION.1618_439)
    goto <bb 384>; [INV]
  else
    goto <bb 385>; [INV]

  <bb 384> :
  iftmp.1614 = 1;
  goto <bb 386>; [INV]

  <bb 385> :
  iftmp.1614 = 0;

  <bb 386> :
  retval.1613 = iftmp.1614;
  if (retval.1613 != 0)
    goto <bb 387>; [INV]
  else
    goto <bb 480>; [INV]

  <bb 387> :
  IS_MALLOC_FUCNTION.1619_440 = IS_MALLOC_FUCNTION;
  find_mallocstmt = (int) IS_MALLOC_FUCNTION.1619_440;
  _441 = user_tmp->target;
  def_stmt = _441->ssa_name.def_stmt;
  D.254853 = gimple_call_fn (u_stmt);

  <bb 388> :
  _442 = D.254853;
  D.254854 = get_name (_442);

  <bb 389> :
  name = D.254854;
  if (name != 0B)
    goto <bb 390>; [INV]
  else
    goto <bb 480>; [INV]

  <bb 390> :
  _443 = strcmp (name, "free");
  if (_443 == 0)
    goto <bb 393>; [INV]
  else
    goto <bb 391>; [INV]

  <bb 391> :
  _444 = strcmp (name, "xfree");
  if (_444 == 0)
    goto <bb 393>; [INV]
  else
    goto <bb 392>; [INV]

  <bb 392> :
  _445 = strcmp (name, "realloc");
  if (_445 == 0)
    goto <bb 393>; [INV]
  else
    goto <bb 403>; [INV]

  <bb 393> :
  free_type.stmt = u_stmt;
  std::vector<free_type>::push_back (&free_array, &free_type);

  <bb 394> :
  stderr.1620_446 = stderr;
  __builtin_fwrite ("\n ================== find free stmt ================== \n", 1, 56, stderr.1620_446);

  <bb 395> :
  debug (u_stmt);

  <bb 396> :
  _447 = gimple_location_safe (u_stmt);
  warning_at (_447, 0, "use location");

  <bb 397> :
  _448 = strcmp (name, "realloc");
  if (_448 == 0)
    goto <bb 398>; [INV]
  else
    goto <bb 400>; [INV]

  <bb 398> :
  find_freestmt.1621_449 = find_freestmt;
  _450 = find_freestmt.1621_449 + 1;
  find_freestmt = _450;
  find_freestmt.1622_451 = find_freestmt;
  stderr.1623_452 = stderr;
  fprintf (stderr.1623_452, "\x1b[40;32m    FIND REALLOC STMT count:%d name:%s \x1b[0m\n", find_freestmt.1622_451, name);

  <bb 399> :
  find_freestmt.1624_453 = find_freestmt;
  stderr.1625_454 = stderr;
  fprintf (stderr.1625_454, "\x1b[40;32m    this stmt possiable free memory \x1b[0m\n", find_freestmt.1624_453, name);
  goto <bb 401>; [INV]

  <bb 400> :
  find_freestmt.1626_455 = find_freestmt;
  _456 = find_freestmt.1626_455 + 1;
  find_freestmt = _456;
  find_freestmt.1627_457 = find_freestmt;
  stderr.1628_458 = stderr;
  fprintf (stderr.1628_458, "\x1b[40;32m    HAS FREE STMT count:%d name:%s \x1b[0m\n", find_freestmt.1627_457, name);

  <bb 401> :
  stderr.1629_459 = stderr;
  __builtin_fwrite ("\n ================== find free stmt ================== \n", 1, 56, stderr.1629_459);

  <bb 402> :
  goto <bb 479>; [INV]

  <bb 403> :
  _460 = strcmp (name, "pthread_create");
  if (_460 == 0)
    goto <bb 404>; [INV]
  else
    goto <bb 460>; [INV]

  <bb 404> :
  table_temp->last_stmt = u_stmt;
  FUNCITON_THREAD.1630_461 = FUNCITON_THREAD;
  FUNCITON_THREAD.1631_462 = (int) FUNCITON_THREAD.1630_461;
  table_temp->swap_type = FUNCITON_THREAD.1631_462;
  _463 = table_temp->swap_type;
  _464 = (unsigned int) _463;
  FUNCITON_THREAD.1632_465 = FUNCITON_THREAD;
  if (_464 == FUNCITON_THREAD.1632_465)
    goto <bb 405>; [INV]
  else
    goto <bb 479>; [INV]

  <bb 405> :
  stderr.1633_466 = stderr;
  __builtin_fwrite ("\n ================== find pthread stmt ================== \n", 1, 59, stderr.1633_466);

  <bb 406> :
  debug (u_stmt);

  <bb 407> :
  _467 = gimple_location_safe (u_stmt);
  warning_at (_467, 0, "use location");

  <bb 408> :
  stderr.1634_468 = stderr;
  __builtin_fwrite ("\x1b[40;32m    FIND PTHREAD_CREATED STMT  \x1b[0m\n", 1, 44, stderr.1634_468);

  <bb 409> :
  stderr.1635_469 = stderr;
  __builtin_fwrite ("\n ================== pre_pthread_detched ================== \n", 1, 61, stderr.1635_469);

  <bb 410> :
  _470 = table_temp->last_stmt;
  D.254855 = gimple_call_num_args (_470);

  <bb 411> :
  _471 = D.254855;
  retval.1636 = _471 != 0;
  if (retval.1636 != 0)
    goto <bb 412>; [INV]
  else
    goto <bb 417>; [INV]

  <bb 412> :
  _472 = table_temp->last_stmt;
  retval.1637 = is_gimple_assign (_472);
  if (retval.1637 != 0)
    goto <bb 413>; [INV]
  else
    goto <bb 415>; [INV]

  <bb 413> :
  _473 = table_temp->last_stmt;
  D.254856 = gimple_assign_lhs (_473);

  <bb 414> :
  _474 = D.254856;
  trace_function_path (_474, -1, 0B, &find_pthread_detched);
  goto <bb 417>; [INV]

  <bb 415> :
  _475 = table_temp->last_stmt;
  D.254857 = gimple_call_arg (_475, 2);

  <bb 416> :
  _476 = D.254857;
  _477 = _476->exp.operands[0];
  trace_function_path (_477, -1, 0B, &find_pthread_detched);

  <bb 417> :
  stderr.1638_478 = stderr;
  __builtin_fwrite ("\n ================== pre_pthread_detched end ================== \n", 1, 65, stderr.1638_478);

  <bb 418> :
  _479 = table_temp->last_stmt;
  D.254858 = gimple_call_arg (_479, 3);

  <bb 419> :
  findtree = D.254858;
  retval.1639 = is_gimple_call (u_stmt);
  if (retval.1639 != 0)
    goto <bb 420>; [INV]
  else
    goto <bb 427>; [INV]

  <bb 420> :
  D.254859 = gimple_call_num_args (u_stmt);

  <bb 421> :
  _480 = D.254859;
  retval.1640 = _480 != 0;
  if (retval.1640 != 0)
    goto <bb 422>; [INV]
  else
    goto <bb 427>; [INV]

  <bb 422> :
  D.254860 = gimple_call_arg (u_stmt, 3);

  <bb 423> :
  findtree = D.254860;
  _481 = findtree->base.code;
  if (_481 == 131)
    goto <bb 424>; [INV]
  else
    goto <bb 425>; [INV]

  <bb 424> :
  _482 = findtree->exp.operands[0];
  function_tree.1641_483 = function_tree;
  trace_function_path (function_tree.1641_483, -1, _482, &find_freestmt);
  goto <bb 427>; [INV]

  <bb 425> :
  _484 = findtree->base.code;
  if (_484 == 153)
    goto <bb 426>; [INV]
  else
    goto <bb 427>; [INV]

  <bb 426> :
  function_tree.1642_485 = function_tree;
  trace_function_path (function_tree.1642_485, -1, findtree, &find_freestmt);

  <bb 427> :
  if (findtree != 0B)
    goto <bb 428>; [INV]
  else
    goto <bb 436>; [INV]

  <bb 428> :
  _486 = table_temp->last_stmt;
  D.254861 = gimple_call_num_args (_486);

  <bb 429> :
  _487 = D.254861;
  if (_487 != 0)
    goto <bb 430>; [INV]
  else
    goto <bb 432>; [INV]

  <bb 430> :
  _488 = table_temp->last_stmt;
  _489 = is_gimple_call (_488);
  if (_489 != 0)
    goto <bb 431>; [INV]
  else
    goto <bb 432>; [INV]

  <bb 431> :
  iftmp.1644 = 1;
  goto <bb 433>; [INV]

  <bb 432> :
  iftmp.1644 = 0;

  <bb 433> :
  retval.1643 = iftmp.1644;
  if (retval.1643 != 0)
    goto <bb 434>; [INV]
  else
    goto <bb 436>; [INV]

  <bb 434> :
  _490 = table_temp->last_stmt;
  D.254862 = gimple_call_arg (_490, 2);

  <bb 435> :
  _491 = D.254862;
  _492 = _491->exp.operands[0];
  trace_function_path (_492, 0, findtree, &find_freestmt);

  <bb 436> :
  _493 = table_temp->swap_stmt;
  if (_493 != 0B)
    goto <bb 437>; [INV]
  else
    goto <bb 440>; [INV]

  <bb 437> :
  _494 = table_temp->swap_stmt;
  D.254863 = gimple_call_num_args (_494);

  <bb 438> :
  _495 = D.254863;
  if (_495 != 0)
    goto <bb 439>; [INV]
  else
    goto <bb 440>; [INV]

  <bb 439> :
  iftmp.1646 = 1;
  goto <bb 441>; [INV]

  <bb 440> :
  iftmp.1646 = 0;

  <bb 441> :
  retval.1645 = iftmp.1646;
  if (retval.1645 != 0)
    goto <bb 442>; [INV]
  else
    goto <bb 450>; [INV]

  <bb 442> :
  stderr.1647_496 = stderr;
  __builtin_fwrite ("\n ================== pre_pthread_detched ================== \n", 1, 61, stderr.1647_496);

  <bb 443> :
  _497 = table_temp->swap_stmt;
  D.254864 = gimple_call_arg (_497, 2);

  <bb 444> :
  _498 = D.254864;
  _499 = _498->exp.operands[0];
  trace_function_path (_499, -1, 0B, &find_pthread_detched);

  <bb 445> :
  stderr.1648_500 = stderr;
  __builtin_fwrite ("\n ================== pre_pthread_detched end ================== \n", 1, 65, stderr.1648_500);

  <bb 446> :
  _501 = table_temp->swap_stmt;
  D.254865 = gimple_call_arg (_501, 3);

  <bb 447> :
  findtree = D.254865;
  if (findtree != 0B)
    goto <bb 448>; [INV]
  else
    goto <bb 450>; [INV]

  <bb 448> :
  _502 = table_temp->swap_stmt;
  D.254866 = gimple_call_arg (_502, 2);

  <bb 449> :
  _503 = D.254866;
  _504 = _503->exp.operands[0];
  trace_function_path (_504, 0, findtree, &find_freestmt);

  <bb 450> :
  find_pthread_detched.1649_505 = find_pthread_detched;
  if (find_pthread_detched.1649_505 == 0)
    goto <bb 451>; [INV]
  else
    goto <bb 457>; [INV]

  <bb 451> :
  _506 = table_temp->pthread_type;
  if (_506 == 0)
    goto <bb 452>; [INV]
  else
    goto <bb 453>; [INV]

  <bb 452> :
  iftmp.1650 = "CREATE_JOINABLE";
  goto <bb 454>; [INV]

  <bb 453> :
  iftmp.1650 = "CREATE_DETACHED";

  <bb 454> :
  stderr.1651_507 = stderr;
  fprintf (stderr.1651_507, "\x1b[40;32m    FIND PTHREAD_CREATED TYPE is %s  \x1b[0m\n", iftmp.1650);

  <bb 455> :
  is_pthread_detched = 0;
  _508 = table_temp->pthread_type;
  if (_508 == 1)
    goto <bb 456>; [INV]
  else
    goto <bb 459>; [INV]

  <bb 456> :
  is_pthread_detched = 1;
  goto <bb 459>; [INV]

  <bb 457> :
  stderr.1652_509 = stderr;
  __builtin_fwrite ("\x1b[40;32m    FIND PTHREAD_CREATED TYPE is CREATE_DETACHED  \x1b[0m\n", 1, 63, stderr.1652_509);

  <bb 458> :
  is_pthread_detched = 1;

  <bb 459> :
  stderr.1653_510 = stderr;
  __builtin_fwrite ("\n ================== find pthread stmt ================== \n", 1, 59, stderr.1653_510);
  goto <bb 479>; [INV]

  <bb 460> :
  _511 = strcmp (name, "pthread_join");
  if (_511 == 0)
    goto <bb 461>; [INV]
  else
    goto <bb 464>; [INV]

  <bb 461> :
  _512 = table_temp->swap_type;
  _513 = (unsigned int) _512;
  FUNCITON_THREAD.1654_514 = FUNCITON_THREAD;
  if (_513 == FUNCITON_THREAD.1654_514)
    goto <bb 462>; [INV]
  else
    goto <bb 479>; [INV]

  <bb 462> :
  stderr.1655_515 = stderr;
  __builtin_fwrite ("\x1b[40;32m    FIND PTHREAD_JOIN \x1b[0m\n", 1, 35, stderr.1655_515);

  <bb 463> :
  find_pthread_join = find_pthread_join + 1;
  goto <bb 479>; [INV]

  <bb 464> :
  freecount = find_freestmt;
  if (name != 0B)
    goto <bb 465>; [INV]
  else
    goto <bb 479>; [INV]

  <bb 465> :
  _516 = strcmp (name, "realloc");
  if (_516 == 0)
    goto <bb 479>; [INV]
  else
    goto <bb 466>; [INV]

  <bb 466> :
  _517 = strcmp (name, "malloc");
  if (_517 == 0)
    goto <bb 479>; [INV]
  else
    goto <bb 467>; [INV]

  <bb 467> :
  _518 = strcmp (name, "xmalloc");
  if (_518 == 0)
    goto <bb 479>; [INV]
  else
    goto <bb 468>; [INV]

  <bb 468> :
  _519 = strcmp (name, "calloc");
  if (_519 == 0)
    goto <bb 479>; [INV]
  else
    goto <bb 469>; [INV]

  <bb 469> :
  _520 = strcmp (name, "xcalloc");
  if (_520 == 0)
    goto <bb 479>; [INV]
  else
    goto <bb 470>; [INV]

  <bb 470> :
  _521 = strcmp (name, "strdup");
  if (_521 == 0)
    goto <bb 479>; [INV]
  else
    goto <bb 471>; [INV]

  <bb 471> :
  _522 = strcmp (name, "xstrdup");
  if (_522 == 0)
    goto <bb 479>; [INV]
  else
    goto <bb 472>; [INV]

  <bb 472> :
  IS_MALLOC_FUCNTION.1656_523 = IS_MALLOC_FUCNTION;
  find_mallocstmt = (int) IS_MALLOC_FUCNTION.1656_523;
  stderr.1657_524 = stderr;
  fprintf (stderr.1657_524, "trace fucntion name:%s \n", name);

  <bb 473> :
  _525 = table_temp->target;
  D.254867 = gimple_call_fndecl (u_stmt);

  <bb 474> :
  _526 = D.254867;
  trace_function_path (_526, 0, _525, &find_freestmt);

  <bb 475> :
  stderr.1658_527 = stderr;
  __builtin_fwrite ("\n ================== trace ================== \n", 1, 47, stderr.1658_527);

  <bb 476> :
  find_freestmt.1659_528 = find_freestmt;
  stderr.1660_529 = stderr;
  fprintf (stderr.1660_529, "trace fucntion free:%d \n", find_freestmt.1659_528);

  <bb 477> :
  find_freestmt.1661_530 = find_freestmt;
  if (freecount < find_freestmt.1661_530)
    goto <bb 478>; [INV]
  else
    goto <bb 479>; [INV]

  <bb 478> :
  free_type.stmt = u_stmt;
  std::vector<free_type>::push_back (&free_array, &free_type);

  <bb 479> :

  <bb 480> :
  free_type = {CLOBBER};
  goto <bb 482>; [INV]

  <bb 481> :
  free_type = {CLOBBER};

  <bb 482> :
  user_tmp = user_tmp->next;
  if (user_tmp != 0B)
    goto <bb 483>; [INV]
  else
    goto <bb 484>; [INV]

  <bb 483> :
  iftmp.1662 = user_tmp->stmt;
  goto <bb 485>; [INV]

  <bb 484> :
  iftmp.1662 = 0B;

  <bb 485> :
  u_stmt = iftmp.1662;

  <bb 486> :
  if (user_tmp != 0B)
    goto <bb 110>; [INV]
  else
    goto <bb 487>; [INV]

  <bb 487> :
  samefucntioncheck.1663_531 = samefucntioncheck;
  if (samefucntioncheck.1663_531 != 0)
    goto <bb 488>; [INV]
  else
    goto <bb 523>; [INV]

  <bb 488> :
  debugmod.1664_532 = debugmod;
  if (debugmod.1664_532 != 0)
    goto <bb 489>; [INV]
  else
    goto <bb 523>; [INV]

  <bb 489> :
  lastbasicblock = -1;
  _533 = &table_temp->target;
  D.254871 = hash_map<tree_node*, function_relate_array>::get (function_maxbb_collect, _533);

  <bb 490> :
  _534 = D.254871;
  function_relate_array::operator= (&maxbb_array, _534);

  <bb 491> :
  std::vector<relate_type>::operator= (&maxbb_type_array, &maxbb_array.relate_type_array);

  <bb 492> :
  D.254872 = operator new (48);

  <bb 493> :
  D.201429 = D.254872;
  hash_map<tree_node*, int>::hash_map (D.201429, 13, 0, 1, 0);

  <bb 494> :
  function_maxbasicblock_collect = D.201429;
  i = 0;
  goto <bb 504>; [INV]

  <bb 495> :
  _535 = (long unsigned int) i;
  _536 = std::vector<relate_type>::operator[] (&maxbb_type_array, _535);
  _537 = &_536->now_basicblock;
  _538 = (long unsigned int) i;
  _539 = std::vector<relate_type>::operator[] (&maxbb_type_array, _538);
  _540 = &_539->relate_funtree;
  hash_map<tree_node*, int>::put (function_maxbasicblock_collect, _540, _537);

  <bb 496> :
  j = 0;
  goto <bb 502>; [INV]

  <bb 497> :
  _541 = (long unsigned int) i;
  _542 = std::vector<relate_type>::operator[] (&maxbb_type_array, _541);
  _543 = _542->relate_funtree;
  _544 = (long unsigned int) j;
  _545 = std::vector<relate_type>::operator[] (&maxbb_type_array, _544);
  _546 = _545->relate_funtree;
  retval.1665 = _543 == _546;
  if (retval.1665 != 0)
    goto <bb 498>; [INV]
  else
    goto <bb 501>; [INV]

  <bb 498> :
  _547 = (long unsigned int) i;
  _548 = std::vector<relate_type>::operator[] (&maxbb_type_array, _547);
  _549 = &_548->relate_funtree;
  D.254874 = hash_map<tree_node*, int>::get (function_maxbasicblock_collect, _549);

  <bb 499> :
  _550 = D.254874;
  max_bb = *_550;
  _551 = (long unsigned int) j;
  _552 = std::vector<relate_type>::operator[] (&maxbb_type_array, _551);
  _553 = _552->now_basicblock;
  retval.1666 = max_bb <= _553;
  if (retval.1666 != 0)
    goto <bb 500>; [INV]
  else
    goto <bb 501>; [INV]

  <bb 500> :
  _554 = (long unsigned int) j;
  _555 = std::vector<relate_type>::operator[] (&maxbb_type_array, _554);
  _556 = &_555->now_basicblock;
  _557 = (long unsigned int) j;
  _558 = std::vector<relate_type>::operator[] (&maxbb_type_array, _557);
  _559 = &_558->relate_funtree;
  hash_map<tree_node*, int>::put (function_maxbasicblock_collect, _559, _556);

  <bb 501> :
  j = j + 1;

  <bb 502> :
  _560 = (long unsigned int) j;
  _561 = std::vector<relate_type>::size (&maxbb_type_array);
  retval.1667 = _560 < _561;
  if (retval.1667 != 0)
    goto <bb 497>; [INV]
  else
    goto <bb 503>; [INV]

  <bb 503> :
  i = i + 1;

  <bb 504> :
  _562 = (long unsigned int) i;
  _563 = std::vector<relate_type>::size (&maxbb_type_array);
  retval.1668 = _562 < _563;
  if (retval.1668 != 0)
    goto <bb 495>; [INV]
  else
    goto <bb 505>; [INV]

  <bb 505> :
  it_i._M_current = 0B;
  it_i = std::vector<relate_type>::begin (&maxbb_type_array);
  goto <bb 518>; [INV]

  <bb 506> :
  _564 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _565 = &_564->relate_funtree;
  D.254875 = hash_map<tree_node*, int>::get (function_maxbasicblock_collect, _565);

  <bb 507> :
  _566 = D.254875;
  max_bb = *_566;
  _567 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _568 = _567->now_basicblock;
  retval.1669 = max_bb == _568;
  if (retval.1669 != 0)
    goto <bb 508>; [INV]
  else
    goto <bb 517>; [INV]

  <bb 508> :
  _569 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _570 = _569->relate_tree;
  def_stmt = _570->ssa_name.def_stmt;
  stderr.1670_571 = stderr;
  __builtin_fwrite ("dot graph target basicblock start ", 1, 34, stderr.1670_571);

  <bb 509> :
  _572 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _573 = _572->stmt;
  _574 = gimple_bb (_573);
  _575 = _574->index;
  _576 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _577 = _576->relate_funtree;
  D.254876 = get_name (_577);

  <bb 510> :
  _578 = D.254876;
  stderr.1671_579 = stderr;
  fprintf (stderr.1671_579, "from %s basic block %d", _578, _575);

  <bb 511> :
  stderr.1672_580 = stderr;
  __builtin_fwrite ("dot graph target basicblock en1\n\n", 1, 33, stderr.1672_580);

  <bb 512> :
  _581 = rand ();
  x = (long unsigned int) _581;
  stderr.1673_582 = stderr;
  __builtin_fwrite ("dot graph arrow", 1, 15, stderr.1673_582);

  <bb 513> :
  stderr.1674_583 = stderr;
  fprintf (stderr.1674_583, "subgraph cluster_%lu dot graph subgraph  ", x);

  <bb 514> :
  _584 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _585 = _584->stmt;
  debug (_585);

  <bb 515> :
  debug (def_stmt);

  <bb 516> :
  stderr.1675_586 = stderr;
  __builtin_fwrite ("dot graph subgrapend\n\n", 1, 22, stderr.1675_586);

  <bb 517> :
  __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator++ (&it_i);

  <bb 518> :
  D.201563 = std::vector<relate_type>::end (&maxbb_type_array);
  retval.1676 = __gnu_cxx::operator!=<relate_type*, std::vector<relate_type> > (&it_i, &D.201563);
  D.201563 = {CLOBBER};
  if (retval.1676 != 0)
    goto <bb 506>; [INV]
  else
    goto <bb 519>; [INV]

  <bb 519> :
  function_maxbb_collect.1677 = function_maxbb_collect;
  if (function_maxbb_collect.1677 != 0B)
    goto <bb 520>; [INV]
  else
    goto <bb 521>; [INV]

  <bb 520> :
  hash_map<tree_node*, function_relate_array>::~hash_map (function_maxbb_collect.1677);
  operator delete (function_maxbb_collect.1677, 48);

  <bb 521> :
  it_i = {CLOBBER};
  goto <bb 523>; [INV]

  <bb 522> :
  PTABLE_IS_NULL.1678_587 = PTABLE_IS_NULL;
  find_mallocstmt = (int) PTABLE_IS_NULL.1678_587;

  <bb 523> :
  relatemod.1679_588 = relatemod;
  if (relatemod.1679_588 != 0)
    goto <bb 524>; [INV]
  else
    goto <bb 543>; [INV]

  <bb 524> :
  debugmod.1680_589 = debugmod;
  if (debugmod.1680_589 != 0)
    goto <bb 525>; [INV]
  else
    goto <bb 543>; [INV]

  <bb 525> :
  std::vector<relate_type>::vector (&relate_type_array);
  function_relate_array::function_relate_array (&fun_array);
  function_relate_collect.1682_590 = function_relate_collect;
  _591 = &table_temp->target;
  D.254878 = hash_map<tree_node*, function_relate_array>::get (function_relate_collect.1682_590, _591);

  <bb 526> :
  _592 = D.254878;
  retval.1681 = _592 != 0B;
  if (retval.1681 != 0)
    goto <bb 527>; [INV]
  else
    goto <bb 542>; [INV]

  <bb 527> :
  function_relate_collect.1683_593 = function_relate_collect;
  _594 = &table_temp->target;
  D.254879 = hash_map<tree_node*, function_relate_array>::get (function_relate_collect.1683_593, _594);

  <bb 528> :
  _595 = D.254879;
  function_relate_array::operator= (&fun_array, _595);

  <bb 529> :
  std::vector<relate_type>::operator= (&relate_type_array, &fun_array.relate_type_array);

  <bb 530> :
  k = 0;
  goto <bb 541>; [INV]

  <bb 531> :
  _596 = rand ();
  x = (long unsigned int) _596;
  stderr.1684_597 = stderr;
  __builtin_fwrite ("dot graph start relate for1", 1, 27, stderr.1684_597);

  <bb 532> :
  _598 = (long unsigned int) k;
  _599 = std::vector<relate_type>::operator[] (&relate_type_array, _598);
  _600 = _599->now_fucntion;
  stderr.1685_601 = stderr;
  fprintf (stderr.1685_601, "ID : %lu\n", _600);

  <bb 533> :
  _602 = (long unsigned int) k;
  _603 = std::vector<relate_type>::operator[] (&relate_type_array, _602);
  _604 = _603->stmt;
  _605 = gimple_bb (_604);
  _606 = _605->index;
  _607 = (long unsigned int) k;
  _608 = std::vector<relate_type>::operator[] (&relate_type_array, _607);
  _609 = _608->relate_funtree;
  D.254880 = get_name (_609);

  <bb 534> :
  _610 = D.254880;
  stderr.1686_611 = stderr;
  fprintf (stderr.1686_611, "from %s basic block %d", _610, _606);

  <bb 535> :
  stderr.1687_612 = stderr;
  __builtin_fwrite ("dot graph end relate end\n\n", 1, 26, stderr.1687_612);

  <bb 536> :
  _613 = (long unsigned int) k;
  _614 = std::vector<relate_type>::operator[] (&relate_type_array, _613);
  _615 = _614->now_fucntion;
  _616 = (long unsigned int) k;
  _617 = std::vector<relate_type>::operator[] (&relate_type_array, _616);
  _618 = _617->now_stmt;
  stderr.1688_619 = stderr;
  fprintf (stderr.1688_619, "subgraph cluster_%lu dot graph subgraph  start ID : %lu stmt(relate) \xef\xbc\x8c Tree ID : %lu : ", x, _618, _615);

  <bb 537> :
  _620 = (long unsigned int) k;
  _621 = std::vector<relate_type>::operator[] (&relate_type_array, _620);
  _622 = _621->stmt;
  debug (_622);

  <bb 538> :
  _623 = (long unsigned int) k;
  _624 = std::vector<relate_type>::operator[] (&relate_type_array, _623);
  _625 = _624->stmt;
  _626 = gimple_location_safe (_625);
  warning_at (_626, 0, "use location");

  <bb 539> :
  stderr.1689_627 = stderr;
  __builtin_fwrite ("dot graph subgrapend\n\n", 1, 22, stderr.1689_627);

  <bb 540> :
  k = k + 1;

  <bb 541> :
  _628 = (long unsigned int) k;
  _629 = std::vector<relate_type>::size (&relate_type_array);
  retval.1690 = _628 < _629;
  if (retval.1690 != 0)
    goto <bb 531>; [INV]
  else
    goto <bb 542>; [INV]

  <bb 542> :
  function_relate_array::~function_relate_array (&fun_array);
  std::vector<relate_type>::~vector (&relate_type_array);
  relate_type_array = {CLOBBER};
  fun_array = {CLOBBER};

  <bb 543> :
  Looserulesfree.1691_630 = Looserulesfree;
  if (Looserulesfree.1691_630 != 0)
    goto <bb 544>; [INV]
  else
    goto <bb 576>; [INV]

  <bb 544> :
  stderr.1692_631 = stderr;
  __builtin_fwrite ("\n ================== Start Looserules free Check ================== \n", 1, 69, stderr.1692_631);

  <bb 545> :
  stderr.1693_632 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.1693_632);

  <bb 546> :
  stderr.1694_633 = stderr;
  __builtin_fwrite ("\x1b[40;35m   this module possiable false positives \x1b[0m\n", 1, 54, stderr.1694_633);

  <bb 547> :
  stderr.1695_634 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.1695_634);

  <bb 548> :
  _635 = table_temp->target;
  _636 = _635->base.code;
  if (_636 == 153)
    goto <bb 550>; [INV]
  else
    goto <bb 549>; [INV]

  <bb 549> :
  _637 = table_temp->target;
  _638 = _637->base.code;
  if (_638 == 165)
    goto <bb 550>; [INV]
  else
    goto <bb 576>; [INV]

  <bb 550> :
  _639 = table_temp->target;
  if (_639 != 0B)
    goto <bb 551>; [INV]
  else
    goto <bb 576>; [INV]

  <bb 551> :
  _640 = table_temp->target;
  debug_tree (_640);

  <bb 552> :
  stderr.1696_641 = stderr;
  __builtin_fwrite ("\n ================================================================= \n", 1, 69, stderr.1696_641);

  <bb 553> :
  function_free_collect.1698_642 = function_free_collect;
  D.254884 = hash_map<tree_node*, function_free_array>::get (function_free_collect.1698_642, &function_tree);

  <bb 554> :
  _643 = D.254884;
  retval.1697 = _643 != 0B;
  if (retval.1697 != 0)
    goto <bb 555>; [INV]
  else
    goto <bb 576>; [INV]

  <bb 555> :
  function_free_collect.1699_644 = function_free_collect;
  D.254885 = hash_map<tree_node*, function_free_array>::get (function_free_collect.1699_644, &function_tree);

  <bb 556> :
  _645 = D.254885;
  function_free_array::function_free_array (&callerFunArray, _645);

  <bb 557> :
  std::vector<free_type>::vector (&callerRetTypearray, &callerFunArray.free_type_array);

  <bb 558> :
  k = 0;
  goto <bb 574>; [INV]

  <bb 559> :
  _646 = table_temp->target;
  _647 = (long unsigned int) k;
  _648 = std::vector<free_type>::operator[] (&callerRetTypearray, _647);
  _649 = _648->free_tree;
  D.254886 = ptr_derefs_may_alias_p (_649, _646);

  <bb 560> :
  retval.1700 = D.254886;
  if (retval.1700 != 0)
    goto <bb 561>; [INV]
  else
    goto <bb 573>; [INV]

  <bb 561> :
  _650 = (long unsigned int) k;
  _651 = std::vector<free_type>::operator[] (&callerRetTypearray, _650);
  _652 = _651->stmt;
  retval.1701 = is_gimple_call (_652);
  if (retval.1701 != 0)
    goto <bb 562>; [INV]
  else
    goto <bb 565>; [INV]

  <bb 562> :
  _653 = (long unsigned int) k;
  _654 = std::vector<free_type>::operator[] (&callerRetTypearray, _653);
  _655 = _654->stmt;
  D.254887 = gimple_call_fn (_655);

  <bb 563> :
  _656 = D.254887;
  D.254888 = get_name (_656);

  <bb 564> :
  name = D.254888;

  <bb 565> :
  _657 = strcmp (name, "realloc");
  if (_657 == 0)
    goto <bb 566>; [INV]
  else
    goto <bb 568>; [INV]

  <bb 566> :
  stderr.1702_658 = stderr;
  __builtin_fwrite ("\x1b[40;35m <Looserules> find realloc stmt free same pointer \x1b[0m\n", 1, 63, stderr.1702_658);

  <bb 567> :
  stderr.1703_659 = stderr;
  __builtin_fwrite ("*/If realloc() fails, the initial memory block will not be freed() */", 1, 69, stderr.1703_659);
  goto <bb 569>; [INV]

  <bb 568> :
  stderr.1704_660 = stderr;
  __builtin_fwrite ("\x1b[40;35m <Looserules> find free stmt free same pointer \x1b[0m\n", 1, 60, stderr.1704_660);

  <bb 569> :
  _661 = (long unsigned int) k;
  _662 = std::vector<free_type>::operator[] (&callerRetTypearray, _661);
  _663 = _662->stmt;
  debug_gimple_stmt (_663);

  <bb 570> :
  _664 = (long unsigned int) k;
  _665 = std::vector<free_type>::operator[] (&callerRetTypearray, _664);
  _666 = _665->stmt;
  _667 = gimple_location_safe (_666);
  warning_at (_667, 0, "use location");

  <bb 571> :
  free_type::free_type (&free_type);
  _668 = (long unsigned int) k;
  _669 = std::vector<free_type>::operator[] (&callerRetTypearray, _668);
  _670 = _669->stmt;
  free_type.stmt = _670;
  free_type.Looserulesfree = 1;
  std::vector<free_type>::push_back (&free_array, &free_type);

  <bb 572> :
  find_Looserulesfreestmt = find_Looserulesfreestmt + 1;
  free_type = {CLOBBER};

  <bb 573> :
  k = k + 1;

  <bb 574> :
  _671 = (long unsigned int) k;
  _672 = std::vector<free_type>::size (&callerRetTypearray);
  retval.1705 = _671 < _672;
  if (retval.1705 != 0)
    goto <bb 559>; [INV]
  else
    goto <bb 575>; [INV]

  <bb 575> :
  std::vector<free_type>::~vector (&callerRetTypearray);
  function_free_array::~function_free_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 576> :
  useafterfree.1706_673 = useafterfree;
  if (useafterfree.1706_673 != 0)
    goto <bb 577>; [INV]
  else
    goto <bb 633>; [INV]

  <bb 577> :
  treeGimpleArray.1707_674 = treeGimpleArray;
  _675 = &table_temp->target;
  D.254893 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.1707_674, _675);

  <bb 578> :
  user_tmp = D.254893;
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  stderr.1708_676 = stderr;
  __builtin_fwrite ("\n ================== Start Use after free Check ================== \n", 1, 68, stderr.1708_676);

  <bb 579> :
  _677 = user_tmp->size;
  if (_677 > 0)
    goto <bb 580>; [INV]
  else
    goto <bb 631>; [INV]

  <bb 580> :
  if (user_tmp != 0B)
    goto <bb 581>; [INV]
  else
    goto <bb 582>; [INV]

  <bb 581> :
  iftmp.1709 = user_tmp->stmt;
  goto <bb 583>; [INV]

  <bb 582> :
  iftmp.1709 = 0B;

  <bb 583> :
  u_stmt = iftmp.1709;
  goto <bb 630>; [INV]

  <bb 584> :
  i = 0;
  goto <bb 625>; [INV]

  <bb 585> :
  _678 = (long unsigned int) i;
  D.254894 = std::vector<free_type>::at (&free_array, _678);

  <bb 586> :
  _679 = D.254894;
  _680 = _679->stmt;
  D.254895 = gimple_call_fndecl (_680);

  <bb 587> :
  _681 = D.254895;
  retval.1710 = _681 != 0B;
  if (retval.1710 != 0)
    goto <bb 588>; [INV]
  else
    goto <bb 624>; [INV]

  <bb 588> :
  _682 = (long unsigned int) i;
  D.254896 = std::vector<free_type>::at (&free_array, _682);

  <bb 589> :
  _683 = D.254896;
  _684 = _683->stmt;
  retval.1711 = u_stmt != _684;
  if (retval.1711 != 0)
    goto <bb 590>; [INV]
  else
    goto <bb 624>; [INV]

  <bb 590> :
  retval.1712 = is_gimple_call (u_stmt);
  if (retval.1712 != 0)
    goto <bb 591>; [INV]
  else
    goto <bb 596>; [INV]

  <bb 591> :
  _685 = (long unsigned int) i;
  D.254897 = std::vector<free_type>::at (&free_array, _685);

  <bb 592> :
  _686 = D.254897;
  _687 = _686->stmt;
  D.254898 = gimple_call_fndecl (_687);

  <bb 593> :
  _688 = D.254898;
  D.254899 = gimple_call_fndecl (u_stmt);

  <bb 594> :
  _689 = D.254899;
  retval.1713 = _688 == _689;
  if (retval.1713 != 0)
    goto <bb 595>; [INV]
  else
    goto <bb 596>; [INV]

  <bb 595> :
  // predicted unlikely by continue predictor.
  goto <bb 624>; [INV]

  <bb 596> :
  function_tree.1715_690 = function_tree;
  _691 = (long unsigned int) i;
  D.254900 = std::vector<free_type>::at (&free_array, _691);

  <bb 597> :
  _692 = D.254900;
  _693 = _692->stmt;
  D.254901 = Location_b2 (_693, u_stmt, function_tree.1715_690);

  <bb 598> :
  retval.1714 = D.254901;
  if (retval.1714 != 0)
    goto <bb 599>; [INV]
  else
    goto <bb 624>; [INV]

  <bb 599> :
  stderr.1716_694 = stderr;
  __builtin_fwrite ("\n============================================================\n", 1, 62, stderr.1716_694);

  <bb 600> :
  _695 = (long unsigned int) i;
  D.254902 = std::vector<free_type>::at (&free_array, _695);

  <bb 601> :
  _696 = D.254902;
  _697 = _696->Looserulesfree;
  retval.1717 = _697 != 0;
  if (retval.1717 != 0)
    goto <bb 602>; [INV]
  else
    goto <bb 603>; [INV]

  <bb 602> :
  stderr.1718_698 = stderr;
  __builtin_fwrite ("\x1b[40;35m <Looserules> find free stmt free same pointer \x1b[0m\n", 1, 60, stderr.1718_698);

  <bb 603> :
  _699 = (long unsigned int) i;
  D.254903 = std::vector<free_type>::at (&free_array, _699);

  <bb 604> :
  _700 = D.254903;
  _701 = _700->stmt;
  debug_gimple_stmt (_701);

  <bb 605> :
  _702 = (long unsigned int) i;
  D.254904 = std::vector<free_type>::at (&free_array, _702);

  <bb 606> :
  _703 = D.254904;
  _704 = _703->stmt;
  _705 = gimple_location_safe (_704);
  warning_at (_705, 0, "free in this location");

  <bb 607> :
  _706 = (long unsigned int) i;
  D.254905 = std::vector<free_type>::at (&free_array, _706);

  <bb 608> :
  _707 = D.254905;
  _708 = _707->stmt;
  _709 = gimple_bb (_708);
  _710 = table_temp->node;
  check_bbinfo (_710, _709);

  <bb 609> :
  _711 = user_tmp->aptr;
  if (_711 != 0B)
    goto <bb 610>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 610> :
  _712 = user_tmp->aptr;
  _713 = _712->base.code;
  _714 = (tree_code) _713;
  D.254906 = get_tree_code_name (_714);

  <bb 611> :
  name = D.254906;
  if (name != 0B)
    goto <bb 612>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 612> :
  stderr.1719_715 = stderr;
  fprintf (stderr.1719_715, "\x1b[40;35m target gimple type: %s \x1b[0m\n", name);

  <bb 613> :
  debug_gimple_stmt (u_stmt);

  <bb 614> :
  _716 = gimple_location_safe (u_stmt);
  warning_at (_716, 0, "use location");

  <bb 615> :
  _717 = gimple_bb (u_stmt);
  _718 = table_temp->node;
  check_bbinfo (_718, _717);

  <bb 616> :
  stderr.1720_719 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.1720_719);

  <bb 617> :
  _720 = (long unsigned int) i;
  D.254907 = std::vector<free_type>::at (&free_array, _720);

  <bb 618> :
  _721 = D.254907;
  _722 = _721->stmt;
  D.254908 = gimple_call_fn (_722);

  <bb 619> :
  _723 = D.254908;
  D.254909 = get_name (_723);

  <bb 620> :
  name = D.254909;
  _724 = strcmp (name, "realloc");
  if (_724 == 0)
    goto <bb 621>; [INV]
  else
    goto <bb 622>; [INV]

  <bb 621> :
  stderr.1721_725 = stderr;
  __builtin_fwrite ("\x1b[40;35m  realloc Use after free error! \x1b[0m\n", 1, 45, stderr.1721_725);
  goto <bb 623>; [INV]

  <bb 622> :
  stderr.1722_726 = stderr;
  __builtin_fwrite ("\x1b[40;35m    Use after free error! \x1b[0m\n", 1, 39, stderr.1722_726);

  <bb 623> :
  stderr.1723_727 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.1723_727);

  <bb 624> :
  i = i + 1;

  <bb 625> :
  _728 = (long unsigned int) i;
  _729 = std::vector<free_type>::size (&free_array);
  retval.1724 = _728 < _729;
  if (retval.1724 != 0)
    goto <bb 585>; [INV]
  else
    goto <bb 626>; [INV]

  <bb 626> :
  user_tmp = user_tmp->next;
  if (user_tmp != 0B)
    goto <bb 627>; [INV]
  else
    goto <bb 628>; [INV]

  <bb 627> :
  iftmp.1725 = user_tmp->stmt;
  goto <bb 629>; [INV]

  <bb 628> :
  iftmp.1725 = 0B;

  <bb 629> :
  u_stmt = iftmp.1725;

  <bb 630> :
  if (user_tmp != 0B)
    goto <bb 584>; [INV]
  else
    goto <bb 631>; [INV]

  <bb 631> :
  stderr.1726_730 = stderr;
  __builtin_fwrite ("\ndot graph END\n", 1, 15, stderr.1726_730);

  <bb 632> :
  start = {CLOBBER};

  <bb 633> :
  stderr.1727_731 = stderr;
  __builtin_fwrite (" \n Finish check Pointer Collect  \n", 1, 34, stderr.1727_731);

  <bb 634> :
  function_relate_array::~function_relate_array (&maxbb_array);
  std::vector<relate_type>::~vector (&maxbb_type_array);
  maxbb_type_array = {CLOBBER};
  maxbb_array = {CLOBBER};
  goto <bb 636>; [INV]

  <bb 635> :
  PTABLE_IS_NULL.1728_732 = PTABLE_IS_NULL;
  find_mallocstmt = (int) PTABLE_IS_NULL.1728_732;

  <bb 636> :
  _733 = table_temp->swap_type;
  _734 = (unsigned int) _733;
  FUNCITON_THREAD.1729_735 = FUNCITON_THREAD;
  if (_734 == FUNCITON_THREAD.1729_735)
    goto <bb 637>; [INV]
  else
    goto <bb 648>; [INV]

  <bb 637> :
  if (is_pthread_detched == 0)
    goto <bb 638>; [INV]
  else
    goto <bb 645>; [INV]

  <bb 638> :
  if (find_pthread_join == 0)
    goto <bb 639>; [INV]
  else
    goto <bb 642>; [INV]

  <bb 639> :
  stderr.1730_736 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1730_736);

  <bb 640> :
  stderr.1731_737 = stderr;
  __builtin_fwrite ("\x1b[40;31m    pthread is JOINABLE but no pthread_join stmt \x1b[0m\n", 1, 62, stderr.1731_737);

  <bb 641> :
  stderr.1732_738 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1732_738);
  goto <bb 648>; [INV]

  <bb 642> :
  stderr.1733_739 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1733_739);

  <bb 643> :
  stderr.1734_740 = stderr;
  __builtin_fwrite ("\x1b[40;32m    pthread is JOINABLE and no memory leak   \x1b[0m\n", 1, 58, stderr.1734_740);

  <bb 644> :
  stderr.1735_741 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1735_741);
  goto <bb 648>; [INV]

  <bb 645> :
  stderr.1736_742 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1736_742);

  <bb 646> :
  stderr.1737_743 = stderr;
  __builtin_fwrite ("\x1b[40;32m    pthread is DETACHED and no memory leak  \x1b[0m\n", 1, 57, stderr.1737_743);

  <bb 647> :
  stderr.1738_744 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1738_744);

  <bb 648> :
  ptable_type.1739_745 = (unsigned int) ptable_type;
  IS_MALLOC_FUCNTION.1740_746 = IS_MALLOC_FUCNTION;
  if (ptable_type.1739_745 == IS_MALLOC_FUCNTION.1740_746)
    goto <bb 649>; [INV]
  else
    goto <bb 651>; [INV]

  <bb 649> :
  find_mallocstmt.1741_747 = (unsigned int) find_mallocstmt;
  IS_OTHRER_FUCNTION.1742_748 = IS_OTHRER_FUCNTION;
  if (find_mallocstmt.1741_747 == IS_OTHRER_FUCNTION.1742_748)
    goto <bb 650>; [INV]
  else
    goto <bb 651>; [INV]

  <bb 650> :
  IS_MALLOC_FUCNTION.1743_749 = IS_MALLOC_FUCNTION;
  find_mallocstmt = (int) IS_MALLOC_FUCNTION.1743_749;

  <bb 651> :
  Looserulesfree.1744_750 = Looserulesfree;
  if (Looserulesfree.1744_750 != 0)
    goto <bb 652>; [INV]
  else
    goto <bb 660>; [INV]

  <bb 652> :
  stderr.1745_751 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1745_751);

  <bb 653> :
  stderr.1746_752 = stderr;
  fprintf (stderr.1746_752, "\x1b[40;35m  \tLooserules free count:%d \x1b[0m\n", find_Looserulesfreestmt);

  <bb 654> :
  find_freestmt.1747_753 = find_freestmt;
  stderr.1748_754 = stderr;
  fprintf (stderr.1748_754, "\x1b[40;31m  \tfree count:%d \x1b[0m\n", find_freestmt.1747_753);

  <bb 655> :
  if (find_Looserulesfreestmt > 1)
    goto <bb 656>; [INV]
  else
    goto <bb 657>; [INV]

  <bb 656> :
  stderr.1749_755 = stderr;
  fprintf (stderr.1749_755, "\x1b[40;31m  \tpossible double free [Looserules]:%d \x1b[0m\n", find_Looserulesfreestmt);

  <bb 657> :
  find_freestmt.1750_756 = find_freestmt;
  if (find_freestmt.1750_756 > 1)
    goto <bb 658>; [INV]
  else
    goto <bb 659>; [INV]

  <bb 658> :
  find_freestmt.1751_757 = find_freestmt;
  stderr.1752_758 = stderr;
  fprintf (stderr.1752_758, "\x1b[40;31m  \tpossible double free [rigorous]:%d \x1b[0m\n", find_freestmt.1751_757);

  <bb 659> :
  stderr.1753_759 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1753_759);

  <bb 660> :
  find_mallocstmt.1754_760 = (unsigned int) find_mallocstmt;
  IS_MALLOC_FUCNTION.1755_761 = IS_MALLOC_FUCNTION;
  if (find_mallocstmt.1754_760 == IS_MALLOC_FUCNTION.1755_761)
    goto <bb 661>; [INV]
  else
    goto <bb 675>; [INV]

  <bb 661> :
  find_freestmt.1756_762 = find_freestmt;
  if (find_freestmt.1756_762 == 0)
    goto <bb 662>; [INV]
  else
    goto <bb 665>; [INV]

  <bb 662> :
  stderr.1757_763 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1757_763);

  <bb 663> :
  stderr.1758_764 = stderr;
  __builtin_fwrite ("\x1b[40;31m    no free stmt possible memory leak \x1b[0m\n", 1, 51, stderr.1758_764);

  <bb 664> :
  stderr.1759_765 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1759_765);
  goto <bb 707>; [INV]

  <bb 665> :
  find_freestmt.1760_766 = find_freestmt;
  if (find_freestmt.1760_766 == 1)
    goto <bb 666>; [INV]
  else
    goto <bb 671>; [INV]

  <bb 666> :
  stderr.1761_767 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1761_767);

  <bb 667> :
  if (find_phistmt == 1)
    goto <bb 668>; [INV]
  else
    goto <bb 669>; [INV]

  <bb 668> :
  stderr.1762_768 = stderr;
  __builtin_fwrite ("\x1b[40;31m   need check branch because multiple direction varible\x1b[0m\n", 1, 68, stderr.1762_768);
  goto <bb 670>; [INV]

  <bb 669> :
  stderr.1763_769 = stderr;
  __builtin_fwrite ("\x1b[40;32m   No memory leak, need more check!  \x1b[0m\n", 1, 50, stderr.1763_769);

  <bb 670> :
  stderr.1764_770 = stderr;
  __builtin_fwrite ("\n======================================================================\n\n", 1, 73, stderr.1764_770);
  goto <bb 707>; [INV]

  <bb 671> :
  find_freestmt.1765_771 = find_freestmt;
  if (find_freestmt.1765_771 > 1)
    goto <bb 672>; [INV]
  else
    goto <bb 707>; [INV]

  <bb 672> :
  stderr.1766_772 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1766_772);

  <bb 673> :
  find_freestmt.1767_773 = find_freestmt;
  stderr.1768_774 = stderr;
  fprintf (stderr.1768_774, "\x1b[40;31m  \tpossible double free [rigorous]:%d \x1b[0m\n", find_freestmt.1767_773);

  <bb 674> :
  stderr.1769_775 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1769_775);
  goto <bb 707>; [INV]

  <bb 675> :
  find_mallocstmt.1770_776 = (unsigned int) find_mallocstmt;
  IS_HEAP_FUCNTION.1771_777 = IS_HEAP_FUCNTION;
  if (find_mallocstmt.1770_776 == IS_HEAP_FUCNTION.1771_777)
    goto <bb 676>; [INV]
  else
    goto <bb 679>; [INV]

  <bb 676> :
  stderr.1772_778 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1772_778);

  <bb 677> :
  stderr.1773_779 = stderr;
  __builtin_fwrite ("\x1b[40;31m \tthis fucntion return possible is heap-object \x1b[0m\n", 1, 60, stderr.1773_779);

  <bb 678> :
  stderr.1774_780 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1774_780);
  goto <bb 707>; [INV]

  <bb 679> :
  find_mallocstmt.1775_781 = (unsigned int) find_mallocstmt;
  PTABLE_IS_NULL.1776_782 = PTABLE_IS_NULL;
  if (find_mallocstmt.1775_781 == PTABLE_IS_NULL.1776_782)
    goto <bb 680>; [INV]
  else
    goto <bb 687>; [INV]

  <bb 680> :
  stderr.1777_783 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1777_783);

  <bb 681> :
  stderr.1778_784 = stderr;
  __builtin_fwrite ("\x1b[40;31m \tCan\'t find this fucntion in Pointer table \x1b[0m\n", 1, 57, stderr.1778_784);

  <bb 682> :
  stderr.1779_785 = stderr;
  __builtin_fwrite ("\x1b[40;31m \tPossiable no other stmt relate with this stmt \x1b[0m\n", 1, 61, stderr.1779_785);

  <bb 683> :
  _786 = table_temp->last_stmt;
  D.254914 = empty_body_p (_786);

  <bb 684> :
  retval.1780 = D.254914;
  if (retval.1780 != 0)
    goto <bb 685>; [INV]
  else
    goto <bb 686>; [INV]

  <bb 685> :
  _787 = table_temp->last_stmt;
  _788 = gimple_location_safe (_787);
  warning_at (_788, 0, "use location");

  <bb 686> :
  stderr.1781_789 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1781_789);
  goto <bb 707>; [INV]

  <bb 687> :
  stderr.1782_790 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1782_790);

  <bb 688> :
  stderr.1783_791 = stderr;
  __builtin_fwrite ("\x1b[40;31m \tthis stmt need double check \x1b[0m\n", 1, 43, stderr.1783_791);

  <bb 689> :
  find_retheapstmt.1784_792 = find_retheapstmt;
  if (find_retheapstmt.1784_792 > 0)
    goto <bb 690>; [INV]
  else
    goto <bb 707>; [INV]

  <bb 690> :
  find_freestmt.1785_793 = find_freestmt;
  if (find_freestmt.1785_793 > 2)
    goto <bb 691>; [INV]
  else
    goto <bb 695>; [INV]

  <bb 691> :
  stderr.1786_794 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1786_794);

  <bb 692> :
  stderr.1787_795 = stderr;
  __builtin_fwrite ("\x1b[40;31m    this function with other function alias that other function return value is heap-object \x1b[0m\n", 1, 105, stderr.1787_795);

  <bb 693> :
  find_freestmt.1788_796 = find_freestmt;
  stderr.1789_797 = stderr;
  fprintf (stderr.1789_797, "\x1b[40;31m  \tpossible double free :%d \x1b[0m\n", find_freestmt.1788_796);

  <bb 694> :
  stderr.1790_798 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1790_798);
  goto <bb 707>; [INV]

  <bb 695> :
  find_freestmt.1791_799 = find_freestmt;
  if (find_freestmt.1791_799 == 1)
    goto <bb 696>; [INV]
  else
    goto <bb 702>; [INV]

  <bb 696> :
  stderr.1792_800 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1792_800);

  <bb 697> :
  stderr.1793_801 = stderr;
  __builtin_fwrite ("\x1b[40;31m    this function with other function alias that other function return value is heap-object \x1b[0m\n", 1, 105, stderr.1793_801);

  <bb 698> :
  if (find_phistmt == 1)
    goto <bb 699>; [INV]
  else
    goto <bb 700>; [INV]

  <bb 699> :
  stderr.1794_802 = stderr;
  __builtin_fwrite ("\x1b[40;31m   need check branch because multiple direction varible\x1b[0m\n", 1, 68, stderr.1794_802);
  goto <bb 701>; [INV]

  <bb 700> :
  stderr.1795_803 = stderr;
  __builtin_fwrite ("\x1b[40;32m   Maybe you don\'t have memory leak.... need more checks  \x1b[0m\n", 1, 71, stderr.1795_803);

  <bb 701> :
  stderr.1796_804 = stderr;
  __builtin_fwrite ("\n======================================================================\n\n", 1, 73, stderr.1796_804);
  goto <bb 707>; [INV]

  <bb 702> :
  find_freestmt.1797_805 = find_freestmt;
  if (find_freestmt.1797_805 == 0)
    goto <bb 703>; [INV]
  else
    goto <bb 707>; [INV]

  <bb 703> :
  stderr.1798_806 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1798_806);

  <bb 704> :
  stderr.1799_807 = stderr;
  __builtin_fwrite ("\x1b[40;31m    this function with other function alias that other function return value is heap-object \x1b[0m\n", 1, 105, stderr.1799_807);

  <bb 705> :
  stderr.1800_808 = stderr;
  __builtin_fwrite ("\x1b[40;31m    no free stmt possible memory leak \x1b[0m\n", 1, 51, stderr.1800_808);

  <bb 706> :
  stderr.1801_809 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1801_809);

  <bb 707> :
  stderr.1802_810 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1802_810);

  <bb 708> :
  std::vector<basic_block_def*>::~vector (&earlyend);
  finally_tmp.1804 = 1;

  <bb 709> :
  std::vector<free_type>::~vector (&free_array);
  if (finally_tmp.1804 == 1)
    goto <bb 710>; [INV]
  else
    goto <bb 712>; [INV]

  <bb 710> :
<L581>:

  <bb 711> :
  free_array = {CLOBBER};
  earlyend = {CLOBBER};
  goto <bb 713>; [INV]

  <bb 712> :
  free_array = {CLOBBER};
  earlyend = {CLOBBER};
  find_freestmt = {CLOBBER};
  find_retheapstmt = {CLOBBER};
  find_pthread_detched = {CLOBBER};
  goto <bb 714>; [INV]

  <bb 713> :
  find_freestmt = {CLOBBER};
  find_retheapstmt = {CLOBBER};
  find_pthread_detched = {CLOBBER};

  <bb 714> :
  table_temp = table_temp->next;
  if (table_temp != 0B)
    goto <bb 715>; [INV]
  else
    goto <bb 716>; [INV]

  <bb 715> :
  iftmp.1803 = table_temp->target;
  goto <bb 717>; [INV]

  <bb 716> :
  iftmp.1803 = 0B;

  <bb 717> :
  t = iftmp.1803;

  <bb 718> :
  if (t != 0B)
    goto <bb 30>; [INV]
  else
    goto <bb 719>; [INV]

  <bb 719> :
  start = {CLOBBER};
  start2 = {CLOBBER};
  return;

  <bb 720> :
<L598>:
  std::vector<return_type>::~vector (&funcalleeRetTypearray);
  resx 4

  <bb 721> :
<L599>:
  function_return_array::~function_return_array (&find_fun_array);
  resx 3

  <bb 722> :
<L600>:
  find_fun_array = {CLOBBER};
  funcalleeRetTypearray = {CLOBBER};
  resx 2

  <bb 723> :
<L601>:
  operator delete (D.201307, 48);
  resx 13

  <bb 724> :
<L602>:
  e2 = {CLOBBER};
  ei2 = {CLOBBER};
  resx 19

  <bb 725> :
<L603>:
  e = {CLOBBER};
  ei = {CLOBBER};
  resx 18

  <bb 726> :
<L604>:
  relate_type = {CLOBBER};
  resx 22

  <bb 727> :
<L605>:
  free_type = {CLOBBER};
  resx 17

  <bb 728> :
<L606>:
  operator delete (D.201429, 48);
  resx 26

  <bb 729> :
<L607>:
  it_i = {CLOBBER};
  resx 25

  <bb 730> :
<L608>:
  function_relate_array::~function_relate_array (&fun_array);
  resx 33

  <bb 731> :
<L609>:
  std::vector<relate_type>::~vector (&relate_type_array);
  resx 32

  <bb 732> :
<L610>:
  relate_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  resx 31

  <bb 733> :
<L611>:
  free_type = {CLOBBER};
  resx 40

  <bb 734> :
<L612>:
  std::vector<free_type>::~vector (&callerRetTypearray);
  resx 39

  <bb 735> :
<L613>:
  function_free_array::~function_free_array (&callerFunArray);
  resx 38

  <bb 736> :
<L614>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 37

  <bb 737> :
<L615>:
  start = {CLOBBER};
  resx 45

  <bb 738> :
<L616>:
  function_relate_array::~function_relate_array (&maxbb_array);
  resx 16

  <bb 739> :
<L617>:
  std::vector<relate_type>::~vector (&maxbb_type_array);
  resx 15

  <bb 740> :
<L618>:
  maxbb_type_array = {CLOBBER};
  maxbb_array = {CLOBBER};
  resx 12

  <bb 741> :
<L619>:
  std::vector<basic_block_def*>::~vector (&earlyend);
  resx 11

  <bb 742> :
<L620>:
  std::vector<free_type>::~vector (&free_array);
  resx 10

  <bb 743> :
<L621>:
  free_array = {CLOBBER};
  earlyend = {CLOBBER};
  resx 9

  <bb 744> :
<L622>:
  find_freestmt = {CLOBBER};
  find_retheapstmt = {CLOBBER};
  find_pthread_detched = {CLOBBER};
  resx 8

  <bb 745> :
<L623>:
  start = {CLOBBER};
  start2 = {CLOBBER};
  resx 1

}



;; Function std::vector<basic_block_def*>::vector (_ZNSt6vectorIP15basic_block_defSaIS1_EEC2Ev, funcdef_no=6201, decl_uid=170292, cgraph_uid=3177, symbol_order=3930)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<basic_block_def*>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.170300;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EEC2Ev, funcdef_no=6199, decl_uid=169750, cgraph_uid=3174, symbol_order=3927)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE12_Vector_implC2Ev, funcdef_no=7552, decl_uid=169642, cgraph_uid=4184, symbol_order=4969)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<basic_block_def*>::allocator (this);
  _1 = &this->D.169645;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<basic_block_def*>::allocator (_ZNSaIP15basic_block_defEC2Ev, funcdef_no=8365, decl_uid=169420, cgraph_uid=4997, symbol_order=5786)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<basic_block_def*>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defEC2Ev, funcdef_no=9158, decl_uid=169349, cgraph_uid=5790, symbol_order=6579)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE17_Vector_impl_dataC2Ev, funcdef_no=8368, decl_uid=169592, cgraph_uid=5000, symbol_order=5789)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_map (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7776, decl_uid=191737, cgraph_uid=4408, symbol_order=5193)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8724, decl_uid=191696, cgraph_uid=5356, symbol_order=6145)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.254930;
  unsigned int D.254929;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.254929 = hash_table_higher_prime_index (size);
  size_prime_index = D.254929;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.254930 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.254930;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function ei_start_1 (_ZL10ei_start_1PP3vecIP8edge_def5va_gc8vl_embedE, funcdef_no=1666, decl_uid=75277, cgraph_uid=817, symbol_order=969)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct edge_iterator ei_start_1 (struct vec * * ev)
{
  struct edge_iterator i;
  struct edge_iterator D.254931;

  <bb 2> :
  i.index = 0;
  i.container = ev;
  D.254931 = i;
  i = {CLOBBER};

  <bb 3> :
<L1>:
  return D.254931;

}



;; Function ei_next (_ZL7ei_nextP13edge_iterator, funcdef_no=1670, decl_uid=75328, cgraph_uid=821, symbol_order=973)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ei_next (struct edge_iterator * i)
{
  <bb 2> :
  _1 = i->index;
  _2 = _1 + 1;
  i->index = _2;
  return;

}



;; Function ei_cond (_ZL7ei_cond13edge_iteratorPP8edge_def, funcdef_no=1674, decl_uid=75345, cgraph_uid=825, symbol_order=977)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
bool ei_cond (struct edge_iterator ei, struct edge_def * * p)
{
  struct edge_def * D.254940;
  bool D.254939;
  bool D.254937;
  bool retval.1805;

  <bb 2> :
  D.254939 = ei_end_p (ei);
  _1 = D.254939;
  retval.1805 = ~_1;
  if (retval.1805 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.254940 = ei_edge (ei);
  _2 = D.254940;
  *p = _2;
  D.254937 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  *p = 0B;
  D.254937 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
<L2>:
  return D.254937;

}



;; Function ei_end_p (_ZL8ei_end_p13edge_iterator, funcdef_no=1668, decl_uid=75320, cgraph_uid=819, symbol_order=971)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool ei_end_p (struct edge_iterator i)
{
  unsigned int D.254943;
  bool D.254941;

  <bb 2> :
  _1 = i.index;
  _2 = ei_container (i);
  D.254943 = vec_safe_length<edge_def*, va_gc> (_2);
  _3 = D.254943;
  D.254941 = _1 == _3;

  <bb 3> :
<L0>:
  return D.254941;

}



;; Function ei_container (_ZL12ei_container13edge_iterator, funcdef_no=1665, decl_uid=75274, cgraph_uid=816, symbol_order=968)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct vec * ei_container (struct edge_iterator i)
{
  struct vec * D.254944;

  <bb 2> :
  _1 = i.container;
  D.254944 = *_1;

  <bb 3> :
<L0>:
  return D.254944;

}



;; Function vec_safe_length<edge_def*, va_gc> (_Z15vec_safe_lengthIP8edge_def5va_gcEjPK3vecIT_T0_8vl_embedE, funcdef_no=6956, decl_uid=75252, cgraph_uid=3588, symbol_order=4370)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
unsigned int vec_safe_length<edge_def*, va_gc> (const struct vec * v)
{
  unsigned int iftmp.1806;
  unsigned int D.254946;

  <bb 2> :
  if (v != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.1806 = vec<edge_def*, va_gc>::length (v);
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1806 = 0;

  <bb 5> :
  D.254946 = iftmp.1806;

  <bb 6> :
<L3>:
  return D.254946;

}



;; Function vec<edge_def*, va_gc>::length (_ZNK3vecIP8edge_def5va_gc8vl_embedE6lengthEv, funcdef_no=7963, decl_uid=75146, cgraph_uid=4595, symbol_order=5380)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int vec<edge_def*, va_gc>::length (const struct vec * const this)
{
  unsigned int D.254952;

  <bb 2> :
  D.254952 = this->m_vecpfx.m_num;

  <bb 3> :
<L0>:
  return D.254952;

}



;; Function ei_edge (_ZL7ei_edge13edge_iterator, funcdef_no=1672, decl_uid=75335, cgraph_uid=823, symbol_order=975)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct edge_def * ei_edge (struct edge_iterator i)
{
  struct edge_def * D.254954;

  <bb 2> :
  _1 = ei_container (i);
  _2 = i.index;
  _3 = vec<edge_def*, va_gc>::operator[] (_1, _2);
  D.254954 = *_3;

  <bb 3> :
<L0>:
  return D.254954;

}



;; Function vec<edge_def*, va_gc>::operator[] (_ZN3vecIP8edge_def5va_gc8vl_embedEixEj, funcdef_no=6957, decl_uid=75165, cgraph_uid=3589, symbol_order=4371)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct edge_def * & vec<edge_def*, va_gc>::operator[] (struct vec * const this, unsigned int ix)
{
  struct edge_def * & D.254956;

  <bb 2> :
  D.254956 = &this->m_vecdata[ix];

  <bb 3> :
<L0>:
  return D.254956;

}



;; Function __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (_ZNK9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS1_SaIS1_EEEptEv, funcdef_no=7784, decl_uid=201474, cgraph_uid=4416, symbol_order=5201)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (const struct __normal_iterator * const this)
{
  struct relate_type * D.254958;

  <bb 2> :
  D.254958 = this->_M_current;

  <bb 3> :
<L0>:
  return D.254958;

}



;; Function __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS1_SaIS1_EEEppEv, funcdef_no=7783, decl_uid=201476, cgraph_uid=4415, symbol_order=5200)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.254960;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 48;
  this->_M_current = _2;
  D.254960 = this;

  <bb 3> :
<L0>:
  return D.254960;

}



;; Function __gnu_cxx::operator!=<relate_type*, std::vector<relate_type> > (_ZN9__gnu_cxxneIP11relate_typeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_, funcdef_no=7782, decl_uid=201574, cgraph_uid=4414, symbol_order=5199)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<relate_type*, std::vector<relate_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.254962;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (__rhs);
  _4 = *_3;
  D.254962 = _2 != _4;

  <bb 3> :
<L0>:
  return D.254962;

}



;; Function hash_map<tree_node*, function_relate_array>::~hash_map (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6790, decl_uid=201590, cgraph_uid=3421, symbol_order=4198)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7786, decl_uid=191706, cgraph_uid=4418, symbol_order=5203)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.254977;
  bool D.254976;
  size_t i;
  bool iftmp.1808;
  bool retval.1807;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 32;
  _4 = _2 + _3;
  D.254976 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.254976;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 32;
  _9 = _7 + _8;
  D.254977 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.254977;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1808 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1808 = 0;

  <bb 7> :
  retval.1807 = iftmp.1808;
  if (retval.1807 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 32;
  _14 = _12 + _13;
  hash_map<tree_node*, function_relate_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8732, decl_uid=191480, cgraph_uid=5364, symbol_order=6153)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::remove<hash_map<tree_node*, function_relate_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::remove<hash_map<tree_node*, function_relate_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9553, decl_uid=227133, cgraph_uid=6185, symbol_order=6974)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::remove<hash_map<tree_node*, function_relate_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_relate_array::~function_relate_array (_2);
  return;

}



;; Function std::vector<relate_type>::operator[] (_ZNSt6vectorI11relate_typeSaIS0_EEixEm, funcdef_no=7779, decl_uid=179449, cgraph_uid=4411, symbol_order=5196)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<relate_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.254978;

  <bb 2> :
  _1 = this->D.179796._M_impl.D.179141._M_start;
  _2 = __n * 48;
  D.254978 = _1 + _2;

  <bb 3> :
<L0>:
  return D.254978;

}



;; Function std::vector<free_type>::at (_ZNSt6vectorI9free_typeSaIS0_EE2atEm, funcdef_no=7788, decl_uid=176320, cgraph_uid=4420, symbol_order=5205)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<free_type>::at (struct vector * const this, size_type __n)
{
  struct value_type & D.254980;

  <bb 2> :
  std::vector<free_type>::_M_range_check (this, __n);
  D.254980 = std::vector<free_type>::operator[] (this, __n);

  <bb 3> :
<L0>:
  return D.254980;

}



;; Function std::vector<free_type>::_M_range_check (_ZNKSt6vectorI9free_typeSaIS0_EE14_M_range_checkEm, funcdef_no=8734, decl_uid=176317, cgraph_uid=5366, symbol_order=6155)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
void std::vector<free_type>::_M_range_check (const struct vector * const this, size_type __n)
{
  bool retval.1809;

  <bb 2> :
  _1 = std::vector<free_type>::size (this);
  retval.1809 = __n >= _1;
  if (retval.1809 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = std::vector<free_type>::size (this);
  std::__throw_out_of_range_fmt ("vector::_M_range_check: __n (which is %zu) >= this->size() (which is %zu)", __n, _2);

  <bb 4> :
  return;

}



;; Function std::vector<basic_block_def*>::~vector (_ZNSt6vectorIP15basic_block_defSaIS1_EED2Ev, funcdef_no=7773, decl_uid=170297, cgraph_uid=4405, symbol_order=5190)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<basic_block_def*>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.170300;
  _2 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_1);
  _3 = this->D.170300._M_impl.D.169645._M_finish;
  _4 = this->D.170300._M_impl.D.169645._M_start;
  std::_Destroy<basic_block_def**, basic_block_def*> (_4, _3, _2);
  _5 = &this->D.170300;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<basic_block_def**, basic_block_def*> (_ZSt8_DestroyIPP15basic_block_defS1_EvT_S3_RSaIT0_E, funcdef_no=8722, decl_uid=214405, cgraph_uid=5354, symbol_order=6143)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<basic_block_def**, basic_block_def*> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct allocator & D.227107)
{
  <bb 2> :
  std::_Destroy<basic_block_def**> (__first, __last);
  return;

}



;; Function std::_Destroy<basic_block_def**> (_ZSt8_DestroyIPP15basic_block_defEvT_S3_, funcdef_no=9551, decl_uid=227109, cgraph_uid=6183, symbol_order=6972)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<basic_block_def**> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<basic_block_def**> (_ZNSt12_Destroy_auxILb1EE9__destroyIPP15basic_block_defEEvT_S5_, funcdef_no=10146, decl_uid=235478, cgraph_uid=6778, symbol_order=7571)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<basic_block_def**> (struct basic_block_def * * D.240414, struct basic_block_def * * D.240415)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::~_Vector_base (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EED2Ev, funcdef_no=7558, decl_uid=169755, cgraph_uid=4190, symbol_order=4975)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.169645._M_end_of_storage;
  _2 = this->_M_impl.D.169645._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.169645._M_start;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE12_Vector_implD2Ev, funcdef_no=6197, decl_uid=169692, cgraph_uid=3171, symbol_order=3924)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<basic_block_def*>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<basic_block_def*>::~allocator (_ZNSaIP15basic_block_defED2Ev, funcdef_no=7555, decl_uid=169425, cgraph_uid=4187, symbol_order=4972)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<basic_block_def*>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<basic_block_def*>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defED2Ev, funcdef_no=8371, decl_uid=169354, cgraph_uid=5003, symbol_order=5792)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<basic_block_def*>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function record_fucntion (_Z15record_fucntionP11cgraph_node, funcdef_no=6792, decl_uid=186985, cgraph_uid=3456, symbol_order=4233)

Removing basic block 50
;; 7 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72
;;
;; Loop 1
;;  header 61, latch 60
;;  depth 1, outer 0
;;  nodes: 61 60 59 57 58 6 11 10 9 8 7 5 4 56 55 54 53 30 52 51 31 50 33 49 35 34 48 39 47 46 45 40 44 42 43 41 38 37 36 32 29 13 28 18 27 24 26 25 23 19 22 20 21 17 15 16 14 12
;;
;; Loop 3
;;  header 53, latch 52
;;  depth 2, outer 1
;;  nodes: 53 52 51 31 50 33 49 35 34 48 39 47 46 45 40 44 42 43 41 38 37 36 32
;;
;; Loop 4
;;  header 51, latch 50
;;  depth 3, outer 3
;;  nodes: 51 50 33 49 35 34 48 39 47 46 45 40 44 42 43 41 38 37 36 32
;;
;; Loop 5
;;  header 45, latch 44
;;  depth 4, outer 4
;;  nodes: 45 44 42 43 41 46
;;
;; Loop 2
;;  header 29, latch 28
;;  depth 2, outer 1
;;  nodes: 29 28 18 27 24 26 25 23 19 22 20 21 17 15 16 14
;;
;; Loop 6
;;  header 23, latch 22
;;  depth 3, outer 2
;;  nodes: 23 22 20 21
;; 2 succs { 72 3 }
;; 3 succs { 61 }
;; 4 succs { 71 5 }
;; 5 succs { 6 7 }
;; 6 succs { 58 }
;; 7 succs { 71 8 }
;; 8 succs { 71 9 }
;; 9 succs { 10 12 }
;; 10 succs { 71 11 }
;; 11 succs { 58 }
;; 12 succs { 69 13 }
;; 13 succs { 29 }
;; 14 succs { 15 16 }
;; 15 succs { 17 }
;; 16 succs { 17 }
;; 17 succs { 69 18 }
;; 18 succs { 19 28 }
;; 19 succs { 23 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 20 24 }
;; 24 succs { 25 27 }
;; 25 succs { 63 26 }
;; 26 succs { 27 }
;; 27 succs { 28 }
;; 28 succs { 29 }
;; 29 succs { 14 30 }
;; 30 succs { 53 }
;; 31 succs { 51 }
;; 32 succs { 68 33 }
;; 33 succs { 34 50 }
;; 34 succs { 68 35 }
;; 35 succs { 36 50 }
;; 36 succs { 67 37 }
;; 37 succs { 66 38 }
;; 38 succs { 66 39 }
;; 39 succs { 40 48 }
;; 40 succs { 45 }
;; 41 succs { 42 43 }
;; 42 succs { 44 }
;; 43 succs { 44 }
;; 44 succs { 65 45 }
;; 45 succs { 65 46 }
;; 46 succs { 41 47 }
;; 47 succs { 48 }
;; 48 succs { 66 49 }
;; 49 succs { 50 }
;; 50 succs { 51 }
;; 51 succs { 32 52 }
;; 52 succs { 53 }
;; 53 succs { 31 54 }
;; 54 succs { 69 55 }
;; 55 succs { 69 56 }
;; 56 succs { 69 57 }
;; 57 succs { 59 }
;; 58 succs { 59 }
;; 59 succs { 72 60 }
;; 60 succs { 61 }
;; 61 succs { 4 62 }
;; 62 succs { 1 }
;; 63 succs { 64 }
;; 64 succs { 69 }
;; 65 succs { 66 }
;; 66 succs { 67 }
;; 67 succs { 68 }
;; 68 succs { 69 }
;; 69 succs { 70 }
;; 70 succs { 71 }
;; 71 succs { 72 }
;; 72 succs { }
void record_fucntion (struct cgraph_node * node)
{
  struct cgraph_node * D.255042;
  struct function * D.255036;
  bool D.255031;
  union tree_node * D.255030;
  union tree_node * D.255029;
  tree_code D.255028;
  tree_code D.255027;
  struct cgraph_node * D.255024;
  struct function * D.255023;
  bool D.255022;
  struct cgraph_node * D.255021;
  int init;
  struct edge_iterator ei;
  struct edge_def * e;
  struct symbolicinfo symbolicinfo;
  tree_code code;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct function_path path_type;
  struct iterator it_i;
  int find;
  struct cgraph_node * callee;
  struct cgraph_node * caller;
  struct vector function_path_array;
  struct function_path_array fun_array;
  availability avail;
  struct basic_block_def * bb;
  struct cgraph_edge * e;
  bool retval.1827;
  bool retval.1825;
  bool retval.1819;
  bool retval.1818;
  struct iterator D.201960;
  bool retval.1815;
  bool retval.1814;
  struct cgraph_node * iftmp.1813;
  bool retval.1811;

  <bb 2> :
  symtab.1810_1 = symtab;
  D.255021 = symbol_table::first_defined_function (symtab.1810_1);

  <bb 3> :
  node = D.255021;
  goto <bb 61>; [INV]

  <bb 4> :
  _2 = node->D.97512.decl;
  D.255022 = gimple_has_body_p (_2);

  <bb 5> :
  _3 = D.255022;
  retval.1811 = ~_3;
  if (retval.1811 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  // predicted unlikely by continue predictor.
  goto <bb 58>; [INV]

  <bb 7> :
  D.255023 = cgraph_node::get_fun (node);

  <bb 8> :
  _4 = D.255023;
  push_cfun (_4);

  <bb 9> :
  cfun.1812_5 = cfun;
  if (cfun.1812_5 == 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  pop_cfun ();

  <bb 11> :
  // predicted unlikely by continue predictor.
  goto <bb 58>; [INV]

  <bb 12> :
  function_path_array::function_path_array (&fun_array);
  std::vector<function_path>::vector (&function_path_array);
  std::vector<function_path>::operator= (&fun_array.function_path_array, &function_path_array);

  <bb 13> :
  e = node->callees;
  goto <bb 29>; [INV]

  <bb 14> :
  _6 = e->caller;
  _7 = _6->inlined_to;
  if (_7 != 0B)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  _8 = e->caller;
  iftmp.1813 = _8->inlined_to;
  goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1813 = e->caller;

  <bb 17> :
  caller = iftmp.1813;
  _9 = e->callee;
  D.255024 = cgraph_node::ultimate_alias_target (_9, &avail, caller);

  <bb 18> :
  callee = D.255024;
  if (callee != 0B)
    goto <bb 19>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 19> :
  find = 0;
  it_i._M_current = 0B;
  it_i = std::vector<function_path>::begin (&fun_array.function_path_array);
  goto <bb 23>; [INV]

  <bb 20> :
  _10 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator-> (&it_i);
  _11 = _10->next;
  _12 = callee->D.97512.decl;
  retval.1814 = _11 == _12;
  if (retval.1814 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  find = 1;

  <bb 22> :
  __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator++ (&it_i);

  <bb 23> :
  D.201960 = std::vector<function_path>::end (&fun_array.function_path_array);
  retval.1815 = __gnu_cxx::operator!=<function_path*, std::vector<function_path> > (&it_i, &D.201960);
  D.201960 = {CLOBBER};
  if (retval.1815 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  if (find == 0)
    goto <bb 25>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 25> :
  path_type.cgnext = callee;
  _13 = callee->D.97512.decl;
  path_type.next = _13;
  std::vector<function_path>::push_back (&fun_array.function_path_array, &path_type);

  <bb 26> :
  path_type = {CLOBBER};

  <bb 27> :
  it_i = {CLOBBER};

  <bb 28> :
  e = e->next_callee;

  <bb 29> :
  if (e != 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 30> :
  cfun.1816_14 = cfun;
  _15 = cfun.1816_14->cfg;
  _16 = _15->x_entry_block_ptr;
  _17 = _16->next_bb;
  bb = _17;
  goto <bb 53>; [INV]

  <bb 31> :
  bb.1817_18 = bb;
  gsi = gsi_start_bb (bb.1817_18); [return slot optimization]
  goto <bb 51>; [INV]

  <bb 32> :
  gc = gsi_stmt (gsi);
  D.255027 = gimple_cond_code (gc);

  <bb 33> :
  _19 = D.255027;
  retval.1818 = _19 != 0;
  if (retval.1818 != 0)
    goto <bb 34>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 34> :
  D.255028 = gimple_cond_code (gc);

  <bb 35> :
  code = D.255028;
  _20 = is_gimple_assign (gc);
  retval.1819 = ~_20;
  if (retval.1819 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 36> :
  std::vector<basic_block_def*>::push_back (&symbolicExecution, &bb);

  <bb 37> :
  symbolicinfo::symbolicinfo (&symbolicinfo);
  symbolicinfo.cond_stmt = gc;
  D.255029 = gimple_cond_lhs (gc);

  <bb 38> :
  _21 = D.255029;
  symbolicinfo.cond_lhs = _21;
  D.255030 = gimple_cond_rhs (gc);

  <bb 39> :
  _22 = D.255030;
  symbolicinfo.cond_rhs = _22;
  symbolicinfo.node = node;
  cfun.1820_23 = cfun;
  _24 = cfun.1820_23->cfg;
  _25 = _24->x_exit_block_ptr;
  _26 = _25->prev_bb;
  bb.1821_27 = bb;
  if (_26 != bb.1821_27)
    goto <bb 40>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 40> :
  init = 0;
  bb.1822_28 = bb;
  _29 = &bb.1822_28->succs;
  ei = ei_start_1 (_29);
  goto <bb 45>; [INV]

  <bb 41> :
  if (init == 0)
    goto <bb 42>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 42> :
  e.1823_30 = e;
  _31 = e.1823_30->dest;
  symbolicinfo.cond_truebranch = _31;
  goto <bb 44>; [INV]

  <bb 43> :
  e.1824_32 = e;
  _33 = e.1824_32->dest;
  symbolicinfo.cond_falsebranch = _33;

  <bb 44> :
  init = init + 1;
  ei_next (&ei);

  <bb 45> :
  D.255031 = ei_cond (ei, &e);

  <bb 46> :
  retval.1825 = D.255031;
  if (retval.1825 != 0)
    goto <bb 41>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 47> :
  e = {CLOBBER};
  ei = {CLOBBER};

  <bb 48> :
  syminfo.1826_34 = syminfo;
  hash_map<basic_block_def*, symbolicinfo>::put (syminfo.1826_34, &bb, &symbolicinfo);

  <bb 49> :
  symbolicinfo::~symbolicinfo (&symbolicinfo);
  symbolicinfo = {CLOBBER};

  <bb 50> :
  gsi_next (&gsi);

  <bb 51> :
  _35 = gsi_end_p (gsi);
  retval.1827 = ~_35;
  if (retval.1827 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 52> :
  gsi = {CLOBBER};
  bb.1828_36 = bb;
  _37 = bb.1828_36->next_bb;
  bb = _37;

  <bb 53> :
  cfun.1829_38 = cfun;
  _39 = cfun.1829_38->cfg;
  _40 = _39->x_exit_block_ptr;
  bb.1830_41 = bb;
  if (_40 != bb.1830_41)
    goto <bb 31>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 54> :
  function_path_collect.1831_42 = function_path_collect;
  D.255036 = cgraph_node::get_fun (node);

  <bb 55> :
  _43 = D.255036;
  _44 = &_43->decl;
  hash_map<tree_node*, function_path_array>::put (function_path_collect.1831_42, _44, &fun_array);

  <bb 56> :
  pop_cfun ();

  <bb 57> :
  std::vector<function_path>::~vector (&function_path_array);
  function_path_array::~function_path_array (&fun_array);
  avail = {CLOBBER};
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  goto <bb 59>; [INV]

  <bb 58> :
  avail = {CLOBBER};
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};

  <bb 59> :
  symtab.1832_45 = symtab;
  D.255042 = symbol_table::next_defined_function (symtab.1832_45, node);

  <bb 60> :
  node = D.255042;

  <bb 61> :
  if (node != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 62>; [INV]

  <bb 62> :
  bb = {CLOBBER};
  return;

  <bb 63> :
<L49>:
  path_type = {CLOBBER};
  resx 7

  <bb 64> :
<L50>:
  it_i = {CLOBBER};
  resx 5

  <bb 65> :
<L51>:
  e = {CLOBBER};
  ei = {CLOBBER};
  resx 13

  <bb 66> :
<L52>:
  symbolicinfo::~symbolicinfo (&symbolicinfo);
  resx 12

  <bb 67> :
<L53>:
  symbolicinfo = {CLOBBER};
  resx 11

  <bb 68> :
<L54>:
  gsi = {CLOBBER};
  resx 10

  <bb 69> :
<L55>:
  std::vector<function_path>::~vector (&function_path_array);
  resx 4

  <bb 70> :
<L56>:
  function_path_array::~function_path_array (&fun_array);
  resx 3

  <bb 71> :
<L57>:
  avail = {CLOBBER};
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  resx 2

  <bb 72> :
<L58>:
  bb = {CLOBBER};
  resx 1

}



;; Function function_path_array::function_path_array (_ZN19function_path_arrayC2Ev, funcdef_no=6804, decl_uid=192239, cgraph_uid=3435, symbol_order=4212)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_path_array::function_path_array (struct function_path_array * const this)
{
  <bb 2> :
  this->funtion_type_num = 0;
  _1 = &this->function_path_array;
  std::vector<function_path>::vector (_1);
  return;

}



;; Function std::vector<function_path>::vector (_ZNSt6vectorI13function_pathSaIS0_EEC2Ev, funcdef_no=6802, decl_uid=174549, cgraph_uid=3432, symbol_order=4209)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<function_path>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.174557;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_ZNSt12_Vector_baseI13function_pathSaIS0_EEC2Ev, funcdef_no=6800, decl_uid=174007, cgraph_uid=3429, symbol_order=4206)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI13function_pathSaIS0_EE12_Vector_implC2Ev, funcdef_no=7790, decl_uid=173899, cgraph_uid=4422, symbol_order=5207)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<function_path>::allocator (this);
  _1 = &this->D.173902;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<function_path>::allocator (_ZNSaI13function_pathEC2Ev, funcdef_no=8736, decl_uid=173677, cgraph_uid=5368, symbol_order=6157)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<function_path>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<function_path>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<function_path>::new_allocator (_ZN9__gnu_cxx13new_allocatorI13function_pathEC2Ev, funcdef_no=9555, decl_uid=173606, cgraph_uid=6187, symbol_order=6976)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<function_path>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<function_path>::operator= (_ZNSt6vectorI13function_pathSaIS0_EEaSERKS2_, funcdef_no=7798, decl_uid=174135, cgraph_uid=4432, symbol_order=5217)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<function_path>::operator= (struct vector * const this, const struct vector & __x)
{
  struct function_path * D.255077;
  struct function_path * __tmp;
  const size_type __xlen;
  struct vector & D.255075;
  struct __normal_iterator D.255072;
  struct __normal_iterator D.255071;
  struct __normal_iterator D.255070;
  struct __normal_iterator D.255069;
  struct __normal_iterator D.255068;
  bool retval.1837;
  struct __normal_iterator D.255063;
  struct __normal_iterator D.255062;
  bool retval.1836;
  bool iftmp.1835;
  bool retval.1834;
  bool retval.1833;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.1833 = __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_propagate_on_copy_assign ();
  if (retval.1833 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.174557;
  _4 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.174557;
  _6 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1835 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1835 = 0;

  <bb 8> :
  retval.1834 = iftmp.1835;
  if (retval.1834 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<function_path>::clear (this);
  _8 = &this->D.174557;
  _9 = this->D.174557._M_impl.D.173902._M_end_of_storage;
  _10 = this->D.174557._M_impl.D.173902._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 24;
  _13 = (long unsigned int) _12;
  _14 = this->D.174557._M_impl.D.173902._M_start;
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (_8, _14, _13);
  this->D.174557._M_impl.D.173902._M_start = 0B;
  this->D.174557._M_impl.D.173902._M_finish = 0B;
  this->D.174557._M_impl.D.173902._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.174557;
  _16 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.174557;
  _18 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<function_path> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<function_path>::size (__x);
  _19 = std::vector<function_path>::capacity (this);
  retval.1836 = __xlen > _19;
  if (retval.1836 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.255062 = std::vector<function_path>::end (__x);
  D.255063 = std::vector<function_path>::begin (__x);
  D.255077 = std::vector<function_path>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (this, __xlen, D.255063, D.255062);
  __tmp = D.255077;
  _20 = &this->D.174557;
  _21 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_20);
  _22 = this->D.174557._M_impl.D.173902._M_finish;
  _23 = this->D.174557._M_impl.D.173902._M_start;
  std::_Destroy<function_path*, function_path> (_23, _22, _21);
  _24 = &this->D.174557;
  _25 = this->D.174557._M_impl.D.173902._M_end_of_storage;
  _26 = this->D.174557._M_impl.D.173902._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 24;
  _29 = (long unsigned int) _28;
  _30 = this->D.174557._M_impl.D.173902._M_start;
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (_24, _30, _29);
  this->D.174557._M_impl.D.173902._M_start = __tmp;
  _31 = this->D.174557._M_impl.D.173902._M_start;
  _32 = __xlen * 24;
  _33 = _31 + _32;
  this->D.174557._M_impl.D.173902._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<function_path>::size (this);
  retval.1837 = __xlen <= _34;
  if (retval.1837 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.174557;
  _36 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_35);
  D.255068 = std::vector<function_path>::end (this);
  D.255069 = std::vector<function_path>::begin (this);
  D.255070 = std::vector<function_path>::end (__x);
  D.255071 = std::vector<function_path>::begin (__x);
  D.255072 = std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (D.255071, D.255070, D.255069);
  std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path> (D.255072, D.255068, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.174557._M_impl.D.173902._M_start;
  _38 = __x->D.174557._M_impl.D.173902._M_start;
  _39 = std::vector<function_path>::size (this);
  _40 = _39 * 24;
  _41 = _38 + _40;
  _42 = __x->D.174557._M_impl.D.173902._M_start;
  std::copy<function_path*, function_path*> (_42, _41, _37);
  _43 = &this->D.174557;
  _44 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_43);
  _45 = this->D.174557._M_impl.D.173902._M_finish;
  _46 = __x->D.174557._M_impl.D.173902._M_finish;
  _47 = __x->D.174557._M_impl.D.173902._M_start;
  _48 = std::vector<function_path>::size (this);
  _49 = _48 * 24;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<function_path*, function_path*, function_path> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.174557._M_impl.D.173902._M_start;
  _52 = __xlen * 24;
  _53 = _51 + _52;
  this->D.174557._M_impl.D.173902._M_finish = _53;

  <bb 17> :
  D.255075 = this;

  <bb 18> :
<L19>:
  return D.255075;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI13function_pathES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7799, decl_uid=173769, cgraph_uid=4430, symbol_order=5215)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_propagate_on_copy_assign ()
{
  bool D.255078;

  <bb 2> :
  D.255078 = 0;

  <bb 3> :
<L0>:
  return D.255078;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI13function_pathES1_E15_S_always_equalEv, funcdef_no=7800, decl_uid=173772, cgraph_uid=4431, symbol_order=5216)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_always_equal ()
{
  bool D.255080;

  <bb 2> :
  D.255080 = 1;

  <bb 3> :
<L0>:
  return D.255080;

}



;; Function std::operator!= (_ZStneRKSaI13function_pathES2_, funcdef_no=8745, decl_uid=173655, cgraph_uid=5377, symbol_order=6166)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.227156, const struct allocator & D.227157)
{
  bool D.255082;

  <bb 2> :
  D.255082 = 0;

  <bb 3> :
<L0>:
  return D.255082;

}



;; Function std::vector<function_path>::clear (_ZNSt6vectorI13function_pathSaIS0_EE5clearEv, funcdef_no=8746, decl_uid=174287, cgraph_uid=5378, symbol_order=6167)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<function_path>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.174557._M_impl.D.173902._M_start;
  std::vector<function_path>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<function_path>::_M_erase_at_end (_ZNSt6vectorI13function_pathSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9558, decl_uid=174415, cgraph_uid=6190, symbol_order=6979)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<function_path>::_M_erase_at_end (struct vector * const this, struct function_path * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.174557._M_impl.D.173902._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 24;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.174557;
  _5 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_4);
  _6 = this->D.174557._M_impl.D.173902._M_finish;
  std::_Destroy<function_path*, function_path> (__pos, _6, _5);
  this->D.174557._M_impl.D.173902._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<function_path> > (_ZSt15__alloc_on_copyISaI13function_pathEEvRT_RKS2_, funcdef_no=8747, decl_uid=214503, cgraph_uid=5379, symbol_order=6168)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<function_path> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<function_path>::capacity (_ZNKSt6vectorI13function_pathSaIS0_EE8capacityEv, funcdef_no=8748, decl_uid=174203, cgraph_uid=5380, symbol_order=6169)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<function_path>::capacity (const struct vector * const this)
{
  size_type D.255087;

  <bb 2> :
  _1 = this->D.174557._M_impl.D.173902._M_end_of_storage;
  _2 = this->D.174557._M_impl.D.173902._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.255087 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.255087;

}



;; Function std::vector<function_path>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (_ZNSt6vectorI13function_pathSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8749, decl_uid=214510, cgraph_uid=5381, symbol_order=6170)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct function_path * std::vector<function_path>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct function_path * D.255091;
  struct function_path * __result;
  struct function_path * D.255089;

  <bb 2> :
  _1 = &this->D.174557;
  D.255091 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_allocate (_1, __n);
  __result = D.255091;
  _2 = &this->D.174557;
  _3 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*, function_path> (__first, __last, __result, _3);

  <bb 3> :
  D.255089 = __result;

  <bb 4> :
<L0>:
  return D.255089;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.174557;
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8750, decl_uid=214518, cgraph_uid=5382, symbol_order=6171)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.255097;
  struct __normal_iterator D.255096;
  struct __normal_iterator D.255095;

  <bb 2> :
  D.255096 = std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (__last);
  D.255097 = std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (__first);
  D.255095 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (D.255097, D.255096, __result);

  <bb 3> :
<L0>:
  return D.255095;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9561, decl_uid=227195, cgraph_uid=6194, symbol_order=6983)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct function_path * D.255101;
  struct __normal_iterator D.255099;

  <bb 2> :
  _1 = std::__niter_base<function_path*, std::vector<function_path> > (__result);
  _2 = std::__niter_base<const function_path*, std::vector<function_path> > (__last);
  _3 = std::__niter_base<const function_path*, std::vector<function_path> > (__first);
  D.255101 = std::__copy_move_a1<false, const function_path*, function_path*> (_3, _2, _1);
  _4 = D.255101;
  D.255099 = std::__niter_wrap<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path*> (__result, _4);

  <bb 3> :
<L0>:
  return D.255099;

}



;; Function std::__niter_base<function_path*, std::vector<function_path> > (_ZSt12__niter_baseIP13function_pathSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10151, decl_uid=235660, cgraph_uid=6783, symbol_order=7576)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__niter_base<function_path*, std::vector<function_path> > (struct __normal_iterator __it)
{
  struct function_path * D.255102;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (&__it);
  D.255102 = *_1;

  <bb 3> :
<L0>:
  return D.255102;

}



;; Function __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=8757, decl_uid=201898, cgraph_uid=5389, symbol_order=6178)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * const & __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (const struct __normal_iterator * const this)
{
  struct function_path * const & D.255104;

  <bb 2> :
  D.255104 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.255104;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10153, decl_uid=235667, cgraph_uid=6785, symbol_order=7578)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path*> (struct __normal_iterator __from, struct function_path * __res)
{
  struct __normal_iterator D.255106;

  <bb 2> :
  _1 = std::__niter_base<function_path*, std::vector<function_path> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 24;
  D.255106 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.255106;

}



;; Function __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10614, decl_uid=201889, cgraph_uid=7246, symbol_order=8039)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct function_path * const D.243666;
  struct __normal_iterator D.243667;
  struct __normal_iterator D.255108;

  <bb 2> :
  _1 = this->_M_current;
  __n.1838_2 = (long unsigned int) __n;
  _3 = __n.1838_2 * 24;
  _4 = _1 + _3;
  D.243666 = _4;
  __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::__normal_iterator (&D.243667, &D.243666);
  D.255108 = D.243667;
  D.243667 = {CLOBBER};
  D.243666 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.255108;

}



;; Function __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=8755, decl_uid=201911, cgraph_uid=5387, symbol_order=6176)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::__normal_iterator (struct __normal_iterator * const this, struct function_path * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8751, decl_uid=214524, cgraph_uid=5383, symbol_order=6172)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.227224)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9563, decl_uid=227226, cgraph_uid=6195, symbol_order=6984)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10154, decl_uid=235691, cgraph_uid=6786, symbol_order=7579)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (struct __normal_iterator D.240442, struct __normal_iterator D.240443)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<function_path*, function_path*> (_ZSt4copyIP13function_pathS1_ET0_T_S3_S2_, funcdef_no=8752, decl_uid=214532, cgraph_uid=5384, symbol_order=6173)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::copy<function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.255114;
  struct function_path * D.255112;

  <bb 2> :
  _1 = std::__miter_base<function_path*> (__last);
  _2 = std::__miter_base<function_path*> (__first);
  D.255114 = std::__copy_move_a<false, function_path*, function_path*> (_2, _1, __result);
  D.255112 = D.255114;

  <bb 3> :
<L0>:
  return D.255112;

}



;; Function std::__miter_base<function_path*> (_ZSt12__miter_baseIP13function_pathET_S2_, funcdef_no=9564, decl_uid=227242, cgraph_uid=6196, symbol_order=6985)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__miter_base<function_path*> (struct function_path * __it)
{
  struct function_path * D.255115;

  <bb 2> :
  D.255115 = __it;

  <bb 3> :
<L0>:
  return D.255115;

}



;; Function std::__copy_move_a<false, function_path*, function_path*> (_ZSt13__copy_move_aILb0EP13function_pathS1_ET1_T0_S3_S2_, funcdef_no=9565, decl_uid=227244, cgraph_uid=6197, symbol_order=6986)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a<false, function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.255119;
  struct function_path * D.255117;

  <bb 2> :
  __result.1839_1 = __result;
  _2 = std::__niter_base<function_path*> (__result.1839_1);
  _3 = std::__niter_base<function_path*> (__last);
  _4 = std::__niter_base<function_path*> (__first);
  D.255119 = std::__copy_move_a1<false, function_path*, function_path*> (_4, _3, _2);
  _5 = D.255119;
  D.255117 = std::__niter_wrap<function_path*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.255117;

}



;; Function std::__copy_move_a1<false, function_path*, function_path*> (_ZSt14__copy_move_a1ILb0EP13function_pathS1_ET1_T0_S3_S2_, funcdef_no=10156, decl_uid=235702, cgraph_uid=6788, symbol_order=7581)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a1<false, function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.255122;
  struct function_path * D.255120;

  <bb 2> :
  D.255122 = std::__copy_move_a2<false, function_path*, function_path*> (__first, __last, __result);
  D.255120 = D.255122;

  <bb 3> :
<L0>:
  return D.255120;

}



;; Function std::__copy_move_a2<false, function_path*, function_path*> (_ZSt14__copy_move_a2ILb0EP13function_pathS1_ET1_T0_S3_S2_, funcdef_no=10615, decl_uid=240451, cgraph_uid=7247, symbol_order=8040)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a2<false, function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.255123;

  <bb 2> :
  D.255123 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<function_path> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.255123;

}



;; Function std::__uninitialized_copy_a<function_path*, function_path*, function_path> (_ZSt22__uninitialized_copy_aIP13function_pathS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8753, decl_uid=214536, cgraph_uid=5385, symbol_order=6174)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__uninitialized_copy_a<function_path*, function_path*, function_path> (struct function_path * __first, struct function_path * __last, struct function_path * __result, struct allocator & D.227251)
{
  struct function_path * D.255127;
  struct function_path * D.255125;

  <bb 2> :
  D.255127 = std::uninitialized_copy<function_path*, function_path*> (__first, __last, __result);
  D.255125 = D.255127;

  <bb 3> :
<L0>:
  return D.255125;

}



;; Function std::uninitialized_copy<function_path*, function_path*> (_ZSt18uninitialized_copyIP13function_pathS1_ET0_T_S3_S2_, funcdef_no=9566, decl_uid=227253, cgraph_uid=6198, symbol_order=6987)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::uninitialized_copy<function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.255130;
  const bool __assignable;
  struct function_path * D.255128;

  <bb 2> :
  __assignable = 1;
  D.255130 = std::__uninitialized_copy<true>::__uninit_copy<function_path*, function_path*> (__first, __last, __result);
  D.255128 = D.255130;

  <bb 3> :
<L0>:
  return D.255128;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<function_path*, function_path*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIP13function_pathS3_EET0_T_S5_S4_, funcdef_no=10158, decl_uid=235740, cgraph_uid=6790, symbol_order=7583)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__uninitialized_copy<true>::__uninit_copy<function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.255133;
  struct function_path * D.255131;

  <bb 2> :
  D.255133 = std::copy<function_path*, function_path*> (__first, __last, __result);
  D.255131 = D.255133;

  <bb 3> :
<L0>:
  return D.255131;

}



;; Function cgraph_node::ultimate_alias_target (_ZN11cgraph_node21ultimate_alias_targetEP12availabilityP11symtab_node, funcdef_no=2586, decl_uid=97088, cgraph_uid=1723, symbol_order=1883)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct cgraph_node * cgraph_node::ultimate_alias_target (struct cgraph_node * const this, availability * availability, struct symtab_node * ref)
{
  struct cgraph_node * D.255142;
  struct symtab_node * D.255141;
  struct cgraph_node * n;
  struct cgraph_node * D.255139;

  <bb 2> :
  _1 = &this->D.97512;
  D.255141 = symtab_node::ultimate_alias_target (_1, availability, ref);
  _2 = D.255141;
  D.255142 = dyn_cast<cgraph_node*, symtab_node> (_2);
  n = D.255142;
  if (n == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  if (availability != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  *availability = 1;

  <bb 5> :
  D.255139 = n;

  <bb 6> :
<L5>:
  return D.255139;

}



;; Function symtab_node::ultimate_alias_target (_ZN11symtab_node21ultimate_alias_targetEP12availabilityPS_, funcdef_no=2585, decl_uid=96460, cgraph_uid=1722, symbol_order=1882)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
struct symtab_node * symtab_node::ultimate_alias_target (struct symtab_node * const this, availability * availability, struct symtab_node * ref)
{
  struct symtab_node * D.255151;
  availability D.255150;
  struct symtab_node * D.255148;

  <bb 2> :
  _1 = BIT_FIELD_REF <*this, 8, 16>;
  _2 = _1 & 2;
  if (_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (availability != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.255150 = symtab_node::get_availability (this, ref);
  _3 = D.255150;
  *availability = _3;

  <bb 5> :
  D.255148 = this;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  D.255151 = symtab_node::ultimate_alias_target_1 (this, availability, ref);
  D.255148 = D.255151;

  <bb 7> :
<L5>:
  return D.255148;

}



;; Function symtab_node::get_availability (_ZN11symtab_node16get_availabilityEPS_, funcdef_no=2597, decl_uid=96516, cgraph_uid=1734, symbol_order=1894)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
availability symtab_node::get_availability (struct symtab_node * const this, struct symtab_node * ref)
{
  availability D.255160;
  struct varpool_node * D.255159;
  availability D.255158;
  struct cgraph_node * D.255157;
  availability D.255155;
  bool retval.1840;

  <bb 2> :
  retval.1840 = is_a<cgraph_node*, symtab_node> (this);
  if (retval.1840 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.255157 = dyn_cast<cgraph_node*, symtab_node> (this);
  _1 = D.255157;
  D.255158 = cgraph_node::get_availability (_1, ref);
  D.255155 = D.255158;
  goto <bb 5>; [INV]

  <bb 4> :
  D.255159 = dyn_cast<varpool_node*, symtab_node> (this);
  _2 = D.255159;
  D.255160 = varpool_node::get_availability (_2, ref);
  D.255155 = D.255160;

  <bb 5> :
<L2>:
  return D.255155;

}



;; Function dyn_cast<varpool_node*, symtab_node> (_Z8dyn_castIP12varpool_node11symtab_nodeET_PT0_, funcdef_no=7086, decl_uid=99587, cgraph_uid=3718, symbol_order=4500)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct varpool_node * dyn_cast<varpool_node*, symtab_node> (struct symtab_node * p)
{
  struct varpool_node * D.255164;
  bool retval.1841;

  <bb 2> :
  retval.1841 = is_a<varpool_node*, symtab_node> (p);
  if (retval.1841 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.255164 = reinterpret_is_a_helper<varpool_node*>::cast<symtab_node> (p);
  goto <bb 5>; [INV]

  <bb 4> :
  D.255164 = 0B;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
<L2>:
  return D.255164;

}



;; Function is_a<varpool_node*, symtab_node> (_Z4is_aIP12varpool_node11symtab_nodeEbPT0_, funcdef_no=7089, decl_uid=99946, cgraph_uid=3721, symbol_order=4503)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool is_a<varpool_node*, symtab_node> (struct symtab_node * p)
{
  bool D.255166;

  <bb 2> :
  D.255166 = is_a_helper<varpool_node*>::test<symtab_node> (p);

  <bb 3> :
<L0>:
  return D.255166;

}



;; Function is_a_helper<varpool_node*>::test<symtab_node> (_ZN11is_a_helperIP12varpool_nodeE4testI11symtab_nodeEEbPT_, funcdef_no=2533, decl_uid=98472, cgraph_uid=1670, symbol_order=1830)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool is_a_helper<varpool_node*>::test<symtab_node> (struct symtab_node * p)
{
  bool iftmp.1842;
  bool D.255168;

  <bb 2> :
  if (p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _1 = p->type;
  if (_1 == 2)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1842 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1842 = 0;

  <bb 6> :
  D.255168 = iftmp.1842;

  <bb 7> :
<L4>:
  return D.255168;

}



;; Function reinterpret_is_a_helper<varpool_node*>::cast<symtab_node> (_ZN23reinterpret_is_a_helperIP12varpool_nodeE4castI11symtab_nodeEES1_PT_, funcdef_no=8097, decl_uid=206100, cgraph_uid=4729, symbol_order=5514)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct varpool_node * reinterpret_is_a_helper<varpool_node*>::cast<symtab_node> (struct symtab_node * p)
{
  struct varpool_node * D.255175;

  <bb 2> :
  D.255175 = p;

  <bb 3> :
<L0>:
  return D.255175;

}



;; Function std::vector<function_path>::begin (_ZNSt6vectorI13function_pathSaIS0_EE5beginEv, funcdef_no=7801, decl_uid=174166, cgraph_uid=4433, symbol_order=5218)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<function_path>::begin (struct vector * const this)
{
  struct iterator D.214547;
  struct iterator D.255177;

  <bb 2> :
  _1 = &this->D.174557._M_impl.D.173902._M_start;
  __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::__normal_iterator (&D.214547, _1);
  D.255177 = D.214547;
  D.214547 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.255177;

}



;; Function __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator-> (_ZNK9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS1_SaIS1_EEEptEv, funcdef_no=7805, decl_uid=201871, cgraph_uid=4437, symbol_order=5222)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator-> (const struct __normal_iterator * const this)
{
  struct function_path * D.255180;

  <bb 2> :
  D.255180 = this->_M_current;

  <bb 3> :
<L0>:
  return D.255180;

}



;; Function __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS1_SaIS1_EEEppEv, funcdef_no=7804, decl_uid=201873, cgraph_uid=4436, symbol_order=5221)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.255182;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 24;
  this->_M_current = _2;
  D.255182 = this;

  <bb 3> :
<L0>:
  return D.255182;

}



;; Function std::vector<function_path>::end (_ZNSt6vectorI13function_pathSaIS0_EE3endEv, funcdef_no=7802, decl_uid=174170, cgraph_uid=4434, symbol_order=5219)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<function_path>::end (struct vector * const this)
{
  struct iterator D.214549;
  struct iterator D.255184;

  <bb 2> :
  _1 = &this->D.174557._M_impl.D.173902._M_finish;
  __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::__normal_iterator (&D.214549, _1);
  D.255184 = D.214549;
  D.214549 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.255184;

}



;; Function __gnu_cxx::operator!=<function_path*, std::vector<function_path> > (_ZN9__gnu_cxxneIP13function_pathSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_, funcdef_no=7803, decl_uid=201971, cgraph_uid=4435, symbol_order=5220)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<function_path*, std::vector<function_path> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.255187;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (__rhs);
  _4 = *_3;
  D.255187 = _2 != _4;

  <bb 3> :
<L0>:
  return D.255187;

}



;; Function std::vector<function_path>::push_back (_ZNSt6vectorI13function_pathSaIS0_EE9push_backERKS0_, funcdef_no=7806, decl_uid=174237, cgraph_uid=4439, symbol_order=5224)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<function_path>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.255192;

  <bb 2> :
  _1 = this->D.174557._M_impl.D.173902._M_finish;
  _2 = this->D.174557._M_impl.D.173902._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.174557._M_impl.D.173902._M_finish;
  _4 = &this->D.174557._M_impl;
  std::allocator_traits<std::allocator<function_path> >::construct<function_path, const function_path&> (_4, _3, __x);
  _5 = this->D.174557._M_impl.D.173902._M_finish;
  _6 = _5 + 24;
  this->D.174557._M_impl.D.173902._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.255192 = std::vector<function_path>::end (this);
  std::vector<function_path>::_M_realloc_insert<const function_path&> (this, D.255192, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<function_path> >::construct<function_path, const function_path&> (_ZNSt16allocator_traitsISaI13function_pathEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8758, decl_uid=214557, cgraph_uid=5390, symbol_order=6179)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<function_path> >::construct<function_path, const function_path&> (struct allocator_type & __a, struct function_path * __p, const struct function_path & __args#0)
{
  <bb 2> :
  _1 = std::forward<const function_path&> (__args#0);
  __gnu_cxx::new_allocator<function_path>::construct<function_path, const function_path&> (__a, __p, _1);
  return;

}



;; Function std::forward<const function_path&> (_ZSt7forwardIRK13function_pathEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9567, decl_uid=227273, cgraph_uid=6199, symbol_order=6988)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct function_path & std::forward<const function_path&> (const struct type & __t)
{
  const struct function_path & D.255193;

  <bb 2> :
  D.255193 = __t;

  <bb 3> :
<L0>:
  return D.255193;

}



;; Function __gnu_cxx::new_allocator<function_path>::construct<function_path, const function_path&> (_ZN9__gnu_cxx13new_allocatorI13function_pathE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9568, decl_uid=227275, cgraph_uid=6200, symbol_order=6989)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<function_path>::construct<function_path, const function_path&> (struct new_allocator * const this, struct function_path * __p, const struct function_path & __args#0)
{
  void * D.235752;
  void * D.235751;
  const struct function_path * D.235753;

  <bb 2> :
  D.235753 = std::forward<const function_path&> (__args#0);
  D.235751 = __p;
  D.235752 = operator new (24, D.235751);
  MEM[(struct function_path *)D.235752] = *D.235753;
  return;

}



;; Function std::vector<function_path>::_M_realloc_insert<const function_path&> (_ZNSt6vectorI13function_pathSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8759, decl_uid=214726, cgraph_uid=5394, symbol_order=6183)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<function_path>::_M_realloc_insert<const function_path&> (struct vector * const this, struct iterator __position, const struct function_path & __args#0)
{
  struct function_path * D.255199;
  const size_type D.255198;
  struct function_path * __new_finish;
  struct function_path * __new_start;
  const size_type __elems_before;
  struct function_path * __old_finish;
  struct function_path * __old_start;
  const size_type __len;
  struct iterator D.227286;

  <bb 2> :
  D.255198 = std::vector<function_path>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.255198;
  __old_start = this->D.174557._M_impl.D.173902._M_start;
  __old_finish = this->D.174557._M_impl.D.173902._M_finish;
  D.227286 = std::vector<function_path>::begin (this);
  _1 = __gnu_cxx::operator-<function_path*, std::vector<function_path> > (&__position, &D.227286);
  __elems_before = (const size_type) _1;
  D.227286 = {CLOBBER};
  _2 = &this->D.174557;
  D.255199 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_allocate (_2, __len);
  __new_start = D.255199;
  __new_finish = __new_start;
  _3 = std::forward<const function_path&> (__args#0);
  _4 = __elems_before * 24;
  _5 = __new_start + _4;
  _6 = &this->D.174557._M_impl;
  std::allocator_traits<std::allocator<function_path> >::construct<function_path, const function_path&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.174557;
  _8 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<function_path>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 24;
  _11 = &this->D.174557;
  _12 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<function_path>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.174557;
  _23 = this->D.174557._M_impl.D.173902._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 24;
  _26 = (long unsigned int) _25;
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (_22, __old_start, _26);
  this->D.174557._M_impl.D.173902._M_start = __new_start;
  this->D.174557._M_impl.D.173902._M_finish = __new_finish;
  _27 = __len * 24;
  _28 = __new_start + _27;
  this->D.174557._M_impl.D.173902._M_end_of_storage = _28;
  return;

}



;; Function std::vector<function_path>::_M_check_len (_ZNKSt6vectorI13function_pathSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9569, decl_uid=174406, cgraph_uid=6201, symbol_order=6990)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<function_path>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.1845;
  size_type D.255203;
  const long unsigned int D.235758;
  bool retval.1843;

  <bb 2> :
  _1 = std::vector<function_path>::max_size (this);
  _2 = std::vector<function_path>::size (this);
  _3 = _1 - _2;
  __n.1844_4 = __n;
  retval.1843 = _3 < __n.1844_4;
  if (retval.1843 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<function_path>::size (this);
  _6 = std::vector<function_path>::size (this);
  D.235758 = _6;
  _7 = std::max<long unsigned int> (&D.235758, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.235758 = {CLOBBER};
  _9 = std::vector<function_path>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<function_path>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1845 = std::vector<function_path>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1845 = __len;

  <bb 8> :
  D.255203 = iftmp.1845;

  <bb 9> :
<L6>:
  return D.255203;

}



;; Function std::vector<function_path>::max_size (_ZNKSt6vectorI13function_pathSaIS0_EE8max_sizeEv, funcdef_no=10159, decl_uid=174192, cgraph_uid=6791, symbol_order=7584)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<function_path>::max_size (const struct vector * const this)
{
  size_type D.255210;

  <bb 2> :
  _1 = &this->D.174557;
  _2 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_1);
  D.255210 = std::vector<function_path>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.255210;

}



;; Function std::vector<function_path>::_S_max_size (_ZNSt6vectorI13function_pathSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10616, decl_uid=174413, cgraph_uid=7248, symbol_order=8041)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<function_path>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.255212;

  <bb 2> :
  __diffmax = 384307168202282325;
  _1 = std::allocator_traits<std::allocator<function_path> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.255212 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.255212;

}



;; Function std::allocator_traits<std::allocator<function_path> >::max_size (_ZNSt16allocator_traitsISaI13function_pathEE8max_sizeERKS1_, funcdef_no=10812, decl_uid=173727, cgraph_uid=7444, symbol_order=8239)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<function_path> >::max_size (const struct allocator_type & __a)
{
  size_type D.255215;

  <bb 2> :
  D.255215 = __gnu_cxx::new_allocator<function_path>::max_size (__a);

  <bb 3> :
<L0>:
  return D.255215;

}



;; Function __gnu_cxx::new_allocator<function_path>::max_size (_ZNK9__gnu_cxx13new_allocatorI13function_pathE8max_sizeEv, funcdef_no=10908, decl_uid=173569, cgraph_uid=7540, symbol_order=8335)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<function_path>::max_size (const struct new_allocator * const this)
{
  size_type D.255217;

  <bb 2> :
  D.255217 = __gnu_cxx::new_allocator<function_path>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.255217;

}



;; Function __gnu_cxx::operator-<function_path*, std::vector<function_path> > (_ZN9__gnu_cxxmiIP13function_pathSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9570, decl_uid=227287, cgraph_uid=6202, symbol_order=6991)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<function_path*, std::vector<function_path> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.255219;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.255219 = _5 /[ex] 24;

  <bb 3> :
<L0>:
  return D.255219;

}



;; Function std::vector<function_path>::_S_relocate (_ZNSt6vectorI13function_pathSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9571, decl_uid=174064, cgraph_uid=6203, symbol_order=6992)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::vector<function_path>::_S_relocate (struct function_path * __first, struct function_path * __last, struct function_path * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.255222;
  struct function_path * D.255221;

  <bb 2> :
  D.255221 = std::vector<function_path>::_S_do_relocate (__first, __last, __result, __alloc, D.255222);

  <bb 3> :
<L0>:
  return D.255221;

}



;; Function std::vector<function_path>::_S_do_relocate (_ZNSt6vectorI13function_pathSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10160, decl_uid=174052, cgraph_uid=6792, symbol_order=7585)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::vector<function_path>::_S_do_relocate (struct function_path * __first, struct function_path * __last, struct function_path * __result, struct _Tp_alloc_type & __alloc, struct true_type D.240467)
{
  struct function_path * D.255224;

  <bb 2> :
  D.255224 = std::__relocate_a<function_path*, function_path*, std::allocator<function_path> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.255224;

}



;; Function std::__relocate_a<function_path*, function_path*, std::allocator<function_path> > (_ZSt12__relocate_aIP13function_pathS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10617, decl_uid=227451, cgraph_uid=7249, symbol_order=8042)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__relocate_a<function_path*, function_path*, std::allocator<function_path> > (struct function_path * __first, struct function_path * __last, struct function_path * __result, struct allocator & __alloc)
{
  struct function_path * D.255226;

  <bb 2> :
  _1 = std::__niter_base<function_path*> (__result);
  _2 = std::__niter_base<function_path*> (__last);
  _3 = std::__niter_base<function_path*> (__first);
  D.255226 = std::__relocate_a_1<function_path, function_path> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.255226;

}



;; Function std::__relocate_a_1<function_path, function_path> (_ZSt14__relocate_a_1I13function_pathS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E, funcdef_no=10813, decl_uid=227625, cgraph_uid=7445, symbol_order=8240)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct function_path * std::__relocate_a_1<function_path, function_path> (struct function_path * __first, struct function_path * __last, struct function_path * __result, struct allocator & D.244660)
{
  ptrdiff_t __count;
  struct function_path * D.255231;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 24;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.1846_2 = (long unsigned int) __count;
  _3 = __count.1846_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.1847_4 = (long unsigned int) __count;
  _5 = __count.1847_4 * 24;
  D.255231 = __result + _5;

  <bb 5> :
<L3>:
  return D.255231;

}



;; Function symbolicinfo::symbolicinfo (_ZN12symbolicinfoC2Ev, funcdef_no=6820, decl_uid=202023, cgraph_uid=3451, symbol_order=4228)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void symbolicinfo::symbolicinfo (struct symbolicinfo * const this)
{
  <bb 2> :
  _1 = &this->switchs;
  std::vector<basic_block_def*>::vector (_1);
  this->prevlogic = 1;
  _2 = &this->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::vector (_2);
  _3 = &this->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::vector (_3);
  _4 = &this->symbolicExecutionPathConstraintarrayFalse;
  std::vector<symbolicinfoPatharray>::vector (_4);
  return;

}



;; Function std::vector<symbolicinfoPatharray>::vector (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EEC2Ev, funcdef_no=6818, decl_uid=171337, cgraph_uid=3448, symbol_order=4225)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<symbolicinfoPatharray>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.171345;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EEC2Ev, funcdef_no=6816, decl_uid=170795, cgraph_uid=3445, symbol_order=4222)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE12_Vector_implC2Ev, funcdef_no=7809, decl_uid=170687, cgraph_uid=4441, symbol_order=5226)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<symbolicinfoPatharray>::allocator (this);
  _1 = &this->D.170690;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<symbolicinfoPatharray>::allocator (_ZNSaI21symbolicinfoPatharrayEC2Ev, funcdef_no=8764, decl_uid=170465, cgraph_uid=5396, symbol_order=6185)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<symbolicinfoPatharray>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (_ZN9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayEC2Ev, funcdef_no=9574, decl_uid=170394, cgraph_uid=6206, symbol_order=6995)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8767, decl_uid=170637, cgraph_uid=5399, symbol_order=6188)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function gimple_cond_rhs (_ZL15gimple_cond_rhsPK6gimple, funcdef_no=2181, decl_uid=93077, cgraph_uid=1318, symbol_order=1478)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_cond_rhs (const struct gimple * gs)
{
  const struct gcond * D.255235;
  const struct gcond * gc;
  union tree_node * D.255233;

  <bb 2> :
  D.255235 = GIMPLE_CHECK2<const gcond*> (gs);
  gc = D.255235;
  D.255233 = gimple_cond_rhs (gc);

  <bb 3> :
<L0>:
  return D.255233;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::put (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7820, decl_uid=196513, cgraph_uid=4456, symbol_order=5241)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<basic_block_def*, symbolicinfo>::put (struct hash_map * const this, struct basic_block_def * const & k, const struct symbolicinfo & v)
{
  bool D.255243;
  struct hash_entry * D.255242;
  unsigned int D.255241;
  bool ins;
  struct hash_entry * e;
  bool D.255239;
  void * D.214768;
  void * D.214767;

  <bb 2> :
  _1 = &this->m_table;
  D.255241 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::hash (k);
  _2 = D.255241;
  D.255242 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.255242;
  D.255243 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_empty (e);
  ins = D.255243;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.214767 = &e->m_value;
  D.214768 = operator new (160, D.214767);
  symbolicinfo::symbolicinfo (D.214768, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  symbolicinfo::operator= (_4, v);

  <bb 5> :
  D.255239 = ~ins;

  <bb 6> :
<L3>:
  return D.255239;

  <bb 7> :
<L4>:
  operator delete (D.214768, D.214767);
  resx 1

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8775, decl_uid=196671, cgraph_uid=5407, symbol_order=6196)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, struct basic_block_def * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.255294;
  bool D.255293;
  bool D.255292;
  bool D.255291;
  bool D.255290;
  bool D.255289;
  struct value_type * D.255288;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.1853;
  bool retval.1852;
  bool retval.1851;
  bool retval.1850;
  bool retval.1849;
  bool retval.1848;
  struct value_type * D.255250;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 168;
  entry = _11 + _13;
  size = this->m_size;
  D.255289 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1848 = D.255289;
  if (retval.1848 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.255290 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1849 = D.255290;
  if (retval.1849 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 168;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.255291 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (entry, comparable);
  retval.1850 = D.255291;
  if (retval.1850 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 168;
  D.255250 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 168;
  entry = _24 + _26;
  D.255292 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1851 = D.255292;
  if (retval.1851 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.255293 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1852 = D.255293;
  if (retval.1852 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 168;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.255294 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (entry, comparable);
  retval.1853 = D.255294;
  if (retval.1853 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 168;
  D.255250 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.255250 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.255250 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 168;
  D.255250 = _37 + _39;

  <bb 27> :
<L37>:
  return D.255250;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9579, decl_uid=196752, cgraph_uid=6229, symbol_order=7018)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.255325;
  unsigned int D.255324;
  bool D.255323;
  bool D.255322;
  struct mem_alloc_description & D.255321;
  struct value_type * D.255320;
  unsigned int D.255319;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.236115;
  void * D.236114;
  struct hash_entry & D.236158;
  bool iftmp.1857;
  bool retval.1856;
  bool iftmp.1855;
  bool retval.1854;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 168;
  olimit = oentries + _1;
  elts = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1855 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1855 = 0;

  <bb 6> :
  retval.1854 = iftmp.1855;
  if (retval.1854 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.255319 = hash_table_higher_prime_index (_5);
  nindex = D.255319;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.255320 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.255320;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.255322 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.255322;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.255323 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.255323;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.1857 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.1857 = 0;

  <bb 15> :
  retval.1856 = iftmp.1857;
  if (retval.1856 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.255324 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash (x);
  _16 = D.255324;
  D.255325 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.255325;
  D.236158 = std::move<hash_map<basic_block_def*, symbolicinfo>::hash_entry&> (x);
  D.236114 = q;
  D.236115 = operator new (168, D.236114);
  hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash_entry (D.236115, D.236158);

  <bb 17> :
  p = p + 168;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10164, decl_uid=196647, cgraph_uid=6796, symbol_order=7589)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.255326;

  <bb 2> :
  D.255326 = this->m_size;

  <bb 3> :
<L0>:
  return D.255326;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10165, decl_uid=196649, cgraph_uid=6797, symbol_order=7590)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.255328;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.255328 = _1 - _2;

  <bb 3> :
<L0>:
  return D.255328;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10166, decl_uid=196749, cgraph_uid=6798, symbol_order=7591)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.1858;
  bool D.255330;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1858 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1858 = 0;

  <bb 6> :
  D.255330 = iftmp.1858;

  <bb 7> :
<L4>:
  return D.255330;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9548, decl_uid=196739, cgraph_uid=6180, symbol_order=6969)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.255352;
  struct value_type * D.255351;
  struct mem_alloc_description & D.255350;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.255348;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.255351 = xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_alloc (n);
  nentries = D.255351;
  goto <bb 6>; [INV]

  <bb 5> :
  D.255352 = ggc_cleared_vec_alloc<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (n);
  nentries = D.255352;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.255348 = nentries;

  <bb 9> :
<L14>:
  return D.255348;

}



;; Function xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10143, decl_uid=216663, cgraph_uid=6775, symbol_order=7568)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.255355;
  struct hash_entry * D.255353;

  <bb 2> :
  D.255355 = xcalloc (count, 168);
  D.255353 = D.255355;

  <bb 3> :
<L0>:
  return D.255353;

}



;; Function ggc_cleared_vec_alloc<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10144, decl_uid=235450, cgraph_uid=6776, symbol_order=7569)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (size_t c)
{
  struct hash_entry * D.255362;
  struct hash_entry * D.255361;
  struct hash_entry * D.255359;
  bool retval.1859;

  <bb 2> :
  retval.1859 = need_finalization_p<hash_map<basic_block_def*, symbolicinfo>::hash_entry> ();
  if (retval.1859 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 168;
  D.255361 = ggc_internal_cleared_alloc (_1, finalize, 168, c);
  D.255359 = D.255361;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 168;
  D.255362 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.255359 = D.255362;

  <bb 5> :
<L2>:
  return D.255359;

}



;; Function finalize<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_Z8finalizeIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10605, decl_uid=240409, cgraph_uid=7240, symbol_order=8033)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<basic_block_def*, symbolicinfo>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::~hash_entry (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10607, decl_uid=243623, cgraph_uid=7238, symbol_order=8031)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  symbolicinfo::~symbolicinfo (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10604, decl_uid=240408, cgraph_uid=7236, symbol_order=8029)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<basic_block_def*, symbolicinfo>::hash_entry> ()
{
  bool D.255363;

  <bb 2> :
  D.255363 = 1;

  <bb 3> :
<L0>:
  return D.255363;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10168, decl_uid=196572, cgraph_uid=6800, symbol_order=7593)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.255367;
  hashval_t D.255365;

  <bb 2> :
  _1 = &e->m_key;
  D.255367 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::hash (_1);
  D.255365 = D.255367;

  <bb 3> :
<L0>:
  return D.255365;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10167, decl_uid=196742, cgraph_uid=6799, symbol_order=7592)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.255380;
  bool D.255379;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.1861;
  struct value_type * D.255371;
  bool retval.1860;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 168;
  slot = _2 + _4;
  D.255379 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1860 = D.255379;
  if (retval.1860 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.255371 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 168;
  slot = _8 + _10;
  D.255380 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1861 = D.255380;
  if (retval.1861 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.255371 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.255371;

}



;; Function std::move<hash_map<basic_block_def*, symbolicinfo>::hash_entry&> (_ZSt4moveIRN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10169, decl_uid=236112, cgraph_uid=6801, symbol_order=7594)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<basic_block_def*, symbolicinfo>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.255381;

  <bb 2> :
  D.255381 = __t;

  <bb 3> :
<L0>:
  return D.255381;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash_entry (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9596, decl_uid=236137, cgraph_uid=6227, symbol_order=7016)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.236139)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.236139->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.236139->m_value;
  symbolicinfo::symbolicinfo (_2, _3);
  return;

}



;; Function symbolicinfo::symbolicinfo (_ZN12symbolicinfoC2EOS_, funcdef_no=9594, decl_uid=202040, cgraph_uid=6224, symbol_order=7013)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void symbolicinfo::symbolicinfo (struct symbolicinfo * const this, struct symbolicinfo & D.202042)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.202042->cond_stmt;
  this->cond_stmt = _1;
  _2 = D.202042->switch_stmt;
  this->switch_stmt = _2;
  _3 = D.202042->cond_rhs;
  this->cond_rhs = _3;
  _4 = D.202042->cond_lhs;
  this->cond_lhs = _4;
  _5 = D.202042->node;
  this->node = _5;
  _6 = &this->switchs;
  _7 = &D.202042->switchs;
  std::vector<basic_block_def*>::vector (_6, _7);
  _8 = D.202042->cond_truebranch;
  this->cond_truebranch = _8;
  _9 = D.202042->cond_falsebranch;
  this->cond_falsebranch = _9;
  _10 = D.202042->prevlogic;
  this->prevlogic = _10;
  _11 = &this->symbolicExecutionPathConstraint;
  _12 = &D.202042->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::vector (_11, _12);
  _13 = &this->symbolicExecutionPathConstraintarrayTrue;
  _14 = &D.202042->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::vector (_13, _14);
  _15 = &this->symbolicExecutionPathConstraintarrayFalse;
  _16 = &D.202042->symbolicExecutionPathConstraintarrayFalse;
  std::vector<symbolicinfoPatharray>::vector (_15, _16);
  return;

}



;; Function std::vector<basic_block_def*>::vector (_ZNSt6vectorIP15basic_block_defSaIS1_EEC2EOS3_, funcdef_no=9586, decl_uid=170257, cgraph_uid=6215, symbol_order=7004)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<basic_block_def*>::vector (struct vector * const this, struct vector & D.170259)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.170300;
  _2 = &D.170259->D.170300;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EEC2EOS3_, funcdef_no=9584, decl_uid=169725, cgraph_uid=6212, symbol_order=7001)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.169727)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.169727->_M_impl;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE12_Vector_implC2EOS4_, funcdef_no=10171, decl_uid=169631, cgraph_uid=6803, symbol_order=7596)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl&> (__x);
  std::allocator<basic_block_def*>::allocator (this, _1);
  _2 = &this->D.169645;
  _3 = std::move<std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl&> (__x);
  _4 = &_3->D.169645;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::allocator<basic_block_def*>::allocator (_ZNSaIP15basic_block_defEC2ERKS1_, funcdef_no=10620, decl_uid=169415, cgraph_uid=7252, symbol_order=8045)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<basic_block_def*>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defEC2ERKS3_, funcdef_no=10815, decl_uid=169344, cgraph_uid=7447, symbol_order=8242)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.169346)
{
  <bb 2> :
  return;

}



;; Function std::move<std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseIP15basic_block_defSaIS2_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS8_, funcdef_no=10618, decl_uid=240503, cgraph_uid=7250, symbol_order=8043)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.255383;

  <bb 2> :
  D.255383 = __t;

  <bb 3> :
<L0>:
  return D.255383;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE17_Vector_impl_dataC2EOS4_, funcdef_no=10623, decl_uid=169587, cgraph_uid=7255, symbol_order=8048)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function std::vector<symbolicinfoPatharray>::vector (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EEC2EOS2_, funcdef_no=9592, decl_uid=171302, cgraph_uid=6221, symbol_order=7010)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<symbolicinfoPatharray>::vector (struct vector * const this, struct vector & D.171304)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.171345;
  _2 = &D.171304->D.171345;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EEC2EOS2_, funcdef_no=9590, decl_uid=170770, cgraph_uid=6218, symbol_order=7007)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.170772)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.170772->_M_impl;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10174, decl_uid=170676, cgraph_uid=6806, symbol_order=7599)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl&> (__x);
  std::allocator<symbolicinfoPatharray>::allocator (this, _1);
  _2 = &this->D.170690;
  _3 = std::move<std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl&> (__x);
  _4 = &_3->D.170690;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::allocator<symbolicinfoPatharray>::allocator (_ZNSaI21symbolicinfoPatharrayEC2ERKS0_, funcdef_no=10627, decl_uid=170460, cgraph_uid=7259, symbol_order=8052)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<symbolicinfoPatharray>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (_ZN9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayEC2ERKS2_, funcdef_no=10818, decl_uid=170389, cgraph_uid=7450, symbol_order=8245)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.170391)
{
  <bb 2> :
  return;

}



;; Function std::move<std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI21symbolicinfoPatharraySaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10625, decl_uid=240523, cgraph_uid=7257, symbol_order=8050)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.255385;

  <bb 2> :
  D.255385 = __t;

  <bb 3> :
<L0>:
  return D.255385;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10630, decl_uid=170632, cgraph_uid=7262, symbol_order=8055)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8896, decl_uid=216665, cgraph_uid=5528, symbol_order=6317)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9598, decl_uid=196760, cgraph_uid=6230, symbol_order=7019)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<basic_block_def*, symbolicinfo>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::mark_empty (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10176, decl_uid=196584, cgraph_uid=6808, symbol_order=7601)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::mark_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::mark_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10632, decl_uid=240538, cgraph_uid=7264, symbol_order=8057)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::mark_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<basic_block_def>::mark_empty (_1);
  return;

}



;; Function pointer_hash<basic_block_def>::mark_empty (_ZN12pointer_hashI15basic_block_defE10mark_emptyERPS0_, funcdef_no=10820, decl_uid=196438, cgraph_uid=7452, symbol_order=8247)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void pointer_hash<basic_block_def>::mark_empty (struct basic_block_def * & e)
{
  <bb 2> :
  *e = 0B;
  return;

}



;; Function symbolicinfo::symbolicinfo (_ZN12symbolicinfoC2ERKS_, funcdef_no=7822, decl_uid=202031, cgraph_uid=4453, symbol_order=5238)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 8 3 }
;; 3 succs { 7 4 }
;; 4 succs { 6 5 }
;; 5 succs { 1 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { }
void symbolicinfo::symbolicinfo (struct symbolicinfo * const this, const struct symbolicinfo & D.202033)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.202033->cond_stmt;
  this->cond_stmt = _1;
  _2 = D.202033->switch_stmt;
  this->switch_stmt = _2;
  _3 = D.202033->cond_rhs;
  this->cond_rhs = _3;
  _4 = D.202033->cond_lhs;
  this->cond_lhs = _4;
  _5 = D.202033->node;
  this->node = _5;
  _6 = &this->switchs;
  _7 = &D.202033->switchs;
  std::vector<basic_block_def*>::vector (_6, _7);
  _8 = D.202033->cond_truebranch;
  this->cond_truebranch = _8;
  _9 = D.202033->cond_falsebranch;
  this->cond_falsebranch = _9;
  _10 = D.202033->prevlogic;
  this->prevlogic = _10;
  _11 = &this->symbolicExecutionPathConstraint;
  _12 = &D.202033->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::vector (_11, _12);

  <bb 3> :
  _13 = &this->symbolicExecutionPathConstraintarrayTrue;
  _14 = &D.202033->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::vector (_13, _14);

  <bb 4> :
  _15 = &this->symbolicExecutionPathConstraintarrayFalse;
  _16 = &D.202033->symbolicExecutionPathConstraintarrayFalse;
  std::vector<symbolicinfoPatharray>::vector (_15, _16);

  <bb 5> :
  return;

  <bb 6> :
<L0>:
  _18 = &this->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::~vector (_18);
  resx 3

  <bb 7> :
<L1>:
  _19 = &this->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::~vector (_19);
  resx 2

  <bb 8> :
<L2>:
  _20 = &this->switchs;
  std::vector<basic_block_def*>::~vector (_20);
  resx 1

}



;; Function std::vector<basic_block_def*>::vector (_ZNSt6vectorIP15basic_block_defSaIS1_EEC2ERKS3_, funcdef_no=8778, decl_uid=170263, cgraph_uid=5410, symbol_order=6199)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<basic_block_def*>::vector (struct vector * const this, const struct vector & __x)
{
  struct basic_block_def * * D.255395;
  struct __normal_iterator D.255392;
  struct __normal_iterator D.255391;
  struct allocator D.227961;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.170300;
  _2 = &__x->D.170300;
  _3 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_2);
  D.227961 = __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<basic_block_def*>::size (__x);
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_1, _4, &D.227961);

  <bb 3> :
  std::allocator<basic_block_def*>::~allocator (&D.227961);
  D.227961 = {CLOBBER};
  _5 = &this->D.170300;
  _6 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_5);
  _7 = this->D.170300._M_impl.D.169645._M_start;
  D.255391 = std::vector<basic_block_def*>::end (__x);
  D.255392 = std::vector<basic_block_def*>::begin (__x);
  D.255395 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**, basic_block_def*> (D.255392, D.255391, _7, _6);

  <bb 4> :
  _8 = D.255395;
  this->D.170300._M_impl.D.169645._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<basic_block_def*>::~allocator (&D.227961);
  resx 2

  <bb 6> :
<L1>:
  D.227961 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.170300;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::~_Vector_base (_9);
  resx 5

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaIP15basic_block_defES2_E17_S_select_on_copyERKS3_, funcdef_no=9599, decl_uid=169507, cgraph_uid=6231, symbol_order=7020)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<basic_block_def*> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<basic_block_def*> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaIP15basic_block_defEE37select_on_container_copy_constructionERKS2_, funcdef_no=10177, decl_uid=169472, cgraph_uid=6809, symbol_order=7602)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<basic_block_def*> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<basic_block_def*>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EEC2EmRKS2_, funcdef_no=9602, decl_uid=169732, cgraph_uid=6234, symbol_order=7023)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE12_Vector_implC2ERKS2_, funcdef_no=10179, decl_uid=169637, cgraph_uid=6811, symbol_order=7604)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<basic_block_def*>::allocator (this, __a);
  _1 = &this->D.169645;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_create_storage (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE17_M_create_storageEm, funcdef_no=10181, decl_uid=169656, cgraph_uid=6813, symbol_order=7606)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct basic_block_def * * D.255402;

  <bb 2> :
  D.255402 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_allocate (this, __n);
  _1 = D.255402;
  this->_M_impl.D.169645._M_start = _1;
  _2 = this->_M_impl.D.169645._M_start;
  this->_M_impl.D.169645._M_finish = _2;
  _3 = this->_M_impl.D.169645._M_start;
  _4 = __n * 8;
  _5 = _3 + _4;
  this->_M_impl.D.169645._M_end_of_storage = _5;
  return;

}



;; Function std::vector<basic_block_def*>::end (_ZNKSt6vectorIP15basic_block_defSaIS1_EE3endEv, funcdef_no=9605, decl_uid=169915, cgraph_uid=6237, symbol_order=7026)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<basic_block_def*>::end (const struct vector * const this)
{
  struct const_iterator D.236194;
  struct const_iterator D.255403;

  <bb 2> :
  _1 = &this->D.170300._M_impl.D.169645._M_finish;
  __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::__normal_iterator (&D.236194, _1);
  D.255403 = D.236194;
  D.236194 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.255403;

}



;; Function __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS2_SaIS2_EEEC2ERKS4_, funcdef_no=10183, decl_uid=227930, cgraph_uid=6815, symbol_order=7608)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::__normal_iterator (struct __normal_iterator * const this, struct basic_block_def * const * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<basic_block_def*>::begin (_ZNKSt6vectorIP15basic_block_defSaIS1_EE5beginEv, funcdef_no=9604, decl_uid=169911, cgraph_uid=6236, symbol_order=7025)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<basic_block_def*>::begin (const struct vector * const this)
{
  struct const_iterator D.236192;
  struct const_iterator D.255406;

  <bb 2> :
  _1 = &this->D.170300._M_impl.D.169645._M_start;
  __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::__normal_iterator (&D.236192, _1);
  D.255406 = D.236192;
  D.236192 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.255406;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**, basic_block_def*> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E, funcdef_no=9606, decl_uid=227950, cgraph_uid=6238, symbol_order=7027)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**, basic_block_def*> (struct __normal_iterator __first, struct __normal_iterator __last, struct basic_block_def * * __result, struct allocator & D.236198)
{
  struct basic_block_def * * D.255411;
  struct basic_block_def * * D.255409;

  <bb 2> :
  D.255411 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (__first, __last, __result);
  D.255409 = D.255411;

  <bb 3> :
<L0>:
  return D.255409;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_, funcdef_no=10185, decl_uid=236200, cgraph_uid=6818, symbol_order=7611)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::uninitialized_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (struct __normal_iterator __first, struct __normal_iterator __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255414;
  const bool __assignable;
  struct basic_block_def * * D.255412;

  <bb 2> :
  __assignable = 1;
  D.255414 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (__first, __last, __result);
  D.255412 = D.255414;

  <bb 3> :
<L0>:
  return D.255412;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_, funcdef_no=10633, decl_uid=240655, cgraph_uid=7265, symbol_order=8058)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (struct __normal_iterator __first, struct __normal_iterator __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255417;
  struct basic_block_def * * D.255415;

  <bb 2> :
  D.255417 = std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (__first, __last, __result);
  D.255415 = D.255417;

  <bb 3> :
<L0>:
  return D.255415;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_, funcdef_no=10821, decl_uid=243735, cgraph_uid=7453, symbol_order=8248)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (struct __normal_iterator __first, struct __normal_iterator __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255422;
  struct __normal_iterator D.255420;
  struct __normal_iterator D.255419;
  struct basic_block_def * * D.255418;

  <bb 2> :
  D.255419 = std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (__last);
  D.255420 = std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (__first);
  D.255422 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (D.255420, D.255419, __result);
  D.255418 = D.255422;

  <bb 3> :
<L0>:
  return D.255418;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEEET_SA_, funcdef_no=10198, decl_uid=236304, cgraph_uid=6830, symbol_order=7623)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.255423;

  <bb 2> :
  D.255423 = __it;

  <bb 3> :
<L0>:
  return D.255423;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEEPS3_ET1_T0_SC_SB_, funcdef_no=10909, decl_uid=244681, cgraph_uid=7541, symbol_order=8336)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (struct __normal_iterator __first, struct __normal_iterator __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255427;
  struct basic_block_def * * D.255425;

  <bb 2> :
  __result.1862_1 = __result;
  _2 = std::__niter_base<basic_block_def**> (__result.1862_1);
  _3 = std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (__last);
  _4 = std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (__first);
  D.255427 = std::__copy_move_a1<false, basic_block_def* const*, basic_block_def**> (_4, _3, _2);
  _5 = D.255427;
  D.255425 = std::__niter_wrap<basic_block_def**> (&__result, _5);

  <bb 3> :
<L0>:
  return D.255425;

}



;; Function std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (_ZSt12__niter_baseIPKP15basic_block_defSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE, funcdef_no=10635, decl_uid=240824, cgraph_uid=7267, symbol_order=8060)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * const * std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (struct __normal_iterator __it)
{
  struct basic_block_def * const * D.255428;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::base (&__it);
  D.255428 = *_1;

  <bb 3> :
<L0>:
  return D.255428;

}



;; Function __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS2_SaIS2_EEE4baseEv, funcdef_no=10827, decl_uid=227917, cgraph_uid=7459, symbol_order=8254)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * const * const & __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::base (const struct __normal_iterator * const this)
{
  struct basic_block_def * const * const & D.255430;

  <bb 2> :
  D.255430 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.255430;

}



;; Function std::__copy_move_a1<false, basic_block_def* const*, basic_block_def**> (_ZSt14__copy_move_a1ILb0EPKP15basic_block_defPS1_ET1_T0_S6_S5_, funcdef_no=10637, decl_uid=240978, cgraph_uid=7269, symbol_order=8062)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a1<false, basic_block_def* const*, basic_block_def**> (struct basic_block_def * const * __first, struct basic_block_def * const * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255434;
  struct basic_block_def * * D.255432;

  <bb 2> :
  D.255434 = std::__copy_move_a2<false, basic_block_def* const*, basic_block_def**> (__first, __last, __result);
  D.255432 = D.255434;

  <bb 3> :
<L0>:
  return D.255432;

}



;; Function std::__copy_move_a2<false, basic_block_def* const*, basic_block_def**> (_ZSt14__copy_move_a2ILb0EPKP15basic_block_defPS1_ET1_T0_S6_S5_, funcdef_no=10828, decl_uid=243780, cgraph_uid=7460, symbol_order=8255)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a2<false, basic_block_def* const*, basic_block_def**> (struct basic_block_def * const * __first, struct basic_block_def * const * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255435;

  <bb 2> :
  D.255435 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<basic_block_def*> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.255435;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<basic_block_def*> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP15basic_block_defEEPT_PKS5_S8_S6_, funcdef_no=10911, decl_uid=244726, cgraph_uid=7543, symbol_order=8338)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct basic_block_def * * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<basic_block_def*> (struct basic_block_def * const * __first, struct basic_block_def * const * __last, struct basic_block_def * * __result)
{
  const ptrdiff_t _Num;
  struct basic_block_def * * D.255440;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 8;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.1863_2 = (long unsigned int) _Num;
  _3 = _Num.1863_2 * 8;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.1864_4 = (long unsigned int) _Num;
  _5 = _Num.1864_4 * 8;
  D.255440 = __result + _5;

  <bb 5> :
<L3>:
  return D.255440;

}



;; Function std::__niter_wrap<basic_block_def**> (_ZSt12__niter_wrapIPP15basic_block_defET_RKS3_S3_, funcdef_no=10642, decl_uid=241021, cgraph_uid=7274, symbol_order=8067)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__niter_wrap<basic_block_def**> (struct basic_block_def * * const & D.243802, struct basic_block_def * * __res)
{
  struct basic_block_def * * D.255442;

  <bb 2> :
  D.255442 = __res;

  <bb 3> :
<L0>:
  return D.255442;

}



;; Function std::vector<symbolicinfoPatharray>::vector (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EEC2ERKS2_, funcdef_no=8781, decl_uid=171308, cgraph_uid=5413, symbol_order=6202)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<symbolicinfoPatharray>::vector (struct vector * const this, const struct vector & __x)
{
  struct symbolicinfoPatharray * D.255448;
  struct __normal_iterator D.255445;
  struct __normal_iterator D.255444;
  struct allocator D.228078;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.171345;
  _2 = &__x->D.171345;
  _3 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_2);
  D.228078 = __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<symbolicinfoPatharray>::size (__x);
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_1, _4, &D.228078);

  <bb 3> :
  std::allocator<symbolicinfoPatharray>::~allocator (&D.228078);
  D.228078 = {CLOBBER};
  _5 = &this->D.171345;
  _6 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_5);
  _7 = this->D.171345._M_impl.D.170690._M_start;
  D.255444 = std::vector<symbolicinfoPatharray>::end (__x);
  D.255445 = std::vector<symbolicinfoPatharray>::begin (__x);
  D.255448 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*, symbolicinfoPatharray> (D.255445, D.255444, _7, _6);

  <bb 4> :
  _8 = D.255448;
  this->D.171345._M_impl.D.170690._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<symbolicinfoPatharray>::~allocator (&D.228078);
  resx 2

  <bb 6> :
<L1>:
  D.228078 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.171345;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=9609, decl_uid=170580, cgraph_uid=6241, symbol_order=7030)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.255450;

  <bb 2> :
  D.255450 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.255450;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI21symbolicinfoPatharrayES1_E17_S_select_on_copyERKS2_, funcdef_no=9608, decl_uid=170552, cgraph_uid=6240, symbol_order=7029)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<symbolicinfoPatharray> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<symbolicinfoPatharray> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI21symbolicinfoPatharrayEE37select_on_container_copy_constructionERKS1_, funcdef_no=10187, decl_uid=170517, cgraph_uid=6819, symbol_order=7612)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<symbolicinfoPatharray> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<symbolicinfoPatharray>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::vector<symbolicinfoPatharray>::size (_ZNKSt6vectorI21symbolicinfoPatharraySaIS0_EE4sizeEv, funcdef_no=9607, decl_uid=170978, cgraph_uid=6239, symbol_order=7028)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<symbolicinfoPatharray>::size (const struct vector * const this)
{
  size_type D.255456;

  <bb 2> :
  _1 = this->D.171345._M_impl.D.170690._M_finish;
  _2 = this->D.171345._M_impl.D.170690._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.255456 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.255456;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EEC2EmRKS1_, funcdef_no=9611, decl_uid=170777, cgraph_uid=6243, symbol_order=7032)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=10189, decl_uid=170682, cgraph_uid=6821, symbol_order=7614)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<symbolicinfoPatharray>::allocator (this, __a);
  _1 = &this->D.170690;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_create_storage (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE17_M_create_storageEm, funcdef_no=10191, decl_uid=170701, cgraph_uid=6823, symbol_order=7616)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct symbolicinfoPatharray * D.255459;

  <bb 2> :
  D.255459 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_allocate (this, __n);
  _1 = D.255459;
  this->_M_impl.D.170690._M_start = _1;
  _2 = this->_M_impl.D.170690._M_start;
  this->_M_impl.D.170690._M_finish = _2;
  _3 = this->_M_impl.D.170690._M_start;
  _4 = __n * 16;
  _5 = _3 + _4;
  this->_M_impl.D.170690._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_allocate (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE11_M_allocateEm, funcdef_no=10206, decl_uid=170694, cgraph_uid=6838, symbol_order=7631)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct symbolicinfoPatharray * std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct symbolicinfoPatharray * D.255466;
  struct symbolicinfoPatharray * iftmp.1865;
  struct symbolicinfoPatharray * D.255460;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.255466 = std::allocator_traits<std::allocator<symbolicinfoPatharray> >::allocate (_1, __n);
  iftmp.1865 = D.255466;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1865 = 0B;

  <bb 5> :
  D.255460 = iftmp.1865;

  <bb 6> :
<L3>:
  return D.255460;

}



;; Function std::allocator_traits<std::allocator<symbolicinfoPatharray> >::allocate (_ZNSt16allocator_traitsISaI21symbolicinfoPatharrayEE8allocateERS1_m, funcdef_no=10644, decl_uid=170495, cgraph_uid=7276, symbol_order=8069)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct symbolicinfoPatharray * std::allocator_traits<std::allocator<symbolicinfoPatharray> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct symbolicinfoPatharray * D.255469;
  struct symbolicinfoPatharray * D.255467;

  <bb 2> :
  D.255469 = __gnu_cxx::new_allocator<symbolicinfoPatharray>::allocate (__a, __n, 0B);
  D.255467 = D.255469;

  <bb 3> :
<L0>:
  return D.255467;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::allocate (_ZN9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayE8allocateEmPKv, funcdef_no=10831, decl_uid=170349, cgraph_uid=7464, symbol_order=8259)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct symbolicinfoPatharray * __gnu_cxx::new_allocator<symbolicinfoPatharray>::allocate (struct new_allocator * const this, size_type __n, const void * D.244745)
{
  struct symbolicinfoPatharray * D.255480;
  struct symbolicinfoPatharray * D.255479;
  align_val_t __al;
  struct symbolicinfoPatharray * D.255477;
  bool retval.1866;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<symbolicinfoPatharray>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.1866 = _4 != 0;
  if (retval.1866 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 1152921504606846975)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 16;
  D.255480 = operator new (_6);
  D.255477 = D.255480;

  <bb 7> :
<L6>:
  return D.255477;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayE11_M_max_sizeEv, funcdef_no=10832, decl_uid=170376, cgraph_uid=7463, symbol_order=8258)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<symbolicinfoPatharray>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.255481;

  <bb 2> :
  D.255481 = 576460752303423487;

  <bb 3> :
<L0>:
  return D.255481;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE12_Vector_implD2Ev, funcdef_no=6814, decl_uid=170737, cgraph_uid=3442, symbol_order=4219)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<symbolicinfoPatharray>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<symbolicinfoPatharray>::~allocator (_ZNSaI21symbolicinfoPatharrayED2Ev, funcdef_no=7812, decl_uid=170470, cgraph_uid=4444, symbol_order=5229)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<symbolicinfoPatharray>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<symbolicinfoPatharray>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayED2Ev, funcdef_no=8770, decl_uid=170399, cgraph_uid=5402, symbol_order=6191)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<symbolicinfoPatharray>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8773, decl_uid=170578, cgraph_uid=5405, symbol_order=6194)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.255483;

  <bb 2> :
  D.255483 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.255483;

}



;; Function std::vector<symbolicinfoPatharray>::end (_ZNKSt6vectorI21symbolicinfoPatharraySaIS0_EE3endEv, funcdef_no=9614, decl_uid=170960, cgraph_uid=6246, symbol_order=7035)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<symbolicinfoPatharray>::end (const struct vector * const this)
{
  struct const_iterator D.236248;
  struct const_iterator D.255485;

  <bb 2> :
  _1 = &this->D.171345._M_impl.D.170690._M_finish;
  __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (&D.236248, _1);
  D.255485 = D.236248;
  D.236248 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.255485;

}



;; Function __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=10193, decl_uid=228047, cgraph_uid=6825, symbol_order=7618)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (struct __normal_iterator * const this, const struct symbolicinfoPatharray * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<symbolicinfoPatharray>::begin (_ZNKSt6vectorI21symbolicinfoPatharraySaIS0_EE5beginEv, funcdef_no=9613, decl_uid=170956, cgraph_uid=6245, symbol_order=7034)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<symbolicinfoPatharray>::begin (const struct vector * const this)
{
  struct const_iterator D.236246;
  struct const_iterator D.255488;

  <bb 2> :
  _1 = &this->D.171345._M_impl.D.170690._M_start;
  __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (&D.236246, _1);
  D.255488 = D.236246;
  D.236246 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.255488;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*, symbolicinfoPatharray> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=9615, decl_uid=228067, cgraph_uid=6247, symbol_order=7036)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*, symbolicinfoPatharray> (struct __normal_iterator __first, struct __normal_iterator __last, struct symbolicinfoPatharray * __result, struct allocator & D.236252)
{
  struct symbolicinfoPatharray * D.255493;
  struct symbolicinfoPatharray * D.255491;

  <bb 2> :
  D.255493 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (__first, __last, __result);
  D.255491 = D.255493;

  <bb 3> :
<L0>:
  return D.255491;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10195, decl_uid=236254, cgraph_uid=6828, symbol_order=7621)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (struct __normal_iterator __first, struct __normal_iterator __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.255496;
  const bool __assignable;
  struct symbolicinfoPatharray * D.255494;

  <bb 2> :
  __assignable = 1;
  D.255496 = std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (__first, __last, __result);
  D.255494 = D.255496;

  <bb 3> :
<L0>:
  return D.255494;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10634, decl_uid=240806, cgraph_uid=7266, symbol_order=8059)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct symbolicinfoPatharray * std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (struct __normal_iterator __first, struct __normal_iterator __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * __cur;
  struct symbolicinfoPatharray * D.255498;
  bool retval.1867;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator* (&__first);
  _2 = std::__addressof<symbolicinfoPatharray> (__cur);
  std::_Construct<symbolicinfoPatharray, const symbolicinfoPatharray&> (_2, _1);
  __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator++ (&__first);
  __cur = __cur + 16;

  <bb 4> :
  retval.1867 = __gnu_cxx::operator!=<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (&__first, &__last);
  if (retval.1867 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.255498 = __cur;

  <bb 6> :
<L3>:
  return D.255498;

}



;; Function __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEdeEv, funcdef_no=10825, decl_uid=228005, cgraph_uid=7457, symbol_order=8252)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct symbolicinfoPatharray & __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator* (const struct __normal_iterator * const this)
{
  const struct symbolicinfoPatharray & D.255500;

  <bb 2> :
  D.255500 = this->_M_current;

  <bb 3> :
<L0>:
  return D.255500;

}



;; Function std::__addressof<symbolicinfoPatharray> (_ZSt11__addressofI21symbolicinfoPatharrayEPT_RS1_, funcdef_no=10824, decl_uid=243763, cgraph_uid=7456, symbol_order=8251)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__addressof<symbolicinfoPatharray> (struct symbolicinfoPatharray & __r)
{
  struct symbolicinfoPatharray * D.255502;

  <bb 2> :
  D.255502 = __r;

  <bb 3> :
<L0>:
  return D.255502;

}



;; Function std::_Construct<symbolicinfoPatharray, const symbolicinfoPatharray&> (_ZSt10_ConstructI21symbolicinfoPatharrayJRKS0_EEvPT_DpOT0_, funcdef_no=10826, decl_uid=243765, cgraph_uid=7458, symbol_order=8253)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<symbolicinfoPatharray, const symbolicinfoPatharray&> (struct symbolicinfoPatharray * __p, const struct symbolicinfoPatharray & __args#0)
{
  void * D.244707;
  void * D.244706;
  const struct symbolicinfoPatharray * D.244708;

  <bb 2> :
  D.244708 = std::forward<const symbolicinfoPatharray&> (__args#0);
  D.244706 = __p;
  D.244707 = operator new (16, D.244706);
  MEM[(struct symbolicinfoPatharray *)D.244707] = *D.244708;
  return;

}



;; Function std::forward<const symbolicinfoPatharray&> (_ZSt7forwardIRK21symbolicinfoPatharrayEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=10910, decl_uid=244704, cgraph_uid=7542, symbol_order=8337)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct symbolicinfoPatharray & std::forward<const symbolicinfoPatharray&> (const struct type & __t)
{
  const struct symbolicinfoPatharray & D.255504;

  <bb 2> :
  D.255504 = __t;

  <bb 3> :
<L0>:
  return D.255504;

}



;; Function __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEppEv, funcdef_no=10823, decl_uid=228009, cgraph_uid=7455, symbol_order=8250)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.255506;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 16;
  this->_M_current = _2;
  D.255506 = this;

  <bb 3> :
<L0>:
  return D.255506;

}



;; Function __gnu_cxx::operator!=<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (_ZN9__gnu_cxxneIPK21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_, funcdef_no=10822, decl_uid=243756, cgraph_uid=7454, symbol_order=8249)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.255508;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (__rhs);
  _4 = *_3;
  D.255508 = _2 != _4;

  <bb 3> :
<L0>:
  return D.255508;

}



;; Function __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10833, decl_uid=228034, cgraph_uid=7465, symbol_order=8260)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct symbolicinfoPatharray * const & __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (const struct __normal_iterator * const this)
{
  const struct symbolicinfoPatharray * const & D.255510;

  <bb 2> :
  D.255510 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.255510;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::~_Vector_base (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EED2Ev, funcdef_no=7815, decl_uid=170800, cgraph_uid=4447, symbol_order=5232)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.170690._M_end_of_storage;
  _2 = this->_M_impl.D.170690._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.170690._M_start;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8772, decl_uid=170697, cgraph_uid=5404, symbol_order=6193)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (struct _Vector_base * const this, struct symbolicinfoPatharray * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<symbolicinfoPatharray> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<symbolicinfoPatharray> >::deallocate (_ZNSt16allocator_traitsISaI21symbolicinfoPatharrayEE10deallocateERS1_PS0_m, funcdef_no=9576, decl_uid=170502, cgraph_uid=6208, symbol_order=6997)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<symbolicinfoPatharray> >::deallocate (struct allocator_type & __a, struct symbolicinfoPatharray * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<symbolicinfoPatharray>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::deallocate (_ZN9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayE10deallocateEPS1_m, funcdef_no=10162, decl_uid=170353, cgraph_uid=6794, symbol_order=7587)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<symbolicinfoPatharray>::deallocate (struct new_allocator * const this, struct symbolicinfoPatharray * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 16;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<symbolicinfoPatharray>::~vector (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EED2Ev, funcdef_no=7818, decl_uid=171342, cgraph_uid=4450, symbol_order=5235)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<symbolicinfoPatharray>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.171345;
  _2 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_1);
  _3 = this->D.171345._M_impl.D.170690._M_finish;
  _4 = this->D.171345._M_impl.D.170690._M_start;
  std::_Destroy<symbolicinfoPatharray*, symbolicinfoPatharray> (_4, _3, _2);
  _5 = &this->D.171345;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<symbolicinfoPatharray*, symbolicinfoPatharray> (_ZSt8_DestroyIP21symbolicinfoPatharrayS0_EvT_S2_RSaIT0_E, funcdef_no=8774, decl_uid=214749, cgraph_uid=5406, symbol_order=6195)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<symbolicinfoPatharray*, symbolicinfoPatharray> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct allocator & D.227832)
{
  <bb 2> :
  std::_Destroy<symbolicinfoPatharray*> (__first, __last);
  return;

}



;; Function std::_Destroy<symbolicinfoPatharray*> (_ZSt8_DestroyIP21symbolicinfoPatharrayEvT_S2_, funcdef_no=9577, decl_uid=227834, cgraph_uid=6210, symbol_order=6999)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<symbolicinfoPatharray*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<symbolicinfoPatharray*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP21symbolicinfoPatharrayEEvT_S4_, funcdef_no=10163, decl_uid=236092, cgraph_uid=6795, symbol_order=7588)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<symbolicinfoPatharray*> (struct symbolicinfoPatharray * D.240474, struct symbolicinfoPatharray * D.240475)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function symbolicinfo::operator= (_ZN12symbolicinfoaSERKS_, funcdef_no=7824, decl_uid=214772, cgraph_uid=4455, symbol_order=5240)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfo & symbolicinfo::operator= (struct symbolicinfo * const this, const struct symbolicinfo & D.214773)
{
  struct symbolicinfo & D.255518;

  <bb 2> :
  _1 = D.214773->cond_stmt;
  this->cond_stmt = _1;
  _2 = D.214773->switch_stmt;
  this->switch_stmt = _2;
  _3 = D.214773->cond_rhs;
  this->cond_rhs = _3;
  _4 = D.214773->cond_lhs;
  this->cond_lhs = _4;
  _5 = D.214773->node;
  this->node = _5;
  _6 = &D.214773->switchs;
  _7 = &this->switchs;
  std::vector<basic_block_def*>::operator= (_7, _6);
  _8 = D.214773->cond_truebranch;
  this->cond_truebranch = _8;
  _9 = D.214773->cond_falsebranch;
  this->cond_falsebranch = _9;
  _10 = D.214773->prevlogic;
  this->prevlogic = _10;
  _11 = &D.214773->symbolicExecutionPathConstraint;
  _12 = &this->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::operator= (_12, _11);
  _13 = &D.214773->symbolicExecutionPathConstraintarrayTrue;
  _14 = &this->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::operator= (_14, _13);
  _15 = &D.214773->symbolicExecutionPathConstraintarrayFalse;
  _16 = &this->symbolicExecutionPathConstraintarrayFalse;
  std::vector<symbolicinfoPatharray>::operator= (_16, _15);
  D.255518 = this;

  <bb 3> :
<L0>:
  return D.255518;

}



;; Function std::vector<basic_block_def*>::operator= (_ZNSt6vectorIP15basic_block_defSaIS1_EEaSERKS3_, funcdef_no=8783, decl_uid=169878, cgraph_uid=5417, symbol_order=6206)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<basic_block_def*>::operator= (struct vector * const this, const struct vector & __x)
{
  struct basic_block_def * * D.255553;
  struct basic_block_def * * __tmp;
  const size_type __xlen;
  struct vector & D.255551;
  struct __normal_iterator D.255548;
  struct __normal_iterator D.255547;
  struct __normal_iterator D.255546;
  struct __normal_iterator D.255545;
  struct __normal_iterator D.255544;
  bool retval.1872;
  struct __normal_iterator D.255539;
  struct __normal_iterator D.255538;
  bool retval.1871;
  bool iftmp.1870;
  bool retval.1869;
  bool retval.1868;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.1868 = __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_propagate_on_copy_assign ();
  if (retval.1868 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.170300;
  _4 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.170300;
  _6 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1870 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1870 = 0;

  <bb 8> :
  retval.1869 = iftmp.1870;
  if (retval.1869 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<basic_block_def*>::clear (this);
  _8 = &this->D.170300;
  _9 = this->D.170300._M_impl.D.169645._M_end_of_storage;
  _10 = this->D.170300._M_impl.D.169645._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 8;
  _13 = (long unsigned int) _12;
  _14 = this->D.170300._M_impl.D.169645._M_start;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (_8, _14, _13);
  this->D.170300._M_impl.D.169645._M_start = 0B;
  this->D.170300._M_impl.D.169645._M_finish = 0B;
  this->D.170300._M_impl.D.169645._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.170300;
  _16 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.170300;
  _18 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<basic_block_def*> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<basic_block_def*>::size (__x);
  _19 = std::vector<basic_block_def*>::capacity (this);
  retval.1871 = __xlen > _19;
  if (retval.1871 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.255538 = std::vector<basic_block_def*>::end (__x);
  D.255539 = std::vector<basic_block_def*>::begin (__x);
  D.255553 = std::vector<basic_block_def*>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (this, __xlen, D.255539, D.255538);
  __tmp = D.255553;
  _20 = &this->D.170300;
  _21 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_20);
  _22 = this->D.170300._M_impl.D.169645._M_finish;
  _23 = this->D.170300._M_impl.D.169645._M_start;
  std::_Destroy<basic_block_def**, basic_block_def*> (_23, _22, _21);
  _24 = &this->D.170300;
  _25 = this->D.170300._M_impl.D.169645._M_end_of_storage;
  _26 = this->D.170300._M_impl.D.169645._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 8;
  _29 = (long unsigned int) _28;
  _30 = this->D.170300._M_impl.D.169645._M_start;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (_24, _30, _29);
  this->D.170300._M_impl.D.169645._M_start = __tmp;
  _31 = this->D.170300._M_impl.D.169645._M_start;
  _32 = __xlen * 8;
  _33 = _31 + _32;
  this->D.170300._M_impl.D.169645._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<basic_block_def*>::size (this);
  retval.1872 = __xlen <= _34;
  if (retval.1872 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.170300;
  _36 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_35);
  D.255544 = std::vector<basic_block_def*>::end (this);
  D.255545 = std::vector<basic_block_def*>::begin (this);
  D.255546 = std::vector<basic_block_def*>::end (__x);
  D.255547 = std::vector<basic_block_def*>::begin (__x);
  D.255548 = std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (D.255547, D.255546, D.255545);
  std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def*> (D.255548, D.255544, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.170300._M_impl.D.169645._M_start;
  _38 = __x->D.170300._M_impl.D.169645._M_start;
  _39 = std::vector<basic_block_def*>::size (this);
  _40 = _39 * 8;
  _41 = _38 + _40;
  _42 = __x->D.170300._M_impl.D.169645._M_start;
  std::copy<basic_block_def**, basic_block_def**> (_42, _41, _37);
  _43 = &this->D.170300;
  _44 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_43);
  _45 = this->D.170300._M_impl.D.169645._M_finish;
  _46 = __x->D.170300._M_impl.D.169645._M_finish;
  _47 = __x->D.170300._M_impl.D.169645._M_start;
  _48 = std::vector<basic_block_def*>::size (this);
  _49 = _48 * 8;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<basic_block_def**, basic_block_def**, basic_block_def*> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.170300._M_impl.D.169645._M_start;
  _52 = __xlen * 8;
  _53 = _51 + _52;
  this->D.170300._M_impl.D.169645._M_finish = _53;

  <bb 17> :
  D.255551 = this;

  <bb 18> :
<L19>:
  return D.255551;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaIP15basic_block_defES2_E27_S_propagate_on_copy_assignEv, funcdef_no=8784, decl_uid=169512, cgraph_uid=5415, symbol_order=6204)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_propagate_on_copy_assign ()
{
  bool D.255554;

  <bb 2> :
  D.255554 = 0;

  <bb 3> :
<L0>:
  return D.255554;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaIP15basic_block_defES2_E15_S_always_equalEv, funcdef_no=8785, decl_uid=169515, cgraph_uid=5416, symbol_order=6205)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_always_equal ()
{
  bool D.255556;

  <bb 2> :
  D.255556 = 1;

  <bb 3> :
<L0>:
  return D.255556;

}



;; Function std::operator!= (_ZStneRKSaIP15basic_block_defES3_, funcdef_no=9616, decl_uid=169398, cgraph_uid=6248, symbol_order=7037)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.236271, const struct allocator & D.236272)
{
  bool D.255558;

  <bb 2> :
  D.255558 = 0;

  <bb 3> :
<L0>:
  return D.255558;

}



;; Function std::vector<basic_block_def*>::clear (_ZNSt6vectorIP15basic_block_defSaIS1_EE5clearEv, funcdef_no=9617, decl_uid=170030, cgraph_uid=6249, symbol_order=7038)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<basic_block_def*>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.170300._M_impl.D.169645._M_start;
  std::vector<basic_block_def*>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<basic_block_def*>::_M_erase_at_end (_ZNSt6vectorIP15basic_block_defSaIS1_EE15_M_erase_at_endEPS1_, funcdef_no=10197, decl_uid=170158, cgraph_uid=6829, symbol_order=7622)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<basic_block_def*>::_M_erase_at_end (struct vector * const this, struct basic_block_def * * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.170300._M_impl.D.169645._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 8;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.170300;
  _5 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_4);
  _6 = this->D.170300._M_impl.D.169645._M_finish;
  std::_Destroy<basic_block_def**, basic_block_def*> (__pos, _6, _5);
  this->D.170300._M_impl.D.169645._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<basic_block_def*> > (_ZSt15__alloc_on_copyISaIP15basic_block_defEEvRT_RKS3_, funcdef_no=9618, decl_uid=228105, cgraph_uid=6250, symbol_order=7039)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<basic_block_def*> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<basic_block_def*>::capacity (_ZNKSt6vectorIP15basic_block_defSaIS1_EE8capacityEv, funcdef_no=9619, decl_uid=169946, cgraph_uid=6251, symbol_order=7040)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<basic_block_def*>::capacity (const struct vector * const this)
{
  size_type D.255563;

  <bb 2> :
  _1 = this->D.170300._M_impl.D.169645._M_end_of_storage;
  _2 = this->D.170300._M_impl.D.169645._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  D.255563 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.255563;

}



;; Function std::vector<basic_block_def*>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (_ZNSt6vectorIP15basic_block_defSaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_, funcdef_no=9620, decl_uid=228112, cgraph_uid=6252, symbol_order=7041)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct basic_block_def * * std::vector<basic_block_def*>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct basic_block_def * * D.255567;
  struct basic_block_def * * __result;
  struct basic_block_def * * D.255565;

  <bb 2> :
  _1 = &this->D.170300;
  D.255567 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_allocate (_1, __n);
  __result = D.255567;
  _2 = &this->D.170300;
  _3 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**, basic_block_def*> (__first, __last, __result, _3);

  <bb 3> :
  D.255565 = __result;

  <bb 4> :
<L0>:
  return D.255565;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.170300;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_, funcdef_no=9621, decl_uid=228120, cgraph_uid=6253, symbol_order=7042)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.255573;
  struct __normal_iterator D.255572;
  struct __normal_iterator D.255571;

  <bb 2> :
  D.255572 = std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (__last);
  D.255573 = std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (__first);
  D.255571 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (D.255573, D.255572, __result);

  <bb 3> :
<L0>:
  return D.255571;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_, funcdef_no=10199, decl_uid=236310, cgraph_uid=6832, symbol_order=7625)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct basic_block_def * * D.255577;
  struct __normal_iterator D.255575;

  <bb 2> :
  _1 = std::__niter_base<basic_block_def**, std::vector<basic_block_def*> > (__result);
  _2 = std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (__last);
  _3 = std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (__first);
  D.255577 = std::__copy_move_a1<false, basic_block_def* const*, basic_block_def**> (_3, _2, _1);
  _4 = D.255577;
  D.255575 = std::__niter_wrap<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def**> (__result, _4);

  <bb 3> :
<L0>:
  return D.255575;

}



;; Function std::__niter_base<basic_block_def**, std::vector<basic_block_def*> > (_ZSt12__niter_baseIPP15basic_block_defSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10636, decl_uid=240975, cgraph_uid=7268, symbol_order=8061)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__niter_base<basic_block_def**, std::vector<basic_block_def*> > (struct __normal_iterator __it)
{
  struct basic_block_def * * D.255578;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (&__it);
  D.255578 = *_1;

  <bb 3> :
<L0>:
  return D.255578;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def**> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_, funcdef_no=10638, decl_uid=240982, cgraph_uid=7270, symbol_order=8063)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def**> (struct __normal_iterator __from, struct basic_block_def * * __res)
{
  struct __normal_iterator D.255580;

  <bb 2> :
  _1 = std::__niter_base<basic_block_def**, std::vector<basic_block_def*> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 8;
  D.255580 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.255580;

}



;; Function __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS2_SaIS2_EEEplEl, funcdef_no=10829, decl_uid=214088, cgraph_uid=7461, symbol_order=8256)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct basic_block_def * * const D.244732;
  struct __normal_iterator D.244733;
  struct __normal_iterator D.255582;

  <bb 2> :
  _1 = this->_M_current;
  __n.1873_2 = (long unsigned int) __n;
  _3 = __n.1873_2 * 8;
  _4 = _1 + _3;
  D.244732 = _4;
  __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::__normal_iterator (&D.244733, &D.244732);
  D.255582 = D.244733;
  D.244733 = {CLOBBER};
  D.244732 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.255582;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def*> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E, funcdef_no=9622, decl_uid=228126, cgraph_uid=6254, symbol_order=7043)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def*> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.236339)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS3_SaIS3_EEEEEvT_S9_, funcdef_no=10201, decl_uid=236341, cgraph_uid=6833, symbol_order=7626)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS5_SaIS5_EEEEEEvT_SB_, funcdef_no=10639, decl_uid=241006, cgraph_uid=7271, symbol_order=8064)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (struct __normal_iterator D.243789, struct __normal_iterator D.243790)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<basic_block_def**, basic_block_def**> (_ZSt4copyIPP15basic_block_defS2_ET0_T_S4_S3_, funcdef_no=9623, decl_uid=228134, cgraph_uid=6255, symbol_order=7044)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::copy<basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255588;
  struct basic_block_def * * D.255586;

  <bb 2> :
  _1 = std::__miter_base<basic_block_def**> (__last);
  _2 = std::__miter_base<basic_block_def**> (__first);
  D.255588 = std::__copy_move_a<false, basic_block_def**, basic_block_def**> (_2, _1, __result);
  D.255586 = D.255588;

  <bb 3> :
<L0>:
  return D.255586;

}



;; Function std::__miter_base<basic_block_def**> (_ZSt12__miter_baseIPP15basic_block_defET_S3_, funcdef_no=10202, decl_uid=236357, cgraph_uid=6834, symbol_order=7627)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__miter_base<basic_block_def**> (struct basic_block_def * * __it)
{
  struct basic_block_def * * D.255589;

  <bb 2> :
  D.255589 = __it;

  <bb 3> :
<L0>:
  return D.255589;

}



;; Function std::__copy_move_a<false, basic_block_def**, basic_block_def**> (_ZSt13__copy_move_aILb0EPP15basic_block_defS2_ET1_T0_S4_S3_, funcdef_no=10203, decl_uid=236359, cgraph_uid=6835, symbol_order=7628)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a<false, basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255593;
  struct basic_block_def * * D.255591;

  <bb 2> :
  __result.1874_1 = __result;
  _2 = std::__niter_base<basic_block_def**> (__result.1874_1);
  _3 = std::__niter_base<basic_block_def**> (__last);
  _4 = std::__niter_base<basic_block_def**> (__first);
  D.255593 = std::__copy_move_a1<false, basic_block_def**, basic_block_def**> (_4, _3, _2);
  _5 = D.255593;
  D.255591 = std::__niter_wrap<basic_block_def**> (&__result, _5);

  <bb 3> :
<L0>:
  return D.255591;

}



;; Function std::__copy_move_a1<false, basic_block_def**, basic_block_def**> (_ZSt14__copy_move_a1ILb0EPP15basic_block_defS2_ET1_T0_S4_S3_, funcdef_no=10641, decl_uid=241017, cgraph_uid=7273, symbol_order=8066)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a1<false, basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255596;
  struct basic_block_def * * D.255594;

  <bb 2> :
  D.255596 = std::__copy_move_a2<false, basic_block_def**, basic_block_def**> (__first, __last, __result);
  D.255594 = D.255596;

  <bb 3> :
<L0>:
  return D.255594;

}



;; Function std::__copy_move_a2<false, basic_block_def**, basic_block_def**> (_ZSt14__copy_move_a2ILb0EPP15basic_block_defS2_ET1_T0_S4_S3_, funcdef_no=10830, decl_uid=243798, cgraph_uid=7462, symbol_order=8257)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a2<false, basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255597;

  <bb 2> :
  D.255597 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<basic_block_def*> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.255597;

}



;; Function std::__uninitialized_copy_a<basic_block_def**, basic_block_def**, basic_block_def*> (_ZSt22__uninitialized_copy_aIPP15basic_block_defS2_S1_ET0_T_S4_S3_RSaIT1_E, funcdef_no=9624, decl_uid=228138, cgraph_uid=6256, symbol_order=7045)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__uninitialized_copy_a<basic_block_def**, basic_block_def**, basic_block_def*> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result, struct allocator & D.236366)
{
  struct basic_block_def * * D.255601;
  struct basic_block_def * * D.255599;

  <bb 2> :
  D.255601 = std::uninitialized_copy<basic_block_def**, basic_block_def**> (__first, __last, __result);
  D.255599 = D.255601;

  <bb 3> :
<L0>:
  return D.255599;

}



;; Function std::uninitialized_copy<basic_block_def**, basic_block_def**> (_ZSt18uninitialized_copyIPP15basic_block_defS2_ET0_T_S4_S3_, funcdef_no=10204, decl_uid=236368, cgraph_uid=6836, symbol_order=7629)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::uninitialized_copy<basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255604;
  const bool __assignable;
  struct basic_block_def * * D.255602;

  <bb 2> :
  __assignable = 1;
  D.255604 = std::__uninitialized_copy<true>::__uninit_copy<basic_block_def**, basic_block_def**> (__first, __last, __result);
  D.255602 = D.255604;

  <bb 3> :
<L0>:
  return D.255602;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<basic_block_def**, basic_block_def**> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPP15basic_block_defS4_EET0_T_S6_S5_, funcdef_no=10643, decl_uid=241055, cgraph_uid=7275, symbol_order=8068)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__uninitialized_copy<true>::__uninit_copy<basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.255607;
  struct basic_block_def * * D.255605;

  <bb 2> :
  D.255607 = std::copy<basic_block_def**, basic_block_def**> (__first, __last, __result);
  D.255605 = D.255607;

  <bb 3> :
<L0>:
  return D.255605;

}



;; Function std::vector<symbolicinfoPatharray>::operator= (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EEaSERKS2_, funcdef_no=8786, decl_uid=170923, cgraph_uid=5420, symbol_order=6209)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<symbolicinfoPatharray>::operator= (struct vector * const this, const struct vector & __x)
{
  struct symbolicinfoPatharray * D.255641;
  struct symbolicinfoPatharray * __tmp;
  const size_type __xlen;
  struct vector & D.255639;
  struct __normal_iterator D.255636;
  struct __normal_iterator D.255635;
  struct __normal_iterator D.255634;
  struct __normal_iterator D.255633;
  struct __normal_iterator D.255632;
  bool retval.1879;
  struct __normal_iterator D.255627;
  struct __normal_iterator D.255626;
  bool retval.1878;
  bool iftmp.1877;
  bool retval.1876;
  bool retval.1875;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.1875 = __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_propagate_on_copy_assign ();
  if (retval.1875 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.171345;
  _4 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.171345;
  _6 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1877 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1877 = 0;

  <bb 8> :
  retval.1876 = iftmp.1877;
  if (retval.1876 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<symbolicinfoPatharray>::clear (this);
  _8 = &this->D.171345;
  _9 = this->D.171345._M_impl.D.170690._M_end_of_storage;
  _10 = this->D.171345._M_impl.D.170690._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 16;
  _13 = (long unsigned int) _12;
  _14 = this->D.171345._M_impl.D.170690._M_start;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (_8, _14, _13);
  this->D.171345._M_impl.D.170690._M_start = 0B;
  this->D.171345._M_impl.D.170690._M_finish = 0B;
  this->D.171345._M_impl.D.170690._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.171345;
  _16 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.171345;
  _18 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<symbolicinfoPatharray> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<symbolicinfoPatharray>::size (__x);
  _19 = std::vector<symbolicinfoPatharray>::capacity (this);
  retval.1878 = __xlen > _19;
  if (retval.1878 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.255626 = std::vector<symbolicinfoPatharray>::end (__x);
  D.255627 = std::vector<symbolicinfoPatharray>::begin (__x);
  D.255641 = std::vector<symbolicinfoPatharray>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (this, __xlen, D.255627, D.255626);
  __tmp = D.255641;
  _20 = &this->D.171345;
  _21 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_20);
  _22 = this->D.171345._M_impl.D.170690._M_finish;
  _23 = this->D.171345._M_impl.D.170690._M_start;
  std::_Destroy<symbolicinfoPatharray*, symbolicinfoPatharray> (_23, _22, _21);
  _24 = &this->D.171345;
  _25 = this->D.171345._M_impl.D.170690._M_end_of_storage;
  _26 = this->D.171345._M_impl.D.170690._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 16;
  _29 = (long unsigned int) _28;
  _30 = this->D.171345._M_impl.D.170690._M_start;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (_24, _30, _29);
  this->D.171345._M_impl.D.170690._M_start = __tmp;
  _31 = this->D.171345._M_impl.D.170690._M_start;
  _32 = __xlen * 16;
  _33 = _31 + _32;
  this->D.171345._M_impl.D.170690._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<symbolicinfoPatharray>::size (this);
  retval.1879 = __xlen <= _34;
  if (retval.1879 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.171345;
  _36 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_35);
  D.255632 = std::vector<symbolicinfoPatharray>::end (this);
  D.255633 = std::vector<symbolicinfoPatharray>::begin (this);
  D.255634 = std::vector<symbolicinfoPatharray>::end (__x);
  D.255635 = std::vector<symbolicinfoPatharray>::begin (__x);
  D.255636 = std::copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (D.255635, D.255634, D.255633);
  std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray> (D.255636, D.255632, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.171345._M_impl.D.170690._M_start;
  _38 = __x->D.171345._M_impl.D.170690._M_start;
  _39 = std::vector<symbolicinfoPatharray>::size (this);
  _40 = _39 * 16;
  _41 = _38 + _40;
  _42 = __x->D.171345._M_impl.D.170690._M_start;
  std::copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (_42, _41, _37);
  _43 = &this->D.171345;
  _44 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_43);
  _45 = this->D.171345._M_impl.D.170690._M_finish;
  _46 = __x->D.171345._M_impl.D.170690._M_finish;
  _47 = __x->D.171345._M_impl.D.170690._M_start;
  _48 = std::vector<symbolicinfoPatharray>::size (this);
  _49 = _48 * 16;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<symbolicinfoPatharray*, symbolicinfoPatharray*, symbolicinfoPatharray> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.171345._M_impl.D.170690._M_start;
  _52 = __xlen * 16;
  _53 = _51 + _52;
  this->D.171345._M_impl.D.170690._M_finish = _53;

  <bb 17> :
  D.255639 = this;

  <bb 18> :
<L19>:
  return D.255639;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI21symbolicinfoPatharrayES1_E27_S_propagate_on_copy_assignEv, funcdef_no=8787, decl_uid=170557, cgraph_uid=5418, symbol_order=6207)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_propagate_on_copy_assign ()
{
  bool D.255642;

  <bb 2> :
  D.255642 = 0;

  <bb 3> :
<L0>:
  return D.255642;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI21symbolicinfoPatharrayES1_E15_S_always_equalEv, funcdef_no=8788, decl_uid=170560, cgraph_uid=5419, symbol_order=6208)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_always_equal ()
{
  bool D.255644;

  <bb 2> :
  D.255644 = 1;

  <bb 3> :
<L0>:
  return D.255644;

}



;; Function std::operator!= (_ZStneRKSaI21symbolicinfoPatharrayES2_, funcdef_no=9625, decl_uid=170443, cgraph_uid=6257, symbol_order=7046)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.236372, const struct allocator & D.236373)
{
  bool D.255646;

  <bb 2> :
  D.255646 = 0;

  <bb 3> :
<L0>:
  return D.255646;

}



;; Function std::vector<symbolicinfoPatharray>::clear (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EE5clearEv, funcdef_no=9626, decl_uid=171075, cgraph_uid=6258, symbol_order=7047)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<symbolicinfoPatharray>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.171345._M_impl.D.170690._M_start;
  std::vector<symbolicinfoPatharray>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<symbolicinfoPatharray>::_M_erase_at_end (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=10205, decl_uid=171203, cgraph_uid=6837, symbol_order=7630)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<symbolicinfoPatharray>::_M_erase_at_end (struct vector * const this, struct symbolicinfoPatharray * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.171345._M_impl.D.170690._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 16;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.171345;
  _5 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_4);
  _6 = this->D.171345._M_impl.D.170690._M_finish;
  std::_Destroy<symbolicinfoPatharray*, symbolicinfoPatharray> (__pos, _6, _5);
  this->D.171345._M_impl.D.170690._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<symbolicinfoPatharray> > (_ZSt15__alloc_on_copyISaI21symbolicinfoPatharrayEEvRT_RKS2_, funcdef_no=9627, decl_uid=228171, cgraph_uid=6259, symbol_order=7048)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<symbolicinfoPatharray> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<symbolicinfoPatharray>::capacity (_ZNKSt6vectorI21symbolicinfoPatharraySaIS0_EE8capacityEv, funcdef_no=9628, decl_uid=170991, cgraph_uid=6260, symbol_order=7049)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<symbolicinfoPatharray>::capacity (const struct vector * const this)
{
  size_type D.255651;

  <bb 2> :
  _1 = this->D.171345._M_impl.D.170690._M_end_of_storage;
  _2 = this->D.171345._M_impl.D.170690._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.255651 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.255651;

}



;; Function std::vector<symbolicinfoPatharray>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=9629, decl_uid=228178, cgraph_uid=6261, symbol_order=7050)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct symbolicinfoPatharray * std::vector<symbolicinfoPatharray>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct symbolicinfoPatharray * D.255655;
  struct symbolicinfoPatharray * __result;
  struct symbolicinfoPatharray * D.255653;

  <bb 2> :
  _1 = &this->D.171345;
  D.255655 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_allocate (_1, __n);
  __result = D.255655;
  _2 = &this->D.171345;
  _3 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*, symbolicinfoPatharray> (__first, __last, __result, _3);

  <bb 3> :
  D.255653 = __result;

  <bb 4> :
<L0>:
  return D.255653;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.171345;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<symbolicinfoPatharray>::end (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EE3endEv, funcdef_no=9632, decl_uid=170958, cgraph_uid=6264, symbol_order=7053)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<symbolicinfoPatharray>::end (struct vector * const this)
{
  struct iterator D.236459;
  struct iterator D.255659;

  <bb 2> :
  _1 = &this->D.171345._M_impl.D.170690._M_finish;
  __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (&D.236459, _1);
  D.255659 = D.236459;
  D.236459 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.255659;

}



;; Function __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=10208, decl_uid=228260, cgraph_uid=6840, symbol_order=7633)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (struct __normal_iterator * const this, struct symbolicinfoPatharray * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<symbolicinfoPatharray>::begin (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EE5beginEv, funcdef_no=9630, decl_uid=170954, cgraph_uid=6262, symbol_order=7051)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<symbolicinfoPatharray>::begin (struct vector * const this)
{
  struct iterator D.236413;
  struct iterator D.255662;

  <bb 2> :
  _1 = &this->D.171345._M_impl.D.170690._M_start;
  __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (&D.236413, _1);
  D.255662 = D.236413;
  D.236413 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.255662;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=9631, decl_uid=228279, cgraph_uid=6263, symbol_order=7052)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.255667;
  struct __normal_iterator D.255666;
  struct __normal_iterator D.255665;

  <bb 2> :
  D.255666 = std::__miter_base<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (__last);
  D.255667 = std::__miter_base<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (__first);
  D.255665 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (D.255667, D.255666, __result);

  <bb 3> :
<L0>:
  return D.255665;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=10210, decl_uid=236425, cgraph_uid=6842, symbol_order=7635)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.255669;

  <bb 2> :
  D.255669 = __it;

  <bb 3> :
<L0>:
  return D.255669;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=10211, decl_uid=236431, cgraph_uid=6845, symbol_order=7638)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct symbolicinfoPatharray * D.255673;
  struct __normal_iterator D.255671;

  <bb 2> :
  _1 = std::__niter_base<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (__result);
  _2 = std::__niter_base<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (__last);
  _3 = std::__niter_base<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (__first);
  D.255673 = std::__copy_move_a1<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (_3, _2, _1);
  _4 = D.255673;
  D.255671 = std::__niter_wrap<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (__result, _4);

  <bb 3> :
<L0>:
  return D.255671;

}



;; Function std::__niter_base<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (_ZSt12__niter_baseIP21symbolicinfoPatharraySt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10646, decl_uid=241229, cgraph_uid=7278, symbol_order=8071)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__niter_base<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (struct __normal_iterator __it)
{
  struct symbolicinfoPatharray * D.255674;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (&__it);
  D.255674 = *_1;

  <bb 3> :
<L0>:
  return D.255674;

}



;; Function __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10834, decl_uid=228247, cgraph_uid=7466, symbol_order=8261)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * const & __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (const struct __normal_iterator * const this)
{
  struct symbolicinfoPatharray * const & D.255676;

  <bb 2> :
  D.255676 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.255676;

}



;; Function std::__niter_base<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (_ZSt12__niter_baseIPK21symbolicinfoPatharraySt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10645, decl_uid=241078, cgraph_uid=7277, symbol_order=8070)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct symbolicinfoPatharray * std::__niter_base<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (struct __normal_iterator __it)
{
  const struct symbolicinfoPatharray * D.255678;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (&__it);
  D.255678 = *_1;

  <bb 3> :
<L0>:
  return D.255678;

}



;; Function std::__copy_move_a1<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt14__copy_move_a1ILb0EPK21symbolicinfoPatharrayPS0_ET1_T0_S5_S4_, funcdef_no=10647, decl_uid=241377, cgraph_uid=7279, symbol_order=8072)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move_a1<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (const struct symbolicinfoPatharray * __first, const struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.255682;
  struct symbolicinfoPatharray * D.255680;

  <bb 2> :
  D.255682 = std::__copy_move_a2<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (__first, __last, __result);
  D.255680 = D.255682;

  <bb 3> :
<L0>:
  return D.255680;

}



;; Function std::__copy_move_a2<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt14__copy_move_a2ILb0EPK21symbolicinfoPatharrayPS0_ET1_T0_S5_S4_, funcdef_no=10835, decl_uid=243820, cgraph_uid=7467, symbol_order=8262)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move_a2<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (const struct symbolicinfoPatharray * __first, const struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.255683;

  <bb 2> :
  D.255683 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<symbolicinfoPatharray> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.255683;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<symbolicinfoPatharray> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI21symbolicinfoPatharrayEEPT_PKS4_S7_S5_, funcdef_no=10912, decl_uid=244769, cgraph_uid=7544, symbol_order=8339)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<symbolicinfoPatharray> (const struct symbolicinfoPatharray * __first, const struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  const ptrdiff_t _Num;
  struct symbolicinfoPatharray * D.255688;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 16;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.1880_2 = (long unsigned int) _Num;
  _3 = _Num.1880_2 * 16;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.1881_4 = (long unsigned int) _Num;
  _5 = _Num.1881_4 * 16;
  D.255688 = __result + _5;

  <bb 5> :
<L3>:
  return D.255688;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10648, decl_uid=241381, cgraph_uid=7280, symbol_order=8073)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (struct __normal_iterator __from, struct symbolicinfoPatharray * __res)
{
  struct __normal_iterator D.255690;

  <bb 2> :
  _1 = std::__niter_base<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 16;
  D.255690 = __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.255690;

}



;; Function __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10836, decl_uid=228238, cgraph_uid=7468, symbol_order=8263)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct symbolicinfoPatharray * const D.244775;
  struct __normal_iterator D.244776;
  struct __normal_iterator D.255692;

  <bb 2> :
  _1 = this->_M_current;
  __n.1882_2 = (long unsigned int) __n;
  _3 = __n.1882_2 * 16;
  _4 = _1 + _3;
  D.244775 = _4;
  __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (&D.244776, &D.244775);
  D.255692 = D.244776;
  D.244776 = {CLOBBER};
  D.244775 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.255692;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=9633, decl_uid=228285, cgraph_uid=6265, symbol_order=7054)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.236462)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=10214, decl_uid=236464, cgraph_uid=6846, symbol_order=7639)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10649, decl_uid=241405, cgraph_uid=7281, symbol_order=8074)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct __normal_iterator D.243830, struct __normal_iterator D.243831)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt4copyIP21symbolicinfoPatharrayS1_ET0_T_S3_S2_, funcdef_no=9634, decl_uid=228293, cgraph_uid=6266, symbol_order=7055)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.255698;
  struct symbolicinfoPatharray * D.255696;

  <bb 2> :
  _1 = std::__miter_base<symbolicinfoPatharray*> (__last);
  _2 = std::__miter_base<symbolicinfoPatharray*> (__first);
  D.255698 = std::__copy_move_a<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (_2, _1, __result);
  D.255696 = D.255698;

  <bb 3> :
<L0>:
  return D.255696;

}



;; Function std::__miter_base<symbolicinfoPatharray*> (_ZSt12__miter_baseIP21symbolicinfoPatharrayET_S2_, funcdef_no=10215, decl_uid=236480, cgraph_uid=6847, symbol_order=7640)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__miter_base<symbolicinfoPatharray*> (struct symbolicinfoPatharray * __it)
{
  struct symbolicinfoPatharray * D.255699;

  <bb 2> :
  D.255699 = __it;

  <bb 3> :
<L0>:
  return D.255699;

}



;; Function std::__copy_move_a<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt13__copy_move_aILb0EP21symbolicinfoPatharrayS1_ET1_T0_S3_S2_, funcdef_no=10216, decl_uid=236482, cgraph_uid=6848, symbol_order=7641)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move_a<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.255703;
  struct symbolicinfoPatharray * D.255701;

  <bb 2> :
  __result.1883_1 = __result;
  _2 = std::__niter_base<symbolicinfoPatharray*> (__result.1883_1);
  _3 = std::__niter_base<symbolicinfoPatharray*> (__last);
  _4 = std::__niter_base<symbolicinfoPatharray*> (__first);
  D.255703 = std::__copy_move_a1<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (_4, _3, _2);
  _5 = D.255703;
  D.255701 = std::__niter_wrap<symbolicinfoPatharray*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.255701;

}



;; Function std::__niter_base<symbolicinfoPatharray*> (_ZSt12__niter_baseIP21symbolicinfoPatharrayET_S2_, funcdef_no=10650, decl_uid=241416, cgraph_uid=7282, symbol_order=8075)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__niter_base<symbolicinfoPatharray*> (struct symbolicinfoPatharray * __it)
{
  struct symbolicinfoPatharray * D.255704;

  <bb 2> :
  D.255704 = __it;

  <bb 3> :
<L0>:
  return D.255704;

}



;; Function std::__copy_move_a1<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt14__copy_move_a1ILb0EP21symbolicinfoPatharrayS1_ET1_T0_S3_S2_, funcdef_no=10651, decl_uid=241418, cgraph_uid=7283, symbol_order=8076)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move_a1<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.255708;
  struct symbolicinfoPatharray * D.255706;

  <bb 2> :
  D.255708 = std::__copy_move_a2<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (__first, __last, __result);
  D.255706 = D.255708;

  <bb 3> :
<L0>:
  return D.255706;

}



;; Function std::__copy_move_a2<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt14__copy_move_a2ILb0EP21symbolicinfoPatharrayS1_ET1_T0_S3_S2_, funcdef_no=10837, decl_uid=243839, cgraph_uid=7469, symbol_order=8264)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move_a2<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.255709;

  <bb 2> :
  D.255709 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<symbolicinfoPatharray> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.255709;

}



;; Function std::__niter_wrap<symbolicinfoPatharray*> (_ZSt12__niter_wrapIP21symbolicinfoPatharrayET_RKS2_S2_, funcdef_no=10652, decl_uid=241422, cgraph_uid=7284, symbol_order=8077)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__niter_wrap<symbolicinfoPatharray*> (struct symbolicinfoPatharray * const & D.243843, struct symbolicinfoPatharray * __res)
{
  struct symbolicinfoPatharray * D.255711;

  <bb 2> :
  D.255711 = __res;

  <bb 3> :
<L0>:
  return D.255711;

}



;; Function std::__uninitialized_copy_a<symbolicinfoPatharray*, symbolicinfoPatharray*, symbolicinfoPatharray> (_ZSt22__uninitialized_copy_aIP21symbolicinfoPatharrayS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=9635, decl_uid=228297, cgraph_uid=6267, symbol_order=7056)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__uninitialized_copy_a<symbolicinfoPatharray*, symbolicinfoPatharray*, symbolicinfoPatharray> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result, struct allocator & D.236489)
{
  struct symbolicinfoPatharray * D.255715;
  struct symbolicinfoPatharray * D.255713;

  <bb 2> :
  D.255715 = std::uninitialized_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (__first, __last, __result);
  D.255713 = D.255715;

  <bb 3> :
<L0>:
  return D.255713;

}



;; Function std::uninitialized_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt18uninitialized_copyIP21symbolicinfoPatharrayS1_ET0_T_S3_S2_, funcdef_no=10217, decl_uid=236491, cgraph_uid=6849, symbol_order=7642)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::uninitialized_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.255718;
  const bool __assignable;
  struct symbolicinfoPatharray * D.255716;

  <bb 2> :
  __assignable = 1;
  D.255718 = std::__uninitialized_copy<false>::__uninit_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (__first, __last, __result);
  D.255716 = D.255718;

  <bb 3> :
<L0>:
  return D.255716;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP21symbolicinfoPatharrayS3_EET0_T_S5_S4_, funcdef_no=10653, decl_uid=241456, cgraph_uid=7285, symbol_order=8078)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct symbolicinfoPatharray * std::__uninitialized_copy<false>::__uninit_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * __cur;
  struct symbolicinfoPatharray * D.255719;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<symbolicinfoPatharray> (__cur);
  std::_Construct<symbolicinfoPatharray, symbolicinfoPatharray&> (_1, __first);
  __first = __first + 16;
  __cur = __cur + 16;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.255719 = __cur;

  <bb 6> :
<L3>:
  return D.255719;

}



;; Function std::_Construct<symbolicinfoPatharray, symbolicinfoPatharray&> (_ZSt10_ConstructI21symbolicinfoPatharrayJRS0_EEvPT_DpOT0_, funcdef_no=10838, decl_uid=243851, cgraph_uid=7470, symbol_order=8265)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<symbolicinfoPatharray, symbolicinfoPatharray&> (struct symbolicinfoPatharray * __p, struct symbolicinfoPatharray & __args#0)
{
  void * D.244800;
  void * D.244799;
  const struct symbolicinfoPatharray * D.244801;

  <bb 2> :
  D.244801 = std::forward<symbolicinfoPatharray&> (__args#0);
  D.244799 = __p;
  D.244800 = operator new (16, D.244799);
  MEM[(struct symbolicinfoPatharray *)D.244800] = *D.244801;
  return;

}



;; Function std::forward<symbolicinfoPatharray&> (_ZSt7forwardIR21symbolicinfoPatharrayEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=10913, decl_uid=244797, cgraph_uid=7545, symbol_order=8340)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct symbolicinfoPatharray & std::forward<symbolicinfoPatharray&> (struct type & __t)
{
  struct symbolicinfoPatharray & D.255721;

  <bb 2> :
  D.255721 = __t;

  <bb 3> :
<L0>:
  return D.255721;

}



;; Function hash_map<tree_node*, function_path_array>::put (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7825, decl_uid=191905, cgraph_uid=4458, symbol_order=5243)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_path_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_path_array & v)
{
  bool D.255730;
  struct hash_entry * D.255729;
  unsigned int D.255728;
  bool ins;
  struct hash_entry * e;
  bool D.255726;
  void * D.214893;
  void * D.214892;

  <bb 2> :
  _1 = &this->m_table;
  D.255728 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::hash (k);
  _2 = D.255728;
  D.255729 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.255729;
  D.255730 = hash_map<tree_node*, function_path_array>::hash_entry::is_empty (e);
  ins = D.255730;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.214892 = &e->m_value;
  D.214893 = operator new (32, D.214892);
  function_path_array::function_path_array (D.214893, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_path_array::operator= (_4, v);

  <bb 5> :
  D.255726 = ~ins;

  <bb 6> :
<L3>:
  return D.255726;

  <bb 7> :
<L4>:
  operator delete (D.214893, D.214892);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8789, decl_uid=192063, cgraph_uid=5421, symbol_order=6210)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.255781;
  bool D.255780;
  bool D.255779;
  bool D.255778;
  bool D.255777;
  bool D.255776;
  struct value_type * D.255775;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.1889;
  bool retval.1888;
  bool retval.1887;
  bool retval.1886;
  bool retval.1885;
  bool retval.1884;
  struct value_type * D.255737;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 40;
  entry = _11 + _13;
  size = this->m_size;
  D.255776 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1884 = D.255776;
  if (retval.1884 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.255777 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1885 = D.255777;
  if (retval.1885 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 40;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.255778 = hash_map<tree_node*, function_path_array>::hash_entry::equal (entry, comparable);
  retval.1886 = D.255778;
  if (retval.1886 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  D.255737 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 40;
  entry = _24 + _26;
  D.255779 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1887 = D.255779;
  if (retval.1887 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.255780 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1888 = D.255780;
  if (retval.1888 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 40;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.255781 = hash_map<tree_node*, function_path_array>::hash_entry::equal (entry, comparable);
  retval.1889 = D.255781;
  if (retval.1889 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 40;
  D.255737 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.255737 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.255737 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 40;
  D.255737 = _37 + _39;

  <bb 27> :
<L37>:
  return D.255737;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9636, decl_uid=192144, cgraph_uid=6280, symbol_order=7069)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.255812;
  unsigned int D.255811;
  bool D.255810;
  bool D.255809;
  struct mem_alloc_description & D.255808;
  struct value_type * D.255807;
  unsigned int D.255806;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.236515;
  void * D.236514;
  struct hash_entry & D.236552;
  bool iftmp.1893;
  bool retval.1892;
  bool iftmp.1891;
  bool retval.1890;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 40;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1891 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1891 = 0;

  <bb 6> :
  retval.1890 = iftmp.1891;
  if (retval.1890 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.255806 = hash_table_higher_prime_index (_5);
  nindex = D.255806;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.255807 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.255807;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.255809 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.255809;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.255810 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.255810;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.1893 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.1893 = 0;

  <bb 15> :
  retval.1892 = iftmp.1893;
  if (retval.1892 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.255811 = hash_map<tree_node*, function_path_array>::hash_entry::hash (x);
  _16 = D.255811;
  D.255812 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.255812;
  D.236552 = std::move<hash_map<tree_node*, function_path_array>::hash_entry&> (x);
  D.236514 = q;
  D.236515 = operator new (40, D.236514);
  hash_map<tree_node*, function_path_array>::hash_entry::hash_entry (D.236515, D.236552);

  <bb 17> :
  p = p + 40;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10218, decl_uid=192039, cgraph_uid=6850, symbol_order=7643)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.255813;

  <bb 2> :
  D.255813 = this->m_size;

  <bb 3> :
<L0>:
  return D.255813;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10219, decl_uid=192041, cgraph_uid=6851, symbol_order=7644)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.255815;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.255815 = _1 - _2;

  <bb 3> :
<L0>:
  return D.255815;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10220, decl_uid=192141, cgraph_uid=6852, symbol_order=7645)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.1894;
  bool D.255817;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1894 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1894 = 0;

  <bb 6> :
  D.255817 = iftmp.1894;

  <bb 7> :
<L4>:
  return D.255817;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9288, decl_uid=192131, cgraph_uid=5920, symbol_order=6709)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.255839;
  struct value_type * D.255838;
  struct mem_alloc_description & D.255837;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.255835;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.255838 = xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_alloc (n);
  nentries = D.255838;
  goto <bb 6>; [INV]

  <bb 5> :
  D.255839 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_path_array>::hash_entry> (n);
  nentries = D.255839;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.255835 = nentries;

  <bb 9> :
<L14>:
  return D.255835;

}



;; Function xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=9974, decl_uid=216831, cgraph_uid=6606, symbol_order=7399)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.255842;
  struct hash_entry * D.255840;

  <bb 2> :
  D.255842 = xcalloc (count, 40);
  D.255840 = D.255842;

  <bb 3> :
<L0>:
  return D.255840;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_path_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=9975, decl_uid=233030, cgraph_uid=6607, symbol_order=7400)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_path_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.255849;
  struct hash_entry * D.255848;
  struct hash_entry * D.255846;
  bool retval.1895;

  <bb 2> :
  retval.1895 = need_finalization_p<hash_map<tree_node*, function_path_array>::hash_entry> ();
  if (retval.1895 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 40;
  D.255848 = ggc_internal_cleared_alloc (_1, finalize, 40, c);
  D.255846 = D.255848;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 40;
  D.255849 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.255846 = D.255849;

  <bb 5> :
<L2>:
  return D.255846;

}



;; Function finalize<hash_map<tree_node*, function_path_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10486, decl_uid=239694, cgraph_uid=7121, symbol_order=7914)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_path_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_path_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10488, decl_uid=243119, cgraph_uid=7119, symbol_order=7912)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_path_array::~function_path_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_path_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10485, decl_uid=239693, cgraph_uid=7117, symbol_order=7910)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_path_array>::hash_entry> ()
{
  bool D.255850;

  <bb 2> :
  D.255850 = 1;

  <bb 3> :
<L0>:
  return D.255850;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10222, decl_uid=191964, cgraph_uid=6854, symbol_order=7647)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_path_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.255854;
  hashval_t D.255852;

  <bb 2> :
  _1 = &e->m_key;
  D.255854 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::hash (_1);
  D.255852 = D.255854;

  <bb 3> :
<L0>:
  return D.255852;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10221, decl_uid=192134, cgraph_uid=6853, symbol_order=7646)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.255867;
  bool D.255866;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.1897;
  struct value_type * D.255858;
  bool retval.1896;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 40;
  slot = _2 + _4;
  D.255866 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1896 = D.255866;
  if (retval.1896 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.255858 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 40;
  slot = _8 + _10;
  D.255867 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1897 = D.255867;
  if (retval.1897 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.255858 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.255858;

}



;; Function std::move<hash_map<tree_node*, function_path_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10223, decl_uid=236512, cgraph_uid=6855, symbol_order=7648)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_path_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.255868;

  <bb 2> :
  D.255868 = __t;

  <bb 3> :
<L0>:
  return D.255868;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9647, decl_uid=236537, cgraph_uid=6278, symbol_order=7067)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.236539)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.236539->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.236539->m_value;
  function_path_array::function_path_array (_2, _3);
  return;

}



;; Function function_path_array::function_path_array (_ZN19function_path_arrayC2EOS_, funcdef_no=9645, decl_uid=192256, cgraph_uid=6275, symbol_order=7064)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_path_array::function_path_array (struct function_path_array * const this, struct function_path_array & D.192258)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.192258->funtion_type_num;
  this->funtion_type_num = _1;
  _2 = &this->function_path_array;
  _3 = &D.192258->function_path_array;
  std::vector<function_path>::vector (_2, _3);
  return;

}



;; Function std::vector<function_path>::vector (_ZNSt6vectorI13function_pathSaIS0_EEC2EOS2_, funcdef_no=9643, decl_uid=174514, cgraph_uid=6272, symbol_order=7061)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<function_path>::vector (struct vector * const this, struct vector & D.174516)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.174557;
  _2 = &D.174516->D.174557;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_ZNSt12_Vector_baseI13function_pathSaIS0_EEC2EOS2_, funcdef_no=9641, decl_uid=173982, cgraph_uid=6269, symbol_order=7058)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.173984)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.173984->_M_impl;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI13function_pathSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10225, decl_uid=173888, cgraph_uid=6857, symbol_order=7650)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl&> (__x);
  std::allocator<function_path>::allocator (this, _1);
  _2 = &this->D.173902;
  _3 = std::move<std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl&> (__x);
  _4 = &_3->D.173902;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI13function_pathSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10654, decl_uid=241486, cgraph_uid=7286, symbol_order=8079)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.255870;

  <bb 2> :
  D.255870 = __t;

  <bb 3> :
<L0>:
  return D.255870;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI13function_pathSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10656, decl_uid=173844, cgraph_uid=7288, symbol_order=8081)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8924, decl_uid=216833, cgraph_uid=5556, symbol_order=6345)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9649, decl_uid=192152, cgraph_uid=6281, symbol_order=7070)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_path_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10227, decl_uid=191976, cgraph_uid=6859, symbol_order=7652)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::mark_empty<hash_map<tree_node*, function_path_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::mark_empty<hash_map<tree_node*, function_path_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10658, decl_uid=241501, cgraph_uid=7290, symbol_order=8083)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::mark_empty<hash_map<tree_node*, function_path_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function function_path_array::operator= (_ZN19function_path_arrayaSERKS_, funcdef_no=7826, decl_uid=214894, cgraph_uid=4457, symbol_order=5242)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path_array & function_path_array::operator= (struct function_path_array * const this, const struct function_path_array & D.214895)
{
  struct function_path_array & D.255873;

  <bb 2> :
  _1 = D.214895->funtion_type_num;
  this->funtion_type_num = _1;
  _2 = &D.214895->function_path_array;
  _3 = &this->function_path_array;
  std::vector<function_path>::operator= (_3, _2);
  D.255873 = this;

  <bb 3> :
<L0>:
  return D.255873;

}



;; Function symbolicinfo::~symbolicinfo (_ZN12symbolicinfoD2Ev, funcdef_no=6823, decl_uid=202198, cgraph_uid=3454, symbol_order=4231)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void symbolicinfo::~symbolicinfo (struct symbolicinfo * const this)
{
  <bb 2> :
  _1 = &this->symbolicExecutionPathConstraintarrayFalse;
  std::vector<symbolicinfoPatharray>::~vector (_1);
  _2 = &this->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::~vector (_2);
  _3 = &this->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::~vector (_3);
  _4 = &this->switchs;
  std::vector<basic_block_def*>::~vector (_4);
  *this = {CLOBBER};
  return;

}



;; Function PointerConstraint (_Z17PointerConstraintP3ptbS0_, funcdef_no=6825, decl_uid=202239, cgraph_uid=3457, symbol_order=4234)

Removing basic block 27
Removing basic block 37
Removing basic block 54
Removing basic block 55
Removing basic block 56
Removing basic block 57
Removing basic block 58
Removing basic block 59
Removing basic block 60
Merging blocks 79 and 82
Removing basic block 84
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119
;;
;; Loop 1
;;  header 73, multiple latches: 71 72
;;  depth 1, outer 0
;;  nodes: 73 71 72 15 17 56 65 64 63 62 60 61 59 57 58 55 54 53 52 22 37 36 39 49 50 46 38 51 44 45 41 43 42 40 48 47 27 35 34 32 33 29 31 30 28 23 26 25 24 20 21 19 18 16 14 13 12 11 69 68 67 66
;;
;; Loop 3
;;  header 62, latch 61
;;  depth 2, outer 1
;;  nodes: 62 61
;;
;; Loop 2
;;  header 59, latch 58
;;  depth 2, outer 1
;;  nodes: 59 58
;; 2 succs { 119 3 }
;; 3 succs { 119 4 }
;; 4 succs { 119 5 }
;; 5 succs { 119 6 }
;; 6 succs { 119 7 }
;; 7 succs { 9 8 }
;; 8 succs { 9 95 }
;; 9 succs { 10 74 }
;; 10 succs { 73 }
;; 11 succs { 15 12 }
;; 12 succs { 15 13 }
;; 13 succs { 15 14 }
;; 14 succs { 15 16 }
;; 15 succs { 72 }
;; 16 succs { 17 18 }
;; 17 succs { 72 }
;; 18 succs { 20 19 }
;; 19 succs { 20 21 }
;; 20 succs { 22 }
;; 21 succs { 22 }
;; 22 succs { 23 52 }
;; 23 succs { 24 27 }
;; 24 succs { 118 25 }
;; 25 succs { 26 27 }
;; 26 succs { 27 }
;; 27 succs { 28 36 }
;; 28 succs { 118 29 }
;; 29 succs { 30 33 }
;; 30 succs { 118 31 }
;; 31 succs { 32 33 }
;; 32 succs { 34 }
;; 33 succs { 34 }
;; 34 succs { 35 36 }
;; 35 succs { 36 }
;; 36 succs { 37 52 }
;; 37 succs { 38 52 }
;; 38 succs { 39 52 }
;; 39 succs { 40 52 }
;; 40 succs { 118 41 }
;; 41 succs { 42 45 }
;; 42 succs { 118 43 }
;; 43 succs { 44 45 }
;; 44 succs { 46 }
;; 45 succs { 46 }
;; 46 succs { 47 52 }
;; 47 succs { 118 48 }
;; 48 succs { 118 49 }
;; 49 succs { 50 52 }
;; 50 succs { 51 52 }
;; 51 succs { 118 52 }
;; 52 succs { 118 53 }
;; 53 succs { 118 54 }
;; 54 succs { 118 55 }
;; 55 succs { 56 57 }
;; 56 succs { 72 }
;; 57 succs { 59 }
;; 58 succs { 59 }
;; 59 succs { 58 60 }
;; 60 succs { 62 }
;; 61 succs { 62 }
;; 62 succs { 61 63 }
;; 63 succs { 118 64 }
;; 64 succs { 65 66 }
;; 65 succs { 72 }
;; 66 succs { 118 67 }
;; 67 succs { 118 68 }
;; 68 succs { 118 69 }
;; 69 succs { 70 71 }
;; 70 succs { 74 }
;; 71 succs { 73 }
;; 72 succs { 73 }
;; 73 succs { 11 74 }
;; 74 succs { 119 75 }
;; 75 succs { 119 76 }
;; 76 succs { 119 77 }
;; 77 succs { 119 78 }
;; 78 succs { 119 79 }
;; 79 succs { 119 80 }
;; 80 succs { 119 81 }
;; 81 succs { 119 82 }
;; 82 succs { 119 83 }
;; 83 succs { 119 84 }
;; 84 succs { 119 85 }
;; 85 succs { 119 86 }
;; 86 succs { 119 87 }
;; 87 succs { 119 88 }
;; 88 succs { 119 89 }
;; 89 succs { 119 90 }
;; 90 succs { 119 91 }
;; 91 succs { 119 92 }
;; 92 succs { 119 93 }
;; 93 succs { 119 94 }
;; 94 succs { 96 }
;; 95 succs { 119 96 }
;; 96 succs { 119 97 }
;; 97 succs { 119 98 }
;; 98 succs { 119 99 }
;; 99 succs { 119 100 }
;; 100 succs { 119 101 }
;; 101 succs { 119 102 }
;; 102 succs { 119 103 }
;; 103 succs { 119 104 }
;; 104 succs { 119 105 }
;; 105 succs { 119 106 }
;; 106 succs { 119 107 }
;; 107 succs { 119 108 }
;; 108 succs { 119 109 }
;; 109 succs { 119 110 }
;; 110 succs { 119 111 }
;; 111 succs { 119 112 }
;; 112 succs { 119 113 }
;; 113 succs { 119 114 }
;; 114 succs { 119 115 }
;; 115 succs { 119 116 }
;; 116 succs { 119 117 }
;; 117 succs { 1 }
;; 118 succs { 119 }
;; 119 succs { }
void PointerConstraint (struct ptb * ptable, struct ptb * ftable)
{
  struct gimple_array * D.255964;
  const char * D.255963;
  const char * D.255962;
  union tree_node * D.255961;
  union tree_node * D.255960;
  union tree_node * D.255959;
  union tree_node * D.255958;
  union tree_node * D.255957;
  union tree_node * D.255956;
  int pass;
  struct gimple * def_stmt;
  const char * name;
  struct gimple_array start;
  int colectCount;
  int count;
  struct tm * timeinfo;
  time_t rawtime;
  struct ptb * processtable;
  int Entrypoint;
  double time_used2;
  double time_used;
  struct timespec temp;
  struct cgraph_node * node;
  struct gimple_array start;
  struct gimple_array * used_stmt;
  struct timespec aend;
  struct timespec astart;
  bool retval.1918;
  bool retval.1917;
  bool retval.1916;
  bool retval.1915;
  bool iftmp.1914;
  bool retval.1913;
  bool retval.1912;
  bool iftmp.1911;
  bool retval.1910;
  bool retval.1909;
  bool retval.1908;
  bool retval.1907;
  bool iftmp.1906;
  bool retval.1905;

  <bb 2> :
  used_stmt = 0B;
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  clock_gettime (1, &astart);
  Entrypoint = 0;
  stderr.1898_1 = stderr;
  __builtin_fwrite ("start PointerConstraint\n", 1, 24, stderr.1898_1);

  <bb 3> :
  pointtablecount.1899_2 = pointtablecount;
  stderr.1900_3 = stderr;
  fprintf (stderr.1900_3, "ptable point %d \n", pointtablecount.1899_2);

  <bb 4> :
  stderr.1901_4 = stderr;
  __builtin_fwrite ("===============The second stage : Mapping stmt=================\n", 1, 64, stderr.1901_4);

  <bb 5> :
  FunctionStmtMappingAssign (ptable, used_stmt);

  <bb 6> :
  processtable = ptable;
  stderr.1902_5 = stderr;
  __builtin_fwrite ("===============The second stage : Program slicing=================\n", 1, 67, stderr.1902_5);

  <bb 7> :
  GIMPLE_FREE_COUNT.1903_6 = GIMPLE_FREE_COUNT;
  if (GIMPLE_FREE_COUNT.1903_6 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  freeanysis.1904_7 = freeanysis;
  if (freeanysis.1904_7 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 95>; [INV]

  <bb 9> :
  _8 = processtable->size;
  if (_8 > 0)
    goto <bb 10>; [INV]
  else
    goto <bb 74>; [INV]

  <bb 10> :
  count = 0;
  goto <bb 73>; [INV]

  <bb 11> :
  _9 = processtable->target;
  _10 = _9->typed.type;
  _11 = _10->base.code;
  if (_11 == 22)
    goto <bb 15>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  _12 = processtable->target;
  _13 = _12->typed.type;
  _14 = _13->base.code;
  if (_14 == 21)
    goto <bb 15>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  _15 = processtable->target;
  _16 = _15->typed.type;
  _17 = _16->base.code;
  if (_17 == 17)
    goto <bb 15>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  _18 = processtable->target;
  _19 = _18->base.code;
  if (_19 != 153)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  processtable = processtable->next;
  // predicted unlikely by continue predictor.
  goto <bb 72>; [INV]

  <bb 16> :
  _20 = processtable->target;
  _21 = _20->base.code;
  if (_21 == 26)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  processtable = processtable->next;
  // predicted unlikely by continue predictor.
  goto <bb 72>; [INV]

  <bb 18> :
  colectCount = 0;
  used_stmt = 0B;
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  _22 = processtable->target;
  def_stmt = _22->ssa_name.def_stmt;
  levelsize = 0;
  _23 = gimple_code (def_stmt);
  if (_23 != 20)
    goto <bb 20>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  _24 = gimple_code (def_stmt);
  if (_24 != 131)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  iftmp.1906 = 1;
  goto <bb 22>; [INV]

  <bb 21> :
  iftmp.1906 = 0;

  <bb 22> :
  retval.1905 = iftmp.1906;
  if (retval.1905 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 23> :
  pass = 0;
  _25 = gimple_code (def_stmt);
  retval.1907 = _25 == 8;
  if (retval.1907 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 24> :
  D.255956 = gimple_call_fn (def_stmt);

  <bb 25> :
  _26 = D.255956;
  _27 = _26->base.code;
  retval.1908 = _27 != 165;
  if (retval.1908 != 0)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  pass = 1;

  <bb 27> :
  _28 = gimple_code (def_stmt);
  retval.1909 = _28 == 6;
  if (retval.1909 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 28> :
  D.255957 = gimple_assign_rhs1 (def_stmt);

  <bb 29> :
  _29 = D.255957;
  _30 = _29->base.code;
  if (_30 != 165)
    goto <bb 30>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 30> :
  D.255958 = gimple_assign_rhs1 (def_stmt);

  <bb 31> :
  _31 = D.255958;
  _32 = _31->base.code;
  if (_32 != 36)
    goto <bb 32>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 32> :
  iftmp.1911 = 1;
  goto <bb 34>; [INV]

  <bb 33> :
  iftmp.1911 = 0;

  <bb 34> :
  retval.1910 = iftmp.1911;
  if (retval.1910 != 0)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  pass = 1;

  <bb 36> :
  _33 = processtable->target;
  _34 = _33->base.code;
  if (_34 != 131)
    goto <bb 37>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 37> :
  if (pass == 1)
    goto <bb 38>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 38> :
  if (def_stmt != 0B)
    goto <bb 39>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 39> :
  _35 = gimple_code (def_stmt);
  retval.1912 = _35 == 8;
  if (retval.1912 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 40> :
  D.255959 = gimple_call_fn (def_stmt);

  <bb 41> :
  _36 = D.255959;
  if (_36 != 0B)
    goto <bb 42>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 42> :
  D.255960 = gimple_call_fndecl (def_stmt);

  <bb 43> :
  _37 = D.255960;
  if (_37 != 0B)
    goto <bb 44>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 44> :
  iftmp.1914 = 1;
  goto <bb 46>; [INV]

  <bb 45> :
  iftmp.1914 = 0;

  <bb 46> :
  retval.1913 = iftmp.1914;
  if (retval.1913 != 0)
    goto <bb 47>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 47> :
  D.255961 = gimple_call_fn (def_stmt);

  <bb 48> :
  _38 = D.255961;
  D.255962 = get_name (_38);

  <bb 49> :
  name = D.255962;
  if (name != 0B)
    goto <bb 50>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 50> :
  _39 = strcmp (name, "malloc");
  if (_39 != 0)
    goto <bb 51>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 51> :
  _40 = processtable->target;
  _41 = processtable->target;
  Prenew_search_imm_use (used_stmt, _41, _40);

  <bb 52> :
  _42 = processtable->target;
  now_tree = _42;
  _43 = processtable->target;
  _44 = processtable->target;
  new_search_imm_use (used_stmt, _44, _43);

  <bb 53> :
  _45 = processtable->target;
  _46 = processtable->target;
  _47 = processtable->last_stmt;
  set_gimple_array (used_stmt, _47, _46, _45, 0B);

  <bb 54> :
  _48 = used_stmt->target;
  _49 = _48->base.code;
  _50 = (tree_code) _49;
  D.255963 = get_tree_code_name (_50);

  <bb 55> :
  _51 = D.255963;
  _52 = strcmp (_51, "<invalid tree code>");
  retval.1915 = _52 == 0;
  if (retval.1915 != 0)
    goto <bb 56>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 56> :
  processtable = processtable->next;
  // predicted unlikely by continue predictor.
  goto <bb 72>; [INV]

  <bb 57> :
  goto <bb 59>; [INV]

  <bb 58> :
  colectCount = colectCount + 1;
  std::vector<gimple*>::pop_back (&new_gimple_array);

  <bb 59> :
  _53 = std::vector<gimple*>::size (&new_gimple_array);
  retval.1916 = _53 != 0;
  if (retval.1916 != 0)
    goto <bb 58>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 60> :
  goto <bb 62>; [INV]

  <bb 61> :
  std::vector<tree_node*>::pop_back (&new_gimpletree_array);

  <bb 62> :
  _54 = std::vector<tree_node*>::size (&new_gimpletree_array);
  retval.1917 = _54 != 0;
  if (retval.1917 != 0)
    goto <bb 61>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 63> :
  treeGimpleArray.1919_55 = treeGimpleArray;
  _56 = &processtable->target;
  D.255964 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.1919_55, _56);

  <bb 64> :
  _57 = D.255964;
  retval.1918 = _57 != 0B;
  if (retval.1918 != 0)
    goto <bb 65>; [INV]
  else
    goto <bb 66>; [INV]

  <bb 65> :
  processtable = processtable->next;
  // predicted unlikely by continue predictor.
  goto <bb 72>; [INV]

  <bb 66> :
  treeGimpleArray.1920_58 = treeGimpleArray;
  _59 = &processtable->target;
  hash_map<tree_node*, gimple_array>::put (treeGimpleArray.1920_58, _59, used_stmt);

  <bb 67> :
  Entrypoint = Entrypoint + 1;
  stderr.1921_60 = stderr;
  __builtin_fwrite ("=============== *this point analyzable =================\n", 1, 57, stderr.1921_60);

  <bb 68> :
  _61 = processtable->last_stmt;
  debug (_61);

  <bb 69> :
  _62 = processtable->next;
  _63 = _62->target;
  if (_63 == 0B)
    goto <bb 70>; [INV]
  else
    goto <bb 71>; [INV]

  <bb 70> :
  start = {CLOBBER};
  goto <bb 74>; [INV]

  <bb 71> :
  processtable = processtable->next;
  start = {CLOBBER};
  goto <bb 73>; [INV]

  <bb 72> :
  start = {CLOBBER};

  <bb 73> :
  _64 = processtable->next;
  if (_64 != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 74>; [INV]

  <bb 74> :
  FunctionStmtMappingRet (ptable, ftable, used_stmt);

  <bb 75> :
  stderr.1922_65 = stderr;
  __builtin_fwrite ("===============The second stage : build fucntion type=================\n", 1, 71, stderr.1922_65);

  <bb 76> :
  stderr.1923_66 = stderr;
  __builtin_fwrite ("\x1b[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.1923_66);

  <bb 77> :
  stderr.1924_67 = stderr;
  __builtin_fwrite ("\x1b[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.1924_67);

  <bb 78> :
  stderr.1925_68 = stderr;
  __builtin_fwrite ("    =()=\n", 1, 9, stderr.1925_68);

  <bb 79> :
  stderr.1926_69 = stderr;
  __builtin_fwrite (" ,/\'_||_\n", 1, 9, stderr.1926_69);

  <bb 80> :
  stderr.1927_70 = stderr;
  __builtin_fwrite ("  (___  `.\n", 1, 11, stderr.1927_70);

  <bb 81> :
  stderr.1928_71 = stderr;
  __builtin_fwrite (" ./  `==\'\n", 1, 10, stderr.1928_71);

  <bb 82> :
  stderr.1929_72 = stderr;
  __builtin_fwrite ("      |||\n", 1, 10, stderr.1929_72);

  <bb 83> :
  stderr.1930_73 = stderr;
  __builtin_fwrite ("      |||\n", 1, 10, stderr.1930_73);

  <bb 84> :
  stderr.1931_74 = stderr;
  __builtin_fwrite ("      |||\n", 1, 10, stderr.1931_74);

  <bb 85> :
  stderr.1932_75 = stderr;
  __builtin_fwrite ("      |||\n", 1, 10, stderr.1932_75);

  <bb 86> :
  stderr.1933_76 = stderr;
  __builtin_fwrite ("\x1b[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.1933_76);

  <bb 87> :
  stderr.1934_77 = stderr;
  __builtin_fwrite ("\x1b[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.1934_77);

  <bb 88> :
  clock_gettime (1, &aend);
  temp = diff (astart, aend);

  <bb 89> :
  _78 = temp.tv_sec;
  _79 = (double) _78;
  _80 = temp.tv_nsec;
  _81 = (double) _80;
  _82 = _81 / 1.0e+9;
  time_used = _79 + _82;
  stderr.1935_83 = stderr;
  __builtin_fwrite ("\n=============== The third stage : Start detection  =================\n", 1, 70, stderr.1935_83);

  <bb 90> :
  dump_fucntion (node, ptable, used_stmt);

  <bb 91> :
  stderr.1936_84 = stderr;
  __builtin_fwrite ("\n=============== The third stage : detection  End=================\n", 1, 67, stderr.1936_84);

  <bb 92> :
  clock_gettime (1, &aend);
  temp = diff (astart, aend);

  <bb 93> :
  _85 = temp.tv_sec;
  _86 = (double) _85;
  _87 = temp.tv_nsec;
  _88 = (double) _87;
  _89 = _88 / 1.0e+9;
  time_used2 = _86 + _89;
  printfBasicblock ();

  <bb 94> :
  goto <bb 96>; [INV]

  <bb 95> :
  stderr.1937_90 = stderr;
  __builtin_fwrite ("\x1b[40;41m GIMPLE STMT NO FREE STMT\x1b[0m\n", 1, 38, stderr.1937_90);

  <bb 96> :
  time (&rawtime);
  timeinfo = localtime (&rawtime);
  stderr.1938_91 = stderr;
  __builtin_fwrite ("\x1b[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.1938_91);

  <bb 97> :
  stderr.1939_92 = stderr;
  __builtin_fwrite ("\x1b[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.1939_92);

  <bb 98> :
  stderr.1940_93 = stderr;
  __builtin_fwrite ("    =()=\n", 1, 9, stderr.1940_93);

  <bb 99> :
  stderr.1941_94 = stderr;
  __builtin_fwrite (" ,/\'_||_\n", 1, 9, stderr.1941_94);

  <bb 100> :
  stderr.1942_95 = stderr;
  __builtin_fwrite ("  (___  `.\n", 1, 11, stderr.1942_95);

  <bb 101> :
  stderr.1943_96 = stderr;
  __builtin_fwrite (" ./  `==\'\n", 1, 10, stderr.1943_96);

  <bb 102> :
  stderr.1944_97 = stderr;
  __builtin_fwrite ("                   \n", 1, 20, stderr.1944_97);

  <bb 103> :
  stderr.1945_98 = stderr;
  __builtin_fwrite ("    ~~~~~~~~~~~  \n", 1, 18, stderr.1945_98);

  <bb 104> :
  stderr.1946_99 = stderr;
  __builtin_fwrite (" ~~~~~~\n", 1, 8, stderr.1946_99);

  <bb 105> :
  stderr.1947_100 = stderr;
  __builtin_fwrite ("           ~~~~~~~\n", 1, 19, stderr.1947_100);

  <bb 106> :
  GIMPLE_MALLOC_COUNT.1948_101 = GIMPLE_MALLOC_COUNT;
  stderr.1949_102 = stderr;
  fprintf (stderr.1949_102, "\x1b[40;34m    gimple malloc count : %d \x1b[0m\n", GIMPLE_MALLOC_COUNT.1948_101);

  <bb 107> :
  GIMPLE_FREE_COUNT.1950_103 = GIMPLE_FREE_COUNT;
  stderr.1951_104 = stderr;
  fprintf (stderr.1951_104, "\x1b[40;34m    gimple free   count : %d \x1b[0m\n", GIMPLE_FREE_COUNT.1950_103);

  <bb 108> :
  pointtablecount.1952_105 = pointtablecount;
  stderr.1953_106 = stderr;
  fprintf (stderr.1953_106, "\x1b[40;34m    all ptable point : %d \x1b[0m\n", pointtablecount.1952_105);

  <bb 109> :
  stderr.1954_107 = stderr;
  fprintf (stderr.1954_107, "\x1b[40;34m    analyzable ptable point : %d \x1b[0m\n", Entrypoint);

  <bb 110> :
  totalsize.1955_108 = totalsize;
  _109 = (double) totalsize.1955_108;
  _110 = _109 * 9.99999999999999954748111825886258685613938723690807819366e-7;
  stderr.1956_111 = stderr;
  fprintf (stderr.1956_111, "\x1b[40;34m    used_stmt array stack totalsize of : %f mb\x1b[0m\n", _110);

  <bb 111> :
  stderr.1957_112 = stderr;
  fprintf (stderr.1957_112, "\x1b[40;34m    collect time: : %f s \x1b[0m\n", time_used);

  <bb 112> :
  stderr.1958_113 = stderr;
  fprintf (stderr.1958_113, "\x1b[40;34m    algorithm time: %f s \x1b[0m\n", time_used2);

  <bb 113> :
  gimplestmt_count.1959_114 = gimplestmt_count;
  stderr.1960_115 = stderr;
  fprintf (stderr.1960_115, "\x1b[40;34m    gimple stmt count : : %d \x1b[0m\n", gimplestmt_count.1959_114);

  <bb 114> :
  _116 = asctime (timeinfo);
  stderr.1961_117 = stderr;
  fprintf (stderr.1961_117, "\x1b[40;34m    this report analysis in %s \x1b[0m\n", _116);

  <bb 115> :
  stderr.1962_118 = stderr;
  __builtin_fwrite ("\x1b[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.1962_118);

  <bb 116> :
  stderr.1963_119 = stderr;
  __builtin_fwrite ("\x1b[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.1963_119);

  <bb 117> :
  astart = {CLOBBER};
  aend = {CLOBBER};
  start = {CLOBBER};
  temp = {CLOBBER};
  rawtime = {CLOBBER};
  return;

  <bb 118> :
<L79>:
  start = {CLOBBER};
  resx 2

  <bb 119> :
<L80>:
  astart = {CLOBBER};
  aend = {CLOBBER};
  start = {CLOBBER};
  temp = {CLOBBER};
  rawtime = {CLOBBER};
  resx 1

}



;; Function std::vector<gimple*>::pop_back (_ZNSt6vectorIP6gimpleSaIS1_EE8pop_backEv, funcdef_no=7827, decl_uid=183663, cgraph_uid=4459, symbol_order=5244)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<gimple*>::pop_back (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.183973._M_impl.D.183329._M_finish;
  _2 = _1 + 18446744073709551608;
  this->D.183973._M_impl.D.183329._M_finish = _2;
  _3 = this->D.183973._M_impl.D.183329._M_finish;
  _4 = &this->D.183973._M_impl;
  std::allocator_traits<std::allocator<gimple*> >::destroy<gimple*> (_4, _3);
  return;

}



;; Function std::allocator_traits<std::allocator<gimple*> >::destroy<gimple*> (_ZNSt16allocator_traitsISaIP6gimpleEE7destroyIS1_EEvRS2_PT_, funcdef_no=8791, decl_uid=214902, cgraph_uid=5423, symbol_order=6212)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<gimple*> >::destroy<gimple*> (struct allocator_type & __a, struct gimple * * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple*>::destroy<gimple*> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple*>::destroy<gimple*> (_ZN9__gnu_cxx13new_allocatorIP6gimpleE7destroyIS2_EEvPT_, funcdef_no=9650, decl_uid=228325, cgraph_uid=6282, symbol_order=7071)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple*>::destroy<gimple*> (struct new_allocator * const this, struct gimple * * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, gimple_array>::put (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7828, decl_uid=190065, cgraph_uid=4460, symbol_order=5245)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
bool hash_map<tree_node*, gimple_array>::put (struct hash_map * const this, union tree_node * const & k, const struct gimple_array & v)
{
  bool D.255977;
  struct hash_entry * D.255976;
  unsigned int D.255975;
  bool ins;
  struct hash_entry * e;
  bool D.255973;
  void * D.215042;
  void * D.215041;

  <bb 2> :
  _1 = &this->m_table;
  D.255975 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::hash (k);
  _2 = D.255975;
  D.255976 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.255976;
  D.255977 = hash_map<tree_node*, gimple_array>::hash_entry::is_empty (e);
  ins = D.255977;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.215041 = &e->m_value;
  D.215042 = operator new (48, D.215041);
  MEM[(struct gimple_array *)D.215042] = *v;
  goto <bb 5>; [INV]

  <bb 4> :
  e->m_value = *v;

  <bb 5> :
  D.255973 = ~ins;

  <bb 6> :
<L3>:
  return D.255973;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8792, decl_uid=190220, cgraph_uid=5424, symbol_order=6213)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.256027;
  bool D.256026;
  bool D.256025;
  bool D.256024;
  bool D.256023;
  bool D.256022;
  struct value_type * D.256021;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.1969;
  bool retval.1968;
  bool retval.1967;
  bool retval.1966;
  bool retval.1965;
  bool retval.1964;
  struct value_type * D.255983;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 56;
  entry = _11 + _13;
  size = this->m_size;
  D.256022 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1964 = D.256022;
  if (retval.1964 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.256023 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1965 = D.256023;
  if (retval.1965 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 56;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.256024 = hash_map<tree_node*, gimple_array>::hash_entry::equal (entry, comparable);
  retval.1966 = D.256024;
  if (retval.1966 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 56;
  D.255983 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 56;
  entry = _24 + _26;
  D.256025 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1967 = D.256025;
  if (retval.1967 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.256026 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1968 = D.256026;
  if (retval.1968 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 56;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.256027 = hash_map<tree_node*, gimple_array>::hash_entry::equal (entry, comparable);
  retval.1969 = D.256027;
  if (retval.1969 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 56;
  D.255983 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.255983 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.255983 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 56;
  D.255983 = _37 + _39;

  <bb 27> :
<L37>:
  return D.255983;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9651, decl_uid=190301, cgraph_uid=6283, symbol_order=7072)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.256058;
  unsigned int D.256057;
  bool D.256056;
  bool D.256055;
  struct mem_alloc_description & D.256054;
  struct value_type * D.256053;
  unsigned int D.256052;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.236580;
  void * D.236579;
  struct hash_entry * D.236605;
  bool iftmp.1973;
  bool retval.1972;
  bool iftmp.1971;
  bool retval.1970;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 56;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1971 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1971 = 0;

  <bb 6> :
  retval.1970 = iftmp.1971;
  if (retval.1970 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.256052 = hash_table_higher_prime_index (_5);
  nindex = D.256052;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.256053 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.256053;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.256055 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.256055;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.256056 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.256056;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.1973 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.1973 = 0;

  <bb 15> :
  retval.1972 = iftmp.1973;
  if (retval.1972 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.256057 = hash_map<tree_node*, gimple_array>::hash_entry::hash (x);
  _16 = D.256057;
  D.256058 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.256058;
  D.236605 = std::move<hash_map<tree_node*, gimple_array>::hash_entry&> (x);
  D.236579 = q;
  D.236580 = operator new (56, D.236579);
  MEM[(struct value_type *)D.236580] = *D.236605;

  <bb 17> :
  p = p + 56;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10228, decl_uid=190196, cgraph_uid=6860, symbol_order=7653)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.256059;

  <bb 2> :
  D.256059 = this->m_size;

  <bb 3> :
<L0>:
  return D.256059;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10229, decl_uid=190198, cgraph_uid=6861, symbol_order=7654)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.256061;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.256061 = _1 - _2;

  <bb 3> :
<L0>:
  return D.256061;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10230, decl_uid=190298, cgraph_uid=6862, symbol_order=7655)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.1974;
  bool D.256063;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1974 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1974 = 0;

  <bb 6> :
  D.256063 = iftmp.1974;

  <bb 7> :
<L4>:
  return D.256063;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9204, decl_uid=190288, cgraph_uid=5836, symbol_order=6625)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.256085;
  struct value_type * D.256084;
  struct mem_alloc_description & D.256083;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.256081;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.256084 = xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_alloc (n);
  nentries = D.256084;
  goto <bb 6>; [INV]

  <bb 5> :
  D.256085 = ggc_cleared_vec_alloc<hash_map<tree_node*, gimple_array>::hash_entry> (n);
  nentries = D.256085;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.256081 = nentries;

  <bb 9> :
<L14>:
  return D.256081;

}



;; Function xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=9914, decl_uid=216639, cgraph_uid=6546, symbol_order=7339)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.256088;
  struct hash_entry * D.256086;

  <bb 2> :
  D.256088 = xcalloc (count, 56);
  D.256086 = D.256088;

  <bb 3> :
<L0>:
  return D.256086;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, gimple_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=9915, decl_uid=232047, cgraph_uid=6547, symbol_order=7340)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, gimple_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.256095;
  struct hash_entry * D.256094;
  struct hash_entry * D.256092;
  bool retval.1975;

  <bb 2> :
  retval.1975 = need_finalization_p<hash_map<tree_node*, gimple_array>::hash_entry> ();
  if (retval.1975 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 56;
  D.256094 = ggc_internal_cleared_alloc (_1, finalize, 56, c);
  D.256092 = D.256094;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 56;
  D.256095 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.256092 = D.256095;

  <bb 5> :
<L2>:
  return D.256092;

}



;; Function finalize<hash_map<tree_node*, gimple_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10447, decl_uid=239421, cgraph_uid=7079, symbol_order=7872)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, gimple_array>::hash_entry> (void * p)
{
  <bb 2> :
  MEM[(struct hash_entry *)p] = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, gimple_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10446, decl_uid=239420, cgraph_uid=7078, symbol_order=7871)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, gimple_array>::hash_entry> ()
{
  bool D.256096;

  <bb 2> :
  D.256096 = 0;

  <bb 3> :
<L0>:
  return D.256096;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10232, decl_uid=190124, cgraph_uid=6864, symbol_order=7657)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, gimple_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.256100;
  hashval_t D.256098;

  <bb 2> :
  _1 = &e->m_key;
  D.256100 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::hash (_1);
  D.256098 = D.256100;

  <bb 3> :
<L0>:
  return D.256098;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10231, decl_uid=190291, cgraph_uid=6863, symbol_order=7656)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.256113;
  bool D.256112;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.1977;
  struct value_type * D.256104;
  bool retval.1976;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 56;
  slot = _2 + _4;
  D.256112 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1976 = D.256112;
  if (retval.1976 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.256104 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 56;
  slot = _8 + _10;
  D.256113 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1977 = D.256113;
  if (retval.1977 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.256104 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.256104;

}



;; Function std::move<hash_map<tree_node*, gimple_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10233, decl_uid=236577, cgraph_uid=6865, symbol_order=7658)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, gimple_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.256114;

  <bb 2> :
  D.256114 = __t;

  <bb 3> :
<L0>:
  return D.256114;

}



;; Function xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8892, decl_uid=216641, cgraph_uid=5524, symbol_order=6313)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9652, decl_uid=190309, cgraph_uid=6284, symbol_order=7073)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, gimple_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10234, decl_uid=190136, cgraph_uid=6866, symbol_order=7659)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, gimple_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::mark_empty<hash_map<tree_node*, gimple_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::mark_empty<hash_map<tree_node*, gimple_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10659, decl_uid=241524, cgraph_uid=7291, symbol_order=8084)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::mark_empty<hash_map<tree_node*, gimple_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function detect (_Z6detectv, funcdef_no=6826, decl_uid=202280, cgraph_uid=3533, symbol_order=4310)

Removing basic block 48
Merging blocks 49 and 51
Removing basic block 84
Removing basic block 87
Removing basic block 90
Removing basic block 105
Removing basic block 143
Merging blocks 147 and 149
Removing basic block 152
;; 6 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 2
;;  header 95, latch 94
;;  depth 1, outer 0
;;  nodes: 95 94 93 91 92 59 65 64 63 62 61 60 58 57 56 55 90 89 68 88 87 79 86 84 85 82 83 80 81 78 69 77 76 75 71 74 73 72 70 67 66
;;
;; Loop 3
;;  header 89, latch 88
;;  depth 2, outer 2
;;  nodes: 89 88 87 79 86 84 85 82 83 80 81 78 69 77 76 75 71 74 73 72 70
;;
;; Loop 5
;;  header 87, latch 86
;;  depth 3, outer 3
;;  nodes: 87 86 84 85 82 83 80 81
;;
;; Loop 4
;;  header 75, latch 74
;;  depth 3, outer 3
;;  nodes: 75 74 73 72 76
;;
;; Loop 1
;;  header 39, latch 38
;;  depth 1, outer 0
;;  nodes: 39 38 37 36 42 41 40
;; 2 succs { 169 3 }
;; 3 succs { 147 4 }
;; 4 succs { 169 5 }
;; 5 succs { 148 6 }
;; 6 succs { 169 7 }
;; 7 succs { 149 8 }
;; 8 succs { 169 9 }
;; 9 succs { 150 10 }
;; 10 succs { 169 11 }
;; 11 succs { 151 12 }
;; 12 succs { 169 13 }
;; 13 succs { 152 14 }
;; 14 succs { 169 15 }
;; 15 succs { 153 16 }
;; 16 succs { 169 17 }
;; 17 succs { 154 18 }
;; 18 succs { 169 19 }
;; 19 succs { 155 20 }
;; 20 succs { 169 21 }
;; 21 succs { 156 22 }
;; 22 succs { 169 23 }
;; 23 succs { 157 24 }
;; 24 succs { 169 25 }
;; 25 succs { 158 26 }
;; 26 succs { 169 27 }
;; 27 succs { 159 28 }
;; 28 succs { 29 50 }
;; 29 succs { 163 30 }
;; 30 succs { 162 31 }
;; 31 succs { 162 32 }
;; 32 succs { 33 35 }
;; 33 succs { 162 34 }
;; 34 succs { 46 }
;; 35 succs { 39 }
;; 36 succs { 160 37 }
;; 37 succs { 160 38 }
;; 38 succs { 160 39 }
;; 39 succs { 160 40 }
;; 40 succs { 160 41 }
;; 41 succs { 160 42 }
;; 42 succs { 36 43 }
;; 43 succs { 160 44 }
;; 44 succs { 162 45 }
;; 45 succs { 46 }
;; 46 succs { 49 47 }
;; 47 succs { 48 }
;; 48 succs { 50 }
;; 49 succs { 139 }
;; 50 succs { 169 51 }
;; 51 succs { 169 52 }
;; 52 succs { 169 53 }
;; 53 succs { 169 54 }
;; 54 succs { 95 }
;; 55 succs { 167 56 }
;; 56 succs { 167 57 }
;; 57 succs { 167 58 }
;; 58 succs { 59 60 }
;; 59 succs { 92 }
;; 60 succs { 167 61 }
;; 61 succs { 167 62 }
;; 62 succs { 63 66 }
;; 63 succs { 167 64 }
;; 64 succs { 167 65 }
;; 65 succs { 92 }
;; 66 succs { 167 67 }
;; 67 succs { 166 68 }
;; 68 succs { 89 }
;; 69 succs { 70 78 }
;; 70 succs { 164 71 }
;; 71 succs { 75 }
;; 72 succs { 164 73 }
;; 73 succs { 164 74 }
;; 74 succs { 164 75 }
;; 75 succs { 164 76 }
;; 76 succs { 72 77 }
;; 77 succs { 78 }
;; 78 succs { 166 79 }
;; 79 succs { 87 }
;; 80 succs { 81 82 }
;; 81 succs { 165 82 }
;; 82 succs { 83 84 }
;; 83 succs { 165 84 }
;; 84 succs { 85 86 }
;; 85 succs { 165 86 }
;; 86 succs { 87 }
;; 87 succs { 80 88 }
;; 88 succs { 89 }
;; 89 succs { 69 90 }
;; 90 succs { 166 91 }
;; 91 succs { 93 }
;; 92 succs { 93 }
;; 93 succs { 169 94 }
;; 94 succs { 95 }
;; 95 succs { 55 96 }
;; 96 succs { 169 97 }
;; 97 succs { 169 98 }
;; 98 succs { 99 100 }
;; 99 succs { 169 100 }
;; 100 succs { 101 102 }
;; 101 succs { 102 }
;; 102 succs { 103 104 }
;; 103 succs { 104 }
;; 104 succs { 105 106 }
;; 105 succs { 106 }
;; 106 succs { 107 108 }
;; 107 succs { 108 }
;; 108 succs { 109 110 }
;; 109 succs { 110 }
;; 110 succs { 111 112 }
;; 111 succs { 112 }
;; 112 succs { 113 114 }
;; 113 succs { 114 }
;; 114 succs { 115 116 }
;; 115 succs { 116 }
;; 116 succs { 117 118 }
;; 117 succs { 118 }
;; 118 succs { 119 120 }
;; 119 succs { 120 }
;; 120 succs { 121 122 }
;; 121 succs { 122 }
;; 122 succs { 123 124 }
;; 123 succs { 124 }
;; 124 succs { 125 126 }
;; 125 succs { 126 }
;; 126 succs { 169 127 }
;; 127 succs { 169 128 }
;; 128 succs { 168 129 }
;; 129 succs { 130 137 }
;; 130 succs { 168 131 }
;; 131 succs { 168 132 }
;; 132 succs { 168 133 }
;; 133 succs { 168 134 }
;; 134 succs { 168 135 }
;; 135 succs { 168 136 }
;; 136 succs { 168 138 }
;; 137 succs { 168 138 }
;; 138 succs { 139 }
;; 139 succs { 141 140 }
;; 140 succs { 142 }
;; 141 succs { 142 }
;; 142 succs { 145 143 }
;; 143 succs { 144 }
;; 144 succs { 146 }
;; 145 succs { 146 }
;; 146 succs { 1 }
;; 147 succs { 169 }
;; 148 succs { 169 }
;; 149 succs { 169 }
;; 150 succs { 169 }
;; 151 succs { 169 }
;; 152 succs { 169 }
;; 153 succs { 169 }
;; 154 succs { 169 }
;; 155 succs { 169 }
;; 156 succs { 169 }
;; 157 succs { 169 }
;; 158 succs { 169 }
;; 159 succs { 169 }
;; 160 succs { 161 }
;; 161 succs { 162 }
;; 162 succs { 163 }
;; 163 succs { 169 }
;; 164 succs { 166 }
;; 165 succs { 166 }
;; 166 succs { 167 }
;; 167 succs { 169 }
;; 168 succs { 169 }
;; 169 succs { 170 }
;; 170 succs { 171 }
;; 171 succs { }
void detect ()
{
  int finally_tmp.2034;
  int finally_tmp.2033;
  struct __ostream_type & D.256264;
  struct basic_ostream & D.256263;
  struct __ostream_type & D.256262;
  struct basic_ostream & D.256261;
  bool D.256260;
  struct cgraph_node * D.256259;
  bool D.256252;
  struct function * D.256251;
  bool D.256250;
  const char * D.256249;
  struct cgraph_node * D.256248;
  int finally_tmp.2032;
  bool D.256236;
  struct __istream_type & D.256235;
  struct basic_istream & D.256234;
  bool D.256233;
  void * D.256231;
  void * D.256229;
  void * D.256227;
  void * D.256225;
  void * D.256223;
  void * D.256221;
  void * D.256219;
  void * D.256217;
  void * D.256215;
  void * D.256213;
  void * D.256211;
  void * D.256209;
  void * D.256207;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct edge_iterator ei;
  struct edge_def * e;
  struct Graph DFS;
  int score;
  struct string name;
  struct ifstream ifs;
  struct ofstream myfile;
  struct timevar_time_def now;
  double time_used;
  struct timespec temp;
  struct timespec end;
  struct timespec start;
  double s;
  struct cgraph_edge * e;
  struct basic_block_def * bb;
  struct function * fn;
  struct function * ofun;
  union tree_node * attr;
  union tree_node * ptr;
  struct breakpoint getbp;
  unsigned int i;
  const int N;
  struct var_points_to vpt;
  struct cgraph_node * node;
  struct timeval stime;
  struct timeval utime;
  struct rusage ru;
  bool retval.2031;
  struct hash_map * function_relate_collect.2030;
  struct hash_map * function_graph_collect.2029;
  struct hash_map * function_free_collect.2028;
  struct hash_map * function_path_collect.2027;
  struct hash_map * function_pthread_exit_collect.2026;
  struct hash_map * function_pthread_detched_collect.2025;
  struct hash_map * pthread_attr_setdetachstates.2024;
  struct hash_map * function_assign_collect.2023;
  struct hash_map * function_return_collect.2022;
  struct hash_map * fDFS.2021;
  struct hash_map * syminfo.2020;
  struct hash_map * treeGimpleArray.2019;
  struct hash_map * tvpt.2018;
  bool retval.2008;
  bool retval.2006;
  bool retval.2004;
  bool retval.2002;
  bool retval.2000;
  bool retval.1989;
  struct __istream_type & D.256123;
  bool retval.1983;
  bool retval.1980;
  void * D.203902;
  void * D.203901;
  void * D.203530;
  void * D.203529;
  void * D.203528;
  void * D.203527;
  void * D.203526;
  void * D.203525;
  void * D.203524;
  void * D.203523;
  void * D.203102;
  void * D.203101;
  void * D.203100;

  <bb 2> :
  var_points_to::var_points_to (&vpt);
  N = 100;
  breakpoint::breakpoint (&getbp);
  ipa = 1;
  D.256207 = operator new (48);

  <bb 3> :
  D.203100 = D.256207;
  hash_map<tree_node*, var_points_to>::hash_map (D.203100, 13, 0, 1, 0);

  <bb 4> :
  tvpt = D.203100;
  D.256209 = operator new (48);

  <bb 5> :
  D.203101 = D.256209;
  hash_map<tree_node*, gimple_array>::hash_map (D.203101, 13, 0, 1, 0);

  <bb 6> :
  treeGimpleArray = D.203101;
  D.256211 = operator new (48);

  <bb 7> :
  D.203102 = D.256211;
  hash_map<basic_block_def*, symbolicinfo>::hash_map (D.203102, 13, 0, 1, 0);

  <bb 8> :
  syminfo = D.203102;
  D.256213 = operator new (48);

  <bb 9> :
  D.203523 = D.256213;
  hash_map<cgraph_node*, Graph>::hash_map (D.203523, 13, 0, 1, 0);

  <bb 10> :
  fDFS = D.203523;
  D.256215 = operator new (48);

  <bb 11> :
  D.203524 = D.256215;
  hash_map<tree_node*, function_return_array>::hash_map (D.203524, 13, 0, 1, 0);

  <bb 12> :
  function_return_collect = D.203524;
  D.256217 = operator new (48);

  <bb 13> :
  D.203525 = D.256217;
  hash_map<tree_node*, function_assign_array>::hash_map (D.203525, 13, 0, 1, 0);

  <bb 14> :
  function_assign_collect = D.203525;
  D.256219 = operator new (48);

  <bb 15> :
  D.203526 = D.256219;
  hash_map<tree_node*, pthread_attr_array>::hash_map (D.203526, 13, 0, 1, 0);

  <bb 16> :
  pthread_attr_setdetachstates = D.203526;
  D.256221 = operator new (48);

  <bb 17> :
  D.203527 = D.256221;
  hash_map<tree_node*, function_pthread_detched_array>::hash_map (D.203527, 13, 0, 1, 0);

  <bb 18> :
  function_pthread_detched_collect = D.203527;
  D.256223 = operator new (48);

  <bb 19> :
  D.203528 = D.256223;
  hash_map<tree_node*, function_pthread_exit_array>::hash_map (D.203528, 13, 0, 1, 0);

  <bb 20> :
  function_pthread_exit_collect = D.203528;
  D.256225 = operator new (48);

  <bb 21> :
  D.203529 = D.256225;
  hash_map<tree_node*, function_path_array>::hash_map (D.203529, 13, 0, 1, 0);

  <bb 22> :
  function_path_collect = D.203529;
  D.256227 = operator new (48);

  <bb 23> :
  D.203530 = D.256227;
  hash_map<tree_node*, function_free_array>::hash_map (D.203530, 13, 0, 1, 0);

  <bb 24> :
  function_free_collect = D.203530;
  D.256229 = operator new (48);

  <bb 25> :
  D.203901 = D.256229;
  hash_map<tree_node*, function_graph_array>::hash_map (D.203901, 13, 0, 1, 0);

  <bb 26> :
  function_graph_collect = D.203901;
  D.256231 = operator new (48);

  <bb 27> :
  D.203902 = D.256231;
  hash_map<tree_node*, function_relate_array>::hash_map (D.203902, 13, 0, 1, 0);

  <bb 28> :
  function_relate_collect = D.203902;
  vscode_extensionmod.1978_1 = vscode_extensionmod;
  if (vscode_extensionmod.1978_1 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 29> :
  std::basic_ifstream<char>::basic_ifstream (&ifs, "/root/.vscode-server/data/User/globalStorage/vscode-samples.helloworld-sample/breakpoint.txt", 8);

  <bb 30> :
  stderr.1979_2 = stderr;
  __builtin_fwrite ("==============breakpoint=========\n", 1, 34, stderr.1979_2);

  <bb 31> :
  D.256233 = std::basic_ifstream<char>::is_open (&ifs);

  <bb 32> :
  _3 = D.256233;
  retval.1980 = ~_3;
  if (retval.1980 != 0)
    goto <bb 33>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 33> :
  std::operator<< <std::char_traits<char> > (&cout, "Failed to open file.\n");

  <bb 34> :
  // predicted unlikely by early return (on trees) predictor.
  finally_tmp.2032 = 0;
  goto <bb 46>; [INV]

  <bb 35> :
  std::__cxx11::basic_string<char>::basic_string (&name);
  goto <bb 39>; [INV]

  <bb 36> :
  std::__cxx11::basic_string<char>::operator= (&getbp.name, &name);

  <bb 37> :
  score.1981_4 = score;
  getbp.line = score.1981_4;
  _5 = getbp.line;
  _6 = std::__cxx11::basic_string<char>::c_str (&getbp.name);
  stderr.1982_7 = stderr;
  fprintf (stderr.1982_7, "%s %d\n", _6, _5);

  <bb 38> :
  std::vector<breakpoint>::push_back (&vbreakpoint, &getbp);

  <bb 39> :
  D.256234 = std::operator>><char, std::char_traits<char>, std::allocator<char> > (&ifs.D.155214, &name);

  <bb 40> :
  _8 = D.256234;
  D.256235 = std::basic_istream<char>::operator>> (_8, &score);

  <bb 41> :
  D.256123 = D.256235;
  _9 = D.256123->_vptr.basic_istream;
  _10 = _9 + 18446744073709551592;
  _11 = MEM[(long int *)_10];
  _12 = (sizetype) _11;
  _13 = D.256123 + _12;
  D.256236 = std::basic_ios<char>::operator bool (_13);

  <bb 42> :
  retval.1983 = D.256236;
  if (retval.1983 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 43> :
  std::basic_ifstream<char>::close (&ifs);

  <bb 44> :
  std::__cxx11::basic_string<char>::~basic_string (&name);
  name = {CLOBBER};
  score = {CLOBBER};
  std::basic_ifstream<char>::close (&ifs);

  <bb 45> :
  finally_tmp.2032 = 1;

  <bb 46> :
  std::basic_ifstream<char>::~basic_ifstream (&ifs);
  if (finally_tmp.2032 == 1)
    goto <bb 47>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 47> :
<L7>:

  <bb 48> :
  ifs = {CLOBBER};
  goto <bb 50>; [INV]

  <bb 49> :
  ifs = {CLOBBER};
  finally_tmp.2033 = 0;
  goto <bb 139>; [INV]

  <bb 50> :
  _14 = time (0B);
  _15 = (unsigned int) _14;
  _16 = getpid ();
  _17 = (unsigned int) _16;
  _18 = _15 + _17;
  srand (_18);
  stderr.1984_19 = stderr;
  __builtin_fwrite ("=======ipa_pta=========\n", 1, 24, stderr.1984_19);

  <bb 51> :
  init_table ();

  <bb 52> :
  s = 0.0;
  clock_gettime (1, &start);
  getrusage (0, &ru);
  utime = ru.ru_utime;
  stime = ru.ru_stime;
  stderr.1985_20 = stderr;
  __builtin_fwrite ("=============== The first stage : Point of interest stmt collect =================\n", 1, 83, stderr.1985_20);

  <bb 53> :
  symtab.1986_21 = symtab;
  D.256248 = symbol_table::first_defined_function (symtab.1986_21);

  <bb 54> :
  _22 = D.256248;
  node = _22;
  goto <bb 95>; [INV]

  <bb 55> :
  node.1987_23 = node;
  _24 = node.1987_23->D.97512.decl;
  D.256249 = get_name (_24);

  <bb 56> :
  _25 = D.256249;
  stderr.1988_26 = stderr;
  fprintf (stderr.1988_26, "=======node_fun:%s=========\n", _25);

  <bb 57> :
  node.1990_27 = node;
  _28 = node.1990_27->D.97512.decl;
  D.256250 = gimple_has_body_p (_28);

  <bb 58> :
  _29 = D.256250;
  retval.1989 = ~_29;
  if (retval.1989 != 0)
    goto <bb 59>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 59> :
  // predicted unlikely by continue predictor.
  goto <bb 92>; [INV]

  <bb 60> :
  node.1991_30 = node;
  D.256251 = cgraph_node::get_fun (node.1991_30);

  <bb 61> :
  _31 = D.256251;
  push_cfun (_31);

  <bb 62> :
  cfun.1992_32 = cfun;
  if (cfun.1992_32 == 0B)
    goto <bb 63>; [INV]
  else
    goto <bb 66>; [INV]

  <bb 63> :
  pop_cfun ();

  <bb 64> :
  free_dominance_info (1);

  <bb 65> :
  // predicted unlikely by continue predictor.
  goto <bb 92>; [INV]

  <bb 66> :
  calculate_dominance_info (1);

  <bb 67> :
  Graph::Graph (&DFS);
  cfun.1993_33 = cfun;
  _34 = cfun.1993_33->cfg;
  _35 = _34->x_last_basic_block;
  Graph::init_Graph (&DFS, _35);

  <bb 68> :
  cfun.1994_36 = cfun;
  _37 = cfun.1994_36->cfg;
  _38 = _37->x_entry_block_ptr;
  bb = _38->next_bb;
  goto <bb 89>; [INV]

  <bb 69> :
  cfun.1995_39 = cfun;
  _40 = cfun.1995_39->cfg;
  _41 = _40->x_exit_block_ptr;
  _42 = _41->prev_bb;
  if (bb != _42)
    goto <bb 70>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 70> :
  _43 = bb->index;
  stderr.1996_44 = stderr;
  fprintf (stderr.1996_44, "node:= %d \n ", _43);

  <bb 71> :
  _45 = &bb->succs;
  ei = ei_start_1 (_45);
  goto <bb 75>; [INV]

  <bb 72> :
  e.1997_46 = e;
  _47 = e.1997_46->dest;
  _48 = _47->index;
  _49 = bb->index;
  Graph::addEdge (&DFS, _49, _48);

  <bb 73> :
  e.1998_50 = e;
  _51 = e.1998_50->dest;
  _52 = _51->index;
  stderr.1999_53 = stderr;
  fprintf (stderr.1999_53, "\tnext_branch :=%d\n", _52);

  <bb 74> :
  ei_next (&ei);

  <bb 75> :
  D.256252 = ei_cond (ei, &e);

  <bb 76> :
  retval.2000 = D.256252;
  if (retval.2000 != 0)
    goto <bb 72>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 77> :
  e = {CLOBBER};
  ei = {CLOBBER};

  <bb 78> :
  fDFS.2001_54 = fDFS;
  hash_map<cgraph_node*, Graph>::put (fDFS.2001_54, &node, &DFS);

  <bb 79> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 87>; [INV]

  <bb 80> :
  gc = gsi_stmt (gsi);
  retval.2002 = is_gimple_call (gc);
  if (retval.2002 != 0)
    goto <bb 81>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 81> :
  node.2003_55 = node;
  collect_function_call (gc, node.2003_55, bb);

  <bb 82> :
  retval.2004 = is_gimple_assign (gc);
  if (retval.2004 != 0)
    goto <bb 83>; [INV]
  else
    goto <bb 84>; [INV]

  <bb 83> :
  node.2005_56 = node;
  collect_function_call (gc, node.2005_56, bb);

  <bb 84> :
  _57 = gimple_code (gc);
  retval.2006 = _57 == 10;
  if (retval.2006 != 0)
    goto <bb 85>; [INV]
  else
    goto <bb 86>; [INV]

  <bb 85> :
  node.2007_58 = node;
  collect_function_return (gc, node.2007_58, bb);

  <bb 86> :
  gsi_next (&gsi);

  <bb 87> :
  _59 = gsi_end_p (gsi);
  retval.2008 = ~_59;
  if (retval.2008 != 0)
    goto <bb 80>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 88> :
  gsi = {CLOBBER};
  bb = bb->next_bb;

  <bb 89> :
  cfun.2009_60 = cfun;
  _61 = cfun.2009_60->cfg;
  _62 = _61->x_exit_block_ptr;
  if (bb != _62)
    goto <bb 69>; [INV]
  else
    goto <bb 90>; [INV]

  <bb 90> :
  pop_cfun ();

  <bb 91> :
  Graph::~Graph (&DFS);
  DFS = {CLOBBER};
  goto <bb 93>; [INV]

  <bb 92> :
  DFS = {CLOBBER};

  <bb 93> :
  symtab.2010_63 = symtab;
  node.2011_64 = node;
  D.256259 = symbol_table::next_defined_function (symtab.2010_63, node.2011_64);

  <bb 94> :
  _65 = D.256259;
  node = _65;

  <bb 95> :
  node.2012_66 = node;
  if (node.2012_66 != 0B)
    goto <bb 55>; [INV]
  else
    goto <bb 96>; [INV]

  <bb 96> :
  stderr.2013_67 = stderr;
  __builtin_fwrite ("=============== The first stage :  record fucntion =================\n", 1, 69, stderr.2013_67);

  <bb 97> :
  node.2014_68 = node;
  record_fucntion (node.2014_68);

  <bb 98> :
  ipa.2015_69 = ipa;
  if (ipa.2015_69 != 0)
    goto <bb 99>; [INV]
  else
    goto <bb 100>; [INV]

  <bb 99> :
  ftable.2016_70 = ftable;
  ptable.2017_71 = ptable;
  PointerConstraint (ptable.2017_71, ftable.2016_70);

  <bb 100> :
  tvpt.2018 = tvpt;
  if (tvpt.2018 != 0B)
    goto <bb 101>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 101> :
  hash_map<tree_node*, var_points_to>::~hash_map (tvpt.2018);
  operator delete (tvpt.2018, 48);

  <bb 102> :
  treeGimpleArray.2019 = treeGimpleArray;
  if (treeGimpleArray.2019 != 0B)
    goto <bb 103>; [INV]
  else
    goto <bb 104>; [INV]

  <bb 103> :
  hash_map<tree_node*, gimple_array>::~hash_map (treeGimpleArray.2019);
  operator delete (treeGimpleArray.2019, 48);

  <bb 104> :
  syminfo.2020 = syminfo;
  if (syminfo.2020 != 0B)
    goto <bb 105>; [INV]
  else
    goto <bb 106>; [INV]

  <bb 105> :
  hash_map<basic_block_def*, symbolicinfo>::~hash_map (syminfo.2020);
  operator delete (syminfo.2020, 48);

  <bb 106> :
  fDFS.2021 = fDFS;
  if (fDFS.2021 != 0B)
    goto <bb 107>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 107> :
  hash_map<cgraph_node*, Graph>::~hash_map (fDFS.2021);
  operator delete (fDFS.2021, 48);

  <bb 108> :
  function_return_collect.2022 = function_return_collect;
  if (function_return_collect.2022 != 0B)
    goto <bb 109>; [INV]
  else
    goto <bb 110>; [INV]

  <bb 109> :
  hash_map<tree_node*, function_return_array>::~hash_map (function_return_collect.2022);
  operator delete (function_return_collect.2022, 48);

  <bb 110> :
  function_assign_collect.2023 = function_assign_collect;
  if (function_assign_collect.2023 != 0B)
    goto <bb 111>; [INV]
  else
    goto <bb 112>; [INV]

  <bb 111> :
  hash_map<tree_node*, function_assign_array>::~hash_map (function_assign_collect.2023);
  operator delete (function_assign_collect.2023, 48);

  <bb 112> :
  pthread_attr_setdetachstates.2024 = pthread_attr_setdetachstates;
  if (pthread_attr_setdetachstates.2024 != 0B)
    goto <bb 113>; [INV]
  else
    goto <bb 114>; [INV]

  <bb 113> :
  hash_map<tree_node*, pthread_attr_array>::~hash_map (pthread_attr_setdetachstates.2024);
  operator delete (pthread_attr_setdetachstates.2024, 48);

  <bb 114> :
  function_pthread_detched_collect.2025 = function_pthread_detched_collect;
  if (function_pthread_detched_collect.2025 != 0B)
    goto <bb 115>; [INV]
  else
    goto <bb 116>; [INV]

  <bb 115> :
  hash_map<tree_node*, function_pthread_detched_array>::~hash_map (function_pthread_detched_collect.2025);
  operator delete (function_pthread_detched_collect.2025, 48);

  <bb 116> :
  function_pthread_exit_collect.2026 = function_pthread_exit_collect;
  if (function_pthread_exit_collect.2026 != 0B)
    goto <bb 117>; [INV]
  else
    goto <bb 118>; [INV]

  <bb 117> :
  hash_map<tree_node*, function_pthread_exit_array>::~hash_map (function_pthread_exit_collect.2026);
  operator delete (function_pthread_exit_collect.2026, 48);

  <bb 118> :
  function_path_collect.2027 = function_path_collect;
  if (function_path_collect.2027 != 0B)
    goto <bb 119>; [INV]
  else
    goto <bb 120>; [INV]

  <bb 119> :
  hash_map<tree_node*, function_path_array>::~hash_map (function_path_collect.2027);
  operator delete (function_path_collect.2027, 48);

  <bb 120> :
  function_free_collect.2028 = function_free_collect;
  if (function_free_collect.2028 != 0B)
    goto <bb 121>; [INV]
  else
    goto <bb 122>; [INV]

  <bb 121> :
  hash_map<tree_node*, function_free_array>::~hash_map (function_free_collect.2028);
  operator delete (function_free_collect.2028, 48);

  <bb 122> :
  function_graph_collect.2029 = function_graph_collect;
  if (function_graph_collect.2029 != 0B)
    goto <bb 123>; [INV]
  else
    goto <bb 124>; [INV]

  <bb 123> :
  hash_map<tree_node*, function_graph_array>::~hash_map (function_graph_collect.2029);
  operator delete (function_graph_collect.2029, 48);

  <bb 124> :
  function_relate_collect.2030 = function_relate_collect;
  if (function_relate_collect.2030 != 0B)
    goto <bb 125>; [INV]
  else
    goto <bb 126>; [INV]

  <bb 125> :
  hash_map<tree_node*, function_relate_array>::~hash_map (function_relate_collect.2030);
  operator delete (function_relate_collect.2030, 48);

  <bb 126> :
  clock_gettime (1, &end);
  temp = diff (start, end);

  <bb 127> :
  _72 = temp.tv_sec;
  _73 = (double) _72;
  _74 = temp.tv_nsec;
  _75 = (double) _74;
  _76 = _75 / 1.0e+9;
  time_used = _73 + _76;
  std::basic_ofstream<char>::basic_ofstream (&myfile, "time.txt", 16);

  <bb 128> :
  D.256260 = std::basic_ofstream<char>::is_open (&myfile);

  <bb 129> :
  retval.2031 = D.256260;
  if (retval.2031 != 0)
    goto <bb 130>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 130> :
  D.256261 = std::operator<< <std::char_traits<char> > (&myfile.D.155383, "utime_used: ");

  <bb 131> :
  _77 = D.256261;
  D.256262 = std::basic_ostream<char>::operator<< (_77, time_used);

  <bb 132> :
  _78 = D.256262;
  std::operator<< <std::char_traits<char> > (_78, " s;\n");

  <bb 133> :
  D.256263 = std::operator<< <std::char_traits<char> > (&myfile.D.155383, "stime_used: ");

  <bb 134> :
  _79 = D.256263;
  D.256264 = std::basic_ostream<char>::operator<< (_79, time_used);

  <bb 135> :
  _80 = D.256264;
  std::operator<< <std::char_traits<char> > (_80, " s;\n");

  <bb 136> :
  std::basic_ofstream<char>::close (&myfile);
  goto <bb 138>; [INV]

  <bb 137> :
  std::operator<< <std::char_traits<char> > (&cout, "Unable to open file");

  <bb 138> :
  std::basic_ofstream<char>::~basic_ofstream (&myfile);
  finally_tmp.2033 = 1;

  <bb 139> :
  breakpoint::~breakpoint (&getbp);
  if (finally_tmp.2033 == 1)
    goto <bb 140>; [INV]
  else
    goto <bb 141>; [INV]

  <bb 140> :
<L91>:
  finally_tmp.2034 = 1;
  goto <bb 142>; [INV]

  <bb 141> :
<L92>:
  finally_tmp.2034 = 0;

  <bb 142> :
  var_points_to::~var_points_to (&vpt);
  if (finally_tmp.2034 == 1)
    goto <bb 143>; [INV]
  else
    goto <bb 145>; [INV]

  <bb 143> :
<L95>:

  <bb 144> :
  ru = {CLOBBER};
  utime = {CLOBBER};
  stime = {CLOBBER};
  node = {CLOBBER};
  vpt = {CLOBBER};
  getbp = {CLOBBER};
  start = {CLOBBER};
  end = {CLOBBER};
  temp = {CLOBBER};
  now = {CLOBBER};
  myfile = {CLOBBER};
  goto <bb 146>; [INV]

  <bb 145> :
  ru = {CLOBBER};
  utime = {CLOBBER};
  stime = {CLOBBER};
  node = {CLOBBER};
  vpt = {CLOBBER};
  getbp = {CLOBBER};
  start = {CLOBBER};
  end = {CLOBBER};
  temp = {CLOBBER};
  now = {CLOBBER};
  myfile = {CLOBBER};

  <bb 146> :
<L100>:
  return;

  <bb 147> :
<L101>:
  operator delete (D.203100, 48);
  resx 4

  <bb 148> :
<L102>:
  operator delete (D.203101, 48);
  resx 6

  <bb 149> :
<L103>:
  operator delete (D.203102, 48);
  resx 8

  <bb 150> :
<L104>:
  operator delete (D.203523, 48);
  resx 10

  <bb 151> :
<L105>:
  operator delete (D.203524, 48);
  resx 12

  <bb 152> :
<L106>:
  operator delete (D.203525, 48);
  resx 14

  <bb 153> :
<L107>:
  operator delete (D.203526, 48);
  resx 16

  <bb 154> :
<L108>:
  operator delete (D.203527, 48);
  resx 18

  <bb 155> :
<L109>:
  operator delete (D.203528, 48);
  resx 20

  <bb 156> :
<L110>:
  operator delete (D.203529, 48);
  resx 22

  <bb 157> :
<L111>:
  operator delete (D.203530, 48);
  resx 24

  <bb 158> :
<L112>:
  operator delete (D.203901, 48);
  resx 26

  <bb 159> :
<L113>:
  operator delete (D.203902, 48);
  resx 28

  <bb 160> :
<L114>:
  std::__cxx11::basic_string<char>::~basic_string (&name);
  resx 33

  <bb 161> :
<L115>:
  name = {CLOBBER};
  score = {CLOBBER};
  resx 32

  <bb 162> :
<L116>:
  std::basic_ifstream<char>::~basic_ifstream (&ifs);
  resx 31

  <bb 163> :
<L117>:
  ifs = {CLOBBER};
  resx 30

  <bb 164> :
<L118>:
  e = {CLOBBER};
  ei = {CLOBBER};
  resx 40

  <bb 165> :
<L119>:
  gsi = {CLOBBER};
  resx 42

  <bb 166> :
<L120>:
  Graph::~Graph (&DFS);
  resx 39

  <bb 167> :
<L121>:
  DFS = {CLOBBER};
  resx 38

  <bb 168> :
<L122>:
  std::basic_ofstream<char>::~basic_ofstream (&myfile);
  resx 59

  <bb 169> :
<L123>:
  breakpoint::~breakpoint (&getbp);
  resx 3

  <bb 170> :
<L124>:
  var_points_to::~var_points_to (&vpt);
  resx 2

  <bb 171> :
<L125>:
  ru = {CLOBBER};
  utime = {CLOBBER};
  stime = {CLOBBER};
  node = {CLOBBER};
  vpt = {CLOBBER};
  getbp = {CLOBBER};
  start = {CLOBBER};
  end = {CLOBBER};
  temp = {CLOBBER};
  now = {CLOBBER};
  myfile = {CLOBBER};
  resx 1

}



;; Function var_points_to::var_points_to (_ZN13var_points_toC2Ev, funcdef_no=6838, decl_uid=202357, cgraph_uid=3469, symbol_order=4246)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void var_points_to::var_points_to (struct var_points_to * const this)
{
  <bb 2> :
  _1 = &this->may_malloc_path;
  std::vector<std::vector<std::pair<fdecl, unsigned int> > >::vector (_1);
  return;

}



;; Function std::vector<std::vector<std::pair<fdecl, unsigned int> > >::vector (_ZNSt6vectorIS_ISt4pairI5fdecljESaIS2_EESaIS4_EEC2Ev, funcdef_no=6836, decl_uid=172411, cgraph_uid=3466, symbol_order=4243)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<std::vector<std::pair<fdecl, unsigned int> > >::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.172419;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_base (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EEC2Ev, funcdef_no=6834, decl_uid=171869, cgraph_uid=3463, symbol_order=4240)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EE12_Vector_implC2Ev, funcdef_no=7830, decl_uid=171761, cgraph_uid=4462, symbol_order=5247)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::allocator (this);
  _1 = &this->D.171764;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::allocator (_ZNSaISt6vectorISt4pairI5fdecljESaIS2_EEEC2Ev, funcdef_no=8795, decl_uid=171539, cgraph_uid=5427, symbol_order=6216)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::new_allocator (_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairI5fdecljESaIS4_EEEC2Ev, funcdef_no=9654, decl_uid=171468, cgraph_uid=6286, symbol_order=7075)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EE17_Vector_impl_dataC2Ev, funcdef_no=8798, decl_uid=171711, cgraph_uid=5430, symbol_order=6219)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function breakpoint::breakpoint (_ZN10breakpointC2Ev, funcdef_no=6845, decl_uid=202549, cgraph_uid=3476, symbol_order=4253)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void breakpoint::breakpoint (struct breakpoint * const this)
{
  <bb 2> :
  _1 = &this->name;
  std::__cxx11::basic_string<char>::basic_string (_1);
  return;

}



;; Function hash_map<tree_node*, var_points_to>::hash_map (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7845, decl_uid=203092, cgraph_uid=4477, symbol_order=5262)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, var_points_to>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8809, decl_uid=203051, cgraph_uid=5441, symbol_order=6230)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256282;
  unsigned int D.256281;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256281 = hash_table_higher_prime_index (size);
  size_prime_index = D.256281;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256282 = hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256282;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9659, decl_uid=202997, cgraph_uid=6291, symbol_order=7080)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.256298;
  struct value_type * D.256297;
  struct mem_alloc_description & D.256296;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.256294;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.256297 = xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_alloc (n);
  nentries = D.256297;
  goto <bb 6>; [INV]

  <bb 5> :
  D.256298 = ggc_cleared_vec_alloc<hash_map<tree_node*, var_points_to>::hash_entry> (n);
  nentries = D.256298;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.256294 = nentries;

  <bb 9> :
<L14>:
  return D.256294;

}



;; Function xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10237, decl_uid=216615, cgraph_uid=6869, symbol_order=7662)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.256301;
  struct hash_entry * D.256299;

  <bb 2> :
  D.256301 = xcalloc (count, 40);
  D.256299 = D.256301;

  <bb 3> :
<L0>:
  return D.256299;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, var_points_to>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10238, decl_uid=236944, cgraph_uid=6870, symbol_order=7663)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, var_points_to>::hash_entry> (size_t c)
{
  struct hash_entry * D.256308;
  struct hash_entry * D.256307;
  struct hash_entry * D.256305;
  bool retval.2035;

  <bb 2> :
  retval.2035 = need_finalization_p<hash_map<tree_node*, var_points_to>::hash_entry> ();
  if (retval.2035 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 40;
  D.256307 = ggc_internal_cleared_alloc (_1, finalize, 40, c);
  D.256305 = D.256307;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 40;
  D.256308 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.256305 = D.256308;

  <bb 5> :
<L2>:
  return D.256305;

}



;; Function finalize<hash_map<tree_node*, var_points_to>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10663, decl_uid=241545, cgraph_uid=7298, symbol_order=8091)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, var_points_to>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, var_points_to>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, var_points_to>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10665, decl_uid=243887, cgraph_uid=7296, symbol_order=8089)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, var_points_to>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  var_points_to::~var_points_to (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, var_points_to>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10662, decl_uid=241544, cgraph_uid=7294, symbol_order=8087)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, var_points_to>::hash_entry> ()
{
  bool D.256309;

  <bb 2> :
  D.256309 = 1;

  <bb 3> :
<L0>:
  return D.256309;

}



;; Function hash_map<tree_node*, gimple_array>::hash_map (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7848, decl_uid=190383, cgraph_uid=4480, symbol_order=5265)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, gimple_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8812, decl_uid=190342, cgraph_uid=5444, symbol_order=6233)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256312;
  unsigned int D.256311;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256311 = hash_table_higher_prime_index (size);
  size_prime_index = D.256311;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256312 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256312;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_map (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7851, decl_uid=196834, cgraph_uid=4483, symbol_order=5268)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8815, decl_uid=196793, cgraph_uid=5447, symbol_order=6236)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256314;
  unsigned int D.256313;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256313 = hash_table_higher_prime_index (size);
  size_prime_index = D.256313;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256314 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256314;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<cgraph_node*, Graph>::hash_map (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7854, decl_uid=203515, cgraph_uid=4486, symbol_order=5271)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8818, decl_uid=203474, cgraph_uid=5450, symbol_order=6239)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256316;
  unsigned int D.256315;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256315 = hash_table_higher_prime_index (size);
  size_prime_index = D.256315;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256316 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256316;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9660, decl_uid=203420, cgraph_uid=6292, symbol_order=7081)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.256332;
  struct value_type * D.256331;
  struct mem_alloc_description & D.256330;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.256328;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.256331 = xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_alloc (n);
  nentries = D.256331;
  goto <bb 6>; [INV]

  <bb 5> :
  D.256332 = ggc_cleared_vec_alloc<hash_map<cgraph_node*, Graph>::hash_entry> (n);
  nentries = D.256332;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.256328 = nentries;

  <bb 9> :
<L14>:
  return D.256328;

}



;; Function xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10240, decl_uid=216687, cgraph_uid=6872, symbol_order=7665)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.256335;
  struct hash_entry * D.256333;

  <bb 2> :
  D.256335 = xcalloc (count, 56);
  D.256333 = D.256335;

  <bb 3> :
<L0>:
  return D.256333;

}



;; Function ggc_cleared_vec_alloc<hash_map<cgraph_node*, Graph>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10241, decl_uid=236955, cgraph_uid=6873, symbol_order=7666)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<cgraph_node*, Graph>::hash_entry> (size_t c)
{
  struct hash_entry * D.256342;
  struct hash_entry * D.256341;
  struct hash_entry * D.256339;
  bool retval.2036;

  <bb 2> :
  retval.2036 = need_finalization_p<hash_map<cgraph_node*, Graph>::hash_entry> ();
  if (retval.2036 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 56;
  D.256341 = ggc_internal_cleared_alloc (_1, finalize, 56, c);
  D.256339 = D.256341;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 56;
  D.256342 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.256339 = D.256342;

  <bb 5> :
<L2>:
  return D.256339;

}



;; Function finalize<hash_map<cgraph_node*, Graph>::hash_entry> (_Z8finalizeIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10669, decl_uid=241554, cgraph_uid=7304, symbol_order=8097)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<cgraph_node*, Graph>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<cgraph_node*, Graph>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::~hash_entry (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10671, decl_uid=243910, cgraph_uid=7302, symbol_order=8095)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  Graph::~Graph (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<cgraph_node*, Graph>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10668, decl_uid=241553, cgraph_uid=7300, symbol_order=8093)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<cgraph_node*, Graph>::hash_entry> ()
{
  bool D.256343;

  <bb 2> :
  D.256343 = 1;

  <bb 3> :
<L0>:
  return D.256343;

}



;; Function hash_map<tree_node*, function_return_array>::hash_map (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7857, decl_uid=189854, cgraph_uid=4489, symbol_order=5274)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8821, decl_uid=189813, cgraph_uid=5453, symbol_order=6242)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256346;
  unsigned int D.256345;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256345 = hash_table_higher_prime_index (size);
  size_prime_index = D.256345;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256346 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256346;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_map (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7860, decl_uid=191015, cgraph_uid=4492, symbol_order=5277)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8824, decl_uid=190974, cgraph_uid=5456, symbol_order=6245)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256348;
  unsigned int D.256347;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256347 = hash_table_higher_prime_index (size);
  size_prime_index = D.256347;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256348 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256348;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_map (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7863, decl_uid=194952, cgraph_uid=4495, symbol_order=5280)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, pthread_attr_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8827, decl_uid=194911, cgraph_uid=5459, symbol_order=6248)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256350;
  unsigned int D.256349;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256349 = hash_table_higher_prime_index (size);
  size_prime_index = D.256349;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256350 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256350;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_map (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7866, decl_uid=193580, cgraph_uid=4498, symbol_order=5283)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8830, decl_uid=193539, cgraph_uid=5462, symbol_order=6251)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256352;
  unsigned int D.256351;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256351 = hash_table_higher_prime_index (size);
  size_prime_index = D.256351;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256352 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256352;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_map (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7869, decl_uid=194056, cgraph_uid=4501, symbol_order=5286)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8833, decl_uid=194015, cgraph_uid=5465, symbol_order=6254)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256354;
  unsigned int D.256353;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256353 = hash_table_higher_prime_index (size);
  size_prime_index = D.256353;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256354 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256354;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_path_array>::hash_map (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7872, decl_uid=192226, cgraph_uid=4504, symbol_order=5289)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8836, decl_uid=192185, cgraph_uid=5468, symbol_order=6257)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256356;
  unsigned int D.256355;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256355 = hash_table_higher_prime_index (size);
  size_prime_index = D.256355;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256356 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256356;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_free_array>::hash_map (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7875, decl_uid=192708, cgraph_uid=4507, symbol_order=5292)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8839, decl_uid=192667, cgraph_uid=5471, symbol_order=6260)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256358;
  unsigned int D.256357;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256357 = hash_table_higher_prime_index (size);
  size_prime_index = D.256357;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256358 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256358;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_graph_array>::hash_map (_ZN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7878, decl_uid=203893, cgraph_uid=4510, symbol_order=5295)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_graph_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8842, decl_uid=203852, cgraph_uid=5474, symbol_order=6263)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.256360;
  unsigned int D.256359;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.256359 = hash_table_higher_prime_index (size);
  size_prime_index = D.256359;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.256360 = hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.256360;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9661, decl_uid=203798, cgraph_uid=6293, symbol_order=7082)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.256376;
  struct value_type * D.256375;
  struct mem_alloc_description & D.256374;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.256372;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.256375 = xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_alloc (n);
  nentries = D.256375;
  goto <bb 6>; [INV]

  <bb 5> :
  D.256376 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_graph_array>::hash_entry> (n);
  nentries = D.256376;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.256372 = nentries;

  <bb 9> :
<L14>:
  return D.256372;

}



;; Function xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10242, decl_uid=216879, cgraph_uid=6874, symbol_order=7667)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.256379;
  struct hash_entry * D.256377;

  <bb 2> :
  D.256379 = xcalloc (count, 16);
  D.256377 = D.256379;

  <bb 3> :
<L0>:
  return D.256377;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_graph_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10243, decl_uid=236966, cgraph_uid=6875, symbol_order=7668)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_graph_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.256386;
  struct hash_entry * D.256385;
  struct hash_entry * D.256383;
  bool retval.2037;

  <bb 2> :
  retval.2037 = need_finalization_p<hash_map<tree_node*, function_graph_array>::hash_entry> ();
  if (retval.2037 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 16;
  D.256385 = ggc_internal_cleared_alloc (_1, finalize, 16, c);
  D.256383 = D.256385;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 16;
  D.256386 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.256383 = D.256386;

  <bb 5> :
<L2>:
  return D.256383;

}



;; Function finalize<hash_map<tree_node*, function_graph_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10674, decl_uid=241561, cgraph_uid=7306, symbol_order=8099)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_graph_array>::hash_entry> (void * p)
{
  <bb 2> :
  MEM[(struct hash_entry *)p] = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_graph_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10673, decl_uid=241560, cgraph_uid=7305, symbol_order=8098)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_graph_array>::hash_entry> ()
{
  bool D.256387;

  <bb 2> :
  D.256387 = 0;

  <bb 3> :
<L0>:
  return D.256387;

}



;; Function std::__cxx11::basic_string<char>::basic_string (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev, funcdef_no=7842, decl_uid=126276, cgraph_uid=4474, symbol_order=5259)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::basic_string<char>::basic_string (struct basic_string * const this)
{
  char * D.256389;
  struct allocator D.216123;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_dataplus;
  std::allocator<char>::allocator (&D.216123);
  D.256389 = std::__cxx11::basic_string<char>::_M_local_data (this);
  _2 = D.256389;
  std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (_1, _2, &D.216123);
  std::allocator<char>::~allocator (&D.216123);
  D.216123 = {CLOBBER};
  std::__cxx11::basic_string<char>::_M_set_length (this, 0);
  return;

}



;; Function std::allocator<char>::allocator (_ZNSaIcEC2Ev, funcdef_no=7264, decl_uid=117129, cgraph_uid=3896, symbol_order=4678)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<char>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<char>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<char>::new_allocator (_ZN9__gnu_cxx13new_allocatorIcEC2Ev, funcdef_no=8167, decl_uid=117056, cgraph_uid=4799, symbol_order=5584)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<char>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcOS3_, funcdef_no=8180, decl_uid=125172, cgraph_uid=4812, symbol_order=5597)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (struct _Alloc_hider * const this, char * __dat, struct allocator & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::allocator<char>&> (__a);
  std::allocator<char>::allocator (this, _1);
  this->_M_p = __dat;
  return;

}



;; Function std::move<std::allocator<char>&> (_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=8178, decl_uid=207544, cgraph_uid=4810, symbol_order=5595)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::allocator<char>&> (struct allocator & __t)
{
  struct type & D.256390;

  <bb 2> :
  D.256390 = __t;

  <bb 3> :
<L0>:
  return D.256390;

}



;; Function std::allocator<char>::~allocator (_ZNSaIcED2Ev, funcdef_no=7267, decl_uid=117134, cgraph_uid=3899, symbol_order=4681)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<char>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<char>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<char>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIcED2Ev, funcdef_no=8170, decl_uid=117061, cgraph_uid=4802, symbol_order=5587)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<char>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<breakpoint>::push_back (_ZNSt6vectorI10breakpointSaIS0_EE9push_backERKS0_, funcdef_no=7891, decl_uid=185905, cgraph_uid=4524, symbol_order=5309)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<breakpoint>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.256395;

  <bb 2> :
  _1 = this->D.186225._M_impl.D.185570._M_finish;
  _2 = this->D.186225._M_impl.D.185570._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.186225._M_impl.D.185570._M_finish;
  _4 = &this->D.186225._M_impl;
  std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, const breakpoint&> (_4, _3, __x);
  _5 = this->D.186225._M_impl.D.185570._M_finish;
  _6 = _5 + 40;
  this->D.186225._M_impl.D.185570._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.256395 = std::vector<breakpoint>::end (this);
  std::vector<breakpoint>::_M_realloc_insert<const breakpoint&> (this, D.256395, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, const breakpoint&> (_ZNSt16allocator_traitsISaI10breakpointEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8858, decl_uid=216236, cgraph_uid=5490, symbol_order=6279)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, const breakpoint&> (struct allocator_type & __a, struct breakpoint * __p, const struct breakpoint & __args#0)
{
  <bb 2> :
  _1 = std::forward<const breakpoint&> (__args#0);
  __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, const breakpoint&> (__a, __p, _1);
  return;

}



;; Function std::forward<const breakpoint&> (_ZSt7forwardIRK10breakpointEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9666, decl_uid=229446, cgraph_uid=6298, symbol_order=7087)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct breakpoint & std::forward<const breakpoint&> (const struct type & __t)
{
  const struct breakpoint & D.256396;

  <bb 2> :
  D.256396 = __t;

  <bb 3> :
<L0>:
  return D.256396;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, const breakpoint&> (_ZN9__gnu_cxx13new_allocatorI10breakpointE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9667, decl_uid=229448, cgraph_uid=6302, symbol_order=7091)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, const breakpoint&> (struct new_allocator * const this, struct breakpoint * __p, const struct breakpoint & __args#0)
{
  void * D.236998;
  void * D.236997;
  const struct breakpoint & D.237002;

  <bb 2> :
  D.237002 = std::forward<const breakpoint&> (__args#0);
  D.236997 = __p;
  D.236998 = operator new (40, D.236997);
  breakpoint::breakpoint (D.236998, D.237002);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  operator delete (D.236998, D.236997);
  resx 1

}



;; Function breakpoint::breakpoint (_ZN10breakpointC2ERKS_, funcdef_no=9669, decl_uid=202557, cgraph_uid=6300, symbol_order=7089)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void breakpoint::breakpoint (struct breakpoint * const this, const struct breakpoint & D.202559)
{
  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  _1 = &this->name;
  _2 = &D.202559->name;
  std::__cxx11::basic_string<char>::basic_string (_1, _2);
  _3 = D.202559->line;
  this->line = _3;
  return;

}



;; Function std::__cxx11::basic_string<char>::basic_string (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_, funcdef_no=8234, decl_uid=126265, cgraph_uid=4866, symbol_order=5651)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 8 3 }
;; 3 succs { 8 4 }
;; 4 succs { 10 5 }
;; 5 succs { 10 6 }
;; 6 succs { 10 7 }
;; 7 succs { 1 }
;; 8 succs { 9 }
;; 9 succs { }
;; 10 succs { }
void std::__cxx11::basic_string<char>::basic_string (struct basic_string * const this, const struct basic_string & __str)
{
  char * D.256404;
  char * D.256403;
  char * D.256400;
  const struct allocator_type & D.256399;
  struct allocator D.218708;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_dataplus;
  D.256399 = std::__cxx11::basic_string<char>::_M_get_allocator (__str);
  _2 = D.256399;
  D.218708 = __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy (_2); [return slot optimization]
  D.256400 = std::__cxx11::basic_string<char>::_M_local_data (this);

  <bb 3> :
  _3 = D.256400;
  std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (_1, _3, &D.218708);

  <bb 4> :
  std::allocator<char>::~allocator (&D.218708);
  D.218708 = {CLOBBER};
  D.256403 = std::__cxx11::basic_string<char>::_M_data (__str);

  <bb 5> :
  _4 = D.256403;
  _5 = std::__cxx11::basic_string<char>::length (__str);
  _6 = _4 + _5;
  D.256404 = std::__cxx11::basic_string<char>::_M_data (__str);

  <bb 6> :
  _7 = D.256404;
  std::__cxx11::basic_string<char>::_M_construct<char*> (this, _7, _6);

  <bb 7> :
  return;

  <bb 8> :
<L0>:
  std::allocator<char>::~allocator (&D.218708);
  resx 2

  <bb 9> :
<L1>:
  D.218708 = {CLOBBER};
  resx 1

  <bb 10> :
<L2>:
  _8 = &this->_M_dataplus;
  std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider (_8);
  resx 5

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_, funcdef_no=9082, decl_uid=125092, cgraph_uid=5714, symbol_order=6503)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_, funcdef_no=9838, decl_uid=125052, cgraph_uid=6470, symbol_order=7259)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<char>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<char>::allocator (_ZNSaIcEC2ERKS_, funcdef_no=9054, decl_uid=117124, cgraph_uid=5686, symbol_order=6475)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<char>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<char>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<char>::new_allocator (_ZN9__gnu_cxx13new_allocatorIcEC2ERKS1_, funcdef_no=9803, decl_uid=117051, cgraph_uid=6435, symbol_order=7224)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<char>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.117053)
{
  <bb 2> :
  return;

}



;; Function std::__cxx11::basic_string<char>::_M_construct<char*> (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_, funcdef_no=9058, decl_uid=218458, cgraph_uid=5690, symbol_order=6479)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::basic_string<char>::_M_construct<char*> (struct basic_string * const this, char * __beg, char * __end)
{
  struct __false_type D.256410;

  <bb 2> :
  std::__cxx11::basic_string<char>::_M_construct_aux<char*> (this, __beg, __end, D.256410);
  return;

}



;; Function std::__cxx11::basic_string<char>::_M_construct_aux<char*> (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type, funcdef_no=9807, decl_uid=230800, cgraph_uid=6439, symbol_order=7228)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::__cxx11::basic_string<char>::_M_construct_aux<char*> (struct basic_string * const this, char * __beg, char * __end, struct __false_type D.238060)
{
  struct forward_iterator_tag D.256411;
  struct _Tag D.238063;

  <bb 2> :
  _1 = &D.238063;
  std::__cxx11::basic_string<char>::_M_construct<char*> (this, __beg, __end, D.256411);

  <bb 3> :
  D.238063 = {CLOBBER};
  return;

  <bb 4> :
<L0>:
  D.238063 = {CLOBBER};
  resx 1

}



;; Function std::__cxx11::basic_string<char>::_M_construct<char*> (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag, funcdef_no=10351, decl_uid=238064, cgraph_uid=6984, symbol_order=7777)

Removing basic block 18
Removing basic block 13
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 20 }
;; 8 succs { 20 9 }
;; 9 succs { 10 13 }
;; 10 succs { 20 11 }
;; 11 succs { 20 12 }
;; 12 succs { 20 13 }
;; 13 succs { 16 14 }
;; 14 succs { 20 15 }
;; 15 succs { 1 }
;; 16 succs { 17 }
;; 17 succs { 19 18 }
;; 18 succs { 19 }
;; 19 succs { 20 }
;; 20 succs { }
void std::__cxx11::basic_string<char>::_M_construct<char*> (struct basic_string * const this, char * __beg, char * __end, struct forward_iterator_tag D.242548)
{
  char * D.256426;
  char * D.256425;
  long int D.256424;
  size_type __dnew;
  bool iftmp.2039;
  bool retval.2038;

  <bb 2> :
  _1 = __gnu_cxx::__is_null_pointer<char> (__beg);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  if (__beg != __end)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2039 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2039 = 0;

  <bb 6> :
  retval.2038 = iftmp.2039;
  if (retval.2038 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

  <bb 8> :
  D.256424 = std::distance<char*> (__beg, __end);

  <bb 9> :
  _2 = D.256424;
  _3 = (long unsigned int) _2;
  __dnew = _3;
  __dnew.2040_4 = __dnew;
  if (__dnew.2040_4 > 15)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  D.256425 = std::__cxx11::basic_string<char>::_M_create (this, &__dnew, 0);

  <bb 11> :
  _5 = D.256425;
  std::__cxx11::basic_string<char>::_M_data (this, _5);

  <bb 12> :
  __dnew.2041_6 = __dnew;
  std::__cxx11::basic_string<char>::_M_capacity (this, __dnew.2041_6);

  <bb 13> :
  D.256426 = std::__cxx11::basic_string<char>::_M_data (this);

  <bb 14> :
  _7 = D.256426;
  std::__cxx11::basic_string<char>::_S_copy_chars (_7, __beg, __end);
  __dnew.2042_9 = __dnew;
  std::__cxx11::basic_string<char>::_M_set_length (this, __dnew.2042_9);

  <bb 15> :
  __dnew = {CLOBBER};
  return;

  <bb 16> :
<L9>:
  eh_dispatch 2

  <bb 17> :
<L10>:
  _8 = __builtin_eh_pointer (2);
  __cxa_begin_catch (_8);
  std::__cxx11::basic_string<char>::_M_dispose (this);

  <bb 18> :
  __cxa_rethrow ();

  <bb 19> :
<L11>:
  __cxa_end_catch ();
  resx 3

  <bb 20> :
<L12>:
  __dnew = {CLOBBER};
  resx 1

}



;; Function __gnu_cxx::__is_null_pointer<char> (_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_, funcdef_no=10730, decl_uid=242552, cgraph_uid=7362, symbol_order=8155)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__is_null_pointer<char> (char * __ptr)
{
  bool D.256431;

  <bb 2> :
  D.256431 = __ptr == 0B;

  <bb 3> :
<L0>:
  return D.256431;

}



;; Function std::distance<char*> (_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_, funcdef_no=10352, decl_uid=242555, cgraph_uid=6983, symbol_order=7776)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type std::distance<char*> (char * __first, char * __last)
{
  struct random_access_iterator_tag D.256434;
  difference_type D.256433;

  <bb 2> :
  std::__iterator_category<char*> (&__first);
  __first.2043_1 = __first;
  D.256433 = std::__distance<char*> (__first.2043_1, __last, D.256434);

  <bb 3> :
<L0>:
  return D.256433;

}



;; Function std::__iterator_category<char*> (_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_, funcdef_no=10731, decl_uid=242561, cgraph_uid=7363, symbol_order=8156)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator_category std::__iterator_category<char*> (char * const & D.244178)
{
  struct iterator_category D.256436;

  <bb 2> :

  <bb 3> :
<L0>:
  return D.256436;

}



;; Function std::__distance<char*> (_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag, funcdef_no=10732, decl_uid=242564, cgraph_uid=7364, symbol_order=8157)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type std::__distance<char*> (char * __first, char * __last, struct random_access_iterator_tag D.244186)
{
  difference_type D.256438;

  <bb 2> :
  D.256438 = __last - __first;

  <bb 3> :
<L0>:
  return D.256438;

}



;; Function std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev, funcdef_no=7271, decl_uid=126589, cgraph_uid=3902, symbol_order=4684)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider (struct _Alloc_hider * const this)
{
  <bb 2> :
  std::allocator<char>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<breakpoint>::end (_ZNSt6vectorI10breakpointSaIS0_EE3endEv, funcdef_no=8859, decl_uid=185838, cgraph_uid=5491, symbol_order=6280)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<breakpoint>::end (struct vector * const this)
{
  struct iterator D.229471;
  struct iterator D.256440;

  <bb 2> :
  _1 = &this->D.186225._M_impl.D.185570._M_finish;
  __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::__normal_iterator (&D.229471, _1);
  D.256440 = D.229471;
  D.229471 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256440;

}



;; Function __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP10breakpointSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9672, decl_uid=216483, cgraph_uid=6304, symbol_order=7093)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::__normal_iterator (struct __normal_iterator * const this, struct breakpoint * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<breakpoint>::_M_realloc_insert<const breakpoint&> (_ZNSt6vectorI10breakpointSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8860, decl_uid=216502, cgraph_uid=5495, symbol_order=6284)

Removing basic block 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 10 8 }
;; 8 succs { 10 9 }
;; 9 succs { 10 }
;; 10 succs { }
void std::vector<breakpoint>::_M_realloc_insert<const breakpoint&> (struct vector * const this, struct iterator __position, const struct breakpoint & __args#0)
{
  struct breakpoint * D.256447;
  const size_type D.256446;
  struct breakpoint * __new_finish;
  struct breakpoint * __new_start;
  const size_type __elems_before;
  struct breakpoint * __old_finish;
  struct breakpoint * __old_start;
  const size_type __len;
  struct iterator D.229479;

  <bb 2> :
  D.256446 = std::vector<breakpoint>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.256446;
  __old_start = this->D.186225._M_impl.D.185570._M_start;
  __old_finish = this->D.186225._M_impl.D.185570._M_finish;
  D.229479 = std::vector<breakpoint>::begin (this);
  _1 = __gnu_cxx::operator-<breakpoint*, std::vector<breakpoint> > (&__position, &D.229479);
  __elems_before = (const size_type) _1;
  D.229479 = {CLOBBER};
  _2 = &this->D.186225;
  D.256447 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_allocate (_2, __len);
  __new_start = D.256447;
  __new_finish = __new_start;
  _3 = std::forward<const breakpoint&> (__args#0);
  _4 = __elems_before * 40;
  _5 = __new_start + _4;
  _6 = &this->D.186225._M_impl;
  std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, const breakpoint&> (_6, _5, _3);

  <bb 3> :
  __new_finish = 0B;
  _7 = &this->D.186225;
  _8 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<breakpoint>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 40;
  _11 = &this->D.186225;
  _12 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<breakpoint>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.186225;
  _23 = this->D.186225._M_impl.D.185570._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 40;
  _26 = (long unsigned int) _25;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_deallocate (_22, __old_start, _26);
  this->D.186225._M_impl.D.185570._M_start = __new_start;
  this->D.186225._M_impl.D.185570._M_finish = __new_finish;
  _27 = __len * 40;
  _28 = __new_start + _27;
  this->D.186225._M_impl.D.185570._M_end_of_storage = _28;
  return;

  <bb 4> :
<L0>:
  eh_dispatch 2

  <bb 5> :
<L1>:
  _15 = __builtin_eh_pointer (2);
  __cxa_begin_catch (_15);
  if (__new_finish == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _16 = __elems_before * 40;
  _17 = __new_start + _16;
  _18 = &this->D.186225._M_impl;
  std::allocator_traits<std::allocator<breakpoint> >::destroy<breakpoint> (_18, _17);
  goto <bb 8>; [INV]

  <bb 7> :
  _19 = &this->D.186225;
  _20 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_19);
  std::_Destroy<breakpoint*, breakpoint> (__new_start, __new_finish, _20);

  <bb 8> :
  _21 = &this->D.186225;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_deallocate (_21, __new_start, __len);

  <bb 9> :
  __cxa_rethrow ();

  <bb 10> :
<L5>:
  __cxa_end_catch ();
  resx 3

}



;; Function std::vector<breakpoint>::_M_check_len (_ZNKSt6vectorI10breakpointSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9674, decl_uid=186074, cgraph_uid=6306, symbol_order=7095)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<breakpoint>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.2046;
  size_type D.256454;
  const long unsigned int D.237011;
  bool retval.2044;

  <bb 2> :
  _1 = std::vector<breakpoint>::max_size (this);
  _2 = std::vector<breakpoint>::size (this);
  _3 = _1 - _2;
  __n.2045_4 = __n;
  retval.2044 = _3 < __n.2045_4;
  if (retval.2044 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<breakpoint>::size (this);
  _6 = std::vector<breakpoint>::size (this);
  D.237011 = _6;
  _7 = std::max<long unsigned int> (&D.237011, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.237011 = {CLOBBER};
  _9 = std::vector<breakpoint>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<breakpoint>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2046 = std::vector<breakpoint>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.2046 = __len;

  <bb 8> :
  D.256454 = iftmp.2046;

  <bb 9> :
<L6>:
  return D.256454;

}



;; Function std::vector<breakpoint>::max_size (_ZNKSt6vectorI10breakpointSaIS0_EE8max_sizeEv, funcdef_no=10247, decl_uid=185860, cgraph_uid=6879, symbol_order=7672)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<breakpoint>::max_size (const struct vector * const this)
{
  size_type D.256461;

  <bb 2> :
  _1 = &this->D.186225;
  _2 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_1);
  D.256461 = std::vector<breakpoint>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.256461;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI10breakpointSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=10677, decl_uid=185460, cgraph_uid=7309, symbol_order=8102)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.256463;

  <bb 2> :
  D.256463 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.256463;

}



;; Function std::vector<breakpoint>::_S_max_size (_ZNSt6vectorI10breakpointSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10676, decl_uid=186081, cgraph_uid=7308, symbol_order=8101)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<breakpoint>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.256465;

  <bb 2> :
  __diffmax = 230584300921369395;
  _1 = std::allocator_traits<std::allocator<breakpoint> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.256465 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256465;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::max_size (_ZNSt16allocator_traitsISaI10breakpointEE8max_sizeERKS1_, funcdef_no=10844, decl_uid=185395, cgraph_uid=7476, symbol_order=8271)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<breakpoint> >::max_size (const struct allocator_type & __a)
{
  size_type D.256468;

  <bb 2> :
  D.256468 = __gnu_cxx::new_allocator<breakpoint>::max_size (__a);

  <bb 3> :
<L0>:
  return D.256468;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::max_size (_ZNK9__gnu_cxx13new_allocatorI10breakpointE8max_sizeEv, funcdef_no=10922, decl_uid=185237, cgraph_uid=7554, symbol_order=8349)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<breakpoint>::max_size (const struct new_allocator * const this)
{
  size_type D.256470;

  <bb 2> :
  D.256470 = __gnu_cxx::new_allocator<breakpoint>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.256470;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI10breakpointE11_M_max_sizeEv, funcdef_no=10679, decl_uid=185256, cgraph_uid=7310, symbol_order=8103)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<breakpoint>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.256472;

  <bb 2> :
  D.256472 = 230584300921369395;

  <bb 3> :
<L0>:
  return D.256472;

}



;; Function std::vector<breakpoint>::begin (_ZNSt6vectorI10breakpointSaIS0_EE5beginEv, funcdef_no=9675, decl_uid=185834, cgraph_uid=6307, symbol_order=7096)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<breakpoint>::begin (struct vector * const this)
{
  struct iterator D.237013;
  struct iterator D.256474;

  <bb 2> :
  _1 = &this->D.186225._M_impl.D.185570._M_start;
  __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::__normal_iterator (&D.237013, _1);
  D.256474 = D.237013;
  D.237013 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256474;

}



;; Function __gnu_cxx::operator-<breakpoint*, std::vector<breakpoint> > (_ZN9__gnu_cxxmiIP10breakpointSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9676, decl_uid=229480, cgraph_uid=6308, symbol_order=7097)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<breakpoint*, std::vector<breakpoint> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.256477;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.256477 = _5 /[ex] 40;

  <bb 3> :
<L0>:
  return D.256477;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_allocate (_ZNSt12_Vector_baseI10breakpointSaIS0_EE11_M_allocateEm, funcdef_no=9677, decl_uid=185574, cgraph_uid=6309, symbol_order=7098)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct breakpoint * std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct breakpoint * D.256485;
  struct breakpoint * iftmp.2047;
  struct breakpoint * D.256479;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.256485 = std::allocator_traits<std::allocator<breakpoint> >::allocate (_1, __n);
  iftmp.2047 = D.256485;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2047 = 0B;

  <bb 5> :
  D.256479 = iftmp.2047;

  <bb 6> :
<L3>:
  return D.256479;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::allocate (_ZNSt16allocator_traitsISaI10breakpointEE8allocateERS1_m, funcdef_no=10248, decl_uid=185375, cgraph_uid=6880, symbol_order=7673)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct breakpoint * std::allocator_traits<std::allocator<breakpoint> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct breakpoint * D.256488;
  struct breakpoint * D.256486;

  <bb 2> :
  D.256488 = __gnu_cxx::new_allocator<breakpoint>::allocate (__a, __n, 0B);
  D.256486 = D.256488;

  <bb 3> :
<L0>:
  return D.256486;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::allocate (_ZN9__gnu_cxx13new_allocatorI10breakpointE8allocateEmPKv, funcdef_no=10678, decl_uid=185229, cgraph_uid=7311, symbol_order=8104)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct breakpoint * __gnu_cxx::new_allocator<breakpoint>::allocate (struct new_allocator * const this, size_type __n, const void * D.243942)
{
  struct breakpoint * D.256499;
  struct breakpoint * D.256498;
  align_val_t __al;
  struct breakpoint * D.256496;
  bool retval.2048;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<breakpoint>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.2048 = _4 != 0;
  if (retval.2048 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 461168601842738790)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 40;
  D.256499 = operator new (_6);
  D.256496 = D.256499;

  <bb 7> :
<L6>:
  return D.256496;

}



;; Function __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP10breakpointSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9679, decl_uid=216470, cgraph_uid=6311, symbol_order=7100)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * const & __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (const struct __normal_iterator * const this)
{
  struct breakpoint * const & D.256500;

  <bb 2> :
  D.256500 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.256500;

}



;; Function std::vector<breakpoint>::_S_relocate (_ZNSt6vectorI10breakpointSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9678, decl_uid=185732, cgraph_uid=6310, symbol_order=7099)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * std::vector<breakpoint>::_S_relocate (struct breakpoint * __first, struct breakpoint * __last, struct breakpoint * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.256503;
  struct breakpoint * D.256502;

  <bb 2> :
  D.256502 = std::vector<breakpoint>::_S_do_relocate (__first, __last, __result, __alloc, D.256503);

  <bb 3> :
<L0>:
  return D.256502;

}



;; Function std::vector<breakpoint>::_S_do_relocate (_ZNSt6vectorI10breakpointSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10249, decl_uid=185720, cgraph_uid=6881, symbol_order=7674)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * std::vector<breakpoint>::_S_do_relocate (struct breakpoint * __first, struct breakpoint * __last, struct breakpoint * __result, struct _Tp_alloc_type & __alloc, struct true_type D.241580)
{
  struct breakpoint * D.256505;

  <bb 2> :
  D.256505 = std::__relocate_a<breakpoint*, breakpoint*, std::allocator<breakpoint> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.256505;

}



;; Function std::__relocate_a<breakpoint*, breakpoint*, std::allocator<breakpoint> > (_ZSt12__relocate_aIP10breakpointS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10680, decl_uid=229645, cgraph_uid=7312, symbol_order=8105)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * std::__relocate_a<breakpoint*, breakpoint*, std::allocator<breakpoint> > (struct breakpoint * __first, struct breakpoint * __last, struct breakpoint * __result, struct allocator & __alloc)
{
  struct breakpoint * D.256507;

  <bb 2> :
  _1 = std::__niter_base<breakpoint*> (__result);
  _2 = std::__niter_base<breakpoint*> (__last);
  _3 = std::__niter_base<breakpoint*> (__first);
  D.256507 = std::__relocate_a_1<breakpoint*, breakpoint*, std::allocator<breakpoint> > (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.256507;

}



;; Function std::__niter_base<breakpoint*> (_ZSt12__niter_baseIP10breakpointET_S2_, funcdef_no=10845, decl_uid=229651, cgraph_uid=7477, symbol_order=8272)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * std::__niter_base<breakpoint*> (struct breakpoint * __it)
{
  struct breakpoint * D.256509;

  <bb 2> :
  D.256509 = __it;

  <bb 3> :
<L0>:
  return D.256509;

}



;; Function std::__relocate_a_1<breakpoint*, breakpoint*, std::allocator<breakpoint> > (_ZSt14__relocate_a_1IP10breakpointS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10846, decl_uid=229796, cgraph_uid=7478, symbol_order=8273)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct breakpoint * std::__relocate_a_1<breakpoint*, breakpoint*, std::allocator<breakpoint> > (struct breakpoint * __first, struct breakpoint * __last, struct breakpoint * __result, struct allocator & __alloc)
{
  struct breakpoint * __cur;
  struct breakpoint * D.256511;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<breakpoint> (__first);
  _2 = std::__addressof<breakpoint> (__cur);
  std::__relocate_object_a<breakpoint, breakpoint, std::allocator<breakpoint> > (_2, _1, __alloc);
  __first = __first + 40;
  __cur = __cur + 40;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.256511 = __cur;

  <bb 6> :
<L3>:
  return D.256511;

}



;; Function std::__addressof<breakpoint> (_ZSt11__addressofI10breakpointEPT_RS1_, funcdef_no=10847, decl_uid=229852, cgraph_uid=7479, symbol_order=8274)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * std::__addressof<breakpoint> (struct breakpoint & __r)
{
  struct breakpoint * D.256513;

  <bb 2> :
  D.256513 = __r;

  <bb 3> :
<L0>:
  return D.256513;

}



;; Function std::__relocate_object_a<breakpoint, breakpoint, std::allocator<breakpoint> > (_ZSt19__relocate_object_aI10breakpointS0_SaIS0_EEvPT_PT0_RT1_, funcdef_no=10923, decl_uid=229825, cgraph_uid=7555, symbol_order=8350)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__relocate_object_a<breakpoint, breakpoint, std::allocator<breakpoint> > (struct breakpoint * restrict __dest, struct breakpoint * restrict __orig, struct allocator & __alloc)
{
  <bb 2> :
  _1 = std::move<breakpoint&> (__orig);
  std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, breakpoint> (__alloc, __dest, _1);
  _2 = std::__addressof<breakpoint> (__orig);
  std::allocator_traits<std::allocator<breakpoint> >::destroy<breakpoint> (__alloc, _2);
  return;

}



;; Function std::move<breakpoint&> (_ZSt4moveIR10breakpointEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=10957, decl_uid=229837, cgraph_uid=7589, symbol_order=8384)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<breakpoint&> (struct breakpoint & __t)
{
  struct type & D.256515;

  <bb 2> :
  D.256515 = __t;

  <bb 3> :
<L0>:
  return D.256515;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, breakpoint> (_ZNSt16allocator_traitsISaI10breakpointEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_, funcdef_no=10958, decl_uid=229839, cgraph_uid=7590, symbol_order=8385)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, breakpoint> (struct allocator_type & __a, struct breakpoint * __p, struct breakpoint & __args#0)
{
  <bb 2> :
  _1 = std::forward<breakpoint> (__args#0);
  __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, breakpoint> (__a, __p, _1);
  return;

}



;; Function std::forward<breakpoint> (_ZSt7forwardI10breakpointEOT_RNSt16remove_referenceIS1_E4typeE, funcdef_no=10976, decl_uid=245687, cgraph_uid=7608, symbol_order=8403)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct breakpoint & std::forward<breakpoint> (struct type & __t)
{
  struct breakpoint & D.256517;

  <bb 2> :
  D.256517 = __t;

  <bb 3> :
<L0>:
  return D.256517;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, breakpoint> (_ZN9__gnu_cxx13new_allocatorI10breakpointE9constructIS1_JS1_EEEvPT_DpOT0_, funcdef_no=10977, decl_uid=245689, cgraph_uid=7612, symbol_order=8407)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, breakpoint> (struct new_allocator * const this, struct breakpoint * __p, struct breakpoint & __args#0)
{
  void * D.245766;
  void * D.245765;
  struct breakpoint & D.245770;

  <bb 2> :
  D.245770 = std::forward<breakpoint> (__args#0);
  D.245765 = __p;
  D.245766 = operator new (40, D.245765);
  breakpoint::breakpoint (D.245766, D.245770);
  return;

}



;; Function breakpoint::breakpoint (_ZN10breakpointC2EOS_, funcdef_no=10979, decl_uid=202566, cgraph_uid=7610, symbol_order=8405)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void breakpoint::breakpoint (struct breakpoint * const this, struct breakpoint & D.202568)
{
  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  _1 = &this->name;
  _2 = &D.202568->name;
  std::__cxx11::basic_string<char>::basic_string (_1, _2);
  _3 = D.202568->line;
  this->line = _3;
  return;

}



;; Function std::__cxx11::basic_string<char>::basic_string (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_, funcdef_no=7281, decl_uid=126195, cgraph_uid=3913, symbol_order=4696)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::__cxx11::basic_string<char>::basic_string (struct basic_string * const this, struct basic_string & __str)
{
  char * D.256527;
  char * D.256526;
  bool D.256525;
  char * D.256524;
  struct allocator_type & D.256523;
  bool retval.2049;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_dataplus;
  D.256523 = std::__cxx11::basic_string<char>::_M_get_allocator (__str);
  _2 = D.256523;
  _3 = std::move<std::allocator<char>&> (_2);
  D.256524 = std::__cxx11::basic_string<char>::_M_local_data (this);
  _4 = D.256524;
  std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (_1, _4, _3);
  D.256525 = std::__cxx11::basic_string<char>::_M_is_local (__str);
  retval.2049 = D.256525;
  if (retval.2049 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = &__str->D.125192._M_local_buf;
  _6 = &this->D.125192._M_local_buf;
  std::char_traits<char>::copy (_6, _5, 16);
  goto <bb 5>; [INV]

  <bb 4> :
  D.256526 = std::__cxx11::basic_string<char>::_M_data (__str);
  _7 = D.256526;
  std::__cxx11::basic_string<char>::_M_data (this, _7);
  _8 = __str->D.125192._M_allocated_capacity;
  std::__cxx11::basic_string<char>::_M_capacity (this, _8);

  <bb 5> :
  _9 = std::__cxx11::basic_string<char>::length (__str);
  std::__cxx11::basic_string<char>::_M_length (this, _9);
  D.256527 = std::__cxx11::basic_string<char>::_M_local_data (__str);
  _10 = D.256527;
  std::__cxx11::basic_string<char>::_M_data (__str, _10);
  std::__cxx11::basic_string<char>::_M_set_length (__str, 0);
  return;

}



;; Function std::char_traits<char>::copy (_ZNSt11char_traitsIcE4copyEPcPKcm, funcdef_no=3400, decl_uid=115117, cgraph_uid=2218, symbol_order=2386)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
char_type * std::char_traits<char>::copy (char_type * __s1, const char_type * __s2, size_t __n)
{
  char_type * D.256530;

  <bb 2> :
  if (__n == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.256530 = __s1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.256530 = __builtin_memcpy (__s1, __s2, __n);

  <bb 5> :
<L2>:
  return D.256530;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::destroy<breakpoint> (_ZNSt16allocator_traitsISaI10breakpointEE7destroyIS0_EEvRS1_PT_, funcdef_no=9681, decl_uid=229854, cgraph_uid=6313, symbol_order=7102)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<breakpoint> >::destroy<breakpoint> (struct allocator_type & __a, struct breakpoint * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<breakpoint>::destroy<breakpoint> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::destroy<breakpoint> (_ZN9__gnu_cxx13new_allocatorI10breakpointE7destroyIS1_EEvPT_, funcdef_no=10250, decl_uid=237032, cgraph_uid=6882, symbol_order=7675)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<breakpoint>::destroy<breakpoint> (struct new_allocator * const this, struct breakpoint * __p)
{
  <bb 2> :
  breakpoint::~breakpoint (__p);
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI10breakpointSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=9680, decl_uid=185458, cgraph_uid=6312, symbol_order=7101)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.256532;

  <bb 2> :
  D.256532 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.256532;

}



;; Function std::_Destroy<breakpoint*, breakpoint> (_ZSt8_DestroyIP10breakpointS0_EvT_S2_RSaIT0_E, funcdef_no=9682, decl_uid=230036, cgraph_uid=6314, symbol_order=7103)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<breakpoint*, breakpoint> (struct breakpoint * __first, struct breakpoint * __last, struct allocator & D.237037)
{
  <bb 2> :
  std::_Destroy<breakpoint*> (__first, __last);
  return;

}



;; Function std::_Destroy<breakpoint*> (_ZSt8_DestroyIP10breakpointEvT_S2_, funcdef_no=10251, decl_uid=237039, cgraph_uid=6883, symbol_order=7676)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<breakpoint*> (struct breakpoint * __first, struct breakpoint * __last)
{
  <bb 2> :
  std::_Destroy_aux<false>::__destroy<breakpoint*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<false>::__destroy<breakpoint*> (_ZNSt12_Destroy_auxILb0EE9__destroyIP10breakpointEEvT_S4_, funcdef_no=10681, decl_uid=241609, cgraph_uid=7313, symbol_order=8106)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void std::_Destroy_aux<false>::__destroy<breakpoint*> (struct breakpoint * __first, struct breakpoint * __last)
{
  <bb 2> :
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<breakpoint> (__first);
  std::_Destroy<breakpoint> (_1);
  __first = __first + 40;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



;; Function std::_Destroy<breakpoint> (_ZSt8_DestroyI10breakpointEvPT_, funcdef_no=10848, decl_uid=243957, cgraph_uid=7480, symbol_order=8275)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<breakpoint> (struct breakpoint * __pointer)
{
  <bb 2> :
  breakpoint::~breakpoint (__pointer);
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_deallocate (_ZNSt12_Vector_baseI10breakpointSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8383, decl_uid=185577, cgraph_uid=5015, symbol_order=5804)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_deallocate (struct _Vector_base * const this, struct breakpoint * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<breakpoint> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::deallocate (_ZNSt16allocator_traitsISaI10breakpointEE10deallocateERS1_PS0_m, funcdef_no=9164, decl_uid=185382, cgraph_uid=5796, symbol_order=6585)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<breakpoint> >::deallocate (struct allocator_type & __a, struct breakpoint * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<breakpoint>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::deallocate (_ZN9__gnu_cxx13new_allocatorI10breakpointE10deallocateEPS1_m, funcdef_no=9878, decl_uid=185233, cgraph_uid=6510, symbol_order=7303)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<breakpoint>::deallocate (struct new_allocator * const this, struct breakpoint * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 40;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function Graph::Graph (_ZN5GraphC2Ev, funcdef_no=6861, decl_uid=204166, cgraph_uid=3492, symbol_order=4269)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void Graph::Graph (struct Graph * const this)
{
  <bb 2> :
  _1 = &this->stack;
  std::vector<int>::vector (_1);
  return;

}



;; Function std::vector<int>::vector (_ZNSt6vectorIiSaIiEEC2Ev, funcdef_no=6859, decl_uid=167760, cgraph_uid=3489, symbol_order=4266)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.167768;
  std::_Vector_base<int, std::allocator<int> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_base (_ZNSt12_Vector_baseIiSaIiEEC2Ev, funcdef_no=6857, decl_uid=167186, cgraph_uid=3486, symbol_order=4263)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev, funcdef_no=7895, decl_uid=167078, cgraph_uid=4527, symbol_order=5312)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<int>::allocator (this);
  _1 = &this->D.167081;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<int>::allocator (_ZNSaIiEC2Ev, funcdef_no=8865, decl_uid=166856, cgraph_uid=5497, symbol_order=6286)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<int>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::new_allocator (_ZN9__gnu_cxx13new_allocatorIiEC2Ev, funcdef_no=9684, decl_uid=166785, cgraph_uid=6316, symbol_order=7105)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev, funcdef_no=8868, decl_uid=167028, cgraph_uid=5500, symbol_order=6289)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function hash_map<cgraph_node*, Graph>::put (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7906, decl_uid=203194, cgraph_uid=4542, symbol_order=5327)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<cgraph_node*, Graph>::put (struct hash_map * const this, struct cgraph_node * const & k, const struct Graph & v)
{
  bool D.256547;
  struct hash_entry * D.256546;
  unsigned int D.256545;
  bool ins;
  struct hash_entry * e;
  bool D.256543;
  void * D.216545;
  void * D.216544;

  <bb 2> :
  _1 = &this->m_table;
  D.256545 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::hash (k);
  _2 = D.256545;
  D.256546 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.256546;
  D.256547 = hash_map<cgraph_node*, Graph>::hash_entry::is_empty (e);
  ins = D.256547;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.216544 = &e->m_value;
  D.216545 = operator new (48, D.216544);
  Graph::Graph (D.216545, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  Graph::operator= (_4, v);

  <bb 5> :
  D.256543 = ~ins;

  <bb 6> :
<L3>:
  return D.256543;

  <bb 7> :
<L4>:
  operator delete (D.216545, D.216544);
  resx 1

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE4hashERKS2_, funcdef_no=8876, decl_uid=203154, cgraph_uid=5508, symbol_order=6297)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::hash (struct cgraph_node * const & h)
{
  hashval_t D.256549;

  <bb 2> :
  D.256549 = pointer_hash<cgraph_node>::hash (h);

  <bb 3> :
<L0>:
  return D.256549;

}



;; Function pointer_hash<cgraph_node>::hash (_ZN12pointer_hashI11cgraph_nodeE4hashERKPS0_, funcdef_no=9688, decl_uid=203111, cgraph_uid=6320, symbol_order=7109)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t pointer_hash<cgraph_node>::hash (struct cgraph_node * const & candidate)
{
  hashval_t D.256551;

  <bb 2> :
  _1 = *candidate;
  _2 = (long int) _1;
  _3 = _2 >> 3;
  D.256551 = (hashval_t) _3;

  <bb 3> :
<L0>:
  return D.256551;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8877, decl_uid=203352, cgraph_uid=5509, symbol_order=6298)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, struct cgraph_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.256602;
  bool D.256601;
  bool D.256600;
  bool D.256599;
  bool D.256598;
  bool D.256597;
  struct value_type * D.256596;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.2055;
  bool retval.2054;
  bool retval.2053;
  bool retval.2052;
  bool retval.2051;
  bool retval.2050;
  struct value_type * D.256558;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 56;
  entry = _11 + _13;
  size = this->m_size;
  D.256597 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.2050 = D.256597;
  if (retval.2050 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.256598 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.2051 = D.256598;
  if (retval.2051 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 56;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.256599 = hash_map<cgraph_node*, Graph>::hash_entry::equal (entry, comparable);
  retval.2052 = D.256599;
  if (retval.2052 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 56;
  D.256558 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 56;
  entry = _24 + _26;
  D.256600 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.2053 = D.256600;
  if (retval.2053 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.256601 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.2054 = D.256601;
  if (retval.2054 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 56;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.256602 = hash_map<cgraph_node*, Graph>::hash_entry::equal (entry, comparable);
  retval.2055 = D.256602;
  if (retval.2055 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 56;
  D.256558 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.256558 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.256558 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 56;
  D.256558 = _37 + _39;

  <bb 27> :
<L37>:
  return D.256558;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9689, decl_uid=203433, cgraph_uid=6333, symbol_order=7122)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.256633;
  unsigned int D.256632;
  bool D.256631;
  bool D.256630;
  struct mem_alloc_description & D.256629;
  struct value_type * D.256628;
  unsigned int D.256627;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.237090;
  void * D.237089;
  struct hash_entry & D.237127;
  bool iftmp.2059;
  bool retval.2058;
  bool iftmp.2057;
  bool retval.2056;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 56;
  olimit = oentries + _1;
  elts = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2057 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2057 = 0;

  <bb 6> :
  retval.2056 = iftmp.2057;
  if (retval.2056 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.256627 = hash_table_higher_prime_index (_5);
  nindex = D.256627;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.256628 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.256628;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.256630 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.256630;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.256631 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.256631;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.2059 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.2059 = 0;

  <bb 15> :
  retval.2058 = iftmp.2059;
  if (retval.2058 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.256632 = hash_map<cgraph_node*, Graph>::hash_entry::hash (x);
  _16 = D.256632;
  D.256633 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.256633;
  D.237127 = std::move<hash_map<cgraph_node*, Graph>::hash_entry&> (x);
  D.237089 = q;
  D.237090 = operator new (56, D.237089);
  hash_map<cgraph_node*, Graph>::hash_entry::hash_entry (D.237090, D.237127);

  <bb 17> :
  p = p + 56;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10254, decl_uid=203328, cgraph_uid=6886, symbol_order=7679)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.256634;

  <bb 2> :
  D.256634 = this->m_size;

  <bb 3> :
<L0>:
  return D.256634;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10255, decl_uid=203330, cgraph_uid=6887, symbol_order=7680)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.256636;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.256636 = _1 - _2;

  <bb 3> :
<L0>:
  return D.256636;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10256, decl_uid=203430, cgraph_uid=6888, symbol_order=7681)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.2060;
  bool D.256638;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2060 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2060 = 0;

  <bb 6> :
  D.256638 = iftmp.2060;

  <bb 7> :
<L4>:
  return D.256638;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::hash (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10258, decl_uid=203253, cgraph_uid=6890, symbol_order=7683)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<cgraph_node*, Graph>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.256647;
  hashval_t D.256645;

  <bb 2> :
  _1 = &e->m_key;
  D.256647 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::hash (_1);
  D.256645 = D.256647;

  <bb 3> :
<L0>:
  return D.256645;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10257, decl_uid=203423, cgraph_uid=6889, symbol_order=7682)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.256660;
  bool D.256659;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.2062;
  struct value_type * D.256651;
  bool retval.2061;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 56;
  slot = _2 + _4;
  D.256659 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.2061 = D.256659;
  if (retval.2061 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.256651 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 56;
  slot = _8 + _10;
  D.256660 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.2062 = D.256660;
  if (retval.2062 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.256651 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.256651;

}



;; Function std::move<hash_map<cgraph_node*, Graph>::hash_entry&> (_ZSt4moveIRN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10259, decl_uid=237087, cgraph_uid=6891, symbol_order=7684)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<cgraph_node*, Graph>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.256661;

  <bb 2> :
  D.256661 = __t;

  <bb 3> :
<L0>:
  return D.256661;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::hash_entry (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9700, decl_uid=237112, cgraph_uid=6331, symbol_order=7120)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.237114)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.237114->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.237114->m_value;
  Graph::Graph (_2, _3);
  return;

}



;; Function Graph::Graph (_ZN5GraphC2EOS_, funcdef_no=9698, decl_uid=204183, cgraph_uid=6328, symbol_order=7117)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void Graph::Graph (struct Graph * const this, struct Graph & D.204185)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.204185->V;
  this->V = _1;
  _2 = D.204185->end;
  this->end = _2;
  _3 = D.204185->succ;
  this->succ = _3;
  _4 = D.204185->adj;
  this->adj = _4;
  _5 = &this->stack;
  _6 = &D.204185->stack;
  std::vector<int>::vector (_5, _6);
  return;

}



;; Function std::vector<int>::vector (_ZNSt6vectorIiSaIiEEC2EOS1_, funcdef_no=9696, decl_uid=167725, cgraph_uid=6325, symbol_order=7114)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::vector (struct vector * const this, struct vector & D.167727)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.167768;
  _2 = &D.167727->D.167768;
  std::_Vector_base<int, std::allocator<int> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_base (_ZNSt12_Vector_baseIiSaIiEEC2EOS1_, funcdef_no=9694, decl_uid=167161, cgraph_uid=6322, symbol_order=7111)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.167163)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.167163->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2EOS2_, funcdef_no=10261, decl_uid=167067, cgraph_uid=6893, symbol_order=7686)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<int, std::allocator<int> >::_Vector_impl&> (__x);
  std::allocator<int>::allocator (this, _1);
  _2 = &this->D.167081;
  _3 = std::move<std::_Vector_base<int, std::allocator<int> >::_Vector_impl&> (__x);
  _4 = &_3->D.167081;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::allocator<int>::allocator (_ZNSaIiEC2ERKS_, funcdef_no=10684, decl_uid=166851, cgraph_uid=7316, symbol_order=8109)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<int>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::new_allocator (_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_, funcdef_no=10850, decl_uid=166780, cgraph_uid=7482, symbol_order=8277)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.166782)
{
  <bb 2> :
  return;

}



;; Function std::move<std::_Vector_base<int, std::allocator<int> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseIiSaIiEE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS6_, funcdef_no=10682, decl_uid=241644, cgraph_uid=7314, symbol_order=8107)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<int, std::allocator<int> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.256663;

  <bb 2> :
  D.256663 = __t;

  <bb 3> :
<L0>:
  return D.256663;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2EOS2_, funcdef_no=10687, decl_uid=167023, cgraph_uid=7319, symbol_order=8112)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8900, decl_uid=216689, cgraph_uid=5532, symbol_order=6321)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8897, decl_uid=203437, cgraph_uid=5529, symbol_order=6318)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.256668;
  bool D.256666;

  <bb 2> :
  D.256668 = hash_map<cgraph_node*, Graph>::hash_entry::is_empty (v);
  D.256666 = D.256668;

  <bb 3> :
<L0>:
  return D.256666;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8898, decl_uid=203435, cgraph_uid=5530, symbol_order=6319)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.256671;
  bool D.256669;

  <bb 2> :
  D.256671 = hash_map<cgraph_node*, Graph>::hash_entry::is_deleted (v);
  D.256669 = D.256671;

  <bb 3> :
<L0>:
  return D.256669;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::is_deleted (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9728, decl_uid=203262, cgraph_uid=6360, symbol_order=7149)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<cgraph_node*, Graph>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.256674;
  bool D.256672;

  <bb 2> :
  D.256674 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_deleted<hash_map<cgraph_node*, Graph>::hash_entry> (e);
  D.256672 = D.256674;

  <bb 3> :
<L0>:
  return D.256672;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_deleted<hash_map<cgraph_node*, Graph>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10288, decl_uid=237315, cgraph_uid=6920, symbol_order=7713)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_deleted<hash_map<cgraph_node*, Graph>::hash_entry> (const struct hash_entry & entry)
{
  bool D.256675;

  <bb 2> :
  _1 = entry->m_key;
  D.256675 = pointer_hash<cgraph_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.256675;

}



;; Function pointer_hash<cgraph_node>::is_deleted (_ZN12pointer_hashI11cgraph_nodeE10is_deletedEPS0_, funcdef_no=10702, decl_uid=203121, cgraph_uid=7334, symbol_order=8127)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<cgraph_node>::is_deleted (struct cgraph_node * e)
{
  bool D.256677;

  <bb 2> :
  D.256677 = e == 1B;

  <bb 3> :
<L0>:
  return D.256677;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::equal (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9702, decl_uid=203255, cgraph_uid=6334, symbol_order=7123)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<cgraph_node*, Graph>::hash_entry::equal (const struct hash_entry & a, struct cgraph_node * const & b)
{
  bool D.256681;
  bool D.256679;

  <bb 2> :
  _1 = &a->m_key;
  D.256681 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::equal_keys (_1, b);
  D.256679 = D.256681;

  <bb 3> :
<L0>:
  return D.256679;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE10equal_keysERKS2_S7_, funcdef_no=10263, decl_uid=203156, cgraph_uid=6895, symbol_order=7688)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::equal_keys (struct cgraph_node * const & k1, struct cgraph_node * const & k2)
{
  bool D.256682;

  <bb 2> :
  D.256682 = pointer_hash<cgraph_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.256682;

}



;; Function pointer_hash<cgraph_node>::equal (_ZN12pointer_hashI11cgraph_nodeE5equalERKPS0_S4_, funcdef_no=10689, decl_uid=203113, cgraph_uid=7321, symbol_order=8114)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<cgraph_node>::equal (struct cgraph_node * const & existing, struct cgraph_node * const & candidate)
{
  bool D.256684;

  <bb 2> :
  _1 = *existing;
  _2 = *candidate;
  D.256684 = _1 == _2;

  <bb 3> :
<L0>:
  return D.256684;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9703, decl_uid=203441, cgraph_uid=6335, symbol_order=7124)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<cgraph_node*, Graph>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::mark_empty (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10264, decl_uid=203265, cgraph_uid=6896, symbol_order=7689)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::mark_empty<hash_map<cgraph_node*, Graph>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::mark_empty<hash_map<cgraph_node*, Graph>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10690, decl_uid=241662, cgraph_uid=7322, symbol_order=8115)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::mark_empty<hash_map<cgraph_node*, Graph>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<cgraph_node>::mark_empty (_1);
  return;

}



;; Function pointer_hash<cgraph_node>::mark_empty (_ZN12pointer_hashI11cgraph_nodeE10mark_emptyERPS0_, funcdef_no=10852, decl_uid=203119, cgraph_uid=7484, symbol_order=8279)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void pointer_hash<cgraph_node>::mark_empty (struct cgraph_node * & e)
{
  <bb 2> :
  *e = 0B;
  return;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::is_empty (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8878, decl_uid=203267, cgraph_uid=5510, symbol_order=6299)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<cgraph_node*, Graph>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.256688;
  bool D.256686;

  <bb 2> :
  D.256688 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_empty<hash_map<cgraph_node*, Graph>::hash_entry> (e);
  D.256686 = D.256688;

  <bb 3> :
<L0>:
  return D.256686;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_empty<hash_map<cgraph_node*, Graph>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=9704, decl_uid=230086, cgraph_uid=6336, symbol_order=7125)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_empty<hash_map<cgraph_node*, Graph>::hash_entry> (const struct hash_entry & entry)
{
  bool D.256689;

  <bb 2> :
  _1 = entry->m_key;
  D.256689 = pointer_hash<cgraph_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.256689;

}



;; Function pointer_hash<cgraph_node>::is_empty (_ZN12pointer_hashI11cgraph_nodeE8is_emptyEPS0_, funcdef_no=10265, decl_uid=203123, cgraph_uid=6897, symbol_order=7690)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<cgraph_node>::is_empty (struct cgraph_node * e)
{
  bool D.256691;

  <bb 2> :
  D.256691 = e == 0B;

  <bb 3> :
<L0>:
  return D.256691;

}



;; Function Graph::Graph (_ZN5GraphC2ERKS_, funcdef_no=7908, decl_uid=204174, cgraph_uid=4539, symbol_order=5324)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void Graph::Graph (struct Graph * const this, const struct Graph & D.204176)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.204176->V;
  this->V = _1;
  _2 = D.204176->end;
  this->end = _2;
  _3 = D.204176->succ;
  this->succ = _3;
  _4 = D.204176->adj;
  this->adj = _4;
  _5 = &this->stack;
  _6 = &D.204176->stack;
  std::vector<int>::vector (_5, _6);
  return;

}



;; Function std::vector<int>::vector (_ZNSt6vectorIiSaIiEEC2ERKS1_, funcdef_no=8880, decl_uid=167731, cgraph_uid=5512, symbol_order=6301)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<int>::vector (struct vector * const this, const struct vector & __x)
{
  int * D.256697;
  struct __normal_iterator D.256694;
  struct __normal_iterator D.256693;
  struct allocator D.230197;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.167768;
  _2 = &__x->D.167768;
  _3 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_2);
  D.230197 = __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<int>::size (__x);
  std::_Vector_base<int, std::allocator<int> >::_Vector_base (_1, _4, &D.230197);

  <bb 3> :
  std::allocator<int>::~allocator (&D.230197);
  D.230197 = {CLOBBER};
  _5 = &this->D.167768;
  _6 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_5);
  _7 = this->D.167768._M_impl.D.167081._M_start;
  D.256693 = std::vector<int>::end (__x);
  D.256694 = std::vector<int>::begin (__x);
  D.256697 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*, int> (D.256694, D.256693, _7, _6);

  <bb 4> :
  _8 = D.256697;
  this->D.167768._M_impl.D.167081._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<int>::~allocator (&D.230197);
  resx 2

  <bb 6> :
<L1>:
  D.230197 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.167768;
  std::_Vector_base<int, std::allocator<int> >::~_Vector_base (_9);
  resx 5

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaIiEiE17_S_select_on_copyERKS1_, funcdef_no=9705, decl_uid=166943, cgraph_uid=6337, symbol_order=7126)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_, funcdef_no=10266, decl_uid=166908, cgraph_uid=6898, symbol_order=7691)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<int>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_base (_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_, funcdef_no=9708, decl_uid=167168, cgraph_uid=6340, symbol_order=7129)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<int, std::allocator<int> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<int, std::allocator<int> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_, funcdef_no=10268, decl_uid=167073, cgraph_uid=6900, symbol_order=7693)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<int>::allocator (this, __a);
  _1 = &this->D.167081;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_M_create_storage (_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm, funcdef_no=10270, decl_uid=167092, cgraph_uid=6902, symbol_order=7695)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  int * D.256704;

  <bb 2> :
  D.256704 = std::_Vector_base<int, std::allocator<int> >::_M_allocate (this, __n);
  _1 = D.256704;
  this->_M_impl.D.167081._M_start = _1;
  _2 = this->_M_impl.D.167081._M_start;
  this->_M_impl.D.167081._M_finish = _2;
  _3 = this->_M_impl.D.167081._M_start;
  _4 = __n * 4;
  _5 = _3 + _4;
  this->_M_impl.D.167081._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev, funcdef_no=6855, decl_uid=167128, cgraph_uid=3483, symbol_order=4260)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<int>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<int>::~allocator (_ZNSaIiED2Ev, funcdef_no=7898, decl_uid=166861, cgraph_uid=4530, symbol_order=5315)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<int>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIiED2Ev, funcdef_no=8871, decl_uid=166790, cgraph_uid=5503, symbol_order=6292)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<int>::end (_ZNKSt6vectorIiSaIiEE3endEv, funcdef_no=9711, decl_uid=167355, cgraph_uid=6343, symbol_order=7132)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<int>::end (const struct vector * const this)
{
  struct const_iterator D.237168;
  struct const_iterator D.256705;

  <bb 2> :
  _1 = &this->D.167768._M_impl.D.167081._M_finish;
  __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::__normal_iterator (&D.237168, _1);
  D.256705 = D.237168;
  D.237168 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256705;

}



;; Function __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_, funcdef_no=10272, decl_uid=230166, cgraph_uid=6904, symbol_order=7697)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::__normal_iterator (struct __normal_iterator * const this, const int * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<int>::begin (_ZNKSt6vectorIiSaIiEE5beginEv, funcdef_no=9710, decl_uid=167351, cgraph_uid=6342, symbol_order=7131)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<int>::begin (const struct vector * const this)
{
  struct const_iterator D.237166;
  struct const_iterator D.256708;

  <bb 2> :
  _1 = &this->D.167768._M_impl.D.167081._M_start;
  __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::__normal_iterator (&D.237166, _1);
  D.256708 = D.237166;
  D.237166 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256708;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*, int> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E, funcdef_no=9712, decl_uid=230186, cgraph_uid=6344, symbol_order=7133)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*, int> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result, struct allocator & D.237172)
{
  int * D.256713;
  int * D.256711;

  <bb 2> :
  D.256713 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (__first, __last, __result);
  D.256711 = D.256713;

  <bb 3> :
<L0>:
  return D.256711;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_, funcdef_no=10274, decl_uid=237174, cgraph_uid=6907, symbol_order=7700)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result)
{
  int * D.256716;
  const bool __assignable;
  int * D.256714;

  <bb 2> :
  __assignable = 1;
  D.256716 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (__first, __last, __result);
  D.256714 = D.256716;

  <bb 3> :
<L0>:
  return D.256714;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_, funcdef_no=10691, decl_uid=241781, cgraph_uid=7323, symbol_order=8116)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result)
{
  int * D.256719;
  int * D.256717;

  <bb 2> :
  D.256719 = std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (__first, __last, __result);
  D.256717 = D.256719;

  <bb 3> :
<L0>:
  return D.256717;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_, funcdef_no=10853, decl_uid=243993, cgraph_uid=7485, symbol_order=8280)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result)
{
  int * D.256724;
  struct __normal_iterator D.256722;
  struct __normal_iterator D.256721;
  int * D.256720;

  <bb 2> :
  D.256721 = std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (__last);
  D.256722 = std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (__first);
  D.256724 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (D.256722, D.256721, __result);
  D.256720 = D.256724;

  <bb 3> :
<L0>:
  return D.256720;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_, funcdef_no=10276, decl_uid=237223, cgraph_uid=6908, symbol_order=7701)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.256725;

  <bb 2> :
  D.256725 = __it;

  <bb 3> :
<L0>:
  return D.256725;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_, funcdef_no=10924, decl_uid=244859, cgraph_uid=7556, symbol_order=8351)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result)
{
  int * D.256729;
  int * D.256727;

  <bb 2> :
  __result.2063_1 = __result;
  _2 = std::__niter_base<int*> (__result.2063_1);
  _3 = std::__niter_base<const int*, std::vector<int> > (__last);
  _4 = std::__niter_base<const int*, std::vector<int> > (__first);
  D.256729 = std::__copy_move_a1<false, const int*, int*> (_4, _3, _2);
  _5 = D.256729;
  D.256727 = std::__niter_wrap<int*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.256727;

}



;; Function std::__niter_base<const int*, std::vector<int> > (_ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10692, decl_uid=241796, cgraph_uid=7324, symbol_order=8117)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const int * std::__niter_base<const int*, std::vector<int> > (struct __normal_iterator __it)
{
  const int * D.256730;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::base (&__it);
  D.256730 = *_1;

  <bb 3> :
<L0>:
  return D.256730;

}



;; Function __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv, funcdef_no=10854, decl_uid=230153, cgraph_uid=7486, symbol_order=8281)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const int * const & __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::base (const struct __normal_iterator * const this)
{
  const int * const & D.256732;

  <bb 2> :
  D.256732 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.256732;

}



;; Function std::__copy_move_a1<false, const int*, int*> (_ZSt14__copy_move_a1ILb0EPKiPiET1_T0_S4_S3_, funcdef_no=10694, decl_uid=241950, cgraph_uid=7326, symbol_order=8119)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a1<false, const int*, int*> (const int * __first, const int * __last, int * __result)
{
  int * D.256736;
  int * D.256734;

  <bb 2> :
  D.256736 = std::__copy_move_a2<false, const int*, int*> (__first, __last, __result);
  D.256734 = D.256736;

  <bb 3> :
<L0>:
  return D.256734;

}



;; Function std::__copy_move_a2<false, const int*, int*> (_ZSt14__copy_move_a2ILb0EPKiPiET1_T0_S4_S3_, funcdef_no=10855, decl_uid=244007, cgraph_uid=7487, symbol_order=8282)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a2<false, const int*, int*> (const int * __first, const int * __last, int * __result)
{
  int * D.256737;

  <bb 2> :
  D.256737 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.256737;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_, funcdef_no=10925, decl_uid=244880, cgraph_uid=7557, symbol_order=8352)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
int * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int> (const int * __first, const int * __last, int * __result)
{
  const ptrdiff_t _Num;
  int * D.256742;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 4;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.2064_2 = (long unsigned int) _Num;
  _3 = _Num.2064_2 * 4;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.2065_4 = (long unsigned int) _Num;
  _5 = _Num.2065_4 * 4;
  D.256742 = __result + _5;

  <bb 5> :
<L3>:
  return D.256742;

}



;; Function std::__niter_wrap<int*> (_ZSt12__niter_wrapIPiET_RKS1_S1_, funcdef_no=10699, decl_uid=241993, cgraph_uid=7331, symbol_order=8124)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__niter_wrap<int*> (int * const & D.244029, int * __res)
{
  int * D.256744;

  <bb 2> :
  D.256744 = __res;

  <bb 3> :
<L0>:
  return D.256744;

}



;; Function std::_Vector_base<int, std::allocator<int> >::~_Vector_base (_ZNSt12_Vector_baseIiSaIiEED2Ev, funcdef_no=7901, decl_uid=167191, cgraph_uid=4533, symbol_order=5318)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.167081._M_end_of_storage;
  _2 = this->_M_impl.D.167081._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 4;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.167081._M_start;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function Graph::operator= (_ZN5GraphaSERKS_, funcdef_no=7910, decl_uid=216549, cgraph_uid=4541, symbol_order=5326)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct Graph & Graph::operator= (struct Graph * const this, const struct Graph & D.216550)
{
  struct Graph & D.256746;

  <bb 2> :
  _1 = D.216550->V;
  this->V = _1;
  _2 = D.216550->end;
  this->end = _2;
  _3 = D.216550->succ;
  this->succ = _3;
  _4 = D.216550->adj;
  this->adj = _4;
  _5 = &D.216550->stack;
  _6 = &this->stack;
  std::vector<int>::operator= (_6, _5);
  D.256746 = this;

  <bb 3> :
<L0>:
  return D.256746;

}



;; Function std::vector<int>::operator= (_ZNSt6vectorIiSaIiEEaSERKS1_, funcdef_no=8882, decl_uid=167316, cgraph_uid=5516, symbol_order=6305)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<int>::operator= (struct vector * const this, const struct vector & __x)
{
  int * D.256781;
  int * __tmp;
  const size_type __xlen;
  struct vector & D.256779;
  struct __normal_iterator D.256776;
  struct __normal_iterator D.256775;
  struct __normal_iterator D.256774;
  struct __normal_iterator D.256773;
  struct __normal_iterator D.256772;
  bool retval.2070;
  struct __normal_iterator D.256767;
  struct __normal_iterator D.256766;
  bool retval.2069;
  bool iftmp.2068;
  bool retval.2067;
  bool retval.2066;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.2066 = __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_propagate_on_copy_assign ();
  if (retval.2066 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.167768;
  _4 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.167768;
  _6 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2068 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.2068 = 0;

  <bb 8> :
  retval.2067 = iftmp.2068;
  if (retval.2067 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<int>::clear (this);
  _8 = &this->D.167768;
  _9 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  _10 = this->D.167768._M_impl.D.167081._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 4;
  _13 = (long unsigned int) _12;
  _14 = this->D.167768._M_impl.D.167081._M_start;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_8, _14, _13);
  this->D.167768._M_impl.D.167081._M_start = 0B;
  this->D.167768._M_impl.D.167081._M_finish = 0B;
  this->D.167768._M_impl.D.167081._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.167768;
  _16 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.167768;
  _18 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<int> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<int>::size (__x);
  _19 = std::vector<int>::capacity (this);
  retval.2069 = __xlen > _19;
  if (retval.2069 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.256766 = std::vector<int>::end (__x);
  D.256767 = std::vector<int>::begin (__x);
  D.256781 = std::vector<int>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (this, __xlen, D.256767, D.256766);
  __tmp = D.256781;
  _20 = &this->D.167768;
  _21 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_20);
  _22 = this->D.167768._M_impl.D.167081._M_finish;
  _23 = this->D.167768._M_impl.D.167081._M_start;
  std::_Destroy<int*, int> (_23, _22, _21);
  _24 = &this->D.167768;
  _25 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  _26 = this->D.167768._M_impl.D.167081._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 4;
  _29 = (long unsigned int) _28;
  _30 = this->D.167768._M_impl.D.167081._M_start;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_24, _30, _29);
  this->D.167768._M_impl.D.167081._M_start = __tmp;
  _31 = this->D.167768._M_impl.D.167081._M_start;
  _32 = __xlen * 4;
  _33 = _31 + _32;
  this->D.167768._M_impl.D.167081._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<int>::size (this);
  retval.2070 = __xlen <= _34;
  if (retval.2070 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.167768;
  _36 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_35);
  D.256772 = std::vector<int>::end (this);
  D.256773 = std::vector<int>::begin (this);
  D.256774 = std::vector<int>::end (__x);
  D.256775 = std::vector<int>::begin (__x);
  D.256776 = std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (D.256775, D.256774, D.256773);
  std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int> (D.256776, D.256772, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.167768._M_impl.D.167081._M_start;
  _38 = __x->D.167768._M_impl.D.167081._M_start;
  _39 = std::vector<int>::size (this);
  _40 = _39 * 4;
  _41 = _38 + _40;
  _42 = __x->D.167768._M_impl.D.167081._M_start;
  std::copy<int*, int*> (_42, _41, _37);
  _43 = &this->D.167768;
  _44 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_43);
  _45 = this->D.167768._M_impl.D.167081._M_finish;
  _46 = __x->D.167768._M_impl.D.167081._M_finish;
  _47 = __x->D.167768._M_impl.D.167081._M_start;
  _48 = std::vector<int>::size (this);
  _49 = _48 * 4;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<int*, int*, int> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.167768._M_impl.D.167081._M_start;
  _52 = __xlen * 4;
  _53 = _51 + _52;
  this->D.167768._M_impl.D.167081._M_finish = _53;

  <bb 17> :
  D.256779 = this;

  <bb 18> :
<L19>:
  return D.256779;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaIiEiE27_S_propagate_on_copy_assignEv, funcdef_no=8883, decl_uid=166948, cgraph_uid=5514, symbol_order=6303)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_propagate_on_copy_assign ()
{
  bool D.256782;

  <bb 2> :
  D.256782 = 0;

  <bb 3> :
<L0>:
  return D.256782;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaIiEiE15_S_always_equalEv, funcdef_no=8884, decl_uid=166951, cgraph_uid=5515, symbol_order=6304)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_always_equal ()
{
  bool D.256784;

  <bb 2> :
  D.256784 = 1;

  <bb 3> :
<L0>:
  return D.256784;

}



;; Function std::operator!= (_ZStneRKSaIiES1_, funcdef_no=9713, decl_uid=166834, cgraph_uid=6345, symbol_order=7134)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.237191, const struct allocator & D.237192)
{
  bool D.256786;

  <bb 2> :
  D.256786 = 0;

  <bb 3> :
<L0>:
  return D.256786;

}



;; Function std::__alloc_on_copy<std::allocator<int> > (_ZSt15__alloc_on_copyISaIiEEvRT_RKS1_, funcdef_no=9714, decl_uid=230223, cgraph_uid=6346, symbol_order=7135)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<int> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<int>::capacity (_ZNKSt6vectorIiSaIiEE8capacityEv, funcdef_no=9715, decl_uid=167386, cgraph_uid=6347, symbol_order=7136)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<int>::capacity (const struct vector * const this)
{
  size_type D.256788;

  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  _2 = this->D.167768._M_impl.D.167081._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 4;
  D.256788 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.256788;

}



;; Function std::vector<int>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (_ZNSt6vectorIiSaIiEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKiS1_EEEEPimT_S9_, funcdef_no=9716, decl_uid=230230, cgraph_uid=6348, symbol_order=7137)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
int * std::vector<int>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  int * D.256792;
  int * __result;
  int * D.256790;

  <bb 2> :
  _1 = &this->D.167768;
  D.256792 = std::_Vector_base<int, std::allocator<int> >::_M_allocate (_1, __n);
  __result = D.256792;
  _2 = &this->D.167768;
  _3 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*, int> (__first, __last, __result, _3);

  <bb 3> :
  D.256790 = __result;

  <bb 4> :
<L0>:
  return D.256790;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.167768;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET0_T_SB_SA_, funcdef_no=9717, decl_uid=230238, cgraph_uid=6349, symbol_order=7138)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.256798;
  struct __normal_iterator D.256797;
  struct __normal_iterator D.256796;

  <bb 2> :
  D.256797 = std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (__last);
  D.256798 = std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (__first);
  D.256796 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (D.256798, D.256797, __result);

  <bb 3> :
<L0>:
  return D.256796;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET1_T0_SB_SA_, funcdef_no=10277, decl_uid=237229, cgraph_uid=6910, symbol_order=7703)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  int * D.256802;
  struct __normal_iterator D.256800;

  <bb 2> :
  _1 = std::__niter_base<int*, std::vector<int> > (__result);
  _2 = std::__niter_base<const int*, std::vector<int> > (__last);
  _3 = std::__niter_base<const int*, std::vector<int> > (__first);
  D.256802 = std::__copy_move_a1<false, const int*, int*> (_3, _2, _1);
  _4 = D.256802;
  D.256800 = std::__niter_wrap<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int*> (__result, _4);

  <bb 3> :
<L0>:
  return D.256800;

}



;; Function std::__niter_base<int*, std::vector<int> > (_ZSt12__niter_baseIPiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE, funcdef_no=10693, decl_uid=241947, cgraph_uid=7325, symbol_order=8118)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__niter_base<int*, std::vector<int> > (struct __normal_iterator __it)
{
  int * D.256803;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (&__it);
  D.256803 = *_1;

  <bb 3> :
<L0>:
  return D.256803;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES2_ET_S7_T0_, funcdef_no=10695, decl_uid=241954, cgraph_uid=7327, symbol_order=8120)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int*> (struct __normal_iterator __from, int * __res)
{
  struct __normal_iterator D.256805;

  <bb 2> :
  _1 = std::__niter_base<int*, std::vector<int> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 4;
  D.256805 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.256805;

}



;; Function __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl, funcdef_no=10856, decl_uid=210067, cgraph_uid=7488, symbol_order=8283)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  int * const D.244886;
  struct __normal_iterator D.244887;
  struct __normal_iterator D.256807;

  <bb 2> :
  _1 = this->_M_current;
  __n.2071_2 = (long unsigned int) __n;
  _3 = __n.2071_2 * 4;
  _4 = _1 + _3;
  D.244886 = _4;
  __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (&D.244887, &D.244886);
  D.256807 = D.244887;
  D.244887 = {CLOBBER};
  D.244886 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.256807;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RSaIT0_E, funcdef_no=9718, decl_uid=230244, cgraph_uid=6350, symbol_order=7139)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.237258)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_, funcdef_no=10279, decl_uid=237260, cgraph_uid=6911, symbol_order=7704)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEEvT_S9_, funcdef_no=10696, decl_uid=241978, cgraph_uid=7328, symbol_order=8121)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (struct __normal_iterator D.244016, struct __normal_iterator D.244017)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<int*, int*> (_ZSt4copyIPiS0_ET0_T_S2_S1_, funcdef_no=9719, decl_uid=230252, cgraph_uid=6351, symbol_order=7140)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::copy<int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.256813;
  int * D.256811;

  <bb 2> :
  _1 = std::__miter_base<int*> (__last);
  _2 = std::__miter_base<int*> (__first);
  D.256813 = std::__copy_move_a<false, int*, int*> (_2, _1, __result);
  D.256811 = D.256813;

  <bb 3> :
<L0>:
  return D.256811;

}



;; Function std::__miter_base<int*> (_ZSt12__miter_baseIPiET_S1_, funcdef_no=10280, decl_uid=237276, cgraph_uid=6912, symbol_order=7705)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__miter_base<int*> (int * __it)
{
  int * D.256814;

  <bb 2> :
  D.256814 = __it;

  <bb 3> :
<L0>:
  return D.256814;

}



;; Function std::__copy_move_a<false, int*, int*> (_ZSt13__copy_move_aILb0EPiS0_ET1_T0_S2_S1_, funcdef_no=10281, decl_uid=237278, cgraph_uid=6913, symbol_order=7706)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a<false, int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.256818;
  int * D.256816;

  <bb 2> :
  __result.2072_1 = __result;
  _2 = std::__niter_base<int*> (__result.2072_1);
  _3 = std::__niter_base<int*> (__last);
  _4 = std::__niter_base<int*> (__first);
  D.256818 = std::__copy_move_a1<false, int*, int*> (_4, _3, _2);
  _5 = D.256818;
  D.256816 = std::__niter_wrap<int*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.256816;

}



;; Function std::__copy_move_a1<false, int*, int*> (_ZSt14__copy_move_a1ILb0EPiS0_ET1_T0_S2_S1_, funcdef_no=10698, decl_uid=241989, cgraph_uid=7330, symbol_order=8123)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a1<false, int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.256821;
  int * D.256819;

  <bb 2> :
  D.256821 = std::__copy_move_a2<false, int*, int*> (__first, __last, __result);
  D.256819 = D.256821;

  <bb 3> :
<L0>:
  return D.256819;

}



;; Function std::__copy_move_a2<false, int*, int*> (_ZSt14__copy_move_a2ILb0EPiS0_ET1_T0_S2_S1_, funcdef_no=10857, decl_uid=244025, cgraph_uid=7489, symbol_order=8284)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a2<false, int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.256822;

  <bb 2> :
  D.256822 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.256822;

}



;; Function std::__uninitialized_copy_a<int*, int*, int> (_ZSt22__uninitialized_copy_aIPiS0_iET0_T_S2_S1_RSaIT1_E, funcdef_no=9720, decl_uid=230256, cgraph_uid=6352, symbol_order=7141)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__uninitialized_copy_a<int*, int*, int> (int * __first, int * __last, int * __result, struct allocator & D.237285)
{
  int * D.256826;
  int * D.256824;

  <bb 2> :
  D.256826 = std::uninitialized_copy<int*, int*> (__first, __last, __result);
  D.256824 = D.256826;

  <bb 3> :
<L0>:
  return D.256824;

}



;; Function std::uninitialized_copy<int*, int*> (_ZSt18uninitialized_copyIPiS0_ET0_T_S2_S1_, funcdef_no=10282, decl_uid=237287, cgraph_uid=6914, symbol_order=7707)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::uninitialized_copy<int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.256829;
  const bool __assignable;
  int * D.256827;

  <bb 2> :
  __assignable = 1;
  D.256829 = std::__uninitialized_copy<true>::__uninit_copy<int*, int*> (__first, __last, __result);
  D.256827 = D.256829;

  <bb 3> :
<L0>:
  return D.256827;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<int*, int*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPiS2_EET0_T_S4_S3_, funcdef_no=10700, decl_uid=242027, cgraph_uid=7332, symbol_order=8125)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__uninitialized_copy<true>::__uninit_copy<int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.256832;
  int * D.256830;

  <bb 2> :
  D.256832 = std::copy<int*, int*> (__first, __last, __result);
  D.256830 = D.256832;

  <bb 3> :
<L0>:
  return D.256830;

}



;; Function hash_map<tree_node*, var_points_to>::~hash_map (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6867, decl_uid=204366, cgraph_uid=3498, symbol_order=4275)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, var_points_to>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7912, decl_uid=203061, cgraph_uid=4544, symbol_order=5329)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.256846;
  bool D.256845;
  size_t i;
  bool iftmp.2074;
  bool retval.2073;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 40;
  _4 = _2 + _3;
  D.256845 = hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.256845;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 40;
  _9 = _7 + _8;
  D.256846 = hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.256846;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2074 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2074 = 0;

  <bb 7> :
  retval.2073 = iftmp.2074;
  if (retval.2073 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 40;
  _14 = _12 + _13;
  hash_map<tree_node*, var_points_to>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8885, decl_uid=203014, cgraph_uid=5517, symbol_order=6306)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.256849;
  bool D.256847;

  <bb 2> :
  D.256849 = hash_map<tree_node*, var_points_to>::hash_entry::is_empty (v);
  D.256847 = D.256849;

  <bb 3> :
<L0>:
  return D.256847;

}



;; Function hash_map<tree_node*, var_points_to>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=9721, decl_uid=202844, cgraph_uid=6353, symbol_order=7142)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, var_points_to>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.256850;

  <bb 2> :
  D.256850 = simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_empty<hash_map<tree_node*, var_points_to>::hash_entry> (e);

  <bb 3> :
<L0>:
  return D.256850;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_empty<hash_map<tree_node*, var_points_to>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE13var_points_toE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10283, decl_uid=237293, cgraph_uid=6915, symbol_order=7708)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_empty<hash_map<tree_node*, var_points_to>::hash_entry> (const struct hash_entry & entry)
{
  bool D.256852;

  <bb 2> :
  _1 = entry->m_key;
  D.256852 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.256852;

}



;; Function hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8886, decl_uid=203012, cgraph_uid=5518, symbol_order=6307)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.256856;
  bool D.256854;

  <bb 2> :
  D.256856 = hash_map<tree_node*, var_points_to>::hash_entry::is_deleted (v);
  D.256854 = D.256856;

  <bb 3> :
<L0>:
  return D.256854;

}



;; Function hash_map<tree_node*, var_points_to>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9722, decl_uid=202839, cgraph_uid=6354, symbol_order=7143)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, var_points_to>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.256859;
  bool D.256857;

  <bb 2> :
  D.256859 = simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_deleted<hash_map<tree_node*, var_points_to>::hash_entry> (e);
  D.256857 = D.256859;

  <bb 3> :
<L0>:
  return D.256857;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_deleted<hash_map<tree_node*, var_points_to>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE13var_points_toE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10284, decl_uid=237297, cgraph_uid=6916, symbol_order=7709)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_deleted<hash_map<tree_node*, var_points_to>::hash_entry> (const struct hash_entry & entry)
{
  bool D.256860;

  <bb 2> :
  _1 = entry->m_key;
  D.256860 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.256860;

}



;; Function hash_map<tree_node*, var_points_to>::hash_entry::remove (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8887, decl_uid=202835, cgraph_uid=5519, symbol_order=6308)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, var_points_to>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::remove<hash_map<tree_node*, var_points_to>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::remove<hash_map<tree_node*, var_points_to>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE13var_points_toE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9723, decl_uid=230272, cgraph_uid=6355, symbol_order=7144)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::remove<hash_map<tree_node*, var_points_to>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  var_points_to::~var_points_to (_2);
  return;

}



;; Function xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8888, decl_uid=216617, cgraph_uid=5520, symbol_order=6309)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_map<tree_node*, gimple_array>::~hash_map (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6870, decl_uid=204382, cgraph_uid=3501, symbol_order=4278)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, gimple_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7915, decl_uid=190352, cgraph_uid=4547, symbol_order=5332)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.256876;
  bool D.256875;
  size_t i;
  bool iftmp.2076;
  bool retval.2075;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 56;
  _4 = _2 + _3;
  D.256875 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.256875;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 56;
  _9 = _7 + _8;
  D.256876 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.256876;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2076 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2076 = 0;

  <bb 7> :
  retval.2075 = iftmp.2076;
  if (retval.2075 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 56;
  _14 = _12 + _13;
  hash_map<tree_node*, gimple_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8891, decl_uid=190129, cgraph_uid=5523, symbol_order=6312)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, gimple_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::remove<hash_map<tree_node*, gimple_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::remove<hash_map<tree_node*, gimple_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9725, decl_uid=230282, cgraph_uid=6357, symbol_order=7146)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::remove<hash_map<tree_node*, gimple_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  *_2 = {CLOBBER};
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::~hash_map (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6873, decl_uid=204398, cgraph_uid=3504, symbol_order=4281)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7918, decl_uid=196803, cgraph_uid=4550, symbol_order=5335)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.256890;
  bool D.256889;
  size_t i;
  bool iftmp.2078;
  bool retval.2077;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 168;
  _4 = _2 + _3;
  D.256889 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.256889;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 168;
  _9 = _7 + _8;
  D.256890 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.256890;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2078 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2078 = 0;

  <bb 7> :
  retval.2077 = iftmp.2078;
  if (retval.2077 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 168;
  _14 = _12 + _13;
  hash_map<basic_block_def*, symbolicinfo>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::remove (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8895, decl_uid=196577, cgraph_uid=5527, symbol_order=6316)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::remove<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::remove<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9727, decl_uid=230292, cgraph_uid=6359, symbol_order=7148)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::remove<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<basic_block_def*>::remove (_1);
  _2 = &entry->m_value;
  symbolicinfo::~symbolicinfo (_2);
  return;

}



;; Function ggc_remove<basic_block_def*>::remove (_ZN10ggc_removeIP15basic_block_defE6removeERS1_, funcdef_no=10287, decl_uid=196447, cgraph_uid=6919, symbol_order=7712)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ggc_remove<basic_block_def*>::remove (struct basic_block_def * & D.242039)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function hash_map<cgraph_node*, Graph>::~hash_map (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6876, decl_uid=204414, cgraph_uid=3507, symbol_order=4284)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7921, decl_uid=203484, cgraph_uid=4553, symbol_order=5338)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.256904;
  bool D.256903;
  size_t i;
  bool iftmp.2080;
  bool retval.2079;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 56;
  _4 = _2 + _3;
  D.256903 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.256903;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 56;
  _9 = _7 + _8;
  D.256904 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.256904;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2080 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2080 = 0;

  <bb 7> :
  retval.2079 = iftmp.2080;
  if (retval.2079 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 56;
  _14 = _12 + _13;
  hash_map<cgraph_node*, Graph>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::remove (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8899, decl_uid=203258, cgraph_uid=5531, symbol_order=6320)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::remove<hash_map<cgraph_node*, Graph>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::remove<hash_map<cgraph_node*, Graph>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9729, decl_uid=230302, cgraph_uid=6361, symbol_order=7150)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::remove<hash_map<cgraph_node*, Graph>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<cgraph_node*>::remove (_1);
  _2 = &entry->m_value;
  Graph::~Graph (_2);
  return;

}



;; Function ggc_remove<cgraph_node*>::remove (_ZN10ggc_removeIP11cgraph_nodeE6removeERS1_, funcdef_no=10289, decl_uid=203128, cgraph_uid=6921, symbol_order=7714)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ggc_remove<cgraph_node*>::remove (struct cgraph_node * & D.242043)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function hash_map<tree_node*, function_return_array>::~hash_map (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6879, decl_uid=204430, cgraph_uid=3510, symbol_order=4287)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7924, decl_uid=189823, cgraph_uid=4556, symbol_order=5341)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.256918;
  bool D.256917;
  size_t i;
  bool iftmp.2082;
  bool retval.2081;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 40;
  _4 = _2 + _3;
  D.256917 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.256917;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 40;
  _9 = _7 + _8;
  D.256918 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.256918;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2082 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2082 = 0;

  <bb 7> :
  retval.2081 = iftmp.2082;
  if (retval.2081 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 40;
  _14 = _12 + _13;
  hash_map<tree_node*, function_return_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8903, decl_uid=189597, cgraph_uid=5535, symbol_order=6324)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::remove<hash_map<tree_node*, function_return_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::remove<hash_map<tree_node*, function_return_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9731, decl_uid=230312, cgraph_uid=6363, symbol_order=7152)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::remove<hash_map<tree_node*, function_return_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_return_array::~function_return_array (_2);
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::~hash_map (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6882, decl_uid=204446, cgraph_uid=3513, symbol_order=4290)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7927, decl_uid=190984, cgraph_uid=4559, symbol_order=5344)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.256932;
  bool D.256931;
  size_t i;
  bool iftmp.2084;
  bool retval.2083;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 40;
  _4 = _2 + _3;
  D.256931 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.256931;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 40;
  _9 = _7 + _8;
  D.256932 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.256932;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2084 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2084 = 0;

  <bb 7> :
  retval.2083 = iftmp.2084;
  if (retval.2083 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 40;
  _14 = _12 + _13;
  hash_map<tree_node*, function_assign_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8907, decl_uid=190758, cgraph_uid=5539, symbol_order=6328)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::remove<hash_map<tree_node*, function_assign_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::remove<hash_map<tree_node*, function_assign_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9733, decl_uid=230322, cgraph_uid=6365, symbol_order=7154)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::remove<hash_map<tree_node*, function_assign_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_assign_array::~function_assign_array (_2);
  return;

}



;; Function hash_map<tree_node*, pthread_attr_array>::~hash_map (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6885, decl_uid=204462, cgraph_uid=3516, symbol_order=4293)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, pthread_attr_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7930, decl_uid=194921, cgraph_uid=4562, symbol_order=5347)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.256946;
  bool D.256945;
  size_t i;
  bool iftmp.2086;
  bool retval.2085;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 32;
  _4 = _2 + _3;
  D.256945 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.256945;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 32;
  _9 = _7 + _8;
  D.256946 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.256946;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2086 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2086 = 0;

  <bb 7> :
  retval.2085 = iftmp.2086;
  if (retval.2085 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 32;
  _14 = _12 + _13;
  hash_map<tree_node*, pthread_attr_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8911, decl_uid=194698, cgraph_uid=5543, symbol_order=6332)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, pthread_attr_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::remove<hash_map<tree_node*, pthread_attr_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::remove<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9735, decl_uid=230332, cgraph_uid=6367, symbol_order=7156)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::remove<hash_map<tree_node*, pthread_attr_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  *_2 = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::~hash_map (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6888, decl_uid=204478, cgraph_uid=3519, symbol_order=4296)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7933, decl_uid=193549, cgraph_uid=4565, symbol_order=5350)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.256960;
  bool D.256959;
  size_t i;
  bool iftmp.2088;
  bool retval.2087;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 32;
  _4 = _2 + _3;
  D.256959 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.256959;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 32;
  _9 = _7 + _8;
  D.256960 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.256960;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2088 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2088 = 0;

  <bb 7> :
  retval.2087 = iftmp.2088;
  if (retval.2087 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 32;
  _14 = _12 + _13;
  hash_map<tree_node*, function_pthread_detched_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8915, decl_uid=193323, cgraph_uid=5547, symbol_order=6336)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::remove<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::remove<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9737, decl_uid=230342, cgraph_uid=6369, symbol_order=7158)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::remove<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_pthread_detched_array::~function_pthread_detched_array (_2);
  return;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::~hash_map (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6891, decl_uid=204494, cgraph_uid=3522, symbol_order=4299)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7936, decl_uid=194025, cgraph_uid=4568, symbol_order=5353)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.256974;
  bool D.256973;
  size_t i;
  bool iftmp.2090;
  bool retval.2089;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 32;
  _4 = _2 + _3;
  D.256973 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.256973;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 32;
  _9 = _7 + _8;
  D.256974 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.256974;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2090 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2090 = 0;

  <bb 7> :
  retval.2089 = iftmp.2090;
  if (retval.2089 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 32;
  _14 = _12 + _13;
  hash_map<tree_node*, function_pthread_exit_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8919, decl_uid=193799, cgraph_uid=5551, symbol_order=6340)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::remove<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::remove<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9739, decl_uid=230352, cgraph_uid=6371, symbol_order=7160)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::remove<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_pthread_exit_array::~function_pthread_exit_array (_2);
  return;

}



;; Function hash_map<tree_node*, function_path_array>::~hash_map (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6894, decl_uid=204510, cgraph_uid=3525, symbol_order=4302)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7939, decl_uid=192195, cgraph_uid=4571, symbol_order=5356)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.256988;
  bool D.256987;
  size_t i;
  bool iftmp.2092;
  bool retval.2091;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 40;
  _4 = _2 + _3;
  D.256987 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.256987;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 40;
  _9 = _7 + _8;
  D.256988 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.256988;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2092 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2092 = 0;

  <bb 7> :
  retval.2091 = iftmp.2092;
  if (retval.2091 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 40;
  _14 = _12 + _13;
  hash_map<tree_node*, function_path_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8923, decl_uid=191969, cgraph_uid=5555, symbol_order=6344)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::remove<hash_map<tree_node*, function_path_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::remove<hash_map<tree_node*, function_path_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9741, decl_uid=230362, cgraph_uid=6373, symbol_order=7162)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::remove<hash_map<tree_node*, function_path_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_path_array::~function_path_array (_2);
  return;

}



;; Function hash_map<tree_node*, function_free_array>::~hash_map (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6897, decl_uid=204526, cgraph_uid=3528, symbol_order=4305)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7942, decl_uid=192677, cgraph_uid=4574, symbol_order=5359)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.257002;
  bool D.257001;
  size_t i;
  bool iftmp.2094;
  bool retval.2093;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 32;
  _4 = _2 + _3;
  D.257001 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.257001;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 32;
  _9 = _7 + _8;
  D.257002 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.257002;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2094 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2094 = 0;

  <bb 7> :
  retval.2093 = iftmp.2094;
  if (retval.2093 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 32;
  _14 = _12 + _13;
  hash_map<tree_node*, function_free_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8927, decl_uid=192451, cgraph_uid=5559, symbol_order=6348)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::remove<hash_map<tree_node*, function_free_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::remove<hash_map<tree_node*, function_free_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9743, decl_uid=230372, cgraph_uid=6375, symbol_order=7164)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::remove<hash_map<tree_node*, function_free_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_free_array::~function_free_array (_2);
  return;

}



;; Function hash_map<tree_node*, function_graph_array>::~hash_map (_ZN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6900, decl_uid=204542, cgraph_uid=3531, symbol_order=4308)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_graph_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7945, decl_uid=203862, cgraph_uid=4577, symbol_order=5362)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.257016;
  bool D.257015;
  size_t i;
  bool iftmp.2096;
  bool retval.2095;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 16;
  _4 = _2 + _3;
  D.257015 = hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.257015;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 16;
  _9 = _7 + _8;
  D.257016 = hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.257016;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2096 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2096 = 0;

  <bb 7> :
  retval.2095 = iftmp.2096;
  if (retval.2095 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 16;
  _14 = _12 + _13;
  hash_map<tree_node*, function_graph_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8929, decl_uid=203815, cgraph_uid=5561, symbol_order=6350)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.257019;
  bool D.257017;

  <bb 2> :
  D.257019 = hash_map<tree_node*, function_graph_array>::hash_entry::is_empty (v);
  D.257017 = D.257019;

  <bb 3> :
<L0>:
  return D.257017;

}



;; Function hash_map<tree_node*, function_graph_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=9744, decl_uid=203648, cgraph_uid=6376, symbol_order=7165)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_graph_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.257020;

  <bb 2> :
  D.257020 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_empty<hash_map<tree_node*, function_graph_array>::hash_entry> (e);

  <bb 3> :
<L0>:
  return D.257020;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_empty<hash_map<tree_node*, function_graph_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE20function_graph_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10297, decl_uid=237363, cgraph_uid=6929, symbol_order=7722)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_empty<hash_map<tree_node*, function_graph_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.257022;

  <bb 2> :
  _1 = entry->m_key;
  D.257022 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.257022;

}



;; Function hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8930, decl_uid=203813, cgraph_uid=5562, symbol_order=6351)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.257026;
  bool D.257024;

  <bb 2> :
  D.257026 = hash_map<tree_node*, function_graph_array>::hash_entry::is_deleted (v);
  D.257024 = D.257026;

  <bb 3> :
<L0>:
  return D.257024;

}



;; Function hash_map<tree_node*, function_graph_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9745, decl_uid=203643, cgraph_uid=6377, symbol_order=7166)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_graph_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.257029;
  bool D.257027;

  <bb 2> :
  D.257029 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_deleted<hash_map<tree_node*, function_graph_array>::hash_entry> (e);
  D.257027 = D.257029;

  <bb 3> :
<L0>:
  return D.257027;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_deleted<hash_map<tree_node*, function_graph_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE20function_graph_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10298, decl_uid=237367, cgraph_uid=6930, symbol_order=7723)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_deleted<hash_map<tree_node*, function_graph_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.257030;

  <bb 2> :
  _1 = entry->m_key;
  D.257030 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.257030;

}



;; Function hash_map<tree_node*, function_graph_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8931, decl_uid=203639, cgraph_uid=5563, symbol_order=6352)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_graph_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::remove<hash_map<tree_node*, function_graph_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::remove<hash_map<tree_node*, function_graph_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE20function_graph_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9746, decl_uid=230382, cgraph_uid=6378, symbol_order=7167)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::remove<hash_map<tree_node*, function_graph_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  *_2 = {CLOBBER};
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8932, decl_uid=216881, cgraph_uid=5564, symbol_order=6353)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function std::__cxx11::basic_string<char>::~basic_string (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev, funcdef_no=7276, decl_uid=126289, cgraph_uid=3908, symbol_order=4690)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::basic_string<char>::~basic_string (struct basic_string * const this)
{
  <bb 2> :
  std::__cxx11::basic_string<char>::_M_dispose (this);
  _1 = &this->_M_dataplus;
  std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider (_1);
  *this = {CLOBBER};
  return;

}



;; Function Graph::~Graph (_ZN5GraphD2Ev, funcdef_no=6864, decl_uid=204341, cgraph_uid=3495, symbol_order=4272)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void Graph::~Graph (struct Graph * const this)
{
  <bb 2> :
  _1 = &this->stack;
  std::vector<int>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<int>::~vector (_ZNSt6vectorIiSaIiEED2Ev, funcdef_no=7904, decl_uid=167765, cgraph_uid=4536, symbol_order=5321)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.167768;
  _2 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_1);
  _3 = this->D.167768._M_impl.D.167081._M_finish;
  _4 = this->D.167768._M_impl.D.167081._M_start;
  std::_Destroy<int*, int> (_4, _3, _2);
  _5 = &this->D.167768;
  std::_Vector_base<int, std::allocator<int> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function breakpoint::~breakpoint (_ZN10breakpointD2Ev, funcdef_no=6848, decl_uid=202711, cgraph_uid=3479, symbol_order=4256)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void breakpoint::~breakpoint (struct breakpoint * const this)
{
  <bb 2> :
  _1 = &this->name;
  std::__cxx11::basic_string<char>::~basic_string (_1);
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function var_points_to::~var_points_to (_ZN13var_points_toD2Ev, funcdef_no=6841, decl_uid=202532, cgraph_uid=3472, symbol_order=4249)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void var_points_to::~var_points_to (struct var_points_to * const this)
{
  <bb 2> :
  _1 = &this->may_malloc_path;
  std::vector<std::vector<std::pair<fdecl, unsigned int> > >::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<std::vector<std::pair<fdecl, unsigned int> > >::~vector (_ZNSt6vectorIS_ISt4pairI5fdecljESaIS2_EESaIS4_EED2Ev, funcdef_no=7839, decl_uid=172416, cgraph_uid=4471, symbol_order=5256)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<std::vector<std::pair<fdecl, unsigned int> > >::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.172419;
  _2 = std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_get_Tp_allocator (_1);
  _3 = this->D.172419._M_impl.D.171764._M_finish;
  _4 = this->D.172419._M_impl.D.171764._M_start;
  std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*, std::vector<std::pair<fdecl, unsigned int> > > (_4, _3, _2);
  _5 = &this->D.172419;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_get_Tp_allocator (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv, funcdef_no=8804, decl_uid=171652, cgraph_uid=5436, symbol_order=6225)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.257033;

  <bb 2> :
  D.257033 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.257033;

}



;; Function std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*, std::vector<std::pair<fdecl, unsigned int> > > (_ZSt8_DestroyIPSt6vectorISt4pairI5fdecljESaIS3_EES5_EvT_S7_RSaIT0_E, funcdef_no=8805, decl_uid=216106, cgraph_uid=5439, symbol_order=6228)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*, std::vector<std::pair<fdecl, unsigned int> > > (struct vector * __first, struct vector * __last, struct allocator & D.228363)
{
  <bb 2> :
  std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*> (__first, __last);
  return;

}



;; Function std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*> (_ZSt8_DestroyIPSt6vectorISt4pairI5fdecljESaIS3_EEEvT_S7_, funcdef_no=9657, decl_uid=229260, cgraph_uid=6290, symbol_order=7079)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*> (struct vector * __first, struct vector * __last)
{
  <bb 2> :
  std::_Destroy_aux<false>::__destroy<std::vector<std::pair<fdecl, unsigned int> >*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<false>::__destroy<std::vector<std::pair<fdecl, unsigned int> >*> (_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorISt4pairI5fdecljESaIS5_EEEEvT_S9_, funcdef_no=10236, decl_uid=236937, cgraph_uid=6868, symbol_order=7661)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void std::_Destroy_aux<false>::__destroy<std::vector<std::pair<fdecl, unsigned int> >*> (struct vector * __first, struct vector * __last)
{
  <bb 2> :
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<std::vector<std::pair<fdecl, unsigned int> > > (__first);
  std::_Destroy<std::vector<std::pair<fdecl, unsigned int> > > (_1);
  __first = __first + 24;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



;; Function std::__addressof<std::vector<std::pair<fdecl, unsigned int> > > (_ZSt11__addressofISt6vectorISt4pairI5fdecljESaIS3_EEEPT_RS6_, funcdef_no=10660, decl_uid=241532, cgraph_uid=7292, symbol_order=8085)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct vector * std::__addressof<std::vector<std::pair<fdecl, unsigned int> > > (struct vector & __r)
{
  struct vector * D.257035;

  <bb 2> :
  D.257035 = __r;

  <bb 3> :
<L0>:
  return D.257035;

}



;; Function std::_Destroy<std::vector<std::pair<fdecl, unsigned int> > > (_ZSt8_DestroyISt6vectorISt4pairI5fdecljESaIS3_EEEvPT_, funcdef_no=10661, decl_uid=241534, cgraph_uid=7293, symbol_order=8086)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<std::vector<std::pair<fdecl, unsigned int> > > (struct vector * __pointer)
{
  <bb 2> :
  std::vector<std::pair<fdecl, unsigned int> >::~vector (__pointer);
  return;

}



;; Function std::vector<std::pair<fdecl, unsigned int> >::~vector (_ZNSt6vectorISt4pairI5fdecljESaIS2_EED2Ev, funcdef_no=10840, decl_uid=216093, cgraph_uid=7472, symbol_order=8267)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<std::pair<fdecl, unsigned int> >::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.216096;
  _2 = std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_get_Tp_allocator (_1);
  _3 = this->D.216096._M_impl.D.215441._M_finish;
  _4 = this->D.216096._M_impl.D.215441._M_start;
  std::_Destroy<std::pair<fdecl, unsigned int>*, std::pair<fdecl, unsigned int> > (_4, _3, _2);
  _5 = &this->D.216096;
  std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_get_Tp_allocator (_ZNSt12_Vector_baseISt4pairI5fdecljESaIS2_EE19_M_get_Tp_allocatorEv, funcdef_no=10920, decl_uid=215329, cgraph_uid=7552, symbol_order=8347)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.257037;

  <bb 2> :
  D.257037 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.257037;

}



;; Function std::_Destroy<std::pair<fdecl, unsigned int>*, std::pair<fdecl, unsigned int> > (_ZSt8_DestroyIPSt4pairI5fdecljES2_EvT_S4_RSaIT0_E, funcdef_no=10921, decl_uid=244804, cgraph_uid=7553, symbol_order=8348)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<std::pair<fdecl, unsigned int>*, std::pair<fdecl, unsigned int> > (struct pair * __first, struct pair * __last, struct allocator & D.245184)
{
  <bb 2> :
  std::_Destroy<std::pair<fdecl, unsigned int>*> (__first, __last);
  return;

}



;; Function std::_Destroy<std::pair<fdecl, unsigned int>*> (_ZSt8_DestroyIPSt4pairI5fdecljEEvT_S4_, funcdef_no=10955, decl_uid=245186, cgraph_uid=7588, symbol_order=8383)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<std::pair<fdecl, unsigned int>*> (struct pair * __first, struct pair * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<std::pair<fdecl, unsigned int>*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<std::pair<fdecl, unsigned int>*> (_ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairI5fdecljEEEvT_S6_, funcdef_no=10975, decl_uid=245669, cgraph_uid=7607, symbol_order=8402)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<std::pair<fdecl, unsigned int>*> (struct pair * D.245755, struct pair * D.245756)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::~_Vector_base (_ZNSt12_Vector_baseISt4pairI5fdecljESaIS2_EED2Ev, funcdef_no=10918, decl_uid=215551, cgraph_uid=7550, symbol_order=8345)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.215441._M_end_of_storage;
  _2 = this->_M_impl.D.215441._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.215441._M_start;
  std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_deallocate (_ZNSt12_Vector_baseISt4pairI5fdecljESaIS2_EE13_M_deallocateEPS2_m, funcdef_no=10954, decl_uid=215448, cgraph_uid=7586, symbol_order=8381)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_deallocate (struct _Vector_base * const this, struct pair * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<std::pair<fdecl, unsigned int> > >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<std::pair<fdecl, unsigned int> > >::deallocate (_ZNSt16allocator_traitsISaISt4pairI5fdecljEEE10deallocateERS3_PS2_m, funcdef_no=10974, decl_uid=215253, cgraph_uid=7606, symbol_order=8401)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<std::pair<fdecl, unsigned int> > >::deallocate (struct allocator_type & __a, struct pair * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::deallocate (_ZN9__gnu_cxx13new_allocatorISt4pairI5fdecljEE10deallocateEPS3_m, funcdef_no=10983, decl_uid=215104, cgraph_uid=7615, symbol_order=8410)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::deallocate (struct new_allocator * const this, struct pair * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseISt4pairI5fdecljESaIS2_EE12_Vector_implD2Ev, funcdef_no=10916, decl_uid=215488, cgraph_uid=7547, symbol_order=8342)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<std::pair<fdecl, unsigned int> >::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<std::pair<fdecl, unsigned int> >::~allocator (_ZNSaISt4pairI5fdecljEED2Ev, funcdef_no=10952, decl_uid=215221, cgraph_uid=7584, symbol_order=8379)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<std::pair<fdecl, unsigned int> >::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::~new_allocator (_ZN9__gnu_cxx13new_allocatorISt4pairI5fdecljEED2Ev, funcdef_no=10972, decl_uid=215150, cgraph_uid=7604, symbol_order=8399)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::~_Vector_base (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EED2Ev, funcdef_no=7836, decl_uid=171874, cgraph_uid=4468, symbol_order=5253)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.171764._M_end_of_storage;
  _2 = this->_M_impl.D.171764._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.171764._M_start;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_deallocate (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EE13_M_deallocateEPS5_m, funcdef_no=8803, decl_uid=171771, cgraph_uid=5435, symbol_order=6224)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_deallocate (struct _Vector_base * const this, struct vector * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::deallocate (_ZNSt16allocator_traitsISaISt6vectorISt4pairI5fdecljESaIS3_EEEE10deallocateERS6_PS5_m, funcdef_no=9656, decl_uid=171576, cgraph_uid=6288, symbol_order=7077)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::deallocate (struct allocator_type & __a, struct vector * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::deallocate (_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairI5fdecljESaIS4_EEE10deallocateEPS6_m, funcdef_no=10235, decl_uid=171427, cgraph_uid=6867, symbol_order=7660)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::deallocate (struct new_allocator * const this, struct vector * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EE12_Vector_implD2Ev, funcdef_no=6832, decl_uid=171811, cgraph_uid=3460, symbol_order=4237)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::~allocator (_ZNSaISt6vectorISt4pairI5fdecljESaIS2_EEED2Ev, funcdef_no=7833, decl_uid=171544, cgraph_uid=4465, symbol_order=5250)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::~new_allocator (_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairI5fdecljESaIS4_EEED2Ev, funcdef_no=8801, decl_uid=171473, cgraph_uid=5433, symbol_order=6222)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function insert_always_inline (_Z20insert_always_inlinev, funcdef_no=6902, decl_uid=204668, cgraph_uid=3534, symbol_order=4311)

Merging blocks 5 and 33
Removing basic block 24
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
;;
;; Loop 1
;;  header 33, latch 32
;;  depth 1, outer 0
;;  nodes: 33 32 31 5 4 3 30 29 28 6 27 23 26 25 24 18 17 14 16 15 12 13 11 10 8 9 7 22 21 20 19
;;
;; Loop 2
;;  header 28, latch 27
;;  depth 2, outer 1
;;  nodes: 28 27 23 26 25 24 18 17 14 16 15 12 13 11 10 8 9 7 22 21 20 19
;; 2 succs { 33 }
;; 3 succs { 35 4 }
;; 4 succs { 5 6 }
;; 5 succs { 32 }
;; 6 succs { 28 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 35 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 15 17 }
;; 15 succs { 35 16 }
;; 16 succs { 17 }
;; 17 succs { 35 18 }
;; 18 succs { 19 24 }
;; 19 succs { 35 20 }
;; 20 succs { 35 21 }
;; 21 succs { 35 22 }
;; 22 succs { 35 23 }
;; 23 succs { 35 27 }
;; 24 succs { 35 25 }
;; 25 succs { 35 26 }
;; 26 succs { 35 27 }
;; 27 succs { 28 }
;; 28 succs { 7 29 }
;; 29 succs { 35 30 }
;; 30 succs { 35 31 }
;; 31 succs { 32 }
;; 32 succs { 33 }
;; 33 succs { 3 34 }
;; 34 succs { 1 }
;; 35 succs { }
void insert_always_inline ()
{
  struct cgraph_node * D.257081;
  const char * D.257077;
  union tree_node * D.257076;
  union tree_node * D.257075;
  const char * D.257074;
  union tree_node * D.257073;
  union tree_node * D.257072;
  struct cgraph_node * D.257071;
  bool D.257070;
  struct cgraph_node * D.257069;
  union tree_node * callee_tree;
  struct cgraph_node * callee;
  struct cgraph_node * caller;
  availability avail;
  union tree_node * attr;
  struct cgraph_edge * e;
  struct basic_block_def * bb;
  bool always_inline;
  const char * name;
  struct cgraph_node * node;
  bool retval.2101;
  union tree_node * iftmp.2100;
  struct cgraph_node * iftmp.2099;
  bool retval.2098;

  <bb 2> :
  symtab.2097_1 = symtab;
  D.257069 = symbol_table::first_defined_function (symtab.2097_1);
  node = D.257069;
  goto <bb 33>; [INV]

  <bb 3> :
  _2 = node->D.97512.decl;
  D.257070 = gimple_has_body_p (_2);

  <bb 4> :
  _3 = D.257070;
  retval.2098 = ~_3;
  if (retval.2098 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  // predicted unlikely by continue predictor.
  avail = {CLOBBER};
  goto <bb 32>; [INV]

  <bb 6> :
  e = node->callees;
  goto <bb 28>; [INV]

  <bb 7> :
  _4 = e->caller;
  _5 = _4->inlined_to;
  if (_5 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _6 = e->caller;
  iftmp.2099 = _6->inlined_to;
  goto <bb 10>; [INV]

  <bb 9> :
  iftmp.2099 = e->caller;

  <bb 10> :
  caller = iftmp.2099;
  _7 = e->callee;
  D.257071 = cgraph_node::ultimate_alias_target (_7, &avail, caller);

  <bb 11> :
  callee = D.257071;
  if (callee != 0B)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _8 = callee->D.97512.decl;
  iftmp.2100 = _8->function_decl.function_specific_optimization;
  goto <bb 14>; [INV]

  <bb 13> :
  iftmp.2100 = 0B;

  <bb 14> :
  callee_tree = iftmp.2100;
  _9 = callee->D.97512.decl;
  _10 = _9->decl_common.attributes;
  if (_10 != 0B)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  _11 = callee->D.97512.decl;
  _12 = _11->decl_common.attributes;
  D.257072 = get_attribute_name (_12);

  <bb 16> :
  attr = D.257072;

  <bb 17> :
  _13 = callee->D.97512.decl;
  _14 = _13->decl_common.attributes;
  D.257073 = lookup_attribute ("noinline", _14);

  <bb 18> :
  _15 = D.257073;
  retval.2101 = _15 == 0B;
  if (retval.2101 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 19> :
  _16 = callee->D.97512.decl;
  D.257074 = get_name (_16);

  <bb 20> :
  _17 = D.257074;
  stderr.2102_18 = stderr;
  fprintf (stderr.2102_18, "=======node_fun:%s=========\n", _17);

  <bb 21> :
  _19 = callee->D.97512.decl;
  _20 = _19->decl_common.attributes;
  D.257075 = get_identifier_with_length ("noinline", 8);

  <bb 22> :
  _21 = D.257075;
  _22 = callee->D.97512.decl;
  D.257076 = tree_cons (_21, 0B, _20);

  <bb 23> :
  _23 = D.257076;
  _22->decl_common.attributes = _23;
  _24 = callee->D.97512.decl;
  _24->function_decl.disregard_inline_limits = 1;
  _25 = callee->D.97512.decl;
  _26 = _25->decl_common.attributes;
  debug_tree (_26);
  goto <bb 27>; [INV]

  <bb 24> :
  _27 = callee->D.97512.decl;
  D.257077 = get_name (_27);

  <bb 25> :
  _28 = D.257077;
  stderr.2103_29 = stderr;
  fprintf (stderr.2103_29, "=======node_fun:%s=========\n", _28);

  <bb 26> :
  _30 = callee->D.97512.decl;
  _31 = _30->decl_common.attributes;
  debug_tree (_31);

  <bb 27> :
  e = e->next_callee;

  <bb 28> :
  if (e != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 29> :
  _32 = node->D.97512.decl;
  _33 = _32->function_decl.f;
  push_cfun (_33);

  <bb 30> :
  pop_cfun ();

  <bb 31> :
  avail = {CLOBBER};

  <bb 32> :
  symtab.2104_34 = symtab;
  D.257081 = symbol_table::next_defined_function (symtab.2104_34, node);
  node = D.257081;

  <bb 33> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 34> :
  return;

  <bb 35> :
<L23>:
  avail = {CLOBBER};
  resx 1

}



;; Function lookup_attribute (_ZL16lookup_attributePKcP9tree_node, funcdef_no=3026, decl_uid=110094, cgraph_uid=2128, symbol_order=2293)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
union tree_node * lookup_attribute (const char * attr_name, union tree_node * list)
{
  union tree_node * D.257086;
  size_t attr_len;
  union tree_node * D.257084;

  <bb 2> :
  if (list == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.257084 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  attr_len = strlen (attr_name);
  D.257086 = private_lookup_attribute (attr_name, attr_len, list);
  D.257084 = D.257086;

  <bb 5> :
<L2>:
  return D.257084;

}



;; Function test_always (_ZL11test_alwaysv, funcdef_no=6903, decl_uid=204726, cgraph_uid=3535, symbol_order=4317)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int test_always ()
{
  int D.257087;

  <bb 2> :
  insert_always_inline ();
  D.257087 = 0;

  <bb 3> :
<L0>:
  return D.257087;

}



;; Function make_pass_ipa_always (_Z20make_pass_ipa_alwaysPN3gcc7contextE, funcdef_no=6913, decl_uid=204797, cgraph_uid=3545, symbol_order=4327)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { }
struct ipa_opt_pass_d * make_pass_ipa_always (struct context * ctxt)
{
  void * D.257091;
  void * D.204799;
  struct ipa_opt_pass_d * D.257089;

  <bb 2> :
  D.257091 = operator new (160);
  D.204799 = D.257091;
  {anonymous}::pass_ipa_always::pass_ipa_always (D.204799, ctxt);

  <bb 3> :
  D.257089 = D.204799;

  <bb 4> :
<L0>:
  return D.257089;

  <bb 5> :
<L1>:
  operator delete (D.204799, 160);
  resx 1

}



;; Function {anonymous}::pass_ipa_always::pass_ipa_always (_ZN12_GLOBAL__N_115pass_ipa_alwaysC2EPN3gcc7contextE, funcdef_no=6909, decl_uid=204757, cgraph_uid=3541, symbol_order=4323)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_always::pass_ipa_always (struct pass_ipa_always * const this, struct context * ctxt)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.204760;
  ipa_opt_pass_d::ipa_opt_pass_d (_1, &inline_pass_data, ctxt, 0B, 0B, 0B, 0B, 0B, 0B, 0, 0B, 0B);
  _2 = &_ZTVN12_GLOBAL__N_115pass_ipa_alwaysE + 16;
  this->D.204760.D.88937._vptr.opt_pass = _2;
  return;

}



;; Function {anonymous}::pass_ipa_always::execute (_ZN12_GLOBAL__N_115pass_ipa_always7executeEP8function, funcdef_no=6911, decl_uid=204737, cgraph_uid=3543, symbol_order=4325)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int {anonymous}::pass_ipa_always::execute (struct pass_ipa_always * const this, struct function * D.204735)
{
  int D.257095;
  unsigned int D.257093;

  <bb 2> :
  D.257095 = test_always ();
  _1 = D.257095;
  D.257093 = (unsigned int) _1;

  <bb 3> :
<L0>:
  return D.257093;

}



;; Function {anonymous}::pass_ipa_always::clone (_ZN12_GLOBAL__N_115pass_ipa_always5cloneEv, funcdef_no=6912, decl_uid=204740, cgraph_uid=3544, symbol_order=4326)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pass_ipa_always * {anonymous}::pass_ipa_always::clone (struct pass_ipa_always * const this)
{
  struct pass_ipa_always * D.257096;

  <bb 2> :
  D.257096 = this;

  <bb 3> :
<L0>:
  return D.257096;

}



;; Function {anonymous}::pass_ipa_always::~pass_ipa_always (_ZN12_GLOBAL__N_115pass_ipa_alwaysD0Ev, funcdef_no=10991, decl_uid=204745, cgraph_uid=7623, symbol_order=8420)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_always::~pass_ipa_always (struct pass_ipa_always * const this)
{
  <bb 2> :
  {anonymous}::pass_ipa_always::~pass_ipa_always (this);
  operator delete (this, 160);
  return;

}



;; Function {anonymous}::pass_ipa_always::~pass_ipa_always (_ZN12_GLOBAL__N_115pass_ipa_alwaysD2Ev, funcdef_no=10989, decl_uid=204751, cgraph_uid=7621, symbol_order=8418)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_always::~pass_ipa_always (struct pass_ipa_always * const this)
{
  <bb 2> :
  _1 = &_ZTVN12_GLOBAL__N_115pass_ipa_alwaysE + 16;
  this->D.204760.D.88937._vptr.opt_pass = _1;
  _2 = &this->D.204760;
  ipa_opt_pass_d::~ipa_opt_pass_d (_2);
  *this = {CLOBBER};
  return;

}



;; Function ipa_opt_pass_d::~ipa_opt_pass_d (_ZN14ipa_opt_pass_dD2Ev, funcdef_no=6906, decl_uid=88908, cgraph_uid=3537, symbol_order=4319)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ipa_opt_pass_d::~ipa_opt_pass_d (struct ipa_opt_pass_d * const this)
{
  <bb 2> :
  _1 = &_ZTV14ipa_opt_pass_d + 16;
  this->D.88937._vptr.opt_pass = _1;
  _2 = &this->D.88937;
  opt_pass::~opt_pass (_2);
  *this = {CLOBBER};
  return;

}



;; Function ipa_opt_pass_d::~ipa_opt_pass_d (_ZN14ipa_opt_pass_dD0Ev, funcdef_no=6908, decl_uid=88902, cgraph_uid=3539, symbol_order=4321)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ipa_opt_pass_d::~ipa_opt_pass_d (struct ipa_opt_pass_d * const this)
{
  <bb 2> :
  ipa_opt_pass_d::~ipa_opt_pass_d (this);
  operator delete (this, 160);
  return;

}



;; Function opt_pass::~opt_pass (_ZN8opt_passD2Ev, funcdef_no=1884, decl_uid=88726, cgraph_uid=1023, symbol_order=1183)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void opt_pass::~opt_pass (struct opt_pass * const this)
{
  <bb 2> :
  _1 = &_ZTV8opt_pass + 16;
  this->_vptr.opt_pass = _1;
  *this = {CLOBBER};
  return;

}



;; Function opt_pass::~opt_pass (_ZN8opt_passD0Ev, funcdef_no=1886, decl_uid=88720, cgraph_uid=1025, symbol_order=1185)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void opt_pass::~opt_pass (struct opt_pass * const this)
{
  <bb 2> :
  opt_pass::~opt_pass (this);
  operator delete (this, 88);
  return;

}



;; Function ipa_opt_pass_d::ipa_opt_pass_d (_ZN14ipa_opt_pass_dC2ERK9pass_dataPN3gcc7contextEPFvvES7_S7_S7_S7_PFvP11cgraph_nodePP6gimpleEjPFjS9_EPFvP12varpool_nodeE, funcdef_no=1894, decl_uid=88924, cgraph_uid=1033, symbol_order=1193)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ipa_opt_pass_d::ipa_opt_pass_d (struct ipa_opt_pass_d * const this, const struct pass_data & data, struct context * ctxt, void (*<T6a3>) (void) generate_summary, void (*<T6a3>) (void) write_summary, void (*<T6a3>) (void) read_summary, void (*<T6a3>) (void) write_optimization_summary, void (*<T6a3>) (void) read_optimization_summary, void (*<T57cc>) (struct cgraph_node *, struct gimple * *) stmt_fixup, unsigned int function_transform_todo_flags_start, unsigned int (*<T57ce>) (struct cgraph_node *) function_transform, void (*<T57d1>) (struct varpool_node *) variable_transform)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.88937;
  opt_pass::opt_pass (_1, data, ctxt);
  _2 = &_ZTV14ipa_opt_pass_d + 16;
  this->D.88937._vptr.opt_pass = _2;
  this->generate_summary = generate_summary;
  this->write_summary = write_summary;
  this->read_summary = read_summary;
  this->write_optimization_summary = write_optimization_summary;
  this->read_optimization_summary = read_optimization_summary;
  this->stmt_fixup = stmt_fixup;
  this->function_transform_todo_flags_start = function_transform_todo_flags_start;
  this->function_transform = function_transform;
  this->variable_transform = variable_transform;
  return;

}



;; Function execute_detect (_ZL14execute_detectv, funcdef_no=6914, decl_uid=204818, cgraph_uid=3546, symbol_order=4328)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int execute_detect ()
{
  int D.257098;

  <bb 2> :
  detect ();
  D.257098 = 0;

  <bb 3> :
<L0>:
  return D.257098;

}



;; Function make_pass_detect (_Z16make_pass_detectPN3gcc7contextE, funcdef_no=6920, decl_uid=89596, cgraph_uid=3552, symbol_order=4334)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { }
struct ipa_opt_pass_d * make_pass_detect (struct context * ctxt)
{
  void * D.257102;
  void * D.204863;
  struct ipa_opt_pass_d * D.257100;

  <bb 2> :
  D.257102 = operator new (160);
  D.204863 = D.257102;
  {anonymous}::pass_ipa_detect::pass_ipa_detect (D.204863, ctxt);

  <bb 3> :
  D.257100 = D.204863;

  <bb 4> :
<L0>:
  return D.257100;

  <bb 5> :
<L1>:
  operator delete (D.204863, 160);
  resx 1

}



;; Function {anonymous}::pass_ipa_detect::pass_ipa_detect (_ZN12_GLOBAL__N_115pass_ipa_detectC2EPN3gcc7contextE, funcdef_no=6916, decl_uid=204848, cgraph_uid=3548, symbol_order=4330)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_detect::pass_ipa_detect (struct pass_ipa_detect * const this, struct context * ctxt)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.204851;
  ipa_opt_pass_d::ipa_opt_pass_d (_1, &detect_pass_data, ctxt, 0B, 0B, 0B, 0B, 0B, 0B, 0, 0B, 0B);
  _2 = &_ZTVN12_GLOBAL__N_115pass_ipa_detectE + 16;
  this->D.204851.D.88937._vptr.opt_pass = _2;
  return;

}



;; Function {anonymous}::pass_ipa_detect::execute (_ZN12_GLOBAL__N_115pass_ipa_detect7executeEP8function, funcdef_no=6918, decl_uid=204828, cgraph_uid=3550, symbol_order=4332)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int {anonymous}::pass_ipa_detect::execute (struct pass_ipa_detect * const this, struct function * D.204826)
{
  int D.257106;
  unsigned int D.257104;

  <bb 2> :
  D.257106 = execute_detect ();
  _1 = D.257106;
  D.257104 = (unsigned int) _1;

  <bb 3> :
<L0>:
  return D.257104;

}



;; Function {anonymous}::pass_ipa_detect::clone (_ZN12_GLOBAL__N_115pass_ipa_detect5cloneEv, funcdef_no=6919, decl_uid=204831, cgraph_uid=3551, symbol_order=4333)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pass_ipa_detect * {anonymous}::pass_ipa_detect::clone (struct pass_ipa_detect * const this)
{
  struct pass_ipa_detect * D.257107;

  <bb 2> :
  D.257107 = this;

  <bb 3> :
<L0>:
  return D.257107;

}



;; Function {anonymous}::pass_ipa_detect::~pass_ipa_detect (_ZN12_GLOBAL__N_115pass_ipa_detectD0Ev, funcdef_no=10987, decl_uid=204836, cgraph_uid=7619, symbol_order=8415)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_detect::~pass_ipa_detect (struct pass_ipa_detect * const this)
{
  <bb 2> :
  {anonymous}::pass_ipa_detect::~pass_ipa_detect (this);
  operator delete (this, 160);
  return;

}



;; Function {anonymous}::pass_ipa_detect::~pass_ipa_detect (_ZN12_GLOBAL__N_115pass_ipa_detectD2Ev, funcdef_no=10985, decl_uid=204842, cgraph_uid=7617, symbol_order=8413)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_detect::~pass_ipa_detect (struct pass_ipa_detect * const this)
{
  <bb 2> :
  _1 = &_ZTVN12_GLOBAL__N_115pass_ipa_detectE + 16;
  this->D.204851.D.88937._vptr.opt_pass = _1;
  _2 = &this->D.204851;
  ipa_opt_pass_d::~ipa_opt_pass_d (_2);
  *this = {CLOBBER};
  return;

}



;; Function plugin_init (plugin_init, funcdef_no=6921, decl_uid=83835, cgraph_uid=3553, symbol_order=4335)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
int plugin_init (struct plugin_name_args * plugin_info, struct plugin_gcc_version * version)
{
  struct ipa_opt_pass_d * D.257116;
  struct ipa_opt_pass_d * D.257115;
  bool D.257114;
  int D.257112;
  bool retval.2105;

  <bb 2> :
  D.257114 = plugin_default_version_check (version, &gcc_version);
  _1 = D.257114;
  retval.2105 = ~_1;
  if (retval.2105 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __builtin_puts (&"incompatible gcc/plugin versions"[0]);
  D.257112 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = version->devphase;
  _3 = version->basever;
  _4 = plugin_info->full_name;
  stderr.2106_5 = stderr;
  fprintf (stderr.2106_5, "%s %s %s\n", _4, _3, _2);
  g.2107_6 = g;
  D.257115 = make_pass_ipa_always (g.2107_6);
  _7 = D.257115;
  inline_passinfo.pass = _7;
  inline_passinfo.reference_pass_name = "einline";
  inline_passinfo.ref_pass_instance_number = 0;
  inline_passinfo.pos_op = 1;
  g.2108_8 = g;
  D.257116 = make_pass_detect (g.2108_8);
  _9 = D.257116;
  detect_passinfo.pass = _9;
  detect_passinfo.reference_pass_name = "pta";
  detect_passinfo.ref_pass_instance_number = 0;
  detect_passinfo.pos_op = 0;
  register_callback ("static_analyzer", 2, 0B, &detect_passinfo);
  D.257112 = 0;

  <bb 5> :
<L2>:
  return D.257112;

}



;; Function __static_initialization_and_destruction_0 (_Z41__static_initialization_and_destruction_0ii, funcdef_no=11004, decl_uid=245823, cgraph_uid=7642, symbol_order=8484)

Removing basic block 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void __static_initialization_and_destruction_0 (int __initialize_p, int __priority)
{
  <bb 2> :
  if (__initialize_p == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  if (__priority == 65535)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::ios_base::Init::Init (&__ioinit);
  __cxxabiv1::__cxa_atexit (__dt_comp , &__ioinit, &__dso_handle);
  std::basic_ofstream<char>::basic_ofstream (&cfginfo, "cfginfo.txt", 16);
  __cxxabiv1::__cxa_atexit (__dt_comp , &cfginfo, &__dso_handle);
  ptb::ptb (&start1);
  ptb::ptb (&start2);
  ptb::ptb (&start3);
  ptb::ptb (&start4);
  ptb::ptb (&start5);
  ptb::ptb (&start6);
  ptb::ptb (&start7);
  ptb::ptb (&start8);
  ptb::ptb (&start9);
  std::vector<gimple*>::vector (&new_gimple_array);
  __cxxabiv1::__cxa_atexit (__dt_comp , &new_gimple_array, &__dso_handle);
  std::vector<tree_node*>::vector (&new_gimpletree_array);
  __cxxabiv1::__cxa_atexit (__dt_comp , &new_gimpletree_array, &__dso_handle);
  std::vector<basic_block_def*>::vector (&new_path_array);
  __cxxabiv1::__cxa_atexit (__dt_comp , &new_path_array, &__dso_handle);
  std::vector<tree_node*>::vector (&traceStack);
  __cxxabiv1::__cxa_atexit (__dt_comp , &traceStack, &__dso_handle);
  std::vector<tree_node*>::vector (&pathStack);
  __cxxabiv1::__cxa_atexit (__dt_comp , &pathStack, &__dso_handle);
  std::vector<basic_block_def*>::vector (&symbolicExecution);
  __cxxabiv1::__cxa_atexit (__dt_comp , &symbolicExecution, &__dso_handle);
  std::vector<basic_block_def*>::vector (&symbolicExecutionswitch);
  __cxxabiv1::__cxa_atexit (__dt_comp , &symbolicExecutionswitch, &__dso_handle);
  std::vector<breakpoint>::vector (&vbreakpoint);
  __cxxabiv1::__cxa_atexit (__dt_comp , &vbreakpoint, &__dso_handle);
  std::vector<return_type>::vector (&global_ret_type_array);
  __cxxabiv1::__cxa_atexit (__dt_comp , &global_ret_type_array, &__dso_handle);
  CStack::CStack (&stmtStack);
  __cxxabiv1::__cxa_atexit (__dt_comp , &stmtStack, &__dso_handle);
  CstmtStack::CstmtStack (&stmtStack2);
  __cxxabiv1::__cxa_atexit (__dt_comp , &stmtStack2, &__dso_handle);

  <bb 5> :
  return;

}



;; Function CstmtStack::~CstmtStack (_ZN10CstmtStackD2Ev, funcdef_no=11009, decl_uid=245851, cgraph_uid=7640, symbol_order=8482)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void CstmtStack::~CstmtStack (struct CstmtStack * const this)
{
  <bb 2> :
  _1 = &this->D.183205;
  std::stack<gimple*>::~stack (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::stack<gimple*>::~stack (_ZNSt5stackIP6gimpleSt5dequeIS1_SaIS1_EEED2Ev, funcdef_no=6233, decl_uid=186896, cgraph_uid=3208, symbol_order=3969)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::stack<gimple*>::~stack (struct stack * const this)
{
  <bb 2> :
  _1 = &this->c;
  std::deque<gimple*, std::allocator<gimple*> >::~deque (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::deque<gimple*, std::allocator<gimple*> >::~deque (_ZNSt5dequeIP6gimpleSaIS1_EED2Ev, funcdef_no=7594, decl_uid=183025, cgraph_uid=4226, symbol_order=5011)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::deque<gimple*, std::allocator<gimple*> >::~deque (struct deque * const this)
{
  struct iterator D.210352;
  struct iterator D.210353;

  <bb 2> :
  _1 = &this->D.183028;
  _2 = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_1);
  D.210353 = std::deque<gimple*, std::allocator<gimple*> >::end (this); [return slot optimization]
  D.210352 = std::deque<gimple*, std::allocator<gimple*> >::begin (this); [return slot optimization]
  std::deque<gimple*, std::allocator<gimple*> >::_M_destroy_data (this, &D.210352, &D.210353, _2);
  D.210352 = {CLOBBER};
  D.210353 = {CLOBBER};
  _3 = &this->D.183028;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::~_Deque_base (_3);
  *this = {CLOBBER};
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=8418, decl_uid=182267, cgraph_uid=5050, symbol_order=5839)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (struct _Deque_base * const this)
{
  struct _Tp_alloc_type & D.257123;

  <bb 2> :
  D.257123 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.257123;

}



;; Function std::deque<gimple*, std::allocator<gimple*> >::end (_ZNSt5dequeIP6gimpleSaIS1_EE3endEv, funcdef_no=8417, decl_uid=182611, cgraph_uid=5049, symbol_order=5838)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::deque<gimple*, std::allocator<gimple*> >::end (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.183028._M_impl.D.182422._M_finish;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (_ZNSt15_Deque_iteratorIP6gimpleRS1_PS1_EC2ERKS4_, funcdef_no=9186, decl_uid=182236, cgraph_uid=5818, symbol_order=6607)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (struct _Deque_iterator * const this, const struct _Deque_iterator & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_cur;
  this->_M_cur = _1;
  _2 = __x->_M_first;
  this->_M_first = _2;
  _3 = __x->_M_last;
  this->_M_last = _3;
  _4 = __x->_M_node;
  this->_M_node = _4;
  return;

}



;; Function std::deque<gimple*, std::allocator<gimple*> >::begin (_ZNSt5dequeIP6gimpleSaIS1_EE5beginEv, funcdef_no=8416, decl_uid=182607, cgraph_uid=5048, symbol_order=5837)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::deque<gimple*, std::allocator<gimple*> >::begin (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.183028._M_impl.D.182422._M_start;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::deque<gimple*, std::allocator<gimple*> >::_M_destroy_data (_ZNSt5dequeIP6gimpleSaIS1_EE15_M_destroy_dataESt15_Deque_iteratorIS1_RS1_PS1_ES7_RKS2_, funcdef_no=8419, decl_uid=182829, cgraph_uid=5051, symbol_order=5840)

Removing basic block 3
Removing basic block 4
Removing basic block 6
Removing basic block 7
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void std::deque<gimple*, std::allocator<gimple*> >::_M_destroy_data (struct deque * const this, struct iterator & __first, struct iterator & __last, const struct allocator & D.220792)
{
  struct iterator D.220796;
  struct iterator D.220799;

  <bb 2> :

  <bb 3> :
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::~_Deque_base (_ZNSt11_Deque_baseIP6gimpleSaIS1_EED2Ev, funcdef_no=8414, decl_uid=182477, cgraph_uid=5046, symbol_order=5835)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::~_Deque_base (struct _Deque_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.182422._M_map;
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = this->_M_impl.D.182422._M_finish._M_node;
  _3 = _2 + 8;
  _4 = this->_M_impl.D.182422._M_start._M_node;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_destroy_nodes (this, _4, _3);
  _5 = this->_M_impl.D.182422._M_map_size;
  _6 = this->_M_impl.D.182422._M_map;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_map (this, _6, _5);

  <bb 4> :
  _7 = &this->_M_impl;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::~_Deque_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_destroy_nodes (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE16_M_destroy_nodesEPPS1_S5_, funcdef_no=9183, decl_uid=182292, cgraph_uid=5815, symbol_order=6604)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_destroy_nodes (struct _Deque_base * const this, struct gimple * * * __nstart, struct gimple * * * __nfinish)
{
  struct gimple * * * __n;

  <bb 2> :
  __n = __nstart;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = *__n;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_node (this, _1);
  __n = __n + 8;

  <bb 4> :
  if (__n < __nfinish)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_node (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE18_M_deallocate_nodeEPS1_, funcdef_no=9899, decl_uid=182275, cgraph_uid=6531, symbol_order=7324)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_node (struct _Deque_base * const this, struct gimple * * __p)
{
  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = &this->_M_impl;
  std::allocator_traits<std::allocator<gimple*> >::deallocate (_2, __p, _1);
  return;

}



;; Function std::__deque_buf_size (_ZSt16__deque_buf_sizem, funcdef_no=5338, decl_uid=156256, cgraph_uid=2732, symbol_order=2922)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
size_t std::__deque_buf_size (size_t __size)
{
  size_t iftmp.2109;
  size_t D.257137;

  <bb 2> :
  if (__size <= 511)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.2109 = 512 / __size;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2109 = 1;

  <bb 5> :
  D.257137 = iftmp.2109;

  <bb 6> :
<L3>:
  return D.257137;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_map (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE17_M_deallocate_mapEPPS1_m, funcdef_no=9184, decl_uid=182281, cgraph_uid=5816, symbol_order=6605)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_map (struct _Deque_base * const this, struct gimple * * * __p, size_t __n)
{
  struct _Map_alloc_type __map_alloc;

  <bb 2> :
  __map_alloc = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_map_allocator (this); [return slot optimization]
  std::allocator_traits<std::allocator<gimple**> >::deallocate (&__map_alloc, __p, __n);
  std::allocator<gimple**>::~allocator (&__map_alloc);
  __map_alloc = {CLOBBER};
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_map_allocator (_ZNKSt11_Deque_baseIP6gimpleSaIS1_EE20_M_get_map_allocatorEv, funcdef_no=9900, decl_uid=182271, cgraph_uid=6532, symbol_order=7325)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Map_alloc_type std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_map_allocator (const struct _Deque_base * const this)
{
  <bb 2> :
  _1 = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (this);
  std::allocator<gimple**>::allocator<gimple*> (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_ZNKSt11_Deque_baseIP6gimpleSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=10424, decl_uid=182269, cgraph_uid=7056, symbol_order=7849)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (const struct _Deque_base * const this)
{
  const struct _Tp_alloc_type & D.257145;

  <bb 2> :
  D.257145 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.257145;

}



;; Function std::allocator<gimple**>::allocator<gimple*> (_ZNSaIPP6gimpleEC2IS0_EERKSaIT_E, funcdef_no=10426, decl_uid=239345, cgraph_uid=7058, symbol_order=7851)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<gimple**>::allocator<gimple*> (struct allocator * const this, const struct allocator & D.239347)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple**>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple**>::new_allocator (_ZN9__gnu_cxx13new_allocatorIPP6gimpleEC2Ev, funcdef_no=10768, decl_uid=181937, cgraph_uid=7400, symbol_order=8195)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple**>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::allocator_traits<std::allocator<gimple**> >::deallocate (_ZNSt16allocator_traitsISaIPP6gimpleEE10deallocateERS3_PS2_m, funcdef_no=9904, decl_uid=231782, cgraph_uid=6536, symbol_order=7329)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<gimple**> >::deallocate (struct allocator_type & __a, struct gimple * * * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple**>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple**>::deallocate (_ZN9__gnu_cxx13new_allocatorIPP6gimpleE10deallocateEPS3_m, funcdef_no=10431, decl_uid=181896, cgraph_uid=7063, symbol_order=7856)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<gimple**>::deallocate (struct new_allocator * const this, struct gimple * * * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 8;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::allocator<gimple**>::~allocator (_ZNSaIPP6gimpleED2Ev, funcdef_no=9902, decl_uid=182013, cgraph_uid=6534, symbol_order=7327)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<gimple**>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple**>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple**>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIPP6gimpleED2Ev, funcdef_no=10429, decl_uid=181942, cgraph_uid=7061, symbol_order=7854)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple**>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::~_Deque_impl (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE11_Deque_implD2Ev, funcdef_no=8409, decl_uid=182909, cgraph_uid=5040, symbol_order=5829)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::~_Deque_impl (struct _Deque_impl * const this)
{
  <bb 2> :
  std::allocator<gimple*>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<gimple*>::~allocator (_ZNSaIP6gimpleED2Ev, funcdef_no=7537, decl_uid=181740, cgraph_uid=4169, symbol_order=4954)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<gimple*>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple*>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple*>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIP6gimpleED2Ev, funcdef_no=8351, decl_uid=181669, cgraph_uid=4983, symbol_order=5772)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple*>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function CStack::~CStack (_ZN6CStackD2Ev, funcdef_no=11006, decl_uid=245835, cgraph_uid=7637, symbol_order=8479)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void CStack::~CStack (struct CStack * const this)
{
  <bb 2> :
  _1 = &this->D.181559;
  std::stack<tree_node*>::~stack (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::stack<tree_node*>::~stack (_ZNSt5stackIP9tree_nodeSt5dequeIS1_SaIS1_EEED2Ev, funcdef_no=6226, decl_uid=186690, cgraph_uid=3201, symbol_order=3961)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::stack<tree_node*>::~stack (struct stack * const this)
{
  <bb 2> :
  _1 = &this->c;
  std::deque<tree_node*, std::allocator<tree_node*> >::~deque (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::deque<tree_node*, std::allocator<tree_node*> >::~deque (_ZNSt5dequeIP9tree_nodeSaIS1_EED2Ev, funcdef_no=7585, decl_uid=181363, cgraph_uid=4217, symbol_order=5002)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::deque<tree_node*, std::allocator<tree_node*> >::~deque (struct deque * const this)
{
  struct iterator D.210328;
  struct iterator D.210329;

  <bb 2> :
  _1 = &this->D.181366;
  _2 = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_1);
  D.210329 = std::deque<tree_node*, std::allocator<tree_node*> >::end (this); [return slot optimization]
  D.210328 = std::deque<tree_node*, std::allocator<tree_node*> >::begin (this); [return slot optimization]
  std::deque<tree_node*, std::allocator<tree_node*> >::_M_destroy_data (this, &D.210328, &D.210329, _2);
  D.210328 = {CLOBBER};
  D.210329 = {CLOBBER};
  _3 = &this->D.181366;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::~_Deque_base (_3);
  *this = {CLOBBER};
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=8405, decl_uid=180572, cgraph_uid=5037, symbol_order=5826)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (struct _Deque_base * const this)
{
  struct _Tp_alloc_type & D.257150;

  <bb 2> :
  D.257150 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.257150;

}



;; Function std::deque<tree_node*, std::allocator<tree_node*> >::end (_ZNSt5dequeIP9tree_nodeSaIS1_EE3endEv, funcdef_no=8404, decl_uid=180920, cgraph_uid=5036, symbol_order=5825)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::deque<tree_node*, std::allocator<tree_node*> >::end (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.181366._M_impl.D.180727._M_finish;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (_ZNSt15_Deque_iteratorIP9tree_nodeRS1_PS1_EC2ERKS4_, funcdef_no=9176, decl_uid=180541, cgraph_uid=5808, symbol_order=6597)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (struct _Deque_iterator * const this, const struct _Deque_iterator & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_cur;
  this->_M_cur = _1;
  _2 = __x->_M_first;
  this->_M_first = _2;
  _3 = __x->_M_last;
  this->_M_last = _3;
  _4 = __x->_M_node;
  this->_M_node = _4;
  return;

}



;; Function std::deque<tree_node*, std::allocator<tree_node*> >::begin (_ZNSt5dequeIP9tree_nodeSaIS1_EE5beginEv, funcdef_no=8403, decl_uid=180916, cgraph_uid=5035, symbol_order=5824)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::deque<tree_node*, std::allocator<tree_node*> >::begin (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.181366._M_impl.D.180727._M_start;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::deque<tree_node*, std::allocator<tree_node*> >::_M_destroy_data (_ZNSt5dequeIP9tree_nodeSaIS1_EE15_M_destroy_dataESt15_Deque_iteratorIS1_RS1_PS1_ES7_RKS2_, funcdef_no=8406, decl_uid=181166, cgraph_uid=5038, symbol_order=5827)

Removing basic block 3
Removing basic block 4
Removing basic block 6
Removing basic block 7
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void std::deque<tree_node*, std::allocator<tree_node*> >::_M_destroy_data (struct deque * const this, struct iterator & __first, struct iterator & __last, const struct allocator & D.220739)
{
  struct iterator D.220743;
  struct iterator D.220746;

  <bb 2> :

  <bb 3> :
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::~_Deque_base (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EED2Ev, funcdef_no=8401, decl_uid=180782, cgraph_uid=5033, symbol_order=5822)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::~_Deque_base (struct _Deque_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.180727._M_map;
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = this->_M_impl.D.180727._M_finish._M_node;
  _3 = _2 + 8;
  _4 = this->_M_impl.D.180727._M_start._M_node;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_destroy_nodes (this, _4, _3);
  _5 = this->_M_impl.D.180727._M_map_size;
  _6 = this->_M_impl.D.180727._M_map;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_map (this, _6, _5);

  <bb 4> :
  _7 = &this->_M_impl;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::~_Deque_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_destroy_nodes (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE16_M_destroy_nodesEPPS1_S5_, funcdef_no=9173, decl_uid=180597, cgraph_uid=5805, symbol_order=6594)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_destroy_nodes (struct _Deque_base * const this, union tree_node * * * __nstart, union tree_node * * * __nfinish)
{
  union tree_node * * * __n;

  <bb 2> :
  __n = __nstart;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = *__n;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_node (this, _1);
  __n = __n + 8;

  <bb 4> :
  if (__n < __nfinish)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_node (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE18_M_deallocate_nodeEPS1_, funcdef_no=9886, decl_uid=180580, cgraph_uid=6518, symbol_order=7311)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_node (struct _Deque_base * const this, union tree_node * * __p)
{
  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = &this->_M_impl;
  std::allocator_traits<std::allocator<tree_node*> >::deallocate (_2, __p, _1);
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_map (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE17_M_deallocate_mapEPPS1_m, funcdef_no=9174, decl_uid=180586, cgraph_uid=5806, symbol_order=6595)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_map (struct _Deque_base * const this, union tree_node * * * __p, size_t __n)
{
  struct _Map_alloc_type __map_alloc;

  <bb 2> :
  __map_alloc = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_map_allocator (this); [return slot optimization]
  std::allocator_traits<std::allocator<tree_node**> >::deallocate (&__map_alloc, __p, __n);
  std::allocator<tree_node**>::~allocator (&__map_alloc);
  __map_alloc = {CLOBBER};
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_map_allocator (_ZNKSt11_Deque_baseIP9tree_nodeSaIS1_EE20_M_get_map_allocatorEv, funcdef_no=9887, decl_uid=180576, cgraph_uid=6519, symbol_order=7312)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Map_alloc_type std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_map_allocator (const struct _Deque_base * const this)
{
  <bb 2> :
  _1 = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (this);
  std::allocator<tree_node**>::allocator<tree_node*> (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_ZNKSt11_Deque_baseIP9tree_nodeSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=10410, decl_uid=180574, cgraph_uid=7042, symbol_order=7835)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (const struct _Deque_base * const this)
{
  const struct _Tp_alloc_type & D.257166;

  <bb 2> :
  D.257166 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.257166;

}



;; Function std::allocator<tree_node**>::allocator<tree_node*> (_ZNSaIPP9tree_nodeEC2IS0_EERKSaIT_E, funcdef_no=10412, decl_uid=239298, cgraph_uid=7044, symbol_order=7837)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<tree_node**>::allocator<tree_node*> (struct allocator * const this, const struct allocator & D.239300)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node**>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node**>::new_allocator (_ZN9__gnu_cxx13new_allocatorIPP9tree_nodeEC2Ev, funcdef_no=10763, decl_uid=180224, cgraph_uid=7395, symbol_order=8190)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node**>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::allocator_traits<std::allocator<tree_node**> >::deallocate (_ZNSt16allocator_traitsISaIPP9tree_nodeEE10deallocateERS3_PS2_m, funcdef_no=9891, decl_uid=231657, cgraph_uid=6523, symbol_order=7316)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<tree_node**> >::deallocate (struct allocator_type & __a, union tree_node * * * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node**>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node**>::deallocate (_ZN9__gnu_cxx13new_allocatorIPP9tree_nodeE10deallocateEPS3_m, funcdef_no=10417, decl_uid=180183, cgraph_uid=7049, symbol_order=7842)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<tree_node**>::deallocate (struct new_allocator * const this, union tree_node * * * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 8;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::allocator<tree_node**>::~allocator (_ZNSaIPP9tree_nodeED2Ev, funcdef_no=9889, decl_uid=180300, cgraph_uid=6521, symbol_order=7314)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<tree_node**>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node**>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node**>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIPP9tree_nodeED2Ev, funcdef_no=10415, decl_uid=180229, cgraph_uid=7047, symbol_order=7840)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node**>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::~_Deque_impl (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE11_Deque_implD2Ev, funcdef_no=8396, decl_uid=181247, cgraph_uid=5027, symbol_order=5816)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::~_Deque_impl (struct _Deque_impl * const this)
{
  <bb 2> :
  std::allocator<tree_node*>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<tree_node*>::~allocator (_ZNSaIP9tree_nodeED2Ev, funcdef_no=7546, decl_uid=180027, cgraph_uid=4178, symbol_order=4963)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<tree_node*>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node*>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeED2Ev, funcdef_no=8361, decl_uid=179956, cgraph_uid=4993, symbol_order=5782)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node*>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<breakpoint>::~vector (_ZNSt6vectorI10breakpointSaIS0_EED2Ev, funcdef_no=11018, decl_uid=186222, cgraph_uid=7650, symbol_order=8850)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<breakpoint>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.186225;
  _2 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_1);
  _3 = this->D.186225._M_impl.D.185570._M_finish;
  _4 = this->D.186225._M_impl.D.185570._M_start;
  std::_Destroy<breakpoint*, breakpoint> (_4, _3, _2);
  _5 = &this->D.186225;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::~_Vector_base (_ZNSt12_Vector_baseI10breakpointSaIS0_EED2Ev, funcdef_no=7567, decl_uid=185680, cgraph_uid=4199, symbol_order=4984)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.185570._M_end_of_storage;
  _2 = this->_M_impl.D.185570._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 40;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.185570._M_start;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI10breakpointSaIS0_EE12_Vector_implD2Ev, funcdef_no=6207, decl_uid=185617, cgraph_uid=3181, symbol_order=3939)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<breakpoint>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<breakpoint>::~allocator (_ZNSaI10breakpointED2Ev, funcdef_no=7564, decl_uid=185350, cgraph_uid=4196, symbol_order=4981)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<breakpoint>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<breakpoint>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI10breakpointED2Ev, funcdef_no=8381, decl_uid=185279, cgraph_uid=5013, symbol_order=5802)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<breakpoint>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<tree_node*>::~vector (_ZNSt6vectorIP9tree_nodeSaIS1_EED2Ev, funcdef_no=11015, decl_uid=184884, cgraph_uid=7647, symbol_order=8847)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<tree_node*>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.184887;
  _2 = std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_1);
  _3 = this->D.184887._M_impl.D.184243._M_finish;
  _4 = this->D.184887._M_impl.D.184243._M_start;
  std::_Destroy<tree_node**, tree_node*> (_4, _3, _2);
  _5 = &this->D.184887;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<tree_node**, tree_node*> (_ZSt8_DestroyIPP9tree_nodeS1_EvT_S3_RSaIT0_E, funcdef_no=9370, decl_uid=222802, cgraph_uid=6002, symbol_order=6791)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<tree_node**, tree_node*> (union tree_node * * __first, union tree_node * * __last, struct allocator & D.234065)
{
  <bb 2> :
  std::_Destroy<tree_node**> (__first, __last);
  return;

}



;; Function std::_Destroy<tree_node**> (_ZSt8_DestroyIPP9tree_nodeEvT_S3_, funcdef_no=10031, decl_uid=234067, cgraph_uid=6663, symbol_order=7456)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<tree_node**> (union tree_node * * __first, union tree_node * * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<tree_node**> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<tree_node**> (_ZNSt12_Destroy_auxILb1EE9__destroyIPP9tree_nodeEEvT_S5_, funcdef_no=10541, decl_uid=239963, cgraph_uid=7173, symbol_order=7966)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<tree_node**> (union tree_node * * D.243338, union tree_node * * D.243339)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::~_Vector_base (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EED2Ev, funcdef_no=7549, decl_uid=184353, cgraph_uid=4181, symbol_order=4966)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.184243._M_end_of_storage;
  _2 = this->_M_impl.D.184243._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.184243._M_start;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE12_Vector_implD2Ev, funcdef_no=6187, decl_uid=184290, cgraph_uid=3161, symbol_order=3913)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<tree_node*>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<gimple*>::~vector (_ZNSt6vectorIP6gimpleSaIS1_EED2Ev, funcdef_no=11012, decl_uid=183970, cgraph_uid=7644, symbol_order=8844)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<gimple*>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.183973;
  _2 = std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_1);
  _3 = this->D.183973._M_impl.D.183329._M_finish;
  _4 = this->D.183973._M_impl.D.183329._M_start;
  std::_Destroy<gimple**, gimple*> (_4, _3, _2);
  _5 = &this->D.183973;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<gimple**, gimple*> (_ZSt8_DestroyIPP6gimpleS1_EvT_S3_RSaIT0_E, funcdef_no=9546, decl_uid=227082, cgraph_uid=6178, symbol_order=6967)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<gimple**, gimple*> (struct gimple * * __first, struct gimple * * __last, struct allocator & D.235439)
{
  <bb 2> :
  std::_Destroy<gimple**> (__first, __last);
  return;

}



;; Function std::_Destroy<gimple**> (_ZSt8_DestroyIPP6gimpleEvT_S3_, funcdef_no=10142, decl_uid=235441, cgraph_uid=6774, symbol_order=7567)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<gimple**> (struct gimple * * __first, struct gimple * * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<gimple**> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<gimple**> (_ZNSt12_Destroy_auxILb1EE9__destroyIPP6gimpleEEvT_S5_, funcdef_no=10603, decl_uid=240401, cgraph_uid=7235, symbol_order=8028)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<gimple**> (struct gimple * * D.243611, struct gimple * * D.243612)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::~_Vector_base (_ZNSt12_Vector_baseIP6gimpleSaIS1_EED2Ev, funcdef_no=7540, decl_uid=183439, cgraph_uid=4172, symbol_order=4957)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.183329._M_end_of_storage;
  _2 = this->_M_impl.D.183329._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.183329._M_start;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE12_Vector_implD2Ev, funcdef_no=6177, decl_uid=183376, cgraph_uid=3151, symbol_order=3902)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<gimple*>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<gimple*>::vector (_ZNSt6vectorIP6gimpleSaIS1_EEC2Ev, funcdef_no=6181, decl_uid=183965, cgraph_uid=3157, symbol_order=3908)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<gimple*>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.183973;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_base (_ZNSt12_Vector_baseIP6gimpleSaIS1_EEC2Ev, funcdef_no=6179, decl_uid=183434, cgraph_uid=3154, symbol_order=3905)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE12_Vector_implC2Ev, funcdef_no=7534, decl_uid=183326, cgraph_uid=4166, symbol_order=4951)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<gimple*>::allocator (this);
  _1 = &this->D.183329;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<gimple*>::allocator (_ZNSaIP6gimpleEC2Ev, funcdef_no=8345, decl_uid=181735, cgraph_uid=4977, symbol_order=5766)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<gimple*>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple*>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple*>::new_allocator (_ZN9__gnu_cxx13new_allocatorIP6gimpleEC2Ev, funcdef_no=9150, decl_uid=181664, cgraph_uid=5782, symbol_order=6571)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple*>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE17_Vector_impl_dataC2Ev, funcdef_no=8348, decl_uid=183276, cgraph_uid=4980, symbol_order=5769)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::vector<tree_node*>::vector (_ZNSt6vectorIP9tree_nodeSaIS1_EEC2Ev, funcdef_no=6191, decl_uid=184879, cgraph_uid=3167, symbol_order=3919)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<tree_node*>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.184887;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_base (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EEC2Ev, funcdef_no=6189, decl_uid=184348, cgraph_uid=3164, symbol_order=3916)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE12_Vector_implC2Ev, funcdef_no=7543, decl_uid=184240, cgraph_uid=4175, symbol_order=4960)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<tree_node*>::allocator (this);
  _1 = &this->D.184243;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<tree_node*>::allocator (_ZNSaIP9tree_nodeEC2Ev, funcdef_no=8355, decl_uid=180022, cgraph_uid=4987, symbol_order=5776)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<tree_node*>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node*>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::new_allocator (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeEC2Ev, funcdef_no=9154, decl_uid=179951, cgraph_uid=5786, symbol_order=6575)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node*>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE17_Vector_impl_dataC2Ev, funcdef_no=8358, decl_uid=184190, cgraph_uid=4990, symbol_order=5779)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::vector<breakpoint>::vector (_ZNSt6vectorI10breakpointSaIS0_EEC2Ev, funcdef_no=6211, decl_uid=186217, cgraph_uid=3187, symbol_order=3945)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<breakpoint>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.186225;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_base (_ZNSt12_Vector_baseI10breakpointSaIS0_EEC2Ev, funcdef_no=6209, decl_uid=185675, cgraph_uid=3184, symbol_order=3942)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI10breakpointSaIS0_EE12_Vector_implC2Ev, funcdef_no=7561, decl_uid=185567, cgraph_uid=4193, symbol_order=4978)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<breakpoint>::allocator (this);
  _1 = &this->D.185570;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<breakpoint>::allocator (_ZNSaI10breakpointEC2Ev, funcdef_no=8375, decl_uid=185345, cgraph_uid=5007, symbol_order=5796)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<breakpoint>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<breakpoint>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::new_allocator (_ZN9__gnu_cxx13new_allocatorI10breakpointEC2Ev, funcdef_no=9162, decl_uid=185274, cgraph_uid=5794, symbol_order=6583)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<breakpoint>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI10breakpointSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8378, decl_uid=185517, cgraph_uid=5010, symbol_order=5799)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function CStack::CStack (_ZN6CStackC2Ev, funcdef_no=6228, decl_uid=186697, cgraph_uid=3204, symbol_order=3964)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void CStack::CStack (struct CStack * const this)
{
  <bb 2> :
  _1 = &this->D.181559;
  std::stack<tree_node*>::stack<> (_1);
  return;

}



;; Function std::stack<tree_node*>::stack<> (_ZNSt5stackIP9tree_nodeSt5dequeIS1_SaIS1_EEEC2IS4_vEEv, funcdef_no=7582, decl_uid=186682, cgraph_uid=4214, symbol_order=4999)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::stack<tree_node*>::stack<> (struct stack * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->c = {};
  _1 = &this->c;
  std::deque<tree_node*, std::allocator<tree_node*> >::deque (_1);
  return;

}



;; Function std::deque<tree_node*, std::allocator<tree_node*> >::deque (_ZNSt5dequeIP9tree_nodeSaIS1_EEC2Ev, funcdef_no=7580, decl_uid=181358, cgraph_uid=4211, symbol_order=4996)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::deque<tree_node*, std::allocator<tree_node*> >::deque (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.181366;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_base (_1);
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_base (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EEC2Ev, funcdef_no=8398, decl_uid=180777, cgraph_uid=5030, symbol_order=5819)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_base (struct _Deque_base * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::_Deque_impl (_1);
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_initialize_map (this, 0);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::~_Deque_impl (_2);
  resx 1

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::_Deque_impl (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE11_Deque_implC2Ev, funcdef_no=9170, decl_uid=180724, cgraph_uid=5802, symbol_order=6591)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::_Deque_impl (struct _Deque_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<tree_node*>::allocator (this);
  _1 = &this->D.180727;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl_data::_Deque_impl_data (_1);
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl_data::_Deque_impl_data (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE16_Deque_impl_dataC2Ev, funcdef_no=9881, decl_uid=180652, cgraph_uid=6513, symbol_order=7306)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl_data::_Deque_impl_data (struct _Deque_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_map = 0B;
  this->_M_map_size = 0;
  _1 = &this->_M_start;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (_1);
  _2 = &this->_M_finish;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (_2);
  return;

}



;; Function std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (_ZNSt15_Deque_iteratorIP9tree_nodeRS1_PS1_EC2Ev, funcdef_no=10405, decl_uid=180554, cgraph_uid=7037, symbol_order=7830)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (struct _Deque_iterator * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_cur = 0B;
  this->_M_first = 0B;
  this->_M_last = 0B;
  this->_M_node = 0B;
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_initialize_map (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE17_M_initialize_mapEm, funcdef_no=9172, decl_uid=180590, cgraph_uid=5804, symbol_order=6593)

Removing basic block 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_initialize_map (struct _Deque_base * const this, size_t __num_elements)
{
  union tree_node * * * D.257172;
  union tree_node * * * __nfinish;
  union tree_node * * * __nstart;
  const size_t __num_nodes;
  const long unsigned int D.231615;
  const long unsigned int D.231616;

  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = __num_elements / _1;
  __num_nodes = _2 + 1;
  _3 = __num_nodes + 2;
  D.231616 = _3;
  D.231615 = 8;
  _4 = std::max<long unsigned int> (&D.231615, &D.231616);
  _5 = *_4;
  this->_M_impl.D.180727._M_map_size = _5;
  D.231615 = {CLOBBER};
  D.231616 = {CLOBBER};
  _6 = this->_M_impl.D.180727._M_map_size;
  D.257172 = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_map (this, _6);
  _7 = D.257172;
  this->_M_impl.D.180727._M_map = _7;
  _8 = this->_M_impl.D.180727._M_map;
  _9 = this->_M_impl.D.180727._M_map_size;
  _10 = _9 - __num_nodes;
  _11 = _10 / 2;
  _12 = _11 * 8;
  __nstart = _8 + _12;
  _13 = __num_nodes * 8;
  __nfinish = __nstart + _13;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_create_nodes (this, __nstart, __nfinish);

  <bb 3> :
  _17 = &this->_M_impl.D.180727._M_start;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_M_set_node (_17, __nstart);
  _18 = &this->_M_impl.D.180727._M_finish;
  _19 = __nfinish + 18446744073709551608;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_M_set_node (_18, _19);
  _20 = this->_M_impl.D.180727._M_start._M_first;
  this->_M_impl.D.180727._M_start._M_cur = _20;
  _21 = this->_M_impl.D.180727._M_finish._M_first;
  _22 = std::__deque_buf_size (8);
  _23 = __num_elements % _22;
  _24 = _23 * 8;
  _25 = _21 + _24;
  this->_M_impl.D.180727._M_finish._M_cur = _25;
  return;

  <bb 4> :
<L0>:
  eh_dispatch 3

  <bb 5> :
<L1>:
  _14 = __builtin_eh_pointer (3);
  __cxa_begin_catch (_14);
  _15 = this->_M_impl.D.180727._M_map_size;
  _16 = this->_M_impl.D.180727._M_map;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_map (this, _16, _15);
  this->_M_impl.D.180727._M_map = 0B;
  this->_M_impl.D.180727._M_map_size = 0;
  __cxa_rethrow ();

  <bb 6> :
<L2>:
  __cxa_end_catch ();
  resx 4

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_map (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE15_M_allocate_mapEm, funcdef_no=9883, decl_uid=180583, cgraph_uid=6515, symbol_order=7308)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 6 3 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
;; 6 succs { 7 }
;; 7 succs { }
union tree_node * * * std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_map (struct _Deque_base * const this, size_t __n)
{
  union tree_node * * * D.257178;
  struct _Map_alloc_type __map_alloc;
  union tree_node * * * D.257176;

  <bb 2> :
  __map_alloc = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_map_allocator (this); [return slot optimization]
  D.257178 = std::allocator_traits<std::allocator<tree_node**> >::allocate (&__map_alloc, __n);

  <bb 3> :
  D.257176 = D.257178;

  <bb 4> :
  std::allocator<tree_node**>::~allocator (&__map_alloc);
  __map_alloc = {CLOBBER};

  <bb 5> :
<L2>:
  return D.257176;

  <bb 6> :
<L3>:
  std::allocator<tree_node**>::~allocator (&__map_alloc);
  resx 2

  <bb 7> :
<L4>:
  __map_alloc = {CLOBBER};
  resx 1

}



;; Function std::allocator_traits<std::allocator<tree_node**> >::allocate (_ZNSt16allocator_traitsISaIPP9tree_nodeEE8allocateERS3_m, funcdef_no=10407, decl_uid=231650, cgraph_uid=7039, symbol_order=7832)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
union tree_node * * * std::allocator_traits<std::allocator<tree_node**> >::allocate (struct allocator_type & __a, size_type __n)
{
  union tree_node * * * D.257185;
  union tree_node * * * D.257183;

  <bb 2> :
  D.257185 = __gnu_cxx::new_allocator<tree_node**>::allocate (__a, __n, 0B);
  D.257183 = D.257185;

  <bb 3> :
<L0>:
  return D.257183;

}



;; Function __gnu_cxx::new_allocator<tree_node**>::allocate (_ZN9__gnu_cxx13new_allocatorIPP9tree_nodeE8allocateEmPKv, funcdef_no=10760, decl_uid=180179, cgraph_uid=7393, symbol_order=8188)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
union tree_node * * * __gnu_cxx::new_allocator<tree_node**>::allocate (struct new_allocator * const this, size_type __n, const void * D.244321)
{
  union tree_node * * * D.257196;
  union tree_node * * * D.257195;
  align_val_t __al;
  union tree_node * * * D.257193;
  bool retval.2110;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<tree_node**>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.2110 = _4 != 0;
  if (retval.2110 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 2305843009213693951)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 8;
  D.257196 = operator new (_6);
  D.257193 = D.257196;

  <bb 7> :
<L6>:
  return D.257193;

}



;; Function __gnu_cxx::new_allocator<tree_node**>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIPP9tree_nodeE11_M_max_sizeEv, funcdef_no=10761, decl_uid=180206, cgraph_uid=7392, symbol_order=8187)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<tree_node**>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.257197;

  <bb 2> :
  D.257197 = 1152921504606846975;

  <bb 3> :
<L0>:
  return D.257197;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_create_nodes (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE15_M_create_nodesEPPS1_S5_, funcdef_no=9884, decl_uid=180593, cgraph_uid=6516, symbol_order=7309)

Removing basic block 8
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 5, latch 4
;;  depth 1, outer 0
;;  nodes: 5 4 3
;; 2 succs { 5 }
;; 3 succs { 7 4 }
;; 4 succs { 5 }
;; 5 succs { 3 6 }
;; 6 succs { 1 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_create_nodes (struct _Deque_base * const this, union tree_node * * * __nstart, union tree_node * * * __nfinish)
{
  union tree_node * * D.257199;
  union tree_node * * * __cur;

  <bb 2> :
  __cur = __nstart;
  goto <bb 5>; [INV]

  <bb 3> :
  D.257199 = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_node (this);

  <bb 4> :
  _1 = D.257199;
  *__cur = _1;
  __cur = __cur + 8;

  <bb 5> :
  if (__cur < __nfinish)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  return;

  <bb 7> :
<L3>:
  eh_dispatch 1

  <bb 8> :
<L4>:
  _2 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_2);
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_destroy_nodes (this, __nstart, __cur);
  __cxa_rethrow ();

  <bb 9> :
<L5>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_node (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE16_M_allocate_nodeEv, funcdef_no=10408, decl_uid=180578, cgraph_uid=7040, symbol_order=7833)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_node (struct _Deque_base * const this)
{
  union tree_node * * D.257205;
  union tree_node * * D.257203;

  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = &this->_M_impl;
  D.257205 = std::allocator_traits<std::allocator<tree_node*> >::allocate (_2, _1);
  D.257203 = D.257205;

  <bb 3> :
<L0>:
  return D.257203;

}



;; Function std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_M_set_node (_ZNSt15_Deque_iteratorIP9tree_nodeRS1_PS1_E11_M_set_nodeEPS3_, funcdef_no=9885, decl_uid=180459, cgraph_uid=6517, symbol_order=7310)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_M_set_node (struct _Deque_iterator * const this, union tree_node * * * __new_node)
{
  <bb 2> :
  this->_M_node = __new_node;
  _1 = *__new_node;
  this->_M_first = _1;
  _2 = this->_M_first;
  _3 = std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_S_buffer_size ();
  _4 = _3 * 8;
  _5 = _2 + _4;
  this->_M_last = _5;
  return;

}



;; Function std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_S_buffer_size (_ZNSt15_Deque_iteratorIP9tree_nodeRS1_PS1_E14_S_buffer_sizeEv, funcdef_no=10409, decl_uid=180391, cgraph_uid=7041, symbol_order=7834)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_S_buffer_size ()
{
  size_t D.257206;

  <bb 2> :
  D.257206 = std::__deque_buf_size (8);

  <bb 3> :
<L0>:
  return D.257206;

}



;; Function CstmtStack::CstmtStack (_ZN10CstmtStackC2Ev, funcdef_no=6235, decl_uid=186903, cgraph_uid=3211, symbol_order=3972)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void CstmtStack::CstmtStack (struct CstmtStack * const this)
{
  <bb 2> :
  _1 = &this->D.183205;
  std::stack<gimple*>::stack<> (_1);
  return;

}



;; Function std::stack<gimple*>::stack<> (_ZNSt5stackIP6gimpleSt5dequeIS1_SaIS1_EEEC2IS4_vEEv, funcdef_no=7591, decl_uid=186888, cgraph_uid=4223, symbol_order=5008)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::stack<gimple*>::stack<> (struct stack * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->c = {};
  _1 = &this->c;
  std::deque<gimple*, std::allocator<gimple*> >::deque (_1);
  return;

}



;; Function std::deque<gimple*, std::allocator<gimple*> >::deque (_ZNSt5dequeIP6gimpleSaIS1_EEC2Ev, funcdef_no=7589, decl_uid=183020, cgraph_uid=4220, symbol_order=5005)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::deque<gimple*, std::allocator<gimple*> >::deque (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.183028;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_base (_1);
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_base (_ZNSt11_Deque_baseIP6gimpleSaIS1_EEC2Ev, funcdef_no=8411, decl_uid=182472, cgraph_uid=5043, symbol_order=5832)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_base (struct _Deque_base * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::_Deque_impl (_1);
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_initialize_map (this, 0);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::~_Deque_impl (_2);
  resx 1

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::_Deque_impl (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE11_Deque_implC2Ev, funcdef_no=9180, decl_uid=182419, cgraph_uid=5812, symbol_order=6601)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::_Deque_impl (struct _Deque_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<gimple*>::allocator (this);
  _1 = &this->D.182422;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl_data::_Deque_impl_data (_1);
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl_data::_Deque_impl_data (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE16_Deque_impl_dataC2Ev, funcdef_no=9894, decl_uid=182347, cgraph_uid=6526, symbol_order=7319)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl_data::_Deque_impl_data (struct _Deque_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_map = 0B;
  this->_M_map_size = 0;
  _1 = &this->_M_start;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (_1);
  _2 = &this->_M_finish;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (_2);
  return;

}



;; Function std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (_ZNSt15_Deque_iteratorIP6gimpleRS1_PS1_EC2Ev, funcdef_no=10419, decl_uid=182249, cgraph_uid=7051, symbol_order=7844)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (struct _Deque_iterator * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_cur = 0B;
  this->_M_first = 0B;
  this->_M_last = 0B;
  this->_M_node = 0B;
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_initialize_map (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE17_M_initialize_mapEm, funcdef_no=9182, decl_uid=182285, cgraph_uid=5814, symbol_order=6603)

Removing basic block 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_initialize_map (struct _Deque_base * const this, size_t __num_elements)
{
  struct gimple * * * D.257209;
  struct gimple * * * __nfinish;
  struct gimple * * * __nstart;
  const size_t __num_nodes;
  const long unsigned int D.231740;
  const long unsigned int D.231741;

  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = __num_elements / _1;
  __num_nodes = _2 + 1;
  _3 = __num_nodes + 2;
  D.231741 = _3;
  D.231740 = 8;
  _4 = std::max<long unsigned int> (&D.231740, &D.231741);
  _5 = *_4;
  this->_M_impl.D.182422._M_map_size = _5;
  D.231740 = {CLOBBER};
  D.231741 = {CLOBBER};
  _6 = this->_M_impl.D.182422._M_map_size;
  D.257209 = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_map (this, _6);
  _7 = D.257209;
  this->_M_impl.D.182422._M_map = _7;
  _8 = this->_M_impl.D.182422._M_map;
  _9 = this->_M_impl.D.182422._M_map_size;
  _10 = _9 - __num_nodes;
  _11 = _10 / 2;
  _12 = _11 * 8;
  __nstart = _8 + _12;
  _13 = __num_nodes * 8;
  __nfinish = __nstart + _13;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_create_nodes (this, __nstart, __nfinish);

  <bb 3> :
  _17 = &this->_M_impl.D.182422._M_start;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_M_set_node (_17, __nstart);
  _18 = &this->_M_impl.D.182422._M_finish;
  _19 = __nfinish + 18446744073709551608;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_M_set_node (_18, _19);
  _20 = this->_M_impl.D.182422._M_start._M_first;
  this->_M_impl.D.182422._M_start._M_cur = _20;
  _21 = this->_M_impl.D.182422._M_finish._M_first;
  _22 = std::__deque_buf_size (8);
  _23 = __num_elements % _22;
  _24 = _23 * 8;
  _25 = _21 + _24;
  this->_M_impl.D.182422._M_finish._M_cur = _25;
  return;

  <bb 4> :
<L0>:
  eh_dispatch 3

  <bb 5> :
<L1>:
  _14 = __builtin_eh_pointer (3);
  __cxa_begin_catch (_14);
  _15 = this->_M_impl.D.182422._M_map_size;
  _16 = this->_M_impl.D.182422._M_map;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_map (this, _16, _15);
  this->_M_impl.D.182422._M_map = 0B;
  this->_M_impl.D.182422._M_map_size = 0;
  __cxa_rethrow ();

  <bb 6> :
<L2>:
  __cxa_end_catch ();
  resx 4

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_map (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE15_M_allocate_mapEm, funcdef_no=9896, decl_uid=182278, cgraph_uid=6528, symbol_order=7321)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 6 3 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
;; 6 succs { 7 }
;; 7 succs { }
struct gimple * * * std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_map (struct _Deque_base * const this, size_t __n)
{
  struct gimple * * * D.257215;
  struct _Map_alloc_type __map_alloc;
  struct gimple * * * D.257213;

  <bb 2> :
  __map_alloc = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_map_allocator (this); [return slot optimization]
  D.257215 = std::allocator_traits<std::allocator<gimple**> >::allocate (&__map_alloc, __n);

  <bb 3> :
  D.257213 = D.257215;

  <bb 4> :
  std::allocator<gimple**>::~allocator (&__map_alloc);
  __map_alloc = {CLOBBER};

  <bb 5> :
<L2>:
  return D.257213;

  <bb 6> :
<L3>:
  std::allocator<gimple**>::~allocator (&__map_alloc);
  resx 2

  <bb 7> :
<L4>:
  __map_alloc = {CLOBBER};
  resx 1

}



;; Function std::allocator_traits<std::allocator<gimple**> >::allocate (_ZNSt16allocator_traitsISaIPP6gimpleEE8allocateERS3_m, funcdef_no=10421, decl_uid=231775, cgraph_uid=7053, symbol_order=7846)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct gimple * * * std::allocator_traits<std::allocator<gimple**> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct gimple * * * D.257222;
  struct gimple * * * D.257220;

  <bb 2> :
  D.257222 = __gnu_cxx::new_allocator<gimple**>::allocate (__a, __n, 0B);
  D.257220 = D.257222;

  <bb 3> :
<L0>:
  return D.257220;

}



;; Function __gnu_cxx::new_allocator<gimple**>::allocate (_ZN9__gnu_cxx13new_allocatorIPP6gimpleE8allocateEmPKv, funcdef_no=10765, decl_uid=181892, cgraph_uid=7398, symbol_order=8193)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct gimple * * * __gnu_cxx::new_allocator<gimple**>::allocate (struct new_allocator * const this, size_type __n, const void * D.244331)
{
  struct gimple * * * D.257233;
  struct gimple * * * D.257232;
  align_val_t __al;
  struct gimple * * * D.257230;
  bool retval.2111;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<gimple**>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.2111 = _4 != 0;
  if (retval.2111 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 2305843009213693951)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 8;
  D.257233 = operator new (_6);
  D.257230 = D.257233;

  <bb 7> :
<L6>:
  return D.257230;

}



;; Function __gnu_cxx::new_allocator<gimple**>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIPP6gimpleE11_M_max_sizeEv, funcdef_no=10766, decl_uid=181919, cgraph_uid=7397, symbol_order=8192)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<gimple**>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.257234;

  <bb 2> :
  D.257234 = 1152921504606846975;

  <bb 3> :
<L0>:
  return D.257234;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_create_nodes (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE15_M_create_nodesEPPS1_S5_, funcdef_no=9897, decl_uid=182288, cgraph_uid=6529, symbol_order=7322)

Removing basic block 8
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 5, latch 4
;;  depth 1, outer 0
;;  nodes: 5 4 3
;; 2 succs { 5 }
;; 3 succs { 7 4 }
;; 4 succs { 5 }
;; 5 succs { 3 6 }
;; 6 succs { 1 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_create_nodes (struct _Deque_base * const this, struct gimple * * * __nstart, struct gimple * * * __nfinish)
{
  struct gimple * * D.257236;
  struct gimple * * * __cur;

  <bb 2> :
  __cur = __nstart;
  goto <bb 5>; [INV]

  <bb 3> :
  D.257236 = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_node (this);

  <bb 4> :
  _1 = D.257236;
  *__cur = _1;
  __cur = __cur + 8;

  <bb 5> :
  if (__cur < __nfinish)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  return;

  <bb 7> :
<L3>:
  eh_dispatch 1

  <bb 8> :
<L4>:
  _2 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_2);
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_destroy_nodes (this, __nstart, __cur);
  __cxa_rethrow ();

  <bb 9> :
<L5>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_node (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE16_M_allocate_nodeEv, funcdef_no=10422, decl_uid=182273, cgraph_uid=7054, symbol_order=7847)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_node (struct _Deque_base * const this)
{
  struct gimple * * D.257242;
  struct gimple * * D.257240;

  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = &this->_M_impl;
  D.257242 = std::allocator_traits<std::allocator<gimple*> >::allocate (_2, _1);
  D.257240 = D.257242;

  <bb 3> :
<L0>:
  return D.257240;

}



;; Function std::_Deque_iterator<gimple*, gimple*&, gimple**>::_M_set_node (_ZNSt15_Deque_iteratorIP6gimpleRS1_PS1_E11_M_set_nodeEPS3_, funcdef_no=9898, decl_uid=182168, cgraph_uid=6530, symbol_order=7323)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<gimple*, gimple*&, gimple**>::_M_set_node (struct _Deque_iterator * const this, struct gimple * * * __new_node)
{
  <bb 2> :
  this->_M_node = __new_node;
  _1 = *__new_node;
  this->_M_first = _1;
  _2 = this->_M_first;
  _3 = std::_Deque_iterator<gimple*, gimple*&, gimple**>::_S_buffer_size ();
  _4 = _3 * 8;
  _5 = _2 + _4;
  this->_M_last = _5;
  return;

}



;; Function std::_Deque_iterator<gimple*, gimple*&, gimple**>::_S_buffer_size (_ZNSt15_Deque_iteratorIP6gimpleRS1_PS1_E14_S_buffer_sizeEv, funcdef_no=10423, decl_uid=182102, cgraph_uid=7055, symbol_order=7848)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t std::_Deque_iterator<gimple*, gimple*&, gimple**>::_S_buffer_size ()
{
  size_t D.257243;

  <bb 2> :
  D.257243 = std::__deque_buf_size (8);

  <bb 3> :
<L0>:
  return D.257243;

}



;; Function _GLOBAL__sub_I_gcc_plugin.c (_GLOBAL__sub_I_gcc_plugin.c, funcdef_no=11020, decl_uid=245882, cgraph_uid=7652, symbol_order=8852)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void _GLOBAL__sub_I_gcc_plugin.c ()
{
  <bb 2> :
  __static_initialization_and_destruction_0 (1, 65535);
  return;

}


