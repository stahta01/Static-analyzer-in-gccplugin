
;; Function Graph::init_Graph (_ZN5Graph10init_GraphEi, funcdef_no=6151, decl_uid=167779, cgraph_uid=3140, symbol_order=3814)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 6 8 }
;; 8 succs { 1 }
void Graph::init_Graph (struct Graph * const this, int V)
{
  void * D.248345;
  struct list * D.168967;
  size_t iftmp.2;
  long int D.168820;
  struct list * D.168819;
  struct list * D.168818;
  struct list * retval.1;
  sizetype D.248330;
  size_t iftmp.0;
  void * D.168817;

  <bb 2> :
  this->V = V;
  D.248330 = (sizetype) V;
  if (D.248330 <= 384307168202282325)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = D.248330 * 24;
  iftmp.0 = _1 + 8;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.0 = 18446744073709551615;

  <bb 5> :
  D.248345 = operator new [] (iftmp.0);
  D.168817 = D.248345;
  MEM[(sizetype *)D.168817] = D.248330;
  D.168818 = D.168817 + 8;
  D.168819 = D.168818;
  _2 = D.248330 + 18446744073709551615;
  D.168820 = (long int) _2;
  goto <bb 7>; [INV]

  <bb 6> :
  std::__cxx11::list<int>::list (D.168819);
  D.168819 = D.168819 + 24;
  D.168820 = D.168820 + -1;

  <bb 7> :
  if (D.168820 >= 0)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  retval.1 = D.168818;
  _8 = D.168817 + 8;
  this->adj = _8;
  return;

}



;; Function std::__cxx11::list<int>::list (_ZNSt7__cxx114listIiSaIiEEC2Ev, funcdef_no=6160, decl_uid=168806, cgraph_uid=3135, symbol_order=3809)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::list<int>::list (struct list * const this)
{
  <bb 2> :
  _1 = &this->D.168814;
  std::__cxx11::_List_base<int, std::allocator<int> >::_List_base (_1);
  return;

}



;; Function std::__cxx11::_List_base<int, std::allocator<int> >::_List_base (_ZNSt7__cxx1110_List_baseIiSaIiEEC2Ev, funcdef_no=6158, decl_uid=168280, cgraph_uid=3132, symbol_order=3806)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::_List_base<int, std::allocator<int> >::_List_base (struct _List_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::_List_impl (_1);
  return;

}



;; Function std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::_List_impl (_ZNSt7__cxx1110_List_baseIiSaIiEE10_List_implC2Ev, funcdef_no=7524, decl_uid=168069, cgraph_uid=4156, symbol_order=4942)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::_List_impl (struct _List_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<std::_List_node<int> >::allocator (this);
  _1 = &this->_M_node;
  std::__detail::_List_node_header::_List_node_header (_1);
  return;

}



;; Function std::allocator<std::_List_node<int> >::allocator (_ZNSaISt10_List_nodeIiEEC2Ev, funcdef_no=8337, decl_uid=167976, cgraph_uid=4969, symbol_order=5759)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<std::_List_node<int> >::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator (_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEEC2Ev, funcdef_no=9172, decl_uid=167905, cgraph_uid=5804, symbol_order=6594)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::__detail::_List_node_header::_List_node_header (_ZNSt8__detail17_List_node_headerC2Ev, funcdef_no=4671, decl_uid=144698, cgraph_uid=2594, symbol_order=2784)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__detail::_List_node_header::_List_node_header (struct _List_node_header * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::__detail::_List_node_header::_M_init (this);
  return;

}



;; Function std::__detail::_List_node_header::_M_init (_ZNSt8__detail17_List_node_header7_M_initEv, funcdef_no=4677, decl_uid=144685, cgraph_uid=2600, symbol_order=2790)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__detail::_List_node_header::_M_init (struct _List_node_header * const this)
{
  <bb 2> :
  _1 = &this->D.144700;
  this->D.144700._M_prev = _1;
  _2 = this->D.144700._M_prev;
  this->D.144700._M_next = _2;
  this->_M_size = 0;
  return;

}



;; Function Graph::addEdge (_ZN5Graph7addEdgeEii, funcdef_no=6165, decl_uid=167784, cgraph_uid=3141, symbol_order=3815)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void Graph::addEdge (struct Graph * const this, int v, int w)
{
  <bb 2> :
  _1 = this->adj;
  _2 = (long unsigned int) v;
  _3 = _2 * 24;
  _4 = _1 + _3;
  std::__cxx11::list<int>::push_back (_4, &w);
  return;

}



;; Function std::__cxx11::list<int>::push_back (_ZNSt7__cxx114listIiSaIiEE9push_backERKi, funcdef_no=7532, decl_uid=168488, cgraph_uid=4164, symbol_order=4950)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::list<int>::push_back (struct list * const this, const value_type & __x)
{
  struct _List_iterator D.248347;

  <bb 2> :
  D.248347 = std::__cxx11::list<int>::end (this);
  std::__cxx11::list<int>::_M_insert<const int&> (this, D.248347, __x);
  return;

}



;; Function std::__cxx11::list<int>::end (_ZNSt7__cxx114listIiSaIiEE3endEv, funcdef_no=7537, decl_uid=168434, cgraph_uid=4169, symbol_order=4955)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::__cxx11::list<int>::end (struct list * const this)
{
  struct iterator D.211122;
  struct iterator D.248348;

  <bb 2> :
  _1 = &this->D.168814._M_impl._M_node.D.144700;
  std::_List_iterator<int>::_List_iterator (&D.211122, _1);
  D.248348 = D.211122;
  D.211122 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248348;

}



;; Function std::_List_iterator<int>::_List_iterator (_ZNSt14_List_iteratorIiEC2EPNSt8__detail15_List_node_baseE, funcdef_no=8345, decl_uid=169031, cgraph_uid=4977, symbol_order=5767)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_List_iterator<int>::_List_iterator (struct _List_iterator * const this, struct _List_node_base * __x)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_node = __x;
  return;

}



;; Function std::__cxx11::list<int>::_M_insert<const int&> (_ZNSt7__cxx114listIiSaIiEE9_M_insertIJRKiEEEvSt14_List_iteratorIiEDpOT_, funcdef_no=8343, decl_uid=211112, cgraph_uid=4975, symbol_order=5765)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::list<int>::_M_insert<const int&> (struct list * const this, struct iterator __position, const int & __args#0)
{
  struct _Node * D.248351;
  struct _Node * __tmp;

  <bb 2> :
  _1 = std::forward<const int&> (__args#0);
  D.248351 = std::__cxx11::list<int>::_M_create_node<const int&> (this, _1);
  __tmp = D.248351;
  _2 = &__tmp->D.211167;
  _3 = __position._M_node;
  std::__detail::_List_node_base::_M_hook (_2, _3);
  _4 = &this->D.168814;
  std::__cxx11::_List_base<int, std::allocator<int> >::_M_inc_size (_4, 1);
  return;

}



;; Function std::forward<const int&> (_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=9177, decl_uid=221772, cgraph_uid=5809, symbol_order=6599)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const int & std::forward<const int&> (const type & __t)
{
  const int & D.248352;

  <bb 2> :
  D.248352 = __t;

  <bb 3> :
<L0>:
  return D.248352;

}



;; Function std::__cxx11::list<int>::_M_create_node<const int&> (_ZNSt7__cxx114listIiSaIiEE14_M_create_nodeIJRKiEEEPSt10_List_nodeIiEDpOT_, funcdef_no=9178, decl_uid=221774, cgraph_uid=5810, symbol_order=6600)

Merging blocks 3 and 4
Merging blocks 3 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { }
struct _Node * std::__cxx11::list<int>::_M_create_node<const int&> (struct list * const this, const int & __args#0)
{
  struct _List_node * D.248356;
  struct __allocated_ptr __guard;
  struct allocator & __alloc;
  struct _List_node * __p;
  struct _Node * D.248354;

  <bb 2> :
  _1 = &this->D.168814;
  D.248356 = std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_node (_1);

  <bb 3> :
  __p = D.248356;
  _2 = &this->D.168814;
  __alloc = std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_Node_allocator (_2);
  std::__allocated_ptr<std::allocator<std::_List_node<int> > >::__allocated_ptr (&__guard, __alloc, __p);
  _3 = std::forward<const int&> (__args#0);
  _4 = std::_List_node<int>::_M_valptr (__p);
  std::allocator_traits<std::allocator<std::_List_node<int> > >::construct<int, const int&> (__alloc, _4, _3);
  std::__allocated_ptr<std::allocator<std::_List_node<int> > >::operator= (&__guard, 0);
  D.248354 = __p;
  std::__allocated_ptr<std::allocator<std::_List_node<int> > >::~__allocated_ptr (&__guard);
  __guard = {CLOBBER};

  <bb 4> :
<L2>:
  return D.248354;

  <bb 5> :
<L3>:
  __guard = {CLOBBER};
  resx 1

}



;; Function std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_node (_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_get_nodeEv, funcdef_no=9929, decl_uid=168182, cgraph_uid=6561, symbol_order=7355)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _List_node * std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_node (struct _List_base * const this)
{
  struct _List_node * D.248362;
  struct _List_node * D.248360;

  <bb 2> :
  _1 = &this->_M_impl;
  D.248362 = std::allocator_traits<std::allocator<std::_List_node<int> > >::allocate (_1, 1);
  D.248360 = D.248362;

  <bb 3> :
<L0>:
  return D.248360;

}



;; Function std::allocator_traits<std::allocator<std::_List_node<int> > >::allocate (_ZNSt16allocator_traitsISaISt10_List_nodeIiEEE8allocateERS2_m, funcdef_no=10474, decl_uid=168110, cgraph_uid=7106, symbol_order=7900)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct _List_node * std::allocator_traits<std::allocator<std::_List_node<int> > >::allocate (struct allocator_type & __a, size_type __n)
{
  struct _List_node * D.248365;
  struct _List_node * D.248363;

  <bb 2> :
  D.248365 = __gnu_cxx::new_allocator<std::_List_node<int> >::allocate (__a, __n, 0B);
  D.248363 = D.248365;

  <bb 3> :
<L0>:
  return D.248363;

}



;; Function __gnu_cxx::new_allocator<std::_List_node<int> >::allocate (_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE8allocateEmPKv, funcdef_no=10839, decl_uid=167860, cgraph_uid=7472, symbol_order=8268)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct _List_node * __gnu_cxx::new_allocator<std::_List_node<int> >::allocate (struct new_allocator * const this, size_type __n, const void * D.246689)
{
  struct _List_node * D.248376;
  struct _List_node * D.248375;
  align_val_t __al;
  struct _List_node * D.248373;
  bool retval.3;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<std::_List_node<int> >::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.3 = _4 != 0;
  if (retval.3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 768614336404564650)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 24;
  D.248376 = operator new (_6);
  D.248373 = D.248376;

  <bb 7> :
<L6>:
  return D.248373;

}



;; Function __gnu_cxx::new_allocator<std::_List_node<int> >::_M_max_size (_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIiEE11_M_max_sizeEv, funcdef_no=10840, decl_uid=167887, cgraph_uid=7471, symbol_order=8267)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<std::_List_node<int> >::_M_max_size (const struct new_allocator * const this)
{
  size_type D.248377;

  <bb 2> :
  D.248377 = 384307168202282325;

  <bb 3> :
<L0>:
  return D.248377;

}



;; Function std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_Node_allocator (_ZNSt7__cxx1110_List_baseIiSaIiEE21_M_get_Node_allocatorEv, funcdef_no=9174, decl_uid=168188, cgraph_uid=5806, symbol_order=6596)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Node_alloc_type & std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_Node_allocator (struct _List_base * const this)
{
  struct _Node_alloc_type & D.248379;

  <bb 2> :
  D.248379 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248379;

}



;; Function std::__allocated_ptr<std::allocator<std::_List_node<int> > >::__allocated_ptr (_ZNSt15__allocated_ptrISaISt10_List_nodeIiEEEC2ERS2_PS1_, funcdef_no=9931, decl_uid=233732, cgraph_uid=6563, symbol_order=7357)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__allocated_ptr<std::allocator<std::_List_node<int> > >::__allocated_ptr (struct __allocated_ptr * const this, struct allocator & __a, struct _List_node * __ptr)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::__addressof<std::allocator<std::_List_node<int> > > (__a);
  this->_M_alloc = _1;
  this->_M_ptr = __ptr;
  return;

}



;; Function std::__addressof<std::allocator<std::_List_node<int> > > (_ZSt11__addressofISaISt10_List_nodeIiEEEPT_RS3_, funcdef_no=10475, decl_uid=241542, cgraph_uid=7107, symbol_order=7901)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator * std::__addressof<std::allocator<std::_List_node<int> > > (struct allocator & __r)
{
  struct allocator * D.248381;

  <bb 2> :
  D.248381 = __r;

  <bb 3> :
<L0>:
  return D.248381;

}



;; Function std::_List_node<int>::_M_valptr (_ZNSt10_List_nodeIiE9_M_valptrEv, funcdef_no=8347, decl_uid=211163, cgraph_uid=4979, symbol_order=5769)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::_List_node<int>::_M_valptr (struct _List_node * const this)
{
  int * D.248383;

  <bb 2> :
  _1 = &this->_M_storage;
  D.248383 = __gnu_cxx::__aligned_membuf<int>::_M_ptr (_1);

  <bb 3> :
<L0>:
  return D.248383;

}



;; Function __gnu_cxx::__aligned_membuf<int>::_M_ptr (_ZN9__gnu_cxx16__aligned_membufIiE6_M_ptrEv, funcdef_no=9180, decl_uid=211145, cgraph_uid=5812, symbol_order=6602)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * __gnu_cxx::__aligned_membuf<int>::_M_ptr (struct __aligned_membuf * const this)
{
  int * D.248385;

  <bb 2> :
  D.248385 = __gnu_cxx::__aligned_membuf<int>::_M_addr (this);

  <bb 3> :
<L0>:
  return D.248385;

}



;; Function __gnu_cxx::__aligned_membuf<int>::_M_addr (_ZN9__gnu_cxx16__aligned_membufIiE7_M_addrEv, funcdef_no=9938, decl_uid=211141, cgraph_uid=6570, symbol_order=7364)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void * __gnu_cxx::__aligned_membuf<int>::_M_addr (struct __aligned_membuf * const this)
{
  void * D.248387;

  <bb 2> :
  D.248387 = &this->_M_storage;

  <bb 3> :
<L0>:
  return D.248387;

}



;; Function std::allocator_traits<std::allocator<std::_List_node<int> > >::construct<int, const int&> (_ZNSt16allocator_traitsISaISt10_List_nodeIiEEE9constructIiJRKiEEEvRS2_PT_DpOT0_, funcdef_no=9936, decl_uid=233754, cgraph_uid=6568, symbol_order=7362)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<std::_List_node<int> > >::construct<int, const int&> (struct allocator_type & __a, int * __p, const int & __args#0)
{
  <bb 2> :
  _1 = std::forward<const int&> (__args#0);
  __gnu_cxx::new_allocator<std::_List_node<int> >::construct<int, const int&> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<std::_List_node<int> >::construct<int, const int&> (_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE9constructIiJRKiEEEvPT_DpOT0_, funcdef_no=10476, decl_uid=241557, cgraph_uid=7108, symbol_order=7902)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<std::_List_node<int> >::construct<int, const int&> (struct new_allocator * const this, int * __p, const int & __args#0)
{
  void * D.245133;
  void * D.245132;
  int D.245134;

  <bb 2> :
  _1 = std::forward<const int&> (__args#0);
  D.245134 = *_1;
  D.245132 = __p;
  D.245133 = operator new (4, D.245132);
  MEM[(int *)D.245133] = D.245134;
  return;

}



;; Function operator new (_ZnwmPv, funcdef_no=15, decl_uid=3700, cgraph_uid=16, symbol_order=15)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
void * operator new (size_t D.3698, void * __p)
{
  void * D.248389;

  <bb 2> :
  D.248389 = __p;

  <bb 3> :
<L0>:
  return D.248389;

}



;; Function std::__allocated_ptr<std::allocator<std::_List_node<int> > >::operator= (_ZNSt15__allocated_ptrISaISt10_List_nodeIiEEEaSEDn, funcdef_no=9937, decl_uid=233705, cgraph_uid=6569, symbol_order=7363)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __allocated_ptr & std::__allocated_ptr<std::allocator<std::_List_node<int> > >::operator= (struct __allocated_ptr * const this, <<< Unknown tree: nullptr_type >>> D.241561)
{
  struct __allocated_ptr & D.248391;

  <bb 2> :
  this->_M_ptr = 0B;
  D.248391 = this;

  <bb 3> :
<L0>:
  return D.248391;

}



;; Function std::__allocated_ptr<std::allocator<std::_List_node<int> > >::~__allocated_ptr (_ZNSt15__allocated_ptrISaISt10_List_nodeIiEEED2Ev, funcdef_no=9934, decl_uid=233739, cgraph_uid=6566, symbol_order=7360)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::__allocated_ptr<std::allocator<std::_List_node<int> > >::~__allocated_ptr (struct __allocated_ptr * const this)
{
  <bb 2> :
  _1 = this->_M_ptr;
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = this->_M_ptr;
  _3 = this->_M_alloc;
  std::allocator_traits<std::allocator<std::_List_node<int> > >::deallocate (_3, _2, 1);

  <bb 4> :
  *this = {CLOBBER};
  return;

}



;; Function std::allocator_traits<std::allocator<std::_List_node<int> > >::deallocate (_ZNSt16allocator_traitsISaISt10_List_nodeIiEEE10deallocateERS2_PS1_m, funcdef_no=9928, decl_uid=168117, cgraph_uid=6560, symbol_order=7354)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<std::_List_node<int> > >::deallocate (struct allocator_type & __a, struct _List_node * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate (_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE10deallocateEPS2_m, funcdef_no=10473, decl_uid=167864, cgraph_uid=7105, symbol_order=7899)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate (struct new_allocator * const this, struct _List_node * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::__cxx11::_List_base<int, std::allocator<int> >::_M_inc_size (_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_inc_sizeEm, funcdef_no=9179, decl_uid=168080, cgraph_uid=5811, symbol_order=6601)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::_List_base<int, std::allocator<int> >::_M_inc_size (struct _List_base * const this, size_t __n)
{
  <bb 2> :
  _1 = this->_M_impl._M_node._M_size;
  _2 = __n + _1;
  this->_M_impl._M_node._M_size = _2;
  return;

}



;; Function Graph::DFSUtil (_ZN5Graph7DFSUtilEiPb, funcdef_no=6166, decl_uid=167775, cgraph_uid=3142, symbol_order=3816)

Removing basic block 13
Removing basic block 15
Removing basic block 18
Removing basic block 20
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;;
;; Loop 1
;;  header 18, latch 17
;;  depth 1, outer 0
;;  nodes: 18 17 5 16 15 9 14 10 13 12 11 8 7 6 3 4
;;
;; Loop 2
;;  header 15, latch 14
;;  depth 2, outer 1
;;  nodes: 15 14 10 13 12 11
;; 2 succs { 18 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 17 }
;; 6 succs { 20 7 }
;; 7 succs { 20 8 }
;; 8 succs { 9 16 }
;; 9 succs { 15 }
;; 10 succs { 11 14 }
;; 11 succs { 12 13 }
;; 12 succs { 20 14 }
;; 13 succs { 20 14 }
;; 14 succs { 15 }
;; 15 succs { 10 17 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 3 19 }
;; 19 succs { 1 }
;; 20 succs { }
void Graph::DFSUtil (struct Graph * const this, int v, bool * visited)
{
  struct iterator i;
  struct iterator D.169074;
  bool retval.12;
  bool retval.11;
  bool retval.8;
  bool retval.7;
  bool * visited.6;
  bool retval.5;
  bool retval.4;

  <bb 2> :
  _1 = (sizetype) v;
  _2 = visited + _1;
  *_2 = 1;
  std::_List_iterator<int>::_List_iterator (&i);
  _3 = this->adj;
  _4 = (long unsigned int) v;
  _5 = _4 * 24;
  _6 = _3 + _5;
  i = std::__cxx11::list<int>::begin (_6);
  goto <bb 18>; [INV]

  <bb 3> :
  _7 = std::_List_iterator<int>::operator* (&i);
  _8 = *_7;
  _9 = this->end;
  retval.4 = _8 == _9;
  if (retval.4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  this->succ = 1;

  <bb 5> :
  visited.6 = visited;
  _10 = std::_List_iterator<int>::operator* (&i);
  _11 = *_10;
  _12 = (sizetype) _11;
  _13 = visited.6 + _12;
  _14 = *_13;
  retval.5 = ~_14;
  if (retval.5 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 6> :
  _15 = &this->stack;
  _16 = std::_List_iterator<int>::operator* (&i);
  std::vector<int>::push_back (_15, _16);

  <bb 7> :
  _17 = std::_List_iterator<int>::operator* (&i);
  _18 = *_17;
  Graph::DFSUtil (this, _18, visited);

  <bb 8> :
  _19 = this->succ;
  _20 = (int) _19;
  if (_20 == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 9> :
  goto <bb 15>; [INV]

  <bb 10> :
  _21 = &this->stack;
  _22 = std::vector<int>::operator[] (_21, 0);
  _23 = *_22;
  retval.7 = _23 == 2;
  if (retval.7 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 11> :
  _24 = &this->stack;
  _25 = &this->stack;
  _26 = std::vector<int>::size (_25);
  _27 = _26 + 18446744073709551615;
  _28 = std::vector<int>::operator[] (_24, _27);
  _29 = *_28;
  _30 = this->end;
  retval.8 = _29 != _30;
  if (retval.8 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _31 = &this->stack;
  _32 = &this->stack;
  _33 = std::vector<int>::size (_32);
  _34 = _33 + 18446744073709551615;
  _35 = std::vector<int>::operator[] (_31, _34);
  _36 = *_35;
  stderr.9_37 = stderr;
  fprintf (stderr.9_37, "now stack %d\n", _36);
  goto <bb 14>; [INV]

  <bb 13> :
  _38 = &this->stack;
  _39 = &this->stack;
  _40 = std::vector<int>::size (_39);
  _41 = _40 + 18446744073709551615;
  _42 = std::vector<int>::operator[] (_38, _41);
  _43 = *_42;
  stderr.10_44 = stderr;
  fprintf (stderr.10_44, "find stack %d\n", _43);

  <bb 14> :
  _45 = &this->stack;
  std::vector<int>::pop_back (_45);

  <bb 15> :
  _46 = &this->stack;
  _47 = std::vector<int>::size (_46);
  retval.11 = _47 != 0;
  if (retval.11 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  _48 = &this->stack;
  std::vector<int>::pop_back (_48);

  <bb 17> :
  std::_List_iterator<int>::operator++ (&i);

  <bb 18> :
  _49 = this->adj;
  _50 = (long unsigned int) v;
  _51 = _50 * 24;
  _52 = _49 + _51;
  D.169074 = std::__cxx11::list<int>::end (_52);
  retval.12 = std::operator!= (&i, &D.169074);
  D.169074 = {CLOBBER};
  if (retval.12 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  i = {CLOBBER};
  return;

  <bb 20> :
<L21>:
  i = {CLOBBER};
  resx 1

}



;; Function std::_List_iterator<int>::_List_iterator (_ZNSt14_List_iteratorIiEC2Ev, funcdef_no=7534, decl_uid=169036, cgraph_uid=4166, symbol_order=4952)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_List_iterator<int>::_List_iterator (struct _List_iterator * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_node = 0B;
  return;

}



;; Function std::__cxx11::list<int>::begin (_ZNSt7__cxx114listIiSaIiEE5beginEv, funcdef_no=7536, decl_uid=168430, cgraph_uid=4168, symbol_order=4954)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::__cxx11::list<int>::begin (struct list * const this)
{
  struct iterator D.211120;
  struct iterator D.248422;

  <bb 2> :
  _1 = this->D.168814._M_impl._M_node.D.144700._M_next;
  std::_List_iterator<int>::_List_iterator (&D.211120, _1);
  D.248422 = D.211120;
  D.211120 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248422;

}



;; Function std::vector<int>::push_back (_ZNSt6vectorIiSaIiEE9push_backERKi, funcdef_no=7541, decl_uid=167420, cgraph_uid=4174, symbol_order=4960)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<int>::push_back (struct vector * const this, const value_type & __x)
{
  struct __normal_iterator D.248428;

  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_finish;
  _2 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.167768._M_impl.D.167081._M_finish;
  _4 = &this->D.167768._M_impl;
  std::allocator_traits<std::allocator<int> >::construct<int, const int&> (_4, _3, __x);
  _5 = this->D.167768._M_impl.D.167081._M_finish;
  _6 = _5 + 4;
  this->D.167768._M_impl.D.167081._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.248428 = std::vector<int>::end (this);
  std::vector<int>::_M_realloc_insert<const int&> (this, D.248428, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<int> >::construct<int, const int&> (_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_, funcdef_no=8348, decl_uid=211173, cgraph_uid=4980, symbol_order=5770)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<int> >::construct<int, const int&> (struct allocator_type & __a, int * __p, const int & __args#0)
{
  <bb 2> :
  _1 = std::forward<const int&> (__args#0);
  __gnu_cxx::new_allocator<int>::construct<int, const int&> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::construct<int, const int&> (_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_, funcdef_no=9181, decl_uid=221786, cgraph_uid=5813, symbol_order=6603)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::construct<int, const int&> (struct new_allocator * const this, int * __p, const int & __args#0)
{
  void * D.233769;
  void * D.233768;
  int D.233770;

  <bb 2> :
  _1 = std::forward<const int&> (__args#0);
  D.233770 = *_1;
  D.233768 = __p;
  D.233769 = operator new (4, D.233768);
  MEM[(int *)D.233769] = D.233770;
  return;

}



;; Function std::vector<int>::end (_ZNSt6vectorIiSaIiEE3endEv, funcdef_no=8349, decl_uid=167353, cgraph_uid=4981, symbol_order=5771)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<int>::end (struct vector * const this)
{
  struct iterator D.221809;
  struct iterator D.248429;

  <bb 2> :
  _1 = &this->D.167768._M_impl.D.167081._M_finish;
  __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (&D.221809, _1);
  D.248429 = D.221809;
  D.221809 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248429;

}



;; Function __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_, funcdef_no=9183, decl_uid=211420, cgraph_uid=5815, symbol_order=6605)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (struct __normal_iterator * const this, int * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<int>::_M_realloc_insert<const int&> (_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_, funcdef_no=8350, decl_uid=211439, cgraph_uid=4985, symbol_order=5775)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::_M_realloc_insert<const int&> (struct vector * const this, struct iterator __position, const int & __args#0)
{
  int * D.248436;
  const size_type D.248435;
  int * __new_finish;
  int * __new_start;
  const size_type __elems_before;
  int * __old_finish;
  int * __old_start;
  const size_type __len;
  struct iterator D.221817;

  <bb 2> :
  D.248435 = std::vector<int>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.248435;
  __old_start = this->D.167768._M_impl.D.167081._M_start;
  __old_finish = this->D.167768._M_impl.D.167081._M_finish;
  D.221817 = std::vector<int>::begin (this);
  _1 = __gnu_cxx::operator-<int*, std::vector<int> > (&__position, &D.221817);
  __elems_before = (const size_type) _1;
  D.221817 = {CLOBBER};
  _2 = &this->D.167768;
  D.248436 = std::_Vector_base<int, std::allocator<int> >::_M_allocate (_2, __len);
  __new_start = D.248436;
  __new_finish = __new_start;
  _3 = std::forward<const int&> (__args#0);
  _4 = __elems_before * 4;
  _5 = __new_start + _4;
  _6 = &this->D.167768._M_impl;
  std::allocator_traits<std::allocator<int> >::construct<int, const int&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.167768;
  _8 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<int>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 4;
  _11 = &this->D.167768;
  _12 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<int>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.167768;
  _23 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 4;
  _26 = (long unsigned int) _25;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_22, __old_start, _26);
  this->D.167768._M_impl.D.167081._M_start = __new_start;
  this->D.167768._M_impl.D.167081._M_finish = __new_finish;
  _27 = __len * 4;
  _28 = __new_start + _27;
  this->D.167768._M_impl.D.167081._M_end_of_storage = _28;
  return;

}



;; Function std::vector<int>::_M_check_len (_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc, funcdef_no=9185, decl_uid=167615, cgraph_uid=5817, symbol_order=6607)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<int>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.15;
  size_type D.248440;
  const long unsigned int D.233779;
  bool retval.13;

  <bb 2> :
  _1 = std::vector<int>::max_size (this);
  _2 = std::vector<int>::size (this);
  _3 = _1 - _2;
  __n.14_4 = __n;
  retval.13 = _3 < __n.14_4;
  if (retval.13 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<int>::size (this);
  _6 = std::vector<int>::size (this);
  D.233779 = _6;
  _7 = std::max<long unsigned int> (&D.233779, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.233779 = {CLOBBER};
  _9 = std::vector<int>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<int>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.15 = std::vector<int>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.15 = __len;

  <bb 8> :
  D.248440 = iftmp.15;

  <bb 9> :
<L6>:
  return D.248440;

}



;; Function std::max<long unsigned int> (_ZSt3maxImERKT_S2_S2_, funcdef_no=9940, decl_uid=156763, cgraph_uid=6572, symbol_order=7366)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
const long unsigned int & std::max<long unsigned int> (const long unsigned int & __a, const long unsigned int & __b)
{
  const long unsigned int & D.248449;

  <bb 2> :
  _1 = *__a;
  _2 = *__b;
  if (_1 < _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.248449 = __b;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.248449 = __a;

  <bb 5> :
<L2>:
  return D.248449;

}



;; Function std::vector<int>::max_size (_ZNKSt6vectorIiSaIiEE8max_sizeEv, funcdef_no=9939, decl_uid=167375, cgraph_uid=6571, symbol_order=7365)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<int>::max_size (const struct vector * const this)
{
  size_type D.248451;

  <bb 2> :
  _1 = &this->D.167768;
  _2 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_1);
  D.248451 = std::vector<int>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.248451;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv, funcdef_no=9777, decl_uid=166971, cgraph_uid=6409, symbol_order=7199)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.248453;

  <bb 2> :
  D.248453 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248453;

}



;; Function std::vector<int>::_S_max_size (_ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_, funcdef_no=10477, decl_uid=167622, cgraph_uid=7109, symbol_order=7903)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<int>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.248455;

  <bb 2> :
  __diffmax = 2305843009213693951;
  _1 = std::allocator_traits<std::allocator<int> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.248455 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248455;

}



;; Function std::allocator_traits<std::allocator<int> >::max_size (_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_, funcdef_no=10841, decl_uid=166906, cgraph_uid=7473, symbol_order=8269)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<int> >::max_size (const struct allocator_type & __a)
{
  size_type D.248458;

  <bb 2> :
  D.248458 = __gnu_cxx::new_allocator<int>::max_size (__a);

  <bb 3> :
<L0>:
  return D.248458;

}



;; Function __gnu_cxx::new_allocator<int>::max_size (_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv, funcdef_no=10982, decl_uid=166748, cgraph_uid=7614, symbol_order=8410)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<int>::max_size (const struct new_allocator * const this)
{
  size_type D.248460;

  <bb 2> :
  D.248460 = __gnu_cxx::new_allocator<int>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.248460;

}



;; Function __gnu_cxx::new_allocator<int>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIiE11_M_max_sizeEv, funcdef_no=10479, decl_uid=166767, cgraph_uid=7110, symbol_order=7904)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<int>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.248462;

  <bb 2> :
  D.248462 = 2305843009213693951;

  <bb 3> :
<L0>:
  return D.248462;

}



;; Function std::min<long unsigned int> (_ZSt3minImERKT_S2_S2_, funcdef_no=10842, decl_uid=114557, cgraph_uid=7474, symbol_order=8270)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
const long unsigned int & std::min<long unsigned int> (const long unsigned int & __a, const long unsigned int & __b)
{
  const long unsigned int & D.248466;

  <bb 2> :
  _1 = *__b;
  _2 = *__a;
  if (_1 < _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.248466 = __b;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.248466 = __a;

  <bb 5> :
<L2>:
  return D.248466;

}



;; Function std::vector<int>::begin (_ZNSt6vectorIiSaIiEE5beginEv, funcdef_no=9186, decl_uid=167349, cgraph_uid=5818, symbol_order=6608)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<int>::begin (struct vector * const this)
{
  struct iterator D.233781;
  struct iterator D.248468;

  <bb 2> :
  _1 = &this->D.167768._M_impl.D.167081._M_start;
  __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (&D.233781, _1);
  D.248468 = D.233781;
  D.233781 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248468;

}



;; Function __gnu_cxx::operator-<int*, std::vector<int> > (_ZN9__gnu_cxxmiIPiSt6vectorIiSaIiEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_, funcdef_no=9187, decl_uid=221818, cgraph_uid=5819, symbol_order=6609)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<int*, std::vector<int> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.248471;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.248471 = _5 /[ex] 4;

  <bb 3> :
<L0>:
  return D.248471;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_M_allocate (_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm, funcdef_no=9188, decl_uid=167085, cgraph_uid=5820, symbol_order=6610)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
int * std::_Vector_base<int, std::allocator<int> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  int * D.248479;
  int * iftmp.16;
  int * D.248473;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.248479 = std::allocator_traits<std::allocator<int> >::allocate (_1, __n);
  iftmp.16 = D.248479;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.16 = 0B;

  <bb 5> :
  D.248473 = iftmp.16;

  <bb 6> :
<L3>:
  return D.248473;

}



;; Function std::allocator_traits<std::allocator<int> >::allocate (_ZNSt16allocator_traitsISaIiEE8allocateERS0_m, funcdef_no=9941, decl_uid=166886, cgraph_uid=6573, symbol_order=7367)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
int * std::allocator_traits<std::allocator<int> >::allocate (struct allocator_type & __a, size_type __n)
{
  int * D.248482;
  int * D.248480;

  <bb 2> :
  D.248482 = __gnu_cxx::new_allocator<int>::allocate (__a, __n, 0B);
  D.248480 = D.248482;

  <bb 3> :
<L0>:
  return D.248480;

}



;; Function __gnu_cxx::new_allocator<int>::allocate (_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv, funcdef_no=10478, decl_uid=166740, cgraph_uid=7111, symbol_order=7905)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
int * __gnu_cxx::new_allocator<int>::allocate (struct new_allocator * const this, size_type __n, const void * D.245140)
{
  int * D.248493;
  int * D.248492;
  align_val_t __al;
  int * D.248490;
  bool retval.17;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<int>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.17 = _4 != 0;
  if (retval.17 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 4611686018427387903)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 4;
  D.248493 = operator new (_6);
  D.248490 = D.248493;

  <bb 7> :
<L6>:
  return D.248490;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv, funcdef_no=8925, decl_uid=166969, cgraph_uid=5557, symbol_order=6347)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.248494;

  <bb 2> :
  D.248494 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248494;

}



;; Function __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv, funcdef_no=9190, decl_uid=211407, cgraph_uid=5822, symbol_order=6612)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * const & __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (const struct __normal_iterator * const this)
{
  int * const & D.248496;

  <bb 2> :
  D.248496 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.248496;

}



;; Function std::vector<int>::_S_relocate (_ZNSt6vectorIiSaIiEE11_S_relocateEPiS2_S2_RS0_, funcdef_no=9189, decl_uid=167243, cgraph_uid=5821, symbol_order=6611)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::vector<int>::_S_relocate (int * __first, int * __last, int * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.248499;
  int * D.248498;

  <bb 2> :
  D.248498 = std::vector<int>::_S_do_relocate (__first, __last, __result, __alloc, D.248499);

  <bb 3> :
<L0>:
  return D.248498;

}



;; Function std::vector<int>::_S_do_relocate (_ZNSt6vectorIiSaIiEE14_S_do_relocateEPiS2_S2_RS0_St17integral_constantIbLb1EE, funcdef_no=9942, decl_uid=167231, cgraph_uid=6574, symbol_order=7368)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::vector<int>::_S_do_relocate (int * __first, int * __last, int * __result, struct _Tp_alloc_type & __alloc, struct true_type D.241578)
{
  int * D.248501;

  <bb 2> :
  D.248501 = std::__relocate_a<int*, int*, std::allocator<int> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.248501;

}



;; Function std::__relocate_a<int*, int*, std::allocator<int> > (_ZSt12__relocate_aIPiS0_SaIiEET0_T_S3_S2_RT1_, funcdef_no=10480, decl_uid=221982, cgraph_uid=7112, symbol_order=7906)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__relocate_a<int*, int*, std::allocator<int> > (int * __first, int * __last, int * __result, struct allocator & __alloc)
{
  int * D.248503;

  <bb 2> :
  _1 = std::__niter_base<int*> (__result);
  _2 = std::__niter_base<int*> (__last);
  _3 = std::__niter_base<int*> (__first);
  D.248503 = std::__relocate_a_1<int, int> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.248503;

}



;; Function std::__niter_base<int*> (_ZSt12__niter_baseIPiET_S1_, funcdef_no=10781, decl_uid=221988, cgraph_uid=7413, symbol_order=8207)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__niter_base<int*> (int * __it)
{
  int * D.248505;

  <bb 2> :
  D.248505 = __it;

  <bb 3> :
<L0>:
  return D.248505;

}



;; Function std::__relocate_a_1<int, int> (_ZSt14__relocate_a_1IiiENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS2_E4typeES4_S4_S4_RSaIT0_E, funcdef_no=10843, decl_uid=222156, cgraph_uid=7475, symbol_order=8271)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
int * std::__relocate_a_1<int, int> (int * __first, int * __last, int * __result, struct allocator & D.246706)
{
  ptrdiff_t __count;
  int * D.248510;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 4;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.18_2 = (long unsigned int) __count;
  _3 = __count.18_2 * 4;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.19_4 = (long unsigned int) __count;
  _5 = __count.19_4 * 4;
  D.248510 = __result + _5;

  <bb 5> :
<L3>:
  return D.248510;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim, funcdef_no=8924, decl_uid=167088, cgraph_uid=5556, symbol_order=6346)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_M_deallocate (struct _Vector_base * const this, int * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<int> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<int> >::deallocate (_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim, funcdef_no=9757, decl_uid=166893, cgraph_uid=6389, symbol_order=7179)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<int> >::deallocate (struct allocator_type & __a, int * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::deallocate (_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim, funcdef_no=10329, decl_uid=166744, cgraph_uid=6961, symbol_order=7755)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<int>::deallocate (struct new_allocator * const this, int * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 4;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::_List_iterator<int>::operator* (_ZNKSt14_List_iteratorIiEdeEv, funcdef_no=7540, decl_uid=169007, cgraph_uid=4172, symbol_order=4958)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int & std::_List_iterator<int>::operator* (const struct _List_iterator * const this)
{
  int & D.248518;

  <bb 2> :
  _1 = this->_M_node;
  D.248518 = std::_List_node<int>::_M_valptr (_1);

  <bb 3> :
<L0>:
  return D.248518;

}



;; Function std::vector<int>::operator[] (_ZNSt6vectorIiSaIiEEixEm, funcdef_no=7544, decl_uid=167393, cgraph_uid=4176, symbol_order=4962)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
value_type & std::vector<int>::operator[] (struct vector * const this, size_type __n)
{
  value_type & D.248520;

  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_start;
  _2 = __n * 4;
  D.248520 = _1 + _2;

  <bb 3> :
<L0>:
  return D.248520;

}



;; Function std::vector<int>::size (_ZNKSt6vectorIiSaIiEE4sizeEv, funcdef_no=7543, decl_uid=167373, cgraph_uid=4175, symbol_order=4961)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<int>::size (const struct vector * const this)
{
  size_type D.248522;

  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_finish;
  _2 = this->D.167768._M_impl.D.167081._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 4;
  D.248522 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.248522;

}



;; Function std::vector<int>::pop_back (_ZNSt6vectorIiSaIiEE8pop_backEv, funcdef_no=7545, decl_uid=167432, cgraph_uid=4177, symbol_order=4963)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::pop_back (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_finish;
  _2 = _1 + 18446744073709551612;
  this->D.167768._M_impl.D.167081._M_finish = _2;
  _3 = this->D.167768._M_impl.D.167081._M_finish;
  _4 = &this->D.167768._M_impl;
  std::allocator_traits<std::allocator<int> >::destroy<int> (_4, _3);
  return;

}



;; Function std::allocator_traits<std::allocator<int> >::destroy<int> (_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_, funcdef_no=8354, decl_uid=211447, cgraph_uid=4986, symbol_order=5776)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<int> >::destroy<int> (struct allocator_type & __a, int * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::destroy<int> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::destroy<int> (_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_, funcdef_no=9191, decl_uid=222168, cgraph_uid=5823, symbol_order=6613)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::destroy<int> (struct new_allocator * const this, int * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function std::_List_iterator<int>::operator++ (_ZNSt14_List_iteratorIiEppEv, funcdef_no=7539, decl_uid=169011, cgraph_uid=4171, symbol_order=4957)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Self & std::_List_iterator<int>::operator++ (struct _List_iterator * const this)
{
  struct _Self & D.248524;

  <bb 2> :
  _1 = this->_M_node;
  _2 = _1->_M_next;
  this->_M_node = _2;
  D.248524 = this;

  <bb 3> :
<L0>:
  return D.248524;

}



;; Function std::operator!= (_ZStneRKSt14_List_iteratorIiES2_, funcdef_no=7538, decl_uid=169024, cgraph_uid=4170, symbol_order=4956)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct _Self & __x, const struct _Self & __y)
{
  bool D.248526;

  <bb 2> :
  _1 = __x->_M_node;
  _2 = __y->_M_node;
  D.248526 = _1 != _2;

  <bb 3> :
<L0>:
  return D.248526;

}



;; Function Graph::DFS (_ZN5Graph3DFSEi, funcdef_no=6167, decl_uid=167797, cgraph_uid=3143, symbol_order=3817)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void Graph::DFS (struct Graph * const this, int v)
{
  bool * D.248529;
  int i;
  bool * visited;
  sizetype D.248528;

  <bb 2> :
  _1 = this->V;
  D.248528 = (sizetype) _1;
  D.248529 = operator new [] (D.248528);
  visited = D.248529;
  i = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _2 = (sizetype) i;
  _3 = visited + _2;
  *_3 = 0;
  i = i + 1;

  <bb 4> :
  _4 = this->V;
  if (i < _4)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  Graph::DFSUtil (this, v, visited);
  return;

}



;; Function Graph::is_succ (_ZN5Graph7is_succEP15basic_block_defS1_, funcdef_no=6168, decl_uid=167793, cgraph_uid=3144, symbol_order=3818)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { }
bool Graph::is_succ (struct Graph * const this, struct basic_block_def * bb1, struct basic_block_def * bb2)
{
  bool D.248530;
  value_type D.169110;

  <bb 2> :
  _1 = &this->stack;
  std::vector<int>::clear (_1);
  _2 = bb2->index;
  this->end = _2;
  this->succ = 0;
  _3 = &this->stack;
  D.169110 = 2;
  std::vector<int>::push_back (_3, &D.169110);

  <bb 3> :
  D.169110 = {CLOBBER};
  Graph::DFS (this, 2);
  D.248530 = this->succ;

  <bb 4> :
<L0>:
  return D.248530;

  <bb 5> :
<L1>:
  D.169110 = {CLOBBER};
  resx 1

}



;; Function std::vector<int>::clear (_ZNSt6vectorIiSaIiEE5clearEv, funcdef_no=7546, decl_uid=167475, cgraph_uid=4178, symbol_order=4964)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_start;
  std::vector<int>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<int>::_M_erase_at_end (_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi, funcdef_no=8355, decl_uid=167624, cgraph_uid=4987, symbol_order=5777)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<int>::_M_erase_at_end (struct vector * const this, int * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 4;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.167768;
  _5 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_4);
  _6 = this->D.167768._M_impl.D.167081._M_finish;
  std::_Destroy<int*, int> (__pos, _6, _5);
  this->D.167768._M_impl.D.167081._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::_Destroy<int*, int> (_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E, funcdef_no=8926, decl_uid=218160, cgraph_uid=5558, symbol_order=6348)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<int*, int> (int * __first, int * __last, struct allocator & D.232324)
{
  <bb 2> :
  std::_Destroy<int*> (__first, __last);
  return;

}



;; Function std::_Destroy<int*> (_ZSt8_DestroyIPiEvT_S1_, funcdef_no=9758, decl_uid=232326, cgraph_uid=6390, symbol_order=7180)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<int*> (int * __first, int * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<int*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<int*> (_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_, funcdef_no=10330, decl_uid=239404, cgraph_uid=6962, symbol_order=7756)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<int*> (int * D.243978, int * D.243979)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::vector<int>::push_back (_ZNSt6vectorIiSaIiEE9push_backEOi, funcdef_no=7547, decl_uid=167423, cgraph_uid=4179, symbol_order=4965)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::push_back (struct vector * const this, value_type & __x)
{
  <bb 2> :
  _1 = std::move<int&> (__x);
  std::vector<int>::emplace_back<int> (this, _1);
  return;

}



;; Function std::move<int&> (_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_, funcdef_no=8356, decl_uid=211542, cgraph_uid=4988, symbol_order=5778)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
type & std::move<int&> (int & __t)
{
  type & D.248536;

  <bb 2> :
  D.248536 = __t;

  <bb 3> :
<L0>:
  return D.248536;

}



;; Function std::vector<int>::emplace_back<int> (_ZNSt6vectorIiSaIiEE12emplace_backIJiEEERiDpOT_, funcdef_no=8357, decl_uid=211544, cgraph_uid=4989, symbol_order=5779)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
value_type & std::vector<int>::emplace_back<int> (struct vector * const this, int & __args#0)
{
  value_type & D.248542;
  struct __normal_iterator D.248541;

  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_finish;
  _2 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = std::forward<int> (__args#0);
  _4 = this->D.167768._M_impl.D.167081._M_finish;
  _5 = &this->D.167768._M_impl;
  std::allocator_traits<std::allocator<int> >::construct<int, int> (_5, _4, _3);
  _6 = this->D.167768._M_impl.D.167081._M_finish;
  _7 = _6 + 4;
  this->D.167768._M_impl.D.167081._M_finish = _7;
  goto <bb 5>; [INV]

  <bb 4> :
  _8 = std::forward<int> (__args#0);
  D.248541 = std::vector<int>::end (this);
  std::vector<int>::_M_realloc_insert<int> (this, D.248541, _8);

  <bb 5> :
  D.248542 = std::vector<int>::back (this);

  <bb 6> :
<L3>:
  return D.248542;

}



;; Function std::allocator_traits<std::allocator<int> >::construct<int, int> (_ZNSt16allocator_traitsISaIiEE9constructIiJiEEEvRS0_PT_DpOT0_, funcdef_no=9193, decl_uid=222189, cgraph_uid=5825, symbol_order=6615)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<int> >::construct<int, int> (struct allocator_type & __a, int * __p, int & __args#0)
{
  <bb 2> :
  _1 = std::forward<int> (__args#0);
  __gnu_cxx::new_allocator<int>::construct<int, int> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::construct<int, int> (_ZN9__gnu_cxx13new_allocatorIiE9constructIiJiEEEvPT_DpOT0_, funcdef_no=9943, decl_uid=233806, cgraph_uid=6575, symbol_order=7369)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::construct<int, int> (struct new_allocator * const this, int * __p, int & __args#0)
{
  void * D.241584;
  void * D.241583;
  int D.241585;

  <bb 2> :
  _1 = std::forward<int> (__args#0);
  D.241585 = *_1;
  D.241583 = __p;
  D.241584 = operator new (4, D.241583);
  MEM[(int *)D.241584] = D.241585;
  return;

}



;; Function std::forward<int> (_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE, funcdef_no=9192, decl_uid=222187, cgraph_uid=5824, symbol_order=6614)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
int & std::forward<int> (type & __t)
{
  int & D.248544;

  <bb 2> :
  D.248544 = __t;

  <bb 3> :
<L0>:
  return D.248544;

}



;; Function std::vector<int>::_M_realloc_insert<int> (_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_, funcdef_no=9194, decl_uid=222202, cgraph_uid=5826, symbol_order=6616)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::_M_realloc_insert<int> (struct vector * const this, struct iterator __position, int & __args#0)
{
  int * D.248550;
  const size_type D.248549;
  int * __new_finish;
  int * __new_start;
  const size_type __elems_before;
  int * __old_finish;
  int * __old_start;
  const size_type __len;
  struct iterator D.233817;

  <bb 2> :
  D.248549 = std::vector<int>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.248549;
  __old_start = this->D.167768._M_impl.D.167081._M_start;
  __old_finish = this->D.167768._M_impl.D.167081._M_finish;
  D.233817 = std::vector<int>::begin (this);
  _1 = __gnu_cxx::operator-<int*, std::vector<int> > (&__position, &D.233817);
  __elems_before = (const size_type) _1;
  D.233817 = {CLOBBER};
  _2 = &this->D.167768;
  D.248550 = std::_Vector_base<int, std::allocator<int> >::_M_allocate (_2, __len);
  __new_start = D.248550;
  __new_finish = __new_start;
  _3 = std::forward<int> (__args#0);
  _4 = __elems_before * 4;
  _5 = __new_start + _4;
  _6 = &this->D.167768._M_impl;
  std::allocator_traits<std::allocator<int> >::construct<int, int> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.167768;
  _8 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<int>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 4;
  _11 = &this->D.167768;
  _12 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<int>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.167768;
  _23 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 4;
  _26 = (long unsigned int) _25;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_22, __old_start, _26);
  this->D.167768._M_impl.D.167081._M_start = __new_start;
  this->D.167768._M_impl.D.167081._M_finish = __new_finish;
  _27 = __len * 4;
  _28 = __new_start + _27;
  this->D.167768._M_impl.D.167081._M_end_of_storage = _28;
  return;

}



;; Function std::vector<int>::back (_ZNSt6vectorIiSaIiEE4backEv, funcdef_no=9195, decl_uid=167412, cgraph_uid=5827, symbol_order=6617)

Merging blocks 3 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
value_type & std::vector<int>::back (struct vector * const this)
{
  struct iterator D.233823;
  struct __normal_iterator D.233824;
  value_type & D.248551;

  <bb 2> :
  D.233823 = std::vector<int>::end (this);
  D.233824 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator- (&D.233823, 1);
  D.248551 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator* (&D.233824);

  <bb 3> :
  D.233824 = {CLOBBER};
  D.233823 = {CLOBBER};

  <bb 4> :
<L2>:
  return D.248551;

}



;; Function __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator- (_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEmiEl, funcdef_no=9944, decl_uid=211404, cgraph_uid=6576, symbol_order=7370)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator- (const struct __normal_iterator * const this, difference_type __n)
{
  int * const D.241588;
  struct __normal_iterator D.241589;
  struct __normal_iterator D.248555;

  <bb 2> :
  _1 = this->_M_current;
  __n.20_2 = (long unsigned int) __n;
  _3 = __n.20_2 * 4;
  _4 = -_3;
  _5 = _1 + _4;
  D.241588 = _5;
  __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (&D.241589, &D.241588);
  D.248555 = D.241589;
  D.241589 = {CLOBBER};
  D.241588 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.248555;

}



;; Function __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv, funcdef_no=9945, decl_uid=211378, cgraph_uid=6577, symbol_order=7371)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int & __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator* (const struct __normal_iterator * const this)
{
  int & D.248559;

  <bb 2> :
  D.248559 = this->_M_current;

  <bb 3> :
<L0>:
  return D.248559;

}



;; Function Graph::exist_succ (_ZN5Graph10exist_succEP15basic_block_def, funcdef_no=6169, decl_uid=167788, cgraph_uid=3145, symbol_order=3819)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 4 }
;; 3 succs { 6 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool Graph::exist_succ (struct Graph * const this, struct basic_block_def * bb)
{
  struct iterator i;
  struct iterator D.169118;
  bool retval.21;
  bool D.248561;

  <bb 2> :
  std::_List_iterator<int>::_List_iterator (&i);
  _1 = this->adj;
  _2 = bb->index;
  _3 = (long unsigned int) _2;
  _4 = _3 * 24;
  _5 = _1 + _4;
  i = std::__cxx11::list<int>::begin (_5);
  goto <bb 4>; [INV]

  <bb 3> :
  D.248561 = 1;
  goto <bb 6>; [INV]

  <bb 4> :
  _6 = this->adj;
  _7 = bb->index;
  _8 = (long unsigned int) _7;
  _9 = _8 * 24;
  _10 = _6 + _9;
  D.169118 = std::__cxx11::list<int>::end (_10);
  retval.21 = std::operator!= (&i, &D.169118);
  D.169118 = {CLOBBER};
  if (retval.21 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.248561 = 0;

  <bb 6> :
  i = {CLOBBER};

  <bb 7> :
<L4>:
  return D.248561;

}



;; Function analyze_type (_Z12analyze_typeP9tree_node, funcdef_no=6237, decl_uid=186955, cgraph_uid=3213, symbol_order=3983)

Removing basic block 19
Removing basic block 20
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 6 11
;; 2 succs { 25 19 23 13 3 24 }
;; 3 succs { 4 5 }
;; 4 succs { 12 }
;; 5 succs { 10 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 6 12 }
;; 12 succs { 26 }
;; 13 succs { 14 15 }
;; 14 succs { 18 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 26 }
;; 19 succs { 20 21 }
;; 20 succs { 22 }
;; 21 succs { 22 }
;; 22 succs { 26 }
;; 23 succs { 26 }
;; 24 succs { 26 }
;; 25 succs { 26 }
;; 26 succs { 1 }
void analyze_type (union tree_node * tree_typed)
{
  unsigned int precision;
  union tree_node * type_name;
  union tree_node * args;
  const char * iftmp.22;

  <bb 2> :
  _1 = tree_typed->base.code;
  _2 = (int) _1;
  switch (_2) <default: <L27> [INV], case 8: <L19> [INV], case 16: <L25> [INV], case 17: <L11> [INV], case 21: <L0> [INV], case 36: <L26> [INV]>

  <bb 3> :
<L0>:
  printf ("receives ");
  args = tree_typed->type_non_common.values;
  if (args == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  printf ("nothing ");
  goto <bb 12>; [INV]

  <bb 5> :
  goto <bb 10>; [INV]

  <bb 6> :
  _3 = args->list.value;
  analyze_type (_3);
  _4 = args->common.chain;
  if (_4 != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  printf ("and ");
  goto <bb 9>; [INV]

  <bb 8> :
  printf ("... ");

  <bb 9> :
  args = args->common.chain;

  <bb 10> :
  if (args != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _5 = args->list.value;
  _6 = global_trees[61];
  if (_5 != _6)
    goto <bb 6>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  printf ("then returns ");
  _7 = tree_typed->typed.type;
  analyze_type (_7);
  goto <bb 26>; [INV]

  <bb 13> :
<L11>:
  printf ("named ");
  type_name = tree_typed->type_common.name;
  _8 = type_name->base.code;
  if (_8 == 1)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _9 = type_name->identifier.id.str;
  printf ("%s ", _9);
  goto <bb 18>; [INV]

  <bb 15> :
  _10 = type_name->base.code;
  if (_10 == 39)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  _11 = type_name->decl_minimal.name;
  _12 = _11->identifier.id.str;
  printf ("%s ", _12);
  goto <bb 18>; [INV]

  <bb 17> :
  printf ("**** UNRECOGNIZED TYPE NODE ****");

  <bb 18> :
  goto <bb 26>; [INV]

  <bb 19> :
<L19>:
  _16 = tree_typed->type_common.precision;
  precision = (unsigned int) _16;
  _17 = BIT_FIELD_REF <tree_typed->base.u.bits, 8, 8>;
  _18 = _17 & 1;
  if (_18 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  iftmp.22 = "unsigned";
  goto <bb 22>; [INV]

  <bb 21> :
  iftmp.22 = "signed";

  <bb 22> :
  printf ("%s integer of %d bits ", iftmp.22, precision);
  goto <bb 26>; [INV]

  <bb 23> :
<L25>:
  printf ("of ");
  _19 = tree_typed->typed.type;
  analyze_type (_19);
  goto <bb 26>; [INV]

  <bb 24> :
<L26>:
  printf ("oSDAAAAAf ");
  _20 = tree_typed->typed.type;
  analyze_type (_20);
  goto <bb 26>; [INV]

  <bb 25> :
<L27>:

  <bb 26> :
  return;

}



;; Function bb_in_loop_p (_Z12bb_in_loop_pP15basic_block_def, funcdef_no=6238, decl_uid=187094, cgraph_uid=3214, symbol_order=3984)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool bb_in_loop_p (struct basic_block_def * bb)
{
  bool D.248583;

  <bb 2> :
  _1 = bb->loop_father;
  _2 = _1->header;
  _3 = _2->index;
  D.248583 = _3 != 0;

  <bb 3> :
<L0>:
  return D.248583;

}



;; Function bb_in_branch_p (_Z14bb_in_branch_pP6gimple, funcdef_no=6239, decl_uid=187097, cgraph_uid=3215, symbol_order=3985)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool bb_in_branch_p (struct gimple * stmt)
{
  bool D.248587;
  bool D.248585;

  <bb 2> :
  cfun.23_1 = cfun;
  _2 = cfun.23_1->cfg;
  _3 = _2->x_exit_block_ptr;
  _4 = _3->prev_bb;
  _5 = stmt->bb;
  D.248587 = dominated_by_p (1, _5, _4);
  _6 = D.248587;
  D.248585 = ~_6;

  <bb 3> :
<L0>:
  return D.248585;

}



;; Function init_table (_Z10init_tablev, funcdef_no=6240, decl_uid=187099, cgraph_uid=3216, symbol_order=3986)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void init_table ()
{
  <bb 2> :
  start1.target = 0B;
  start1.next = 0B;
  POINTER_NOT_EXIST.24_1 = POINTER_NOT_EXIST;
  POINTER_NOT_EXIST.25_2 = (int) POINTER_NOT_EXIST.24_1;
  start1.state = POINTER_NOT_EXIST.25_2;
  ptable = &start1;
  start2.target = 0B;
  start2.next = 0B;
  POINTER_NOT_EXIST.26_3 = POINTER_NOT_EXIST;
  POINTER_NOT_EXIST.27_4 = (int) POINTER_NOT_EXIST.26_3;
  start2.state = POINTER_NOT_EXIST.27_4;
  ftable = &start2;
  return;

}



;; Function Location_b (_Z10Location_bP6gimpleS0_P15basic_block_def, funcdef_no=6241, decl_uid=187104, cgraph_uid=3217, symbol_order=3987)

Merging blocks 9 and 11
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 5 3
;; 2 succs { 8 }
;; 3 succs { 4 5 }
;; 4 succs { 10 }
;; 5 succs { 6 7 }
;; 6 succs { 10 }
;; 7 succs { 8 }
;; 8 succs { 3 9 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 1 }
bool Location_b (struct gimple * a, struct gimple * b, struct basic_block_def * bb)
{
  struct gimple_stmt_iterator gsi;
  struct gimple * gc;
  bool retval.28;
  bool D.248590;

  <bb 2> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 8>; [INV]

  <bb 3> :
  gc = gsi_stmt (gsi);
  if (gc == a)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.248590 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 5> :
  if (gc == b)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  D.248590 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 7> :
  gsi_next (&gsi);

  <bb 8> :
  _1 = gsi_end_p (gsi);
  retval.28 = ~_1;
  if (retval.28 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  gsi = {CLOBBER};
  D.248590 = 0;
  goto <bb 11>; [INV]

  <bb 10> :
  gsi = {CLOBBER};

  <bb 11> :
<L9>:
  return D.248590;

}



;; Function gsi_start_bb (_ZL12gsi_start_bbP15basic_block_def, funcdef_no=2478, decl_uid=94526, cgraph_uid=1615, symbol_order=1775)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple_stmt_iterator gsi_start_bb (struct basic_block_def * bb)
{
  struct gimple * * seq;
  struct gimple_stmt_iterator i [value-expr: <retval>];

  <bb 2> :
  seq = bb_seq_addr (bb);
  _1 = *seq;
  _2 = gimple_seq_first (_1);
  <retval>.ptr = _2;
  <retval>.seq = seq;
  <retval>.bb = bb;

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function bb_seq_addr (_ZL11bb_seq_addrP15basic_block_def, funcdef_no=1994, decl_uid=92233, cgraph_uid=1131, symbol_order=1291)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct gimple * * bb_seq_addr (struct basic_block_def * bb)
{
  struct gimple * * iftmp.29;
  struct gimple * * D.248599;

  <bb 2> :
  _1 = bb->flags;
  _2 = _1 & 512;
  if (_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.29 = &bb->il.gimple.seq;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.29 = 0B;

  <bb 5> :
  D.248599 = iftmp.29;

  <bb 6> :
<L3>:
  return D.248599;

}



;; Function gimple_seq_first (_ZL16gimple_seq_firstP6gimple, funcdef_no=1984, decl_uid=92193, cgraph_uid=1121, symbol_order=1281)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * gimple_seq_first (struct gimple * s)
{
  struct gimple * D.248605;

  <bb 2> :
  D.248605 = s;

  <bb 3> :
<L0>:
  return D.248605;

}



;; Function gsi_stmt (_ZL8gsi_stmt20gimple_stmt_iterator, funcdef_no=2485, decl_uid=94558, cgraph_uid=1622, symbol_order=1782)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * gsi_stmt (struct gimple_stmt_iterator i)
{
  struct gimple * D.248607;

  <bb 2> :
  D.248607 = i.ptr;

  <bb 3> :
<L0>:
  return D.248607;

}



;; Function gsi_next (_ZL8gsi_nextP20gimple_stmt_iterator, funcdef_no=2483, decl_uid=94551, cgraph_uid=1620, symbol_order=1780)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void gsi_next (struct gimple_stmt_iterator * i)
{
  <bb 2> :
  _1 = i->ptr;
  _2 = _1->next;
  i->ptr = _2;
  return;

}



;; Function gsi_end_p (_ZL9gsi_end_p20gimple_stmt_iterator, funcdef_no=2481, decl_uid=94545, cgraph_uid=1618, symbol_order=1778)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool gsi_end_p (struct gimple_stmt_iterator i)
{
  bool D.248609;

  <bb 2> :
  _1 = i.ptr;
  D.248609 = _1 == 0B;

  <bb 3> :
<L0>:
  return D.248609;

}



;; Function Location_b2 (_Z11Location_b2P6gimpleS0_P9tree_node, funcdef_no=6242, decl_uid=187118, cgraph_uid=3218, symbol_order=3988)

Merging blocks 18 and 20
Removing basic block 22
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
;;
;; Loop 1
;;  header 23, latch 22
;;  depth 1, outer 0
;;  nodes: 23 22 4 6 21 7 20 8 18 17 9 16 13 10 5 3
;;
;; Loop 2
;;  header 20, latch 18
;;  depth 2, outer 1
;;  nodes: 20 18 17 9 16 13 10
;;
;; Loop 3
;;  header 17, latch 16
;;  depth 3, outer 2
;;  nodes: 17 16 13 10
;; 2 succs { 23 }
;; 3 succs { 4 5 }
;; 4 succs { 22 }
;; 5 succs { 6 7 }
;; 6 succs { 22 }
;; 7 succs { 8 21 }
;; 8 succs { 20 }
;; 9 succs { 17 }
;; 10 succs { 11 13 }
;; 11 succs { 26 12 }
;; 12 succs { 19 }
;; 13 succs { 14 16 }
;; 14 succs { 26 15 }
;; 15 succs { 19 }
;; 16 succs { 17 }
;; 17 succs { 10 18 }
;; 18 succs { 20 }
;; 19 succs { 25 }
;; 20 succs { 9 21 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 3 24 }
;; 24 succs { 25 }
;; 25 succs { 1 }
;; 26 succs { }
bool Location_b2 (struct gimple * a, struct gimple * b, union tree_node * function_tree)
{
  struct cgraph_node * D.248631;
  bool D.248627;
  struct cgraph_node * D.248626;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct basic_block_def * bb;
  struct cgraph_node * node;
  bool retval.35;
  bool D.248620;
  bool retval.31;

  <bb 2> :
  symtab.30_1 = symtab;
  D.248626 = symbol_table::first_defined_function (symtab.30_1);
  node = D.248626;
  goto <bb 23>; [INV]

  <bb 3> :
  _2 = node->D.97512.decl;
  D.248627 = gimple_has_body_p (_2);
  _3 = D.248627;
  retval.31 = ~_3;
  if (retval.31 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by continue predictor.
  goto <bb 22>; [INV]

  <bb 5> :
  _4 = node->D.97512.decl;
  _5 = _4->function_decl.f;
  push_cfun (_5);
  cfun.32_6 = cfun;
  if (cfun.32_6 == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  pop_cfun ();
  // predicted unlikely by continue predictor.
  goto <bb 22>; [INV]

  <bb 7> :
  cfun.33_7 = cfun;
  _8 = cfun.33_7->decl;
  if (function_tree == _8)
    goto <bb 8>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 8> :
  calculate_dominance_info (1);
  cfun.34_9 = cfun;
  _10 = cfun.34_9->cfg;
  _11 = _10->x_entry_block_ptr;
  bb = _11->next_bb;
  goto <bb 20>; [INV]

  <bb 9> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 17>; [INV]

  <bb 10> :
  gc = gsi_stmt (gsi);
  if (gc == a)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  pop_cfun ();

  <bb 12> :
  D.248620 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 13> :
  if (gc == b)
    goto <bb 14>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 14> :
  pop_cfun ();

  <bb 15> :
  D.248620 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 16> :
  gsi_next (&gsi);

  <bb 17> :
  _12 = gsi_end_p (gsi);
  retval.35 = ~_12;
  if (retval.35 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  gsi = {CLOBBER};
  bb = bb->next_bb;
  goto <bb 20>; [INV]

  <bb 19> :
  gsi = {CLOBBER};
  goto <bb 25>; [INV]

  <bb 20> :
  cfun.36_13 = cfun;
  _14 = cfun.36_13->cfg;
  _15 = _14->x_exit_block_ptr;
  if (bb != _15)
    goto <bb 9>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 21> :
  pop_cfun ();

  <bb 22> :
  symtab.37_16 = symtab;
  D.248631 = symbol_table::next_defined_function (symtab.37_16, node);
  node = D.248631;

  <bb 23> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  D.248620 = 0;

  <bb 25> :
<L23>:
  return D.248620;

  <bb 26> :
<L24>:
  gsi = {CLOBBER};
  resx 1

}



;; Function symbol_table::first_defined_function (_ZN12symbol_table22first_defined_functionEv, funcdef_no=2571, decl_uid=98657, cgraph_uid=1708, symbol_order=1868)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 3 4
;; 2 succs { 7 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 9 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct cgraph_node * symbol_table::first_defined_function (struct symbol_table * const this)
{
  struct cgraph_node * D.248638;
  struct cgraph_node * cn;
  struct symtab_node * node;
  struct cgraph_node * D.248636;

  <bb 2> :
  node = this->nodes;
  goto <bb 7>; [INV]

  <bb 3> :
  D.248638 = dyn_cast<cgraph_node*, symtab_node> (node);
  cn = D.248638;
  if (cn != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _1 = BIT_FIELD_REF <cn->D.97512, 8, 16>;
  _2 = _1 & 1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.248636 = cn;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  node = node->next;

  <bb 7> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  D.248636 = 0B;

  <bb 9> :
<L7>:
  return D.248636;

}



;; Function dyn_cast<cgraph_node*, symtab_node> (_Z8dyn_castIP11cgraph_node11symtab_nodeET_PT0_, funcdef_no=7092, decl_uid=97635, cgraph_uid=3724, symbol_order=4507)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct cgraph_node * dyn_cast<cgraph_node*, symtab_node> (struct symtab_node * p)
{
  struct cgraph_node * D.248642;
  bool retval.38;

  <bb 2> :
  retval.38 = is_a<cgraph_node*, symtab_node> (p);
  if (retval.38 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.248642 = reinterpret_is_a_helper<cgraph_node*>::cast<symtab_node> (p);
  goto <bb 5>; [INV]

  <bb 4> :
  D.248642 = 0B;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
<L2>:
  return D.248642;

}



;; Function is_a<cgraph_node*, symtab_node> (_Z4is_aIP11cgraph_node11symtab_nodeEbPT0_, funcdef_no=7101, decl_uid=99519, cgraph_uid=3733, symbol_order=4516)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool is_a<cgraph_node*, symtab_node> (struct symtab_node * p)
{
  bool D.248644;

  <bb 2> :
  D.248644 = is_a_helper<cgraph_node*>::test<symtab_node> (p);

  <bb 3> :
<L0>:
  return D.248644;

}



;; Function is_a_helper<cgraph_node*>::test<symtab_node> (_ZN11is_a_helperIP11cgraph_nodeE4testI11symtab_nodeEEbPT_, funcdef_no=2532, decl_uid=98449, cgraph_uid=1669, symbol_order=1829)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool is_a_helper<cgraph_node*>::test<symtab_node> (struct symtab_node * p)
{
  bool iftmp.39;
  bool D.248646;

  <bb 2> :
  if (p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _1 = p->type;
  if (_1 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.39 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.39 = 0;

  <bb 6> :
  D.248646 = iftmp.39;

  <bb 7> :
<L4>:
  return D.248646;

}



;; Function reinterpret_is_a_helper<cgraph_node*>::cast<symtab_node> (_ZN23reinterpret_is_a_helperIP11cgraph_nodeE4castI11symtab_nodeEES1_PT_, funcdef_no=8118, decl_uid=207388, cgraph_uid=4750, symbol_order=5536)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct cgraph_node * reinterpret_is_a_helper<cgraph_node*>::cast<symtab_node> (struct symtab_node * p)
{
  struct cgraph_node * D.248653;

  <bb 2> :
  D.248653 = p;

  <bb 3> :
<L0>:
  return D.248653;

}



;; Function symbol_table::next_defined_function (_ZN12symbol_table21next_defined_functionEP11cgraph_node, funcdef_no=2572, decl_uid=98661, cgraph_uid=1709, symbol_order=1869)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 3 4
;; 2 succs { 7 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 9 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct cgraph_node * symbol_table::next_defined_function (struct symbol_table * const this, struct cgraph_node * node)
{
  struct cgraph_node * D.248661;
  struct cgraph_node * cn1;
  struct symtab_node * node1;
  struct cgraph_node * D.248659;

  <bb 2> :
  node1 = node->D.97512.next;
  goto <bb 7>; [INV]

  <bb 3> :
  D.248661 = dyn_cast<cgraph_node*, symtab_node> (node1);
  cn1 = D.248661;
  if (cn1 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _1 = BIT_FIELD_REF <cn1->D.97512, 8, 16>;
  _2 = _1 & 1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.248659 = cn1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  node1 = node1->next;

  <bb 7> :
  if (node1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  D.248659 = 0B;

  <bb 9> :
<L7>:
  return D.248659;

}



;; Function Location_b3 (_Z11Location_b3P6gimpleS0_P9tree_node, funcdef_no=6243, decl_uid=187142, cgraph_uid=3219, symbol_order=3989)

Removing basic block 16
Merging blocks 18 and 20
Removing basic block 22
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
;;
;; Loop 1
;;  header 22, latch 21
;;  depth 1, outer 0
;;  nodes: 22 21 4 6 20 7 19 8 17 16 9 5 3
;;
;; Loop 2
;;  header 19, latch 17
;;  depth 2, outer 1
;;  nodes: 19 17 16 9
;; 2 succs { 22 }
;; 3 succs { 4 5 }
;; 4 succs { 21 }
;; 5 succs { 6 7 }
;; 6 succs { 21 }
;; 7 succs { 8 20 }
;; 8 succs { 19 }
;; 9 succs { 16 }
;; 10 succs { 25 11 }
;; 11 succs { 12 14 }
;; 12 succs { 25 13 }
;; 13 succs { 18 }
;; 14 succs { 25 15 }
;; 15 succs { 18 }
;; 16 succs { 10 17 }
;; 17 succs { 19 }
;; 18 succs { 24 }
;; 19 succs { 9 20 }
;; 20 succs { 21 }
;; 21 succs { 22 }
;; 22 succs { 3 23 }
;; 23 succs { 24 }
;; 24 succs { 1 }
;; 25 succs { }
bool Location_b3 (struct gimple * a, struct gimple * b, union tree_node * function_tree)
{
  struct cgraph_node * D.248682;
  bool D.248678;
  bool D.248677;
  struct cgraph_node * D.248676;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct basic_block_def * bb;
  struct cgraph_node * node;
  bool retval.46;
  bool D.248672;
  bool retval.45;
  bool retval.41;

  <bb 2> :
  symtab.40_1 = symtab;
  D.248676 = symbol_table::first_defined_function (symtab.40_1);
  node = D.248676;
  goto <bb 22>; [INV]

  <bb 3> :
  _2 = node->D.97512.decl;
  D.248677 = gimple_has_body_p (_2);
  _3 = D.248677;
  retval.41 = ~_3;
  if (retval.41 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by continue predictor.
  goto <bb 21>; [INV]

  <bb 5> :
  _4 = node->D.97512.decl;
  _5 = _4->function_decl.f;
  push_cfun (_5);
  cfun.42_6 = cfun;
  if (cfun.42_6 == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  pop_cfun ();
  // predicted unlikely by continue predictor.
  goto <bb 21>; [INV]

  <bb 7> :
  cfun.43_7 = cfun;
  _8 = cfun.43_7->decl;
  if (function_tree == _8)
    goto <bb 8>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 8> :
  calculate_dominance_info (1);
  cfun.44_9 = cfun;
  _10 = cfun.44_9->cfg;
  _11 = _10->x_entry_block_ptr;
  bb = _11->next_bb;
  goto <bb 19>; [INV]

  <bb 9> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 16>; [INV]

  <bb 10> :
  gc = gsi_stmt (gsi);
  _12 = b->bb;
  _13 = a->bb;
  D.248678 = dominated_by_p (1, _13, _12);

  <bb 11> :
  retval.45 = D.248678;
  if (retval.45 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  pop_cfun ();

  <bb 13> :
  D.248672 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 18>; [INV]

  <bb 14> :
  pop_cfun ();

  <bb 15> :
  D.248672 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 18>; [INV]

  <bb 16> :
  _14 = gsi_end_p (gsi);
  retval.46 = ~_14;
  if (retval.46 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  gsi = {CLOBBER};
  bb = bb->next_bb;
  goto <bb 19>; [INV]

  <bb 18> :
  gsi = {CLOBBER};
  goto <bb 24>; [INV]

  <bb 19> :
  cfun.47_15 = cfun;
  _16 = cfun.47_15->cfg;
  _17 = _16->x_exit_block_ptr;
  if (bb != _17)
    goto <bb 9>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 20> :
  pop_cfun ();

  <bb 21> :
  symtab.48_18 = symtab;
  D.248682 = symbol_table::next_defined_function (symtab.48_18, node);
  node = D.248682;

  <bb 22> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 23> :
  D.248672 = 0;

  <bb 24> :
<L21>:
  return D.248672;

  <bb 25> :
<L22>:
  gsi = {CLOBBER};
  resx 1

}



;; Function SDBMHash (_Z8SDBMHashPc, funcdef_no=6244, decl_uid=186951, cgraph_uid=3220, symbol_order=3990)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
unsigned int SDBMHash (char * str)
{
  unsigned int hash;
  unsigned int D.248683;

  <bb 2> :
  _1 = rand ();
  _2 = _1 % 10;
  hash = (unsigned int) _2;
  goto <bb 4>; [INV]

  <bb 3> :
  str.49_3 = str;
  str = str.49_3 + 1;
  _4 = *str.49_3;
  _5 = (unsigned int) _4;
  _6 = hash << 6;
  _7 = _5 + _6;
  _8 = hash << 16;
  _9 = _7 + _8;
  hash = _9 - hash;

  <bb 4> :
  _10 = *str;
  if (_10 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.248683 = hash & 2147483647;

  <bb 6> :
<L3>:
  return D.248683;

}



;; Function dump_points_to_solution2 (_Z24dump_points_to_solution2P8_IO_FILEP11pt_solution, funcdef_no=6245, decl_uid=186958, cgraph_uid=3221, symbol_order=3992)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 1 }
int dump_points_to_solution2 (struct FILE * file, struct pt_solution * pt)
{
  int D.248703;

  <bb 2> :
  _1 = BIT_FIELD_REF <*pt, 8, 0>;
  _2 = _1 & 1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __builtin_fwrite (", points-to anything", 1, 20, file);

  <bb 4> :
  _3 = BIT_FIELD_REF <*pt, 8, 0>;
  _4 = _3 & 2;
  if (_4 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  __builtin_fwrite (", points-to non-local", 1, 21, file);

  <bb 6> :
  _5 = BIT_FIELD_REF <*pt, 8, 0>;
  _6 = _5 & 4;
  if (_6 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  __builtin_fwrite (", points-to escaped", 1, 19, file);

  <bb 8> :
  _7 = BIT_FIELD_REF <*pt, 8, 0>;
  _8 = _7 & 8;
  if (_8 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  __builtin_fwrite (", points-to unit escaped", 1, 24, file);

  <bb 10> :
  _9 = BIT_FIELD_REF <*pt, 8, 0>;
  _10 = _9 & 16;
  if (_10 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  __builtin_fwrite (", points-to NULL", 1, 16, file);

  <bb 12> :
  _11 = pt->vars;
  if (_11 != 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  __builtin_fwrite (", points-to vars: ", 1, 18, file);

  <bb 14> :
  D.248703 = 1;

  <bb 15> :
<L18>:
  return D.248703;

}



;; Function printfBasicblock (_Z16printfBasicblockv, funcdef_no=6246, decl_uid=187041, cgraph_uid=3225, symbol_order=3996)

Removing basic block 16
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
;;
;; Loop 1
;;  header 30, latch 29
;;  depth 1, outer 0
;;  nodes: 30 29 28 7 12 27 26 17 25 24 22 23 21 20 19 18 16 14 15 13 10 9 8 6 5 11
;;
;; Loop 2
;;  header 26, latch 25
;;  depth 2, outer 1
;;  nodes: 26 25 24 22 23 21 20 19 18
;;
;; Loop 3
;;  header 24, latch 23
;;  depth 3, outer 2
;;  nodes: 24 23
;; 2 succs { 33 3 }
;; 3 succs { 33 4 }
;; 4 succs { 30 }
;; 5 succs { 33 6 }
;; 6 succs { 7 8 }
;; 7 succs { 28 }
;; 8 succs { 33 9 }
;; 9 succs { 33 10 }
;; 10 succs { 11 13 }
;; 11 succs { 33 12 }
;; 12 succs { 28 }
;; 13 succs { 33 14 }
;; 14 succs { 15 16 }
;; 15 succs { 33 16 }
;; 16 succs { 33 17 }
;; 17 succs { 26 }
;; 18 succs { 33 19 }
;; 19 succs { 33 20 }
;; 20 succs { 33 21 }
;; 21 succs { 33 22 }
;; 22 succs { 24 }
;; 23 succs { 24 }
;; 24 succs { 23 25 }
;; 25 succs { 26 }
;; 26 succs { 18 27 }
;; 27 succs { 33 28 }
;; 28 succs { 33 29 }
;; 29 succs { 30 }
;; 30 succs { 5 31 }
;; 31 succs { 33 32 }
;; 32 succs { 1 }
;; 33 succs { }
void printfBasicblock ()
{
  struct cgraph_node * D.248719;
  bool D.248718;
  const char * D.248717;
  struct function * D.248716;
  bool D.248715;
  struct cgraph_node * D.248714;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  const char * name;
  struct cgraph_node * node;
  struct basic_block_def * bb;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;
  bool retval.60;
  bool retval.52;

  <bb 2> :
  stderr.50_1 = stderr;
  __builtin_fwrite ("\n===============Print ALL GIMPLE IR=================\n", 1, 53, stderr.50_1);

  <bb 3> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  symtab.51_2 = symtab;
  D.248714 = symbol_table::first_function (symtab.51_2);

  <bb 4> :
  node = D.248714;
  goto <bb 30>; [INV]

  <bb 5> :
  _3 = node->D.97512.decl;
  D.248715 = gimple_has_body_p (_3);

  <bb 6> :
  _4 = D.248715;
  retval.52 = ~_4;
  if (retval.52 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by continue predictor.
  goto <bb 28>; [INV]

  <bb 8> :
  D.248716 = cgraph_node::get_fun (node);

  <bb 9> :
  _5 = D.248716;
  push_cfun (_5);

  <bb 10> :
  cfun.53_6 = cfun;
  if (cfun.53_6 == 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  pop_cfun ();

  <bb 12> :
  // predicted unlikely by continue predictor.
  goto <bb 28>; [INV]

  <bb 13> :
  cfun.54_7 = cfun;
  _8 = cfun.54_7->decl;
  D.248717 = get_name (_8);

  <bb 14> :
  name = D.248717;
  if (name != 0B)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  stderr.55_9 = stderr;
  fprintf (stderr.55_9, "=======Mapping node_fun:%s=========\n", name);

  <bb 16> :
  calculate_dominance_info (1);

  <bb 17> :
  cfun.56_10 = cfun;
  _11 = cfun.56_10->cfg;
  _12 = _11->x_entry_block_ptr;
  bb = _12->next_bb;
  goto <bb 26>; [INV]

  <bb 18> :
  D.248718 = bb_in_loop_p (bb);

  <bb 19> :
  _13 = D.248718;
  _14 = (int) _13;
  stderr.57_15 = stderr;
  fprintf (stderr.57_15, "=======is loop:%d=========\n", _14);

  <bb 20> :
  _16 = bb->index;
  stderr.58_17 = stderr;
  fprintf (stderr.58_17, "\n bb index %d \n", _16);

  <bb 21> :
  debug_bb (bb);

  <bb 22> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 24>; [INV]

  <bb 23> :
  gc = gsi_stmt (gsi);
  gimplestmt_count.59_18 = gimplestmt_count;
  _19 = gimplestmt_count.59_18 + 1;
  gimplestmt_count = _19;
  gsi_next (&gsi);

  <bb 24> :
  _20 = gsi_end_p (gsi);
  retval.60 = ~_20;
  if (retval.60 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 25> :
  gsi = {CLOBBER};
  bb = bb->next_bb;

  <bb 26> :
  cfun.61_21 = cfun;
  _22 = cfun.61_21->cfg;
  _23 = _22->x_exit_block_ptr;
  if (bb != _23)
    goto <bb 18>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 27> :
  pop_cfun ();

  <bb 28> :
  symtab.62_24 = symtab;
  D.248719 = symbol_table::next_function (symtab.62_24, node);

  <bb 29> :
  node = D.248719;

  <bb 30> :
  if (node != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 31> :
  stderr.63_25 = stderr;
  __builtin_fwrite ("\n===============Print ALL GIMPLE IR=================\n", 1, 53, stderr.63_25);

  <bb 32> :
  start = {CLOBBER};
  return;

  <bb 33> :
<L17>:
  start = {CLOBBER};
  resx 1

}



;; Function gimple_array::gimple_array (_ZN12gimple_arrayC2Ev, funcdef_no=6248, decl_uid=187183, cgraph_uid=3223, symbol_order=3994)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void gimple_array::gimple_array (struct gimple_array * const this)
{
  <bb 2> :
  this->size = 0;
  return;

}



;; Function symbol_table::first_function (_ZN12symbol_table14first_functionEv, funcdef_no=2573, decl_uid=98664, cgraph_uid=1710, symbol_order=1870)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
struct cgraph_node * symbol_table::first_function (struct symbol_table * const this)
{
  struct cgraph_node * D.248725;
  struct cgraph_node * cn;
  struct symtab_node * node;
  struct cgraph_node * D.248723;

  <bb 2> :
  node = this->nodes;
  goto <bb 6>; [INV]

  <bb 3> :
  D.248725 = dyn_cast<cgraph_node*, symtab_node> (node);
  cn = D.248725;
  if (cn != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.248723 = cn;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  node = node->next;

  <bb 6> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  D.248723 = 0B;

  <bb 8> :
<L5>:
  return D.248723;

}



;; Function symbol_table::next_function (_ZN12symbol_table13next_functionEP11cgraph_node, funcdef_no=2574, decl_uid=98668, cgraph_uid=1711, symbol_order=1871)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
struct cgraph_node * symbol_table::next_function (struct symbol_table * const this, struct cgraph_node * node)
{
  struct cgraph_node * D.248730;
  struct cgraph_node * cn1;
  struct symtab_node * node1;
  struct cgraph_node * D.248728;

  <bb 2> :
  node1 = node->D.97512.next;
  goto <bb 6>; [INV]

  <bb 3> :
  D.248730 = dyn_cast<cgraph_node*, symtab_node> (node1);
  cn1 = D.248730;
  if (cn1 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.248728 = cn1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  node1 = node1->next;

  <bb 6> :
  if (node1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  D.248728 = 0B;

  <bb 8> :
<L5>:
  return D.248728;

}



;; Function print_function_path (_Z19print_function_pathPSt6vectorI11return_typeSaIS0_EE, funcdef_no=6250, decl_uid=187239, cgraph_uid=3226, symbol_order=3997)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void print_function_path (struct vector * path)
{
  int i;
  bool retval.66;

  <bb 2> :
  stderr.64_1 = stderr;
  __builtin_fwrite ("[\n", 1, 2, stderr.64_1);
  i = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _2 = (long unsigned int) i;
  _3 = std::vector<return_type>::operator[] (path, _2);
  _4 = _3->stmt;
  debug (_4);
  stderr.65_5 = stderr;
  __builtin_fwrite (",\n", 1, 2, stderr.65_5);
  i = i + 1;

  <bb 4> :
  _6 = (long unsigned int) i;
  _7 = std::vector<return_type>::size (path);
  retval.66 = _6 < _7;
  if (retval.66 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  stderr.67_8 = stderr;
  __builtin_fwrite ("]\n", 1, 2, stderr.67_8);
  return;

}



;; Function std::vector<return_type>::operator[] (_ZNSt6vectorI11return_typeSaIS0_EEixEm, funcdef_no=7615, decl_uid=174211, cgraph_uid=4247, symbol_order=5033)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<return_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.248732;

  <bb 2> :
  _1 = this->D.174558._M_impl.D.173903._M_start;
  _2 = __n * 24;
  D.248732 = _1 + _2;

  <bb 3> :
<L0>:
  return D.248732;

}



;; Function std::vector<return_type>::size (_ZNKSt6vectorI11return_typeSaIS0_EE4sizeEv, funcdef_no=7614, decl_uid=174191, cgraph_uid=4246, symbol_order=5032)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<return_type>::size (const struct vector * const this)
{
  size_type D.248734;

  <bb 2> :
  _1 = this->D.174558._M_impl.D.173903._M_finish;
  _2 = this->D.174558._M_impl.D.173903._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.248734 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.248734;

}



;; Function print_function_return2 (_Z22print_function_return2P9tree_node, funcdef_no=6251, decl_uid=187060, cgraph_uid=3233, symbol_order=4004)

Merging blocks 4 and 17
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 12 11
;; 2 succs { 20 3 }
;; 3 succs { 4 5 }
;; 4 succs { 17 }
;; 5 succs { 20 6 }
;; 6 succs { 20 7 }
;; 7 succs { 19 8 }
;; 8 succs { 18 9 }
;; 9 succs { 18 10 }
;; 10 succs { 14 }
;; 11 succs { 18 12 }
;; 12 succs { 18 13 }
;; 13 succs { 14 }
;; 14 succs { 11 15 }
;; 15 succs { 18 16 }
;; 16 succs { 17 }
;; 17 succs { 1 }
;; 18 succs { 19 }
;; 19 succs { 20 }
;; 20 succs { }
void print_function_return2 (union tree_node * function_tree)
{
  struct function_return_array * D.248742;
  struct function_return_array * D.248741;
  int i;
  struct vector ret_type_array;
  struct function_return_array fun_array;
  bool retval.75;
  bool retval.68;

  <bb 2> :
  function_return_collect.69_1 = function_return_collect;
  D.248741 = hash_map<tree_node*, function_return_array>::get (function_return_collect.69_1, &function_tree);

  <bb 3> :
  _2 = D.248741;
  retval.68 = _2 == 0B;
  if (retval.68 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  goto <bb 17>; [INV]

  <bb 5> :
  function_return_collect.70_3 = function_return_collect;
  D.248742 = hash_map<tree_node*, function_return_array>::get (function_return_collect.70_3, &function_tree);

  <bb 6> :
  _4 = D.248742;
  function_return_array::function_return_array (&fun_array, _4);

  <bb 7> :
  std::vector<return_type>::vector (&ret_type_array, &fun_array.return_type_array);

  <bb 8> :
  _5 = std::vector<return_type>::size (&ret_type_array);
  function_tree.71_6 = function_tree;
  stderr.72_7 = stderr;
  fprintf (stderr.72_7, "=======print_function_return %d   %d========\n", function_tree.71_6, _5);

  <bb 9> :
  stderr.73_8 = stderr;
  __builtin_fwrite ("[\n", 1, 2, stderr.73_8);

  <bb 10> :
  i = 0;
  goto <bb 14>; [INV]

  <bb 11> :
  _9 = (long unsigned int) i;
  _10 = std::vector<return_type>::operator[] (&ret_type_array, _9);
  _11 = _10->stmt;
  debug (_11);

  <bb 12> :
  stderr.74_12 = stderr;
  __builtin_fwrite (",\n", 1, 2, stderr.74_12);

  <bb 13> :
  i = i + 1;

  <bb 14> :
  _13 = (long unsigned int) i;
  _14 = std::vector<return_type>::size (&ret_type_array);
  retval.75 = _13 < _14;
  if (retval.75 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  stderr.76_15 = stderr;
  __builtin_fwrite ("]\n", 1, 2, stderr.76_15);

  <bb 16> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};

  <bb 17> :
<L7>:
  return;

  <bb 18> :
<L8>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 3

  <bb 19> :
<L9>:
  function_return_array::~function_return_array (&fun_array);
  resx 2

  <bb 20> :
<L10>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  resx 1

}



;; Function hash_map<tree_node*, function_return_array>::get (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7616, decl_uid=189601, cgraph_uid=4248, symbol_order=5034)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_return_array * hash_map<tree_node*, function_return_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.248756;
  struct hash_entry & D.248755;
  unsigned int D.248754;
  struct hash_entry & e;
  struct function_return_array * iftmp.77;
  struct function_return_array * D.248748;

  <bb 2> :
  _1 = &this->m_table;
  D.248754 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::hash (k);
  _2 = D.248754;
  D.248755 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.248755;
  D.248756 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_empty<hash_map<tree_node*, function_return_array>::hash_entry> (e);
  _3 = D.248756;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.77 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.77 = &e->m_value;

  <bb 5> :
  D.248748 = iftmp.77;

  <bb 6> :
<L3>:
  return D.248748;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE4hashERKS2_, funcdef_no=8453, decl_uid=189557, cgraph_uid=5085, symbol_order=5875)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::hash (union tree_node * const & h)
{
  hashval_t D.248757;

  <bb 2> :
  D.248757 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.248757;

}



;; Function pointer_hash<tree_node>::hash (_ZN12pointer_hashI9tree_nodeE4hashERKPS0_, funcdef_no=9240, decl_uid=85298, cgraph_uid=5872, symbol_order=6662)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t pointer_hash<tree_node>::hash (union tree_node * const & candidate)
{
  hashval_t D.248759;

  <bb 2> :
  _1 = *candidate;
  _2 = (long int) _1;
  _3 = _2 >> 3;
  D.248759 = (hashval_t) _3;

  <bb 3> :
<L0>:
  return D.248759;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8454, decl_uid=189744, cgraph_uid=5086, symbol_order=5876)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.248793;
  bool D.248792;
  bool D.248791;
  bool D.248790;
  bool D.248789;
  bool D.248788;
  struct value_type * D.248787;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.81;
  bool retval.80;
  struct value_type & D.248773;
  bool iftmp.79;
  bool retval.78;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 40;
  entry = _5 + _7;
  D.248788 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.248788;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.248789 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.248789;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.248790 = hash_map<tree_node*, function_return_array>::hash_entry::equal (entry, comparable);
  _11 = D.248790;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.79 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.79 = 0;

  <bb 8> :
  retval.78 = iftmp.79;
  if (retval.78 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.248773 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  entry = _17 + _19;
  D.248791 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.248791;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.248792 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.248792;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.248793 = hash_map<tree_node*, function_return_array>::hash_entry::equal (entry, comparable);
  _23 = D.248793;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.81 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.81 = 0;

  <bb 18> :
  retval.80 = iftmp.81;
  if (retval.80 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.248773 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.248773;

}



;; Function hash_table_mod1 (_Z15hash_table_mod1jj, funcdef_no=982, decl_uid=32188, cgraph_uid=280, symbol_order=291)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_table_mod1 (hashval_t hash, unsigned int index)
{
  const struct prime_ent * p;
  hashval_t D.248794;

  <bb 2> :
  p = &prime_tab[index];
  _1 = p->shift;
  _2 = (int) _1;
  _3 = p->inv;
  _4 = p->prime;
  D.248794 = mul_mod (hash, _4, _3, _2);

  <bb 3> :
<L0>:
  return D.248794;

}



;; Function mul_mod (_Z7mul_modjjji, funcdef_no=981, decl_uid=32178, cgraph_uid=279, symbol_order=290)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t mul_mod (hashval_t x, hashval_t y, hashval_t inv, int shift)
{
  hashval_t r;
  hashval_t q;
  hashval_t t4;
  hashval_t t3;
  hashval_t t2;
  hashval_t t1;
  hashval_t D.248796;

  <bb 2> :
  _1 = (long unsigned int) x;
  _2 = (long unsigned int) inv;
  _3 = _1 * _2;
  _4 = _3 >> 32;
  t1 = (hashval_t) _4;
  t2 = x - t1;
  t3 = t2 >> 1;
  t4 = t1 + t3;
  q = t4 >> shift;
  _5 = q * y;
  r = x - _5;
  D.248796 = r;

  <bb 3> :
<L0>:
  return D.248796;

}



;; Function hash_table_mod2 (_Z15hash_table_mod2jj, funcdef_no=983, decl_uid=32193, cgraph_uid=281, symbol_order=292)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_table_mod2 (hashval_t hash, unsigned int index)
{
  const struct prime_ent * p;
  hashval_t D.248798;

  <bb 2> :
  p = &prime_tab[index];
  _1 = p->shift;
  _2 = (int) _1;
  _3 = p->inv_m2;
  _4 = p->prime;
  _5 = _4 + 4294967294;
  _6 = mul_mod (hash, _5, _3, _2);
  D.248798 = _6 + 1;

  <bb 3> :
<L0>:
  return D.248798;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8952, decl_uid=189840, cgraph_uid=5584, symbol_order=6374)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.248802;
  bool D.248800;

  <bb 2> :
  D.248802 = hash_map<tree_node*, function_return_array>::hash_entry::is_empty (v);
  D.248800 = D.248802;

  <bb 3> :
<L0>:
  return D.248800;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8637, decl_uid=189670, cgraph_uid=5269, symbol_order=6059)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_return_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.248805;
  bool D.248803;

  <bb 2> :
  D.248805 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_empty<hash_map<tree_node*, function_return_array>::hash_entry> (e);
  D.248803 = D.248805;

  <bb 3> :
<L0>:
  return D.248803;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8953, decl_uid=189838, cgraph_uid=5585, symbol_order=6375)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.248808;
  bool D.248806;

  <bb 2> :
  D.248808 = hash_map<tree_node*, function_return_array>::hash_entry::is_deleted (v);
  D.248806 = D.248808;

  <bb 3> :
<L0>:
  return D.248806;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9801, decl_uid=189665, cgraph_uid=6433, symbol_order=7223)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_return_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.248811;
  bool D.248809;

  <bb 2> :
  D.248811 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_deleted<hash_map<tree_node*, function_return_array>::hash_entry> (e);
  D.248809 = D.248811;

  <bb 3> :
<L0>:
  return D.248809;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_deleted<hash_map<tree_node*, function_return_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10367, decl_uid=239660, cgraph_uid=6999, symbol_order=7793)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_deleted<hash_map<tree_node*, function_return_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248812;

  <bb 2> :
  _1 = entry->m_key;
  D.248812 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.248812;

}



;; Function pointer_hash<tree_node>::is_deleted (_ZN12pointer_hashI9tree_nodeE10is_deletedEPS0_, funcdef_no=10587, decl_uid=85308, cgraph_uid=7219, symbol_order=8013)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<tree_node>::is_deleted (union tree_node * e)
{
  bool D.248814;

  <bb 2> :
  D.248814 = e == 1B;

  <bb 3> :
<L0>:
  return D.248814;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9242, decl_uid=189658, cgraph_uid=5874, symbol_order=6664)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_return_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.248818;
  bool D.248816;

  <bb 2> :
  _1 = &a->m_key;
  D.248818 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::equal_keys (_1, b);
  D.248816 = D.248818;

  <bb 3> :
<L0>:
  return D.248816;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE10equal_keysERKS2_S7_, funcdef_no=9979, decl_uid=189559, cgraph_uid=6611, symbol_order=7405)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.248819;

  <bb 2> :
  D.248819 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.248819;

}



;; Function pointer_hash<tree_node>::equal (_ZN12pointer_hashI9tree_nodeE5equalERKPS0_S4_, funcdef_no=10514, decl_uid=85300, cgraph_uid=7146, symbol_order=7940)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<tree_node>::equal (union tree_node * const & existing, union tree_node * const & candidate)
{
  bool D.248821;

  <bb 2> :
  _1 = *existing;
  _2 = *candidate;
  D.248821 = _1 == _2;

  <bb 3> :
<L0>:
  return D.248821;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_empty<hash_map<tree_node*, function_return_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8455, decl_uid=211694, cgraph_uid=5087, symbol_order=5877)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_empty<hash_map<tree_node*, function_return_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248823;

  <bb 2> :
  _1 = entry->m_key;
  D.248823 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.248823;

}



;; Function pointer_hash<tree_node>::is_empty (_ZN12pointer_hashI9tree_nodeE8is_emptyEPS0_, funcdef_no=9243, decl_uid=85310, cgraph_uid=5875, symbol_order=6665)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<tree_node>::is_empty (union tree_node * e)
{
  bool D.248825;

  <bb 2> :
  D.248825 = e == 0B;

  <bb 3> :
<L0>:
  return D.248825;

}



;; Function function_return_array::function_return_array (_ZN21function_return_arrayC2ERKS_, funcdef_no=6253, decl_uid=189939, cgraph_uid=3228, symbol_order=3999)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_return_array::function_return_array (struct function_return_array * const this, const struct function_return_array & D.189941)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.189941->return_type_num;
  this->return_type_num = _1;
  _2 = D.189941->pthread_type_num;
  this->pthread_type_num = _2;
  _3 = &this->return_type_array;
  _4 = &D.189941->return_type_array;
  std::vector<return_type>::vector (_3, _4);
  return;

}



;; Function std::vector<return_type>::vector (_ZNSt6vectorI11return_typeSaIS0_EEC2ERKS2_, funcdef_no=7618, decl_uid=174521, cgraph_uid=4250, symbol_order=5036)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<return_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct return_type * D.248831;
  struct __normal_iterator D.248828;
  struct __normal_iterator D.248827;
  struct allocator D.211809;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.174558;
  _2 = &__x->D.174558;
  _3 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_2);
  D.211809 = __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<return_type>::size (__x);
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_1, _4, &D.211809);

  <bb 3> :
  std::allocator<return_type>::~allocator (&D.211809);
  D.211809 = {CLOBBER};
  _5 = &this->D.174558;
  _6 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.174558._M_impl.D.173903._M_start;
  D.248827 = std::vector<return_type>::end (__x);
  D.248828 = std::vector<return_type>::begin (__x);
  D.248831 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*, return_type> (D.248828, D.248827, _7, _6);

  <bb 4> :
  _8 = D.248831;
  this->D.174558._M_impl.D.173903._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<return_type>::~allocator (&D.211809);
  resx 2

  <bb 6> :
<L1>:
  D.211809 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.174558;
  std::_Vector_base<return_type, std::allocator<return_type> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI11return_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8457, decl_uid=173793, cgraph_uid=5089, symbol_order=5879)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.248833;

  <bb 2> :
  D.248833 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248833;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI11return_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=8456, decl_uid=173765, cgraph_uid=5088, symbol_order=5878)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<return_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<return_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI11return_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9244, decl_uid=173730, cgraph_uid=5876, symbol_order=6666)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<return_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<return_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<return_type>::allocator (_ZNSaI11return_typeEC2ERKS0_, funcdef_no=9981, decl_uid=173673, cgraph_uid=6613, symbol_order=7407)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<return_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<return_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11return_typeEC2ERKS2_, funcdef_no=10516, decl_uid=173602, cgraph_uid=7148, symbol_order=7942)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.173604)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_ZNSt12_Vector_baseI11return_typeSaIS0_EEC2EmRKS1_, funcdef_no=8459, decl_uid=173990, cgraph_uid=5091, symbol_order=5881)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11return_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9246, decl_uid=173895, cgraph_uid=5878, symbol_order=6668)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<return_type>::allocator (this, __a);
  _1 = &this->D.173903;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11return_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8421, decl_uid=173850, cgraph_uid=5053, symbol_order=5843)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_M_create_storage (_ZNSt12_Vector_baseI11return_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9248, decl_uid=173914, cgraph_uid=5880, symbol_order=6670)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct return_type * D.248840;

  <bb 2> :
  D.248840 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_allocate (this, __n);
  _1 = D.248840;
  this->_M_impl.D.173903._M_start = _1;
  _2 = this->_M_impl.D.173903._M_start;
  this->_M_impl.D.173903._M_finish = _2;
  _3 = this->_M_impl.D.173903._M_start;
  _4 = __n * 24;
  _5 = _3 + _4;
  this->_M_impl.D.173903._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_M_allocate (_ZNSt12_Vector_baseI11return_typeSaIS0_EE11_M_allocateEm, funcdef_no=9398, decl_uid=173907, cgraph_uid=6030, symbol_order=6820)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct return_type * std::_Vector_base<return_type, std::allocator<return_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct return_type * D.248847;
  struct return_type * iftmp.82;
  struct return_type * D.248841;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.248847 = std::allocator_traits<std::allocator<return_type> >::allocate (_1, __n);
  iftmp.82 = D.248847;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.82 = 0B;

  <bb 5> :
  D.248841 = iftmp.82;

  <bb 6> :
<L3>:
  return D.248841;

}



;; Function std::allocator_traits<std::allocator<return_type> >::allocate (_ZNSt16allocator_traitsISaI11return_typeEE8allocateERS1_m, funcdef_no=10089, decl_uid=173708, cgraph_uid=6721, symbol_order=7515)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct return_type * std::allocator_traits<std::allocator<return_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct return_type * D.248850;
  struct return_type * D.248848;

  <bb 2> :
  D.248850 = __gnu_cxx::new_allocator<return_type>::allocate (__a, __n, 0B);
  D.248848 = D.248850;

  <bb 3> :
<L0>:
  return D.248848;

}



;; Function __gnu_cxx::new_allocator<return_type>::allocate (_ZN9__gnu_cxx13new_allocatorI11return_typeE8allocateEmPKv, funcdef_no=10606, decl_uid=173562, cgraph_uid=7239, symbol_order=8033)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct return_type * __gnu_cxx::new_allocator<return_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.245633)
{
  struct return_type * D.248861;
  struct return_type * D.248860;
  align_val_t __al;
  struct return_type * D.248858;
  bool retval.83;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<return_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.83 = _4 != 0;
  if (retval.83 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 768614336404564650)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 24;
  D.248861 = operator new (_6);
  D.248858 = D.248861;

  <bb 7> :
<L6>:
  return D.248858;

}



;; Function __gnu_cxx::new_allocator<return_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI11return_typeE11_M_max_sizeEv, funcdef_no=10607, decl_uid=173589, cgraph_uid=7238, symbol_order=8032)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<return_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.248862;

  <bb 2> :
  D.248862 = 384307168202282325;

  <bb 3> :
<L0>:
  return D.248862;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI11return_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6217, decl_uid=173950, cgraph_uid=3191, symbol_order=3951)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<return_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<return_type>::~allocator (_ZNSaI11return_typeED2Ev, funcdef_no=7591, decl_uid=173683, cgraph_uid=4223, symbol_order=5009)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<return_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<return_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI11return_typeED2Ev, funcdef_no=8424, decl_uid=173612, cgraph_uid=5056, symbol_order=5846)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI11return_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8463, decl_uid=173791, cgraph_uid=5095, symbol_order=5885)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.248864;

  <bb 2> :
  D.248864 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248864;

}



;; Function std::vector<return_type>::end (_ZNKSt6vectorI11return_typeSaIS0_EE3endEv, funcdef_no=8462, decl_uid=174173, cgraph_uid=5094, symbol_order=5884)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<return_type>::end (const struct vector * const this)
{
  struct const_iterator D.222478;
  struct const_iterator D.248866;

  <bb 2> :
  _1 = &this->D.174558._M_impl.D.173903._M_finish;
  __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::__normal_iterator (&D.222478, _1);
  D.248866 = D.222478;
  D.222478 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248866;

}



;; Function __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9250, decl_uid=211778, cgraph_uid=5882, symbol_order=6672)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::__normal_iterator (struct __normal_iterator * const this, const struct return_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<return_type>::begin (_ZNKSt6vectorI11return_typeSaIS0_EE5beginEv, funcdef_no=8461, decl_uid=174169, cgraph_uid=5093, symbol_order=5883)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<return_type>::begin (const struct vector * const this)
{
  struct const_iterator D.222476;
  struct const_iterator D.248869;

  <bb 2> :
  _1 = &this->D.174558._M_impl.D.173903._M_start;
  __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::__normal_iterator (&D.222476, _1);
  D.248869 = D.222476;
  D.222476 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248869;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*, return_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8464, decl_uid=211798, cgraph_uid=5096, symbol_order=5886)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*, return_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct return_type * __result, struct allocator & D.222483)
{
  struct return_type * D.248874;
  struct return_type * D.248872;

  <bb 2> :
  D.248874 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (__first, __last, __result);
  D.248872 = D.248874;

  <bb 3> :
<L0>:
  return D.248872;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9252, decl_uid=222485, cgraph_uid=5885, symbol_order=6675)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct return_type * __result)
{
  struct return_type * D.248877;
  const bool __assignable;
  struct return_type * D.248875;

  <bb 2> :
  __assignable = 1;
  D.248877 = std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (__first, __last, __result);
  D.248875 = D.248877;

  <bb 3> :
<L0>:
  return D.248875;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=9983, decl_uid=234269, cgraph_uid=6615, symbol_order=7409)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct return_type * std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct return_type * __result)
{
  struct return_type * __cur;
  struct return_type * D.248879;
  bool retval.84;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator* (&__first);
  _2 = std::__addressof<return_type> (__cur);
  std::_Construct<return_type, const return_type&> (_2, _1);
  __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator++ (&__first);
  __cur = __cur + 24;

  <bb 4> :
  retval.84 = __gnu_cxx::operator!=<const return_type*, std::vector<return_type> > (&__first, &__last);
  if (retval.84 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.248879 = __cur;

  <bb 6> :
<L3>:
  return D.248879;

}



;; Function __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS1_SaIS1_EEEdeEv, funcdef_no=10521, decl_uid=211736, cgraph_uid=7153, symbol_order=7947)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct return_type & __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator* (const struct __normal_iterator * const this)
{
  const struct return_type & D.248881;

  <bb 2> :
  D.248881 = this->_M_current;

  <bb 3> :
<L0>:
  return D.248881;

}



;; Function std::__addressof<return_type> (_ZSt11__addressofI11return_typeEPT_RS1_, funcdef_no=10520, decl_uid=224848, cgraph_uid=7152, symbol_order=7946)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__addressof<return_type> (struct return_type & __r)
{
  struct return_type * D.248883;

  <bb 2> :
  D.248883 = __r;

  <bb 3> :
<L0>:
  return D.248883;

}



;; Function std::_Construct<return_type, const return_type&> (_ZSt10_ConstructI11return_typeJRKS0_EEvPT_DpOT0_, funcdef_no=10522, decl_uid=241745, cgraph_uid=7154, symbol_order=7948)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<return_type, const return_type&> (struct return_type * __p, const struct return_type & __args#0)
{
  void * D.245238;
  void * D.245237;
  const struct return_type * D.245239;

  <bb 2> :
  D.245239 = std::forward<const return_type&> (__args#0);
  D.245237 = __p;
  D.245238 = operator new (24, D.245237);
  MEM[(struct return_type *)D.245238] = *D.245239;
  return;

}



;; Function std::forward<const return_type&> (_ZSt7forwardIRK11return_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9423, decl_uid=224462, cgraph_uid=6055, symbol_order=6845)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct return_type & std::forward<const return_type&> (const struct type & __t)
{
  const struct return_type & D.248885;

  <bb 2> :
  D.248885 = __t;

  <bb 3> :
<L0>:
  return D.248885;

}



;; Function __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS1_SaIS1_EEEppEv, funcdef_no=10519, decl_uid=211740, cgraph_uid=7151, symbol_order=7945)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.248887;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 24;
  this->_M_current = _2;
  D.248887 = this;

  <bb 3> :
<L0>:
  return D.248887;

}



;; Function __gnu_cxx::operator!=<const return_type*, std::vector<return_type> > (_ZN9__gnu_cxxneIPK11return_typeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_, funcdef_no=10518, decl_uid=241738, cgraph_uid=7150, symbol_order=7944)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<const return_type*, std::vector<return_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.248889;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::base (__rhs);
  _4 = *_3;
  D.248889 = _2 != _4;

  <bb 3> :
<L0>:
  return D.248889;

}



;; Function __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10608, decl_uid=211765, cgraph_uid=7240, symbol_order=8034)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct return_type * const & __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::base (const struct __normal_iterator * const this)
{
  const struct return_type * const & D.248891;

  <bb 2> :
  D.248891 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.248891;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::~_Vector_base (_ZNSt12_Vector_baseI11return_typeSaIS0_EED2Ev, funcdef_no=7594, decl_uid=174013, cgraph_uid=4226, symbol_order=5012)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.173903._M_end_of_storage;
  _2 = this->_M_impl.D.173903._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.173903._M_start;
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (_ZNSt12_Vector_baseI11return_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8426, decl_uid=173910, cgraph_uid=5058, symbol_order=5848)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (struct _Vector_base * const this, struct return_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<return_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<return_type> >::deallocate (_ZNSt16allocator_traitsISaI11return_typeEE10deallocateERS1_PS0_m, funcdef_no=9219, decl_uid=173715, cgraph_uid=5851, symbol_order=6641)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<return_type> >::deallocate (struct allocator_type & __a, struct return_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<return_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI11return_typeE10deallocateEPS1_m, funcdef_no=9950, decl_uid=173566, cgraph_uid=6582, symbol_order=7376)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::deallocate (struct new_allocator * const this, struct return_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<return_type>::~vector (_ZNSt6vectorI11return_typeSaIS0_EED2Ev, funcdef_no=7621, decl_uid=174555, cgraph_uid=4253, symbol_order=5039)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<return_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.174558;
  _2 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.174558._M_impl.D.173903._M_finish;
  _4 = this->D.174558._M_impl.D.173903._M_start;
  std::_Destroy<return_type*, return_type> (_4, _3, _2);
  _5 = &this->D.174558;
  std::_Vector_base<return_type, std::allocator<return_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<return_type*, return_type> (_ZSt8_DestroyIP11return_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8465, decl_uid=211815, cgraph_uid=5097, symbol_order=5887)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<return_type*, return_type> (struct return_type * __first, struct return_type * __last, struct allocator & D.222504)
{
  <bb 2> :
  std::_Destroy<return_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<return_type*> (_ZSt8_DestroyIP11return_typeEvT_S2_, funcdef_no=9254, decl_uid=222506, cgraph_uid=5886, symbol_order=6676)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<return_type*> (struct return_type * __first, struct return_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<return_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<return_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP11return_typeEEvT_S4_, funcdef_no=9984, decl_uid=234300, cgraph_uid=6616, symbol_order=7410)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<return_type*> (struct return_type * D.241752, struct return_type * D.241753)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function function_return_array::~function_return_array (_ZN21function_return_arrayD2Ev, funcdef_no=6256, decl_uid=189961, cgraph_uid=3231, symbol_order=4002)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_return_array::~function_return_array (struct function_return_array * const this)
{
  <bb 2> :
  _1 = &this->return_type_array;
  std::vector<return_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function print_function_return (_Z21print_function_returnP9tree_node, funcdef_no=6258, decl_uid=187058, cgraph_uid=3234, symbol_order=4005)

Merging blocks 4 and 17
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 12 11
;; 2 succs { 20 3 }
;; 3 succs { 4 5 }
;; 4 succs { 17 }
;; 5 succs { 20 6 }
;; 6 succs { 20 7 }
;; 7 succs { 19 8 }
;; 8 succs { 18 9 }
;; 9 succs { 18 10 }
;; 10 succs { 14 }
;; 11 succs { 18 12 }
;; 12 succs { 18 13 }
;; 13 succs { 14 }
;; 14 succs { 11 15 }
;; 15 succs { 18 16 }
;; 16 succs { 17 }
;; 17 succs { 1 }
;; 18 succs { 19 }
;; 19 succs { 20 }
;; 20 succs { }
void print_function_return (union tree_node * function_tree)
{
  struct function_return_array * D.248905;
  struct function_return_array * D.248904;
  int i;
  struct vector ret_type_array;
  struct function_return_array fun_array;
  bool retval.92;
  bool retval.85;

  <bb 2> :
  function_return_collect.86_1 = function_return_collect;
  D.248904 = hash_map<tree_node*, function_return_array>::get (function_return_collect.86_1, &function_tree);

  <bb 3> :
  _2 = D.248904;
  retval.85 = _2 == 0B;
  if (retval.85 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  goto <bb 17>; [INV]

  <bb 5> :
  function_return_collect.87_3 = function_return_collect;
  D.248905 = hash_map<tree_node*, function_return_array>::get (function_return_collect.87_3, &function_tree);

  <bb 6> :
  _4 = D.248905;
  function_return_array::function_return_array (&fun_array, _4);

  <bb 7> :
  std::vector<return_type>::vector (&ret_type_array, &fun_array.return_type_array);

  <bb 8> :
  _5 = std::vector<return_type>::size (&ret_type_array);
  function_tree.88_6 = function_tree;
  stderr.89_7 = stderr;
  fprintf (stderr.89_7, "=======print_function_return %d   %d========\n", function_tree.88_6, _5);

  <bb 9> :
  stderr.90_8 = stderr;
  __builtin_fwrite ("[\n", 1, 2, stderr.90_8);

  <bb 10> :
  i = 0;
  goto <bb 14>; [INV]

  <bb 11> :
  _9 = (long unsigned int) i;
  _10 = std::vector<return_type>::operator[] (&ret_type_array, _9);
  _11 = _10->stmt;
  debug (_11);

  <bb 12> :
  stderr.91_12 = stderr;
  __builtin_fwrite (",\n", 1, 2, stderr.91_12);

  <bb 13> :
  i = i + 1;

  <bb 14> :
  _13 = (long unsigned int) i;
  _14 = std::vector<return_type>::size (&ret_type_array);
  retval.92 = _13 < _14;
  if (retval.92 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  stderr.93_15 = stderr;
  __builtin_fwrite ("]\n", 1, 2, stderr.93_15);

  <bb 16> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};

  <bb 17> :
<L7>:
  return;

  <bb 18> :
<L8>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 3

  <bb 19> :
<L9>:
  function_return_array::~function_return_array (&fun_array);
  resx 2

  <bb 20> :
<L10>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  resx 1

}



;; Function printfunctionCollect2 (_Z21printfunctionCollect2P3ptbP12gimple_array, funcdef_no=6259, decl_uid=190046, cgraph_uid=3235, symbol_order=4006)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;;
;; Loop 1
;;  header 13, latch 12
;;  depth 1, outer 0
;;  nodes: 13 12 11 7 10 9 8 6 5 4
;; 2 succs { 15 3 }
;; 3 succs { 13 }
;; 4 succs { 15 5 }
;; 5 succs { 15 6 }
;; 6 succs { 7 8 }
;; 7 succs { 11 }
;; 8 succs { 15 9 }
;; 9 succs { 15 10 }
;; 10 succs { 15 11 }
;; 11 succs { 15 12 }
;; 12 succs { 13 }
;; 13 succs { 4 14 }
;; 14 succs { 1 }
;; 15 succs { }
void printfunctionCollect2 (struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct cgraph_node * D.248916;
  struct function * D.248915;
  struct function * D.248914;
  struct cgraph_node * D.248913;
  struct cgraph_node * node;
  struct basic_block_def * bb;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  symtab.94_1 = symtab;
  D.248913 = symbol_table::first_defined_function (symtab.94_1);

  <bb 3> :
  node = D.248913;
  goto <bb 13>; [INV]

  <bb 4> :
  D.248914 = cgraph_node::get_fun (node);

  <bb 5> :
  _2 = D.248914;
  push_cfun (_2);

  <bb 6> :
  cfun.95_3 = cfun;
  if (cfun.95_3 == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by continue predictor.
  goto <bb 11>; [INV]

  <bb 8> :
  D.248915 = cgraph_node::get_fun (node);

  <bb 9> :
  _4 = D.248915;
  _5 = _4->decl;
  print_function_return2 (_5);

  <bb 10> :
  pop_cfun ();

  <bb 11> :
  symtab.96_6 = symtab;
  D.248916 = symbol_table::next_defined_function (symtab.96_6, node);

  <bb 12> :
  node = D.248916;

  <bb 13> :
  if (node != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  start = {CLOBBER};
  return;

  <bb 15> :
<L6>:
  start = {CLOBBER};
  resx 1

}



;; Function printfunctionCollect (_Z20printfunctionCollectP3ptbP12gimple_array, funcdef_no=6260, decl_uid=190061, cgraph_uid=3236, symbol_order=4007)

Removing basic block 13
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;;
;; Loop 1
;;  header 18, latch 17
;;  depth 1, outer 0
;;  nodes: 18 17 16 8 15 14 13 10 12 11 9 6 5 4 7
;; 2 succs { 20 3 }
;; 3 succs { 18 }
;; 4 succs { 20 5 }
;; 5 succs { 20 6 }
;; 6 succs { 7 9 }
;; 7 succs { 20 8 }
;; 8 succs { 16 }
;; 9 succs { 20 10 }
;; 10 succs { 11 13 }
;; 11 succs { 20 12 }
;; 12 succs { 20 13 }
;; 13 succs { 20 14 }
;; 14 succs { 20 15 }
;; 15 succs { 20 16 }
;; 16 succs { 20 17 }
;; 17 succs { 18 }
;; 18 succs { 4 19 }
;; 19 succs { 1 }
;; 20 succs { }
void printfunctionCollect (struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct cgraph_node * D.248928;
  struct function * D.248927;
  const char * D.248926;
  const char * D.248925;
  struct function * D.248924;
  struct cgraph_node * D.248923;
  const char * name;
  struct cgraph_node * node;
  struct basic_block_def * bb;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  symtab.97_1 = symtab;
  D.248923 = symbol_table::first_defined_function (symtab.97_1);

  <bb 3> :
  node = D.248923;
  goto <bb 18>; [INV]

  <bb 4> :
  D.248924 = cgraph_node::get_fun (node);

  <bb 5> :
  _2 = D.248924;
  push_cfun (_2);

  <bb 6> :
  cfun.98_3 = cfun;
  if (cfun.98_3 == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  pop_cfun ();

  <bb 8> :
  // predicted unlikely by continue predictor.
  goto <bb 16>; [INV]

  <bb 9> :
  cfun.99_4 = cfun;
  _5 = cfun.99_4->decl;
  D.248925 = get_name (_5);

  <bb 10> :
  name = D.248925;
  if (name != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  cfun.100_6 = cfun;
  _7 = cfun.100_6->decl;
  D.248926 = get_name (_7);

  <bb 12> :
  _8 = D.248926;
  stderr.101_9 = stderr;
  fprintf (stderr.101_9, "=======Mapping node_fun:%s=========\n", _8);

  <bb 13> :
  D.248927 = cgraph_node::get_fun (node);

  <bb 14> :
  _10 = D.248927;
  _11 = _10->decl;
  print_function_return (_11);

  <bb 15> :
  pop_cfun ();

  <bb 16> :
  symtab.102_12 = symtab;
  D.248928 = symbol_table::next_defined_function (symtab.102_12, node);

  <bb 17> :
  node = D.248928;

  <bb 18> :
  if (node != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  start = {CLOBBER};
  return;

  <bb 20> :
<L9>:
  start = {CLOBBER};
  resx 1

}



;; Function printfPointerConstraint (_Z23printfPointerConstraintP3ptbP12gimple_array, funcdef_no=6261, decl_uid=187056, cgraph_uid=3237, symbol_order=4008)

Removing basic block 22
Removing basic block 29
Removing basic block 30
Removing basic block 33
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
;;
;; Loop 1
;;  header 34, latch 33
;;  depth 1, outer 0
;;  nodes: 34 33 31 32 30 7 29 27 28 15 14 13 12 11 10 9 8 19 26 24 25 23 21 22 20 17 18 16 6
;;
;; Loop 2
;;  header 27, latch 26
;;  depth 2, outer 1
;;  nodes: 27 26 24 25 23 21 22 20
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 34 }
;; 6 succs { 36 7 }
;; 7 succs { 8 30 }
;; 8 succs { 36 9 }
;; 9 succs { 36 10 }
;; 10 succs { 36 11 }
;; 11 succs { 36 12 }
;; 12 succs { 36 13 }
;; 13 succs { 14 28 }
;; 14 succs { 36 15 }
;; 15 succs { 16 29 }
;; 16 succs { 17 18 }
;; 17 succs { 19 }
;; 18 succs { 19 }
;; 19 succs { 27 }
;; 20 succs { 21 22 }
;; 21 succs { 36 23 }
;; 22 succs { 36 23 }
;; 23 succs { 24 25 }
;; 24 succs { 26 }
;; 25 succs { 26 }
;; 26 succs { 27 }
;; 27 succs { 20 29 }
;; 28 succs { 36 29 }
;; 29 succs { 36 30 }
;; 30 succs { 31 32 }
;; 31 succs { 33 }
;; 32 succs { 33 }
;; 33 succs { 34 }
;; 34 succs { 6 35 }
;; 35 succs { 1 }
;; 36 succs { }
void printfPointerConstraint (struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct gimple_array * D.248958;
  location_t loc;
  location_t loc;
  location_t loc;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;
  union tree_node * iftmp.113;
  struct gimple * iftmp.110;
  struct gimple * iftmp.109;
  union tree_node * iftmp.103;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  if (table_temp != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.103 = table_temp->target;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.103 = 0B;

  <bb 5> :
  t = iftmp.103;
  goto <bb 34>; [INV]

  <bb 6> :
  stderr.104_1 = stderr;
  __builtin_fwrite ("------------------- stmt -----------------------\n", 1, 49, stderr.104_1);

  <bb 7> :
  _2 = table_temp->target;
  if (_2 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 8> :
  _3 = table_temp->last_stmt;
  loc = gimple_location_safe (_3);
  stderr.105_4 = stderr;
  __builtin_fwrite ("------------------------------------------\n", 1, 43, stderr.105_4);

  <bb 9> :
  warning_at (loc, 0, "loc");

  <bb 10> :
  _5 = table_temp->target;
  debug_tree (_5);

  <bb 11> :
  stderr.106_6 = stderr;
  __builtin_fwrite ("------------------------------------------\n", 1, 43, stderr.106_6);

  <bb 12> :
  treeGimpleArray.107_7 = treeGimpleArray;
  _8 = &table_temp->target;
  D.248958 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.107_7, _8);

  <bb 13> :
  user_tmp = D.248958;
  start.stmt = 0B;
  used_stmt = &start;
  if (user_tmp != 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 14> :
  _9 = user_tmp->size;
  stderr.108_10 = stderr;
  fprintf (stderr.108_10, " \n Pointer to set  is size %d :[ \n", _9);

  <bb 15> :
  _11 = user_tmp->size;
  if (_11 > 0)
    goto <bb 16>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 16> :
  if (user_tmp != 0B)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  iftmp.109 = user_tmp->stmt;
  goto <bb 19>; [INV]

  <bb 18> :
  iftmp.109 = 0B;

  <bb 19> :
  u_stmt = iftmp.109;
  goto <bb 27>; [INV]

  <bb 20> :
  _12 = user_tmp->ret_stmt;
  if (_12 != 0B)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  _13 = user_tmp->ret_stmt;
  loc = gimple_location_safe (_13);
  warning_at (loc, 0, "loc");
  goto <bb 23>; [INV]

  <bb 22> :
  loc = gimple_location_safe (u_stmt);
  warning_at (loc, 0, "loc");

  <bb 23> :
  user_tmp = user_tmp->next;
  if (user_tmp != 0B)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  iftmp.110 = user_tmp->stmt;
  goto <bb 26>; [INV]

  <bb 25> :
  iftmp.110 = 0B;

  <bb 26> :
  u_stmt = iftmp.110;

  <bb 27> :
  if (user_tmp != 0B)
    goto <bb 20>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 28> :
  stderr.111_14 = stderr;
  __builtin_fwrite (" \n Pointer to set  is size 0 :[ \n", 1, 33, stderr.111_14);

  <bb 29> :
  stderr.112_15 = stderr;
  __builtin_fwrite ("] \n", 1, 3, stderr.112_15);

  <bb 30> :
  table_temp = table_temp->next;
  if (table_temp != 0B)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  iftmp.113 = table_temp->target;
  goto <bb 33>; [INV]

  <bb 32> :
  iftmp.113 = 0B;

  <bb 33> :
  t = iftmp.113;

  <bb 34> :
  _16 = table_temp->next;
  if (_16 != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 35> :
  start = {CLOBBER};
  return;

  <bb 36> :
<L30>:
  start = {CLOBBER};
  resx 1

}



;; Function hash_map<tree_node*, gimple_array>::get (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7623, decl_uid=190133, cgraph_uid=4255, symbol_order=5041)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct gimple_array * hash_map<tree_node*, gimple_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.248968;
  struct hash_entry & D.248967;
  unsigned int D.248966;
  struct hash_entry & e;
  struct gimple_array * iftmp.114;
  struct gimple_array * D.248960;

  <bb 2> :
  _1 = &this->m_table;
  D.248966 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::hash (k);
  _2 = D.248966;
  D.248967 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.248967;
  D.248968 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_empty<hash_map<tree_node*, gimple_array>::hash_entry> (e);
  _3 = D.248968;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.114 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.114 = &e->m_value;

  <bb 5> :
  D.248960 = iftmp.114;

  <bb 6> :
<L3>:
  return D.248960;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE4hashERKS2_, funcdef_no=8466, decl_uid=190089, cgraph_uid=5098, symbol_order=5888)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::hash (union tree_node * const & h)
{
  hashval_t D.248969;

  <bb 2> :
  D.248969 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.248969;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8467, decl_uid=190273, cgraph_uid=5099, symbol_order=5889)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.249003;
  bool D.249002;
  bool D.249001;
  bool D.249000;
  bool D.248999;
  bool D.248998;
  struct value_type * D.248997;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.118;
  bool retval.117;
  struct value_type & D.248983;
  bool iftmp.116;
  bool retval.115;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 56;
  entry = _5 + _7;
  D.248998 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.248998;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.248999 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.248999;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.249000 = hash_map<tree_node*, gimple_array>::hash_entry::equal (entry, comparable);
  _11 = D.249000;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.116 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.116 = 0;

  <bb 8> :
  retval.115 = iftmp.116;
  if (retval.115 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.248983 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 56;
  entry = _17 + _19;
  D.249001 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.249001;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.249002 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.249002;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.249003 = hash_map<tree_node*, gimple_array>::hash_entry::equal (entry, comparable);
  _23 = D.249003;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.118 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.118 = 0;

  <bb 18> :
  retval.117 = iftmp.118;
  if (retval.117 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.248983 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.248983;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8940, decl_uid=190369, cgraph_uid=5572, symbol_order=6362)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.249006;
  bool D.249004;

  <bb 2> :
  D.249006 = hash_map<tree_node*, gimple_array>::hash_entry::is_empty (v);
  D.249004 = D.249006;

  <bb 3> :
<L0>:
  return D.249004;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8844, decl_uid=190202, cgraph_uid=5476, symbol_order=6266)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, gimple_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.249009;
  bool D.249007;

  <bb 2> :
  D.249009 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_empty<hash_map<tree_node*, gimple_array>::hash_entry> (e);
  D.249007 = D.249009;

  <bb 3> :
<L0>:
  return D.249007;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8941, decl_uid=190367, cgraph_uid=5573, symbol_order=6363)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.249012;
  bool D.249010;

  <bb 2> :
  D.249012 = hash_map<tree_node*, gimple_array>::hash_entry::is_deleted (v);
  D.249010 = D.249012;

  <bb 3> :
<L0>:
  return D.249010;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9795, decl_uid=190197, cgraph_uid=6427, symbol_order=7217)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, gimple_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.249015;
  bool D.249013;

  <bb 2> :
  D.249015 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_deleted<hash_map<tree_node*, gimple_array>::hash_entry> (e);
  D.249013 = D.249015;

  <bb 3> :
<L0>:
  return D.249013;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_deleted<hash_map<tree_node*, gimple_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10362, decl_uid=239642, cgraph_uid=6994, symbol_order=7788)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_deleted<hash_map<tree_node*, gimple_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.249016;

  <bb 2> :
  _1 = entry->m_key;
  D.249016 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.249016;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9256, decl_uid=190190, cgraph_uid=5888, symbol_order=6678)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, gimple_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.249020;
  bool D.249018;

  <bb 2> :
  _1 = &a->m_key;
  D.249020 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::equal_keys (_1, b);
  D.249018 = D.249020;

  <bb 3> :
<L0>:
  return D.249018;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE10equal_keysERKS2_S7_, funcdef_no=9987, decl_uid=190091, cgraph_uid=6619, symbol_order=7413)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.249021;

  <bb 2> :
  D.249021 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.249021;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_empty<hash_map<tree_node*, gimple_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8468, decl_uid=211831, cgraph_uid=5100, symbol_order=5890)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_empty<hash_map<tree_node*, gimple_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.249023;

  <bb 2> :
  _1 = entry->m_key;
  D.249023 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.249023;

}



;; Function gimple_location_safe (_ZL20gimple_location_safePK6gimple, funcdef_no=2004, decl_uid=92286, cgraph_uid=1141, symbol_order=1301)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
location_t gimple_location_safe (const struct gimple * g)
{
  location_t iftmp.119;
  location_t D.249025;

  <bb 2> :
  if (g != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.119 = gimple_location (g);
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.119 = 0;

  <bb 5> :
  D.249025 = iftmp.119;

  <bb 6> :
<L3>:
  return D.249025;

}



;; Function gimple_location (_ZL15gimple_locationPK6gimple, funcdef_no=2003, decl_uid=92283, cgraph_uid=1140, symbol_order=1300)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
location_t gimple_location (const struct gimple * g)
{
  location_t D.249031;

  <bb 2> :
  D.249031 = g->location;

  <bb 3> :
<L0>:
  return D.249031;

}



;; Function printfPointerConstraint2 (_Z24printfPointerConstraint2P3ptbP12gimple_array, funcdef_no=6262, decl_uid=190467, cgraph_uid=3238, symbol_order=4009)

Removing basic block 19
Removing basic block 26
Removing basic block 28
Removing basic block 31
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
;;
;; Loop 1
;;  header 32, latch 31
;;  depth 1, outer 0
;;  nodes: 32 31 29 30 28 7 27 25 12 24 16 23 21 22 20 18 19 17 14 15 13 11 10 9 8 26 6
;;
;; Loop 2
;;  header 24, latch 23
;;  depth 2, outer 1
;;  nodes: 24 23 21 22 20 18 19 17
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 32 }
;; 6 succs { 34 7 }
;; 7 succs { 8 28 }
;; 8 succs { 34 9 }
;; 9 succs { 34 10 }
;; 10 succs { 11 26 }
;; 11 succs { 34 12 }
;; 12 succs { 13 25 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 24 }
;; 17 succs { 18 19 }
;; 18 succs { 34 20 }
;; 19 succs { 34 20 }
;; 20 succs { 21 22 }
;; 21 succs { 23 }
;; 22 succs { 23 }
;; 23 succs { 24 }
;; 24 succs { 17 25 }
;; 25 succs { 34 28 }
;; 26 succs { 34 27 }
;; 27 succs { 34 28 }
;; 28 succs { 29 30 }
;; 29 succs { 31 }
;; 30 succs { 31 }
;; 31 succs { 32 }
;; 32 succs { 6 33 }
;; 33 succs { 1 }
;; 34 succs { }
void printfPointerConstraint2 (struct ptb * ftable, struct gimple_array * user_tmp)
{
  struct gimple_array * D.249061;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;
  union tree_node * iftmp.129;
  struct gimple * iftmp.125;
  struct gimple * iftmp.124;
  union tree_node * iftmp.120;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  if (table_temp != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.120 = table_temp->target;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.120 = 0B;

  <bb 5> :
  t = iftmp.120;
  goto <bb 32>; [INV]

  <bb 6> :
  stderr.121_1 = stderr;
  __builtin_fwrite ("\n ------------------------------------------\n", 1, 45, stderr.121_1);

  <bb 7> :
  _2 = table_temp->target;
  if (_2 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 8> :
  _3 = table_temp->target;
  debug_tree (_3);

  <bb 9> :
  treeGimpleArray.122_4 = treeGimpleArray;
  _5 = &table_temp->target;
  D.249061 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.122_4, _5);

  <bb 10> :
  user_tmp = D.249061;
  start.stmt = 0B;
  used_stmt = &start;
  if (user_tmp != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 11> :
  _6 = user_tmp->size;
  stderr.123_7 = stderr;
  fprintf (stderr.123_7, " \n Pointer to set  is size %d :[ \n", _6);

  <bb 12> :
  _8 = user_tmp->size;
  if (_8 > 0)
    goto <bb 13>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 13> :
  if (user_tmp != 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  iftmp.124 = user_tmp->stmt;
  goto <bb 16>; [INV]

  <bb 15> :
  iftmp.124 = 0B;

  <bb 16> :
  u_stmt = iftmp.124;
  goto <bb 24>; [INV]

  <bb 17> :
  _9 = user_tmp->ret_stmt;
  if (_9 != 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  _10 = user_tmp->ret_stmt;
  debug (_10);
  goto <bb 20>; [INV]

  <bb 19> :
  debug (u_stmt);

  <bb 20> :
  user_tmp = user_tmp->next;
  if (user_tmp != 0B)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  iftmp.125 = user_tmp->stmt;
  goto <bb 23>; [INV]

  <bb 22> :
  iftmp.125 = 0B;

  <bb 23> :
  u_stmt = iftmp.125;

  <bb 24> :
  if (user_tmp != 0B)
    goto <bb 17>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 25> :
  stderr.126_11 = stderr;
  __builtin_fwrite ("] \n", 1, 3, stderr.126_11);
  goto <bb 28>; [INV]

  <bb 26> :
  stderr.127_12 = stderr;
  __builtin_fwrite (" \n Pointer to set  is size 0 :[ \n", 1, 33, stderr.127_12);

  <bb 27> :
  stderr.128_13 = stderr;
  __builtin_fwrite ("] \n", 1, 3, stderr.128_13);

  <bb 28> :
  table_temp = table_temp->next;
  if (table_temp != 0B)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  iftmp.129 = table_temp->target;
  goto <bb 31>; [INV]

  <bb 30> :
  iftmp.129 = 0B;

  <bb 31> :
  t = iftmp.129;

  <bb 32> :
  _14 = table_temp->next;
  if (_14 != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 33> :
  start = {CLOBBER};
  return;

  <bb 34> :
<L30>:
  start = {CLOBBER};
  resx 1

}



;; Function set_ptb (_Z7set_ptbP15basic_block_defP3ptbP9tree_nodejiP6gimpleP11cgraph_node, funcdef_no=6263, decl_uid=190489, cgraph_uid=3239, symbol_order=4010)

Removing basic block 4
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;;
;; Loop 1
;;  header 9, latch 8
;;  depth 1, outer 0
;;  nodes: 9 8 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 }
;; 4 succs { 15 }
;; 5 succs { 9 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 6 10 }
;; 10 succs { 11 15 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 1 }
void set_ptb (struct basic_block_def * b, struct ptb * table, union tree_node * t, location_t l, int s, struct gimple * stmt, struct cgraph_node * node)
{
  struct function * D.249084;
  bool D.249083;
  void * D.249082;
  struct function * D.249081;
  bool D.249080;
  bool same;
  bool retval.133;
  void * D.190502;
  bool retval.131;

  <bb 2> :
  _1 = table->target;
  if (_1 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  pointtablecount.130_2 = pointtablecount;
  _3 = pointtablecount.130_2 + 1;
  pointtablecount = _3;
  table->bb = b;
  table->target = t;
  table->next = 0B;
  table->loc = l;
  table->state = s;
  table->may_realloc = 0;
  table->last_stmt = stmt;
  table->node = node;
  D.249080 = bb_in_branch_p (stmt);
  _4 = D.249080;
  table->inbranch = _4;
  D.249081 = cgraph_node::get_fun (node);
  _5 = D.249081;
  table->fun = _5;
  _6 = gimple_code (stmt);
  retval.131 = _6 == 18;

  <bb 4> :
  table->removed = 0;
  _7 = table->size;
  _8 = _7 + 1;
  table->size = _8;
  goto <bb 15>; [INV]

  <bb 5> :
  same = 0;
  goto <bb 9>; [INV]

  <bb 6> :
  _9 = table->target;
  if (t == _9)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  same = 1;

  <bb 8> :
  table = table->next;

  <bb 9> :
  _10 = table->next;
  if (_10 != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  _11 = ~same;
  if (_11 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 11> :
  pointtablecount.132_12 = pointtablecount;
  _13 = pointtablecount.132_12 + 1;
  pointtablecount = _13;
  D.249082 = operator new (120);
  D.190502 = D.249082;
  MEM[(struct ptb *)D.190502] = {};
  ptb::ptb (D.190502);
  table->next = D.190502;
  table = table->next;
  table->bb = b;
  table->target = t;
  table->next = 0B;
  table->loc = l;
  table->state = s;
  table->may_realloc = 0;
  table->last_stmt = stmt;
  table->node = node;
  D.249083 = bb_in_branch_p (stmt);
  _14 = D.249083;
  table->inbranch = _14;
  D.249084 = cgraph_node::get_fun (node);
  _15 = D.249084;
  table->fun = _15;
  _16 = gimple_code (stmt);
  retval.133 = _16 == 18;
  if (retval.133 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  table->is_phi_stmt = 1;
  goto <bb 14>; [INV]

  <bb 13> :
  table->is_phi_stmt = 0;

  <bb 14> :
  table->removed = 0;
  _17 = table->size;
  _18 = _17 + 1;
  table->size = _18;

  <bb 15> :
  return;

}



;; Function ptb::ptb (_ZN3ptbC2Ev, funcdef_no=6171, decl_uid=169196, cgraph_uid=3147, symbol_order=3867)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ptb::ptb (struct ptb * const this)
{
  <bb 2> :
  this->pthread_type = 0;
  this->size = 0;
  return;

}



;; Function gimple_code (_ZL11gimple_codePK6gimple, funcdef_no=1996, decl_uid=92240, cgraph_uid=1133, symbol_order=1293)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
gimple_code gimple_code (const struct gimple * g)
{
  gimple_code D.249085;

  <bb 2> :
  _1 = g->code;
  D.249085 = (gimple_code) _1;

  <bb 3> :
<L0>:
  return D.249085;

}



;; Function set_gimple_array (_Z16set_gimple_arrayP12gimple_arrayP6gimpleP9tree_nodeS4_S2_, funcdef_no=6264, decl_uid=190512, cgraph_uid=3240, symbol_order=4011)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 5 6
;; 2 succs { 3 4 }
;; 3 succs { 11 }
;; 4 succs { 8 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 5 9 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 1 }
void set_gimple_array (struct gimple_array * table, struct gimple * used_stmt, union tree_node * fucntion, union tree_node * target, struct gimple * ret_stmt)
{
  void * D.249096;
  int size_tmp;
  bool same;
  void * D.190516;

  <bb 2> :
  _1 = table->stmt;
  if (_1 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  table->stmt = used_stmt;
  table->ret_stmt = ret_stmt;
  table->aptr = fucntion;
  table->target = target;
  table->size = 1;
  table->next = 0B;
  goto <bb 11>; [INV]

  <bb 4> :
  same = 0;
  size_tmp = 0;
  goto <bb 8>; [INV]

  <bb 5> :
  _2 = table->stmt;
  if (used_stmt == _2)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  same = 1;

  <bb 7> :
  size_tmp = size_tmp + 1;
  table = table->next;

  <bb 8> :
  _3 = table->next;
  if (_3 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _4 = ~same;
  if (_4 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  D.249096 = operator new (48);
  D.190516 = D.249096;
  MEM[(struct gimple_array *)D.190516].stmt = 0B;
  MEM[(struct gimple_array *)D.190516].ret_stmt = 0B;
  MEM[(struct gimple_array *)D.190516].aptr = 0B;
  MEM[(struct gimple_array *)D.190516].target = 0B;
  MEM[(struct gimple_array *)D.190516].next = 0B;
  MEM[(struct gimple_array *)D.190516].size = 0;
  gimple_array::gimple_array (D.190516);
  table->next = D.190516;
  table = table->next;
  table->stmt = used_stmt;
  table->ret_stmt = ret_stmt;
  table->target = target;
  table->size = size_tmp;
  table->aptr = fucntion;
  table->next = 0B;

  <bb 11> :
  return;

}



;; Function ret_function_varstmt (_Z20ret_function_varstmtP9tree_node, funcdef_no=6265, decl_uid=187026, cgraph_uid=3267, symbol_order=4038)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13
;; 2 succs { 13 3 }
;; 3 succs { 4 9 }
;; 4 succs { 12 5 }
;; 5 succs { 12 6 }
;; 6 succs { 12 7 }
;; 7 succs { 11 8 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 1 }
;; 11 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { }
struct function_assign_array ret_function_varstmt (union tree_node * function_tree)
{
  struct function_assign_array * D.249104;
  struct function_assign_array * D.249103;
  struct vector assign_type_array;
  struct function_assign_array assign_array [value-expr: *<retval>];
  bool retval.134;

  <bb 2> :
  function_assign_array::function_assign_array (<retval>);
  function_assign_collect.135_1 = function_assign_collect;
  D.249103 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.135_1, &function_tree);

  <bb 3> :
  _2 = D.249103;
  retval.134 = _2 != 0B;
  if (retval.134 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 4> :
  function_assign_collect.136_3 = function_assign_collect;
  D.249104 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.136_3, &function_tree);

  <bb 5> :
  _4 = D.249104;
  function_assign_array::operator= (<retval>, _4);

  <bb 6> :
  _5 = &<retval>->assign_type_array;
  std::vector<assign_type>::vector (&assign_type_array, _5);

  <bb 7> :
  <retval>->pass = 1;
  function_assign_collect.137_6 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.137_6, &function_tree, <retval>);

  <bb 8> :
  std::vector<assign_type>::~vector (&assign_type_array);
  assign_type_array = {CLOBBER};

  <bb 9> :

  <bb 10> :
<L3>:
  return <retval>;

  <bb 11> :
<L4>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 3

  <bb 12> :
<L5>:
  assign_type_array = {CLOBBER};
  resx 2

  <bb 13> :
<L6>:
  function_assign_array::~function_assign_array (<retval>);
  resx 1

}



;; Function function_assign_array::function_assign_array (_ZN21function_assign_arrayC2Ev, funcdef_no=6277, decl_uid=190529, cgraph_uid=3252, symbol_order=4023)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_assign_array::function_assign_array (struct function_assign_array * const this)
{
  <bb 2> :
  this->pass = 0;
  _1 = &this->assign_type_array;
  std::vector<assign_type>::vector (_1);
  return;

}



;; Function std::vector<assign_type>::vector (_ZNSt6vectorI11assign_typeSaIS0_EEC2Ev, funcdef_no=6275, decl_uid=176647, cgraph_uid=3249, symbol_order=4020)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.176655;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_ZNSt12_Vector_baseI11assign_typeSaIS0_EEC2Ev, funcdef_no=6273, decl_uid=176105, cgraph_uid=3246, symbol_order=4017)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7625, decl_uid=175997, cgraph_uid=4257, symbol_order=5043)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<assign_type>::allocator (this);
  _1 = &this->D.176000;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<assign_type>::allocator (_ZNSaI11assign_typeEC2Ev, funcdef_no=8470, decl_uid=175775, cgraph_uid=5102, symbol_order=5892)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<assign_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<assign_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<assign_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11assign_typeEC2Ev, funcdef_no=9258, decl_uid=175704, cgraph_uid=5890, symbol_order=6680)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<assign_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8473, decl_uid=175947, cgraph_uid=5105, symbol_order=5895)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::get (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7636, decl_uid=190762, cgraph_uid=4268, symbol_order=5054)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_assign_array * hash_map<tree_node*, function_assign_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.249116;
  struct hash_entry & D.249115;
  unsigned int D.249114;
  struct hash_entry & e;
  struct function_assign_array * iftmp.138;
  struct function_assign_array * D.249108;

  <bb 2> :
  _1 = &this->m_table;
  D.249114 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::hash (k);
  _2 = D.249114;
  D.249115 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.249115;
  D.249116 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (e);
  _3 = D.249116;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.138 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.138 = &e->m_value;

  <bb 5> :
  D.249108 = iftmp.138;

  <bb 6> :
<L3>:
  return D.249108;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE4hashERKS2_, funcdef_no=8481, decl_uid=190718, cgraph_uid=5113, symbol_order=5903)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::hash (union tree_node * const & h)
{
  hashval_t D.249117;

  <bb 2> :
  D.249117 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.249117;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8482, decl_uid=190905, cgraph_uid=5114, symbol_order=5904)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.249151;
  bool D.249150;
  bool D.249149;
  bool D.249148;
  bool D.249147;
  bool D.249146;
  struct value_type * D.249145;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.142;
  bool retval.141;
  struct value_type & D.249131;
  bool iftmp.140;
  bool retval.139;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 40;
  entry = _5 + _7;
  D.249146 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.249146;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.249147 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.249147;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.249148 = hash_map<tree_node*, function_assign_array>::hash_entry::equal (entry, comparable);
  _11 = D.249148;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.140 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.140 = 0;

  <bb 8> :
  retval.139 = iftmp.140;
  if (retval.139 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.249131 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  entry = _17 + _19;
  D.249149 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.249149;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.249150 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.249150;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.249151 = hash_map<tree_node*, function_assign_array>::hash_entry::equal (entry, comparable);
  _23 = D.249151;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.142 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.142 = 0;

  <bb 18> :
  retval.141 = iftmp.142;
  if (retval.141 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.249131 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.249131;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8956, decl_uid=191001, cgraph_uid=5588, symbol_order=6378)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.249154;
  bool D.249152;

  <bb 2> :
  D.249154 = hash_map<tree_node*, function_assign_array>::hash_entry::is_empty (v);
  D.249152 = D.249154;

  <bb 3> :
<L0>:
  return D.249152;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8504, decl_uid=190831, cgraph_uid=5136, symbol_order=5926)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_assign_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.249157;
  bool D.249155;

  <bb 2> :
  D.249157 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (e);
  D.249155 = D.249157;

  <bb 3> :
<L0>:
  return D.249155;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8957, decl_uid=190999, cgraph_uid=5589, symbol_order=6379)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.249160;
  bool D.249158;

  <bb 2> :
  D.249160 = hash_map<tree_node*, function_assign_array>::hash_entry::is_deleted (v);
  D.249158 = D.249160;

  <bb 3> :
<L0>:
  return D.249158;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9803, decl_uid=190826, cgraph_uid=6435, symbol_order=7225)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_assign_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.249163;
  bool D.249161;

  <bb 2> :
  D.249163 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_deleted<hash_map<tree_node*, function_assign_array>::hash_entry> (e);
  D.249161 = D.249163;

  <bb 3> :
<L0>:
  return D.249161;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_deleted<hash_map<tree_node*, function_assign_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10368, decl_uid=239666, cgraph_uid=7000, symbol_order=7794)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_deleted<hash_map<tree_node*, function_assign_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.249164;

  <bb 2> :
  _1 = entry->m_key;
  D.249164 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.249164;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9263, decl_uid=190819, cgraph_uid=5895, symbol_order=6685)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_assign_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.249168;
  bool D.249166;

  <bb 2> :
  _1 = &a->m_key;
  D.249168 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::equal_keys (_1, b);
  D.249166 = D.249168;

  <bb 3> :
<L0>:
  return D.249166;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE10equal_keysERKS2_S7_, funcdef_no=9992, decl_uid=190720, cgraph_uid=6624, symbol_order=7418)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.249169;

  <bb 2> :
  D.249169 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.249169;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8483, decl_uid=211868, cgraph_uid=5115, symbol_order=5905)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.249171;

  <bb 2> :
  _1 = entry->m_key;
  D.249171 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.249171;

}



;; Function function_assign_array::operator= (_ZN21function_assign_arrayaSERKS_, funcdef_no=6282, decl_uid=191087, cgraph_uid=3257, symbol_order=4028)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_assign_array & function_assign_array::operator= (struct function_assign_array * const this, const struct function_assign_array & D.191088)
{
  struct function_assign_array & D.249173;

  <bb 2> :
  _1 = D.191088->pass;
  this->pass = _1;
  _2 = &D.191088->assign_type_array;
  _3 = &this->assign_type_array;
  std::vector<assign_type>::operator= (_3, _2);
  D.249173 = this;

  <bb 3> :
<L0>:
  return D.249173;

}



;; Function std::vector<assign_type>::operator= (_ZNSt6vectorI11assign_typeSaIS0_EEaSERKS2_, funcdef_no=7637, decl_uid=176233, cgraph_uid=4270, symbol_order=5056)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<assign_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct assign_type * D.249208;
  struct assign_type * __tmp;
  const size_type __xlen;
  struct vector & D.249206;
  struct __normal_iterator D.249203;
  struct __normal_iterator D.249202;
  struct __normal_iterator D.249201;
  struct __normal_iterator D.249200;
  struct __normal_iterator D.249199;
  bool retval.147;
  struct __normal_iterator D.249194;
  struct __normal_iterator D.249193;
  bool retval.146;
  bool iftmp.145;
  bool retval.144;
  bool retval.143;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.143 = __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_propagate_on_copy_assign ();
  if (retval.143 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.176655;
  _4 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.176655;
  _6 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.145 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.145 = 0;

  <bb 8> :
  retval.144 = iftmp.145;
  if (retval.144 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<assign_type>::clear (this);
  _8 = &this->D.176655;
  _9 = this->D.176655._M_impl.D.176000._M_end_of_storage;
  _10 = this->D.176655._M_impl.D.176000._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 24;
  _13 = (long unsigned int) _12;
  _14 = this->D.176655._M_impl.D.176000._M_start;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (_8, _14, _13);
  this->D.176655._M_impl.D.176000._M_start = 0B;
  this->D.176655._M_impl.D.176000._M_finish = 0B;
  this->D.176655._M_impl.D.176000._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.176655;
  _16 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.176655;
  _18 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<assign_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<assign_type>::size (__x);
  _19 = std::vector<assign_type>::capacity (this);
  retval.146 = __xlen > _19;
  if (retval.146 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.249193 = std::vector<assign_type>::end (__x);
  D.249194 = std::vector<assign_type>::begin (__x);
  D.249208 = std::vector<assign_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (this, __xlen, D.249194, D.249193);
  __tmp = D.249208;
  _20 = &this->D.176655;
  _21 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.176655._M_impl.D.176000._M_finish;
  _23 = this->D.176655._M_impl.D.176000._M_start;
  std::_Destroy<assign_type*, assign_type> (_23, _22, _21);
  _24 = &this->D.176655;
  _25 = this->D.176655._M_impl.D.176000._M_end_of_storage;
  _26 = this->D.176655._M_impl.D.176000._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 24;
  _29 = (long unsigned int) _28;
  _30 = this->D.176655._M_impl.D.176000._M_start;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (_24, _30, _29);
  this->D.176655._M_impl.D.176000._M_start = __tmp;
  _31 = this->D.176655._M_impl.D.176000._M_start;
  _32 = __xlen * 24;
  _33 = _31 + _32;
  this->D.176655._M_impl.D.176000._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<assign_type>::size (this);
  retval.147 = __xlen <= _34;
  if (retval.147 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.176655;
  _36 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_35);
  D.249199 = std::vector<assign_type>::end (this);
  D.249200 = std::vector<assign_type>::begin (this);
  D.249201 = std::vector<assign_type>::end (__x);
  D.249202 = std::vector<assign_type>::begin (__x);
  D.249203 = std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (D.249202, D.249201, D.249200);
  std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type> (D.249203, D.249199, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.176655._M_impl.D.176000._M_start;
  _38 = __x->D.176655._M_impl.D.176000._M_start;
  _39 = std::vector<assign_type>::size (this);
  _40 = _39 * 24;
  _41 = _38 + _40;
  _42 = __x->D.176655._M_impl.D.176000._M_start;
  std::copy<assign_type*, assign_type*> (_42, _41, _37);
  _43 = &this->D.176655;
  _44 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.176655._M_impl.D.176000._M_finish;
  _46 = __x->D.176655._M_impl.D.176000._M_finish;
  _47 = __x->D.176655._M_impl.D.176000._M_start;
  _48 = std::vector<assign_type>::size (this);
  _49 = _48 * 24;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<assign_type*, assign_type*, assign_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.176655._M_impl.D.176000._M_start;
  _52 = __xlen * 24;
  _53 = _51 + _52;
  this->D.176655._M_impl.D.176000._M_finish = _53;

  <bb 17> :
  D.249206 = this;

  <bb 18> :
<L19>:
  return D.249206;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI11assign_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7638, decl_uid=175867, cgraph_uid=4269, symbol_order=5055)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_propagate_on_copy_assign ()
{
  bool D.249209;

  <bb 2> :
  D.249209 = 0;

  <bb 3> :
<L0>:
  return D.249209;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI11assign_typeES1_E15_S_always_equalEv, funcdef_no=6417, decl_uid=175870, cgraph_uid=3391, symbol_order=4168)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_always_equal ()
{
  bool D.249211;

  <bb 2> :
  D.249211 = 1;

  <bb 3> :
<L0>:
  return D.249211;

}



;; Function std::operator!= (_ZStneRKSaI11assign_typeES2_, funcdef_no=8485, decl_uid=175753, cgraph_uid=5117, symbol_order=5907)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.222563, const struct allocator & D.222564)
{
  bool D.249213;

  <bb 2> :
  D.249213 = 0;

  <bb 3> :
<L0>:
  return D.249213;

}



;; Function std::vector<assign_type>::clear (_ZNSt6vectorI11assign_typeSaIS0_EE5clearEv, funcdef_no=8486, decl_uid=176385, cgraph_uid=5118, symbol_order=5908)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.176655._M_impl.D.176000._M_start;
  std::vector<assign_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<assign_type>::_M_erase_at_end (_ZNSt6vectorI11assign_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9264, decl_uid=176513, cgraph_uid=5896, symbol_order=6686)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<assign_type>::_M_erase_at_end (struct vector * const this, struct assign_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.176655._M_impl.D.176000._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 24;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.176655;
  _5 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.176655._M_impl.D.176000._M_finish;
  std::_Destroy<assign_type*, assign_type> (__pos, _6, _5);
  this->D.176655._M_impl.D.176000._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI11assign_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8484, decl_uid=175890, cgraph_uid=5116, symbol_order=5906)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.249218;

  <bb 2> :
  D.249218 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.249218;

}



;; Function std::__alloc_on_copy<std::allocator<assign_type> > (_ZSt15__alloc_on_copyISaI11assign_typeEEvRT_RKS2_, funcdef_no=8487, decl_uid=211891, cgraph_uid=5119, symbol_order=5909)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<assign_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<assign_type>::capacity (_ZNKSt6vectorI11assign_typeSaIS0_EE8capacityEv, funcdef_no=8488, decl_uid=176301, cgraph_uid=5120, symbol_order=5910)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<assign_type>::capacity (const struct vector * const this)
{
  size_type D.249220;

  <bb 2> :
  _1 = this->D.176655._M_impl.D.176000._M_end_of_storage;
  _2 = this->D.176655._M_impl.D.176000._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.249220 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.249220;

}



;; Function std::vector<assign_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (_ZNSt6vectorI11assign_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8491, decl_uid=211995, cgraph_uid=5123, symbol_order=5913)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct assign_type * std::vector<assign_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct assign_type * D.249224;
  struct assign_type * __result;
  struct assign_type * D.249222;

  <bb 2> :
  _1 = &this->D.176655;
  D.249224 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_allocate (_1, __n);
  __result = D.249224;
  _2 = &this->D.176655;
  _3 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*, assign_type> (__first, __last, __result, _3);

  <bb 3> :
  D.249222 = __result;

  <bb 4> :
<L0>:
  return D.249222;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.176655;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_allocate (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE11_M_allocateEm, funcdef_no=9268, decl_uid=176004, cgraph_uid=5900, symbol_order=6690)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct assign_type * std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct assign_type * D.249234;
  struct assign_type * iftmp.148;
  struct assign_type * D.249228;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.249234 = std::allocator_traits<std::allocator<assign_type> >::allocate (_1, __n);
  iftmp.148 = D.249234;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.148 = 0B;

  <bb 5> :
  D.249228 = iftmp.148;

  <bb 6> :
<L3>:
  return D.249228;

}



;; Function std::allocator_traits<std::allocator<assign_type> >::allocate (_ZNSt16allocator_traitsISaI11assign_typeEE8allocateERS1_m, funcdef_no=9993, decl_uid=175805, cgraph_uid=6625, symbol_order=7419)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct assign_type * std::allocator_traits<std::allocator<assign_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct assign_type * D.249237;
  struct assign_type * D.249235;

  <bb 2> :
  D.249237 = __gnu_cxx::new_allocator<assign_type>::allocate (__a, __n, 0B);
  D.249235 = D.249237;

  <bb 3> :
<L0>:
  return D.249235;

}



;; Function __gnu_cxx::new_allocator<assign_type>::allocate (_ZN9__gnu_cxx13new_allocatorI11assign_typeE8allocateEmPKv, funcdef_no=10530, decl_uid=175659, cgraph_uid=7163, symbol_order=7957)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct assign_type * __gnu_cxx::new_allocator<assign_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.245272)
{
  struct assign_type * D.249248;
  struct assign_type * D.249247;
  align_val_t __al;
  struct assign_type * D.249245;
  bool retval.149;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<assign_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.149 = _4 != 0;
  if (retval.149 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 768614336404564650)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 24;
  D.249248 = operator new (_6);
  D.249245 = D.249248;

  <bb 7> :
<L6>:
  return D.249245;

}



;; Function __gnu_cxx::new_allocator<assign_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI11assign_typeE11_M_max_sizeEv, funcdef_no=10531, decl_uid=175686, cgraph_uid=7162, symbol_order=7956)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<assign_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.249249;

  <bb 2> :
  D.249249 = 384307168202282325;

  <bb 3> :
<L0>:
  return D.249249;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*, assign_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8502, decl_uid=212129, cgraph_uid=5134, symbol_order=5924)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*, assign_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct assign_type * __result, struct allocator & D.222730)
{
  struct assign_type * D.249253;
  struct assign_type * D.249251;

  <bb 2> :
  D.249253 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (__first, __last, __result);
  D.249251 = D.249253;

  <bb 3> :
<L0>:
  return D.249251;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9285, decl_uid=222732, cgraph_uid=5917, symbol_order=6707)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct assign_type * __result)
{
  struct assign_type * D.249256;
  const bool __assignable;
  struct assign_type * D.249254;

  <bb 2> :
  __assignable = 1;
  D.249256 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (__first, __last, __result);
  D.249254 = D.249256;

  <bb 3> :
<L0>:
  return D.249254;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10003, decl_uid=234741, cgraph_uid=6635, symbol_order=7429)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct assign_type * __result)
{
  struct assign_type * D.249259;
  struct assign_type * D.249257;

  <bb 2> :
  D.249259 = std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (__first, __last, __result);
  D.249257 = D.249259;

  <bb 3> :
<L0>:
  return D.249257;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10536, decl_uid=241825, cgraph_uid=7168, symbol_order=7962)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct assign_type * __result)
{
  struct assign_type * D.249264;
  struct __normal_iterator D.249262;
  struct __normal_iterator D.249261;
  struct assign_type * D.249260;

  <bb 2> :
  D.249261 = std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (__last);
  D.249262 = std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (__first);
  D.249264 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (D.249262, D.249261, __result);
  D.249260 = D.249264;

  <bb 3> :
<L0>:
  return D.249260;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9272, decl_uid=222649, cgraph_uid=5904, symbol_order=6694)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.249265;

  <bb 2> :
  D.249265 = __it;

  <bb 3> :
<L0>:
  return D.249265;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEEPS2_ET1_T0_SB_SA_, funcdef_no=10855, decl_uid=245330, cgraph_uid=7487, symbol_order=8283)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct assign_type * __result)
{
  struct assign_type * D.249269;
  struct assign_type * D.249267;

  <bb 2> :
  __result.150_1 = __result;
  _2 = std::__niter_base<assign_type*> (__result.150_1);
  _3 = std::__niter_base<const assign_type*, std::vector<assign_type> > (__last);
  _4 = std::__niter_base<const assign_type*, std::vector<assign_type> > (__first);
  D.249269 = std::__copy_move_a1<false, const assign_type*, assign_type*> (_4, _3, _2);
  _5 = D.249269;
  D.249267 = std::__niter_wrap<assign_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.249267;

}



;; Function std::__niter_base<assign_type*> (_ZSt12__niter_baseIP11assign_typeET_S2_, funcdef_no=9999, decl_uid=225272, cgraph_uid=6631, symbol_order=7425)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__niter_base<assign_type*> (struct assign_type * __it)
{
  struct assign_type * D.249270;

  <bb 2> :
  D.249270 = __it;

  <bb 3> :
<L0>:
  return D.249270;

}



;; Function std::__niter_base<const assign_type*, std::vector<assign_type> > (_ZSt12__niter_baseIPK11assign_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=9994, decl_uid=234389, cgraph_uid=6626, symbol_order=7420)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct assign_type * std::__niter_base<const assign_type*, std::vector<assign_type> > (struct __normal_iterator __it)
{
  const struct assign_type * D.249272;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::base (&__it);
  D.249272 = *_1;

  <bb 3> :
<L0>:
  return D.249272;

}



;; Function __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10532, decl_uid=211962, cgraph_uid=7164, symbol_order=7958)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct assign_type * const & __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::base (const struct __normal_iterator * const this)
{
  const struct assign_type * const & D.249274;

  <bb 2> :
  D.249274 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.249274;

}



;; Function std::__copy_move_a1<false, const assign_type*, assign_type*> (_ZSt14__copy_move_a1ILb0EPK11assign_typePS0_ET1_T0_S5_S4_, funcdef_no=9996, decl_uid=234543, cgraph_uid=6628, symbol_order=7422)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a1<false, const assign_type*, assign_type*> (const struct assign_type * __first, const struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.249278;
  struct assign_type * D.249276;

  <bb 2> :
  D.249278 = std::__copy_move_a2<false, const assign_type*, assign_type*> (__first, __last, __result);
  D.249276 = D.249278;

  <bb 3> :
<L0>:
  return D.249276;

}



;; Function std::__copy_move_a2<false, const assign_type*, assign_type*> (_ZSt14__copy_move_a2ILb0EPK11assign_typePS0_ET1_T0_S5_S4_, funcdef_no=10533, decl_uid=241792, cgraph_uid=7165, symbol_order=7959)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a2<false, const assign_type*, assign_type*> (const struct assign_type * __first, const struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.249279;

  <bb 2> :
  D.249279 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<assign_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.249279;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<assign_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI11assign_typeEEPT_PKS4_S7_S5_, funcdef_no=10854, decl_uid=245304, cgraph_uid=7486, symbol_order=8282)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct assign_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<assign_type> (const struct assign_type * __first, const struct assign_type * __last, struct assign_type * __result)
{
  const ptrdiff_t _Num;
  struct assign_type * D.249284;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 24;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.151_2 = (long unsigned int) _Num;
  _3 = _Num.151_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.152_4 = (long unsigned int) _Num;
  _5 = _Num.152_4 * 24;
  D.249284 = __result + _5;

  <bb 5> :
<L3>:
  return D.249284;

}



;; Function std::__niter_wrap<assign_type*> (_ZSt12__niter_wrapIP11assign_typeET_RKS2_S2_, funcdef_no=10001, decl_uid=234586, cgraph_uid=6633, symbol_order=7427)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__niter_wrap<assign_type*> (struct assign_type * const & D.241814, struct assign_type * __res)
{
  struct assign_type * D.249286;

  <bb 2> :
  D.249286 = __res;

  <bb 3> :
<L0>:
  return D.249286;

}



;; Function std::_Destroy<assign_type*, assign_type> (_ZSt8_DestroyIP11assign_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8480, decl_uid=211852, cgraph_uid=5112, symbol_order=5902)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<assign_type*, assign_type> (struct assign_type * __first, struct assign_type * __last, struct allocator & D.222543)
{
  <bb 2> :
  std::_Destroy<assign_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<assign_type*> (_ZSt8_DestroyIP11assign_typeEvT_S2_, funcdef_no=9261, decl_uid=222545, cgraph_uid=5893, symbol_order=6683)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<assign_type*> (struct assign_type * __first, struct assign_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<assign_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<assign_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP11assign_typeEEvT_S4_, funcdef_no=9989, decl_uid=234349, cgraph_uid=6621, symbol_order=7415)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<assign_type*> (struct assign_type * D.241768, struct assign_type * D.241769)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8478, decl_uid=176007, cgraph_uid=5110, symbol_order=5900)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (struct _Vector_base * const this, struct assign_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<assign_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<assign_type> >::deallocate (_ZNSt16allocator_traitsISaI11assign_typeEE10deallocateERS1_PS0_m, funcdef_no=9260, decl_uid=175812, cgraph_uid=5892, symbol_order=6682)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<assign_type> >::deallocate (struct allocator_type & __a, struct assign_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<assign_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<assign_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI11assign_typeE10deallocateEPS1_m, funcdef_no=9988, decl_uid=175663, cgraph_uid=6620, symbol_order=7414)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<assign_type>::deallocate (struct new_allocator * const this, struct assign_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<assign_type>::end (_ZNSt6vectorI11assign_typeSaIS0_EE3endEv, funcdef_no=8494, decl_uid=176268, cgraph_uid=5126, symbol_order=5916)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<assign_type>::end (struct vector * const this)
{
  struct iterator D.222683;
  struct iterator D.249294;

  <bb 2> :
  _1 = &this->D.176655._M_impl.D.176000._M_finish;
  __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::__normal_iterator (&D.222683, _1);
  D.249294 = D.222683;
  D.222683 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249294;

}



;; Function __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9270, decl_uid=212077, cgraph_uid=5902, symbol_order=6692)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::__normal_iterator (struct __normal_iterator * const this, struct assign_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<assign_type>::begin (_ZNSt6vectorI11assign_typeSaIS0_EE5beginEv, funcdef_no=8492, decl_uid=176264, cgraph_uid=5124, symbol_order=5914)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<assign_type>::begin (struct vector * const this)
{
  struct iterator D.222637;
  struct iterator D.249297;

  <bb 2> :
  _1 = &this->D.176655._M_impl.D.176000._M_start;
  __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::__normal_iterator (&D.222637, _1);
  D.249297 = D.222637;
  D.222637 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249297;

}



;; Function std::vector<assign_type>::end (_ZNKSt6vectorI11assign_typeSaIS0_EE3endEv, funcdef_no=8490, decl_uid=176270, cgraph_uid=5122, symbol_order=5912)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<assign_type>::end (const struct vector * const this)
{
  struct const_iterator D.222599;
  struct const_iterator D.249300;

  <bb 2> :
  _1 = &this->D.176655._M_impl.D.176000._M_finish;
  __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::__normal_iterator (&D.222599, _1);
  D.249300 = D.222599;
  D.222599 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249300;

}



;; Function __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9266, decl_uid=211975, cgraph_uid=5898, symbol_order=6688)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::__normal_iterator (struct __normal_iterator * const this, const struct assign_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<assign_type>::begin (_ZNKSt6vectorI11assign_typeSaIS0_EE5beginEv, funcdef_no=8489, decl_uid=176266, cgraph_uid=5121, symbol_order=5911)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<assign_type>::begin (const struct vector * const this)
{
  struct const_iterator D.222597;
  struct const_iterator D.249303;

  <bb 2> :
  _1 = &this->D.176655._M_impl.D.176000._M_start;
  __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::__normal_iterator (&D.222597, _1);
  D.249303 = D.222597;
  D.222597 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249303;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8493, decl_uid=212096, cgraph_uid=5125, symbol_order=5915)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.249308;
  struct __normal_iterator D.249307;
  struct __normal_iterator D.249306;

  <bb 2> :
  D.249307 = std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (__last);
  D.249308 = std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (__first);
  D.249306 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (D.249308, D.249307, __result);

  <bb 3> :
<L0>:
  return D.249306;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9273, decl_uid=222655, cgraph_uid=5906, symbol_order=6696)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct assign_type * D.249312;
  struct __normal_iterator D.249310;

  <bb 2> :
  _1 = std::__niter_base<assign_type*, std::vector<assign_type> > (__result);
  _2 = std::__niter_base<const assign_type*, std::vector<assign_type> > (__last);
  _3 = std::__niter_base<const assign_type*, std::vector<assign_type> > (__first);
  D.249312 = std::__copy_move_a1<false, const assign_type*, assign_type*> (_3, _2, _1);
  _4 = D.249312;
  D.249310 = std::__niter_wrap<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.249310;

}



;; Function std::__niter_base<assign_type*, std::vector<assign_type> > (_ZSt12__niter_baseIP11assign_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=9995, decl_uid=234540, cgraph_uid=6627, symbol_order=7421)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__niter_base<assign_type*, std::vector<assign_type> > (struct __normal_iterator __it)
{
  struct assign_type * D.249313;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (&__it);
  D.249313 = *_1;

  <bb 3> :
<L0>:
  return D.249313;

}



;; Function __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9453, decl_uid=212064, cgraph_uid=6085, symbol_order=6875)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * const & __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (const struct __normal_iterator * const this)
{
  struct assign_type * const & D.249315;

  <bb 2> :
  D.249315 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.249315;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=9997, decl_uid=234547, cgraph_uid=6629, symbol_order=7423)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type*> (struct __normal_iterator __from, struct assign_type * __res)
{
  struct __normal_iterator D.249317;

  <bb 2> :
  _1 = std::__niter_base<assign_type*, std::vector<assign_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 24;
  D.249317 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.249317;

}



;; Function __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10534, decl_uid=212055, cgraph_uid=7166, symbol_order=7960)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct assign_type * const D.245310;
  struct __normal_iterator D.245311;
  struct __normal_iterator D.249319;

  <bb 2> :
  _1 = this->_M_current;
  __n.153_2 = (long unsigned int) __n;
  _3 = __n.153_2 * 24;
  _4 = _1 + _3;
  D.245310 = _4;
  __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::__normal_iterator (&D.245311, &D.245310);
  D.249319 = D.245311;
  D.245311 = {CLOBBER};
  D.245310 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.249319;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8495, decl_uid=212102, cgraph_uid=5127, symbol_order=5917)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.222686)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9275, decl_uid=222688, cgraph_uid=5907, symbol_order=6697)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=9998, decl_uid=234571, cgraph_uid=6630, symbol_order=7424)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (struct __normal_iterator D.241801, struct __normal_iterator D.241802)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<assign_type*, assign_type*> (_ZSt4copyIP11assign_typeS1_ET0_T_S3_S2_, funcdef_no=8496, decl_uid=212110, cgraph_uid=5128, symbol_order=5918)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::copy<assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.249325;
  struct assign_type * D.249323;

  <bb 2> :
  _1 = std::__miter_base<assign_type*> (__last);
  _2 = std::__miter_base<assign_type*> (__first);
  D.249325 = std::__copy_move_a<false, assign_type*, assign_type*> (_2, _1, __result);
  D.249323 = D.249325;

  <bb 3> :
<L0>:
  return D.249323;

}



;; Function std::__miter_base<assign_type*> (_ZSt12__miter_baseIP11assign_typeET_S2_, funcdef_no=9276, decl_uid=222704, cgraph_uid=5908, symbol_order=6698)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__miter_base<assign_type*> (struct assign_type * __it)
{
  struct assign_type * D.249326;

  <bb 2> :
  D.249326 = __it;

  <bb 3> :
<L0>:
  return D.249326;

}



;; Function std::__copy_move_a<false, assign_type*, assign_type*> (_ZSt13__copy_move_aILb0EP11assign_typeS1_ET1_T0_S3_S2_, funcdef_no=9277, decl_uid=222706, cgraph_uid=5909, symbol_order=6699)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a<false, assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.249330;
  struct assign_type * D.249328;

  <bb 2> :
  __result.154_1 = __result;
  _2 = std::__niter_base<assign_type*> (__result.154_1);
  _3 = std::__niter_base<assign_type*> (__last);
  _4 = std::__niter_base<assign_type*> (__first);
  D.249330 = std::__copy_move_a1<false, assign_type*, assign_type*> (_4, _3, _2);
  _5 = D.249330;
  D.249328 = std::__niter_wrap<assign_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.249328;

}



;; Function std::__copy_move_a1<false, assign_type*, assign_type*> (_ZSt14__copy_move_a1ILb0EP11assign_typeS1_ET1_T0_S3_S2_, funcdef_no=10000, decl_uid=234582, cgraph_uid=6632, symbol_order=7426)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a1<false, assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.249333;
  struct assign_type * D.249331;

  <bb 2> :
  D.249333 = std::__copy_move_a2<false, assign_type*, assign_type*> (__first, __last, __result);
  D.249331 = D.249333;

  <bb 3> :
<L0>:
  return D.249331;

}



;; Function std::__copy_move_a2<false, assign_type*, assign_type*> (_ZSt14__copy_move_a2ILb0EP11assign_typeS1_ET1_T0_S3_S2_, funcdef_no=10535, decl_uid=241810, cgraph_uid=7167, symbol_order=7961)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a2<false, assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.249334;

  <bb 2> :
  D.249334 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<assign_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.249334;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8479, decl_uid=175888, cgraph_uid=5111, symbol_order=5901)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.249336;

  <bb 2> :
  D.249336 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.249336;

}



;; Function std::vector<assign_type>::size (_ZNKSt6vectorI11assign_typeSaIS0_EE4sizeEv, funcdef_no=7646, decl_uid=176288, cgraph_uid=4278, symbol_order=5064)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<assign_type>::size (const struct vector * const this)
{
  size_type D.249338;

  <bb 2> :
  _1 = this->D.176655._M_impl.D.176000._M_finish;
  _2 = this->D.176655._M_impl.D.176000._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.249338 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.249338;

}



;; Function std::__uninitialized_copy_a<assign_type*, assign_type*, assign_type> (_ZSt22__uninitialized_copy_aIP11assign_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8497, decl_uid=212114, cgraph_uid=5129, symbol_order=5919)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__uninitialized_copy_a<assign_type*, assign_type*, assign_type> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result, struct allocator & D.222713)
{
  struct assign_type * D.249342;
  struct assign_type * D.249340;

  <bb 2> :
  D.249342 = std::uninitialized_copy<assign_type*, assign_type*> (__first, __last, __result);
  D.249340 = D.249342;

  <bb 3> :
<L0>:
  return D.249340;

}



;; Function std::uninitialized_copy<assign_type*, assign_type*> (_ZSt18uninitialized_copyIP11assign_typeS1_ET0_T_S3_S2_, funcdef_no=9278, decl_uid=222715, cgraph_uid=5911, symbol_order=6701)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::uninitialized_copy<assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.249345;
  const bool __assignable;
  struct assign_type * D.249343;

  <bb 2> :
  __assignable = 1;
  D.249345 = std::__uninitialized_copy<true>::__uninit_copy<assign_type*, assign_type*> (__first, __last, __result);
  D.249343 = D.249345;

  <bb 3> :
<L0>:
  return D.249343;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<assign_type*, assign_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIP11assign_typeS3_EET0_T_S5_S4_, funcdef_no=10002, decl_uid=234685, cgraph_uid=6634, symbol_order=7428)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__uninitialized_copy<true>::__uninit_copy<assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.249348;
  struct assign_type * D.249346;

  <bb 2> :
  D.249348 = std::copy<assign_type*, assign_type*> (__first, __last, __result);
  D.249346 = D.249348;

  <bb 3> :
<L0>:
  return D.249346;

}



;; Function std::vector<assign_type>::vector (_ZNSt6vectorI11assign_typeSaIS0_EEC2ERKS2_, funcdef_no=7640, decl_uid=176618, cgraph_uid=4272, symbol_order=5058)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<assign_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct assign_type * D.249353;
  struct __normal_iterator D.249350;
  struct __normal_iterator D.249349;
  struct allocator D.212140;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.176655;
  _2 = &__x->D.176655;
  _3 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_2);
  D.212140 = __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<assign_type>::size (__x);
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_1, _4, &D.212140);

  <bb 3> :
  std::allocator<assign_type>::~allocator (&D.212140);
  D.212140 = {CLOBBER};
  _5 = &this->D.176655;
  _6 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.176655._M_impl.D.176000._M_start;
  D.249349 = std::vector<assign_type>::end (__x);
  D.249350 = std::vector<assign_type>::begin (__x);
  D.249353 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*, assign_type> (D.249350, D.249349, _7, _6);

  <bb 4> :
  _8 = D.249353;
  this->D.176655._M_impl.D.176000._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<assign_type>::~allocator (&D.212140);
  resx 2

  <bb 6> :
<L1>:
  D.212140 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.176655;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::~_Vector_base (_9);
  resx 5

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI11assign_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=8498, decl_uid=175862, cgraph_uid=5130, symbol_order=5920)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<assign_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<assign_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI11assign_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9280, decl_uid=175827, cgraph_uid=5912, symbol_order=6702)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<assign_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<assign_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<assign_type>::allocator (_ZNSaI11assign_typeEC2ERKS0_, funcdef_no=8507, decl_uid=175770, cgraph_uid=5139, symbol_order=5929)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<assign_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<assign_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<assign_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11assign_typeEC2ERKS2_, funcdef_no=9292, decl_uid=175699, cgraph_uid=5924, symbol_order=6714)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<assign_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.175701)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_ZNSt12_Vector_baseI11assign_typeSaIS0_EEC2EmRKS1_, funcdef_no=8500, decl_uid=176087, cgraph_uid=5132, symbol_order=5922)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9282, decl_uid=175992, cgraph_uid=5914, symbol_order=6704)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<assign_type>::allocator (this, __a);
  _1 = &this->D.176000;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_create_storage (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9284, decl_uid=176011, cgraph_uid=5916, symbol_order=6706)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct assign_type * D.249360;

  <bb 2> :
  D.249360 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_allocate (this, __n);
  _1 = D.249360;
  this->_M_impl.D.176000._M_start = _1;
  _2 = this->_M_impl.D.176000._M_start;
  this->_M_impl.D.176000._M_finish = _2;
  _3 = this->_M_impl.D.176000._M_start;
  _4 = __n * 24;
  _5 = _3 + _4;
  this->_M_impl.D.176000._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6271, decl_uid=176047, cgraph_uid=3243, symbol_order=4014)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<assign_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<assign_type>::~allocator (_ZNSaI11assign_typeED2Ev, funcdef_no=7628, decl_uid=175780, cgraph_uid=4260, symbol_order=5046)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<assign_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<assign_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<assign_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI11assign_typeED2Ev, funcdef_no=8476, decl_uid=175709, cgraph_uid=5108, symbol_order=5898)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<assign_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::~_Vector_base (_ZNSt12_Vector_baseI11assign_typeSaIS0_EED2Ev, funcdef_no=7631, decl_uid=176110, cgraph_uid=4263, symbol_order=5049)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.176000._M_end_of_storage;
  _2 = this->_M_impl.D.176000._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.176000._M_start;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::put (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7642, decl_uid=190758, cgraph_uid=4274, symbol_order=5060)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_assign_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_assign_array & v)
{
  bool D.249368;
  struct hash_entry * D.249367;
  unsigned int D.249366;
  bool ins;
  struct hash_entry * e;
  bool D.249364;
  void * D.212150;
  void * D.212149;

  <bb 2> :
  _1 = &this->m_table;
  D.249366 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::hash (k);
  _2 = D.249366;
  D.249367 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.249367;
  D.249368 = hash_map<tree_node*, function_assign_array>::hash_entry::is_empty (e);
  ins = D.249368;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.212149 = &e->m_value;
  D.212150 = operator new (32, D.212149);
  function_assign_array::function_assign_array (D.212150, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_assign_array::operator= (_4, v);

  <bb 5> :
  D.249364 = ~ins;

  <bb 6> :
<L3>:
  return D.249364;

  <bb 7> :
<L4>:
  operator delete (D.212150, D.212149);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8503, decl_uid=190916, cgraph_uid=5135, symbol_order=5925)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.249419;
  bool D.249418;
  bool D.249417;
  bool D.249416;
  bool D.249415;
  bool D.249414;
  struct value_type * D.249413;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.160;
  bool retval.159;
  bool retval.158;
  bool retval.157;
  bool retval.156;
  bool retval.155;
  struct value_type * D.249375;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 40;
  entry = _11 + _13;
  size = this->m_size;
  D.249414 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.155 = D.249414;
  if (retval.155 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.249415 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.156 = D.249415;
  if (retval.156 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 40;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.249416 = hash_map<tree_node*, function_assign_array>::hash_entry::equal (entry, comparable);
  retval.157 = D.249416;
  if (retval.157 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  D.249375 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 40;
  entry = _24 + _26;
  D.249417 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.158 = D.249417;
  if (retval.158 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.249418 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.159 = D.249418;
  if (retval.159 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 40;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.249419 = hash_map<tree_node*, function_assign_array>::hash_entry::equal (entry, comparable);
  retval.160 = D.249419;
  if (retval.160 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 40;
  D.249375 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.249375 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.249375 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 40;
  D.249375 = _37 + _39;

  <bb 27> :
<L37>:
  return D.249375;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9286, decl_uid=190997, cgraph_uid=5921, symbol_order=6711)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.249450;
  unsigned int D.249449;
  bool D.249448;
  bool D.249447;
  struct mem_alloc_description & D.249446;
  struct value_type * D.249445;
  unsigned int D.249444;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.234767;
  void * D.234766;
  struct hash_entry & D.234795;
  bool iftmp.164;
  bool retval.163;
  bool iftmp.162;
  bool retval.161;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 40;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.162 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.162 = 0;

  <bb 6> :
  retval.161 = iftmp.162;
  if (retval.161 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.249444 = hash_table_higher_prime_index (_5);
  nindex = D.249444;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.249445 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.249445;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.249447 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.249447;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.249448 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.249448;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.164 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.164 = 0;

  <bb 15> :
  retval.163 = iftmp.164;
  if (retval.163 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.249449 = hash_map<tree_node*, function_assign_array>::hash_entry::hash (x);
  _16 = D.249449;
  D.249450 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.249450;
  D.234795 = std::move<hash_map<tree_node*, function_assign_array>::hash_entry&> (x);
  D.234766 = q;
  D.234767 = operator new (40, D.234766);
  hash_map<tree_node*, function_assign_array>::hash_entry::hash_entry (D.234767, D.234795);

  <bb 17> :
  p = p + 40;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10004, decl_uid=190892, cgraph_uid=6636, symbol_order=7430)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.249451;

  <bb 2> :
  D.249451 = this->m_size;

  <bb 3> :
<L0>:
  return D.249451;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10005, decl_uid=190894, cgraph_uid=6637, symbol_order=7431)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.249453;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.249453 = _1 - _2;

  <bb 3> :
<L0>:
  return D.249453;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10006, decl_uid=190994, cgraph_uid=6638, symbol_order=7432)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.165;
  bool D.249455;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.165 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.165 = 0;

  <bb 6> :
  D.249455 = iftmp.165;

  <bb 7> :
<L4>:
  return D.249455;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9262, decl_uid=190984, cgraph_uid=5894, symbol_order=6684)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.249477;
  struct value_type * D.249476;
  struct mem_alloc_description & D.249475;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.249473;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.249476 = xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_alloc (n);
  nentries = D.249476;
  goto <bb 6>; [INV]

  <bb 5> :
  D.249477 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_assign_array>::hash_entry> (n);
  nentries = D.249477;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.249473 = nentries;

  <bb 9> :
<L14>:
  return D.249473;

}



;; Function xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=9990, decl_uid=218369, cgraph_uid=6622, symbol_order=7416)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.249480;
  struct hash_entry * D.249478;

  <bb 2> :
  D.249480 = xcalloc (count, 40);
  D.249478 = D.249480;

  <bb 3> :
<L0>:
  return D.249478;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_assign_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=9991, decl_uid=234356, cgraph_uid=6623, symbol_order=7417)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_assign_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.249487;
  struct hash_entry * D.249486;
  struct hash_entry * D.249484;
  bool retval.166;

  <bb 2> :
  retval.166 = need_finalization_p<hash_map<tree_node*, function_assign_array>::hash_entry> ();
  if (retval.166 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 40;
  D.249486 = ggc_internal_cleared_alloc (_1, finalize, 40, c);
  D.249484 = D.249486;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 40;
  D.249487 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.249484 = D.249487;

  <bb 5> :
<L2>:
  return D.249484;

}



;; Function finalize<hash_map<tree_node*, function_assign_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10526, decl_uid=241776, cgraph_uid=7161, symbol_order=7955)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_assign_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_assign_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10528, decl_uid=245261, cgraph_uid=7159, symbol_order=7953)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_assign_array::~function_assign_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_assign_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10525, decl_uid=241775, cgraph_uid=7157, symbol_order=7951)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_assign_array>::hash_entry> ()
{
  bool D.249488;

  <bb 2> :
  D.249488 = 1;

  <bb 3> :
<L0>:
  return D.249488;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10008, decl_uid=190817, cgraph_uid=6640, symbol_order=7434)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_assign_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.249492;
  hashval_t D.249490;

  <bb 2> :
  _1 = &e->m_key;
  D.249492 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::hash (_1);
  D.249490 = D.249492;

  <bb 3> :
<L0>:
  return D.249490;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10007, decl_uid=190987, cgraph_uid=6639, symbol_order=7433)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.249505;
  bool D.249504;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.168;
  struct value_type * D.249496;
  bool retval.167;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 40;
  slot = _2 + _4;
  D.249504 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.167 = D.249504;
  if (retval.167 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.249496 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 40;
  slot = _8 + _10;
  D.249505 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.168 = D.249505;
  if (retval.168 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.249496 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.249496;

}



;; Function std::move<hash_map<tree_node*, function_assign_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10009, decl_uid=234764, cgraph_uid=6641, symbol_order=7435)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_assign_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.249506;

  <bb 2> :
  D.249506 = __t;

  <bb 3> :
<L0>:
  return D.249506;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9288, decl_uid=234789, cgraph_uid=5919, symbol_order=6709)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.234791)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.234791->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.234791->m_value;
  function_assign_array::function_assign_array (_2, _3);
  return;

}



;; Function function_assign_array::function_assign_array (_ZN21function_assign_arrayC2EOS_, funcdef_no=6290, decl_uid=190546, cgraph_uid=3265, symbol_order=4036)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_assign_array::function_assign_array (struct function_assign_array * const this, struct function_assign_array & D.190548)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.190548->pass;
  this->pass = _1;
  _2 = &this->assign_type_array;
  _3 = &D.190548->assign_type_array;
  std::vector<assign_type>::vector (_2, _3);
  return;

}



;; Function std::vector<assign_type>::vector (_ZNSt6vectorI11assign_typeSaIS0_EEC2EOS2_, funcdef_no=6288, decl_uid=176612, cgraph_uid=3262, symbol_order=4033)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::vector (struct vector * const this, struct vector & D.176614)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.176655;
  _2 = &D.176614->D.176655;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_ZNSt12_Vector_baseI11assign_typeSaIS0_EEC2EOS2_, funcdef_no=6286, decl_uid=176080, cgraph_uid=3259, symbol_order=4030)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.176082)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.176082->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=7644, decl_uid=175986, cgraph_uid=4276, symbol_order=5062)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl&> (__x);
  std::allocator<assign_type>::allocator (this, _1);
  _2 = &this->D.176000;
  _3 = std::move<std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.176000;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI11assign_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=8505, decl_uid=212158, cgraph_uid=5137, symbol_order=5927)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.249508;

  <bb 2> :
  D.249508 = __t;

  <bb 3> :
<L0>:
  return D.249508;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=8510, decl_uid=175942, cgraph_uid=5142, symbol_order=5932)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8959, decl_uid=218371, cgraph_uid=5591, symbol_order=6381)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9290, decl_uid=191005, cgraph_uid=5922, symbol_order=6712)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_assign_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10010, decl_uid=190829, cgraph_uid=6642, symbol_order=7436)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::mark_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::mark_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10537, decl_uid=241852, cgraph_uid=7169, symbol_order=7963)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::mark_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function pointer_hash<tree_node>::mark_empty (_ZN12pointer_hashI9tree_nodeE10mark_emptyERPS0_, funcdef_no=10856, decl_uid=85306, cgraph_uid=7488, symbol_order=8284)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void pointer_hash<tree_node>::mark_empty (union tree_node * & e)
{
  <bb 2> :
  *e = 0B;
  return;

}



;; Function function_assign_array::function_assign_array (_ZN21function_assign_arrayC2ERKS_, funcdef_no=6294, decl_uid=190537, cgraph_uid=3269, symbol_order=4040)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_assign_array::function_assign_array (struct function_assign_array * const this, const struct function_assign_array & D.190539)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.190539->pass;
  this->pass = _1;
  _2 = &this->assign_type_array;
  _3 = &D.190539->assign_type_array;
  std::vector<assign_type>::vector (_2, _3);
  return;

}



;; Function operator delete (_ZdlPvS_, funcdef_no=17, decl_uid=3708, cgraph_uid=18, symbol_order=17)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void operator delete (void * D.3706, void * D.3707)
{
  <bb 2> :
  return;

}



;; Function std::vector<assign_type>::~vector (_ZNSt6vectorI11assign_typeSaIS0_EED2Ev, funcdef_no=7634, decl_uid=176652, cgraph_uid=4266, symbol_order=5052)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.176655;
  _2 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.176655._M_impl.D.176000._M_finish;
  _4 = this->D.176655._M_impl.D.176000._M_start;
  std::_Destroy<assign_type*, assign_type> (_4, _3, _2);
  _5 = &this->D.176655;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function function_assign_array::~function_assign_array (_ZN21function_assign_arrayD2Ev, funcdef_no=6280, decl_uid=190704, cgraph_uid=3255, symbol_order=4026)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_assign_array::~function_assign_array (struct function_assign_array * const this)
{
  <bb 2> :
  _1 = &this->assign_type_array;
  std::vector<assign_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function get_function_varstmt (_Z20get_function_varstmtP9tree_nodeS0_, funcdef_no=6292, decl_uid=191162, cgraph_uid=3271, symbol_order=4042)

Merging blocks 4 and 18
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 12 11
;; 2 succs { 21 3 }
;; 3 succs { 4 5 }
;; 4 succs { 18 }
;; 5 succs { 21 6 }
;; 6 succs { 21 7 }
;; 7 succs { 20 8 }
;; 8 succs { 19 9 }
;; 9 succs { 19 10 }
;; 10 succs { 14 }
;; 11 succs { 19 12 }
;; 12 succs { 19 13 }
;; 13 succs { 14 }
;; 14 succs { 11 15 }
;; 15 succs { 19 16 }
;; 16 succs { 19 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { }
void get_function_varstmt (union tree_node * function_tree, union tree_node * vartree)
{
  struct function_assign_array * D.249517;
  struct function_assign_array * D.249516;
  int i;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  bool retval.176;
  bool retval.169;

  <bb 2> :
  function_assign_collect.170_1 = function_assign_collect;
  D.249516 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.170_1, &function_tree);

  <bb 3> :
  _2 = D.249516;
  retval.169 = _2 == 0B;
  if (retval.169 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  goto <bb 18>; [INV]

  <bb 5> :
  function_assign_collect.171_3 = function_assign_collect;
  D.249517 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.171_3, &function_tree);

  <bb 6> :
  _4 = D.249517;
  function_assign_array::function_assign_array (&assign_array, _4);

  <bb 7> :
  std::vector<assign_type>::vector (&assign_type_array, &assign_array.assign_type_array);

  <bb 8> :
  _5 = std::vector<assign_type>::size (&assign_type_array);
  function_tree.172_6 = function_tree;
  stderr.173_7 = stderr;
  fprintf (stderr.173_7, "=======print_function_var %d   %d========\n", function_tree.172_6, _5);

  <bb 9> :
  stderr.174_8 = stderr;
  __builtin_fwrite ("[\n", 1, 2, stderr.174_8);

  <bb 10> :
  i = 0;
  goto <bb 14>; [INV]

  <bb 11> :
  _9 = (long unsigned int) i;
  _10 = std::vector<assign_type>::operator[] (&assign_type_array, _9);
  _11 = _10->stmt;
  debug (_11);

  <bb 12> :
  stderr.175_12 = stderr;
  __builtin_fwrite (",\n", 1, 2, stderr.175_12);

  <bb 13> :
  i = i + 1;

  <bb 14> :
  _13 = (long unsigned int) i;
  _14 = std::vector<assign_type>::size (&assign_type_array);
  retval.176 = _13 < _14;
  if (retval.176 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  stderr.177_15 = stderr;
  __builtin_fwrite ("GIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGN CALLLLLLLLLLLLLLLLLLLLLLL\n", 1, 196, stderr.177_15);

  <bb 16> :
  stderr.178_16 = stderr;
  __builtin_fwrite ("]\n", 1, 2, stderr.178_16);

  <bb 17> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};

  <bb 18> :
<L7>:
  return;

  <bb 19> :
<L8>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 3

  <bb 20> :
<L9>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 2

  <bb 21> :
<L10>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  resx 1

}



;; Function std::vector<assign_type>::operator[] (_ZNSt6vectorI11assign_typeSaIS0_EEixEm, funcdef_no=7647, decl_uid=176308, cgraph_uid=4279, symbol_order=5065)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<assign_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.249523;

  <bb 2> :
  _1 = this->D.176655._M_impl.D.176000._M_start;
  _2 = __n * 24;
  D.249523 = _1 + _2;

  <bb 3> :
<L0>:
  return D.249523;

}



;; Function get_function_specialstmt (_Z24get_function_specialstmtP9tree_nodeS0_, funcdef_no=6296, decl_uid=191178, cgraph_uid=3272, symbol_order=4043)

Merging blocks 4 and 18
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 12 11
;; 2 succs { 21 3 }
;; 3 succs { 4 5 }
;; 4 succs { 18 }
;; 5 succs { 21 6 }
;; 6 succs { 21 7 }
;; 7 succs { 20 8 }
;; 8 succs { 19 9 }
;; 9 succs { 19 10 }
;; 10 succs { 14 }
;; 11 succs { 19 12 }
;; 12 succs { 19 13 }
;; 13 succs { 14 }
;; 14 succs { 11 15 }
;; 15 succs { 19 16 }
;; 16 succs { 19 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { }
void get_function_specialstmt (union tree_node * function_tree, union tree_node * vartree)
{
  struct function_return_array * D.249531;
  struct function_return_array * D.249530;
  int i;
  struct vector ret_type_array;
  struct function_return_array fun_array;
  bool retval.186;
  bool retval.179;

  <bb 2> :
  function_return_collect.180_1 = function_return_collect;
  D.249530 = hash_map<tree_node*, function_return_array>::get (function_return_collect.180_1, &function_tree);

  <bb 3> :
  _2 = D.249530;
  retval.179 = _2 == 0B;
  if (retval.179 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  goto <bb 18>; [INV]

  <bb 5> :
  function_return_collect.181_3 = function_return_collect;
  D.249531 = hash_map<tree_node*, function_return_array>::get (function_return_collect.181_3, &function_tree);

  <bb 6> :
  _4 = D.249531;
  function_return_array::function_return_array (&fun_array, _4);

  <bb 7> :
  std::vector<return_type>::vector (&ret_type_array, &fun_array.return_type_array);

  <bb 8> :
  _5 = std::vector<return_type>::size (&ret_type_array);
  function_tree.182_6 = function_tree;
  stderr.183_7 = stderr;
  fprintf (stderr.183_7, "=======print_function_return %d   %d========\n", function_tree.182_6, _5);

  <bb 9> :
  stderr.184_8 = stderr;
  __builtin_fwrite ("[\n", 1, 2, stderr.184_8);

  <bb 10> :
  i = 0;
  goto <bb 14>; [INV]

  <bb 11> :
  _9 = (long unsigned int) i;
  _10 = std::vector<return_type>::operator[] (&ret_type_array, _9);
  _11 = _10->stmt;
  debug (_11);

  <bb 12> :
  stderr.185_12 = stderr;
  __builtin_fwrite (",\n", 1, 2, stderr.185_12);

  <bb 13> :
  i = i + 1;

  <bb 14> :
  _13 = (long unsigned int) i;
  _14 = std::vector<return_type>::size (&ret_type_array);
  retval.186 = _13 < _14;
  if (retval.186 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  stderr.187_15 = stderr;
  __builtin_fwrite ("GIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGN CALLLLLLLLLLLLLLLLLLLLLLL\n", 1, 196, stderr.187_15);

  <bb 16> :
  stderr.188_16 = stderr;
  __builtin_fwrite ("]\n", 1, 2, stderr.188_16);

  <bb 17> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};

  <bb 18> :
<L7>:
  return;

  <bb 19> :
<L8>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 3

  <bb 20> :
<L9>:
  function_return_array::~function_return_array (&fun_array);
  resx 2

  <bb 21> :
<L10>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  resx 1

}



;; Function trace_fucntion_relate_stmt (_Z26trace_fucntion_relate_stmtP11cgraph_nodeP9tree_nodeS2_, funcdef_no=6297, decl_uid=187064, cgraph_uid=3293, symbol_order=4070)

Removing basic block 24
Removing basic block 25
Removing basic block 26
Removing basic block 62
Removing basic block 63
Removing basic block 64
Removing basic block 113
Removing basic block 114
Removing basic block 115
Removing basic block 116
Removing basic block 118
Removing basic block 122
Removing basic block 123
Removing basic block 124
Removing basic block 125
Removing basic block 126
Removing basic block 127
Removing basic block 136
Removing basic block 137
Removing basic block 149
Removing basic block 150
Removing basic block 160
Removing basic block 165
Removing basic block 168
Removing basic block 190
Removing basic block 200
Removing basic block 201
Removing basic block 202
Removing basic block 203
Removing basic block 204
Removing basic block 230
Removing basic block 231
Removing basic block 232
Removing basic block 259
Removing basic block 260
Removing basic block 261
Removing basic block 262
Removing basic block 263
Removing basic block 264
Removing basic block 299
Removing basic block 304
Removing basic block 307
Removing basic block 328
Removing basic block 334
Removing basic block 335
Removing basic block 336
Removing basic block 337
Removing basic block 338
Removing basic block 339
Removing basic block 340
Removing basic block 349
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 1
;;  header 308, latch 307
;;  depth 1, outer 0
;;  nodes
;;
;; Loop 2
;;  header 294, latch 293
;;  depth 2, outer 1
;;  nodes
;;
;; Loop 3
;;  header 292, latch 291
;;  depth 3, outer 2
;;  nodes
;; 2 succs { 3 4 }
;; 3 succs { 310 }
;; 4 succs { 308 }
;; 5 succs { 6 7 }
;; 6 succs { 307 }
;; 7 succs { 8 306 }
;; 8 succs { 315 9 }
;; 9 succs { 315 10 }
;; 10 succs { 315 11 }
;; 11 succs { 315 12 }
;; 12 succs { 315 13 }
;; 13 succs { 294 }
;; 14 succs { 16 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 292 }
;; 18 succs { 19 24 }
;; 19 succs { 311 20 }
;; 20 succs { 311 21 }
;; 21 succs { 22 24 }
;; 22 succs { 23 24 }
;; 23 succs { 311 24 }
;; 24 succs { 25 226 }
;; 25 succs { 26 175 }
;; 26 succs { 27 175 }
;; 27 succs { 29 28 }
;; 28 succs { 29 175 }
;; 29 succs { 311 30 }
;; 30 succs { 31 175 }
;; 31 succs { 311 32 }
;; 32 succs { 35 33 }
;; 33 succs { 311 34 }
;; 34 succs { 35 36 }
;; 35 succs { 37 }
;; 36 succs { 37 }
;; 37 succs { 38 175 }
;; 38 succs { 311 39 }
;; 39 succs { 40 175 }
;; 40 succs { 311 41 }
;; 41 succs { 311 42 }
;; 42 succs { 43 175 }
;; 43 succs { 311 44 }
;; 44 succs { 45 130 }
;; 45 succs { 311 46 }
;; 46 succs { 311 47 }
;; 47 succs { 48 59 }
;; 48 succs { 311 49 }
;; 49 succs { 50 59 }
;; 50 succs { 311 51 }
;; 51 succs { 311 52 }
;; 52 succs { 53 59 }
;; 53 succs { 311 54 }
;; 54 succs { 311 55 }
;; 55 succs { 311 56 }
;; 56 succs { 311 57 }
;; 57 succs { 311 58 }
;; 58 succs { 311 59 }
;; 59 succs { 311 60 }
;; 60 succs { 61 64 }
;; 61 succs { 311 62 }
;; 62 succs { 63 64 }
;; 63 succs { 65 }
;; 64 succs { 65 }
;; 65 succs { 66 67 }
;; 66 succs { 291 }
;; 67 succs { 311 68 }
;; 68 succs { 69 72 }
;; 69 succs { 311 70 }
;; 70 succs { 71 72 }
;; 71 succs { 73 }
;; 72 succs { 73 }
;; 73 succs { 74 111 }
;; 74 succs { 311 75 }
;; 75 succs { 76 130 }
;; 76 succs { 77 130 }
;; 77 succs { 78 130 }
;; 78 succs { 79 130 }
;; 79 succs { 81 80 }
;; 80 succs { 81 82 }
;; 81 succs { 291 }
;; 82 succs { 83 85 }
;; 83 succs { 84 85 }
;; 84 succs { 86 }
;; 85 succs { 86 }
;; 86 succs { 87 130 }
;; 87 succs { 311 88 }
;; 88 succs { 311 89 }
;; 89 succs { 90 130 }
;; 90 succs { 311 91 }
;; 91 succs { 311 92 }
;; 92 succs { 93 130 }
;; 93 succs { 94 109 }
;; 94 succs { 95 109 }
;; 95 succs { 311 96 }
;; 96 succs { 97 108 }
;; 97 succs { 311 98 }
;; 98 succs { 99 107 }
;; 99 succs { 100 108 }
;; 100 succs { 311 101 }
;; 101 succs { 102 108 }
;; 102 succs { 311 103 }
;; 103 succs { 104 108 }
;; 104 succs { 311 105 }
;; 105 succs { 106 108 }
;; 106 succs { 291 }
;; 107 succs { 291 }
;; 108 succs { 110 }
;; 109 succs { 291 }
;; 110 succs { 130 }
;; 111 succs { 311 112 }
;; 112 succs { 113 119 }
;; 113 succs { 311 114 }
;; 114 succs { 311 115 }
;; 115 succs { 116 130 }
;; 116 succs { 311 117 }
;; 117 succs { 118 130 }
;; 118 succs { 291 }
;; 119 succs { 311 120 }
;; 120 succs { 121 130 }
;; 121 succs { 311 122 }
;; 122 succs { 311 123 }
;; 123 succs { 125 124 }
;; 124 succs { 125 126 }
;; 125 succs { 291 }
;; 126 succs { 311 127 }
;; 127 succs { 311 128 }
;; 128 succs { 129 130 }
;; 129 succs { 291 }
;; 130 succs { 311 131 }
;; 131 succs { 311 132 }
;; 132 succs { 311 133 }
;; 133 succs { 311 134 }
;; 134 succs { 311 135 }
;; 135 succs { 136 166 }
;; 136 succs { 137 145 }
;; 137 succs { 138 139 }
;; 138 succs { 311 144 }
;; 139 succs { 140 143 }
;; 140 succs { 311 141 }
;; 141 succs { 311 142 }
;; 142 succs { 311 143 }
;; 143 succs { 311 144 }
;; 144 succs { 311 155 }
;; 145 succs { 146 148 }
;; 146 succs { 311 147 }
;; 147 succs { 155 }
;; 148 succs { 149 154 }
;; 149 succs { 311 150 }
;; 150 succs { 311 151 }
;; 151 succs { 311 152 }
;; 152 succs { 311 153 }
;; 153 succs { 154 }
;; 154 succs { 311 155 }
;; 155 succs { 311 156 }
;; 156 succs { 311 157 }
;; 157 succs { 311 158 }
;; 158 succs { 311 159 }
;; 159 succs { 311 160 }
;; 160 succs { 311 161 }
;; 161 succs { 311 162 }
;; 162 succs { 311 163 }
;; 163 succs { 311 164 }
;; 164 succs { 311 165 }
;; 165 succs { 311 171 }
;; 166 succs { 311 167 }
;; 167 succs { 311 168 }
;; 168 succs { 311 169 }
;; 169 succs { 311 170 }
;; 170 succs { 311 171 }
;; 171 succs { 311 172 }
;; 172 succs { 311 173 }
;; 173 succs { 311 174 }
;; 174 succs { 311 175 }
;; 175 succs { 311 176 }
;; 176 succs { 178 177 }
;; 177 succs { 178 179 }
;; 178 succs { 180 }
;; 179 succs { 180 }
;; 180 succs { 181 291 }
;; 181 succs { 311 182 }
;; 182 succs { 311 183 }
;; 183 succs { 184 186 }
;; 184 succs { 311 185 }
;; 185 succs { 186 }
;; 186 succs { 187 200 }
;; 187 succs { 188 200 }
;; 188 succs { 189 200 }
;; 189 succs { 190 200 }
;; 190 succs { 311 191 }
;; 191 succs { 311 192 }
;; 192 succs { 311 193 }
;; 193 succs { 311 194 }
;; 194 succs { 311 195 }
;; 195 succs { 311 196 }
;; 196 succs { 311 197 }
;; 197 succs { 311 198 }
;; 198 succs { 311 199 }
;; 199 succs { 311 200 }
;; 200 succs { 201 291 }
;; 201 succs { 202 291 }
;; 202 succs { 311 203 }
;; 203 succs { 204 291 }
;; 204 succs { 311 205 }
;; 205 succs { 206 291 }
;; 206 succs { 207 214 }
;; 207 succs { 311 208 }
;; 208 succs { 311 209 }
;; 209 succs { 210 214 }
;; 210 succs { 311 211 }
;; 211 succs { 311 212 }
;; 212 succs { 213 214 }
;; 213 succs { 215 }
;; 214 succs { 215 }
;; 215 succs { 216 291 }
;; 216 succs { 311 217 }
;; 217 succs { 311 218 }
;; 218 succs { 311 219 }
;; 219 succs { 311 220 }
;; 220 succs { 311 221 }
;; 221 succs { 311 222 }
;; 222 succs { 311 223 }
;; 223 succs { 311 224 }
;; 224 succs { 311 225 }
;; 225 succs { 311 291 }
;; 226 succs { 227 291 }
;; 227 succs { 228 291 }
;; 228 succs { 229 291 }
;; 229 succs { 230 291 }
;; 230 succs { 311 231 }
;; 231 succs { 232 291 }
;; 232 succs { 311 233 }
;; 233 succs { 311 234 }
;; 234 succs { 311 235 }
;; 235 succs { 236 291 }
;; 236 succs { 311 237 }
;; 237 succs { 243 238 }
;; 238 succs { 311 239 }
;; 239 succs { 243 240 }
;; 240 succs { 311 241 }
;; 241 succs { 311 242 }
;; 242 succs { 243 244 }
;; 243 succs { 245 }
;; 244 succs { 245 }
;; 245 succs { 246 291 }
;; 246 succs { 247 291 }
;; 247 succs { 250 248 }
;; 248 succs { 250 249 }
;; 249 succs { 250 251 }
;; 250 succs { 291 }
;; 251 succs { 311 252 }
;; 252 succs { 253 291 }
;; 253 succs { 311 254 }
;; 254 succs { 311 255 }
;; 255 succs { 256 291 }
;; 256 succs { 257 286 }
;; 257 succs { 258 266 }
;; 258 succs { 259 260 }
;; 259 succs { 311 265 }
;; 260 succs { 261 264 }
;; 261 succs { 311 262 }
;; 262 succs { 311 263 }
;; 263 succs { 311 264 }
;; 264 succs { 311 265 }
;; 265 succs { 311 276 }
;; 266 succs { 267 269 }
;; 267 succs { 311 268 }
;; 268 succs { 276 }
;; 269 succs { 270 275 }
;; 270 succs { 311 271 }
;; 271 succs { 311 272 }
;; 272 succs { 311 273 }
;; 273 succs { 311 274 }
;; 274 succs { 275 }
;; 275 succs { 311 276 }
;; 276 succs { 311 277 }
;; 277 succs { 311 278 }
;; 278 succs { 311 279 }
;; 279 succs { 311 280 }
;; 280 succs { 311 281 }
;; 281 succs { 311 282 }
;; 282 succs { 311 283 }
;; 283 succs { 311 284 }
;; 284 succs { 311 285 }
;; 285 succs { 311 290 }
;; 286 succs { 311 287 }
;; 287 succs { 311 288 }
;; 288 succs { 311 289 }
;; 289 succs { 311 290 }
;; 290 succs { 291 }
;; 291 succs { 292 }
;; 292 succs { 18 293 }
;; 293 succs { 294 }
;; 294 succs { 14 295 }
;; 295 succs { 296 305 }
;; 296 succs { 312 297 }
;; 297 succs { 298 299 }
;; 298 succs { 312 302 }
;; 299 succs { 312 300 }
;; 300 succs { 312 301 }
;; 301 succs { 312 302 }
;; 302 succs { 312 303 }
;; 303 succs { 312 304 }
;; 304 succs { 305 }
;; 305 succs { 306 }
;; 306 succs { 307 }
;; 307 succs { 308 }
;; 308 succs { 5 309 }
;; 309 succs { 310 }
;; 310 succs { 1 }
;; 311 succs { 315 }
;; 312 succs { 313 }
;; 313 succs { 314 }
;; 314 succs { 315 }
;; 315 succs { }
void trace_fucntion_relate_stmt (struct cgraph_node * node, union tree_node * function_tree, union tree_node * mallocStmt_tree)
{
  struct cgraph_node * D.249917;
  struct function_relate_array * D.249912;
  struct function_relate_array * D.249911;
  union tree_node * D.249909;
  union tree_node * D.249908;
  const char * D.249907;
  bool D.249906;
  union tree_node * D.249905;
  union tree_node * D.249904;
  const char * D.249903;
  union tree_node * D.249902;
  union tree_node * D.249901;
  union tree_node * D.249900;
  union tree_node * D.249899;
  const char * D.249898;
  union tree_node * D.249897;
  unsigned int D.249896;
  union tree_node * D.249895;
  const char * D.249894;
  bool D.249893;
  union tree_node * D.249892;
  bool D.249891;
  union tree_node * D.249890;
  union tree_node * D.249889;
  union tree_node * D.249888;
  union tree_node * D.249887;
  const char * D.249886;
  union tree_node * D.249885;
  union tree_node * D.249884;
  union tree_node * D.249883;
  union tree_node * D.249882;
  union tree_node * D.249881;
  union tree_node * D.249880;
  const char * D.249879;
  const char * D.249878;
  union tree_node * D.249877;
  const char * D.249876;
  bool D.249875;
  union tree_node * D.249874;
  union tree_node * D.249873;
  union tree_node * D.249872;
  union tree_node * D.249871;
  union tree_node * D.249870;
  bool D.249869;
  union tree_node * D.249868;
  union tree_node * D.249867;
  bool D.249866;
  union tree_node * D.249865;
  union tree_node * D.249864;
  union tree_node * D.249863;
  union tree_node * D.249862;
  const char * D.249861;
  union tree_node * D.249860;
  const char * D.249859;
  union tree_node * D.249858;
  union tree_node * D.249857;
  union tree_node * D.249856;
  union tree_node * D.249855;
  union tree_node * D.249854;
  union tree_node * D.249853;
  union tree_node * D.249852;
  bool D.249851;
  union tree_node * D.249850;
  union tree_node * D.249849;
  bool D.249848;
  union tree_node * D.249847;
  union tree_node * D.249846;
  bool D.249845;
  union tree_node * D.249844;
  union tree_node * D.249843;
  union tree_node * D.249842;
  union tree_node * D.249841;
  union tree_node * D.249840;
  const char * D.249839;
  union tree_node * D.249838;
  const char * D.249837;
  const char * D.249836;
  struct function * D.249835;
  struct cgraph_node * D.249834;
  struct relate_type relate_type;
  long unsigned int x;
  struct pt_solution * pt2;
  const char * name;
  struct pt_solution * pt1;
  struct ptr_info_def * pi4;
  struct ptr_info_def * pi3;
  struct ptr_info_def * pi2;
  struct ptr_info_def * pi1;
  struct gimple * def_stmt;
  union tree_node * second;
  struct pt_solution * pt4;
  struct pt_solution * pt3;
  struct pt_solution * pt2;
  struct pt_solution * pt1;
  struct gimple * def_stmt2;
  struct gimple * def_stmt;
  union tree_node * first;
  long unsigned int x;
  struct pt_solution * pt2;
  struct pt_solution * pt1;
  struct ptr_info_def * pi4;
  struct ptr_info_def * pi3;
  struct ptr_info_def * pi2;
  struct ptr_info_def * pi1;
  const char * name;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct function_relate_array fun_array;
  struct vector relate_type_array;
  int seccount;
  int fucntion_level;
  union tree_node * t;
  struct basic_block_def * bb;
  struct cgraph_edge * e;
  bool retval.340;
  bool retval.337;
  bool retval.308;
  bool iftmp.307;
  bool retval.306;
  bool retval.305;
  bool retval.304;
  bool retval.300;
  bool iftmp.291;
  bool retval.290;
  bool retval.289;
  bool retval.279;
  bool iftmp.277;
  bool retval.276;
  bool retval.240;
  bool retval.239;
  bool retval.238;
  bool retval.236;
  bool retval.235;
  bool retval.233;
  bool retval.232;
  bool retval.231;
  bool retval.230;
  bool retval.229;
  bool retval.228;
  bool retval.227;
  bool iftmp.226;
  bool retval.225;
  bool iftmp.222;
  bool retval.221;
  bool iftmp.220;
  bool retval.219;
  bool retval.213;
  bool retval.212;
  bool retval.210;
  bool retval.209;
  bool retval.207;
  bool iftmp.206;
  bool retval.205;
  bool retval.204;
  bool retval.199;
  bool retval.198;

  <bb 2> :
  if (node == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 310>; [INV]

  <bb 4> :
  symtab.189_1 = symtab;
  D.249834 = symbol_table::first_defined_function (symtab.189_1);
  node = D.249834;
  goto <bb 308>; [INV]

  <bb 5> :
  fucntion_level = 0;
  D.249835 = cgraph_node::get_fun (node);
  _2 = D.249835;
  push_cfun (_2);
  cfun.190_3 = cfun;
  if (cfun.190_3 == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  pop_cfun ();
  // predicted unlikely by continue predictor.
  goto <bb 307>; [INV]

  <bb 7> :
  cfun.191_4 = cfun;
  _5 = cfun.191_4->decl;
  if (function_tree == _5)
    goto <bb 8>; [INV]
  else
    goto <bb 306>; [INV]

  <bb 8> :
  now_relatelaststmt = 0B;
  calculate_dominance_info (1);

  <bb 9> :
  D.249836 = get_name (function_tree);

  <bb 10> :
  _6 = D.249836;
  stderr.192_7 = stderr;
  fprintf (stderr.192_7, "\x1b[40;36m ======= node_fun:%s========= \x1b[0m\n", _6);

  <bb 11> :
  mallocStmt_tree.193_8 = mallocStmt_tree;
  D.249837 = get_name (mallocStmt_tree.193_8);

  <bb 12> :
  _9 = D.249837;
  stderr.194_10 = stderr;
  fprintf (stderr.194_10, "\x1b[40;36m ======= find relate stmt with %s ========= \x1b[0m\n", _9);

  <bb 13> :
  seccount = 0;
  cfun.195_11 = cfun;
  _12 = cfun.195_11->cfg;
  _13 = _12->x_entry_block_ptr;
  bb = _13->next_bb;
  goto <bb 294>; [INV]

  <bb 14> :
  tracerelatestmt.196_14 = tracerelatestmt;
  _15 = ~tracerelatestmt.196_14;
  if (_15 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  freemod.197_16 = freemod;
  _17 = ~freemod.197_16;
  if (_17 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  fistconunt = 0;

  <bb 17> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 292>; [INV]

  <bb 18> :
  gc = gsi_stmt (gsi);
  retval.198 = is_gimple_call (gc);
  if (retval.198 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 19> :
  D.249838 = gimple_call_fn (gc);

  <bb 20> :
  _18 = D.249838;
  D.249839 = get_name (_18);

  <bb 21> :
  name = D.249839;
  if (name != 0B)
    goto <bb 22>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 22> :
  _19 = strcmp (name, "pthread_exit");
  if (_19 == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  debug_gimple_stmt (gc);

  <bb 24> :
  retval.199 = is_gimple_assign (gc);
  if (retval.199 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 226>; [INV]

  <bb 25> :
  mallocStmt_tree.200_20 = mallocStmt_tree;
  pi1 = mallocStmt_tree.200_20->ssa_name.info.ptr_info;
  pt1 = &pi1->pt;
  if (pt1 != 0B)
    goto <bb 26>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 26> :
  relatemod.201_21 = relatemod;
  if (relatemod.201_21 != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 27> :
  mallocStmt_tree.202_22 = mallocStmt_tree;
  _23 = mallocStmt_tree.202_22->base.code;
  if (_23 == 153)
    goto <bb 29>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 28> :
  mallocStmt_tree.203_24 = mallocStmt_tree;
  _25 = mallocStmt_tree.203_24->base.code;
  if (_25 == 36)
    goto <bb 29>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 29> :
  D.249840 = gimple_assign_lhs (gc);

  <bb 30> :
  _26 = D.249840;
  retval.204 = _26 != 0B;
  if (retval.204 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 31> :
  D.249841 = gimple_assign_lhs (gc);

  <bb 32> :
  _27 = D.249841;
  _28 = _27->base.code;
  if (_28 == 153)
    goto <bb 35>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 33> :
  D.249842 = gimple_assign_lhs (gc);

  <bb 34> :
  _29 = D.249842;
  _30 = _29->base.code;
  if (_30 == 165)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  iftmp.206 = 1;
  goto <bb 37>; [INV]

  <bb 36> :
  iftmp.206 = 0;

  <bb 37> :
  retval.205 = iftmp.206;
  if (retval.205 != 0)
    goto <bb 38>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 38> :
  D.249843 = gimple_assign_lhs (gc);

  <bb 39> :
  _31 = D.249843;
  pi2 = _31->ssa_name.info.ptr_info;
  pt2 = &pi2->pt;
  if (pt2 != 0B)
    goto <bb 40>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 40> :
  D.249844 = gimple_assign_lhs (gc);

  <bb 41> :
  _32 = D.249844;
  mallocStmt_tree.208_33 = mallocStmt_tree;
  D.249845 = ptr_derefs_may_alias_p (mallocStmt_tree.208_33, _32);

  <bb 42> :
  retval.207 = D.249845;
  if (retval.207 != 0)
    goto <bb 43>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 43> :
  D.249846 = gimple_assign_rhs1 (gc);

  <bb 44> :
  _34 = D.249846;
  retval.209 = _34 != 0B;
  if (retval.209 != 0)
    goto <bb 45>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 45> :
  D.249847 = gimple_assign_lhs (gc);

  <bb 46> :
  _35 = D.249847;
  mallocStmt_tree.211_36 = mallocStmt_tree;
  D.249848 = ptr_derefs_may_alias_p (mallocStmt_tree.211_36, _35);

  <bb 47> :
  retval.210 = D.249848;
  if (retval.210 != 0)
    goto <bb 48>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 48> :
  D.249849 = gimple_assign_lhs (gc);

  <bb 49> :
  _37 = D.249849;
  _38 = _37->base.code;
  retval.212 = _38 == 131;
  if (retval.212 != 0)
    goto <bb 50>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 50> :
  D.249850 = gimple_assign_rhs1 (gc);

  <bb 51> :
  _39 = D.249850;
  mallocStmt_tree.214_40 = mallocStmt_tree;
  D.249851 = ptr_derefs_may_alias_p (mallocStmt_tree.214_40, _39);

  <bb 52> :
  retval.213 = D.249851;
  if (retval.213 != 0)
    goto <bb 53>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 53> :
  D.249852 = gimple_assign_rhs1 (gc);

  <bb 54> :
  _41 = D.249852;
  debug_tree (_41);

  <bb 55> :
  stderr.215_42 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.215_42);

  <bb 56> :
  stderr.216_43 = stderr;
  __builtin_fwrite ("\x1b[40;35m this pointer possible  reference other address (rhs)\x1b[0m\n", 1, 66, stderr.216_43);

  <bb 57> :
  stderr.217_44 = stderr;
  __builtin_fwrite ("\x1b[40;35m or assign other value \x1b[0m\n", 1, 36, stderr.217_44);

  <bb 58> :
  stderr.218_45 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.218_45);

  <bb 59> :
  D.249853 = gimple_assign_lhs (gc);

  <bb 60> :
  _46 = D.249853;
  _47 = _46->base.code;
  if (_47 == 153)
    goto <bb 61>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 61> :
  D.249854 = gimple_assign_rhs1 (gc);

  <bb 62> :
  _48 = D.249854;
  _49 = _48->base.code;
  if (_49 == 26)
    goto <bb 63>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 63> :
  iftmp.220 = 1;
  goto <bb 65>; [INV]

  <bb 64> :
  iftmp.220 = 0;

  <bb 65> :
  retval.219 = iftmp.220;
  if (retval.219 != 0)
    goto <bb 66>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 66> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 67> :
  D.249855 = gimple_assign_lhs (gc);

  <bb 68> :
  _50 = D.249855;
  _51 = _50->base.code;
  if (_51 == 165)
    goto <bb 69>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 69> :
  D.249856 = gimple_assign_rhs1 (gc);

  <bb 70> :
  _52 = D.249856;
  _53 = _52->base.code;
  if (_53 == 26)
    goto <bb 71>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 71> :
  iftmp.222 = 1;
  goto <bb 73>; [INV]

  <bb 72> :
  iftmp.222 = 0;

  <bb 73> :
  retval.221 = iftmp.222;
  if (retval.221 != 0)
    goto <bb 74>; [INV]
  else
    goto <bb 111>; [INV]

  <bb 74> :
  D.249857 = gimple_assign_lhs (gc);

  <bb 75> :
  _54 = D.249857;
  first = _54->exp.operands[0];
  def_stmt = first->ssa_name.def_stmt;
  mallocStmt_tree.223_55 = mallocStmt_tree;
  def_stmt2 = mallocStmt_tree.223_55->ssa_name.def_stmt;
  _56 = first->base.code;
  if (_56 != 36)
    goto <bb 76>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 76> :
  mallocStmt_tree.224_57 = mallocStmt_tree;
  _58 = mallocStmt_tree.224_57->base.code;
  if (_58 != 36)
    goto <bb 77>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 77> :
  if (def_stmt != 0B)
    goto <bb 78>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 78> :
  if (def_stmt2 != 0B)
    goto <bb 79>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 79> :
  pi4 = first->ssa_name.info.ptr_info;
  pt1 = &pi4->pt;
  pt2 = &pi1->pt;
  if (pt1 == 0B)
    goto <bb 81>; [INV]
  else
    goto <bb 80>; [INV]

  <bb 80> :
  _59 = BIT_FIELD_REF <*pt1, 8, 0>;
  _60 = _59 & 1;
  if (_60 != 0)
    goto <bb 81>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 81> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 82> :
  _61 = is_gimple_assign (def_stmt);
  if (_61 != 0)
    goto <bb 83>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 83> :
  _62 = is_gimple_assign (def_stmt2);
  if (_62 != 0)
    goto <bb 84>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 84> :
  iftmp.226 = 1;
  goto <bb 86>; [INV]

  <bb 85> :
  iftmp.226 = 0;

  <bb 86> :
  retval.225 = iftmp.226;
  if (retval.225 != 0)
    goto <bb 87>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 87> :
  D.249858 = gimple_assign_rhs1 (def_stmt);

  <bb 88> :
  _63 = D.249858;
  _64 = _63->base.code;
  _65 = (tree_code) _64;
  D.249859 = get_tree_code_name (_65);

  <bb 89> :
  _66 = D.249859;
  _67 = strcmp (_66, "<invalid tree code>");
  retval.227 = _67 == 0;
  if (retval.227 != 0)
    goto <bb 90>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 90> :
  D.249860 = gimple_assign_rhs1 (def_stmt2);

  <bb 91> :
  _68 = D.249860;
  _69 = _68->base.code;
  _70 = (tree_code) _69;
  D.249861 = get_tree_code_name (_70);

  <bb 92> :
  _71 = D.249861;
  _72 = strcmp (_71, "<invalid tree code>");
  retval.228 = _72 == 0;
  if (retval.228 != 0)
    goto <bb 93>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 93> :
  _73 = BIT_FIELD_REF <*pt1, 8, 0>;
  _74 = _73 & 2;
  if (_74 == 0)
    goto <bb 94>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 94> :
  _75 = BIT_FIELD_REF <*pt2, 8, 0>;
  _76 = _75 & 2;
  if (_76 == 0)
    goto <bb 95>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 95> :
  D.249862 = gimple_assign_rhs1 (def_stmt2);

  <bb 96> :
  _77 = D.249862;
  retval.229 = _77 != 0B;
  if (retval.229 != 0)
    goto <bb 97>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 97> :
  D.249863 = gimple_assign_rhs1 (def_stmt2);

  <bb 98> :
  _78 = D.249863;
  _79 = is_global_var (_78);
  retval.230 = ~_79;
  if (retval.230 != 0)
    goto <bb 99>; [INV]
  else
    goto <bb 107>; [INV]

  <bb 99> :
  if (pt1 != 0B)
    goto <bb 100>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 100> :
  D.249864 = gimple_assign_rhs1 (def_stmt);

  <bb 101> :
  _80 = D.249864;
  retval.231 = _80 != 0B;
  if (retval.231 != 0)
    goto <bb 102>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 102> :
  D.249865 = gimple_assign_rhs1 (def_stmt);

  <bb 103> :
  _81 = D.249865;
  retval.232 = is_global_var (_81);
  if (retval.232 != 0)
    goto <bb 104>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 104> :
  mallocStmt_tree.234_82 = mallocStmt_tree;
  D.249866 = ptr_derefs_may_alias_p (mallocStmt_tree.234_82, first);

  <bb 105> :
  _83 = D.249866;
  retval.233 = ~_83;
  if (retval.233 != 0)
    goto <bb 106>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 106> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 107> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 108> :
  goto <bb 110>; [INV]

  <bb 109> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 110> :
  goto <bb 130>; [INV]

  <bb 111> :
  D.249867 = gimple_assign_rhs1 (gc);

  <bb 112> :
  _84 = D.249867;
  _85 = _84->base.code;
  retval.235 = _85 == 36;
  if (retval.235 != 0)
    goto <bb 113>; [INV]
  else
    goto <bb 119>; [INV]

  <bb 113> :
  D.249868 = gimple_assign_lhs (gc);

  <bb 114> :
  _86 = D.249868;
  mallocStmt_tree.237_87 = mallocStmt_tree;
  D.249869 = ptr_derefs_may_alias_p (mallocStmt_tree.237_87, _86);

  <bb 115> :
  retval.236 = D.249869;
  if (retval.236 != 0)
    goto <bb 116>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 116> :
  D.249870 = gimple_assign_rhs1 (gc);

  <bb 117> :
  _88 = D.249870;
  retval.238 = is_global_var (_88);
  if (retval.238 != 0)
    goto <bb 118>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 118> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 119> :
  D.249871 = gimple_assign_rhs1 (gc);

  <bb 120> :
  _89 = D.249871;
  _90 = _89->base.code;
  retval.239 = _90 == 153;
  if (retval.239 != 0)
    goto <bb 121>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 121> :
  D.249872 = gimple_assign_lhs (gc);

  <bb 122> :
  _91 = D.249872;
  pi3 = _91->ssa_name.info.ptr_info;
  D.249873 = gimple_assign_rhs1 (gc);

  <bb 123> :
  _92 = D.249873;
  pi4 = _92->ssa_name.info.ptr_info;
  pt3 = &pi3->pt;
  pt4 = &pi4->pt;
  if (pt3 == 0B)
    goto <bb 125>; [INV]
  else
    goto <bb 124>; [INV]

  <bb 124> :
  if (pt4 == 0B)
    goto <bb 125>; [INV]
  else
    goto <bb 126>; [INV]

  <bb 125> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 126> :
  D.249874 = gimple_assign_rhs1 (gc);

  <bb 127> :
  _93 = D.249874;
  mallocStmt_tree.241_94 = mallocStmt_tree;
  D.249875 = ptr_derefs_may_alias_p (mallocStmt_tree.241_94, _93);

  <bb 128> :
  _95 = D.249875;
  retval.240 = ~_95;
  if (retval.240 != 0)
    goto <bb 129>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 129> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 130> :
  mallocStmt_tree.242_96 = mallocStmt_tree;
  D.249876 = get_name (mallocStmt_tree.242_96);

  <bb 131> :
  _97 = D.249876;
  stderr.243_98 = stderr;
  fprintf (stderr.243_98, "\x1b[40;36m ======= relate node_fun argument:%s========= \x1b[0m\n", _97);

  <bb 132> :
  D.249877 = gimple_assign_lhs (gc);

  <bb 133> :
  _99 = D.249877;
  D.249878 = get_name (_99);

  <bb 134> :
  _100 = D.249878;
  stderr.244_101 = stderr;
  fprintf (stderr.244_101, "\x1b[40;36m ======= relate gimple_assign_lhs:%s========= \x1b[0m\n", _100);

  <bb 135> :
  _102 = rand ();
  x = (long unsigned int) _102;
  debugmod.245_103 = debugmod;
  if (debugmod.245_103 != 0)
    goto <bb 136>; [INV]
  else
    goto <bb 166>; [INV]

  <bb 136> :
  freemod.246_104 = freemod;
  if (freemod.246_104 != 0)
    goto <bb 137>; [INV]
  else
    goto <bb 145>; [INV]

  <bb 137> :
  if (seccount == 0)
    goto <bb 138>; [INV]
  else
    goto <bb 139>; [INV]

  <bb 138> :
  stderr.247_105 = stderr;
  __builtin_fwrite ("dot graph arrow", 1, 15, stderr.247_105);
  goto <bb 144>; [INV]

  <bb 139> :
  now_laststmt.248_106 = now_laststmt;
  if (now_laststmt.248_106 != 0B)
    goto <bb 140>; [INV]
  else
    goto <bb 143>; [INV]

  <bb 140> :
  now_laststmtid.249_107 = now_laststmtid;
  stderr.250_108 = stderr;
  fprintf (stderr.250_108, "dot graph relate stm2 start ID : %lu stmt(free) :", now_laststmtid.249_107);

  <bb 141> :
  now_laststmt.251_109 = now_laststmt;
  debug (now_laststmt.251_109);

  <bb 142> :
  now_laststmt.252_110 = now_laststmt;
  _111 = gimple_location_safe (now_laststmt.252_110);
  warning_at (_111, 0, "use location");

  <bb 143> :
  stderr.253_112 = stderr;
  __builtin_fwrite ("dot graph relate en1\n\n", 1, 22, stderr.253_112);

  <bb 144> :
  stderr.254_113 = stderr;
  __builtin_fwrite ("dot graph start relate for1", 1, 27, stderr.254_113);
  goto <bb 155>; [INV]

  <bb 145> :
  fistconunt.255_114 = fistconunt;
  if (fistconunt.255_114 == 0)
    goto <bb 146>; [INV]
  else
    goto <bb 148>; [INV]

  <bb 146> :
  stderr.256_115 = stderr;
  __builtin_fwrite ("dot graph start relate form", 1, 27, stderr.256_115);

  <bb 147> :
  fistconunt.257_116 = fistconunt;
  _117 = fistconunt.257_116 + 1;
  fistconunt = _117;
  goto <bb 155>; [INV]

  <bb 148> :
  now_laststmt.258_118 = now_laststmt;
  if (now_laststmt.258_118 != 0B)
    goto <bb 149>; [INV]
  else
    goto <bb 154>; [INV]

  <bb 149> :
  now_laststmtid.259_119 = now_laststmtid;
  stderr.260_120 = stderr;
  fprintf (stderr.260_120, "dot graph relate stm2 start ID : %lu stmt(free) :", now_laststmtid.259_119);

  <bb 150> :
  now_laststmt.261_121 = now_laststmt;
  debug (now_laststmt.261_121);

  <bb 151> :
  now_laststmt.262_122 = now_laststmt;
  _123 = gimple_location_safe (now_laststmt.262_122);
  warning_at (_123, 0, "use location");

  <bb 152> :
  stderr.263_124 = stderr;
  __builtin_fwrite ("dot graph relate en1\n\n", 1, 22, stderr.263_124);

  <bb 153> :
  now_laststmt = gc;
  now_laststmtid = x;

  <bb 154> :
  stderr.264_125 = stderr;
  __builtin_fwrite ("dot graph start relate for1", 1, 27, stderr.264_125);

  <bb 155> :
  now_fucntion.265_126 = now_fucntion;
  stderr.266_127 = stderr;
  fprintf (stderr.266_127, "ID : %lu\n", now_fucntion.265_126);

  <bb 156> :
  _128 = gimple_bb (gc);
  _129 = _128->index;
  D.249879 = get_name (function_tree);

  <bb 157> :
  _130 = D.249879;
  stderr.267_131 = stderr;
  fprintf (stderr.267_131, "from %s basic block %d", _130, _129);

  <bb 158> :
  stderr.268_132 = stderr;
  __builtin_fwrite ("dot graph end relate end\n\n", 1, 26, stderr.268_132);

  <bb 159> :
  fistconunt.269_133 = fistconunt;
  _134 = fistconunt.269_133 + 1;
  fistconunt = _134;
  _135 = gimple_location_safe (gc);
  warning_at (_135, 0, "use location");

  <bb 160> :
  debug (gc);

  <bb 161> :
  stderr.270_136 = stderr;
  fprintf (stderr.270_136, "dot graph relate stmt start ID : %lu stmt(LHS) :", x);

  <bb 162> :
  _137 = gimple_location_safe (gc);
  warning_at (_137, 0, "use location");

  <bb 163> :
  D.249880 = gimple_assign_lhs (gc);

  <bb 164> :
  _138 = D.249880;
  debug (_138);

  <bb 165> :
  stderr.271_139 = stderr;
  __builtin_fwrite ("dot graph relate end\n\n", 1, 22, stderr.271_139);
  goto <bb 171>; [INV]

  <bb 166> :
  _140 = gimple_location_safe (gc);
  warning_at (_140, 0, "use location");

  <bb 167> :
  debug (gc);

  <bb 168> :
  _141 = gimple_location_safe (gc);
  warning_at (_141, 0, "use location");

  <bb 169> :
  D.249881 = gimple_assign_lhs (gc);

  <bb 170> :
  _142 = D.249881;
  debug (_142);

  <bb 171> :
  now_relatelaststmt = gc;
  now_relatelaststmtid = x;
  now_laststmtid = x;
  stderr.272_143 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.272_143);

  <bb 172> :
  stderr.273_144 = stderr;
  __builtin_fwrite ("\x1b[40;35m this pointer possible reference other address \x1b[0m\n", 1, 60, stderr.273_144);

  <bb 173> :
  stderr.274_145 = stderr;
  __builtin_fwrite ("\x1b[40;35m or assign other value \x1b[0m\n", 1, 36, stderr.274_145);

  <bb 174> :
  stderr.275_146 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.275_146);

  <bb 175> :
  D.249882 = gimple_assign_lhs (gc);

  <bb 176> :
  _147 = D.249882;
  _148 = _147->base.code;
  if (_148 == 49)
    goto <bb 178>; [INV]
  else
    goto <bb 177>; [INV]

  <bb 177> :
  mallocStmt_tree.278_149 = mallocStmt_tree;
  _150 = mallocStmt_tree.278_149->base.code;
  if (_150 == 153)
    goto <bb 178>; [INV]
  else
    goto <bb 179>; [INV]

  <bb 178> :
  iftmp.277 = 1;
  goto <bb 180>; [INV]

  <bb 179> :
  iftmp.277 = 0;

  <bb 180> :
  retval.276 = iftmp.277;
  if (retval.276 != 0)
    goto <bb 181>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 181> :
  second = 0B;
  D.249883 = gimple_assign_lhs (gc);

  <bb 182> :
  _151 = D.249883;
  second = _151->exp.operands[0];
  D.249884 = gimple_assign_lhs (gc);

  <bb 183> :
  _152 = D.249884;
  _153 = _152->base.code;
  retval.279 = _153 == 49;
  if (retval.279 != 0)
    goto <bb 184>; [INV]
  else
    goto <bb 186>; [INV]

  <bb 184> :
  D.249885 = gimple_assign_lhs (gc);

  <bb 185> :
  _154 = D.249885;
  second = _154->exp.operands[0];

  <bb 186> :
  if (second != 0B)
    goto <bb 187>; [INV]
  else
    goto <bb 200>; [INV]

  <bb 187> :
  mallocStmt_tree.280_155 = mallocStmt_tree;
  _156 = mallocStmt_tree.280_155->base.code;
  if (_156 == 36)
    goto <bb 188>; [INV]
  else
    goto <bb 200>; [INV]

  <bb 188> :
  _157 = second->base.code;
  if (_157 == 36)
    goto <bb 189>; [INV]
  else
    goto <bb 200>; [INV]

  <bb 189> :
  mallocStmt_tree.281_158 = mallocStmt_tree;
  if (second == mallocStmt_tree.281_158)
    goto <bb 190>; [INV]
  else
    goto <bb 200>; [INV]

  <bb 190> :
  D.249886 = get_name (function_tree);

  <bb 191> :
  _159 = D.249886;
  stderr.282_160 = stderr;
  fprintf (stderr.282_160, "\x1b[40;36m ======= relate node_fun argument:%s========= \x1b[0m\n", _159);

  <bb 192> :
  D.249887 = gimple_assign_lhs (gc);

  <bb 193> :
  _161 = D.249887;
  stderr.283_162 = stderr;
  fprintf (stderr.283_162, "\x1b[40;36m ======= relate gimple_assign_lhs:%s========= \x1b[0m\n", _161);

  <bb 194> :
  debug_gimple_stmt (gc);

  <bb 195> :
  _163 = gimple_location_safe (gc);
  warning_at (_163, 0, "use location");

  <bb 196> :
  stderr.284_164 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.284_164);

  <bb 197> :
  stderr.285_165 = stderr;
  __builtin_fwrite ("\x1b[40;35m this pointer possible  reference other address \x1b[0m\n", 1, 61, stderr.285_165);

  <bb 198> :
  stderr.286_166 = stderr;
  __builtin_fwrite ("\x1b[40;35m or assign other value \x1b[0m\n", 1, 36, stderr.286_166);

  <bb 199> :
  stderr.287_167 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.287_167);

  <bb 200> :
  if (second == 0B)
    goto <bb 201>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 201> :
  mallocStmt_tree.288_168 = mallocStmt_tree;
  _169 = mallocStmt_tree.288_168->base.code;
  if (_169 == 153)
    goto <bb 202>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 202> :
  D.249888 = gimple_assign_rhs1 (gc);

  <bb 203> :
  _170 = D.249888;
  _171 = _170->base.code;
  retval.289 = _171 == 153;
  if (retval.289 != 0)
    goto <bb 204>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 204> :
  D.249889 = gimple_assign_rhs1 (gc);

  <bb 205> :
  _172 = D.249889;
  def_stmt = _172->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 206>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 206> :
  _173 = gimple_code (def_stmt);
  if (_173 != 18)
    goto <bb 207>; [INV]
  else
    goto <bb 214>; [INV]

  <bb 207> :
  D.249890 = gimple_assign_lhs (gc);

  <bb 208> :
  _174 = D.249890;
  mallocStmt_tree.292_175 = mallocStmt_tree;
  D.249891 = ptr_derefs_may_alias_p (mallocStmt_tree.292_175, _174);

  <bb 209> :
  _176 = D.249891;
  if (_176 != 0)
    goto <bb 210>; [INV]
  else
    goto <bb 214>; [INV]

  <bb 210> :
  D.249892 = gimple_assign_rhs1 (gc);

  <bb 211> :
  _177 = D.249892;
  mallocStmt_tree.293_178 = mallocStmt_tree;
  D.249893 = ptr_derefs_may_alias_p (mallocStmt_tree.293_178, _177);

  <bb 212> :
  _179 = D.249893;
  if (_179 != 0)
    goto <bb 213>; [INV]
  else
    goto <bb 214>; [INV]

  <bb 213> :
  iftmp.291 = 1;
  goto <bb 215>; [INV]

  <bb 214> :
  iftmp.291 = 0;

  <bb 215> :
  retval.290 = iftmp.291;
  if (retval.290 != 0)
    goto <bb 216>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 216> :
  D.249894 = get_name (function_tree);

  <bb 217> :
  _180 = D.249894;
  stderr.294_181 = stderr;
  fprintf (stderr.294_181, "\x1b[40;36m ======= relate node_fun argument:%s========= \x1b[0m\n", _180);

  <bb 218> :
  D.249895 = gimple_assign_lhs (gc);

  <bb 219> :
  _182 = D.249895;
  stderr.295_183 = stderr;
  fprintf (stderr.295_183, "\x1b[40;36m ======= relate gimple_assign_lhs:%s========= \x1b[0m\n", _182);

  <bb 220> :
  debug_gimple_stmt (gc);

  <bb 221> :
  _184 = gimple_location_safe (gc);
  warning_at (_184, 0, "use location");

  <bb 222> :
  stderr.296_185 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.296_185);

  <bb 223> :
  stderr.297_186 = stderr;
  __builtin_fwrite ("\x1b[40;35m this pointer possible  reference other address \x1b[0m\n", 1, 61, stderr.297_186);

  <bb 224> :
  stderr.298_187 = stderr;
  __builtin_fwrite ("\x1b[40;35m or assign other value \x1b[0m\n", 1, 36, stderr.298_187);

  <bb 225> :
  stderr.299_188 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.299_188);
  goto <bb 291>; [INV]

  <bb 226> :
  _189 = is_gimple_call (gc);
  _190 = (long int) _189;
  retval.300 = _190 != 0;
  if (retval.300 != 0)
    goto <bb 227>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 227> :
  mallocStmt_tree.301_191 = mallocStmt_tree;
  pi1 = mallocStmt_tree.301_191->ssa_name.info.ptr_info;
  pt1 = &pi1->pt;
  if (pt1 != 0B)
    goto <bb 228>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 228> :
  relatemod.302_192 = relatemod;
  if (relatemod.302_192 != 0)
    goto <bb 229>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 229> :
  debugmod.303_193 = debugmod;
  if (debugmod.303_193 != 0)
    goto <bb 230>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 230> :
  D.249896 = gimple_call_num_args (gc);

  <bb 231> :
  _194 = D.249896;
  retval.304 = _194 != 0;
  if (retval.304 != 0)
    goto <bb 232>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 232> :
  D.249897 = gimple_call_fn (gc);

  <bb 233> :
  _195 = D.249897;
  D.249898 = get_name (_195);

  <bb 234> :
  name = D.249898;
  D.249899 = gimple_call_lhs (gc);

  <bb 235> :
  _196 = D.249899;
  retval.305 = _196 != 0B;
  if (retval.305 != 0)
    goto <bb 236>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 236> :
  D.249900 = gimple_call_lhs (gc);

  <bb 237> :
  _197 = D.249900;
  _198 = _197->base.code;
  if (_198 == 153)
    goto <bb 243>; [INV]
  else
    goto <bb 238>; [INV]

  <bb 238> :
  D.249901 = gimple_call_arg (gc, 0);

  <bb 239> :
  _199 = D.249901;
  _200 = _199->base.code;
  if (_200 == 153)
    goto <bb 243>; [INV]
  else
    goto <bb 240>; [INV]

  <bb 240> :
  D.249902 = gimple_call_arg (gc, 0);

  <bb 241> :
  _201 = D.249902;
  _202 = _201->base.code;
  _203 = (tree_code) _202;
  D.249903 = get_tree_code_name (_203);

  <bb 242> :
  _204 = D.249903;
  _205 = strcmp (_204, "addr_expr");
  if (_205 == 0)
    goto <bb 243>; [INV]
  else
    goto <bb 244>; [INV]

  <bb 243> :
  iftmp.307 = 1;
  goto <bb 245>; [INV]

  <bb 244> :
  iftmp.307 = 0;

  <bb 245> :
  retval.306 = iftmp.307;
  if (retval.306 != 0)
    goto <bb 246>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 246> :
  if (name != 0B)
    goto <bb 247>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 247> :
  _206 = strcmp (name, "pthread_mutex_lock");
  if (_206 == 0)
    goto <bb 250>; [INV]
  else
    goto <bb 248>; [INV]

  <bb 248> :
  _207 = strcmp (name, "pthread_mutex_unlock");
  if (_207 == 0)
    goto <bb 250>; [INV]
  else
    goto <bb 249>; [INV]

  <bb 249> :
  _208 = strcmp (name, "pthread_exit");
  if (_208 == 0)
    goto <bb 250>; [INV]
  else
    goto <bb 251>; [INV]

  <bb 250> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 251> :
  D.249904 = gimple_call_arg (gc, 0);

  <bb 252> :
  _209 = D.249904;
  pi2 = _209->ssa_name.info.ptr_info;
  pt2 = &pi2->pt;
  if (pt2 != 0B)
    goto <bb 253>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 253> :
  D.249905 = gimple_call_arg (gc, 0);

  <bb 254> :
  _210 = D.249905;
  mallocStmt_tree.309_211 = mallocStmt_tree;
  D.249906 = ptr_derefs_may_alias_p (mallocStmt_tree.309_211, _210);

  <bb 255> :
  retval.308 = D.249906;
  if (retval.308 != 0)
    goto <bb 256>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 256> :
  _212 = rand ();
  x = (long unsigned int) _212;
  debugmod.310_213 = debugmod;
  if (debugmod.310_213 != 0)
    goto <bb 257>; [INV]
  else
    goto <bb 286>; [INV]

  <bb 257> :
  freemod.311_214 = freemod;
  if (freemod.311_214 != 0)
    goto <bb 258>; [INV]
  else
    goto <bb 266>; [INV]

  <bb 258> :
  if (seccount == 0)
    goto <bb 259>; [INV]
  else
    goto <bb 260>; [INV]

  <bb 259> :
  stderr.312_215 = stderr;
  __builtin_fwrite ("dot graph arrow", 1, 15, stderr.312_215);
  goto <bb 265>; [INV]

  <bb 260> :
  now_laststmt.313_216 = now_laststmt;
  if (now_laststmt.313_216 != 0B)
    goto <bb 261>; [INV]
  else
    goto <bb 264>; [INV]

  <bb 261> :
  now_laststmtid.314_217 = now_laststmtid;
  stderr.315_218 = stderr;
  fprintf (stderr.315_218, "dot graph relate stm2 start ID : %lu stmt(free) :", now_laststmtid.314_217);

  <bb 262> :
  now_laststmt.316_219 = now_laststmt;
  debug (now_laststmt.316_219);

  <bb 263> :
  now_laststmt.317_220 = now_laststmt;
  _221 = gimple_location_safe (now_laststmt.317_220);
  warning_at (_221, 0, "use location");

  <bb 264> :
  stderr.318_222 = stderr;
  __builtin_fwrite ("dot graph relate en1\n\n", 1, 22, stderr.318_222);

  <bb 265> :
  stderr.319_223 = stderr;
  __builtin_fwrite ("dot graph start relate for1", 1, 27, stderr.319_223);
  goto <bb 276>; [INV]

  <bb 266> :
  fistconunt.320_224 = fistconunt;
  if (fistconunt.320_224 == 0)
    goto <bb 267>; [INV]
  else
    goto <bb 269>; [INV]

  <bb 267> :
  stderr.321_225 = stderr;
  __builtin_fwrite ("dot graph start relate form", 1, 27, stderr.321_225);

  <bb 268> :
  fistconunt.322_226 = fistconunt;
  _227 = fistconunt.322_226 + 1;
  fistconunt = _227;
  goto <bb 276>; [INV]

  <bb 269> :
  now_laststmt.323_228 = now_laststmt;
  if (now_laststmt.323_228 != 0B)
    goto <bb 270>; [INV]
  else
    goto <bb 275>; [INV]

  <bb 270> :
  now_laststmtid.324_229 = now_laststmtid;
  stderr.325_230 = stderr;
  fprintf (stderr.325_230, "dot graph relate stm2 start ID : %lu stmt(free) :", now_laststmtid.324_229);

  <bb 271> :
  now_laststmt.326_231 = now_laststmt;
  debug (now_laststmt.326_231);

  <bb 272> :
  now_laststmt.327_232 = now_laststmt;
  _233 = gimple_location_safe (now_laststmt.327_232);
  warning_at (_233, 0, "use location");

  <bb 273> :
  stderr.328_234 = stderr;
  __builtin_fwrite ("dot graph relate en1\n\n", 1, 22, stderr.328_234);

  <bb 274> :
  now_laststmt = gc;
  now_laststmtid = x;

  <bb 275> :
  stderr.329_235 = stderr;
  __builtin_fwrite ("dot graph start relate for1", 1, 27, stderr.329_235);

  <bb 276> :
  fistconunt.330_236 = fistconunt;
  _237 = fistconunt.330_236 + 1;
  fistconunt = _237;
  now_fucntion.331_238 = now_fucntion;
  stderr.332_239 = stderr;
  fprintf (stderr.332_239, "ID : %lu\n", now_fucntion.331_238);

  <bb 277> :
  _240 = gimple_bb (gc);
  _241 = _240->index;
  D.249907 = get_name (function_tree);

  <bb 278> :
  _242 = D.249907;
  stderr.333_243 = stderr;
  fprintf (stderr.333_243, "from %s basic block %d", _242, _241);

  <bb 279> :
  stderr.334_244 = stderr;
  __builtin_fwrite ("dot graph end relate end\n\n", 1, 26, stderr.334_244);

  <bb 280> :
  stderr.335_245 = stderr;
  fprintf (stderr.335_245, "dot graph relate stmt start ID : %lu stmt(call) :", x);

  <bb 281> :
  debug (gc);

  <bb 282> :
  _246 = gimple_location_safe (gc);
  warning_at (_246, 0, "use location");

  <bb 283> :
  D.249908 = gimple_call_arg (gc, 0);

  <bb 284> :
  _247 = D.249908;
  debug (_247);

  <bb 285> :
  stderr.336_248 = stderr;
  __builtin_fwrite ("dot graph relate end\n\n", 1, 22, stderr.336_248);
  goto <bb 290>; [INV]

  <bb 286> :
  debug (gc);

  <bb 287> :
  _249 = gimple_location_safe (gc);
  warning_at (_249, 0, "use location");

  <bb 288> :
  D.249909 = gimple_call_arg (gc, 0);

  <bb 289> :
  _250 = D.249909;
  debug (_250);

  <bb 290> :
  now_relatelaststmt = gc;
  now_relatelaststmtid = x;
  now_laststmtid = x;

  <bb 291> :
  gsi_next (&gsi);

  <bb 292> :
  _251 = gsi_end_p (gsi);
  retval.337 = ~_251;
  if (retval.337 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 293>; [INV]

  <bb 293> :
  gsi = {CLOBBER};
  bb = bb->next_bb;

  <bb 294> :
  cfun.338_252 = cfun;
  _253 = cfun.338_252->cfg;
  _254 = _253->x_exit_block_ptr;
  if (bb != _254)
    goto <bb 14>; [INV]
  else
    goto <bb 295>; [INV]

  <bb 295> :
  std::vector<relate_type>::vector (&relate_type_array);
  function_relate_array::function_relate_array (&fun_array);
  now_relatelaststmt.339_255 = now_relatelaststmt;
  if (now_relatelaststmt.339_255 != 0B)
    goto <bb 296>; [INV]
  else
    goto <bb 305>; [INV]

  <bb 296> :
  function_relate_collect.341_256 = function_relate_collect;
  D.249911 = hash_map<tree_node*, function_relate_array>::get (function_relate_collect.341_256, &mallocStmt_tree);

  <bb 297> :
  _257 = D.249911;
  retval.340 = _257 == 0B;
  if (retval.340 != 0)
    goto <bb 298>; [INV]
  else
    goto <bb 299>; [INV]

  <bb 298> :
  std::vector<relate_type>::operator= (&fun_array.relate_type_array, &relate_type_array);
  goto <bb 302>; [INV]

  <bb 299> :
  function_relate_collect.342_258 = function_relate_collect;
  D.249912 = hash_map<tree_node*, function_relate_array>::get (function_relate_collect.342_258, &mallocStmt_tree);

  <bb 300> :
  _259 = D.249912;
  function_relate_array::operator= (&fun_array, _259);

  <bb 301> :
  std::vector<relate_type>::operator= (&relate_type_array, &fun_array.relate_type_array);

  <bb 302> :
  relate_type::relate_type (&relate_type);
  now_relatelaststmt.343_260 = now_relatelaststmt;
  relate_type.stmt = now_relatelaststmt.343_260;
  mallocStmt_tree.344_261 = mallocStmt_tree;
  relate_type.relate_tree = mallocStmt_tree.344_261;
  relate_type.relate_funtree = function_tree;
  now_fucntion.345_262 = now_fucntion;
  _263 = (unsigned int) now_fucntion.345_262;
  relate_type.now_fucntion = _263;
  now_laststmtid.346_264 = now_laststmtid;
  _265 = (unsigned int) now_laststmtid.346_264;
  relate_type.now_stmt = _265;
  std::vector<relate_type>::push_back (&fun_array.relate_type_array, &relate_type);

  <bb 303> :
  function_relate_collect.347_266 = function_relate_collect;
  hash_map<tree_node*, function_relate_array>::put (function_relate_collect.347_266, &mallocStmt_tree, &fun_array);

  <bb 304> :
  relate_type = {CLOBBER};

  <bb 305> :
  function_relate_array::~function_relate_array (&fun_array);
  std::vector<relate_type>::~vector (&relate_type_array);
  relate_type_array = {CLOBBER};
  fun_array = {CLOBBER};

  <bb 306> :
  pop_cfun ();

  <bb 307> :
  symtab.348_267 = symtab;
  D.249917 = symbol_table::next_defined_function (symtab.348_267, node);
  node = D.249917;

  <bb 308> :
  if (node != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 309>; [INV]

  <bb 309> :
  stderr.349_268 = stderr;
  __builtin_fwrite ("fucntion collect path finsh\n", 1, 28, stderr.349_268);

  <bb 310> :
<L265>:
  return;

  <bb 311> :
<L266>:
  gsi = {CLOBBER};
  resx 2

  <bb 312> :
<L267>:
  relate_type = {CLOBBER};
  resx 6

  <bb 313> :
<L268>:
  function_relate_array::~function_relate_array (&fun_array);
  resx 5

  <bb 314> :
<L269>:
  std::vector<relate_type>::~vector (&relate_type_array);
  resx 4

  <bb 315> :
<L270>:
  relate_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  resx 1

}



;; Function is_gimple_assign (_ZL16is_gimple_assignPK6gimple, funcdef_no=2062, decl_uid=92605, cgraph_uid=1199, symbol_order=1359)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool is_gimple_assign (const struct gimple * gs)
{
  bool D.249918;

  <bb 2> :
  _1 = gimple_code (gs);
  D.249918 = _1 == 6;

  <bb 3> :
<L0>:
  return D.249918;

}



;; Function is_global_var (_ZL13is_global_varPK9tree_node, funcdef_no=1820, decl_uid=85582, cgraph_uid=968, symbol_order=1128)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool is_global_var (const union tree_node * t)
{
  bool iftmp.350;
  bool D.249920;

  <bb 2> :
  _1 = BIT_FIELD_REF <t->base, 8, 24>;
  _2 = _1 & 4;
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = BIT_FIELD_REF <t->decl_common, 8, 472>;
  _4 = _3 & 2;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.350 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.350 = 0;

  <bb 6> :
  D.249920 = iftmp.350;

  <bb 7> :
<L4>:
  return D.249920;

}



;; Function gimple_assign_rhs1 (_ZL18gimple_assign_rhs1PK6gimple, funcdef_no=2071, decl_uid=92645, cgraph_uid=1208, symbol_order=1368)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_assign_rhs1 (const struct gimple * gs)
{
  const struct gassign * D.249929;
  const struct gassign * ass;
  union tree_node * D.249927;

  <bb 2> :
  D.249929 = GIMPLE_CHECK2<const gassign*> (gs);
  ass = D.249929;
  D.249927 = gimple_assign_rhs1 (ass);

  <bb 3> :
<L0>:
  return D.249927;

}



;; Function GIMPLE_CHECK2<const gassign*> (_Z13GIMPLE_CHECK2IPK7gassignET_PK6gimple, funcdef_no=7061, decl_uid=92617, cgraph_uid=3693, symbol_order=4476)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gassign * GIMPLE_CHECK2<const gassign*> (const struct gimple * gs)
{
  const struct gassign * D.249932;
  const struct gassign * D.249930;

  <bb 2> :
  D.249932 = as_a<const gassign*, const gimple> (gs);
  D.249930 = D.249932;

  <bb 3> :
<L0>:
  return D.249930;

}



;; Function as_a<const gassign*, const gimple> (_Z4as_aIPK7gassignK6gimpleET_PT0_, funcdef_no=8066, decl_uid=207163, cgraph_uid=4698, symbol_order=5484)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gassign * as_a<const gassign*, const gimple> (const struct gimple * p)
{
  const struct gassign * D.249935;
  const struct gassign * D.249933;

  <bb 2> :
  D.249935 = is_a_helper<const gassign*>::cast<gimple> (p);
  D.249933 = D.249935;

  <bb 3> :
<L0>:
  return D.249933;

}



;; Function is_a_helper<const gassign*>::cast<gimple> (_ZN11is_a_helperIPK7gassignE4castI6gimpleEES2_PKT_, funcdef_no=8073, decl_uid=207201, cgraph_uid=4705, symbol_order=5491)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gassign * is_a_helper<const gassign*>::cast<gimple> (const struct gimple * p)
{
  const struct gassign * D.249936;

  <bb 2> :
  D.249936 = reinterpret_is_a_helper<gassign*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.249936;

}



;; Function reinterpret_is_a_helper<gassign*>::cast<gimple> (_ZN23reinterpret_is_a_helperIP7gassignE4castI6gimpleEES1_PT_, funcdef_no=9045, decl_uid=219626, cgraph_uid=5677, symbol_order=6467)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gassign * reinterpret_is_a_helper<gassign*>::cast<gimple> (struct gimple * p)
{
  struct gassign * D.249938;

  <bb 2> :
  D.249938 = p;

  <bb 3> :
<L0>:
  return D.249938;

}



;; Function gimple_assign_rhs1 (_ZL18gimple_assign_rhs1PK7gassign, funcdef_no=2070, decl_uid=92642, cgraph_uid=1207, symbol_order=1367)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_assign_rhs1 (const struct gassign * gs)
{
  union tree_node * D.249940;

  <bb 2> :
  D.249940 = gs->D.90479.op[1];

  <bb 3> :
<L0>:
  return D.249940;

}



;; Function gimple_assign_lhs (_ZL17gimple_assign_lhsPK6gimple, funcdef_no=2065, decl_uid=92614, cgraph_uid=1202, symbol_order=1362)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_assign_lhs (const struct gimple * gs)
{
  const struct gassign * D.249944;
  const struct gassign * ass;
  union tree_node * D.249942;

  <bb 2> :
  D.249944 = GIMPLE_CHECK2<const gassign*> (gs);
  ass = D.249944;
  D.249942 = gimple_assign_lhs (ass);

  <bb 3> :
<L0>:
  return D.249942;

}



;; Function gimple_assign_lhs (_ZL17gimple_assign_lhsPK7gassign, funcdef_no=2064, decl_uid=92611, cgraph_uid=1201, symbol_order=1361)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_assign_lhs (const struct gassign * gs)
{
  union tree_node * D.249945;

  <bb 2> :
  D.249945 = gs->D.90479.op[0];

  <bb 3> :
<L0>:
  return D.249945;

}



;; Function is_gimple_call (_ZL14is_gimple_callPK6gimple, funcdef_no=2100, decl_uid=92760, cgraph_uid=1237, symbol_order=1397)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool is_gimple_call (const struct gimple * gs)
{
  bool D.249947;

  <bb 2> :
  _1 = gimple_code (gs);
  D.249947 = _1 == 8;

  <bb 3> :
<L0>:
  return D.249947;

}



;; Function gimple_call_num_args (_ZL20gimple_call_num_argsPK6gimple, funcdef_no=2139, decl_uid=92913, cgraph_uid=1276, symbol_order=1436)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int gimple_call_num_args (const struct gimple * gs)
{
  const struct gcall * D.249951;
  const struct gcall * gc;
  unsigned int D.249949;

  <bb 2> :
  D.249951 = GIMPLE_CHECK2<const gcall*> (gs);
  gc = D.249951;
  D.249949 = gimple_call_num_args (gc);

  <bb 3> :
<L0>:
  return D.249949;

}



;; Function GIMPLE_CHECK2<const gcall*> (_Z13GIMPLE_CHECK2IPK5gcallET_PK6gimple, funcdef_no=7063, decl_uid=92769, cgraph_uid=3695, symbol_order=4478)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcall * GIMPLE_CHECK2<const gcall*> (const struct gimple * gs)
{
  const struct gcall * D.249954;
  const struct gcall * D.249952;

  <bb 2> :
  D.249954 = as_a<const gcall*, const gimple> (gs);
  D.249952 = D.249954;

  <bb 3> :
<L0>:
  return D.249952;

}



;; Function as_a<const gcall*, const gimple> (_Z4as_aIPK5gcallK6gimpleET_PT0_, funcdef_no=7090, decl_uid=94348, cgraph_uid=3722, symbol_order=4505)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcall * as_a<const gcall*, const gimple> (const struct gimple * p)
{
  const struct gcall * D.249957;
  const struct gcall * D.249955;

  <bb 2> :
  D.249957 = is_a_helper<const gcall*>::cast<gimple> (p);
  D.249955 = D.249957;

  <bb 3> :
<L0>:
  return D.249955;

}



;; Function is_a_helper<const gcall*>::cast<gimple> (_ZN11is_a_helperIPK5gcallE4castI6gimpleEES2_PKT_, funcdef_no=8070, decl_uid=207187, cgraph_uid=4702, symbol_order=5488)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcall * is_a_helper<const gcall*>::cast<gimple> (const struct gimple * p)
{
  const struct gcall * D.249958;

  <bb 2> :
  D.249958 = reinterpret_is_a_helper<gcall*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.249958;

}



;; Function reinterpret_is_a_helper<gcall*>::cast<gimple> (_ZN23reinterpret_is_a_helperIP5gcallE4castI6gimpleEES1_PT_, funcdef_no=9047, decl_uid=219634, cgraph_uid=5679, symbol_order=6469)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gcall * reinterpret_is_a_helper<gcall*>::cast<gimple> (struct gimple * p)
{
  struct gcall * D.249960;

  <bb 2> :
  D.249960 = p;

  <bb 3> :
<L0>:
  return D.249960;

}



;; Function gimple_call_num_args (_ZL20gimple_call_num_argsPK5gcall, funcdef_no=2138, decl_uid=92910, cgraph_uid=1275, symbol_order=1435)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int gimple_call_num_args (const struct gcall * gs)
{
  unsigned int D.249962;

  <bb 2> :
  _1 = gimple_num_ops (gs);
  D.249962 = _1 + 4294967293;

  <bb 3> :
<L0>:
  return D.249962;

}



;; Function gimple_num_ops (_ZL14gimple_num_opsPK6gimple, funcdef_no=2056, decl_uid=92581, cgraph_uid=1193, symbol_order=1353)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int gimple_num_ops (const struct gimple * gs)
{
  unsigned int D.249964;

  <bb 2> :
  D.249964 = gs->num_ops;

  <bb 3> :
<L0>:
  return D.249964;

}



;; Function gimple_call_fn (_ZL14gimple_call_fnPK6gimple, funcdef_no=2124, decl_uid=92857, cgraph_uid=1261, symbol_order=1421)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_fn (const struct gimple * gs)
{
  const struct gcall * D.249968;
  const struct gcall * gc;
  union tree_node * D.249966;

  <bb 2> :
  D.249968 = GIMPLE_CHECK2<const gcall*> (gs);
  gc = D.249968;
  D.249966 = gimple_call_fn (gc);

  <bb 3> :
<L0>:
  return D.249966;

}



;; Function gimple_call_fn (_ZL14gimple_call_fnPK5gcall, funcdef_no=2123, decl_uid=92854, cgraph_uid=1260, symbol_order=1420)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_fn (const struct gcall * gs)
{
  union tree_node * D.249969;

  <bb 2> :
  D.249969 = gs->op[1];

  <bb 3> :
<L0>:
  return D.249969;

}



;; Function gimple_call_lhs (_ZL15gimple_call_lhsPK6gimple, funcdef_no=2102, decl_uid=92766, cgraph_uid=1239, symbol_order=1399)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_lhs (const struct gimple * gs)
{
  const struct gcall * D.249973;
  const struct gcall * gc;
  union tree_node * D.249971;

  <bb 2> :
  D.249973 = GIMPLE_CHECK2<const gcall*> (gs);
  gc = D.249973;
  D.249971 = gimple_call_lhs (gc);

  <bb 3> :
<L0>:
  return D.249971;

}



;; Function gimple_call_lhs (_ZL15gimple_call_lhsPK5gcall, funcdef_no=2101, decl_uid=92763, cgraph_uid=1238, symbol_order=1398)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_lhs (const struct gcall * gs)
{
  union tree_node * D.249974;

  <bb 2> :
  D.249974 = gs->op[0];

  <bb 3> :
<L0>:
  return D.249974;

}



;; Function gimple_bb (_ZL9gimple_bbPK6gimple, funcdef_no=2000, decl_uid=92273, cgraph_uid=1137, symbol_order=1297)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * gimple_bb (const struct gimple * g)
{
  struct basic_block_def * D.249976;

  <bb 2> :
  D.249976 = g->bb;

  <bb 3> :
<L0>:
  return D.249976;

}



;; Function gimple_call_arg (_ZL15gimple_call_argPK6gimplej, funcdef_no=2141, decl_uid=92922, cgraph_uid=1278, symbol_order=1438)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_arg (const struct gimple * gs, unsigned int index)
{
  const struct gcall * D.249980;
  const struct gcall * gc;
  union tree_node * D.249978;

  <bb 2> :
  D.249980 = GIMPLE_CHECK2<const gcall*> (gs);
  gc = D.249980;
  D.249978 = gimple_call_arg (gc, index);

  <bb 3> :
<L0>:
  return D.249978;

}



;; Function gimple_call_arg (_ZL15gimple_call_argPK5gcallj, funcdef_no=2140, decl_uid=92918, cgraph_uid=1277, symbol_order=1437)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_arg (const struct gcall * gs, unsigned int index)
{
  union tree_node * D.249981;

  <bb 2> :
  _1 = index + 3;
  D.249981 = gs->op[_1];

  <bb 3> :
<L0>:
  return D.249981;

}



;; Function std::vector<relate_type>::vector (_ZNSt6vectorI11relate_typeSaIS0_EEC2Ev, funcdef_no=6306, decl_uid=179798, cgraph_uid=3281, symbol_order=4058)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<relate_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.179806;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_ZNSt12_Vector_baseI11relate_typeSaIS0_EEC2Ev, funcdef_no=6304, decl_uid=179256, cgraph_uid=3278, symbol_order=4055)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7649, decl_uid=179148, cgraph_uid=4281, symbol_order=5067)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<relate_type>::allocator (this);
  _1 = &this->D.179151;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<relate_type>::allocator (_ZNSaI11relate_typeEC2Ev, funcdef_no=8513, decl_uid=178926, cgraph_uid=5145, symbol_order=5935)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<relate_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<relate_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11relate_typeEC2Ev, funcdef_no=9295, decl_uid=178855, cgraph_uid=5927, symbol_order=6717)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8516, decl_uid=179098, cgraph_uid=5148, symbol_order=5938)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function function_relate_array::function_relate_array (_ZN21function_relate_arrayC2Ev, funcdef_no=6309, decl_uid=191387, cgraph_uid=3284, symbol_order=4061)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_relate_array::function_relate_array (struct function_relate_array * const this)
{
  <bb 2> :
  _1 = &this->relate_type_array;
  std::vector<relate_type>::vector (_1);
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::get (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7660, decl_uid=191474, cgraph_uid=4292, symbol_order=5078)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_relate_array * hash_map<tree_node*, function_relate_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.249991;
  struct hash_entry & D.249990;
  unsigned int D.249989;
  struct hash_entry & e;
  struct function_relate_array * iftmp.351;
  struct function_relate_array * D.249983;

  <bb 2> :
  _1 = &this->m_table;
  D.249989 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::hash (k);
  _2 = D.249989;
  D.249990 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.249990;
  D.249991 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (e);
  _3 = D.249991;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.351 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.351 = &e->m_value;

  <bb 5> :
  D.249983 = iftmp.351;

  <bb 6> :
<L3>:
  return D.249983;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE4hashERKS2_, funcdef_no=8524, decl_uid=191430, cgraph_uid=5156, symbol_order=5946)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::hash (union tree_node * const & h)
{
  hashval_t D.249992;

  <bb 2> :
  D.249992 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.249992;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8525, decl_uid=191617, cgraph_uid=5157, symbol_order=5947)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.250026;
  bool D.250025;
  bool D.250024;
  bool D.250023;
  bool D.250022;
  bool D.250021;
  struct value_type * D.250020;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.355;
  bool retval.354;
  struct value_type & D.250006;
  bool iftmp.353;
  bool retval.352;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 32;
  entry = _5 + _7;
  D.250021 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.250021;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.250022 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.250022;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.250023 = hash_map<tree_node*, function_relate_array>::hash_entry::equal (entry, comparable);
  _11 = D.250023;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.353 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.353 = 0;

  <bb 8> :
  retval.352 = iftmp.353;
  if (retval.352 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.250006 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  entry = _17 + _19;
  D.250024 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.250024;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.250025 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.250025;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.250026 = hash_map<tree_node*, function_relate_array>::hash_entry::equal (entry, comparable);
  _23 = D.250026;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.355 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.355 = 0;

  <bb 18> :
  retval.354 = iftmp.355;
  if (retval.354 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.250006 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.250006;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8773, decl_uid=191713, cgraph_uid=5405, symbol_order=6195)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.250029;
  bool D.250027;

  <bb 2> :
  D.250029 = hash_map<tree_node*, function_relate_array>::hash_entry::is_empty (v);
  D.250027 = D.250029;

  <bb 3> :
<L0>:
  return D.250027;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8545, decl_uid=191543, cgraph_uid=5177, symbol_order=5967)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_relate_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.250032;
  bool D.250030;

  <bb 2> :
  D.250032 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (e);
  D.250030 = D.250032;

  <bb 3> :
<L0>:
  return D.250030;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8774, decl_uid=191711, cgraph_uid=5406, symbol_order=6196)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.250035;
  bool D.250033;

  <bb 2> :
  D.250035 = hash_map<tree_node*, function_relate_array>::hash_entry::is_deleted (v);
  D.250033 = D.250035;

  <bb 3> :
<L0>:
  return D.250033;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9608, decl_uid=191538, cgraph_uid=6240, symbol_order=7030)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_relate_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.250038;
  bool D.250036;

  <bb 2> :
  D.250038 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_deleted<hash_map<tree_node*, function_relate_array>::hash_entry> (e);
  D.250036 = D.250038;

  <bb 3> :
<L0>:
  return D.250036;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_deleted<hash_map<tree_node*, function_relate_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10220, decl_uid=237787, cgraph_uid=6852, symbol_order=7646)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_deleted<hash_map<tree_node*, function_relate_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.250039;

  <bb 2> :
  _1 = entry->m_key;
  D.250039 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.250039;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9300, decl_uid=191531, cgraph_uid=5932, symbol_order=6722)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_relate_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.250043;
  bool D.250041;

  <bb 2> :
  _1 = &a->m_key;
  D.250043 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::equal_keys (_1, b);
  D.250041 = D.250043;

  <bb 3> :
<L0>:
  return D.250041;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE10equal_keysERKS2_S7_, funcdef_no=10015, decl_uid=191432, cgraph_uid=6647, symbol_order=7441)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.250044;

  <bb 2> :
  D.250044 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.250044;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8526, decl_uid=212209, cgraph_uid=5158, symbol_order=5948)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.250046;

  <bb 2> :
  _1 = entry->m_key;
  D.250046 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.250046;

}



;; Function function_relate_array::operator= (_ZN21function_relate_arrayaSERKS_, funcdef_no=6314, decl_uid=191853, cgraph_uid=3289, symbol_order=4066)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_relate_array & function_relate_array::operator= (struct function_relate_array * const this, const struct function_relate_array & D.191854)
{
  struct function_relate_array & D.250048;

  <bb 2> :
  _1 = &D.191854->relate_type_array;
  _2 = &this->relate_type_array;
  std::vector<relate_type>::operator= (_2, _1);
  D.250048 = this;

  <bb 3> :
<L0>:
  return D.250048;

}



;; Function std::vector<relate_type>::operator= (_ZNSt6vectorI11relate_typeSaIS0_EEaSERKS2_, funcdef_no=7661, decl_uid=179384, cgraph_uid=4295, symbol_order=5081)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<relate_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct relate_type * D.250083;
  struct relate_type * __tmp;
  const size_type __xlen;
  struct vector & D.250081;
  struct __normal_iterator D.250078;
  struct __normal_iterator D.250077;
  struct __normal_iterator D.250076;
  struct __normal_iterator D.250075;
  struct __normal_iterator D.250074;
  bool retval.360;
  struct __normal_iterator D.250069;
  struct __normal_iterator D.250068;
  bool retval.359;
  bool iftmp.358;
  bool retval.357;
  bool retval.356;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.356 = __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_propagate_on_copy_assign ();
  if (retval.356 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.179806;
  _4 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.179806;
  _6 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.358 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.358 = 0;

  <bb 8> :
  retval.357 = iftmp.358;
  if (retval.357 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<relate_type>::clear (this);
  _8 = &this->D.179806;
  _9 = this->D.179806._M_impl.D.179151._M_end_of_storage;
  _10 = this->D.179806._M_impl.D.179151._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 48;
  _13 = (long unsigned int) _12;
  _14 = this->D.179806._M_impl.D.179151._M_start;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (_8, _14, _13);
  this->D.179806._M_impl.D.179151._M_start = 0B;
  this->D.179806._M_impl.D.179151._M_finish = 0B;
  this->D.179806._M_impl.D.179151._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.179806;
  _16 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.179806;
  _18 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<relate_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<relate_type>::size (__x);
  _19 = std::vector<relate_type>::capacity (this);
  retval.359 = __xlen > _19;
  if (retval.359 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.250068 = std::vector<relate_type>::end (__x);
  D.250069 = std::vector<relate_type>::begin (__x);
  D.250083 = std::vector<relate_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (this, __xlen, D.250069, D.250068);
  __tmp = D.250083;
  _20 = &this->D.179806;
  _21 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.179806._M_impl.D.179151._M_finish;
  _23 = this->D.179806._M_impl.D.179151._M_start;
  std::_Destroy<relate_type*, relate_type> (_23, _22, _21);
  _24 = &this->D.179806;
  _25 = this->D.179806._M_impl.D.179151._M_end_of_storage;
  _26 = this->D.179806._M_impl.D.179151._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 48;
  _29 = (long unsigned int) _28;
  _30 = this->D.179806._M_impl.D.179151._M_start;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (_24, _30, _29);
  this->D.179806._M_impl.D.179151._M_start = __tmp;
  _31 = this->D.179806._M_impl.D.179151._M_start;
  _32 = __xlen * 48;
  _33 = _31 + _32;
  this->D.179806._M_impl.D.179151._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<relate_type>::size (this);
  retval.360 = __xlen <= _34;
  if (retval.360 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.179806;
  _36 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_35);
  D.250074 = std::vector<relate_type>::end (this);
  D.250075 = std::vector<relate_type>::begin (this);
  D.250076 = std::vector<relate_type>::end (__x);
  D.250077 = std::vector<relate_type>::begin (__x);
  D.250078 = std::copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (D.250077, D.250076, D.250075);
  std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type> (D.250078, D.250074, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.179806._M_impl.D.179151._M_start;
  _38 = __x->D.179806._M_impl.D.179151._M_start;
  _39 = std::vector<relate_type>::size (this);
  _40 = _39 * 48;
  _41 = _38 + _40;
  _42 = __x->D.179806._M_impl.D.179151._M_start;
  std::copy<relate_type*, relate_type*> (_42, _41, _37);
  _43 = &this->D.179806;
  _44 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.179806._M_impl.D.179151._M_finish;
  _46 = __x->D.179806._M_impl.D.179151._M_finish;
  _47 = __x->D.179806._M_impl.D.179151._M_start;
  _48 = std::vector<relate_type>::size (this);
  _49 = _48 * 48;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<relate_type*, relate_type*, relate_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.179806._M_impl.D.179151._M_start;
  _52 = __xlen * 48;
  _53 = _51 + _52;
  this->D.179806._M_impl.D.179151._M_finish = _53;

  <bb 17> :
  D.250081 = this;

  <bb 18> :
<L19>:
  return D.250081;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI11relate_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7662, decl_uid=179018, cgraph_uid=4293, symbol_order=5079)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_propagate_on_copy_assign ()
{
  bool D.250084;

  <bb 2> :
  D.250084 = 0;

  <bb 3> :
<L0>:
  return D.250084;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI11relate_typeES1_E15_S_always_equalEv, funcdef_no=7663, decl_uid=179021, cgraph_uid=4294, symbol_order=5080)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_always_equal ()
{
  bool D.250086;

  <bb 2> :
  D.250086 = 1;

  <bb 3> :
<L0>:
  return D.250086;

}



;; Function std::operator!= (_ZStneRKSaI11relate_typeES2_, funcdef_no=8528, decl_uid=178904, cgraph_uid=5160, symbol_order=5950)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.222824, const struct allocator & D.222825)
{
  bool D.250088;

  <bb 2> :
  D.250088 = 0;

  <bb 3> :
<L0>:
  return D.250088;

}



;; Function std::vector<relate_type>::clear (_ZNSt6vectorI11relate_typeSaIS0_EE5clearEv, funcdef_no=8529, decl_uid=179536, cgraph_uid=5161, symbol_order=5951)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<relate_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.179806._M_impl.D.179151._M_start;
  std::vector<relate_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<relate_type>::_M_erase_at_end (_ZNSt6vectorI11relate_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9301, decl_uid=179664, cgraph_uid=5933, symbol_order=6723)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<relate_type>::_M_erase_at_end (struct vector * const this, struct relate_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.179806._M_impl.D.179151._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 48;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.179806;
  _5 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.179806._M_impl.D.179151._M_finish;
  std::_Destroy<relate_type*, relate_type> (__pos, _6, _5);
  this->D.179806._M_impl.D.179151._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI11relate_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8527, decl_uid=179041, cgraph_uid=5159, symbol_order=5949)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.250093;

  <bb 2> :
  D.250093 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.250093;

}



;; Function std::__alloc_on_copy<std::allocator<relate_type> > (_ZSt15__alloc_on_copyISaI11relate_typeEEvRT_RKS2_, funcdef_no=8530, decl_uid=212234, cgraph_uid=5162, symbol_order=5952)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<relate_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<relate_type>::capacity (_ZNKSt6vectorI11relate_typeSaIS0_EE8capacityEv, funcdef_no=8531, decl_uid=179452, cgraph_uid=5163, symbol_order=5953)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<relate_type>::capacity (const struct vector * const this)
{
  size_type D.250095;

  <bb 2> :
  _1 = this->D.179806._M_impl.D.179151._M_end_of_storage;
  _2 = this->D.179806._M_impl.D.179151._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 48;
  D.250095 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.250095;

}



;; Function std::vector<relate_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (_ZNSt6vectorI11relate_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8534, decl_uid=212334, cgraph_uid=5166, symbol_order=5956)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct relate_type * std::vector<relate_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct relate_type * D.250099;
  struct relate_type * __result;
  struct relate_type * D.250097;

  <bb 2> :
  _1 = &this->D.179806;
  D.250099 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_allocate (_1, __n);
  __result = D.250099;
  _2 = &this->D.179806;
  _3 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*, relate_type> (__first, __last, __result, _3);

  <bb 3> :
  D.250097 = __result;

  <bb 4> :
<L0>:
  return D.250097;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.179806;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_allocate (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE11_M_allocateEm, funcdef_no=9305, decl_uid=179155, cgraph_uid=5937, symbol_order=6727)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct relate_type * std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct relate_type * D.250109;
  struct relate_type * iftmp.361;
  struct relate_type * D.250103;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.250109 = std::allocator_traits<std::allocator<relate_type> >::allocate (_1, __n);
  iftmp.361 = D.250109;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.361 = 0B;

  <bb 5> :
  D.250103 = iftmp.361;

  <bb 6> :
<L3>:
  return D.250103;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::allocate (_ZNSt16allocator_traitsISaI11relate_typeEE8allocateERS1_m, funcdef_no=10016, decl_uid=178956, cgraph_uid=6648, symbol_order=7442)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct relate_type * std::allocator_traits<std::allocator<relate_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct relate_type * D.250112;
  struct relate_type * D.250110;

  <bb 2> :
  D.250112 = __gnu_cxx::new_allocator<relate_type>::allocate (__a, __n, 0B);
  D.250110 = D.250112;

  <bb 3> :
<L0>:
  return D.250110;

}



;; Function __gnu_cxx::new_allocator<relate_type>::allocate (_ZN9__gnu_cxx13new_allocatorI11relate_typeE8allocateEmPKv, funcdef_no=10543, decl_uid=178810, cgraph_uid=7176, symbol_order=7970)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct relate_type * __gnu_cxx::new_allocator<relate_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.245356)
{
  struct relate_type * D.250123;
  struct relate_type * D.250122;
  align_val_t __al;
  struct relate_type * D.250120;
  bool retval.362;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<relate_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.362 = _4 != 0;
  if (retval.362 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 384307168202282325)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 48;
  D.250123 = operator new (_6);
  D.250120 = D.250123;

  <bb 7> :
<L6>:
  return D.250120;

}



;; Function __gnu_cxx::new_allocator<relate_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI11relate_typeE11_M_max_sizeEv, funcdef_no=10544, decl_uid=178837, cgraph_uid=7175, symbol_order=7969)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<relate_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.250124;

  <bb 2> :
  D.250124 = 192153584101141162;

  <bb 3> :
<L0>:
  return D.250124;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*, relate_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=9306, decl_uid=222866, cgraph_uid=5938, symbol_order=6728)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*, relate_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct relate_type * __result, struct allocator & D.234867)
{
  struct relate_type * D.250128;
  struct relate_type * D.250126;

  <bb 2> :
  D.250128 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (__first, __last, __result);
  D.250126 = D.250128;

  <bb 3> :
<L0>:
  return D.250126;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10017, decl_uid=234869, cgraph_uid=6649, symbol_order=7443)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct relate_type * __result)
{
  struct relate_type * D.250131;
  const bool __assignable;
  struct relate_type * D.250129;

  <bb 2> :
  __assignable = 1;
  D.250131 = std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (__first, __last, __result);
  D.250129 = D.250131;

  <bb 3> :
<L0>:
  return D.250129;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10545, decl_uid=241916, cgraph_uid=7177, symbol_order=7971)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct relate_type * std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct relate_type * __result)
{
  struct relate_type * __cur;
  struct relate_type * D.250133;
  bool retval.363;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator* (&__first);
  _2 = std::__addressof<relate_type> (__cur);
  std::_Construct<relate_type, const relate_type&> (_2, _1);
  __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator++ (&__first);
  __cur = __cur + 48;

  <bb 4> :
  retval.363 = __gnu_cxx::operator!=<const relate_type*, std::vector<relate_type> > (&__first, &__last);
  if (retval.363 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.250133 = __cur;

  <bb 6> :
<L3>:
  return D.250133;

}



;; Function __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS1_SaIS1_EEEdeEv, funcdef_no=10859, decl_uid=212272, cgraph_uid=7491, symbol_order=8287)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct relate_type & __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator* (const struct __normal_iterator * const this)
{
  const struct relate_type & D.250135;

  <bb 2> :
  D.250135 = this->_M_current;

  <bb 3> :
<L0>:
  return D.250135;

}



;; Function std::__addressof<relate_type> (_ZSt11__addressofI11relate_typeEPT_RS1_, funcdef_no=10550, decl_uid=223364, cgraph_uid=7182, symbol_order=7976)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__addressof<relate_type> (struct relate_type & __r)
{
  struct relate_type * D.250137;

  <bb 2> :
  D.250137 = __r;

  <bb 3> :
<L0>:
  return D.250137;

}



;; Function std::_Construct<relate_type, const relate_type&> (_ZSt10_ConstructI11relate_typeJRKS0_EEvPT_DpOT0_, funcdef_no=10860, decl_uid=245384, cgraph_uid=7492, symbol_order=8288)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<relate_type, const relate_type&> (struct relate_type * __p, const struct relate_type & __args#0)
{
  void * D.246770;
  void * D.246769;
  const struct relate_type * D.246771;

  <bb 2> :
  D.246771 = std::forward<const relate_type&> (__args#0);
  D.246769 = __p;
  D.246770 = operator new (48, D.246769);
  MEM[(struct relate_type *)D.246770] = *D.246771;
  return;

}



;; Function std::forward<const relate_type&> (_ZSt7forwardIRK11relate_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9315, decl_uid=222979, cgraph_uid=5947, symbol_order=6737)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct relate_type & std::forward<const relate_type&> (const struct type & __t)
{
  const struct relate_type & D.250139;

  <bb 2> :
  D.250139 = __t;

  <bb 3> :
<L0>:
  return D.250139;

}



;; Function __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS1_SaIS1_EEEppEv, funcdef_no=10858, decl_uid=212276, cgraph_uid=7490, symbol_order=8286)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.250141;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 48;
  this->_M_current = _2;
  D.250141 = this;

  <bb 3> :
<L0>:
  return D.250141;

}



;; Function __gnu_cxx::operator!=<const relate_type*, std::vector<relate_type> > (_ZN9__gnu_cxxneIPK11relate_typeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_, funcdef_no=10857, decl_uid=245377, cgraph_uid=7489, symbol_order=8285)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<const relate_type*, std::vector<relate_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.250143;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::base (__rhs);
  _4 = *_3;
  D.250143 = _2 != _4;

  <bb 3> :
<L0>:
  return D.250143;

}



;; Function __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10546, decl_uid=212301, cgraph_uid=7178, symbol_order=7972)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct relate_type * const & __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::base (const struct __normal_iterator * const this)
{
  const struct relate_type * const & D.250145;

  <bb 2> :
  D.250145 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.250145;

}



;; Function std::_Destroy<relate_type*, relate_type> (_ZSt8_DestroyIP11relate_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8523, decl_uid=212193, cgraph_uid=5155, symbol_order=5945)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<relate_type*, relate_type> (struct relate_type * __first, struct relate_type * __last, struct allocator & D.222804)
{
  <bb 2> :
  std::_Destroy<relate_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<relate_type*> (_ZSt8_DestroyIP11relate_typeEvT_S2_, funcdef_no=9298, decl_uid=222806, cgraph_uid=5930, symbol_order=6720)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<relate_type*> (struct relate_type * __first, struct relate_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<relate_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<relate_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP11relate_typeEEvT_S4_, funcdef_no=10012, decl_uid=234837, cgraph_uid=6644, symbol_order=7438)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<relate_type*> (struct relate_type * D.241857, struct relate_type * D.241858)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8521, decl_uid=179158, cgraph_uid=5153, symbol_order=5943)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (struct _Vector_base * const this, struct relate_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<relate_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::deallocate (_ZNSt16allocator_traitsISaI11relate_typeEE10deallocateERS1_PS0_m, funcdef_no=9297, decl_uid=178963, cgraph_uid=5929, symbol_order=6719)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<relate_type> >::deallocate (struct allocator_type & __a, struct relate_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<relate_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI11relate_typeE10deallocateEPS1_m, funcdef_no=10011, decl_uid=178814, cgraph_uid=6643, symbol_order=7437)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::deallocate (struct new_allocator * const this, struct relate_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 48;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<relate_type>::end (_ZNSt6vectorI11relate_typeSaIS0_EE3endEv, funcdef_no=7810, decl_uid=179419, cgraph_uid=4442, symbol_order=5228)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<relate_type>::end (struct vector * const this)
{
  struct iterator D.215790;
  struct iterator D.250153;

  <bb 2> :
  _1 = &this->D.179806._M_impl.D.179151._M_finish;
  __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::__normal_iterator (&D.215790, _1);
  D.250153 = D.215790;
  D.215790 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250153;

}



;; Function __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=8770, decl_uid=202771, cgraph_uid=5402, symbol_order=6192)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::__normal_iterator (struct __normal_iterator * const this, struct relate_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<relate_type>::begin (_ZNSt6vectorI11relate_typeSaIS0_EE5beginEv, funcdef_no=7809, decl_uid=179415, cgraph_uid=4441, symbol_order=5227)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<relate_type>::begin (struct vector * const this)
{
  struct iterator D.215788;
  struct iterator D.250156;

  <bb 2> :
  _1 = &this->D.179806._M_impl.D.179151._M_start;
  __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::__normal_iterator (&D.215788, _1);
  D.250156 = D.215788;
  D.215788 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250156;

}



;; Function std::vector<relate_type>::end (_ZNKSt6vectorI11relate_typeSaIS0_EE3endEv, funcdef_no=8533, decl_uid=179421, cgraph_uid=5165, symbol_order=5955)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<relate_type>::end (const struct vector * const this)
{
  struct const_iterator D.222860;
  struct const_iterator D.250159;

  <bb 2> :
  _1 = &this->D.179806._M_impl.D.179151._M_finish;
  __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::__normal_iterator (&D.222860, _1);
  D.250159 = D.222860;
  D.222860 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250159;

}



;; Function __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9303, decl_uid=212314, cgraph_uid=5935, symbol_order=6725)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::__normal_iterator (struct __normal_iterator * const this, const struct relate_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<relate_type>::begin (_ZNKSt6vectorI11relate_typeSaIS0_EE5beginEv, funcdef_no=8532, decl_uid=179417, cgraph_uid=5164, symbol_order=5954)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<relate_type>::begin (const struct vector * const this)
{
  struct const_iterator D.222858;
  struct const_iterator D.250162;

  <bb 2> :
  _1 = &this->D.179806._M_impl.D.179151._M_start;
  __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::__normal_iterator (&D.222858, _1);
  D.250162 = D.222858;
  D.222858 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250162;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8535, decl_uid=212342, cgraph_uid=5167, symbol_order=5957)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.250167;
  struct __normal_iterator D.250166;
  struct __normal_iterator D.250165;

  <bb 2> :
  D.250166 = std::__miter_base<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (__last);
  D.250167 = std::__miter_base<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (__first);
  D.250165 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (D.250167, D.250166, __result);

  <bb 3> :
<L0>:
  return D.250165;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9307, decl_uid=222900, cgraph_uid=5939, symbol_order=6729)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.250169;

  <bb 2> :
  D.250169 = __it;

  <bb 3> :
<L0>:
  return D.250169;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9308, decl_uid=222906, cgraph_uid=5941, symbol_order=6731)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct relate_type * D.250173;
  struct __normal_iterator D.250171;

  <bb 2> :
  _1 = std::__niter_base<relate_type*, std::vector<relate_type> > (__result);
  _2 = std::__niter_base<const relate_type*, std::vector<relate_type> > (__last);
  _3 = std::__niter_base<const relate_type*, std::vector<relate_type> > (__first);
  D.250173 = std::__copy_move_a1<false, const relate_type*, relate_type*> (_3, _2, _1);
  _4 = D.250173;
  D.250171 = std::__niter_wrap<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.250171;

}



;; Function std::__niter_base<relate_type*, std::vector<relate_type> > (_ZSt12__niter_baseIP11relate_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10019, decl_uid=235035, cgraph_uid=6651, symbol_order=7445)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__niter_base<relate_type*, std::vector<relate_type> > (struct __normal_iterator __it)
{
  struct relate_type * D.250174;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (&__it);
  D.250174 = *_1;

  <bb 3> :
<L0>:
  return D.250174;

}



;; Function __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=8772, decl_uid=202758, cgraph_uid=5404, symbol_order=6194)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * const & __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (const struct __normal_iterator * const this)
{
  struct relate_type * const & D.250176;

  <bb 2> :
  D.250176 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.250176;

}



;; Function std::__niter_base<const relate_type*, std::vector<relate_type> > (_ZSt12__niter_baseIPK11relate_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10018, decl_uid=234884, cgraph_uid=6650, symbol_order=7444)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct relate_type * std::__niter_base<const relate_type*, std::vector<relate_type> > (struct __normal_iterator __it)
{
  const struct relate_type * D.250178;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::base (&__it);
  D.250178 = *_1;

  <bb 3> :
<L0>:
  return D.250178;

}



;; Function std::__copy_move_a1<false, const relate_type*, relate_type*> (_ZSt14__copy_move_a1ILb0EPK11relate_typePS0_ET1_T0_S5_S4_, funcdef_no=10020, decl_uid=235038, cgraph_uid=6652, symbol_order=7446)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__copy_move_a1<false, const relate_type*, relate_type*> (const struct relate_type * __first, const struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.250182;
  struct relate_type * D.250180;

  <bb 2> :
  D.250182 = std::__copy_move_a2<false, const relate_type*, relate_type*> (__first, __last, __result);
  D.250180 = D.250182;

  <bb 3> :
<L0>:
  return D.250180;

}



;; Function std::__copy_move_a2<false, const relate_type*, relate_type*> (_ZSt14__copy_move_a2ILb0EPK11relate_typePS0_ET1_T0_S5_S4_, funcdef_no=10547, decl_uid=241930, cgraph_uid=7179, symbol_order=7973)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__copy_move_a2<false, const relate_type*, relate_type*> (const struct relate_type * __first, const struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.250183;

  <bb 2> :
  D.250183 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<relate_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.250183;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<relate_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI11relate_typeEEPT_PKS4_S7_S5_, funcdef_no=10861, decl_uid=245408, cgraph_uid=7493, symbol_order=8289)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct relate_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<relate_type> (const struct relate_type * __first, const struct relate_type * __last, struct relate_type * __result)
{
  const ptrdiff_t _Num;
  struct relate_type * D.250188;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 48;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.364_2 = (long unsigned int) _Num;
  _3 = _Num.364_2 * 48;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.365_4 = (long unsigned int) _Num;
  _5 = _Num.365_4 * 48;
  D.250188 = __result + _5;

  <bb 5> :
<L3>:
  return D.250188;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10021, decl_uid=235042, cgraph_uid=6653, symbol_order=7447)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type*> (struct __normal_iterator __from, struct relate_type * __res)
{
  struct __normal_iterator D.250190;

  <bb 2> :
  _1 = std::__niter_base<relate_type*, std::vector<relate_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 48;
  D.250190 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.250190;

}



;; Function __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10548, decl_uid=202749, cgraph_uid=7180, symbol_order=7974)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct relate_type * const D.245414;
  struct __normal_iterator D.245415;
  struct __normal_iterator D.250192;

  <bb 2> :
  _1 = this->_M_current;
  __n.366_2 = (long unsigned int) __n;
  _3 = __n.366_2 * 48;
  _4 = _1 + _3;
  D.245414 = _4;
  __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::__normal_iterator (&D.245415, &D.245414);
  D.250192 = D.245415;
  D.245415 = {CLOBBER};
  D.245414 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.250192;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8536, decl_uid=212348, cgraph_uid=5168, symbol_order=5958)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.222935)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9310, decl_uid=222937, cgraph_uid=5942, symbol_order=6732)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10022, decl_uid=235066, cgraph_uid=6654, symbol_order=7448)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (struct __normal_iterator D.241939, struct __normal_iterator D.241940)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<relate_type*, relate_type*> (_ZSt4copyIP11relate_typeS1_ET0_T_S3_S2_, funcdef_no=8537, decl_uid=212356, cgraph_uid=5169, symbol_order=5959)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::copy<relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.250198;
  struct relate_type * D.250196;

  <bb 2> :
  _1 = std::__miter_base<relate_type*> (__last);
  _2 = std::__miter_base<relate_type*> (__first);
  D.250198 = std::__copy_move_a<false, relate_type*, relate_type*> (_2, _1, __result);
  D.250196 = D.250198;

  <bb 3> :
<L0>:
  return D.250196;

}



;; Function std::__miter_base<relate_type*> (_ZSt12__miter_baseIP11relate_typeET_S2_, funcdef_no=9311, decl_uid=222953, cgraph_uid=5943, symbol_order=6733)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__miter_base<relate_type*> (struct relate_type * __it)
{
  struct relate_type * D.250199;

  <bb 2> :
  D.250199 = __it;

  <bb 3> :
<L0>:
  return D.250199;

}



;; Function std::__copy_move_a<false, relate_type*, relate_type*> (_ZSt13__copy_move_aILb0EP11relate_typeS1_ET1_T0_S3_S2_, funcdef_no=9312, decl_uid=222955, cgraph_uid=5944, symbol_order=6734)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__copy_move_a<false, relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.250203;
  struct relate_type * D.250201;

  <bb 2> :
  __result.367_1 = __result;
  _2 = std::__niter_base<relate_type*> (__result.367_1);
  _3 = std::__niter_base<relate_type*> (__last);
  _4 = std::__niter_base<relate_type*> (__first);
  D.250203 = std::__copy_move_a1<false, relate_type*, relate_type*> (_4, _3, _2);
  _5 = D.250203;
  D.250201 = std::__niter_wrap<relate_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.250201;

}



;; Function std::__niter_base<relate_type*> (_ZSt12__niter_baseIP11relate_typeET_S2_, funcdef_no=10023, decl_uid=223163, cgraph_uid=6655, symbol_order=7449)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__niter_base<relate_type*> (struct relate_type * __it)
{
  struct relate_type * D.250204;

  <bb 2> :
  D.250204 = __it;

  <bb 3> :
<L0>:
  return D.250204;

}



;; Function std::__copy_move_a1<false, relate_type*, relate_type*> (_ZSt14__copy_move_a1ILb0EP11relate_typeS1_ET1_T0_S3_S2_, funcdef_no=10024, decl_uid=235077, cgraph_uid=6656, symbol_order=7450)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__copy_move_a1<false, relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.250208;
  struct relate_type * D.250206;

  <bb 2> :
  D.250208 = std::__copy_move_a2<false, relate_type*, relate_type*> (__first, __last, __result);
  D.250206 = D.250208;

  <bb 3> :
<L0>:
  return D.250206;

}



;; Function std::__copy_move_a2<false, relate_type*, relate_type*> (_ZSt14__copy_move_a2ILb0EP11relate_typeS1_ET1_T0_S3_S2_, funcdef_no=10549, decl_uid=241948, cgraph_uid=7181, symbol_order=7975)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__copy_move_a2<false, relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.250209;

  <bb 2> :
  D.250209 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<relate_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.250209;

}



;; Function std::__niter_wrap<relate_type*> (_ZSt12__niter_wrapIP11relate_typeET_RKS2_S2_, funcdef_no=10025, decl_uid=235081, cgraph_uid=6657, symbol_order=7451)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__niter_wrap<relate_type*> (struct relate_type * const & D.241952, struct relate_type * __res)
{
  struct relate_type * D.250211;

  <bb 2> :
  D.250211 = __res;

  <bb 3> :
<L0>:
  return D.250211;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8522, decl_uid=179039, cgraph_uid=5154, symbol_order=5944)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.250213;

  <bb 2> :
  D.250213 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.250213;

}



;; Function std::vector<relate_type>::size (_ZNKSt6vectorI11relate_typeSaIS0_EE4sizeEv, funcdef_no=7807, decl_uid=179439, cgraph_uid=4439, symbol_order=5225)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<relate_type>::size (const struct vector * const this)
{
  size_type D.250215;

  <bb 2> :
  _1 = this->D.179806._M_impl.D.179151._M_finish;
  _2 = this->D.179806._M_impl.D.179151._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 48;
  D.250215 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.250215;

}



;; Function std::__uninitialized_copy_a<relate_type*, relate_type*, relate_type> (_ZSt22__uninitialized_copy_aIP11relate_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8538, decl_uid=212360, cgraph_uid=5170, symbol_order=5960)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__uninitialized_copy_a<relate_type*, relate_type*, relate_type> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result, struct allocator & D.222962)
{
  struct relate_type * D.250219;
  struct relate_type * D.250217;

  <bb 2> :
  D.250219 = std::uninitialized_copy<relate_type*, relate_type*> (__first, __last, __result);
  D.250217 = D.250219;

  <bb 3> :
<L0>:
  return D.250217;

}



;; Function std::uninitialized_copy<relate_type*, relate_type*> (_ZSt18uninitialized_copyIP11relate_typeS1_ET0_T_S3_S2_, funcdef_no=9313, decl_uid=222964, cgraph_uid=5946, symbol_order=6736)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::uninitialized_copy<relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.250222;
  const bool __assignable;
  struct relate_type * D.250220;

  <bb 2> :
  __assignable = 1;
  D.250222 = std::__uninitialized_copy<false>::__uninit_copy<relate_type*, relate_type*> (__first, __last, __result);
  D.250220 = D.250222;

  <bb 3> :
<L0>:
  return D.250220;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<relate_type*, relate_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP11relate_typeS3_EET0_T_S5_S4_, funcdef_no=10026, decl_uid=235180, cgraph_uid=6658, symbol_order=7452)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct relate_type * std::__uninitialized_copy<false>::__uninit_copy<relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * __cur;
  struct relate_type * D.250223;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<relate_type> (__cur);
  std::_Construct<relate_type, relate_type&> (_1, __first);
  __first = __first + 48;
  __cur = __cur + 48;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.250223 = __cur;

  <bb 6> :
<L3>:
  return D.250223;

}



;; Function std::_Construct<relate_type, relate_type&> (_ZSt10_ConstructI11relate_typeJRS0_EEvPT_DpOT0_, funcdef_no=10551, decl_uid=241960, cgraph_uid=7183, symbol_order=7977)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<relate_type, relate_type&> (struct relate_type * __p, struct relate_type & __args#0)
{
  void * D.245438;
  void * D.245437;
  const struct relate_type * D.245439;

  <bb 2> :
  D.245439 = std::forward<relate_type&> (__args#0);
  D.245437 = __p;
  D.245438 = operator new (48, D.245437);
  MEM[(struct relate_type *)D.245438] = *D.245439;
  return;

}



;; Function std::forward<relate_type&> (_ZSt7forwardIR11relate_typeEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=10862, decl_uid=245435, cgraph_uid=7494, symbol_order=8290)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct relate_type & std::forward<relate_type&> (struct type & __t)
{
  struct relate_type & D.250225;

  <bb 2> :
  D.250225 = __t;

  <bb 3> :
<L0>:
  return D.250225;

}



;; Function relate_type::relate_type (_ZN11relate_typeC2Ev, funcdef_no=6316, decl_uid=191865, cgraph_uid=3291, symbol_order=4068)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void relate_type::relate_type (struct relate_type * const this)
{
  <bb 2> :
  this->now_fucntion = 0;
  this->now_stmt = 0;
  this->now_basicblock = 0;
  return;

}



;; Function std::vector<relate_type>::push_back (_ZNSt6vectorI11relate_typeSaIS0_EE9push_backERKS0_, funcdef_no=7664, decl_uid=179486, cgraph_uid=4297, symbol_order=5083)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<relate_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.250230;

  <bb 2> :
  _1 = this->D.179806._M_impl.D.179151._M_finish;
  _2 = this->D.179806._M_impl.D.179151._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.179806._M_impl.D.179151._M_finish;
  _4 = &this->D.179806._M_impl;
  std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, const relate_type&> (_4, _3, __x);
  _5 = this->D.179806._M_impl.D.179151._M_finish;
  _6 = _5 + 48;
  this->D.179806._M_impl.D.179151._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.250230 = std::vector<relate_type>::end (this);
  std::vector<relate_type>::_M_realloc_insert<const relate_type&> (this, D.250230, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, const relate_type&> (_ZNSt16allocator_traitsISaI11relate_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8539, decl_uid=212372, cgraph_uid=5171, symbol_order=5961)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, const relate_type&> (struct allocator_type & __a, struct relate_type * __p, const struct relate_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const relate_type&> (__args#0);
  __gnu_cxx::new_allocator<relate_type>::construct<relate_type, const relate_type&> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::construct<relate_type, const relate_type&> (_ZN9__gnu_cxx13new_allocatorI11relate_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9316, decl_uid=222981, cgraph_uid=5948, symbol_order=6738)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::construct<relate_type, const relate_type&> (struct new_allocator * const this, struct relate_type * __p, const struct relate_type & __args#0)
{
  void * D.235192;
  void * D.235191;
  const struct relate_type * D.235193;

  <bb 2> :
  D.235193 = std::forward<const relate_type&> (__args#0);
  D.235191 = __p;
  D.235192 = operator new (48, D.235191);
  MEM[(struct relate_type *)D.235192] = *D.235193;
  return;

}



;; Function std::vector<relate_type>::_M_realloc_insert<const relate_type&> (_ZNSt6vectorI11relate_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8540, decl_uid=212541, cgraph_uid=5175, symbol_order=5965)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<relate_type>::_M_realloc_insert<const relate_type&> (struct vector * const this, struct iterator __position, const struct relate_type & __args#0)
{
  struct relate_type * D.250235;
  const size_type D.250234;
  struct relate_type * __new_finish;
  struct relate_type * __new_start;
  const size_type __elems_before;
  struct relate_type * __old_finish;
  struct relate_type * __old_start;
  const size_type __len;
  struct iterator D.222992;

  <bb 2> :
  D.250234 = std::vector<relate_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.250234;
  __old_start = this->D.179806._M_impl.D.179151._M_start;
  __old_finish = this->D.179806._M_impl.D.179151._M_finish;
  D.222992 = std::vector<relate_type>::begin (this);
  _1 = __gnu_cxx::operator-<relate_type*, std::vector<relate_type> > (&__position, &D.222992);
  __elems_before = (const size_type) _1;
  D.222992 = {CLOBBER};
  _2 = &this->D.179806;
  D.250235 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_allocate (_2, __len);
  __new_start = D.250235;
  __new_finish = __new_start;
  _3 = std::forward<const relate_type&> (__args#0);
  _4 = __elems_before * 48;
  _5 = __new_start + _4;
  _6 = &this->D.179806._M_impl;
  std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, const relate_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.179806;
  _8 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<relate_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 48;
  _11 = &this->D.179806;
  _12 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<relate_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.179806;
  _23 = this->D.179806._M_impl.D.179151._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 48;
  _26 = (long unsigned int) _25;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.179806._M_impl.D.179151._M_start = __new_start;
  this->D.179806._M_impl.D.179151._M_finish = __new_finish;
  _27 = __len * 48;
  _28 = __new_start + _27;
  this->D.179806._M_impl.D.179151._M_end_of_storage = _28;
  return;

}



;; Function std::vector<relate_type>::_M_check_len (_ZNKSt6vectorI11relate_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9317, decl_uid=179655, cgraph_uid=5949, symbol_order=6739)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<relate_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.370;
  size_type D.250239;
  const long unsigned int D.235198;
  bool retval.368;

  <bb 2> :
  _1 = std::vector<relate_type>::max_size (this);
  _2 = std::vector<relate_type>::size (this);
  _3 = _1 - _2;
  __n.369_4 = __n;
  retval.368 = _3 < __n.369_4;
  if (retval.368 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<relate_type>::size (this);
  _6 = std::vector<relate_type>::size (this);
  D.235198 = _6;
  _7 = std::max<long unsigned int> (&D.235198, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.235198 = {CLOBBER};
  _9 = std::vector<relate_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<relate_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.370 = std::vector<relate_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.370 = __len;

  <bb 8> :
  D.250239 = iftmp.370;

  <bb 9> :
<L6>:
  return D.250239;

}



;; Function std::vector<relate_type>::max_size (_ZNKSt6vectorI11relate_typeSaIS0_EE8max_sizeEv, funcdef_no=10027, decl_uid=179441, cgraph_uid=6659, symbol_order=7453)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<relate_type>::max_size (const struct vector * const this)
{
  size_type D.250246;

  <bb 2> :
  _1 = &this->D.179806;
  _2 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_1);
  D.250246 = std::vector<relate_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.250246;

}



;; Function std::vector<relate_type>::_S_max_size (_ZNSt6vectorI11relate_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10552, decl_uid=179662, cgraph_uid=7184, symbol_order=7978)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<relate_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.250248;

  <bb 2> :
  __diffmax = 192153584101141162;
  _1 = std::allocator_traits<std::allocator<relate_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.250248 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250248;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::max_size (_ZNSt16allocator_traitsISaI11relate_typeEE8max_sizeERKS1_, funcdef_no=10863, decl_uid=178976, cgraph_uid=7495, symbol_order=8291)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<relate_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.250251;

  <bb 2> :
  D.250251 = __gnu_cxx::new_allocator<relate_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.250251;

}



;; Function __gnu_cxx::new_allocator<relate_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI11relate_typeE8max_sizeEv, funcdef_no=10983, decl_uid=178818, cgraph_uid=7615, symbol_order=8411)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<relate_type>::max_size (const struct new_allocator * const this)
{
  size_type D.250253;

  <bb 2> :
  D.250253 = __gnu_cxx::new_allocator<relate_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.250253;

}



;; Function __gnu_cxx::operator-<relate_type*, std::vector<relate_type> > (_ZN9__gnu_cxxmiIP11relate_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9318, decl_uid=222993, cgraph_uid=5950, symbol_order=6740)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<relate_type*, std::vector<relate_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.250255;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.250255 = _5 /[ex] 48;

  <bb 3> :
<L0>:
  return D.250255;

}



;; Function std::vector<relate_type>::_S_relocate (_ZNSt6vectorI11relate_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9319, decl_uid=179313, cgraph_uid=5951, symbol_order=6741)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::vector<relate_type>::_S_relocate (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.250258;
  struct relate_type * D.250257;

  <bb 2> :
  D.250257 = std::vector<relate_type>::_S_do_relocate (__first, __last, __result, __alloc, D.250258);

  <bb 3> :
<L0>:
  return D.250257;

}



;; Function std::vector<relate_type>::_S_do_relocate (_ZNSt6vectorI11relate_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10028, decl_uid=179301, cgraph_uid=6660, symbol_order=7454)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::vector<relate_type>::_S_do_relocate (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.241972)
{
  struct relate_type * D.250260;

  <bb 2> :
  D.250260 = std::__relocate_a<relate_type*, relate_type*, std::allocator<relate_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.250260;

}



;; Function std::__relocate_a<relate_type*, relate_type*, std::allocator<relate_type> > (_ZSt12__relocate_aIP11relate_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10553, decl_uid=223157, cgraph_uid=7185, symbol_order=7979)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__relocate_a<relate_type*, relate_type*, std::allocator<relate_type> > (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result, struct allocator & __alloc)
{
  struct relate_type * D.250262;

  <bb 2> :
  _1 = std::__niter_base<relate_type*> (__result);
  _2 = std::__niter_base<relate_type*> (__last);
  _3 = std::__niter_base<relate_type*> (__first);
  D.250262 = std::__relocate_a_1<relate_type*, relate_type*, std::allocator<relate_type> > (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.250262;

}



;; Function std::__relocate_a_1<relate_type*, relate_type*, std::allocator<relate_type> > (_ZSt14__relocate_a_1IP11relate_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10864, decl_uid=223308, cgraph_uid=7496, symbol_order=8292)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct relate_type * std::__relocate_a_1<relate_type*, relate_type*, std::allocator<relate_type> > (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result, struct allocator & __alloc)
{
  struct relate_type * __cur;
  struct relate_type * D.250264;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<relate_type> (__first);
  _2 = std::__addressof<relate_type> (__cur);
  std::__relocate_object_a<relate_type, relate_type, std::allocator<relate_type> > (_2, _1, __alloc);
  __first = __first + 48;
  __cur = __cur + 48;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.250264 = __cur;

  <bb 6> :
<L3>:
  return D.250264;

}



;; Function std::__relocate_object_a<relate_type, relate_type, std::allocator<relate_type> > (_ZSt19__relocate_object_aI11relate_typeS0_SaIS0_EEvPT_PT0_RT1_, funcdef_no=10984, decl_uid=223337, cgraph_uid=7616, symbol_order=8412)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__relocate_object_a<relate_type, relate_type, std::allocator<relate_type> > (struct relate_type * restrict __dest, struct relate_type * restrict __orig, struct allocator & __alloc)
{
  <bb 2> :
  _1 = std::move<relate_type&> (__orig);
  std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, relate_type> (__alloc, __dest, _1);
  _2 = std::__addressof<relate_type> (__orig);
  std::allocator_traits<std::allocator<relate_type> >::destroy<relate_type> (__alloc, _2);
  return;

}



;; Function std::move<relate_type&> (_ZSt4moveIR11relate_typeEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=11034, decl_uid=223349, cgraph_uid=7666, symbol_order=8462)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<relate_type&> (struct relate_type & __t)
{
  struct type & D.250266;

  <bb 2> :
  D.250266 = __t;

  <bb 3> :
<L0>:
  return D.250266;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, relate_type> (_ZNSt16allocator_traitsISaI11relate_typeEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_, funcdef_no=11035, decl_uid=223351, cgraph_uid=7667, symbol_order=8463)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, relate_type> (struct allocator_type & __a, struct relate_type * __p, struct relate_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<relate_type> (__args#0);
  __gnu_cxx::new_allocator<relate_type>::construct<relate_type, relate_type> (__a, __p, _1);
  return;

}



;; Function std::forward<relate_type> (_ZSt7forwardI11relate_typeEOT_RNSt16remove_referenceIS1_E4typeE, funcdef_no=11056, decl_uid=247702, cgraph_uid=7688, symbol_order=8484)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct relate_type & std::forward<relate_type> (struct type & __t)
{
  struct relate_type & D.250268;

  <bb 2> :
  D.250268 = __t;

  <bb 3> :
<L0>:
  return D.250268;

}



;; Function __gnu_cxx::new_allocator<relate_type>::construct<relate_type, relate_type> (_ZN9__gnu_cxx13new_allocatorI11relate_typeE9constructIS1_JS1_EEEvPT_DpOT0_, funcdef_no=11057, decl_uid=247704, cgraph_uid=7689, symbol_order=8485)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::construct<relate_type, relate_type> (struct new_allocator * const this, struct relate_type * __p, struct relate_type & __args#0)
{
  void * D.248154;
  void * D.248153;
  struct relate_type * D.248155;

  <bb 2> :
  D.248155 = std::forward<relate_type> (__args#0);
  D.248153 = __p;
  D.248154 = operator new (48, D.248153);
  MEM[(struct relate_type *)D.248154] = *D.248155;
  return;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::destroy<relate_type> (_ZNSt16allocator_traitsISaI11relate_typeEE7destroyIS0_EEvRS1_PT_, funcdef_no=9320, decl_uid=223366, cgraph_uid=5952, symbol_order=6742)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<relate_type> >::destroy<relate_type> (struct allocator_type & __a, struct relate_type * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<relate_type>::destroy<relate_type> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::destroy<relate_type> (_ZN9__gnu_cxx13new_allocatorI11relate_typeE7destroyIS1_EEvPT_, funcdef_no=10029, decl_uid=235212, cgraph_uid=6661, symbol_order=7455)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::destroy<relate_type> (struct new_allocator * const this, struct relate_type * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::put (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7666, decl_uid=191470, cgraph_uid=4301, symbol_order=5087)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_relate_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_relate_array & v)
{
  bool D.250277;
  struct hash_entry * D.250276;
  unsigned int D.250275;
  bool ins;
  struct hash_entry * e;
  bool D.250273;
  void * D.212551;
  void * D.212550;

  <bb 2> :
  _1 = &this->m_table;
  D.250275 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::hash (k);
  _2 = D.250275;
  D.250276 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.250276;
  D.250277 = hash_map<tree_node*, function_relate_array>::hash_entry::is_empty (e);
  ins = D.250277;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.212550 = &e->m_value;
  D.212551 = operator new (24, D.212550);
  function_relate_array::function_relate_array (D.212551, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_relate_array::operator= (_4, v);

  <bb 5> :
  D.250273 = ~ins;

  <bb 6> :
<L3>:
  return D.250273;

  <bb 7> :
<L4>:
  operator delete (D.212551, D.212550);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8544, decl_uid=191628, cgraph_uid=5176, symbol_order=5966)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.250328;
  bool D.250327;
  bool D.250326;
  bool D.250325;
  bool D.250324;
  bool D.250323;
  struct value_type * D.250322;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.376;
  bool retval.375;
  bool retval.374;
  bool retval.373;
  bool retval.372;
  bool retval.371;
  struct value_type * D.250284;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 32;
  entry = _11 + _13;
  size = this->m_size;
  D.250323 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.371 = D.250323;
  if (retval.371 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.250324 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.372 = D.250324;
  if (retval.372 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 32;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.250325 = hash_map<tree_node*, function_relate_array>::hash_entry::equal (entry, comparable);
  retval.373 = D.250325;
  if (retval.373 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  D.250284 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 32;
  entry = _24 + _26;
  D.250326 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.374 = D.250326;
  if (retval.374 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.250327 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.375 = D.250327;
  if (retval.375 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 32;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.250328 = hash_map<tree_node*, function_relate_array>::hash_entry::equal (entry, comparable);
  retval.376 = D.250328;
  if (retval.376 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 32;
  D.250284 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.250284 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.250284 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 32;
  D.250284 = _37 + _39;

  <bb 27> :
<L37>:
  return D.250284;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9321, decl_uid=191709, cgraph_uid=5965, symbol_order=6755)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.250359;
  unsigned int D.250358;
  bool D.250357;
  bool D.250356;
  struct mem_alloc_description & D.250355;
  struct value_type * D.250354;
  unsigned int D.250353;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.235235;
  void * D.235234;
  struct hash_entry & D.235272;
  bool iftmp.380;
  bool retval.379;
  bool iftmp.378;
  bool retval.377;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 32;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.378 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.378 = 0;

  <bb 6> :
  retval.377 = iftmp.378;
  if (retval.377 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.250353 = hash_table_higher_prime_index (_5);
  nindex = D.250353;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.250354 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.250354;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.250356 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.250356;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.250357 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.250357;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.380 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.380 = 0;

  <bb 15> :
  retval.379 = iftmp.380;
  if (retval.379 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.250358 = hash_map<tree_node*, function_relate_array>::hash_entry::hash (x);
  _16 = D.250358;
  D.250359 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.250359;
  D.235272 = std::move<hash_map<tree_node*, function_relate_array>::hash_entry&> (x);
  D.235234 = q;
  D.235235 = operator new (32, D.235234);
  hash_map<tree_node*, function_relate_array>::hash_entry::hash_entry (D.235235, D.235272);

  <bb 17> :
  p = p + 32;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10030, decl_uid=191604, cgraph_uid=6662, symbol_order=7456)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.250360;

  <bb 2> :
  D.250360 = this->m_size;

  <bb 3> :
<L0>:
  return D.250360;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10031, decl_uid=191606, cgraph_uid=6663, symbol_order=7457)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.250362;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.250362 = _1 - _2;

  <bb 3> :
<L0>:
  return D.250362;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10032, decl_uid=191706, cgraph_uid=6664, symbol_order=7458)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.381;
  bool D.250364;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.381 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.381 = 0;

  <bb 6> :
  D.250364 = iftmp.381;

  <bb 7> :
<L4>:
  return D.250364;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9299, decl_uid=191696, cgraph_uid=5931, symbol_order=6721)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.250386;
  struct value_type * D.250385;
  struct mem_alloc_description & D.250384;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.250382;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.250385 = xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_alloc (n);
  nentries = D.250385;
  goto <bb 6>; [INV]

  <bb 5> :
  D.250386 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_relate_array>::hash_entry> (n);
  nentries = D.250386;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.250382 = nentries;

  <bb 9> :
<L14>:
  return D.250382;

}



;; Function xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10013, decl_uid=215801, cgraph_uid=6645, symbol_order=7439)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.250389;
  struct hash_entry * D.250387;

  <bb 2> :
  D.250389 = xcalloc (count, 32);
  D.250387 = D.250389;

  <bb 3> :
<L0>:
  return D.250387;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_relate_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10014, decl_uid=234844, cgraph_uid=6646, symbol_order=7440)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_relate_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.250396;
  struct hash_entry * D.250395;
  struct hash_entry * D.250393;
  bool retval.382;

  <bb 2> :
  retval.382 = need_finalization_p<hash_map<tree_node*, function_relate_array>::hash_entry> ();
  if (retval.382 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 32;
  D.250395 = ggc_internal_cleared_alloc (_1, finalize, 32, c);
  D.250393 = D.250395;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 32;
  D.250396 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.250393 = D.250396;

  <bb 5> :
<L2>:
  return D.250393;

}



;; Function finalize<hash_map<tree_node*, function_relate_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10539, decl_uid=241865, cgraph_uid=7174, symbol_order=7968)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_relate_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_relate_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10541, decl_uid=245345, cgraph_uid=7172, symbol_order=7966)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_relate_array::~function_relate_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_relate_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10538, decl_uid=241864, cgraph_uid=7170, symbol_order=7964)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_relate_array>::hash_entry> ()
{
  bool D.250397;

  <bb 2> :
  D.250397 = 1;

  <bb 3> :
<L0>:
  return D.250397;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10034, decl_uid=191529, cgraph_uid=6666, symbol_order=7460)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_relate_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.250401;
  hashval_t D.250399;

  <bb 2> :
  _1 = &e->m_key;
  D.250401 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::hash (_1);
  D.250399 = D.250401;

  <bb 3> :
<L0>:
  return D.250399;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10033, decl_uid=191699, cgraph_uid=6665, symbol_order=7459)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.250414;
  bool D.250413;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.384;
  struct value_type * D.250405;
  bool retval.383;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 32;
  slot = _2 + _4;
  D.250413 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.383 = D.250413;
  if (retval.383 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.250405 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 32;
  slot = _8 + _10;
  D.250414 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.384 = D.250414;
  if (retval.384 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.250405 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.250405;

}



;; Function std::move<hash_map<tree_node*, function_relate_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10035, decl_uid=235232, cgraph_uid=6667, symbol_order=7461)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_relate_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.250415;

  <bb 2> :
  D.250415 = __t;

  <bb 3> :
<L0>:
  return D.250415;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9332, decl_uid=235257, cgraph_uid=5963, symbol_order=6753)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.235259)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.235259->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.235259->m_value;
  function_relate_array::function_relate_array (_2, _3);
  return;

}



;; Function function_relate_array::function_relate_array (_ZN21function_relate_arrayC2EOS_, funcdef_no=9330, decl_uid=191404, cgraph_uid=5960, symbol_order=6750)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_relate_array::function_relate_array (struct function_relate_array * const this, struct function_relate_array & D.191406)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->relate_type_array;
  _2 = &D.191406->relate_type_array;
  std::vector<relate_type>::vector (_1, _2);
  return;

}



;; Function std::vector<relate_type>::vector (_ZNSt6vectorI11relate_typeSaIS0_EEC2EOS2_, funcdef_no=9328, decl_uid=179763, cgraph_uid=5957, symbol_order=6747)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<relate_type>::vector (struct vector * const this, struct vector & D.179765)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.179806;
  _2 = &D.179765->D.179806;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_ZNSt12_Vector_baseI11relate_typeSaIS0_EEC2EOS2_, funcdef_no=9326, decl_uid=179231, cgraph_uid=5954, symbol_order=6744)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.179233)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.179233->_M_impl;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10037, decl_uid=179137, cgraph_uid=6669, symbol_order=7463)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl&> (__x);
  std::allocator<relate_type>::allocator (this, _1);
  _2 = &this->D.179151;
  _3 = std::move<std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.179151;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::allocator<relate_type>::allocator (_ZNSaI11relate_typeEC2ERKS0_, funcdef_no=10556, decl_uid=178921, cgraph_uid=7188, symbol_order=7982)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<relate_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<relate_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11relate_typeEC2ERKS2_, funcdef_no=10866, decl_uid=178850, cgraph_uid=7498, symbol_order=8294)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.178852)
{
  <bb 2> :
  return;

}



;; Function std::move<std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI11relate_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10554, decl_uid=242002, cgraph_uid=7186, symbol_order=7980)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.250417;

  <bb 2> :
  D.250417 = __t;

  <bb 3> :
<L0>:
  return D.250417;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10559, decl_uid=179093, cgraph_uid=7191, symbol_order=7985)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8776, decl_uid=215803, cgraph_uid=5408, symbol_order=6198)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9334, decl_uid=191717, cgraph_uid=5966, symbol_order=6756)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_relate_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10039, decl_uid=191541, cgraph_uid=6671, symbol_order=7465)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::mark_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::mark_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10561, decl_uid=242017, cgraph_uid=7193, symbol_order=7987)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::mark_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function function_relate_array::function_relate_array (_ZN21function_relate_arrayC2ERKS_, funcdef_no=7668, decl_uid=191395, cgraph_uid=4299, symbol_order=5085)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_relate_array::function_relate_array (struct function_relate_array * const this, const struct function_relate_array & D.191397)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->relate_type_array;
  _2 = &D.191397->relate_type_array;
  std::vector<relate_type>::vector (_1, _2);
  return;

}



;; Function std::vector<relate_type>::vector (_ZNSt6vectorI11relate_typeSaIS0_EEC2ERKS2_, funcdef_no=8547, decl_uid=179769, cgraph_uid=5179, symbol_order=5969)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<relate_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct relate_type * D.250424;
  struct __normal_iterator D.250421;
  struct __normal_iterator D.250420;
  struct allocator D.223569;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.179806;
  _2 = &__x->D.179806;
  _3 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_2);
  D.223569 = __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<relate_type>::size (__x);
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_1, _4, &D.223569);

  <bb 3> :
  std::allocator<relate_type>::~allocator (&D.223569);
  D.223569 = {CLOBBER};
  _5 = &this->D.179806;
  _6 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.179806._M_impl.D.179151._M_start;
  D.250420 = std::vector<relate_type>::end (__x);
  D.250421 = std::vector<relate_type>::begin (__x);
  D.250424 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*, relate_type> (D.250421, D.250420, _7, _6);

  <bb 4> :
  _8 = D.250424;
  this->D.179806._M_impl.D.179151._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<relate_type>::~allocator (&D.223569);
  resx 2

  <bb 6> :
<L1>:
  D.223569 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.179806;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::~_Vector_base (_9);
  resx 5

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI11relate_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=9335, decl_uid=179013, cgraph_uid=5967, symbol_order=6757)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<relate_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI11relate_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=10040, decl_uid=178978, cgraph_uid=6672, symbol_order=7466)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<relate_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<relate_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_ZNSt12_Vector_baseI11relate_typeSaIS0_EEC2EmRKS1_, funcdef_no=9337, decl_uid=179238, cgraph_uid=5969, symbol_order=6759)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=10042, decl_uid=179143, cgraph_uid=6674, symbol_order=7468)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<relate_type>::allocator (this, __a);
  _1 = &this->D.179151;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_create_storage (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE17_M_create_storageEm, funcdef_no=10044, decl_uid=179162, cgraph_uid=6676, symbol_order=7470)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct relate_type * D.250431;

  <bb 2> :
  D.250431 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_allocate (this, __n);
  _1 = D.250431;
  this->_M_impl.D.179151._M_start = _1;
  _2 = this->_M_impl.D.179151._M_start;
  this->_M_impl.D.179151._M_finish = _2;
  _3 = this->_M_impl.D.179151._M_start;
  _4 = __n * 48;
  _5 = _3 + _4;
  this->_M_impl.D.179151._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6302, decl_uid=179198, cgraph_uid=3275, symbol_order=4052)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<relate_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<relate_type>::~allocator (_ZNSaI11relate_typeED2Ev, funcdef_no=7652, decl_uid=178931, cgraph_uid=4284, symbol_order=5070)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<relate_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<relate_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI11relate_typeED2Ev, funcdef_no=8519, decl_uid=178860, cgraph_uid=5151, symbol_order=5941)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::~_Vector_base (_ZNSt12_Vector_baseI11relate_typeSaIS0_EED2Ev, funcdef_no=7655, decl_uid=179261, cgraph_uid=4287, symbol_order=5073)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.179151._M_end_of_storage;
  _2 = this->_M_impl.D.179151._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 48;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.179151._M_start;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function function_relate_array::~function_relate_array (_ZN21function_relate_arrayD2Ev, funcdef_no=6312, decl_uid=191416, cgraph_uid=3287, symbol_order=4064)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_relate_array::~function_relate_array (struct function_relate_array * const this)
{
  <bb 2> :
  _1 = &this->relate_type_array;
  std::vector<relate_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<relate_type>::~vector (_ZNSt6vectorI11relate_typeSaIS0_EED2Ev, funcdef_no=7658, decl_uid=179803, cgraph_uid=4290, symbol_order=5076)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<relate_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.179806;
  _2 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.179806._M_impl.D.179151._M_finish;
  _4 = this->D.179806._M_impl.D.179151._M_start;
  std::_Destroy<relate_type*, relate_type> (_4, _3, _2);
  _5 = &this->D.179806;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function trace_function_path (_Z19trace_function_pathP9tree_nodeiS0_Pi, funcdef_no=6318, decl_uid=187011, cgraph_uid=3325, symbol_order=4102)

Merging blocks 4 and 232
Removing basic block 36
Removing basic block 37
Removing basic block 38
Removing basic block 39
Removing basic block 40
Removing basic block 44
Removing basic block 74
Removing basic block 91
Removing basic block 92
Removing basic block 98
Removing basic block 123
Removing basic block 151
Removing basic block 161
Removing basic block 162
Removing basic block 179
Removing basic block 181
Removing basic block 203
Removing basic block 216
Removing basic block 217
Removing basic block 221
Removing basic block 230
Merging blocks 231 and 233
;; 9 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 6
;;  header 209, latch 208
;;  depth 1, outer 0
;;  nodes: 209 208 202 207 206 205 204 203 178 201 180 179 200 189 199 190 198 191 197 196 195 194 193 192 186 188 187 185 184 183 182 181 175 177 171 176 172 170 169 174 173
;;
;; Loop 8
;;  header 200, latch 199
;;  depth 2, outer 6
;;  nodes: 200 199 190 198 191 197 196 195 194 193 192
;;
;; Loop 7
;;  header 177, latch 176
;;  depth 2, outer 6
;;  nodes: 177 176 172
;;
;; Loop 5
;;  header 141, latch 140
;;  depth 1, outer 0
;;  nodes: 141 140 130 139 138 137 136 135 134 133 132 131 129 128 127
;;
;; Loop 4
;;  header 114, latch 113
;;  depth 1, outer 0
;;  nodes: 114 113 103 112 111 110 109 108 107 106 105 104 102 101 100
;;
;; Loop 3
;;  header 85, latch 84
;;  depth 1, outer 0
;;  nodes: 85 84 56 61 60 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 67 68 64 63 62 66 65 59 58 57 55 54
;;
;; Loop 2
;;  header 52, latch 51
;;  depth 1, outer 0
;;  nodes: 52 51 50 49
;;
;; Loop 1
;;  header 37, latch 36
;;  depth 1, outer 0
;;  nodes: 37 36 21 35 27 29 31 28 30 25 26 22 23 24 34 33 32
;; 2 succs { 239 3 }
;; 3 succs { 4 5 }
;; 4 succs { 211 }
;; 5 succs { 239 6 }
;; 6 succs { 239 7 }
;; 7 succs { 238 8 }
;; 8 succs { 237 9 }
;; 9 succs { 237 10 }
;; 10 succs { 11 39 }
;; 11 succs { 237 12 }
;; 12 succs { 13 15 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 39 }
;; 17 succs { 214 18 }
;; 18 succs { 214 19 }
;; 19 succs { 213 20 }
;; 20 succs { 37 }
;; 21 succs { 22 36 }
;; 22 succs { 23 26 }
;; 23 succs { 24 26 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 28 36 }
;; 28 succs { 29 36 }
;; 29 succs { 30 36 }
;; 30 succs { 212 31 }
;; 31 succs { 32 36 }
;; 32 succs { 212 33 }
;; 33 succs { 212 34 }
;; 34 succs { 212 35 }
;; 35 succs { 212 36 }
;; 36 succs { 37 }
;; 37 succs { 21 38 }
;; 38 succs { 39 }
;; 39 succs { 40 89 }
;; 40 succs { 41 89 }
;; 41 succs { 237 42 }
;; 42 succs { 43 89 }
;; 43 succs { 223 44 }
;; 44 succs { 223 45 }
;; 45 succs { 222 46 }
;; 46 succs { 221 47 }
;; 47 succs { 215 48 }
;; 48 succs { 52 }
;; 49 succs { 217 50 }
;; 50 succs { 216 51 }
;; 51 succs { 52 }
;; 52 succs { 49 53 }
;; 53 succs { 85 }
;; 54 succs { 221 55 }
;; 55 succs { 221 56 }
;; 56 succs { 57 84 }
;; 57 succs { 221 58 }
;; 58 succs { 221 59 }
;; 59 succs { 221 60 }
;; 60 succs { 61 84 }
;; 61 succs { 62 84 }
;; 62 succs { 221 63 }
;; 63 succs { 218 64 }
;; 64 succs { 65 68 }
;; 65 succs { 220 66 }
;; 66 succs { 219 67 }
;; 67 succs { 221 69 }
;; 68 succs { 221 69 }
;; 69 succs { 221 70 }
;; 70 succs { 221 71 }
;; 71 succs { 221 72 }
;; 72 succs { 221 73 }
;; 73 succs { 221 74 }
;; 74 succs { 221 75 }
;; 75 succs { 221 76 }
;; 76 succs { 221 77 }
;; 77 succs { 221 78 }
;; 78 succs { 221 79 }
;; 79 succs { 221 80 }
;; 80 succs { 221 81 }
;; 81 succs { 221 82 }
;; 82 succs { 221 83 }
;; 83 succs { 221 84 }
;; 84 succs { 85 }
;; 85 succs { 54 86 }
;; 86 succs { 87 88 }
;; 87 succs { 88 }
;; 88 succs { 89 }
;; 89 succs { 237 90 }
;; 90 succs { 91 94 }
;; 91 succs { 92 94 }
;; 92 succs { 93 94 }
;; 93 succs { 95 }
;; 94 succs { 95 }
;; 95 succs { 96 116 }
;; 96 succs { 226 97 }
;; 97 succs { 226 98 }
;; 98 succs { 225 99 }
;; 99 succs { 114 }
;; 100 succs { 224 101 }
;; 101 succs { 224 102 }
;; 102 succs { 224 103 }
;; 103 succs { 104 113 }
;; 104 succs { 224 105 }
;; 105 succs { 224 106 }
;; 106 succs { 224 107 }
;; 107 succs { 224 108 }
;; 108 succs { 224 109 }
;; 109 succs { 224 110 }
;; 110 succs { 224 111 }
;; 111 succs { 224 112 }
;; 112 succs { 224 113 }
;; 113 succs { 114 }
;; 114 succs { 100 115 }
;; 115 succs { 116 }
;; 116 succs { 237 117 }
;; 117 succs { 118 121 }
;; 118 succs { 119 121 }
;; 119 succs { 120 121 }
;; 120 succs { 122 }
;; 121 succs { 122 }
;; 122 succs { 123 143 }
;; 123 succs { 229 124 }
;; 124 succs { 229 125 }
;; 125 succs { 228 126 }
;; 126 succs { 141 }
;; 127 succs { 227 128 }
;; 128 succs { 227 129 }
;; 129 succs { 227 130 }
;; 130 succs { 131 140 }
;; 131 succs { 227 132 }
;; 132 succs { 227 133 }
;; 133 succs { 227 134 }
;; 134 succs { 227 135 }
;; 135 succs { 227 136 }
;; 136 succs { 227 137 }
;; 137 succs { 227 138 }
;; 138 succs { 227 139 }
;; 139 succs { 227 140 }
;; 140 succs { 141 }
;; 141 succs { 127 142 }
;; 142 succs { 143 }
;; 143 succs { 144 149 }
;; 144 succs { 145 149 }
;; 145 succs { 146 149 }
;; 146 succs { 147 149 }
;; 147 succs { 237 148 }
;; 148 succs { 237 149 }
;; 149 succs { 150 152 }
;; 150 succs { 151 152 }
;; 151 succs { 152 }
;; 152 succs { 153 166 }
;; 153 succs { 237 154 }
;; 154 succs { 155 166 }
;; 155 succs { 231 156 }
;; 156 succs { 231 157 }
;; 157 succs { 230 158 }
;; 158 succs { 159 161 }
;; 159 succs { 160 161 }
;; 160 succs { 162 }
;; 161 succs { 162 }
;; 162 succs { 163 165 }
;; 163 succs { 230 164 }
;; 164 succs { 230 165 }
;; 165 succs { 166 }
;; 166 succs { 237 167 }
;; 167 succs { 168 210 }
;; 168 succs { 209 }
;; 169 succs { 235 170 }
;; 170 succs { 235 171 }
;; 171 succs { 177 }
;; 172 succs { 173 176 }
;; 173 succs { 235 174 }
;; 174 succs { 235 175 }
;; 175 succs { 178 }
;; 176 succs { 177 }
;; 177 succs { 172 178 }
;; 178 succs { 179 202 }
;; 179 succs { 235 180 }
;; 180 succs { 181 202 }
;; 181 succs { 234 182 }
;; 182 succs { 234 183 }
;; 183 succs { 234 184 }
;; 184 succs { 232 185 }
;; 185 succs { 186 187 }
;; 186 succs { 232 189 }
;; 187 succs { 232 188 }
;; 188 succs { 232 189 }
;; 189 succs { 200 }
;; 190 succs { 191 199 }
;; 191 succs { 192 199 }
;; 192 succs { 232 193 }
;; 193 succs { 232 194 }
;; 194 succs { 232 195 }
;; 195 succs { 232 196 }
;; 196 succs { 232 197 }
;; 197 succs { 198 199 }
;; 198 succs { 199 }
;; 199 succs { 200 }
;; 200 succs { 190 201 }
;; 201 succs { 202 }
;; 202 succs { 203 208 }
;; 203 succs { 235 204 }
;; 204 succs { 235 205 }
;; 205 succs { 235 206 }
;; 206 succs { 235 207 }
;; 207 succs { 208 }
;; 208 succs { 209 }
;; 209 succs { 169 210 }
;; 210 succs { 1 }
;; 211 succs { 1 }
;; 212 succs { 213 }
;; 213 succs { 214 }
;; 214 succs { 237 }
;; 215 succs { 221 }
;; 216 succs { 217 }
;; 217 succs { 221 }
;; 218 succs { 221 }
;; 219 succs { 220 }
;; 220 succs { 221 }
;; 221 succs { 222 }
;; 222 succs { 223 }
;; 223 succs { 237 }
;; 224 succs { 225 }
;; 225 succs { 226 }
;; 226 succs { 237 }
;; 227 succs { 228 }
;; 228 succs { 229 }
;; 229 succs { 237 }
;; 230 succs { 231 }
;; 231 succs { 237 }
;; 232 succs { 233 }
;; 233 succs { 234 }
;; 234 succs { 235 }
;; 235 succs { 236 }
;; 236 succs { 237 }
;; 237 succs { 238 }
;; 238 succs { 239 }
;; 239 succs { }
int trace_function_path (union tree_node * function_tree, int fucntion_level, union tree_node * mallocStmt_tree, int * freecount)
{
  const char * D.250655;
  const char * D.250651;
  const char * D.250650;
  const char * D.250649;
  struct function_return_array * D.250648;
  struct function_return_array * D.250647;
  struct function_return_array * D.250646;
  struct function_return_array * D.250645;
  const char * D.250644;
  const char * D.250643;
  struct function_return_array * D.250642;
  const char * D.250639;
  struct function_return_array * D.250638;
  struct function_return_array * D.250637;
  struct function_return_array * D.250636;
  const char * D.250632;
  struct function_pthread_exit_array * D.250631;
  struct function_pthread_exit_array * D.250630;
  const char * D.250626;
  struct function_pthread_detched_array * D.250625;
  struct function_pthread_detched_array * D.250624;
  const char * D.250620;
  union tree_node * D.250617;
  int * D.250615;
  union tree_node * D.250614;
  bool D.250613;
  union tree_node * D.250610;
  void * D.250608;
  struct function_free_array * D.250607;
  struct function_free_array * D.250606;
  bool D.250602;
  struct function_return_array * D.250601;
  struct function_return_array * D.250600;
  const char * D.250599;
  struct function_path_array * D.250598;
  struct function_path_array * D.250597;
  int k;
  union tree_node * getFucntionDecl;
  struct vector ret_type_find_fun_array;
  struct function_return_array find_fun_array;
  int o;
  int find;
  int i;
  struct function_return_array callerFunArray;
  struct ptr_info_def * pi3;
  struct ptr_info_def * pi2;
  struct ptr_info_def * pi1;
  struct cgraph_node * node;
  long unsigned int x;
  int k;
  struct vector callerRetTypearray;
  struct function_pthread_exit_array callerFunArray;
  long unsigned int x;
  int k;
  struct vector callerRetTypearray;
  struct function_pthread_detched_array callerFunArray;
  long unsigned int x;
  int k;
  int k;
  struct hash_map * function_basicblock_collect;
  struct vector callerRetTypearray;
  struct function_free_array callerFunArray;
  struct pt_solution * pt;
  struct ptr_info_def * pi;
  int k;
  struct vector callerRetTypearray;
  struct function_return_array callerFunArray;
  struct function_return_array calleeFunArray;
  struct vector callerRetTypearray;
  struct function_return_array * callerFunArray;
  const char * name;
  struct vector function_path_array;
  struct function_path_array fun_array;
  bool retval.503;
  bool retval.501;
  bool retval.493;
  bool retval.490;
  bool retval.487;
  bool retval.486;
  bool retval.485;
  bool retval.483;
  bool iftmp.477;
  bool retval.476;
  bool retval.473;
  bool retval.472;
  bool retval.465;
  bool iftmp.450;
  bool retval.449;
  bool retval.448;
  bool iftmp.433;
  bool retval.432;
  struct hash_map * function_basicblock_collect.431;
  bool retval.430;
  union tree_node * const D.193250;
  const int D.193251;
  union tree_node * const D.193249;
  bool retval.415;
  bool retval.411;
  bool retval.410;
  union tree_node * const D.193246;
  const int D.193247;
  void * D.193244;
  bool retval.407;
  bool retval.404;
  bool retval.401;
  bool retval.400;
  bool iftmp.399;
  bool retval.398;
  bool retval.397;
  bool iftmp.392;
  bool retval.391;
  int D.250435;
  bool retval.385;

  <bb 2> :
  function_path_collect.386_1 = function_path_collect;
  D.250597 = hash_map<tree_node*, function_path_array>::get (function_path_collect.386_1, &function_tree);

  <bb 3> :
  _2 = D.250597;
  retval.385 = _2 == 0B;
  if (retval.385 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.250435 = 0;
  // predicted unlikely by early return (on trees) predictor.
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  calleeFunArray = {CLOBBER};
  goto <bb 211>; [INV]

  <bb 5> :
  _3 = rand ();
  _4 = (long unsigned int) _3;
  now_fucntion = _4;
  function_path_collect.387_5 = function_path_collect;
  D.250598 = hash_map<tree_node*, function_path_array>::get (function_path_collect.387_5, &function_tree);

  <bb 6> :
  _6 = D.250598;
  function_path_array::function_path_array (&fun_array, _6);

  <bb 7> :
  std::vector<function_path>::vector (&function_path_array, &fun_array.function_path_array);

  <bb 8> :
  fistconunt = 0;
  _7 = std::vector<function_path>::size (&function_path_array);
  function_tree.388_8 = function_tree;
  D.250599 = get_name (function_tree.388_8);

  <bb 9> :
  _9 = D.250599;
  stderr.389_10 = stderr;
  fprintf (stderr.389_10, "\x1b[40;44m =======trace_function_path %s  function_call count: %d level :%d========  \x1b[0m\n", _9, _7, fucntion_level);

  <bb 10> :
  retmod.390_11 = retmod;
  if (retmod.390_11 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 11> :
  function_return_collect.393_12 = function_return_collect;
  D.250600 = hash_map<tree_node*, function_return_array>::get (function_return_collect.393_12, &function_tree);

  <bb 12> :
  _13 = D.250600;
  if (_13 != 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 13> :
  fucntion_level.394_14 = (unsigned int) fucntion_level;
  RET_HEAP_OBJECT.395_15 = RET_HEAP_OBJECT;
  if (fucntion_level.394_14 == RET_HEAP_OBJECT.395_15)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  iftmp.392 = 1;
  goto <bb 16>; [INV]

  <bb 15> :
  iftmp.392 = 0;

  <bb 16> :
  retval.391 = iftmp.392;
  if (retval.391 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 17> :
  function_return_collect.396_16 = function_return_collect;
  D.250601 = hash_map<tree_node*, function_return_array>::get (function_return_collect.396_16, &function_tree);

  <bb 18> :
  _17 = D.250601;
  function_return_array::function_return_array (&callerFunArray, _17);

  <bb 19> :
  std::vector<return_type>::vector (&callerRetTypearray, &callerFunArray.return_type_array);

  <bb 20> :
  k = 0;
  goto <bb 37>; [INV]

  <bb 21> :
  _18 = (long unsigned int) k;
  _19 = std::vector<return_type>::operator[] (&callerRetTypearray, _18);
  _20 = _19->return_tree;
  retval.397 = _20 != 0B;
  if (retval.397 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 22> :
  _21 = mallocStmt_tree->base.code;
  if (_21 != 26)
    goto <bb 23>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 23> :
  _22 = mallocStmt_tree->base.code;
  if (_22 != 33)
    goto <bb 24>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 24> :
  _23 = (long unsigned int) k;
  _24 = std::vector<return_type>::operator[] (&callerRetTypearray, _23);
  _25 = _24->return_tree;
  _26 = _25->base.code;
  if (_26 != 33)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  iftmp.399 = 1;
  goto <bb 27>; [INV]

  <bb 26> :
  iftmp.399 = 0;

  <bb 27> :
  retval.398 = iftmp.399;
  if (retval.398 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 28> :
  _27 = (long unsigned int) k;
  _28 = std::vector<return_type>::operator[] (&callerRetTypearray, _27);
  _29 = _28->return_tree;
  _30 = _29->base.code;
  retval.400 = _30 != 26;
  if (retval.400 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 29> :
  pi = mallocStmt_tree->ssa_name.info.ptr_info;
  pt = &pi->pt;
  if (pi != 0B)
    goto <bb 30>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 30> :
  _31 = (long unsigned int) k;
  _32 = std::vector<return_type>::operator[] (&callerRetTypearray, _31);
  _33 = _32->return_tree;
  D.250602 = ptr_derefs_may_alias_p (_33, mallocStmt_tree);

  <bb 31> :
  retval.401 = D.250602;
  if (retval.401 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 32> :
  stderr.402_34 = stderr;
  __builtin_fwrite ("\x1b[40;31m  find return stmt  \x1b[0m\n", 1, 33, stderr.402_34);

  <bb 33> :
  stderr.403_35 = stderr;
  __builtin_fwrite ("\x1b[40;31m  this fucntion return heap-object  \x1b[0m\n", 1, 49, stderr.403_35);

  <bb 34> :
  _36 = (long unsigned int) k;
  _37 = std::vector<return_type>::operator[] (&callerRetTypearray, _36);
  _38 = _37->stmt;
  debug_gimple_stmt (_38);

  <bb 35> :
  _39 = (long unsigned int) k;
  _40 = std::vector<return_type>::operator[] (&callerRetTypearray, _39);
  _41 = _40->stmt;
  _42 = gimple_location_safe (_41);
  warning_at (_42, 0, "use location");

  <bb 36> :
  k = k + 1;

  <bb 37> :
  _43 = (long unsigned int) k;
  _44 = std::vector<return_type>::size (&callerRetTypearray);
  retval.404 = _43 < _44;
  if (retval.404 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 38> :
  std::vector<return_type>::~vector (&callerRetTypearray);
  function_return_array::~function_return_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 39> :
  if (mallocStmt_tree != 0B)
    goto <bb 40>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 40> :
  fucntion_level.405_45 = (unsigned int) fucntion_level;
  DISABLE_TREACE.406_46 = DISABLE_TREACE;
  if (fucntion_level.405_45 != DISABLE_TREACE.406_46)
    goto <bb 41>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 41> :
  function_free_collect.408_47 = function_free_collect;
  D.250606 = hash_map<tree_node*, function_free_array>::get (function_free_collect.408_47, &function_tree);

  <bb 42> :
  _48 = D.250606;
  retval.407 = _48 != 0B;
  if (retval.407 != 0)
    goto <bb 43>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 43> :
  function_free_collect.409_49 = function_free_collect;
  D.250607 = hash_map<tree_node*, function_free_array>::get (function_free_collect.409_49, &function_tree);

  <bb 44> :
  _50 = D.250607;
  function_free_array::function_free_array (&callerFunArray, _50);

  <bb 45> :
  std::vector<free_type>::vector (&callerRetTypearray, &callerFunArray.free_type_array);

  <bb 46> :
  D.250608 = operator new (48);

  <bb 47> :
  D.193244 = D.250608;
  hash_map<tree_node*, int>::hash_map (D.193244, 13, 0, 1, 0);

  <bb 48> :
  function_basicblock_collect = D.193244;
  k = 0;
  goto <bb 52>; [INV]

  <bb 49> :
  D.193247 = 0;
  _51 = (long unsigned int) k;
  _52 = std::vector<free_type>::operator[] (&callerRetTypearray, _51);
  _53 = _52->stmt;
  D.250610 = gimple_block (_53);

  <bb 50> :
  _54 = D.250610;
  D.193246 = _54;
  hash_map<tree_node*, int>::put (function_basicblock_collect, &D.193246, &D.193247);

  <bb 51> :
  D.193246 = {CLOBBER};
  D.193247 = {CLOBBER};
  k = k + 1;

  <bb 52> :
  _55 = (long unsigned int) k;
  _56 = std::vector<free_type>::size (&callerRetTypearray);
  retval.410 = _55 < _56;
  if (retval.410 != 0)
    goto <bb 49>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 53> :
  k = 0;
  goto <bb 85>; [INV]

  <bb 54> :
  _57 = (long unsigned int) k;
  _58 = std::vector<free_type>::operator[] (&callerRetTypearray, _57);
  _59 = _58->stmt;
  debug_gimple_stmt (_59);

  <bb 55> :
  _60 = (long unsigned int) k;
  _61 = std::vector<free_type>::operator[] (&callerRetTypearray, _60);
  _62 = _61->free_tree;
  D.250613 = ptr_derefs_may_alias_p (_62, mallocStmt_tree);

  <bb 56> :
  retval.411 = D.250613;
  if (retval.411 != 0)
    goto <bb 57>; [INV]
  else
    goto <bb 84>; [INV]

  <bb 57> :
  stderr.412_63 = stderr;
  __builtin_fwrite ("\x1b[40;31m  find free stmt free same pointer \x1b[0m\n", 1, 48, stderr.412_63);

  <bb 58> :
  _64 = (long unsigned int) k;
  _65 = std::vector<free_type>::operator[] (&callerRetTypearray, _64);
  _66 = _65->stmt;
  debug_gimple_stmt (_66);

  <bb 59> :
  _67 = (long unsigned int) k;
  _68 = std::vector<free_type>::operator[] (&callerRetTypearray, _67);
  _69 = _68->stmt;
  _70 = gimple_location_safe (_69);
  warning_at (_70, 0, "use location");

  <bb 60> :
  _71 = *freecount;
  _72 = _71 + 1;
  *freecount = _72;
  freemod.413_73 = freemod;
  if (freemod.413_73 != 0)
    goto <bb 61>; [INV]
  else
    goto <bb 84>; [INV]

  <bb 61> :
  debugmod.414_74 = debugmod;
  if (debugmod.414_74 != 0)
    goto <bb 62>; [INV]
  else
    goto <bb 84>; [INV]

  <bb 62> :
  _75 = (long unsigned int) k;
  _76 = std::vector<free_type>::operator[] (&callerRetTypearray, _75);
  _77 = _76->stmt;
  D.250614 = gimple_block (_77);

  <bb 63> :
  _78 = D.250614;
  D.193249 = _78;
  D.250615 = hash_map<tree_node*, int>::get (function_basicblock_collect, &D.193249);

  <bb 64> :
  _79 = D.250615;
  _80 = *_79;
  retval.415 = _80 == 0;
  D.193249 = {CLOBBER};
  if (retval.415 != 0)
    goto <bb 65>; [INV]
  else
    goto <bb 68>; [INV]

  <bb 65> :
  D.193251 = 1;
  _81 = (long unsigned int) k;
  _82 = std::vector<free_type>::operator[] (&callerRetTypearray, _81);
  _83 = _82->stmt;
  D.250617 = gimple_block (_83);

  <bb 66> :
  _84 = D.250617;
  D.193250 = _84;
  hash_map<tree_node*, int>::put (function_basicblock_collect, &D.193250, &D.193251);

  <bb 67> :
  D.193250 = {CLOBBER};
  D.193251 = {CLOBBER};
  stderr.416_85 = stderr;
  __builtin_fwrite ("dot graph start relate form ", 1, 28, stderr.416_85);
  goto <bb 69>; [INV]

  <bb 68> :
  stderr.417_86 = stderr;
  __builtin_fwrite ("dot graph start relate form ", 1, 28, stderr.417_86);

  <bb 69> :
  now_fucntion.418_87 = now_fucntion;
  stderr.419_88 = stderr;
  fprintf (stderr.419_88, "ID : %lu\n", now_fucntion.418_87);

  <bb 70> :
  _89 = (long unsigned int) k;
  _90 = std::vector<free_type>::operator[] (&callerRetTypearray, _89);
  _91 = _90->stmt;
  _92 = gimple_bb (_91);
  _93 = _92->index;
  function_tree.420_94 = function_tree;
  D.250620 = get_name (function_tree.420_94);

  <bb 71> :
  _95 = D.250620;
  stderr.421_96 = stderr;
  fprintf (stderr.421_96, "from %s basic block %d", _95, _93);

  <bb 72> :
  stderr.422_97 = stderr;
  __builtin_fwrite ("dot graph end relate end\n\n", 1, 26, stderr.422_97);

  <bb 73> :
  _98 = (long unsigned int) k;
  _99 = std::vector<free_type>::operator[] (&callerRetTypearray, _98);
  _100 = _99->stmt;
  now_laststmt = _100;
  _101 = rand ();
  x = (long unsigned int) _101;
  now_laststmtid = x;
  stderr.423_102 = stderr;
  fprintf (stderr.423_102, "dot graph relate stmt start ID : %lu stmt(free) :", x);

  <bb 74> :
  _103 = (long unsigned int) k;
  _104 = std::vector<free_type>::operator[] (&callerRetTypearray, _103);
  _105 = _104->stmt;
  debug (_105);

  <bb 75> :
  _106 = (long unsigned int) k;
  _107 = std::vector<free_type>::operator[] (&callerRetTypearray, _106);
  _108 = _107->stmt;
  _109 = gimple_location_safe (_108);
  warning_at (_109, 0, "use location");

  <bb 76> :
  stderr.424_110 = stderr;
  __builtin_fwrite ("dot graph relate end\n\n", 1, 22, stderr.424_110);

  <bb 77> :
  stderr.425_111 = stderr;
  __builtin_fwrite ("dot graph target color desc", 1, 27, stderr.425_111);

  <bb 78> :
  stderr.426_112 = stderr;
  __builtin_fwrite ("green", 1, 5, stderr.426_112);

  <bb 79> :
  stderr.427_113 = stderr;
  __builtin_fwrite ("dot graph target color desend\n\n", 1, 31, stderr.427_113);

  <bb 80> :
  stderr.428_114 = stderr;
  fprintf (stderr.428_114, "dot graph relate stmt start ID : %lu stmt(free) :", x);

  <bb 81> :
  _115 = (long unsigned int) k;
  _116 = std::vector<free_type>::operator[] (&callerRetTypearray, _115);
  _117 = _116->stmt;
  debug (_117);

  <bb 82> :
  _118 = (long unsigned int) k;
  _119 = std::vector<free_type>::operator[] (&callerRetTypearray, _118);
  _120 = _119->stmt;
  _121 = gimple_location_safe (_120);
  warning_at (_121, 0, "use location");

  <bb 83> :
  stderr.429_122 = stderr;
  __builtin_fwrite ("dot graph relate end\n\n", 1, 22, stderr.429_122);

  <bb 84> :
  k = k + 1;

  <bb 85> :
  _123 = (long unsigned int) k;
  _124 = std::vector<free_type>::size (&callerRetTypearray);
  retval.430 = _123 < _124;
  if (retval.430 != 0)
    goto <bb 54>; [INV]
  else
    goto <bb 86>; [INV]

  <bb 86> :
  function_basicblock_collect.431 = function_basicblock_collect;
  if (function_basicblock_collect.431 != 0B)
    goto <bb 87>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 87> :
  hash_map<tree_node*, int>::~hash_map (function_basicblock_collect.431);
  operator delete (function_basicblock_collect.431, 48);

  <bb 88> :
  std::vector<free_type>::~vector (&callerRetTypearray);
  function_free_array::~function_free_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 89> :
  function_pthread_detched_collect.434_125 = function_pthread_detched_collect;
  D.250624 = hash_map<tree_node*, function_pthread_detched_array>::get (function_pthread_detched_collect.434_125, &function_tree);

  <bb 90> :
  _126 = D.250624;
  if (_126 != 0B)
    goto <bb 91>; [INV]
  else
    goto <bb 94>; [INV]

  <bb 91> :
  if (fucntion_level == -1)
    goto <bb 92>; [INV]
  else
    goto <bb 94>; [INV]

  <bb 92> :
  fucntion_level.435_127 = (unsigned int) fucntion_level;
  DISABLE_TREACE.436_128 = DISABLE_TREACE;
  if (fucntion_level.435_127 != DISABLE_TREACE.436_128)
    goto <bb 93>; [INV]
  else
    goto <bb 94>; [INV]

  <bb 93> :
  iftmp.433 = 1;
  goto <bb 95>; [INV]

  <bb 94> :
  iftmp.433 = 0;

  <bb 95> :
  retval.432 = iftmp.433;
  if (retval.432 != 0)
    goto <bb 96>; [INV]
  else
    goto <bb 116>; [INV]

  <bb 96> :
  function_pthread_detched_collect.437_129 = function_pthread_detched_collect;
  D.250625 = hash_map<tree_node*, function_pthread_detched_array>::get (function_pthread_detched_collect.437_129, &function_tree);

  <bb 97> :
  _130 = D.250625;
  function_pthread_detched_array::function_pthread_detched_array (&callerFunArray, _130);

  <bb 98> :
  std::vector<pthread_detched_type>::vector (&callerRetTypearray, &callerFunArray.pthread_detched_array);

  <bb 99> :
  k = 0;
  goto <bb 114>; [INV]

  <bb 100> :
  stderr.438_131 = stderr;
  __builtin_fwrite ("\x1b[40;31m  find pthread_detched stmt  \x1b[0m\n", 1, 42, stderr.438_131);

  <bb 101> :
  _132 = (long unsigned int) k;
  _133 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _132);
  _134 = _133->stmt;
  debug_gimple_stmt (_134);

  <bb 102> :
  _135 = (long unsigned int) k;
  _136 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _135);
  _137 = _136->stmt;
  _138 = gimple_location_safe (_137);
  warning_at (_138, 0, "use location");

  <bb 103> :
  _139 = *freecount;
  _140 = _139 + 1;
  *freecount = _140;
  pthread_detachedmod.439_141 = pthread_detachedmod;
  if (pthread_detachedmod.439_141 != 0)
    goto <bb 104>; [INV]
  else
    goto <bb 113>; [INV]

  <bb 104> :
  stderr.440_142 = stderr;
  __builtin_fwrite ("dot graph start relate form ", 1, 28, stderr.440_142);

  <bb 105> :
  now_fucntion.441_143 = now_fucntion;
  stderr.442_144 = stderr;
  fprintf (stderr.442_144, "ID : %lu\n", now_fucntion.441_143);

  <bb 106> :
  _145 = (long unsigned int) k;
  _146 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _145);
  _147 = _146->stmt;
  _148 = gimple_bb (_147);
  _149 = _148->index;
  function_tree.443_150 = function_tree;
  D.250626 = get_name (function_tree.443_150);

  <bb 107> :
  _151 = D.250626;
  stderr.444_152 = stderr;
  fprintf (stderr.444_152, "from %s basic block %d", _151, _149);

  <bb 108> :
  stderr.445_153 = stderr;
  __builtin_fwrite ("dot graph end relate end\n\n", 1, 26, stderr.445_153);

  <bb 109> :
  _154 = (long unsigned int) k;
  _155 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _154);
  _156 = _155->stmt;
  now_laststmt = _156;
  _157 = rand ();
  x = (long unsigned int) _157;
  now_laststmtid = x;
  stderr.446_158 = stderr;
  fprintf (stderr.446_158, "dot graph relate stmt start ID : %lu stmt(pthread_detched)) :", x);

  <bb 110> :
  _159 = (long unsigned int) k;
  _160 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _159);
  _161 = _160->stmt;
  debug (_161);

  <bb 111> :
  _162 = (long unsigned int) k;
  _163 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _162);
  _164 = _163->stmt;
  _165 = gimple_location_safe (_164);
  warning_at (_165, 0, "use location");

  <bb 112> :
  stderr.447_166 = stderr;
  __builtin_fwrite ("dot graph relate end\n\n", 1, 22, stderr.447_166);

  <bb 113> :
  k = k + 1;

  <bb 114> :
  _167 = (long unsigned int) k;
  _168 = std::vector<pthread_detched_type>::size (&callerRetTypearray);
  retval.448 = _167 < _168;
  if (retval.448 != 0)
    goto <bb 100>; [INV]
  else
    goto <bb 115>; [INV]

  <bb 115> :
  std::vector<pthread_detched_type>::~vector (&callerRetTypearray);
  function_pthread_detched_array::~function_pthread_detched_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 116> :
  function_pthread_exit_collect.451_169 = function_pthread_exit_collect;
  D.250630 = hash_map<tree_node*, function_pthread_exit_array>::get (function_pthread_exit_collect.451_169, &function_tree);

  <bb 117> :
  _170 = D.250630;
  if (_170 != 0B)
    goto <bb 118>; [INV]
  else
    goto <bb 121>; [INV]

  <bb 118> :
  if (fucntion_level == -1)
    goto <bb 119>; [INV]
  else
    goto <bb 121>; [INV]

  <bb 119> :
  fucntion_level.452_171 = (unsigned int) fucntion_level;
  DISABLE_TREACE.453_172 = DISABLE_TREACE;
  if (fucntion_level.452_171 != DISABLE_TREACE.453_172)
    goto <bb 120>; [INV]
  else
    goto <bb 121>; [INV]

  <bb 120> :
  iftmp.450 = 1;
  goto <bb 122>; [INV]

  <bb 121> :
  iftmp.450 = 0;

  <bb 122> :
  retval.449 = iftmp.450;
  if (retval.449 != 0)
    goto <bb 123>; [INV]
  else
    goto <bb 143>; [INV]

  <bb 123> :
  function_pthread_exit_collect.454_173 = function_pthread_exit_collect;
  D.250631 = hash_map<tree_node*, function_pthread_exit_array>::get (function_pthread_exit_collect.454_173, &function_tree);

  <bb 124> :
  _174 = D.250631;
  function_pthread_exit_array::function_pthread_exit_array (&callerFunArray, _174);

  <bb 125> :
  std::vector<pthread_exit_type>::vector (&callerRetTypearray, &callerFunArray.pthread_exit_array);

  <bb 126> :
  k = 0;
  goto <bb 141>; [INV]

  <bb 127> :
  stderr.455_175 = stderr;
  __builtin_fwrite ("\x1b[40;31m  find pthread_exit stmt  \x1b[0m\n", 1, 39, stderr.455_175);

  <bb 128> :
  _176 = (long unsigned int) k;
  _177 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _176);
  _178 = _177->stmt;
  debug_gimple_stmt (_178);

  <bb 129> :
  _179 = (long unsigned int) k;
  _180 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _179);
  _181 = _180->stmt;
  _182 = gimple_location_safe (_181);
  warning_at (_182, 0, "use location");

  <bb 130> :
  pthread_exitmod.456_183 = pthread_exitmod;
  if (pthread_exitmod.456_183 != 0)
    goto <bb 131>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 131> :
  stderr.457_184 = stderr;
  __builtin_fwrite ("dot graph start relate form ", 1, 28, stderr.457_184);

  <bb 132> :
  now_fucntion.458_185 = now_fucntion;
  stderr.459_186 = stderr;
  fprintf (stderr.459_186, "ID : %lu\n", now_fucntion.458_185);

  <bb 133> :
  _187 = (long unsigned int) k;
  _188 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _187);
  _189 = _188->stmt;
  _190 = gimple_bb (_189);
  _191 = _190->index;
  function_tree.460_192 = function_tree;
  D.250632 = get_name (function_tree.460_192);

  <bb 134> :
  _193 = D.250632;
  stderr.461_194 = stderr;
  fprintf (stderr.461_194, "from %s basic block %d", _193, _191);

  <bb 135> :
  stderr.462_195 = stderr;
  __builtin_fwrite ("dot graph end relate end\n\n", 1, 26, stderr.462_195);

  <bb 136> :
  _196 = (long unsigned int) k;
  _197 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _196);
  _198 = _197->stmt;
  now_laststmt = _198;
  _199 = rand ();
  x = (long unsigned int) _199;
  now_laststmtid = x;
  stderr.463_200 = stderr;
  fprintf (stderr.463_200, "dot graph relate stmt start ID : %lu stmt(pthread_exit) :", x);

  <bb 137> :
  _201 = (long unsigned int) k;
  _202 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _201);
  _203 = _202->stmt;
  debug (_203);

  <bb 138> :
  _204 = (long unsigned int) k;
  _205 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _204);
  _206 = _205->stmt;
  _207 = gimple_location_safe (_206);
  warning_at (_207, 0, "use location");

  <bb 139> :
  stderr.464_208 = stderr;
  __builtin_fwrite ("dot graph relate end\n\n", 1, 22, stderr.464_208);

  <bb 140> :
  k = k + 1;

  <bb 141> :
  _209 = (long unsigned int) k;
  _210 = std::vector<pthread_exit_type>::size (&callerRetTypearray);
  retval.465 = _209 < _210;
  if (retval.465 != 0)
    goto <bb 127>; [INV]
  else
    goto <bb 142>; [INV]

  <bb 142> :
  std::vector<pthread_exit_type>::~vector (&callerRetTypearray);
  function_pthread_exit_array::~function_pthread_exit_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 143> :
  tracerelatestmt.466_211 = tracerelatestmt;
  _212 = (int) tracerelatestmt.466_211;
  if (_212 == 1)
    goto <bb 144>; [INV]
  else
    goto <bb 149>; [INV]

  <bb 144> :
  if (fucntion_level != -1)
    goto <bb 145>; [INV]
  else
    goto <bb 149>; [INV]

  <bb 145> :
  fucntion_level.467_213 = (unsigned int) fucntion_level;
  DISABLE_TREACE.468_214 = DISABLE_TREACE;
  if (fucntion_level.467_213 != DISABLE_TREACE.468_214)
    goto <bb 146>; [INV]
  else
    goto <bb 149>; [INV]

  <bb 146> :
  if (mallocStmt_tree != 0B)
    goto <bb 147>; [INV]
  else
    goto <bb 149>; [INV]

  <bb 147> :
  pi1 = mallocStmt_tree->ssa_name.info.ptr_info;
  debug_tree (mallocStmt_tree);

  <bb 148> :
  function_tree.469_215 = function_tree;
  trace_fucntion_relate_stmt (node, function_tree.469_215, mallocStmt_tree);

  <bb 149> :
  if (fucntion_level != -1)
    goto <bb 150>; [INV]
  else
    goto <bb 152>; [INV]

  <bb 150> :
  fucntion_level.470_216 = (unsigned int) fucntion_level;
  DISABLE_TREACE.471_217 = DISABLE_TREACE;
  if (fucntion_level.470_216 != DISABLE_TREACE.471_217)
    goto <bb 151>; [INV]
  else
    goto <bb 152>; [INV]

  <bb 151> :
  fucntion_level = fucntion_level + 1;

  <bb 152> :
  _218 = std::vector<function_path>::size (&function_path_array);
  retval.472 = _218 == 0;
  if (retval.472 != 0)
    goto <bb 153>; [INV]
  else
    goto <bb 166>; [INV]

  <bb 153> :
  function_return_collect.474_219 = function_return_collect;
  D.250636 = hash_map<tree_node*, function_return_array>::get (function_return_collect.474_219, &function_tree);

  <bb 154> :
  _220 = D.250636;
  retval.473 = _220 != 0B;
  if (retval.473 != 0)
    goto <bb 155>; [INV]
  else
    goto <bb 166>; [INV]

  <bb 155> :
  function_return_collect.475_221 = function_return_collect;
  D.250637 = hash_map<tree_node*, function_return_array>::get (function_return_collect.475_221, &function_tree);

  <bb 156> :
  _222 = D.250637;
  function_return_array::function_return_array (&callerFunArray, _222);

  <bb 157> :
  function_return_collect.478_223 = function_return_collect;
  D.250638 = hash_map<tree_node*, function_return_array>::get (function_return_collect.478_223, &function_tree);

  <bb 158> :
  _224 = D.250638;
  if (_224 != 0B)
    goto <bb 159>; [INV]
  else
    goto <bb 161>; [INV]

  <bb 159> :
  _225 = callerFunArray.return_type_num;
  if (_225 == 2)
    goto <bb 160>; [INV]
  else
    goto <bb 161>; [INV]

  <bb 160> :
  iftmp.477 = 1;
  goto <bb 162>; [INV]

  <bb 161> :
  iftmp.477 = 0;

  <bb 162> :
  retval.476 = iftmp.477;
  if (retval.476 != 0)
    goto <bb 163>; [INV]
  else
    goto <bb 165>; [INV]

  <bb 163> :
  function_tree.479_226 = function_tree;
  D.250639 = get_name (function_tree.479_226);

  <bb 164> :
  _227 = D.250639;
  stderr.480_228 = stderr;
  fprintf (stderr.480_228, "%s this fucntion return value is heap-object \n", _227);

  <bb 165> :
  function_return_array::~function_return_array (&callerFunArray);
  callerFunArray = {CLOBBER};

  <bb 166> :
  function_return_collect.481_229 = function_return_collect;
  D.250642 = hash_map<tree_node*, function_return_array>::get (function_return_collect.481_229, &function_tree);

  <bb 167> :
  callerFunArray = D.250642;
  std::vector<return_type>::vector (&callerRetTypearray);
  function_return_array::function_return_array (&calleeFunArray);
  if (callerFunArray != 0B)
    goto <bb 168>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 168> :
  i = 0;
  goto <bb 209>; [INV]

  <bb 169> :
  find = 0;
  _230 = (long unsigned int) i;
  _231 = std::vector<function_path>::operator[] (&function_path_array, _230);
  _232 = _231->next;
  D.250643 = get_name (_232);

  <bb 170> :
  _233 = D.250643;
  stderr.482_234 = stderr;
  fprintf (stderr.482_234, "\x1b[40;42m =======pre add _ fucntion:%s========= \x1b[0m\n", _233);

  <bb 171> :
  o = 0;
  goto <bb 177>; [INV]

  <bb 172> :
  _235 = (long unsigned int) o;
  _236 = std::vector<tree_node*>::operator[] (&traceStack, _235);
  _237 = *_236;
  _238 = (long unsigned int) i;
  _239 = std::vector<function_path>::operator[] (&function_path_array, _238);
  _240 = _239->next;
  retval.483 = _237 == _240;
  if (retval.483 != 0)
    goto <bb 173>; [INV]
  else
    goto <bb 176>; [INV]

  <bb 173> :
  find = 1;
  _241 = (long unsigned int) o;
  _242 = std::vector<tree_node*>::operator[] (&traceStack, _241);
  _243 = *_242;
  D.250644 = get_name (_243);

  <bb 174> :
  _244 = D.250644;
  stderr.484_245 = stderr;
  fprintf (stderr.484_245, "\x1b[40;41m =======recursive_fun2:%s========= \x1b[0m\n", _244);

  <bb 175> :
  goto <bb 178>; [INV]

  <bb 176> :
  o = o + 1;

  <bb 177> :
  _246 = (long unsigned int) o;
  _247 = std::vector<tree_node*>::size (&traceStack);
  retval.485 = _246 < _247;
  if (retval.485 != 0)
    goto <bb 172>; [INV]
  else
    goto <bb 178>; [INV]

  <bb 178> :
  _248 = (long unsigned int) i;
  _249 = std::vector<function_path>::operator[] (&function_path_array, _248);
  _250 = _249->next;
  retval.486 = _250 != 0B;
  if (retval.486 != 0)
    goto <bb 179>; [INV]
  else
    goto <bb 202>; [INV]

  <bb 179> :
  function_return_collect.488_251 = function_return_collect;
  _252 = (long unsigned int) i;
  _253 = std::vector<function_path>::operator[] (&function_path_array, _252);
  _254 = &_253->next;
  D.250645 = hash_map<tree_node*, function_return_array>::get (function_return_collect.488_251, _254);

  <bb 180> :
  _255 = D.250645;
  retval.487 = _255 != 0B;
  if (retval.487 != 0)
    goto <bb 181>; [INV]
  else
    goto <bb 202>; [INV]

  <bb 181> :
  _256 = &callerFunArray->return_type_array;
  std::vector<return_type>::operator= (&callerRetTypearray, _256);

  <bb 182> :
  function_return_collect.489_257 = function_return_collect;
  _258 = (long unsigned int) i;
  _259 = std::vector<function_path>::operator[] (&function_path_array, _258);
  _260 = &_259->next;
  D.250646 = hash_map<tree_node*, function_return_array>::get (function_return_collect.489_257, _260);

  <bb 183> :
  _261 = D.250646;
  function_return_array::operator= (&calleeFunArray, _261);

  <bb 184> :
  function_return_array::function_return_array (&find_fun_array);
  std::vector<return_type>::vector (&ret_type_find_fun_array);
  _262 = (long unsigned int) i;
  _263 = std::vector<function_path>::operator[] (&function_path_array, _262);
  _264 = _263->next;
  getFucntionDecl = _264;
  function_return_collect.491_265 = function_return_collect;
  D.250647 = hash_map<tree_node*, function_return_array>::get (function_return_collect.491_265, &getFucntionDecl);

  <bb 185> :
  _266 = D.250647;
  retval.490 = _266 == 0B;
  if (retval.490 != 0)
    goto <bb 186>; [INV]
  else
    goto <bb 187>; [INV]

  <bb 186> :
  std::vector<return_type>::operator= (&find_fun_array.return_type_array, &ret_type_find_fun_array);
  goto <bb 189>; [INV]

  <bb 187> :
  function_return_collect.492_267 = function_return_collect;
  D.250648 = hash_map<tree_node*, function_return_array>::get (function_return_collect.492_267, &getFucntionDecl);

  <bb 188> :
  _268 = D.250648;
  function_return_array::operator= (&find_fun_array, _268);

  <bb 189> :
  k = 0;
  goto <bb 200>; [INV]

  <bb 190> :
  _269 = calleeFunArray.return_type_num;
  if (_269 == 2)
    goto <bb 191>; [INV]
  else
    goto <bb 199>; [INV]

  <bb 191> :
  _270 = (long unsigned int) k;
  _271 = std::vector<return_type>::operator[] (&callerRetTypearray, _270);
  _272 = _271->return_tree;
  _273 = (long unsigned int) i;
  _274 = std::vector<function_path>::operator[] (&function_path_array, _273);
  _275 = _274->next;
  retval.493 = _272 == _275;
  if (retval.493 != 0)
    goto <bb 192>; [INV]
  else
    goto <bb 199>; [INV]

  <bb 192> :
  _276 = (long unsigned int) i;
  _277 = std::vector<function_path>::operator[] (&function_path_array, _276);
  _278 = _277->next;
  D.250649 = get_name (_278);

  <bb 193> :
  _279 = D.250649;
  stderr.494_280 = stderr;
  fprintf (stderr.494_280, "%s this fucntion return value is heap-object \n", _279);

  <bb 194> :
  _281 = (long unsigned int) k;
  _282 = std::vector<return_type>::operator[] (&callerRetTypearray, _281);
  _283 = _282->return_tree;
  D.250650 = get_name (_283);

  <bb 195> :
  _284 = D.250650;
  function_tree.495_285 = function_tree;
  D.250651 = get_name (function_tree.495_285);

  <bb 196> :
  _286 = D.250651;
  stderr.496_287 = stderr;
  fprintf (stderr.496_287, "%s this fucntion return value is heap-object %s\n", _286, _284);

  <bb 197> :
  fucntion_level.497_288 = (unsigned int) fucntion_level;
  RET_HEAP_OBJECT.498_289 = RET_HEAP_OBJECT;
  if (fucntion_level.497_288 == RET_HEAP_OBJECT.498_289)
    goto <bb 198>; [INV]
  else
    goto <bb 199>; [INV]

  <bb 198> :
  EFFECTIVE.499_290 = EFFECTIVE;
  EFFECTIVE.500_291 = (int) EFFECTIVE.499_290;
  *freecount = EFFECTIVE.500_291;

  <bb 199> :
  k = k + 1;

  <bb 200> :
  _292 = (long unsigned int) k;
  _293 = std::vector<return_type>::size (&callerRetTypearray);
  retval.501 = _292 < _293;
  if (retval.501 != 0)
    goto <bb 190>; [INV]
  else
    goto <bb 201>; [INV]

  <bb 201> :
  std::vector<return_type>::~vector (&ret_type_find_fun_array);
  function_return_array::~function_return_array (&find_fun_array);
  find_fun_array = {CLOBBER};
  ret_type_find_fun_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};

  <bb 202> :
  if (find == 0)
    goto <bb 203>; [INV]
  else
    goto <bb 208>; [INV]

  <bb 203> :
  _294 = (long unsigned int) i;
  _295 = std::vector<function_path>::operator[] (&function_path_array, _294);
  _296 = _295->next;
  D.250655 = get_name (_296);

  <bb 204> :
  _297 = D.250655;
  stderr.502_298 = stderr;
  fprintf (stderr.502_298, "\x1b[40;46m =======add node_fun stack:%s========= \x1b[0m\n", _297);

  <bb 205> :
  _299 = (long unsigned int) i;
  _300 = std::vector<function_path>::operator[] (&function_path_array, _299);
  _301 = &_300->next;
  std::vector<tree_node*>::push_back (&traceStack, _301);

  <bb 206> :
  _302 = (long unsigned int) i;
  _303 = std::vector<function_path>::operator[] (&function_path_array, _302);
  _304 = _303->next;
  trace_function_path (_304, fucntion_level, mallocStmt_tree, freecount);

  <bb 207> :
  std::vector<tree_node*>::pop_back (&traceStack);

  <bb 208> :
  i = i + 1;

  <bb 209> :
  _305 = (long unsigned int) i;
  _306 = std::vector<function_path>::size (&function_path_array);
  retval.503 = _305 < _306;
  if (retval.503 != 0)
    goto <bb 169>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 210> :
  function_return_array::~function_return_array (&calleeFunArray);
  std::vector<return_type>::~vector (&callerRetTypearray);
  std::vector<function_path>::~vector (&function_path_array);
  function_path_array::~function_path_array (&fun_array);
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  calleeFunArray = {CLOBBER};
  return;

  <bb 211> :
<L156>:
  return D.250435;

  <bb 212> :
<L157>:
  std::vector<return_type>::~vector (&callerRetTypearray);
  resx 6

  <bb 213> :
<L158>:
  function_return_array::~function_return_array (&callerFunArray);
  resx 5

  <bb 214> :
<L159>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 4

  <bb 215> :
<L160>:
  operator delete (D.193244, 48);
  resx 13

  <bb 216> :
<L161>:
  D.193246 = {CLOBBER};
  resx 16

  <bb 217> :
<L162>:
  D.193247 = {CLOBBER};
  resx 15

  <bb 218> :
<L163>:
  D.193249 = {CLOBBER};
  resx 19

  <bb 219> :
<L164>:
  D.193250 = {CLOBBER};
  resx 22

  <bb 220> :
<L165>:
  D.193251 = {CLOBBER};
  resx 21

  <bb 221> :
<L166>:
  std::vector<free_type>::~vector (&callerRetTypearray);
  resx 12

  <bb 222> :
<L167>:
  function_free_array::~function_free_array (&callerFunArray);
  resx 11

  <bb 223> :
<L168>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 10

  <bb 224> :
<L169>:
  std::vector<pthread_detched_type>::~vector (&callerRetTypearray);
  resx 31

  <bb 225> :
<L170>:
  function_pthread_detched_array::~function_pthread_detched_array (&callerFunArray);
  resx 30

  <bb 226> :
<L171>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 29

  <bb 227> :
<L172>:
  std::vector<pthread_exit_type>::~vector (&callerRetTypearray);
  resx 37

  <bb 228> :
<L173>:
  function_pthread_exit_array::~function_pthread_exit_array (&callerFunArray);
  resx 36

  <bb 229> :
<L174>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 35

  <bb 230> :
<L175>:
  function_return_array::~function_return_array (&callerFunArray);
  resx 42

  <bb 231> :
<L176>:
  callerFunArray = {CLOBBER};
  resx 41

  <bb 232> :
<L177>:
  std::vector<return_type>::~vector (&ret_type_find_fun_array);
  resx 49

  <bb 233> :
<L178>:
  function_return_array::~function_return_array (&find_fun_array);
  resx 48

  <bb 234> :
<L179>:
  find_fun_array = {CLOBBER};
  ret_type_find_fun_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};
  resx 47

  <bb 235> :
<L180>:
  function_return_array::~function_return_array (&calleeFunArray);
  resx 46

  <bb 236> :
<L181>:
  std::vector<return_type>::~vector (&callerRetTypearray);
  resx 45

  <bb 237> :
<L182>:
  std::vector<function_path>::~vector (&function_path_array);
  resx 3

  <bb 238> :
<L183>:
  function_path_array::~function_path_array (&fun_array);
  resx 2

  <bb 239> :
<L184>:
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  calleeFunArray = {CLOBBER};
  resx 1

}



;; Function hash_map<tree_node*, function_path_array>::get (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7670, decl_uid=191963, cgraph_uid=4302, symbol_order=5088)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_path_array * hash_map<tree_node*, function_path_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.250671;
  struct hash_entry & D.250670;
  unsigned int D.250669;
  struct hash_entry & e;
  struct function_path_array * iftmp.504;
  struct function_path_array * D.250663;

  <bb 2> :
  _1 = &this->m_table;
  D.250669 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::hash (k);
  _2 = D.250669;
  D.250670 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.250670;
  D.250671 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_empty<hash_map<tree_node*, function_path_array>::hash_entry> (e);
  _3 = D.250671;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.504 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.504 = &e->m_value;

  <bb 5> :
  D.250663 = iftmp.504;

  <bb 6> :
<L3>:
  return D.250663;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE4hashERKS2_, funcdef_no=8549, decl_uid=191919, cgraph_uid=5181, symbol_order=5971)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::hash (union tree_node * const & h)
{
  hashval_t D.250672;

  <bb 2> :
  D.250672 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.250672;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8550, decl_uid=192106, cgraph_uid=5182, symbol_order=5972)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.250706;
  bool D.250705;
  bool D.250704;
  bool D.250703;
  bool D.250702;
  bool D.250701;
  struct value_type * D.250700;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.508;
  bool retval.507;
  struct value_type & D.250686;
  bool iftmp.506;
  bool retval.505;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 40;
  entry = _5 + _7;
  D.250701 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.250701;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.250702 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.250702;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.250703 = hash_map<tree_node*, function_path_array>::hash_entry::equal (entry, comparable);
  _11 = D.250703;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.506 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.506 = 0;

  <bb 8> :
  retval.505 = iftmp.506;
  if (retval.505 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.250686 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  entry = _17 + _19;
  D.250704 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.250704;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.250705 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.250705;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.250706 = hash_map<tree_node*, function_path_array>::hash_entry::equal (entry, comparable);
  _23 = D.250706;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.508 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.508 = 0;

  <bb 18> :
  retval.507 = iftmp.508;
  if (retval.507 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.250686 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.250686;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8972, decl_uid=192202, cgraph_uid=5604, symbol_order=6394)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.250709;
  bool D.250707;

  <bb 2> :
  D.250709 = hash_map<tree_node*, function_path_array>::hash_entry::is_empty (v);
  D.250707 = D.250709;

  <bb 3> :
<L0>:
  return D.250707;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8841, decl_uid=192032, cgraph_uid=5473, symbol_order=6263)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_path_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.250712;
  bool D.250710;

  <bb 2> :
  D.250712 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_empty<hash_map<tree_node*, function_path_array>::hash_entry> (e);
  D.250710 = D.250712;

  <bb 3> :
<L0>:
  return D.250710;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8973, decl_uid=192200, cgraph_uid=5605, symbol_order=6395)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.250715;
  bool D.250713;

  <bb 2> :
  D.250715 = hash_map<tree_node*, function_path_array>::hash_entry::is_deleted (v);
  D.250713 = D.250715;

  <bb 3> :
<L0>:
  return D.250713;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9811, decl_uid=192027, cgraph_uid=6443, symbol_order=7233)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_path_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.250718;
  bool D.250716;

  <bb 2> :
  D.250718 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_deleted<hash_map<tree_node*, function_path_array>::hash_entry> (e);
  D.250716 = D.250718;

  <bb 3> :
<L0>:
  return D.250716;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_deleted<hash_map<tree_node*, function_path_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10372, decl_uid=239690, cgraph_uid=7004, symbol_order=7798)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_deleted<hash_map<tree_node*, function_path_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.250719;

  <bb 2> :
  _1 = entry->m_key;
  D.250719 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.250719;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9340, decl_uid=192020, cgraph_uid=5972, symbol_order=6762)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_path_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.250723;
  bool D.250721;

  <bb 2> :
  _1 = &a->m_key;
  D.250723 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::equal_keys (_1, b);
  D.250721 = D.250723;

  <bb 3> :
<L0>:
  return D.250721;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE10equal_keysERKS2_S7_, funcdef_no=10047, decl_uid=191921, cgraph_uid=6679, symbol_order=7473)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.250724;

  <bb 2> :
  D.250724 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.250724;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_empty<hash_map<tree_node*, function_path_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8551, decl_uid=212558, cgraph_uid=5183, symbol_order=5973)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_empty<hash_map<tree_node*, function_path_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.250726;

  <bb 2> :
  _1 = entry->m_key;
  D.250726 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.250726;

}



;; Function function_path_array::function_path_array (_ZN19function_path_arrayC2ERKS_, funcdef_no=6320, decl_uid=192301, cgraph_uid=3295, symbol_order=4072)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_path_array::function_path_array (struct function_path_array * const this, const struct function_path_array & D.192303)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.192303->funtion_type_num;
  this->funtion_type_num = _1;
  _2 = &this->function_path_array;
  _3 = &D.192303->function_path_array;
  std::vector<function_path>::vector (_2, _3);
  return;

}



;; Function std::vector<function_path>::vector (_ZNSt6vectorI13function_pathSaIS0_EEC2ERKS2_, funcdef_no=7672, decl_uid=175570, cgraph_uid=4304, symbol_order=5090)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<function_path>::vector (struct vector * const this, const struct vector & __x)
{
  struct function_path * D.250732;
  struct __normal_iterator D.250729;
  struct __normal_iterator D.250728;
  struct allocator D.212669;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.175607;
  _2 = &__x->D.175607;
  _3 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_2);
  D.212669 = __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<function_path>::size (__x);
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_1, _4, &D.212669);

  <bb 3> :
  std::allocator<function_path>::~allocator (&D.212669);
  D.212669 = {CLOBBER};
  _5 = &this->D.175607;
  _6 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_5);
  _7 = this->D.175607._M_impl.D.174952._M_start;
  D.250728 = std::vector<function_path>::end (__x);
  D.250729 = std::vector<function_path>::begin (__x);
  D.250732 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*, function_path> (D.250729, D.250728, _7, _6);

  <bb 4> :
  _8 = D.250732;
  this->D.175607._M_impl.D.174952._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<function_path>::~allocator (&D.212669);
  resx 2

  <bb 6> :
<L1>:
  D.212669 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.175607;
  std::_Vector_base<function_path, std::allocator<function_path> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI13function_pathSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8553, decl_uid=174842, cgraph_uid=5185, symbol_order=5975)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.250734;

  <bb 2> :
  D.250734 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.250734;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI13function_pathES1_E17_S_select_on_copyERKS2_, funcdef_no=8552, decl_uid=174814, cgraph_uid=5184, symbol_order=5974)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<function_path> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<function_path> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI13function_pathEE37select_on_container_copy_constructionERKS1_, funcdef_no=9341, decl_uid=174779, cgraph_uid=5973, symbol_order=6763)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<function_path> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<function_path>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<function_path>::allocator (_ZNSaI13function_pathEC2ERKS0_, funcdef_no=10049, decl_uid=174722, cgraph_uid=6681, symbol_order=7475)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<function_path>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<function_path>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<function_path>::new_allocator (_ZN9__gnu_cxx13new_allocatorI13function_pathEC2ERKS2_, funcdef_no=10568, decl_uid=174651, cgraph_uid=7200, symbol_order=7994)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<function_path>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.174653)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_ZNSt12_Vector_baseI13function_pathSaIS0_EEC2EmRKS1_, funcdef_no=8555, decl_uid=175039, cgraph_uid=5187, symbol_order=5977)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI13function_pathSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9343, decl_uid=174944, cgraph_uid=5975, symbol_order=6765)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<function_path>::allocator (this, __a);
  _1 = &this->D.174952;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI13function_pathSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8790, decl_uid=174899, cgraph_uid=5422, symbol_order=6212)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_M_create_storage (_ZNSt12_Vector_baseI13function_pathSaIS0_EE17_M_create_storageEm, funcdef_no=9345, decl_uid=174963, cgraph_uid=5977, symbol_order=6767)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct function_path * D.250741;

  <bb 2> :
  D.250741 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_allocate (this, __n);
  _1 = D.250741;
  this->_M_impl.D.174952._M_start = _1;
  _2 = this->_M_impl.D.174952._M_start;
  this->_M_impl.D.174952._M_finish = _2;
  _3 = this->_M_impl.D.174952._M_start;
  _4 = __n * 24;
  _5 = _3 + _4;
  this->_M_impl.D.174952._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_M_allocate (_ZNSt12_Vector_baseI13function_pathSaIS0_EE11_M_allocateEm, funcdef_no=9630, decl_uid=174956, cgraph_uid=6262, symbol_order=7052)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_path * std::_Vector_base<function_path, std::allocator<function_path> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct function_path * D.250748;
  struct function_path * iftmp.509;
  struct function_path * D.250742;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.250748 = std::allocator_traits<std::allocator<function_path> >::allocate (_1, __n);
  iftmp.509 = D.250748;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.509 = 0B;

  <bb 5> :
  D.250742 = iftmp.509;

  <bb 6> :
<L3>:
  return D.250742;

}



;; Function std::allocator_traits<std::allocator<function_path> >::allocate (_ZNSt16allocator_traitsISaI13function_pathEE8allocateERS1_m, funcdef_no=10226, decl_uid=174757, cgraph_uid=6858, symbol_order=7652)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct function_path * std::allocator_traits<std::allocator<function_path> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct function_path * D.250751;
  struct function_path * D.250749;

  <bb 2> :
  D.250751 = __gnu_cxx::new_allocator<function_path>::allocate (__a, __n, 0B);
  D.250749 = D.250751;

  <bb 3> :
<L0>:
  return D.250749;

}



;; Function __gnu_cxx::new_allocator<function_path>::allocate (_ZN9__gnu_cxx13new_allocatorI13function_pathE8allocateEmPKv, funcdef_no=10694, decl_uid=174611, cgraph_uid=7327, symbol_order=8121)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct function_path * __gnu_cxx::new_allocator<function_path>::allocate (struct new_allocator * const this, size_type __n, const void * D.246026)
{
  struct function_path * D.250762;
  struct function_path * D.250761;
  align_val_t __al;
  struct function_path * D.250759;
  bool retval.510;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<function_path>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.510 = _4 != 0;
  if (retval.510 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 768614336404564650)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 24;
  D.250762 = operator new (_6);
  D.250759 = D.250762;

  <bb 7> :
<L6>:
  return D.250759;

}



;; Function __gnu_cxx::new_allocator<function_path>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI13function_pathE11_M_max_sizeEv, funcdef_no=10695, decl_uid=174638, cgraph_uid=7326, symbol_order=8120)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<function_path>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.250763;

  <bb 2> :
  D.250763 = 384307168202282325;

  <bb 3> :
<L0>:
  return D.250763;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI13function_pathSaIS0_EE12_Vector_implD2Ev, funcdef_no=6816, decl_uid=174999, cgraph_uid=3444, symbol_order=4222)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<function_path>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<function_path>::~allocator (_ZNSaI13function_pathED2Ev, funcdef_no=7826, decl_uid=174732, cgraph_uid=4458, symbol_order=5244)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<function_path>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<function_path>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<function_path>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI13function_pathED2Ev, funcdef_no=8793, decl_uid=174661, cgraph_uid=5425, symbol_order=6215)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<function_path>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI13function_pathSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8559, decl_uid=174840, cgraph_uid=5191, symbol_order=5981)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.250765;

  <bb 2> :
  D.250765 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.250765;

}



;; Function std::vector<function_path>::end (_ZNKSt6vectorI13function_pathSaIS0_EE3endEv, funcdef_no=8558, decl_uid=175222, cgraph_uid=5190, symbol_order=5980)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<function_path>::end (const struct vector * const this)
{
  struct const_iterator D.223617;
  struct const_iterator D.250767;

  <bb 2> :
  _1 = &this->D.175607._M_impl.D.174952._M_finish;
  __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::__normal_iterator (&D.223617, _1);
  D.250767 = D.223617;
  D.223617 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250767;

}



;; Function __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9347, decl_uid=212638, cgraph_uid=5979, symbol_order=6769)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::__normal_iterator (struct __normal_iterator * const this, const struct function_path * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<function_path>::begin (_ZNKSt6vectorI13function_pathSaIS0_EE5beginEv, funcdef_no=8557, decl_uid=175218, cgraph_uid=5189, symbol_order=5979)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<function_path>::begin (const struct vector * const this)
{
  struct const_iterator D.223615;
  struct const_iterator D.250770;

  <bb 2> :
  _1 = &this->D.175607._M_impl.D.174952._M_start;
  __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::__normal_iterator (&D.223615, _1);
  D.250770 = D.223615;
  D.223615 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250770;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*, function_path> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8560, decl_uid=212658, cgraph_uid=5192, symbol_order=5982)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*, function_path> (struct __normal_iterator __first, struct __normal_iterator __last, struct function_path * __result, struct allocator & D.223622)
{
  struct function_path * D.250775;
  struct function_path * D.250773;

  <bb 2> :
  D.250775 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (__first, __last, __result);
  D.250773 = D.250775;

  <bb 3> :
<L0>:
  return D.250773;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9349, decl_uid=223624, cgraph_uid=5982, symbol_order=6772)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (struct __normal_iterator __first, struct __normal_iterator __last, struct function_path * __result)
{
  struct function_path * D.250778;
  const bool __assignable;
  struct function_path * D.250776;

  <bb 2> :
  __assignable = 1;
  D.250778 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (__first, __last, __result);
  D.250776 = D.250778;

  <bb 3> :
<L0>:
  return D.250776;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10051, decl_uid=235421, cgraph_uid=6683, symbol_order=7477)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (struct __normal_iterator __first, struct __normal_iterator __last, struct function_path * __result)
{
  struct function_path * D.250781;
  struct function_path * D.250779;

  <bb 2> :
  D.250781 = std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (__first, __last, __result);
  D.250779 = D.250781;

  <bb 3> :
<L0>:
  return D.250779;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10570, decl_uid=242055, cgraph_uid=7202, symbol_order=7996)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (struct __normal_iterator __first, struct __normal_iterator __last, struct function_path * __result)
{
  struct function_path * D.250786;
  struct __normal_iterator D.250784;
  struct __normal_iterator D.250783;
  struct function_path * D.250782;

  <bb 2> :
  D.250783 = std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (__last);
  D.250784 = std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (__first);
  D.250786 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (D.250784, D.250783, __result);
  D.250782 = D.250786;

  <bb 3> :
<L0>:
  return D.250782;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9631, decl_uid=229449, cgraph_uid=6263, symbol_order=7053)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.250787;

  <bb 2> :
  D.250787 = __it;

  <bb 3> :
<L0>:
  return D.250787;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEEPS2_ET1_T0_SB_SA_, funcdef_no=10868, decl_uid=245504, cgraph_uid=7500, symbol_order=8296)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (struct __normal_iterator __first, struct __normal_iterator __last, struct function_path * __result)
{
  struct function_path * D.250791;
  struct function_path * D.250789;

  <bb 2> :
  __result.511_1 = __result;
  _2 = std::__niter_base<function_path*> (__result.511_1);
  _3 = std::__niter_base<const function_path*, std::vector<function_path> > (__last);
  _4 = std::__niter_base<const function_path*, std::vector<function_path> > (__first);
  D.250791 = std::__copy_move_a1<false, const function_path*, function_path*> (_4, _3, _2);
  _5 = D.250791;
  D.250789 = std::__niter_wrap<function_path*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.250789;

}



;; Function std::__niter_base<function_path*> (_ZSt12__niter_baseIP13function_pathET_S2_, funcdef_no=10232, decl_uid=229717, cgraph_uid=6864, symbol_order=7658)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__niter_base<function_path*> (struct function_path * __it)
{
  struct function_path * D.250792;

  <bb 2> :
  D.250792 = __it;

  <bb 3> :
<L0>:
  return D.250792;

}



;; Function std::__niter_base<const function_path*, std::vector<function_path> > (_ZSt12__niter_baseIPK13function_pathSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10227, decl_uid=237857, cgraph_uid=6859, symbol_order=7653)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct function_path * std::__niter_base<const function_path*, std::vector<function_path> > (struct __normal_iterator __it)
{
  const struct function_path * D.250794;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::base (&__it);
  D.250794 = *_1;

  <bb 3> :
<L0>:
  return D.250794;

}



;; Function __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10696, decl_uid=212625, cgraph_uid=7328, symbol_order=8122)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct function_path * const & __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::base (const struct __normal_iterator * const this)
{
  const struct function_path * const & D.250796;

  <bb 2> :
  D.250796 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.250796;

}



;; Function std::__copy_move_a1<false, const function_path*, function_path*> (_ZSt14__copy_move_a1ILb0EPK13function_pathPS0_ET1_T0_S5_S4_, funcdef_no=10229, decl_uid=238011, cgraph_uid=6861, symbol_order=7655)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a1<false, const function_path*, function_path*> (const struct function_path * __first, const struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.250800;
  struct function_path * D.250798;

  <bb 2> :
  D.250800 = std::__copy_move_a2<false, const function_path*, function_path*> (__first, __last, __result);
  D.250798 = D.250800;

  <bb 3> :
<L0>:
  return D.250798;

}



;; Function std::__copy_move_a2<false, const function_path*, function_path*> (_ZSt14__copy_move_a2ILb0EPK13function_pathPS0_ET1_T0_S5_S4_, funcdef_no=10697, decl_uid=242796, cgraph_uid=7329, symbol_order=8123)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a2<false, const function_path*, function_path*> (const struct function_path * __first, const struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.250801;

  <bb 2> :
  D.250801 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<function_path> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.250801;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<function_path> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI13function_pathEEPT_PKS4_S7_S5_, funcdef_no=10898, decl_uid=246049, cgraph_uid=7530, symbol_order=8326)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct function_path * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<function_path> (const struct function_path * __first, const struct function_path * __last, struct function_path * __result)
{
  const ptrdiff_t _Num;
  struct function_path * D.250806;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 24;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.512_2 = (long unsigned int) _Num;
  _3 = _Num.512_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.513_4 = (long unsigned int) _Num;
  _5 = _Num.513_4 * 24;
  D.250806 = __result + _5;

  <bb 5> :
<L3>:
  return D.250806;

}



;; Function std::__niter_wrap<function_path*> (_ZSt12__niter_wrapIP13function_pathET_RKS2_S2_, funcdef_no=10234, decl_uid=238054, cgraph_uid=6866, symbol_order=7660)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__niter_wrap<function_path*> (struct function_path * const & D.242818, struct function_path * __res)
{
  struct function_path * D.250808;

  <bb 2> :
  D.250808 = __res;

  <bb 3> :
<L0>:
  return D.250808;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::~_Vector_base (_ZNSt12_Vector_baseI13function_pathSaIS0_EED2Ev, funcdef_no=7829, decl_uid=175062, cgraph_uid=4461, symbol_order=5247)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.174952._M_end_of_storage;
  _2 = this->_M_impl.D.174952._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.174952._M_start;
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (_ZNSt12_Vector_baseI13function_pathSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8795, decl_uid=174959, cgraph_uid=5427, symbol_order=6217)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (struct _Vector_base * const this, struct function_path * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<function_path> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<function_path> >::deallocate (_ZNSt16allocator_traitsISaI13function_pathEE10deallocateERS1_PS0_m, funcdef_no=9628, decl_uid=174764, cgraph_uid=6260, symbol_order=7050)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<function_path> >::deallocate (struct allocator_type & __a, struct function_path * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<function_path>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<function_path>::deallocate (_ZN9__gnu_cxx13new_allocatorI13function_pathE10deallocateEPS1_m, funcdef_no=10225, decl_uid=174615, cgraph_uid=6857, symbol_order=7651)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<function_path>::deallocate (struct new_allocator * const this, struct function_path * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function hash_map<tree_node*, function_free_array>::get (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7678, decl_uid=192445, cgraph_uid=4310, symbol_order=5096)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_free_array * hash_map<tree_node*, function_free_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.250824;
  struct hash_entry & D.250823;
  unsigned int D.250822;
  struct hash_entry & e;
  struct function_free_array * iftmp.514;
  struct function_free_array * D.250816;

  <bb 2> :
  _1 = &this->m_table;
  D.250822 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::hash (k);
  _2 = D.250822;
  D.250823 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.250823;
  D.250824 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_empty<hash_map<tree_node*, function_free_array>::hash_entry> (e);
  _3 = D.250824;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.514 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.514 = &e->m_value;

  <bb 5> :
  D.250816 = iftmp.514;

  <bb 6> :
<L3>:
  return D.250816;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE4hashERKS2_, funcdef_no=8562, decl_uid=192401, cgraph_uid=5194, symbol_order=5984)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::hash (union tree_node * const & h)
{
  hashval_t D.250825;

  <bb 2> :
  D.250825 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.250825;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8563, decl_uid=192588, cgraph_uid=5195, symbol_order=5985)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.250859;
  bool D.250858;
  bool D.250857;
  bool D.250856;
  bool D.250855;
  bool D.250854;
  struct value_type * D.250853;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.518;
  bool retval.517;
  struct value_type & D.250839;
  bool iftmp.516;
  bool retval.515;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 32;
  entry = _5 + _7;
  D.250854 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.250854;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.250855 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.250855;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.250856 = hash_map<tree_node*, function_free_array>::hash_entry::equal (entry, comparable);
  _11 = D.250856;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.516 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.516 = 0;

  <bb 8> :
  retval.515 = iftmp.516;
  if (retval.515 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.250839 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  entry = _17 + _19;
  D.250857 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.250857;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.250858 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.250858;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.250859 = hash_map<tree_node*, function_free_array>::hash_entry::equal (entry, comparable);
  _23 = D.250859;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.518 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.518 = 0;

  <bb 18> :
  retval.517 = iftmp.518;
  if (retval.517 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.250839 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.250839;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8976, decl_uid=192684, cgraph_uid=5608, symbol_order=6398)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.250862;
  bool D.250860;

  <bb 2> :
  D.250862 = hash_map<tree_node*, function_free_array>::hash_entry::is_empty (v);
  D.250860 = D.250862;

  <bb 3> :
<L0>:
  return D.250860;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8675, decl_uid=192514, cgraph_uid=5307, symbol_order=6097)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_free_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.250865;
  bool D.250863;

  <bb 2> :
  D.250865 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_empty<hash_map<tree_node*, function_free_array>::hash_entry> (e);
  D.250863 = D.250865;

  <bb 3> :
<L0>:
  return D.250863;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8977, decl_uid=192682, cgraph_uid=5609, symbol_order=6399)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.250868;
  bool D.250866;

  <bb 2> :
  D.250868 = hash_map<tree_node*, function_free_array>::hash_entry::is_deleted (v);
  D.250866 = D.250868;

  <bb 3> :
<L0>:
  return D.250866;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9813, decl_uid=192509, cgraph_uid=6445, symbol_order=7235)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_free_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.250871;
  bool D.250869;

  <bb 2> :
  D.250871 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_deleted<hash_map<tree_node*, function_free_array>::hash_entry> (e);
  D.250869 = D.250871;

  <bb 3> :
<L0>:
  return D.250869;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_deleted<hash_map<tree_node*, function_free_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10373, decl_uid=239696, cgraph_uid=7005, symbol_order=7799)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_deleted<hash_map<tree_node*, function_free_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.250872;

  <bb 2> :
  _1 = entry->m_key;
  D.250872 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.250872;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9353, decl_uid=192502, cgraph_uid=5985, symbol_order=6775)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_free_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.250876;
  bool D.250874;

  <bb 2> :
  _1 = &a->m_key;
  D.250876 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::equal_keys (_1, b);
  D.250874 = D.250876;

  <bb 3> :
<L0>:
  return D.250874;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE10equal_keysERKS2_S7_, funcdef_no=10055, decl_uid=192403, cgraph_uid=6687, symbol_order=7481)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.250877;

  <bb 2> :
  D.250877 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.250877;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_empty<hash_map<tree_node*, function_free_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8564, decl_uid=212692, cgraph_uid=5196, symbol_order=5986)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_empty<hash_map<tree_node*, function_free_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.250879;

  <bb 2> :
  _1 = entry->m_key;
  D.250879 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.250879;

}



;; Function function_free_array::function_free_array (_ZN19function_free_arrayC2ERKS_, funcdef_no=6326, decl_uid=192783, cgraph_uid=3301, symbol_order=4078)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_free_array::function_free_array (struct function_free_array * const this, const struct function_free_array & D.192785)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->free_type_array;
  _2 = &D.192785->free_type_array;
  std::vector<free_type>::vector (_1, _2);
  return;

}



;; Function std::vector<free_type>::vector (_ZNSt6vectorI9free_typeSaIS0_EEC2ERKS2_, funcdef_no=7680, decl_uid=173454, cgraph_uid=4312, symbol_order=5098)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<free_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct free_type * D.250885;
  struct __normal_iterator D.250882;
  struct __normal_iterator D.250881;
  struct allocator D.212807;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.173491;
  _2 = &__x->D.173491;
  _3 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_2);
  D.212807 = __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<free_type>::size (__x);
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_1, _4, &D.212807);

  <bb 3> :
  std::allocator<free_type>::~allocator (&D.212807);
  D.212807 = {CLOBBER};
  _5 = &this->D.173491;
  _6 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.173491._M_impl.D.172836._M_start;
  D.250881 = std::vector<free_type>::end (__x);
  D.250882 = std::vector<free_type>::begin (__x);
  D.250885 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*, free_type> (D.250882, D.250881, _7, _6);

  <bb 4> :
  _8 = D.250885;
  this->D.173491._M_impl.D.172836._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<free_type>::~allocator (&D.212807);
  resx 2

  <bb 6> :
<L1>:
  D.212807 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.173491;
  std::_Vector_base<free_type, std::allocator<free_type> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI9free_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8566, decl_uid=172726, cgraph_uid=5198, symbol_order=5988)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.250887;

  <bb 2> :
  D.250887 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.250887;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI9free_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=8565, decl_uid=172698, cgraph_uid=5197, symbol_order=5987)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<free_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<free_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI9free_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9354, decl_uid=172663, cgraph_uid=5986, symbol_order=6776)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<free_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<free_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<free_type>::allocator (_ZNSaI9free_typeEC2ERKS0_, funcdef_no=10057, decl_uid=172606, cgraph_uid=6689, symbol_order=7483)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<free_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<free_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI9free_typeEC2ERKS2_, funcdef_no=10577, decl_uid=172535, cgraph_uid=7209, symbol_order=8003)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.172537)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_ZNSt12_Vector_baseI9free_typeSaIS0_EEC2EmRKS1_, funcdef_no=8568, decl_uid=172923, cgraph_uid=5200, symbol_order=5990)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI9free_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9356, decl_uid=172828, cgraph_uid=5988, symbol_order=6778)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<free_type>::allocator (this, __a);
  _1 = &this->D.172836;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI9free_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8652, decl_uid=172783, cgraph_uid=5284, symbol_order=6074)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_M_create_storage (_ZNSt12_Vector_baseI9free_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9358, decl_uid=172847, cgraph_uid=5990, symbol_order=6780)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct free_type * D.250894;

  <bb 2> :
  D.250894 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_allocate (this, __n);
  _1 = D.250894;
  this->_M_impl.D.172836._M_start = _1;
  _2 = this->_M_impl.D.172836._M_start;
  this->_M_impl.D.172836._M_finish = _2;
  _3 = this->_M_impl.D.172836._M_start;
  _4 = __n * 24;
  _5 = _3 + _4;
  this->_M_impl.D.172836._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_M_allocate (_ZNSt12_Vector_baseI9free_typeSaIS0_EE11_M_allocateEm, funcdef_no=9460, decl_uid=172840, cgraph_uid=6092, symbol_order=6882)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct free_type * std::_Vector_base<free_type, std::allocator<free_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct free_type * D.250901;
  struct free_type * iftmp.519;
  struct free_type * D.250895;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.250901 = std::allocator_traits<std::allocator<free_type> >::allocate (_1, __n);
  iftmp.519 = D.250901;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.519 = 0B;

  <bb 5> :
  D.250895 = iftmp.519;

  <bb 6> :
<L3>:
  return D.250895;

}



;; Function std::allocator_traits<std::allocator<free_type> >::allocate (_ZNSt16allocator_traitsISaI9free_typeEE8allocateERS1_m, funcdef_no=10130, decl_uid=172641, cgraph_uid=6762, symbol_order=7556)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct free_type * std::allocator_traits<std::allocator<free_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct free_type * D.250904;
  struct free_type * D.250902;

  <bb 2> :
  D.250904 = __gnu_cxx::new_allocator<free_type>::allocate (__a, __n, 0B);
  D.250902 = D.250904;

  <bb 3> :
<L0>:
  return D.250902;

}



;; Function __gnu_cxx::new_allocator<free_type>::allocate (_ZN9__gnu_cxx13new_allocatorI9free_typeE8allocateEmPKv, funcdef_no=10631, decl_uid=172495, cgraph_uid=7264, symbol_order=8058)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct free_type * __gnu_cxx::new_allocator<free_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.245748)
{
  struct free_type * D.250915;
  struct free_type * D.250914;
  align_val_t __al;
  struct free_type * D.250912;
  bool retval.520;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<free_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.520 = _4 != 0;
  if (retval.520 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 768614336404564650)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 24;
  D.250915 = operator new (_6);
  D.250912 = D.250915;

  <bb 7> :
<L6>:
  return D.250912;

}



;; Function __gnu_cxx::new_allocator<free_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI9free_typeE11_M_max_sizeEv, funcdef_no=10632, decl_uid=172522, cgraph_uid=7263, symbol_order=8057)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<free_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.250916;

  <bb 2> :
  D.250916 = 384307168202282325;

  <bb 3> :
<L0>:
  return D.250916;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI9free_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6365, decl_uid=172883, cgraph_uid=3338, symbol_order=4115)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<free_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<free_type>::~allocator (_ZNSaI9free_typeED2Ev, funcdef_no=7736, decl_uid=172616, cgraph_uid=4368, symbol_order=5154)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<free_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<free_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI9free_typeED2Ev, funcdef_no=8655, decl_uid=172545, cgraph_uid=5287, symbol_order=6077)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI9free_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8572, decl_uid=172724, cgraph_uid=5204, symbol_order=5994)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.250918;

  <bb 2> :
  D.250918 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.250918;

}



;; Function std::vector<free_type>::end (_ZNKSt6vectorI9free_typeSaIS0_EE3endEv, funcdef_no=8571, decl_uid=173106, cgraph_uid=5203, symbol_order=5993)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<free_type>::end (const struct vector * const this)
{
  struct const_iterator D.223692;
  struct const_iterator D.250920;

  <bb 2> :
  _1 = &this->D.173491._M_impl.D.172836._M_finish;
  __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::__normal_iterator (&D.223692, _1);
  D.250920 = D.223692;
  D.223692 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250920;

}



;; Function __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9360, decl_uid=212776, cgraph_uid=5992, symbol_order=6782)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::__normal_iterator (struct __normal_iterator * const this, const struct free_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<free_type>::begin (_ZNKSt6vectorI9free_typeSaIS0_EE5beginEv, funcdef_no=8570, decl_uid=173102, cgraph_uid=5202, symbol_order=5992)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<free_type>::begin (const struct vector * const this)
{
  struct const_iterator D.223690;
  struct const_iterator D.250923;

  <bb 2> :
  _1 = &this->D.173491._M_impl.D.172836._M_start;
  __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::__normal_iterator (&D.223690, _1);
  D.250923 = D.223690;
  D.223690 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250923;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*, free_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8573, decl_uid=212796, cgraph_uid=5205, symbol_order=5995)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*, free_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct free_type * __result, struct allocator & D.223697)
{
  struct free_type * D.250928;
  struct free_type * D.250926;

  <bb 2> :
  D.250928 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (__first, __last, __result);
  D.250926 = D.250928;

  <bb 3> :
<L0>:
  return D.250926;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9362, decl_uid=223699, cgraph_uid=5995, symbol_order=6785)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct free_type * __result)
{
  struct free_type * D.250931;
  const bool __assignable;
  struct free_type * D.250929;

  <bb 2> :
  __assignable = 1;
  D.250931 = std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (__first, __last, __result);
  D.250929 = D.250931;

  <bb 3> :
<L0>:
  return D.250929;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10059, decl_uid=235590, cgraph_uid=6691, symbol_order=7485)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct free_type * std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct free_type * __result)
{
  struct free_type * __cur;
  struct free_type * D.250933;
  bool retval.521;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator* (&__first);
  _2 = std::__addressof<free_type> (__cur);
  std::_Construct<free_type, const free_type&> (_2, _1);
  __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator++ (&__first);
  __cur = __cur + 24;

  <bb 4> :
  retval.521 = __gnu_cxx::operator!=<const free_type*, std::vector<free_type> > (&__first, &__last);
  if (retval.521 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.250933 = __cur;

  <bb 6> :
<L3>:
  return D.250933;

}



;; Function __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS1_SaIS1_EEEdeEv, funcdef_no=10582, decl_uid=212734, cgraph_uid=7214, symbol_order=8008)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct free_type & __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator* (const struct __normal_iterator * const this)
{
  const struct free_type & D.250935;

  <bb 2> :
  D.250935 = this->_M_current;

  <bb 3> :
<L0>:
  return D.250935;

}



;; Function std::__addressof<free_type> (_ZSt11__addressofI9free_typeEPT_RS1_, funcdef_no=10581, decl_uid=226164, cgraph_uid=7213, symbol_order=8007)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__addressof<free_type> (struct free_type & __r)
{
  struct free_type * D.250937;

  <bb 2> :
  D.250937 = __r;

  <bb 3> :
<L0>:
  return D.250937;

}



;; Function std::_Construct<free_type, const free_type&> (_ZSt10_ConstructI9free_typeJRKS0_EEvPT_DpOT0_, funcdef_no=10583, decl_uid=242109, cgraph_uid=7215, symbol_order=8009)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<free_type, const free_type&> (struct free_type * __p, const struct free_type & __args#0)
{
  void * D.245544;
  void * D.245543;
  const struct free_type * D.245545;

  <bb 2> :
  D.245545 = std::forward<const free_type&> (__args#0);
  D.245543 = __p;
  D.245544 = operator new (24, D.245543);
  MEM[(struct free_type *)D.245544] = *D.245545;
  return;

}



;; Function std::forward<const free_type&> (_ZSt7forwardIRK9free_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9471, decl_uid=225778, cgraph_uid=6103, symbol_order=6893)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct free_type & std::forward<const free_type&> (const struct type & __t)
{
  const struct free_type & D.250939;

  <bb 2> :
  D.250939 = __t;

  <bb 3> :
<L0>:
  return D.250939;

}



;; Function __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS1_SaIS1_EEEppEv, funcdef_no=10580, decl_uid=212738, cgraph_uid=7212, symbol_order=8006)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.250941;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 24;
  this->_M_current = _2;
  D.250941 = this;

  <bb 3> :
<L0>:
  return D.250941;

}



;; Function __gnu_cxx::operator!=<const free_type*, std::vector<free_type> > (_ZN9__gnu_cxxneIPK9free_typeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_, funcdef_no=10579, decl_uid=242102, cgraph_uid=7211, symbol_order=8005)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<const free_type*, std::vector<free_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.250943;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::base (__rhs);
  _4 = *_3;
  D.250943 = _2 != _4;

  <bb 3> :
<L0>:
  return D.250943;

}



;; Function __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10633, decl_uid=212763, cgraph_uid=7265, symbol_order=8059)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct free_type * const & __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::base (const struct __normal_iterator * const this)
{
  const struct free_type * const & D.250945;

  <bb 2> :
  D.250945 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.250945;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::~_Vector_base (_ZNSt12_Vector_baseI9free_typeSaIS0_EED2Ev, funcdef_no=7739, decl_uid=172946, cgraph_uid=4371, symbol_order=5157)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.172836._M_end_of_storage;
  _2 = this->_M_impl.D.172836._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.172836._M_start;
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (_ZNSt12_Vector_baseI9free_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8657, decl_uid=172843, cgraph_uid=5289, symbol_order=6079)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (struct _Vector_base * const this, struct free_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<free_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<free_type> >::deallocate (_ZNSt16allocator_traitsISaI9free_typeEE10deallocateERS1_PS0_m, funcdef_no=9458, decl_uid=172648, cgraph_uid=6090, symbol_order=6880)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<free_type> >::deallocate (struct allocator_type & __a, struct free_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<free_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI9free_typeE10deallocateEPS1_m, funcdef_no=10129, decl_uid=172499, cgraph_uid=6761, symbol_order=7555)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::deallocate (struct new_allocator * const this, struct free_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function hash_map<tree_node*, int>::hash_map (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEEC2Embbb, funcdef_no=7686, decl_uid=193236, cgraph_uid=4318, symbol_order=5104)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, int>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8576, decl_uid=193195, cgraph_uid=5208, symbol_order=5998)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.250954;
  unsigned int D.250953;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.250953 = hash_table_higher_prime_index (size);
  size_prime_index = D.250953;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.250954 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.250954;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9365, decl_uid=193141, cgraph_uid=5997, symbol_order=6787)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.250970;
  struct value_type * D.250969;
  struct mem_alloc_description & D.250968;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.250966;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.250969 = xcallocator<hash_map<tree_node*, int>::hash_entry>::data_alloc (n);
  nentries = D.250969;
  goto <bb 6>; [INV]

  <bb 5> :
  D.250970 = ggc_cleared_vec_alloc<hash_map<tree_node*, int>::hash_entry> (n);
  nentries = D.250970;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.250966 = nentries;

  <bb 9> :
<L14>:
  return D.250966;

}



;; Function xcallocator<hash_map<tree_node*, int>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEE10data_allocEm, funcdef_no=10061, decl_uid=212853, cgraph_uid=6693, symbol_order=7487)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, int>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.250973;
  struct hash_entry * D.250971;

  <bb 2> :
  D.250973 = xcalloc (count, 16);
  D.250971 = D.250973;

  <bb 3> :
<L0>:
  return D.250971;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, int>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEEPT_m, funcdef_no=10062, decl_uid=235628, cgraph_uid=6694, symbol_order=7488)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, int>::hash_entry> (size_t c)
{
  struct hash_entry * D.250980;
  struct hash_entry * D.250979;
  struct hash_entry * D.250977;
  bool retval.522;

  <bb 2> :
  retval.522 = need_finalization_p<hash_map<tree_node*, int>::hash_entry> ();
  if (retval.522 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 16;
  D.250979 = ggc_internal_cleared_alloc (_1, finalize, 16, c);
  D.250977 = D.250979;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 16;
  D.250980 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.250977 = D.250980;

  <bb 5> :
<L2>:
  return D.250977;

}



;; Function finalize<hash_map<tree_node*, int>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEEvPv, funcdef_no=10585, decl_uid=242124, cgraph_uid=7217, symbol_order=8011)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, int>::hash_entry> (void * p)
{
  <bb 2> :
  MEM[(struct hash_entry *)p] = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, int>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEEbv, funcdef_no=10584, decl_uid=242123, cgraph_uid=7216, symbol_order=8010)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, int>::hash_entry> ()
{
  bool D.250981;

  <bb 2> :
  D.250981 = 0;

  <bb 3> :
<L0>:
  return D.250981;

}



;; Function hash_map<tree_node*, int>::get (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE3getERKS1_, funcdef_no=7691, decl_uid=192922, cgraph_uid=4323, symbol_order=5109)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
int * hash_map<tree_node*, int>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.250991;
  struct hash_entry & D.250990;
  unsigned int D.250989;
  struct hash_entry & e;
  int * iftmp.523;
  int * D.250983;

  <bb 2> :
  _1 = &this->m_table;
  D.250989 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::hash (k);
  _2 = D.250989;
  D.250990 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.250990;
  D.250991 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_empty<hash_map<tree_node*, int>::hash_entry> (e);
  _3 = D.250991;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.523 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.523 = &e->m_value;

  <bb 5> :
  D.250983 = iftmp.523;

  <bb 6> :
<L3>:
  return D.250983;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE4hashERKS2_, funcdef_no=8578, decl_uid=192878, cgraph_uid=5210, symbol_order=6000)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, int>::hash (union tree_node * const & h)
{
  hashval_t D.250992;

  <bb 2> :
  D.250992 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.250992;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8581, decl_uid=193062, cgraph_uid=5213, symbol_order=6003)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.251026;
  bool D.251025;
  bool D.251024;
  bool D.251023;
  bool D.251022;
  bool D.251021;
  struct value_type * D.251020;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.527;
  bool retval.526;
  struct value_type & D.251006;
  bool iftmp.525;
  bool retval.524;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 16;
  entry = _5 + _7;
  D.251021 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.251021;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.251022 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.251022;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.251023 = hash_map<tree_node*, int>::hash_entry::equal (entry, comparable);
  _11 = D.251023;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.525 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.525 = 0;

  <bb 8> :
  retval.524 = iftmp.525;
  if (retval.524 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.251006 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 16;
  entry = _17 + _19;
  D.251024 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.251024;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.251025 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.251025;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.251026 = hash_map<tree_node*, int>::hash_entry::equal (entry, comparable);
  _23 = D.251026;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.527 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.527 = 0;

  <bb 18> :
  retval.526 = iftmp.527;
  if (retval.526 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.251006 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.251006;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE8is_emptyERS8_, funcdef_no=8583, decl_uid=193158, cgraph_uid=5215, symbol_order=6005)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.251029;
  bool D.251027;

  <bb 2> :
  D.251029 = hash_map<tree_node*, int>::hash_entry::is_empty (v);
  D.251027 = D.251029;

  <bb 3> :
<L0>:
  return D.251027;

}



;; Function hash_map<tree_node*, int>::hash_entry::is_empty (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry8is_emptyERKS7_, funcdef_no=8580, decl_uid=192991, cgraph_uid=5212, symbol_order=6002)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, int>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.251032;
  bool D.251030;

  <bb 2> :
  D.251032 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_empty<hash_map<tree_node*, int>::hash_entry> (e);
  D.251030 = D.251032;

  <bb 3> :
<L0>:
  return D.251030;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE10is_deletedERS8_, funcdef_no=8584, decl_uid=193156, cgraph_uid=5216, symbol_order=6006)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.251035;
  bool D.251033;

  <bb 2> :
  D.251035 = hash_map<tree_node*, int>::hash_entry::is_deleted (v);
  D.251033 = D.251035;

  <bb 3> :
<L0>:
  return D.251033;

}



;; Function hash_map<tree_node*, int>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry10is_deletedERKS7_, funcdef_no=9369, decl_uid=192986, cgraph_uid=6001, symbol_order=6791)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, int>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.251038;
  bool D.251036;

  <bb 2> :
  D.251038 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_deleted<hash_map<tree_node*, int>::hash_entry> (e);
  D.251036 = D.251038;

  <bb 3> :
<L0>:
  return D.251036;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_deleted<hash_map<tree_node*, int>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE10is_deletedIN8hash_mapIS2_iS4_E10hash_entryEEEbRKT_, funcdef_no=10071, decl_uid=235691, cgraph_uid=6703, symbol_order=7497)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_deleted<hash_map<tree_node*, int>::hash_entry> (const struct hash_entry & entry)
{
  bool D.251039;

  <bb 2> :
  _1 = entry->m_key;
  D.251039 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.251039;

}



;; Function hash_map<tree_node*, int>::hash_entry::equal (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry5equalERKS7_RKS1_, funcdef_no=9367, decl_uid=192979, cgraph_uid=5999, symbol_order=6789)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, int>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.251043;
  bool D.251041;

  <bb 2> :
  _1 = &a->m_key;
  D.251043 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::equal_keys (_1, b);
  D.251041 = D.251043;

  <bb 3> :
<L0>:
  return D.251041;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE10equal_keysERKS2_S6_, funcdef_no=10069, decl_uid=192880, cgraph_uid=6701, symbol_order=7495)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, int>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.251044;

  <bb 2> :
  D.251044 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.251044;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_empty<hash_map<tree_node*, int>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE8is_emptyIN8hash_mapIS2_iS4_E10hash_entryEEEbRKT_, funcdef_no=8582, decl_uid=212846, cgraph_uid=5214, symbol_order=6004)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_empty<hash_map<tree_node*, int>::hash_entry> (const struct hash_entry & entry)
{
  bool D.251046;

  <bb 2> :
  _1 = entry->m_key;
  D.251046 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.251046;

}



;; Function gimple_block (_ZL12gimple_blockPK6gimple, funcdef_no=2001, decl_uid=92276, cgraph_uid=1138, symbol_order=1298)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
union tree_node * gimple_block (const struct gimple * g)
{
  union tree_node * D.251054;
  union tree_node * iftmp.528;
  union tree_node * D.251048;

  <bb 2> :
  _1 = g->location;
  _2 = IS_ADHOC_LOC (_1);
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = g->location;
  line_table.529_4 = line_table;
  D.251054 = get_data_from_adhoc_loc (line_table.529_4, _3);
  iftmp.528 = D.251054;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.528 = 0B;

  <bb 5> :
  D.251048 = iftmp.528;

  <bb 6> :
<L3>:
  return D.251048;

}



;; Function IS_ADHOC_LOC (_Z12IS_ADHOC_LOCj, funcdef_no=1146, decl_uid=35072, cgraph_uid=320, symbol_order=337)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool IS_ADHOC_LOC (location_t loc)
{
  bool D.251055;

  <bb 2> :
  loc.530_1 = (signed int) loc;
  D.251055 = loc.530_1 < 0;

  <bb 3> :
<L0>:
  return D.251055;

}



;; Function hash_map<tree_node*, int>::put (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE3putERKS1_RKi, funcdef_no=7690, decl_uid=192918, cgraph_uid=4322, symbol_order=5108)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
bool hash_map<tree_node*, int>::put (struct hash_map * const this, union tree_node * const & k, const int & v)
{
  bool D.251064;
  struct hash_entry * D.251063;
  unsigned int D.251062;
  bool ins;
  struct hash_entry * e;
  bool D.251060;
  void * D.212842;
  void * D.212841;

  <bb 2> :
  _1 = &this->m_table;
  D.251062 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::hash (k);
  _2 = D.251062;
  D.251063 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.251063;
  D.251064 = hash_map<tree_node*, int>::hash_entry::is_empty (e);
  ins = D.251064;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.212841 = &e->m_value;
  D.212842 = operator new (4, D.212841);
  _4 = *v;
  MEM[(int *)D.212842] = _4;
  goto <bb 5>; [INV]

  <bb 4> :
  _5 = *v;
  e->m_value = _5;

  <bb 5> :
  D.251060 = ~ins;

  <bb 6> :
<L3>:
  return D.251060;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8579, decl_uid=193073, cgraph_uid=5211, symbol_order=6001)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.251114;
  bool D.251113;
  bool D.251112;
  bool D.251111;
  bool D.251110;
  bool D.251109;
  struct value_type * D.251108;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.536;
  bool retval.535;
  bool retval.534;
  bool retval.533;
  bool retval.532;
  bool retval.531;
  struct value_type * D.251070;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 16;
  entry = _11 + _13;
  size = this->m_size;
  D.251109 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.531 = D.251109;
  if (retval.531 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.251110 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.532 = D.251110;
  if (retval.532 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 16;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.251111 = hash_map<tree_node*, int>::hash_entry::equal (entry, comparable);
  retval.533 = D.251111;
  if (retval.533 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 16;
  D.251070 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 16;
  entry = _24 + _26;
  D.251112 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.534 = D.251112;
  if (retval.534 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.251113 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.535 = D.251113;
  if (retval.535 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 16;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.251114 = hash_map<tree_node*, int>::hash_entry::equal (entry, comparable);
  retval.536 = D.251114;
  if (retval.536 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 16;
  D.251070 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.251070 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.251070 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 16;
  D.251070 = _37 + _39;

  <bb 27> :
<L37>:
  return D.251070;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9366, decl_uid=193154, cgraph_uid=5998, symbol_order=6788)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.251145;
  unsigned int D.251144;
  bool D.251143;
  bool D.251142;
  struct mem_alloc_description & D.251141;
  struct value_type * D.251140;
  unsigned int D.251139;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.235679;
  void * D.235678;
  struct hash_entry * D.235680;
  bool iftmp.540;
  bool retval.539;
  bool iftmp.538;
  bool retval.537;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 16;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.538 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.538 = 0;

  <bb 6> :
  retval.537 = iftmp.538;
  if (retval.537 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.251139 = hash_table_higher_prime_index (_5);
  nindex = D.251139;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.251140 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.251140;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.251142 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.251142;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.251143 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.251143;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.540 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.540 = 0;

  <bb 15> :
  retval.539 = iftmp.540;
  if (retval.539 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.251144 = hash_map<tree_node*, int>::hash_entry::hash (x);
  _16 = D.251144;
  D.251145 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.251145;
  D.235680 = std::move<hash_map<tree_node*, int>::hash_entry&> (x);
  D.235678 = q;
  D.235679 = operator new (16, D.235678);
  MEM[(struct value_type *)D.235679] = *D.235680;

  <bb 17> :
  p = p + 16;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, int>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10063, decl_uid=193049, cgraph_uid=6695, symbol_order=7489)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.251146;

  <bb 2> :
  D.251146 = this->m_size;

  <bb 3> :
<L0>:
  return D.251146;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10064, decl_uid=193051, cgraph_uid=6696, symbol_order=7490)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.251148;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.251148 = _1 - _2;

  <bb 3> :
<L0>:
  return D.251148;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10065, decl_uid=193151, cgraph_uid=6697, symbol_order=7491)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.541;
  bool D.251150;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.541 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.541 = 0;

  <bb 6> :
  D.251150 = iftmp.541;

  <bb 7> :
<L4>:
  return D.251150;

}



;; Function hash_map<tree_node*, int>::hash_entry::hash (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry4hashERKS7_, funcdef_no=10067, decl_uid=192977, cgraph_uid=6699, symbol_order=7493)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, int>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.251159;
  hashval_t D.251157;

  <bb 2> :
  _1 = &e->m_key;
  D.251159 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::hash (_1);
  D.251157 = D.251159;

  <bb 3> :
<L0>:
  return D.251157;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10066, decl_uid=193144, cgraph_uid=6698, symbol_order=7492)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.251172;
  bool D.251171;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.543;
  struct value_type * D.251163;
  bool retval.542;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 16;
  slot = _2 + _4;
  D.251171 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.542 = D.251171;
  if (retval.542 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.251163 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 16;
  slot = _8 + _10;
  D.251172 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.543 = D.251172;
  if (retval.543 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.251163 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.251163;

}



;; Function std::move<hash_map<tree_node*, int>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEEONSt16remove_referenceIT_E4typeEOSB_, funcdef_no=10068, decl_uid=235652, cgraph_uid=6700, symbol_order=7494)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, int>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.251173;

  <bb 2> :
  D.251173 = __t;

  <bb 3> :
<L0>:
  return D.251173;

}



;; Function xcallocator<hash_map<tree_node*, int>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEE9data_freeEPS8_, funcdef_no=8586, decl_uid=212855, cgraph_uid=5218, symbol_order=6008)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, int>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE10mark_emptyERS8_, funcdef_no=9368, decl_uid=193162, cgraph_uid=6000, symbol_order=6790)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, int>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, int>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry10mark_emptyERS7_, funcdef_no=10070, decl_uid=192989, cgraph_uid=6702, symbol_order=7496)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, int>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, int>::mark_empty<hash_map<tree_node*, int>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::mark_empty<hash_map<tree_node*, int>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE10mark_emptyIN8hash_mapIS2_iS4_E10hash_entryEEEvRT_, funcdef_no=10586, decl_uid=242150, cgraph_uid=7218, symbol_order=8012)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, int>::mark_empty<hash_map<tree_node*, int>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function std::vector<free_type>::operator[] (_ZNSt6vectorI9free_typeSaIS0_EEixEm, funcdef_no=7689, decl_uid=173144, cgraph_uid=4321, symbol_order=5107)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<free_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.251176;

  <bb 2> :
  _1 = this->D.173491._M_impl.D.172836._M_start;
  _2 = __n * 24;
  D.251176 = _1 + _2;

  <bb 3> :
<L0>:
  return D.251176;

}



;; Function std::vector<free_type>::size (_ZNKSt6vectorI9free_typeSaIS0_EE4sizeEv, funcdef_no=7688, decl_uid=173124, cgraph_uid=4320, symbol_order=5106)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<free_type>::size (const struct vector * const this)
{
  size_type D.251178;

  <bb 2> :
  _1 = this->D.173491._M_impl.D.172836._M_finish;
  _2 = this->D.173491._M_impl.D.172836._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.251178 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.251178;

}



;; Function hash_map<tree_node*, int>::~hash_map (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEED2Ev, funcdef_no=6332, decl_uid=193259, cgraph_uid=3307, symbol_order=4084)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, int>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7693, decl_uid=193205, cgraph_uid=4325, symbol_order=5111)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.251193;
  bool D.251192;
  size_t i;
  bool iftmp.545;
  bool retval.544;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 16;
  _4 = _2 + _3;
  D.251192 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.251192;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 16;
  _9 = _7 + _8;
  D.251193 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.251193;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.545 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.545 = 0;

  <bb 7> :
  retval.544 = iftmp.545;
  if (retval.544 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 16;
  _14 = _12 + _13;
  hash_map<tree_node*, int>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, int>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, int>::hash_entry::remove (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry6removeERS7_, funcdef_no=8585, decl_uid=192982, cgraph_uid=5217, symbol_order=6007)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, int>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, int>::remove<hash_map<tree_node*, int>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::remove<hash_map<tree_node*, int>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE6removeIN8hash_mapIS2_iS4_E10hash_entryEEEvRT_, funcdef_no=9370, decl_uid=223768, cgraph_uid=6002, symbol_order=6792)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, int>::remove<hash_map<tree_node*, int>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  *_2 = {CLOBBER};
  return;

}



;; Function ggc_remove<tree_node*>::remove (_ZN10ggc_removeIP9tree_nodeE6removeERS1_, funcdef_no=10072, decl_uid=85315, cgraph_uid=6704, symbol_order=7498)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ggc_remove<tree_node*>::remove (union tree_node * & D.242154)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::get (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7695, decl_uid=193317, cgraph_uid=4327, symbol_order=5113)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_pthread_detched_array * hash_map<tree_node*, function_pthread_detched_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.251202;
  struct hash_entry & D.251201;
  unsigned int D.251200;
  struct hash_entry & e;
  struct function_pthread_detched_array * iftmp.546;
  struct function_pthread_detched_array * D.251194;

  <bb 2> :
  _1 = &this->m_table;
  D.251200 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::hash (k);
  _2 = D.251200;
  D.251201 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.251201;
  D.251202 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (e);
  _3 = D.251202;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.546 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.546 = &e->m_value;

  <bb 5> :
  D.251194 = iftmp.546;

  <bb 6> :
<L3>:
  return D.251194;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE4hashERKS2_, funcdef_no=8587, decl_uid=193273, cgraph_uid=5219, symbol_order=6009)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::hash (union tree_node * const & h)
{
  hashval_t D.251203;

  <bb 2> :
  D.251203 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.251203;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8588, decl_uid=193460, cgraph_uid=5220, symbol_order=6010)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.251237;
  bool D.251236;
  bool D.251235;
  bool D.251234;
  bool D.251233;
  bool D.251232;
  struct value_type * D.251231;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.550;
  bool retval.549;
  struct value_type & D.251217;
  bool iftmp.548;
  bool retval.547;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 32;
  entry = _5 + _7;
  D.251232 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.251232;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.251233 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.251233;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.251234 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (entry, comparable);
  _11 = D.251234;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.548 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.548 = 0;

  <bb 8> :
  retval.547 = iftmp.548;
  if (retval.547 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.251217 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  entry = _17 + _19;
  D.251235 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.251235;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.251236 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.251236;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.251237 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (entry, comparable);
  _23 = D.251237;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.550 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.550 = 0;

  <bb 18> :
  retval.549 = iftmp.550;
  if (retval.549 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.251217 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.251217;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8964, decl_uid=193556, cgraph_uid=5596, symbol_order=6386)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.251240;
  bool D.251238;

  <bb 2> :
  D.251240 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_empty (v);
  D.251238 = D.251240;

  <bb 3> :
<L0>:
  return D.251238;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8703, decl_uid=193386, cgraph_uid=5335, symbol_order=6125)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.251243;
  bool D.251241;

  <bb 2> :
  D.251243 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (e);
  D.251241 = D.251243;

  <bb 3> :
<L0>:
  return D.251241;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8965, decl_uid=193554, cgraph_uid=5597, symbol_order=6387)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.251246;
  bool D.251244;

  <bb 2> :
  D.251246 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_deleted (v);
  D.251244 = D.251246;

  <bb 3> :
<L0>:
  return D.251244;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9807, decl_uid=193381, cgraph_uid=6439, symbol_order=7229)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.251249;
  bool D.251247;

  <bb 2> :
  D.251249 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_deleted<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (e);
  D.251247 = D.251249;

  <bb 3> :
<L0>:
  return D.251247;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_deleted<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10370, decl_uid=239678, cgraph_uid=7002, symbol_order=7796)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_deleted<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.251250;

  <bb 2> :
  _1 = entry->m_key;
  D.251250 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.251250;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9372, decl_uid=193374, cgraph_uid=6004, symbol_order=6794)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.251254;
  bool D.251252;

  <bb 2> :
  _1 = &a->m_key;
  D.251254 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::equal_keys (_1, b);
  D.251252 = D.251254;

  <bb 3> :
<L0>:
  return D.251252;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE10equal_keysERKS2_S7_, funcdef_no=10075, decl_uid=193275, cgraph_uid=6707, symbol_order=7501)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.251255;

  <bb 2> :
  D.251255 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.251255;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8589, decl_uid=212875, cgraph_uid=5221, symbol_order=6011)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.251257;

  <bb 2> :
  _1 = entry->m_key;
  D.251257 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.251257;

}



;; Function function_pthread_detched_array::function_pthread_detched_array (_ZN30function_pthread_detched_arrayC2ERKS_, funcdef_no=6335, decl_uid=193655, cgraph_uid=3310, symbol_order=4087)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_detched_array::function_pthread_detched_array (struct function_pthread_detched_array * const this, const struct function_pthread_detched_array & D.193657)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->pthread_detched_array;
  _2 = &D.193657->pthread_detched_array;
  std::vector<pthread_detched_type>::vector (_1, _2);
  return;

}



;; Function std::vector<pthread_detched_type>::vector (_ZNSt6vectorI20pthread_detched_typeSaIS0_EEC2ERKS2_, funcdef_no=7697, decl_uid=177676, cgraph_uid=4329, symbol_order=5115)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<pthread_detched_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct pthread_detched_type * D.251263;
  struct __normal_iterator D.251260;
  struct __normal_iterator D.251259;
  struct allocator D.212990;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.177713;
  _2 = &__x->D.177713;
  _3 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_2);
  D.212990 = __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<pthread_detched_type>::size (__x);
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_1, _4, &D.212990);

  <bb 3> :
  std::allocator<pthread_detched_type>::~allocator (&D.212990);
  D.212990 = {CLOBBER};
  _5 = &this->D.177713;
  _6 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.177713._M_impl.D.177058._M_start;
  D.251259 = std::vector<pthread_detched_type>::end (__x);
  D.251260 = std::vector<pthread_detched_type>::begin (__x);
  D.251263 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*, pthread_detched_type> (D.251260, D.251259, _7, _6);

  <bb 4> :
  _8 = D.251263;
  this->D.177713._M_impl.D.177058._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<pthread_detched_type>::~allocator (&D.212990);
  resx 2

  <bb 6> :
<L1>:
  D.212990 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.177713;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI20pthread_detched_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8591, decl_uid=176948, cgraph_uid=5223, symbol_order=6013)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.251265;

  <bb 2> :
  D.251265 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.251265;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI20pthread_detched_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=8590, decl_uid=176920, cgraph_uid=5222, symbol_order=6012)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<pthread_detched_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<pthread_detched_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI20pthread_detched_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9373, decl_uid=176885, cgraph_uid=6005, symbol_order=6795)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<pthread_detched_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<pthread_detched_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<pthread_detched_type>::allocator (_ZNSaI20pthread_detched_typeEC2ERKS0_, funcdef_no=10077, decl_uid=176828, cgraph_uid=6709, symbol_order=7503)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_detched_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeEC2ERKS2_, funcdef_no=10594, decl_uid=176757, cgraph_uid=7226, symbol_order=8020)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.176759)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EEC2EmRKS1_, funcdef_no=8593, decl_uid=177145, cgraph_uid=5225, symbol_order=6015)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9375, decl_uid=177050, cgraph_uid=6007, symbol_order=6797)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<pthread_detched_type>::allocator (this, __a);
  _1 = &this->D.177058;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8680, decl_uid=177005, cgraph_uid=5312, symbol_order=6102)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_create_storage (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9377, decl_uid=177069, cgraph_uid=6009, symbol_order=6799)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct pthread_detched_type * D.251272;

  <bb 2> :
  D.251272 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_allocate (this, __n);
  _1 = D.251272;
  this->_M_impl.D.177058._M_start = _1;
  _2 = this->_M_impl.D.177058._M_start;
  this->_M_impl.D.177058._M_finish = _2;
  _3 = this->_M_impl.D.177058._M_start;
  _4 = __n * 16;
  _5 = _3 + _4;
  this->_M_impl.D.177058._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_allocate (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE11_M_allocateEm, funcdef_no=9497, decl_uid=177062, cgraph_uid=6129, symbol_order=6919)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct pthread_detched_type * std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct pthread_detched_type * D.251279;
  struct pthread_detched_type * iftmp.551;
  struct pthread_detched_type * D.251273;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.251279 = std::allocator_traits<std::allocator<pthread_detched_type> >::allocate (_1, __n);
  iftmp.551 = D.251279;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.551 = 0B;

  <bb 5> :
  D.251273 = iftmp.551;

  <bb 6> :
<L3>:
  return D.251273;

}



;; Function std::allocator_traits<std::allocator<pthread_detched_type> >::allocate (_ZNSt16allocator_traitsISaI20pthread_detched_typeEE8allocateERS1_m, funcdef_no=10154, decl_uid=176863, cgraph_uid=6786, symbol_order=7580)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct pthread_detched_type * std::allocator_traits<std::allocator<pthread_detched_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct pthread_detched_type * D.251282;
  struct pthread_detched_type * D.251280;

  <bb 2> :
  D.251282 = __gnu_cxx::new_allocator<pthread_detched_type>::allocate (__a, __n, 0B);
  D.251280 = D.251282;

  <bb 3> :
<L0>:
  return D.251280;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::allocate (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeE8allocateEmPKv, funcdef_no=10645, decl_uid=176717, cgraph_uid=7278, symbol_order=8072)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct pthread_detched_type * __gnu_cxx::new_allocator<pthread_detched_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.245820)
{
  struct pthread_detched_type * D.251293;
  struct pthread_detched_type * D.251292;
  align_val_t __al;
  struct pthread_detched_type * D.251290;
  bool retval.552;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<pthread_detched_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.552 = _4 != 0;
  if (retval.552 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 1152921504606846975)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 16;
  D.251293 = operator new (_6);
  D.251290 = D.251293;

  <bb 7> :
<L6>:
  return D.251290;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI20pthread_detched_typeE11_M_max_sizeEv, funcdef_no=10646, decl_uid=176744, cgraph_uid=7277, symbol_order=8071)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<pthread_detched_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.251294;

  <bb 2> :
  D.251294 = 576460752303423487;

  <bb 3> :
<L0>:
  return D.251294;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6383, decl_uid=177105, cgraph_uid=3355, symbol_order=4132)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<pthread_detched_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<pthread_detched_type>::~allocator (_ZNSaI20pthread_detched_typeED2Ev, funcdef_no=7751, decl_uid=176838, cgraph_uid=4383, symbol_order=5169)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_detched_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_detched_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeED2Ev, funcdef_no=8683, decl_uid=176767, cgraph_uid=5315, symbol_order=6105)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_detched_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8597, decl_uid=176946, cgraph_uid=5229, symbol_order=6019)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.251296;

  <bb 2> :
  D.251296 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.251296;

}



;; Function std::vector<pthread_detched_type>::end (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE3endEv, funcdef_no=8596, decl_uid=177328, cgraph_uid=5228, symbol_order=6018)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<pthread_detched_type>::end (const struct vector * const this)
{
  struct const_iterator D.223816;
  struct const_iterator D.251298;

  <bb 2> :
  _1 = &this->D.177713._M_impl.D.177058._M_finish;
  __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (&D.223816, _1);
  D.251298 = D.223816;
  D.223816 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251298;

}



;; Function __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9379, decl_uid=212959, cgraph_uid=6011, symbol_order=6801)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (struct __normal_iterator * const this, const struct pthread_detched_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<pthread_detched_type>::begin (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE5beginEv, funcdef_no=8595, decl_uid=177324, cgraph_uid=5227, symbol_order=6017)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<pthread_detched_type>::begin (const struct vector * const this)
{
  struct const_iterator D.223814;
  struct const_iterator D.251301;

  <bb 2> :
  _1 = &this->D.177713._M_impl.D.177058._M_start;
  __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (&D.223814, _1);
  D.251301 = D.223814;
  D.223814 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251301;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*, pthread_detched_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8598, decl_uid=212979, cgraph_uid=5230, symbol_order=6020)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*, pthread_detched_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_detched_type * __result, struct allocator & D.223821)
{
  struct pthread_detched_type * D.251306;
  struct pthread_detched_type * D.251304;

  <bb 2> :
  D.251306 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (__first, __last, __result);
  D.251304 = D.251306;

  <bb 3> :
<L0>:
  return D.251304;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9381, decl_uid=223823, cgraph_uid=6014, symbol_order=6804)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.251309;
  const bool __assignable;
  struct pthread_detched_type * D.251307;

  <bb 2> :
  __assignable = 1;
  D.251309 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (__first, __last, __result);
  D.251307 = D.251309;

  <bb 3> :
<L0>:
  return D.251307;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10079, decl_uid=235830, cgraph_uid=6711, symbol_order=7505)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.251312;
  struct pthread_detched_type * D.251310;

  <bb 2> :
  D.251312 = std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (__first, __last, __result);
  D.251310 = D.251312;

  <bb 3> :
<L0>:
  return D.251310;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10596, decl_uid=242183, cgraph_uid=7228, symbol_order=8022)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.251317;
  struct __normal_iterator D.251315;
  struct __normal_iterator D.251314;
  struct pthread_detched_type * D.251313;

  <bb 2> :
  D.251314 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (__last);
  D.251315 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (__first);
  D.251317 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (D.251315, D.251314, __result);
  D.251313 = D.251317;

  <bb 3> :
<L0>:
  return D.251313;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9501, decl_uid=226433, cgraph_uid=6133, symbol_order=6923)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.251318;

  <bb 2> :
  D.251318 = __it;

  <bb 3> :
<L0>:
  return D.251318;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEPS2_ET1_T0_SB_SA_, funcdef_no=10869, decl_uid=245593, cgraph_uid=7501, symbol_order=8297)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.251322;
  struct pthread_detched_type * D.251320;

  <bb 2> :
  __result.553_1 = __result;
  _2 = std::__niter_base<pthread_detched_type*> (__result.553_1);
  _3 = std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (__last);
  _4 = std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (__first);
  D.251322 = std::__copy_move_a1<false, const pthread_detched_type*, pthread_detched_type*> (_4, _3, _2);
  _5 = D.251322;
  D.251320 = std::__niter_wrap<pthread_detched_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.251320;

}



;; Function std::__niter_base<pthread_detched_type*> (_ZSt12__niter_baseIP20pthread_detched_typeET_S2_, funcdef_no=10160, decl_uid=226699, cgraph_uid=6792, symbol_order=7586)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__niter_base<pthread_detched_type*> (struct pthread_detched_type * __it)
{
  struct pthread_detched_type * D.251323;

  <bb 2> :
  D.251323 = __it;

  <bb 3> :
<L0>:
  return D.251323;

}



;; Function std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (_ZSt12__niter_baseIPK20pthread_detched_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10155, decl_uid=236906, cgraph_uid=6787, symbol_order=7581)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct pthread_detched_type * std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (struct __normal_iterator __it)
{
  const struct pthread_detched_type * D.251325;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::base (&__it);
  D.251325 = *_1;

  <bb 3> :
<L0>:
  return D.251325;

}



;; Function __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10647, decl_uid=212946, cgraph_uid=7279, symbol_order=8073)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct pthread_detched_type * const & __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::base (const struct __normal_iterator * const this)
{
  const struct pthread_detched_type * const & D.251327;

  <bb 2> :
  D.251327 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.251327;

}



;; Function std::__copy_move_a1<false, const pthread_detched_type*, pthread_detched_type*> (_ZSt14__copy_move_a1ILb0EPK20pthread_detched_typePS0_ET1_T0_S5_S4_, funcdef_no=10157, decl_uid=237060, cgraph_uid=6789, symbol_order=7583)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a1<false, const pthread_detched_type*, pthread_detched_type*> (const struct pthread_detched_type * __first, const struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.251331;
  struct pthread_detched_type * D.251329;

  <bb 2> :
  D.251331 = std::__copy_move_a2<false, const pthread_detched_type*, pthread_detched_type*> (__first, __last, __result);
  D.251329 = D.251331;

  <bb 3> :
<L0>:
  return D.251329;

}



;; Function std::__copy_move_a2<false, const pthread_detched_type*, pthread_detched_type*> (_ZSt14__copy_move_a2ILb0EPK20pthread_detched_typePS0_ET1_T0_S5_S4_, funcdef_no=10648, decl_uid=242516, cgraph_uid=7280, symbol_order=8074)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a2<false, const pthread_detched_type*, pthread_detched_type*> (const struct pthread_detched_type * __first, const struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.251332;

  <bb 2> :
  D.251332 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_detched_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.251332;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_detched_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI20pthread_detched_typeEEPT_PKS4_S7_S5_, funcdef_no=10884, decl_uid=245843, cgraph_uid=7516, symbol_order=8312)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct pthread_detched_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_detched_type> (const struct pthread_detched_type * __first, const struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  const ptrdiff_t _Num;
  struct pthread_detched_type * D.251337;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 16;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.554_2 = (long unsigned int) _Num;
  _3 = _Num.554_2 * 16;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.555_4 = (long unsigned int) _Num;
  _5 = _Num.555_4 * 16;
  D.251337 = __result + _5;

  <bb 5> :
<L3>:
  return D.251337;

}



;; Function std::__niter_wrap<pthread_detched_type*> (_ZSt12__niter_wrapIP20pthread_detched_typeET_RKS2_S2_, funcdef_no=10162, decl_uid=237103, cgraph_uid=6794, symbol_order=7588)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__niter_wrap<pthread_detched_type*> (struct pthread_detched_type * const & D.242538, struct pthread_detched_type * __res)
{
  struct pthread_detched_type * D.251339;

  <bb 2> :
  D.251339 = __res;

  <bb 3> :
<L0>:
  return D.251339;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::~_Vector_base (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EED2Ev, funcdef_no=7754, decl_uid=177168, cgraph_uid=4386, symbol_order=5172)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.177058._M_end_of_storage;
  _2 = this->_M_impl.D.177058._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.177058._M_start;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8685, decl_uid=177065, cgraph_uid=5317, symbol_order=6107)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (struct _Vector_base * const this, struct pthread_detched_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<pthread_detched_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<pthread_detched_type> >::deallocate (_ZNSt16allocator_traitsISaI20pthread_detched_typeEE10deallocateERS1_PS0_m, funcdef_no=9495, decl_uid=176870, cgraph_uid=6127, symbol_order=6917)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<pthread_detched_type> >::deallocate (struct allocator_type & __a, struct pthread_detched_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_detched_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeE10deallocateEPS1_m, funcdef_no=10153, decl_uid=176721, cgraph_uid=6785, symbol_order=7579)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<pthread_detched_type>::deallocate (struct new_allocator * const this, struct pthread_detched_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 16;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<pthread_detched_type>::operator[] (_ZNSt6vectorI20pthread_detched_typeSaIS0_EEixEm, funcdef_no=7703, decl_uid=177366, cgraph_uid=4335, symbol_order=5121)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<pthread_detched_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.251347;

  <bb 2> :
  _1 = this->D.177713._M_impl.D.177058._M_start;
  _2 = __n * 16;
  D.251347 = _1 + _2;

  <bb 3> :
<L0>:
  return D.251347;

}



;; Function std::vector<pthread_detched_type>::size (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE4sizeEv, funcdef_no=7702, decl_uid=177346, cgraph_uid=4334, symbol_order=5120)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_detched_type>::size (const struct vector * const this)
{
  size_type D.251349;

  <bb 2> :
  _1 = this->D.177713._M_impl.D.177058._M_finish;
  _2 = this->D.177713._M_impl.D.177058._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.251349 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.251349;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::get (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7704, decl_uid=193793, cgraph_uid=4336, symbol_order=5122)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_pthread_exit_array * hash_map<tree_node*, function_pthread_exit_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.251359;
  struct hash_entry & D.251358;
  unsigned int D.251357;
  struct hash_entry & e;
  struct function_pthread_exit_array * iftmp.556;
  struct function_pthread_exit_array * D.251351;

  <bb 2> :
  _1 = &this->m_table;
  D.251357 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::hash (k);
  _2 = D.251357;
  D.251358 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.251358;
  D.251359 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (e);
  _3 = D.251359;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.556 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.556 = &e->m_value;

  <bb 5> :
  D.251351 = iftmp.556;

  <bb 6> :
<L3>:
  return D.251351;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE4hashERKS2_, funcdef_no=8600, decl_uid=193749, cgraph_uid=5232, symbol_order=6022)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::hash (union tree_node * const & h)
{
  hashval_t D.251360;

  <bb 2> :
  D.251360 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.251360;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8601, decl_uid=193936, cgraph_uid=5233, symbol_order=6023)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.251394;
  bool D.251393;
  bool D.251392;
  bool D.251391;
  bool D.251390;
  bool D.251389;
  struct value_type * D.251388;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.560;
  bool retval.559;
  struct value_type & D.251374;
  bool iftmp.558;
  bool retval.557;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 32;
  entry = _5 + _7;
  D.251389 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.251389;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.251390 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.251390;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.251391 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (entry, comparable);
  _11 = D.251391;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.558 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.558 = 0;

  <bb 8> :
  retval.557 = iftmp.558;
  if (retval.557 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.251374 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  entry = _17 + _19;
  D.251392 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.251392;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.251393 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.251393;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.251394 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (entry, comparable);
  _23 = D.251394;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.560 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.560 = 0;

  <bb 18> :
  retval.559 = iftmp.560;
  if (retval.559 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.251374 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.251374;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8968, decl_uid=194032, cgraph_uid=5600, symbol_order=6390)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.251397;
  bool D.251395;

  <bb 2> :
  D.251397 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_empty (v);
  D.251395 = D.251397;

  <bb 3> :
<L0>:
  return D.251395;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8731, decl_uid=193862, cgraph_uid=5363, symbol_order=6153)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.251400;
  bool D.251398;

  <bb 2> :
  D.251400 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (e);
  D.251398 = D.251400;

  <bb 3> :
<L0>:
  return D.251398;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8969, decl_uid=194030, cgraph_uid=5601, symbol_order=6391)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.251403;
  bool D.251401;

  <bb 2> :
  D.251403 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_deleted (v);
  D.251401 = D.251403;

  <bb 3> :
<L0>:
  return D.251401;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9809, decl_uid=193857, cgraph_uid=6441, symbol_order=7231)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.251406;
  bool D.251404;

  <bb 2> :
  D.251406 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_deleted<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (e);
  D.251404 = D.251406;

  <bb 3> :
<L0>:
  return D.251404;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_deleted<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10371, decl_uid=239684, cgraph_uid=7003, symbol_order=7797)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_deleted<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.251407;

  <bb 2> :
  _1 = entry->m_key;
  D.251407 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.251407;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9385, decl_uid=193850, cgraph_uid=6017, symbol_order=6807)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.251411;
  bool D.251409;

  <bb 2> :
  _1 = &a->m_key;
  D.251411 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::equal_keys (_1, b);
  D.251409 = D.251411;

  <bb 3> :
<L0>:
  return D.251409;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE10equal_keysERKS2_S7_, funcdef_no=10083, decl_uid=193751, cgraph_uid=6715, symbol_order=7509)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.251412;

  <bb 2> :
  D.251412 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.251412;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8602, decl_uid=213015, cgraph_uid=5234, symbol_order=6024)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.251414;

  <bb 2> :
  _1 = entry->m_key;
  D.251414 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.251414;

}



;; Function function_pthread_exit_array::function_pthread_exit_array (_ZN27function_pthread_exit_arrayC2ERKS_, funcdef_no=6341, decl_uid=194131, cgraph_uid=3316, symbol_order=4093)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_exit_array::function_pthread_exit_array (struct function_pthread_exit_array * const this, const struct function_pthread_exit_array & D.194133)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->pthread_exit_array;
  _2 = &D.194133->pthread_exit_array;
  std::vector<pthread_exit_type>::vector (_1, _2);
  return;

}



;; Function std::vector<pthread_exit_type>::vector (_ZNSt6vectorI17pthread_exit_typeSaIS0_EEC2ERKS2_, funcdef_no=7706, decl_uid=178721, cgraph_uid=4338, symbol_order=5124)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<pthread_exit_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct pthread_exit_type * D.251420;
  struct __normal_iterator D.251417;
  struct __normal_iterator D.251416;
  struct allocator D.213130;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.178758;
  _2 = &__x->D.178758;
  _3 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_2);
  D.213130 = __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<pthread_exit_type>::size (__x);
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_1, _4, &D.213130);

  <bb 3> :
  std::allocator<pthread_exit_type>::~allocator (&D.213130);
  D.213130 = {CLOBBER};
  _5 = &this->D.178758;
  _6 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.178758._M_impl.D.178103._M_start;
  D.251416 = std::vector<pthread_exit_type>::end (__x);
  D.251417 = std::vector<pthread_exit_type>::begin (__x);
  D.251420 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*, pthread_exit_type> (D.251417, D.251416, _7, _6);

  <bb 4> :
  _8 = D.251420;
  this->D.178758._M_impl.D.178103._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<pthread_exit_type>::~allocator (&D.213130);
  resx 2

  <bb 6> :
<L1>:
  D.213130 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.178758;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI17pthread_exit_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8604, decl_uid=177993, cgraph_uid=5236, symbol_order=6026)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.251422;

  <bb 2> :
  D.251422 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.251422;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI17pthread_exit_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=8603, decl_uid=177965, cgraph_uid=5235, symbol_order=6025)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<pthread_exit_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<pthread_exit_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI17pthread_exit_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9386, decl_uid=177930, cgraph_uid=6018, symbol_order=6808)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<pthread_exit_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<pthread_exit_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<pthread_exit_type>::allocator (_ZNSaI17pthread_exit_typeEC2ERKS0_, funcdef_no=10085, decl_uid=177873, cgraph_uid=6717, symbol_order=7511)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_exit_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeEC2ERKS2_, funcdef_no=10603, decl_uid=177802, cgraph_uid=7235, symbol_order=8029)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.177804)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EEC2EmRKS1_, funcdef_no=8606, decl_uid=178190, cgraph_uid=5238, symbol_order=6028)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9388, decl_uid=178095, cgraph_uid=6020, symbol_order=6810)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<pthread_exit_type>::allocator (this, __a);
  _1 = &this->D.178103;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8708, decl_uid=178050, cgraph_uid=5340, symbol_order=6130)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_create_storage (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9390, decl_uid=178114, cgraph_uid=6022, symbol_order=6812)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct pthread_exit_type * D.251429;

  <bb 2> :
  D.251429 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_allocate (this, __n);
  _1 = D.251429;
  this->_M_impl.D.178103._M_start = _1;
  _2 = this->_M_impl.D.178103._M_start;
  this->_M_impl.D.178103._M_finish = _2;
  _3 = this->_M_impl.D.178103._M_start;
  _4 = __n * 16;
  _5 = _3 + _4;
  this->_M_impl.D.178103._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_allocate (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE11_M_allocateEm, funcdef_no=9534, decl_uid=178107, cgraph_uid=6166, symbol_order=6956)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct pthread_exit_type * std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct pthread_exit_type * D.251436;
  struct pthread_exit_type * iftmp.561;
  struct pthread_exit_type * D.251430;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.251436 = std::allocator_traits<std::allocator<pthread_exit_type> >::allocate (_1, __n);
  iftmp.561 = D.251436;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.561 = 0B;

  <bb 5> :
  D.251430 = iftmp.561;

  <bb 6> :
<L3>:
  return D.251430;

}



;; Function std::allocator_traits<std::allocator<pthread_exit_type> >::allocate (_ZNSt16allocator_traitsISaI17pthread_exit_typeEE8allocateERS1_m, funcdef_no=10178, decl_uid=177908, cgraph_uid=6810, symbol_order=7604)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct pthread_exit_type * std::allocator_traits<std::allocator<pthread_exit_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct pthread_exit_type * D.251439;
  struct pthread_exit_type * D.251437;

  <bb 2> :
  D.251439 = __gnu_cxx::new_allocator<pthread_exit_type>::allocate (__a, __n, 0B);
  D.251437 = D.251439;

  <bb 3> :
<L0>:
  return D.251437;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::allocate (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeE8allocateEmPKv, funcdef_no=10658, decl_uid=177762, cgraph_uid=7291, symbol_order=8085)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct pthread_exit_type * __gnu_cxx::new_allocator<pthread_exit_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.245881)
{
  struct pthread_exit_type * D.251450;
  struct pthread_exit_type * D.251449;
  align_val_t __al;
  struct pthread_exit_type * D.251447;
  bool retval.562;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<pthread_exit_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.562 = _4 != 0;
  if (retval.562 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 1152921504606846975)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 16;
  D.251450 = operator new (_6);
  D.251447 = D.251450;

  <bb 7> :
<L6>:
  return D.251447;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI17pthread_exit_typeE11_M_max_sizeEv, funcdef_no=10659, decl_uid=177789, cgraph_uid=7290, symbol_order=8084)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<pthread_exit_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.251451;

  <bb 2> :
  D.251451 = 576460752303423487;

  <bb 3> :
<L0>:
  return D.251451;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6397, decl_uid=178150, cgraph_uid=3369, symbol_order=4146)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<pthread_exit_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<pthread_exit_type>::~allocator (_ZNSaI17pthread_exit_typeED2Ev, funcdef_no=7766, decl_uid=177883, cgraph_uid=4398, symbol_order=5184)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_exit_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_exit_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeED2Ev, funcdef_no=8711, decl_uid=177812, cgraph_uid=5343, symbol_order=6133)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_exit_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8610, decl_uid=177991, cgraph_uid=5242, symbol_order=6032)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.251453;

  <bb 2> :
  D.251453 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.251453;

}



;; Function std::vector<pthread_exit_type>::end (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE3endEv, funcdef_no=8609, decl_uid=178373, cgraph_uid=5241, symbol_order=6031)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<pthread_exit_type>::end (const struct vector * const this)
{
  struct const_iterator D.223891;
  struct const_iterator D.251455;

  <bb 2> :
  _1 = &this->D.178758._M_impl.D.178103._M_finish;
  __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (&D.223891, _1);
  D.251455 = D.223891;
  D.223891 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251455;

}



;; Function __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9392, decl_uid=213099, cgraph_uid=6024, symbol_order=6814)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (struct __normal_iterator * const this, const struct pthread_exit_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<pthread_exit_type>::begin (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE5beginEv, funcdef_no=8608, decl_uid=178369, cgraph_uid=5240, symbol_order=6030)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<pthread_exit_type>::begin (const struct vector * const this)
{
  struct const_iterator D.223889;
  struct const_iterator D.251458;

  <bb 2> :
  _1 = &this->D.178758._M_impl.D.178103._M_start;
  __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (&D.223889, _1);
  D.251458 = D.223889;
  D.223889 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251458;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*, pthread_exit_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8611, decl_uid=213119, cgraph_uid=5243, symbol_order=6033)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*, pthread_exit_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_exit_type * __result, struct allocator & D.223896)
{
  struct pthread_exit_type * D.251463;
  struct pthread_exit_type * D.251461;

  <bb 2> :
  D.251463 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (__first, __last, __result);
  D.251461 = D.251463;

  <bb 3> :
<L0>:
  return D.251461;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9394, decl_uid=223898, cgraph_uid=6027, symbol_order=6817)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251466;
  const bool __assignable;
  struct pthread_exit_type * D.251464;

  <bb 2> :
  __assignable = 1;
  D.251466 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (__first, __last, __result);
  D.251464 = D.251466;

  <bb 3> :
<L0>:
  return D.251464;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10087, decl_uid=235999, cgraph_uid=6719, symbol_order=7513)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251469;
  struct pthread_exit_type * D.251467;

  <bb 2> :
  D.251469 = std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (__first, __last, __result);
  D.251467 = D.251469;

  <bb 3> :
<L0>:
  return D.251467;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10605, decl_uid=242219, cgraph_uid=7237, symbol_order=8031)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251474;
  struct __normal_iterator D.251472;
  struct __normal_iterator D.251471;
  struct pthread_exit_type * D.251470;

  <bb 2> :
  D.251471 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (__last);
  D.251472 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (__first);
  D.251474 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (D.251472, D.251471, __result);
  D.251470 = D.251474;

  <bb 3> :
<L0>:
  return D.251470;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9538, decl_uid=227139, cgraph_uid=6170, symbol_order=6960)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.251475;

  <bb 2> :
  D.251475 = __it;

  <bb 3> :
<L0>:
  return D.251475;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEPS2_ET1_T0_SB_SA_, funcdef_no=10870, decl_uid=245628, cgraph_uid=7502, symbol_order=8298)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251479;
  struct pthread_exit_type * D.251477;

  <bb 2> :
  __result.563_1 = __result;
  _2 = std::__niter_base<pthread_exit_type*> (__result.563_1);
  _3 = std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (__last);
  _4 = std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (__first);
  D.251479 = std::__copy_move_a1<false, const pthread_exit_type*, pthread_exit_type*> (_4, _3, _2);
  _5 = D.251479;
  D.251477 = std::__niter_wrap<pthread_exit_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.251477;

}



;; Function std::__niter_base<pthread_exit_type*> (_ZSt12__niter_baseIP17pthread_exit_typeET_S2_, funcdef_no=10184, decl_uid=227405, cgraph_uid=6816, symbol_order=7610)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__niter_base<pthread_exit_type*> (struct pthread_exit_type * __it)
{
  struct pthread_exit_type * D.251480;

  <bb 2> :
  D.251480 = __it;

  <bb 3> :
<L0>:
  return D.251480;

}



;; Function std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (_ZSt12__niter_baseIPK17pthread_exit_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10179, decl_uid=237262, cgraph_uid=6811, symbol_order=7605)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct pthread_exit_type * std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (struct __normal_iterator __it)
{
  const struct pthread_exit_type * D.251482;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::base (&__it);
  D.251482 = *_1;

  <bb 3> :
<L0>:
  return D.251482;

}



;; Function __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10660, decl_uid=213086, cgraph_uid=7292, symbol_order=8086)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct pthread_exit_type * const & __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::base (const struct __normal_iterator * const this)
{
  const struct pthread_exit_type * const & D.251484;

  <bb 2> :
  D.251484 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.251484;

}



;; Function std::__copy_move_a1<false, const pthread_exit_type*, pthread_exit_type*> (_ZSt14__copy_move_a1ILb0EPK17pthread_exit_typePS0_ET1_T0_S5_S4_, funcdef_no=10181, decl_uid=237416, cgraph_uid=6813, symbol_order=7607)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a1<false, const pthread_exit_type*, pthread_exit_type*> (const struct pthread_exit_type * __first, const struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251488;
  struct pthread_exit_type * D.251486;

  <bb 2> :
  D.251488 = std::__copy_move_a2<false, const pthread_exit_type*, pthread_exit_type*> (__first, __last, __result);
  D.251486 = D.251488;

  <bb 3> :
<L0>:
  return D.251486;

}



;; Function std::__copy_move_a2<false, const pthread_exit_type*, pthread_exit_type*> (_ZSt14__copy_move_a2ILb0EPK17pthread_exit_typePS0_ET1_T0_S5_S4_, funcdef_no=10661, decl_uid=242611, cgraph_uid=7293, symbol_order=8087)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a2<false, const pthread_exit_type*, pthread_exit_type*> (const struct pthread_exit_type * __first, const struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251489;

  <bb 2> :
  D.251489 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_exit_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.251489;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_exit_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI17pthread_exit_typeEEPT_PKS4_S7_S5_, funcdef_no=10887, decl_uid=245904, cgraph_uid=7519, symbol_order=8315)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct pthread_exit_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_exit_type> (const struct pthread_exit_type * __first, const struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  const ptrdiff_t _Num;
  struct pthread_exit_type * D.251494;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 16;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.564_2 = (long unsigned int) _Num;
  _3 = _Num.564_2 * 16;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.565_4 = (long unsigned int) _Num;
  _5 = _Num.565_4 * 16;
  D.251494 = __result + _5;

  <bb 5> :
<L3>:
  return D.251494;

}



;; Function std::__niter_wrap<pthread_exit_type*> (_ZSt12__niter_wrapIP17pthread_exit_typeET_RKS2_S2_, funcdef_no=10186, decl_uid=237459, cgraph_uid=6818, symbol_order=7612)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__niter_wrap<pthread_exit_type*> (struct pthread_exit_type * const & D.242633, struct pthread_exit_type * __res)
{
  struct pthread_exit_type * D.251496;

  <bb 2> :
  D.251496 = __res;

  <bb 3> :
<L0>:
  return D.251496;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::~_Vector_base (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EED2Ev, funcdef_no=7769, decl_uid=178213, cgraph_uid=4401, symbol_order=5187)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.178103._M_end_of_storage;
  _2 = this->_M_impl.D.178103._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.178103._M_start;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8713, decl_uid=178110, cgraph_uid=5345, symbol_order=6135)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (struct _Vector_base * const this, struct pthread_exit_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<pthread_exit_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<pthread_exit_type> >::deallocate (_ZNSt16allocator_traitsISaI17pthread_exit_typeEE10deallocateERS1_PS0_m, funcdef_no=9532, decl_uid=177915, cgraph_uid=6164, symbol_order=6954)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<pthread_exit_type> >::deallocate (struct allocator_type & __a, struct pthread_exit_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_exit_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeE10deallocateEPS1_m, funcdef_no=10177, decl_uid=177766, cgraph_uid=6809, symbol_order=7603)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<pthread_exit_type>::deallocate (struct new_allocator * const this, struct pthread_exit_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 16;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<pthread_exit_type>::operator[] (_ZNSt6vectorI17pthread_exit_typeSaIS0_EEixEm, funcdef_no=7712, decl_uid=178411, cgraph_uid=4344, symbol_order=5130)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<pthread_exit_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.251504;

  <bb 2> :
  _1 = this->D.178758._M_impl.D.178103._M_start;
  _2 = __n * 16;
  D.251504 = _1 + _2;

  <bb 3> :
<L0>:
  return D.251504;

}



;; Function std::vector<pthread_exit_type>::size (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE4sizeEv, funcdef_no=7711, decl_uid=178391, cgraph_uid=4343, symbol_order=5129)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_exit_type>::size (const struct vector * const this)
{
  size_type D.251506;

  <bb 2> :
  _1 = this->D.178758._M_impl.D.178103._M_finish;
  _2 = this->D.178758._M_impl.D.178103._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.251506 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.251506;

}



;; Function std::vector<tree_node*>::operator[] (_ZNSt6vectorIP9tree_nodeSaIS1_EEixEm, funcdef_no=7715, decl_uid=184550, cgraph_uid=4347, symbol_order=5133)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * & std::vector<tree_node*>::operator[] (struct vector * const this, size_type __n)
{
  union tree_node * & D.251508;

  <bb 2> :
  _1 = this->D.184897._M_impl.D.184253._M_start;
  _2 = __n * 8;
  D.251508 = _1 + _2;

  <bb 3> :
<L0>:
  return D.251508;

}



;; Function std::vector<tree_node*>::size (_ZNKSt6vectorIP9tree_nodeSaIS1_EE4sizeEv, funcdef_no=7714, decl_uid=184530, cgraph_uid=4346, symbol_order=5132)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<tree_node*>::size (const struct vector * const this)
{
  size_type D.251510;

  <bb 2> :
  _1 = this->D.184897._M_impl.D.184253._M_finish;
  _2 = this->D.184897._M_impl.D.184253._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  D.251510 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.251510;

}



;; Function function_return_array::function_return_array (_ZN21function_return_arrayC2Ev, funcdef_no=6347, decl_uid=189931, cgraph_uid=3322, symbol_order=4099)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_return_array::function_return_array (struct function_return_array * const this)
{
  <bb 2> :
  this->return_type_num = 0;
  this->pthread_type_num = -1;
  _1 = &this->return_type_array;
  std::vector<return_type>::vector (_1);
  return;

}



;; Function std::vector<return_type>::vector (_ZNSt6vectorI11return_typeSaIS0_EEC2Ev, funcdef_no=6221, decl_uid=174550, cgraph_uid=3197, symbol_order=3957)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<return_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.174558;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_ZNSt12_Vector_baseI11return_typeSaIS0_EEC2Ev, funcdef_no=6219, decl_uid=174008, cgraph_uid=3194, symbol_order=3954)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11return_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7588, decl_uid=173900, cgraph_uid=4220, symbol_order=5006)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<return_type>::allocator (this);
  _1 = &this->D.173903;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<return_type>::allocator (_ZNSaI11return_typeEC2Ev, funcdef_no=8418, decl_uid=173678, cgraph_uid=5050, symbol_order=5840)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<return_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<return_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11return_typeEC2Ev, funcdef_no=9217, decl_uid=173607, cgraph_uid=5849, symbol_order=6639)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<return_type>::operator= (_ZNSt6vectorI11return_typeSaIS0_EEaSERKS2_, funcdef_no=7716, decl_uid=174136, cgraph_uid=4350, symbol_order=5136)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<return_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct return_type * D.251545;
  struct return_type * __tmp;
  const size_type __xlen;
  struct vector & D.251543;
  struct __normal_iterator D.251540;
  struct __normal_iterator D.251539;
  struct __normal_iterator D.251538;
  struct __normal_iterator D.251537;
  struct __normal_iterator D.251536;
  bool retval.570;
  struct __normal_iterator D.251531;
  struct __normal_iterator D.251530;
  bool retval.569;
  bool iftmp.568;
  bool retval.567;
  bool retval.566;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.566 = __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_propagate_on_copy_assign ();
  if (retval.566 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.174558;
  _4 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.174558;
  _6 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.568 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.568 = 0;

  <bb 8> :
  retval.567 = iftmp.568;
  if (retval.567 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<return_type>::clear (this);
  _8 = &this->D.174558;
  _9 = this->D.174558._M_impl.D.173903._M_end_of_storage;
  _10 = this->D.174558._M_impl.D.173903._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 24;
  _13 = (long unsigned int) _12;
  _14 = this->D.174558._M_impl.D.173903._M_start;
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (_8, _14, _13);
  this->D.174558._M_impl.D.173903._M_start = 0B;
  this->D.174558._M_impl.D.173903._M_finish = 0B;
  this->D.174558._M_impl.D.173903._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.174558;
  _16 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.174558;
  _18 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<return_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<return_type>::size (__x);
  _19 = std::vector<return_type>::capacity (this);
  retval.569 = __xlen > _19;
  if (retval.569 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.251530 = std::vector<return_type>::end (__x);
  D.251531 = std::vector<return_type>::begin (__x);
  D.251545 = std::vector<return_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (this, __xlen, D.251531, D.251530);
  __tmp = D.251545;
  _20 = &this->D.174558;
  _21 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.174558._M_impl.D.173903._M_finish;
  _23 = this->D.174558._M_impl.D.173903._M_start;
  std::_Destroy<return_type*, return_type> (_23, _22, _21);
  _24 = &this->D.174558;
  _25 = this->D.174558._M_impl.D.173903._M_end_of_storage;
  _26 = this->D.174558._M_impl.D.173903._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 24;
  _29 = (long unsigned int) _28;
  _30 = this->D.174558._M_impl.D.173903._M_start;
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (_24, _30, _29);
  this->D.174558._M_impl.D.173903._M_start = __tmp;
  _31 = this->D.174558._M_impl.D.173903._M_start;
  _32 = __xlen * 24;
  _33 = _31 + _32;
  this->D.174558._M_impl.D.173903._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<return_type>::size (this);
  retval.570 = __xlen <= _34;
  if (retval.570 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.174558;
  _36 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_35);
  D.251536 = std::vector<return_type>::end (this);
  D.251537 = std::vector<return_type>::begin (this);
  D.251538 = std::vector<return_type>::end (__x);
  D.251539 = std::vector<return_type>::begin (__x);
  D.251540 = std::copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (D.251539, D.251538, D.251537);
  std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type> (D.251540, D.251536, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.174558._M_impl.D.173903._M_start;
  _38 = __x->D.174558._M_impl.D.173903._M_start;
  _39 = std::vector<return_type>::size (this);
  _40 = _39 * 24;
  _41 = _38 + _40;
  _42 = __x->D.174558._M_impl.D.173903._M_start;
  std::copy<return_type*, return_type*> (_42, _41, _37);
  _43 = &this->D.174558;
  _44 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.174558._M_impl.D.173903._M_finish;
  _46 = __x->D.174558._M_impl.D.173903._M_finish;
  _47 = __x->D.174558._M_impl.D.173903._M_start;
  _48 = std::vector<return_type>::size (this);
  _49 = _48 * 24;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<return_type*, return_type*, return_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.174558._M_impl.D.173903._M_start;
  _52 = __xlen * 24;
  _53 = _51 + _52;
  this->D.174558._M_impl.D.173903._M_finish = _53;

  <bb 17> :
  D.251543 = this;

  <bb 18> :
<L19>:
  return D.251543;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI11return_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7717, decl_uid=173770, cgraph_uid=4348, symbol_order=5134)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_propagate_on_copy_assign ()
{
  bool D.251546;

  <bb 2> :
  D.251546 = 0;

  <bb 3> :
<L0>:
  return D.251546;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI11return_typeES1_E15_S_always_equalEv, funcdef_no=7718, decl_uid=173773, cgraph_uid=4349, symbol_order=5135)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_always_equal ()
{
  bool D.251548;

  <bb 2> :
  D.251548 = 1;

  <bb 3> :
<L0>:
  return D.251548;

}



;; Function std::operator!= (_ZStneRKSaI11return_typeES2_, funcdef_no=8613, decl_uid=173656, cgraph_uid=5245, symbol_order=6035)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.223922, const struct allocator & D.223923)
{
  bool D.251550;

  <bb 2> :
  D.251550 = 0;

  <bb 3> :
<L0>:
  return D.251550;

}



;; Function std::vector<return_type>::clear (_ZNSt6vectorI11return_typeSaIS0_EE5clearEv, funcdef_no=8614, decl_uid=174288, cgraph_uid=5246, symbol_order=6036)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<return_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.174558._M_impl.D.173903._M_start;
  std::vector<return_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<return_type>::_M_erase_at_end (_ZNSt6vectorI11return_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9397, decl_uid=174416, cgraph_uid=6029, symbol_order=6819)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<return_type>::_M_erase_at_end (struct vector * const this, struct return_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.174558._M_impl.D.173903._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 24;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.174558;
  _5 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.174558._M_impl.D.173903._M_finish;
  std::_Destroy<return_type*, return_type> (__pos, _6, _5);
  this->D.174558._M_impl.D.173903._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<return_type> > (_ZSt15__alloc_on_copyISaI11return_typeEEvRT_RKS2_, funcdef_no=8615, decl_uid=213180, cgraph_uid=5247, symbol_order=6037)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<return_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<return_type>::capacity (_ZNKSt6vectorI11return_typeSaIS0_EE8capacityEv, funcdef_no=8616, decl_uid=174204, cgraph_uid=5248, symbol_order=6038)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<return_type>::capacity (const struct vector * const this)
{
  size_type D.251555;

  <bb 2> :
  _1 = this->D.174558._M_impl.D.173903._M_end_of_storage;
  _2 = this->D.174558._M_impl.D.173903._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.251555 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.251555;

}



;; Function std::vector<return_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (_ZNSt6vectorI11return_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8617, decl_uid=213187, cgraph_uid=5249, symbol_order=6039)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct return_type * std::vector<return_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct return_type * D.251559;
  struct return_type * __result;
  struct return_type * D.251557;

  <bb 2> :
  _1 = &this->D.174558;
  D.251559 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_allocate (_1, __n);
  __result = D.251559;
  _2 = &this->D.174558;
  _3 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*, return_type> (__first, __last, __result, _3);

  <bb 3> :
  D.251557 = __result;

  <bb 4> :
<L0>:
  return D.251557;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.174558;
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<return_type>::end (_ZNSt6vectorI11return_typeSaIS0_EE3endEv, funcdef_no=8620, decl_uid=174171, cgraph_uid=5252, symbol_order=6042)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<return_type>::end (struct vector * const this)
{
  struct iterator D.224009;
  struct iterator D.251563;

  <bb 2> :
  _1 = &this->D.174558._M_impl.D.173903._M_finish;
  __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::__normal_iterator (&D.224009, _1);
  D.251563 = D.224009;
  D.224009 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251563;

}



;; Function __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9400, decl_uid=213269, cgraph_uid=6032, symbol_order=6822)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::__normal_iterator (struct __normal_iterator * const this, struct return_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<return_type>::begin (_ZNSt6vectorI11return_typeSaIS0_EE5beginEv, funcdef_no=8618, decl_uid=174167, cgraph_uid=5250, symbol_order=6040)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<return_type>::begin (struct vector * const this)
{
  struct iterator D.223963;
  struct iterator D.251566;

  <bb 2> :
  _1 = &this->D.174558._M_impl.D.173903._M_start;
  __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::__normal_iterator (&D.223963, _1);
  D.251566 = D.223963;
  D.223963 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251566;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8619, decl_uid=213288, cgraph_uid=5251, symbol_order=6041)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.251571;
  struct __normal_iterator D.251570;
  struct __normal_iterator D.251569;

  <bb 2> :
  D.251570 = std::__miter_base<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (__last);
  D.251571 = std::__miter_base<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (__first);
  D.251569 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (D.251571, D.251570, __result);

  <bb 3> :
<L0>:
  return D.251569;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9402, decl_uid=223975, cgraph_uid=6034, symbol_order=6824)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.251573;

  <bb 2> :
  D.251573 = __it;

  <bb 3> :
<L0>:
  return D.251573;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9403, decl_uid=223981, cgraph_uid=6036, symbol_order=6826)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct return_type * D.251577;
  struct __normal_iterator D.251575;

  <bb 2> :
  _1 = std::__niter_base<return_type*, std::vector<return_type> > (__result);
  _2 = std::__niter_base<const return_type*, std::vector<return_type> > (__last);
  _3 = std::__niter_base<const return_type*, std::vector<return_type> > (__first);
  D.251577 = std::__copy_move_a1<false, const return_type*, return_type*> (_3, _2, _1);
  _4 = D.251577;
  D.251575 = std::__niter_wrap<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.251575;

}



;; Function std::__niter_base<return_type*, std::vector<return_type> > (_ZSt12__niter_baseIP11return_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10091, decl_uid=236203, cgraph_uid=6723, symbol_order=7517)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__niter_base<return_type*, std::vector<return_type> > (struct __normal_iterator __it)
{
  struct return_type * D.251578;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (&__it);
  D.251578 = *_1;

  <bb 3> :
<L0>:
  return D.251578;

}



;; Function __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9428, decl_uid=213256, cgraph_uid=6060, symbol_order=6850)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * const & __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (const struct __normal_iterator * const this)
{
  struct return_type * const & D.251580;

  <bb 2> :
  D.251580 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.251580;

}



;; Function std::__niter_base<const return_type*, std::vector<return_type> > (_ZSt12__niter_baseIPK11return_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10090, decl_uid=236052, cgraph_uid=6722, symbol_order=7516)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct return_type * std::__niter_base<const return_type*, std::vector<return_type> > (struct __normal_iterator __it)
{
  const struct return_type * D.251582;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::base (&__it);
  D.251582 = *_1;

  <bb 3> :
<L0>:
  return D.251582;

}



;; Function std::__copy_move_a1<false, const return_type*, return_type*> (_ZSt14__copy_move_a1ILb0EPK11return_typePS0_ET1_T0_S5_S4_, funcdef_no=10092, decl_uid=236206, cgraph_uid=6724, symbol_order=7518)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__copy_move_a1<false, const return_type*, return_type*> (const struct return_type * __first, const struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.251586;
  struct return_type * D.251584;

  <bb 2> :
  D.251586 = std::__copy_move_a2<false, const return_type*, return_type*> (__first, __last, __result);
  D.251584 = D.251586;

  <bb 3> :
<L0>:
  return D.251584;

}



;; Function std::__copy_move_a2<false, const return_type*, return_type*> (_ZSt14__copy_move_a2ILb0EPK11return_typePS0_ET1_T0_S5_S4_, funcdef_no=10609, decl_uid=242239, cgraph_uid=7241, symbol_order=8035)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__copy_move_a2<false, const return_type*, return_type*> (const struct return_type * __first, const struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.251587;

  <bb 2> :
  D.251587 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<return_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.251587;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<return_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI11return_typeEEPT_PKS4_S7_S5_, funcdef_no=10871, decl_uid=245656, cgraph_uid=7503, symbol_order=8299)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct return_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<return_type> (const struct return_type * __first, const struct return_type * __last, struct return_type * __result)
{
  const ptrdiff_t _Num;
  struct return_type * D.251592;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 24;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.571_2 = (long unsigned int) _Num;
  _3 = _Num.571_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.572_4 = (long unsigned int) _Num;
  _5 = _Num.572_4 * 24;
  D.251592 = __result + _5;

  <bb 5> :
<L3>:
  return D.251592;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10093, decl_uid=236210, cgraph_uid=6725, symbol_order=7519)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type*> (struct __normal_iterator __from, struct return_type * __res)
{
  struct __normal_iterator D.251594;

  <bb 2> :
  _1 = std::__niter_base<return_type*, std::vector<return_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 24;
  D.251594 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.251594;

}



;; Function __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10610, decl_uid=213247, cgraph_uid=7242, symbol_order=8036)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct return_type * const D.245662;
  struct __normal_iterator D.245663;
  struct __normal_iterator D.251596;

  <bb 2> :
  _1 = this->_M_current;
  __n.573_2 = (long unsigned int) __n;
  _3 = __n.573_2 * 24;
  _4 = _1 + _3;
  D.245662 = _4;
  __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::__normal_iterator (&D.245663, &D.245662);
  D.251596 = D.245663;
  D.245663 = {CLOBBER};
  D.245662 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.251596;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8621, decl_uid=213294, cgraph_uid=5253, symbol_order=6043)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.224012)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9405, decl_uid=224014, cgraph_uid=6037, symbol_order=6827)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10094, decl_uid=236234, cgraph_uid=6726, symbol_order=7520)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (struct __normal_iterator D.242248, struct __normal_iterator D.242249)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<return_type*, return_type*> (_ZSt4copyIP11return_typeS1_ET0_T_S3_S2_, funcdef_no=8622, decl_uid=213302, cgraph_uid=5254, symbol_order=6044)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::copy<return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.251602;
  struct return_type * D.251600;

  <bb 2> :
  _1 = std::__miter_base<return_type*> (__last);
  _2 = std::__miter_base<return_type*> (__first);
  D.251602 = std::__copy_move_a<false, return_type*, return_type*> (_2, _1, __result);
  D.251600 = D.251602;

  <bb 3> :
<L0>:
  return D.251600;

}



;; Function std::__miter_base<return_type*> (_ZSt12__miter_baseIP11return_typeET_S2_, funcdef_no=9406, decl_uid=224030, cgraph_uid=6038, symbol_order=6828)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__miter_base<return_type*> (struct return_type * __it)
{
  struct return_type * D.251603;

  <bb 2> :
  D.251603 = __it;

  <bb 3> :
<L0>:
  return D.251603;

}



;; Function std::__copy_move_a<false, return_type*, return_type*> (_ZSt13__copy_move_aILb0EP11return_typeS1_ET1_T0_S3_S2_, funcdef_no=9407, decl_uid=224032, cgraph_uid=6039, symbol_order=6829)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__copy_move_a<false, return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.251607;
  struct return_type * D.251605;

  <bb 2> :
  __result.574_1 = __result;
  _2 = std::__niter_base<return_type*> (__result.574_1);
  _3 = std::__niter_base<return_type*> (__last);
  _4 = std::__niter_base<return_type*> (__first);
  D.251607 = std::__copy_move_a1<false, return_type*, return_type*> (_4, _3, _2);
  _5 = D.251607;
  D.251605 = std::__niter_wrap<return_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.251605;

}



;; Function std::__niter_base<return_type*> (_ZSt12__niter_baseIP11return_typeET_S2_, funcdef_no=10095, decl_uid=224647, cgraph_uid=6727, symbol_order=7521)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__niter_base<return_type*> (struct return_type * __it)
{
  struct return_type * D.251608;

  <bb 2> :
  D.251608 = __it;

  <bb 3> :
<L0>:
  return D.251608;

}



;; Function std::__copy_move_a1<false, return_type*, return_type*> (_ZSt14__copy_move_a1ILb0EP11return_typeS1_ET1_T0_S3_S2_, funcdef_no=10096, decl_uid=236245, cgraph_uid=6728, symbol_order=7522)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__copy_move_a1<false, return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.251612;
  struct return_type * D.251610;

  <bb 2> :
  D.251612 = std::__copy_move_a2<false, return_type*, return_type*> (__first, __last, __result);
  D.251610 = D.251612;

  <bb 3> :
<L0>:
  return D.251610;

}



;; Function std::__copy_move_a2<false, return_type*, return_type*> (_ZSt14__copy_move_a2ILb0EP11return_typeS1_ET1_T0_S3_S2_, funcdef_no=10611, decl_uid=242257, cgraph_uid=7243, symbol_order=8037)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__copy_move_a2<false, return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.251613;

  <bb 2> :
  D.251613 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<return_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.251613;

}



;; Function std::__niter_wrap<return_type*> (_ZSt12__niter_wrapIP11return_typeET_RKS2_S2_, funcdef_no=10097, decl_uid=236249, cgraph_uid=6729, symbol_order=7523)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__niter_wrap<return_type*> (struct return_type * const & D.242261, struct return_type * __res)
{
  struct return_type * D.251615;

  <bb 2> :
  D.251615 = __res;

  <bb 3> :
<L0>:
  return D.251615;

}



;; Function std::__uninitialized_copy_a<return_type*, return_type*, return_type> (_ZSt22__uninitialized_copy_aIP11return_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8623, decl_uid=213306, cgraph_uid=5255, symbol_order=6045)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__uninitialized_copy_a<return_type*, return_type*, return_type> (struct return_type * __first, struct return_type * __last, struct return_type * __result, struct allocator & D.224039)
{
  struct return_type * D.251619;
  struct return_type * D.251617;

  <bb 2> :
  D.251619 = std::uninitialized_copy<return_type*, return_type*> (__first, __last, __result);
  D.251617 = D.251619;

  <bb 3> :
<L0>:
  return D.251617;

}



;; Function std::uninitialized_copy<return_type*, return_type*> (_ZSt18uninitialized_copyIP11return_typeS1_ET0_T_S3_S2_, funcdef_no=9408, decl_uid=224041, cgraph_uid=6040, symbol_order=6830)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::uninitialized_copy<return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.251622;
  const bool __assignable;
  struct return_type * D.251620;

  <bb 2> :
  __assignable = 1;
  D.251622 = std::__uninitialized_copy<false>::__uninit_copy<return_type*, return_type*> (__first, __last, __result);
  D.251620 = D.251622;

  <bb 3> :
<L0>:
  return D.251620;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<return_type*, return_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP11return_typeS3_EET0_T_S5_S4_, funcdef_no=10098, decl_uid=236283, cgraph_uid=6730, symbol_order=7524)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct return_type * std::__uninitialized_copy<false>::__uninit_copy<return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * __cur;
  struct return_type * D.251623;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<return_type> (__cur);
  std::_Construct<return_type, return_type&> (_1, __first);
  __first = __first + 24;
  __cur = __cur + 24;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.251623 = __cur;

  <bb 6> :
<L3>:
  return D.251623;

}



;; Function std::_Construct<return_type, return_type&> (_ZSt10_ConstructI11return_typeJRS0_EEvPT_DpOT0_, funcdef_no=10612, decl_uid=242269, cgraph_uid=7244, symbol_order=8038)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<return_type, return_type&> (struct return_type * __p, struct return_type & __args#0)
{
  void * D.245682;
  void * D.245681;
  const struct return_type * D.245683;

  <bb 2> :
  D.245683 = std::forward<return_type&> (__args#0);
  D.245681 = __p;
  D.245682 = operator new (24, D.245681);
  MEM[(struct return_type *)D.245682] = *D.245683;
  return;

}



;; Function std::forward<return_type&> (_ZSt7forwardIR11return_typeEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=10872, decl_uid=245679, cgraph_uid=7504, symbol_order=8300)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct return_type & std::forward<return_type&> (struct type & __t)
{
  struct return_type & D.251625;

  <bb 2> :
  D.251625 = __t;

  <bb 3> :
<L0>:
  return D.251625;

}



;; Function function_return_array::operator= (_ZN21function_return_arrayaSERKS_, funcdef_no=6349, decl_uid=194236, cgraph_uid=3324, symbol_order=4101)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_return_array & function_return_array::operator= (struct function_return_array * const this, const struct function_return_array & D.194237)
{
  struct function_return_array & D.251627;

  <bb 2> :
  _1 = D.194237->return_type_num;
  this->return_type_num = _1;
  _2 = D.194237->pthread_type_num;
  this->pthread_type_num = _2;
  _3 = &D.194237->return_type_array;
  _4 = &this->return_type_array;
  std::vector<return_type>::operator= (_4, _3);
  D.251627 = this;

  <bb 3> :
<L0>:
  return D.251627;

}



;; Function std::vector<tree_node*>::push_back (_ZNSt6vectorIP9tree_nodeSaIS1_EE9push_backERKS1_, funcdef_no=7719, decl_uid=184577, cgraph_uid=4352, symbol_order=5138)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<tree_node*>::push_back (struct vector * const this, union tree_node * const & __x)
{
  struct __normal_iterator D.251632;

  <bb 2> :
  _1 = this->D.184897._M_impl.D.184253._M_finish;
  _2 = this->D.184897._M_impl.D.184253._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.184897._M_impl.D.184253._M_finish;
  _4 = &this->D.184897._M_impl;
  std::allocator_traits<std::allocator<tree_node*> >::construct<tree_node*, tree_node* const&> (_4, _3, __x);
  _5 = this->D.184897._M_impl.D.184253._M_finish;
  _6 = _5 + 8;
  this->D.184897._M_impl.D.184253._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.251632 = std::vector<tree_node*>::end (this);
  std::vector<tree_node*>::_M_realloc_insert<tree_node* const&> (this, D.251632, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<tree_node*> >::construct<tree_node*, tree_node* const&> (_ZNSt16allocator_traitsISaIP9tree_nodeEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_, funcdef_no=8624, decl_uid=213318, cgraph_uid=5256, symbol_order=6046)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<tree_node*> >::construct<tree_node*, tree_node* const&> (struct allocator_type & __a, union tree_node * * __p, union tree_node * const & __args#0)
{
  <bb 2> :
  _1 = std::forward<tree_node* const&> (__args#0);
  __gnu_cxx::new_allocator<tree_node*>::construct<tree_node*, tree_node* const&> (__a, __p, _1);
  return;

}



;; Function std::forward<tree_node* const&> (_ZSt7forwardIRKP9tree_nodeEOT_RNSt16remove_referenceIS4_E4typeE, funcdef_no=9409, decl_uid=224056, cgraph_uid=6041, symbol_order=6831)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
union tree_node * const & std::forward<tree_node* const&> (union tree_node * const & __t)
{
  union tree_node * const & D.251633;

  <bb 2> :
  D.251633 = __t;

  <bb 3> :
<L0>:
  return D.251633;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::construct<tree_node*, tree_node* const&> (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeE9constructIS2_JRKS2_EEEvPT_DpOT0_, funcdef_no=9410, decl_uid=224058, cgraph_uid=6042, symbol_order=6832)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node*>::construct<tree_node*, tree_node* const&> (struct new_allocator * const this, union tree_node * * __p, union tree_node * const & __args#0)
{
  void * D.236295;
  void * D.236294;
  union tree_node * D.236296;

  <bb 2> :
  _1 = std::forward<tree_node* const&> (__args#0);
  D.236296 = *_1;
  D.236294 = __p;
  D.236295 = operator new (8, D.236294);
  MEM[(union tree_node * *)D.236295] = D.236296;
  return;

}



;; Function std::vector<tree_node*>::end (_ZNSt6vectorIP9tree_nodeSaIS1_EE3endEv, funcdef_no=8625, decl_uid=184510, cgraph_uid=5257, symbol_order=6047)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<tree_node*>::end (struct vector * const this)
{
  struct iterator D.224081;
  struct iterator D.251635;

  <bb 2> :
  _1 = &this->D.184897._M_impl.D.184253._M_finish;
  __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::__normal_iterator (&D.224081, _1);
  D.251635 = D.224081;
  D.224081 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251635;

}



;; Function __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPP9tree_nodeSt6vectorIS2_SaIS2_EEEC2ERKS3_, funcdef_no=9412, decl_uid=213555, cgraph_uid=6044, symbol_order=6834)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::__normal_iterator (struct __normal_iterator * const this, union tree_node * * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<tree_node*>::_M_realloc_insert<tree_node* const&> (_ZNSt6vectorIP9tree_nodeSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_, funcdef_no=8626, decl_uid=213574, cgraph_uid=5261, symbol_order=6051)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<tree_node*>::_M_realloc_insert<tree_node* const&> (struct vector * const this, struct iterator __position, union tree_node * const & __args#0)
{
  union tree_node * * D.251642;
  const size_type D.251641;
  union tree_node * * __new_finish;
  union tree_node * * __new_start;
  const size_type __elems_before;
  union tree_node * * __old_finish;
  union tree_node * * __old_start;
  const size_type __len;
  struct iterator D.224089;

  <bb 2> :
  D.251641 = std::vector<tree_node*>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.251641;
  __old_start = this->D.184897._M_impl.D.184253._M_start;
  __old_finish = this->D.184897._M_impl.D.184253._M_finish;
  D.224089 = std::vector<tree_node*>::begin (this);
  _1 = __gnu_cxx::operator-<tree_node**, std::vector<tree_node*> > (&__position, &D.224089);
  __elems_before = (const size_type) _1;
  D.224089 = {CLOBBER};
  _2 = &this->D.184897;
  D.251642 = std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_allocate (_2, __len);
  __new_start = D.251642;
  __new_finish = __new_start;
  _3 = std::forward<tree_node* const&> (__args#0);
  _4 = __elems_before * 8;
  _5 = __new_start + _4;
  _6 = &this->D.184897._M_impl;
  std::allocator_traits<std::allocator<tree_node*> >::construct<tree_node*, tree_node* const&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.184897;
  _8 = std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<tree_node*>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 8;
  _11 = &this->D.184897;
  _12 = std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<tree_node*>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.184897;
  _23 = this->D.184897._M_impl.D.184253._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 8;
  _26 = (long unsigned int) _25;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate (_22, __old_start, _26);
  this->D.184897._M_impl.D.184253._M_start = __new_start;
  this->D.184897._M_impl.D.184253._M_finish = __new_finish;
  _27 = __len * 8;
  _28 = __new_start + _27;
  this->D.184897._M_impl.D.184253._M_end_of_storage = _28;
  return;

}



;; Function std::vector<tree_node*>::_M_check_len (_ZNKSt6vectorIP9tree_nodeSaIS1_EE12_M_check_lenEmPKc, funcdef_no=9414, decl_uid=184746, cgraph_uid=6046, symbol_order=6836)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<tree_node*>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.577;
  size_type D.251646;
  const long unsigned int D.236305;
  bool retval.575;

  <bb 2> :
  _1 = std::vector<tree_node*>::max_size (this);
  _2 = std::vector<tree_node*>::size (this);
  _3 = _1 - _2;
  __n.576_4 = __n;
  retval.575 = _3 < __n.576_4;
  if (retval.575 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<tree_node*>::size (this);
  _6 = std::vector<tree_node*>::size (this);
  D.236305 = _6;
  _7 = std::max<long unsigned int> (&D.236305, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.236305 = {CLOBBER};
  _9 = std::vector<tree_node*>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<tree_node*>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.577 = std::vector<tree_node*>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.577 = __len;

  <bb 8> :
  D.251646 = iftmp.577;

  <bb 9> :
<L6>:
  return D.251646;

}



;; Function std::vector<tree_node*>::max_size (_ZNKSt6vectorIP9tree_nodeSaIS1_EE8max_sizeEv, funcdef_no=10099, decl_uid=184532, cgraph_uid=6731, symbol_order=7525)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<tree_node*>::max_size (const struct vector * const this)
{
  size_type D.251653;

  <bb 2> :
  _1 = &this->D.184897;
  _2 = std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_1);
  D.251653 = std::vector<tree_node*>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.251653;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseIP9tree_nodeSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=10614, decl_uid=184143, cgraph_uid=7246, symbol_order=8040)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.251655;

  <bb 2> :
  D.251655 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.251655;

}



;; Function std::vector<tree_node*>::_S_max_size (_ZNSt6vectorIP9tree_nodeSaIS1_EE11_S_max_sizeERKS2_, funcdef_no=10613, decl_uid=184753, cgraph_uid=7245, symbol_order=8039)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<tree_node*>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.251657;

  <bb 2> :
  __diffmax = 1152921504606846975;
  _1 = std::allocator_traits<std::allocator<tree_node*> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.251657 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251657;

}



;; Function std::allocator_traits<std::allocator<tree_node*> >::max_size (_ZNSt16allocator_traitsISaIP9tree_nodeEE8max_sizeERKS2_, funcdef_no=10873, decl_uid=180082, cgraph_uid=7505, symbol_order=8301)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<tree_node*> >::max_size (const struct allocator_type & __a)
{
  size_type D.251660;

  <bb 2> :
  D.251660 = __gnu_cxx::new_allocator<tree_node*>::max_size (__a);

  <bb 3> :
<L0>:
  return D.251660;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::max_size (_ZNK9__gnu_cxx13new_allocatorIP9tree_nodeE8max_sizeEv, funcdef_no=10985, decl_uid=179924, cgraph_uid=7617, symbol_order=8413)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<tree_node*>::max_size (const struct new_allocator * const this)
{
  size_type D.251662;

  <bb 2> :
  D.251662 = __gnu_cxx::new_allocator<tree_node*>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.251662;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIP9tree_nodeE11_M_max_sizeEv, funcdef_no=10616, decl_uid=179943, cgraph_uid=7247, symbol_order=8041)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<tree_node*>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.251664;

  <bb 2> :
  D.251664 = 1152921504606846975;

  <bb 3> :
<L0>:
  return D.251664;

}



;; Function std::vector<tree_node*>::begin (_ZNSt6vectorIP9tree_nodeSaIS1_EE5beginEv, funcdef_no=9415, decl_uid=184506, cgraph_uid=6047, symbol_order=6837)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<tree_node*>::begin (struct vector * const this)
{
  struct iterator D.236307;
  struct iterator D.251666;

  <bb 2> :
  _1 = &this->D.184897._M_impl.D.184253._M_start;
  __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::__normal_iterator (&D.236307, _1);
  D.251666 = D.236307;
  D.236307 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251666;

}



;; Function __gnu_cxx::operator-<tree_node**, std::vector<tree_node*> > (_ZN9__gnu_cxxmiIPP9tree_nodeSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_, funcdef_no=9416, decl_uid=224090, cgraph_uid=6048, symbol_order=6838)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<tree_node**, std::vector<tree_node*> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.251669;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.251669 = _5 /[ex] 8;

  <bb 3> :
<L0>:
  return D.251669;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_allocate (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE11_M_allocateEm, funcdef_no=9417, decl_uid=184257, cgraph_uid=6049, symbol_order=6839)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
union tree_node * * std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  union tree_node * * D.251677;
  union tree_node * * iftmp.578;
  union tree_node * * D.251671;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.251677 = std::allocator_traits<std::allocator<tree_node*> >::allocate (_1, __n);
  iftmp.578 = D.251677;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.578 = 0B;

  <bb 5> :
  D.251671 = iftmp.578;

  <bb 6> :
<L3>:
  return D.251671;

}



;; Function std::allocator_traits<std::allocator<tree_node*> >::allocate (_ZNSt16allocator_traitsISaIP9tree_nodeEE8allocateERS2_m, funcdef_no=10100, decl_uid=180062, cgraph_uid=6732, symbol_order=7526)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
union tree_node * * std::allocator_traits<std::allocator<tree_node*> >::allocate (struct allocator_type & __a, size_type __n)
{
  union tree_node * * D.251680;
  union tree_node * * D.251678;

  <bb 2> :
  D.251680 = __gnu_cxx::new_allocator<tree_node*>::allocate (__a, __n, 0B);
  D.251678 = D.251680;

  <bb 3> :
<L0>:
  return D.251678;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::allocate (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeE8allocateEmPKv, funcdef_no=10615, decl_uid=179916, cgraph_uid=7248, symbol_order=8042)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
union tree_node * * __gnu_cxx::new_allocator<tree_node*>::allocate (struct new_allocator * const this, size_type __n, const void * D.245690)
{
  union tree_node * * D.251691;
  union tree_node * * D.251690;
  align_val_t __al;
  union tree_node * * D.251688;
  bool retval.579;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<tree_node*>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.579 = _4 != 0;
  if (retval.579 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 2305843009213693951)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 8;
  D.251691 = operator new (_6);
  D.251688 = D.251691;

  <bb 7> :
<L6>:
  return D.251688;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=9420, decl_uid=184141, cgraph_uid=6052, symbol_order=6842)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.251692;

  <bb 2> :
  D.251692 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.251692;

}



;; Function __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPP9tree_nodeSt6vectorIS2_SaIS2_EEE4baseEv, funcdef_no=9419, decl_uid=213542, cgraph_uid=6051, symbol_order=6841)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * const & __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (const struct __normal_iterator * const this)
{
  union tree_node * * const & D.251694;

  <bb 2> :
  D.251694 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.251694;

}



;; Function std::vector<tree_node*>::_S_relocate (_ZNSt6vectorIP9tree_nodeSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_, funcdef_no=9418, decl_uid=184405, cgraph_uid=6050, symbol_order=6840)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * std::vector<tree_node*>::_S_relocate (union tree_node * * __first, union tree_node * * __last, union tree_node * * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.251697;
  union tree_node * * D.251696;

  <bb 2> :
  D.251696 = std::vector<tree_node*>::_S_do_relocate (__first, __last, __result, __alloc, D.251697);

  <bb 3> :
<L0>:
  return D.251696;

}



;; Function std::vector<tree_node*>::_S_do_relocate (_ZNSt6vectorIP9tree_nodeSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE, funcdef_no=10101, decl_uid=184393, cgraph_uid=6733, symbol_order=7527)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * std::vector<tree_node*>::_S_do_relocate (union tree_node * * __first, union tree_node * * __last, union tree_node * * __result, struct _Tp_alloc_type & __alloc, struct true_type D.242284)
{
  union tree_node * * D.251699;

  <bb 2> :
  D.251699 = std::__relocate_a<tree_node**, tree_node**, std::allocator<tree_node*> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.251699;

}



;; Function std::__relocate_a<tree_node**, tree_node**, std::allocator<tree_node*> > (_ZSt12__relocate_aIPP9tree_nodeS2_SaIS1_EET0_T_S5_S4_RT1_, funcdef_no=10617, decl_uid=224255, cgraph_uid=7249, symbol_order=8043)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * std::__relocate_a<tree_node**, tree_node**, std::allocator<tree_node*> > (union tree_node * * __first, union tree_node * * __last, union tree_node * * __result, struct allocator & __alloc)
{
  union tree_node * * D.251701;

  <bb 2> :
  _1 = std::__niter_base<tree_node**> (__result);
  _2 = std::__niter_base<tree_node**> (__last);
  _3 = std::__niter_base<tree_node**> (__first);
  D.251701 = std::__relocate_a_1<tree_node*, tree_node*> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.251701;

}



;; Function std::__niter_base<tree_node**> (_ZSt12__niter_baseIPP9tree_nodeET_S3_, funcdef_no=10874, decl_uid=224261, cgraph_uid=7506, symbol_order=8302)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * std::__niter_base<tree_node**> (union tree_node * * __it)
{
  union tree_node * * D.251703;

  <bb 2> :
  D.251703 = __it;

  <bb 3> :
<L0>:
  return D.251703;

}



;; Function std::__relocate_a_1<tree_node*, tree_node*> (_ZSt14__relocate_a_1IP9tree_nodeS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E, funcdef_no=10875, decl_uid=224429, cgraph_uid=7507, symbol_order=8303)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
union tree_node * * std::__relocate_a_1<tree_node*, tree_node*> (union tree_node * * __first, union tree_node * * __last, union tree_node * * __result, struct allocator & D.246871)
{
  ptrdiff_t __count;
  union tree_node * * D.251708;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 8;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.580_2 = (long unsigned int) __count;
  _3 = __count.580_2 * 8;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.581_4 = (long unsigned int) __count;
  _5 = __count.581_4 * 8;
  D.251708 = __result + _5;

  <bb 5> :
<L3>:
  return D.251708;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE13_M_deallocateEPS1_m, funcdef_no=8396, decl_uid=184260, cgraph_uid=5028, symbol_order=5818)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate (struct _Vector_base * const this, union tree_node * * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<tree_node*> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<tree_node*> >::deallocate (_ZNSt16allocator_traitsISaIP9tree_nodeEE10deallocateERS2_PS1_m, funcdef_no=9207, decl_uid=180069, cgraph_uid=5839, symbol_order=6629)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<tree_node*> >::deallocate (struct allocator_type & __a, union tree_node * * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node*>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::deallocate (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeE10deallocateEPS2_m, funcdef_no=9947, decl_uid=179920, cgraph_uid=6579, symbol_order=7373)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<tree_node*>::deallocate (struct new_allocator * const this, union tree_node * * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 8;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<function_path>::operator[] (_ZNSt6vectorI13function_pathSaIS0_EEixEm, funcdef_no=7713, decl_uid=175260, cgraph_uid=4345, symbol_order=5131)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<function_path>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.251716;

  <bb 2> :
  _1 = this->D.175607._M_impl.D.174952._M_start;
  _2 = __n * 24;
  D.251716 = _1 + _2;

  <bb 3> :
<L0>:
  return D.251716;

}



;; Function std::vector<tree_node*>::pop_back (_ZNSt6vectorIP9tree_nodeSaIS1_EE8pop_backEv, funcdef_no=7721, decl_uid=184587, cgraph_uid=4353, symbol_order=5139)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<tree_node*>::pop_back (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.184897._M_impl.D.184253._M_finish;
  _2 = _1 + 18446744073709551608;
  this->D.184897._M_impl.D.184253._M_finish = _2;
  _3 = this->D.184897._M_impl.D.184253._M_finish;
  _4 = &this->D.184897._M_impl;
  std::allocator_traits<std::allocator<tree_node*> >::destroy<tree_node*> (_4, _3);
  return;

}



;; Function std::allocator_traits<std::allocator<tree_node*> >::destroy<tree_node*> (_ZNSt16allocator_traitsISaIP9tree_nodeEE7destroyIS1_EEvRS2_PT_, funcdef_no=8630, decl_uid=213579, cgraph_uid=5262, symbol_order=6052)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<tree_node*> >::destroy<tree_node*> (struct allocator_type & __a, union tree_node * * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node*>::destroy<tree_node*> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::destroy<tree_node*> (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeE7destroyIS2_EEvPT_, funcdef_no=9422, decl_uid=224448, cgraph_uid=6054, symbol_order=6844)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node*>::destroy<tree_node*> (struct new_allocator * const this, union tree_node * * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function std::vector<function_path>::size (_ZNKSt6vectorI13function_pathSaIS0_EE4sizeEv, funcdef_no=7677, decl_uid=175240, cgraph_uid=4309, symbol_order=5095)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<function_path>::size (const struct vector * const this)
{
  size_type D.251718;

  <bb 2> :
  _1 = this->D.175607._M_impl.D.174952._M_finish;
  _2 = this->D.175607._M_impl.D.174952._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.251718 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.251718;

}



;; Function std::vector<free_type>::~vector (_ZNSt6vectorI9free_typeSaIS0_EED2Ev, funcdef_no=7683, decl_uid=173488, cgraph_uid=4315, symbol_order=5101)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<free_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.173491;
  _2 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.173491._M_impl.D.172836._M_finish;
  _4 = this->D.173491._M_impl.D.172836._M_start;
  std::_Destroy<free_type*, free_type> (_4, _3, _2);
  _5 = &this->D.173491;
  std::_Vector_base<free_type, std::allocator<free_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<free_type*, free_type> (_ZSt8_DestroyIP9free_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8574, decl_uid=212813, cgraph_uid=5206, symbol_order=5996)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<free_type*, free_type> (struct free_type * __first, struct free_type * __last, struct allocator & D.223718)
{
  <bb 2> :
  std::_Destroy<free_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<free_type*> (_ZSt8_DestroyIP9free_typeEvT_S2_, funcdef_no=9364, decl_uid=223720, cgraph_uid=5996, symbol_order=6786)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<free_type*> (struct free_type * __first, struct free_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<free_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<free_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP9free_typeEEvT_S4_, funcdef_no=10060, decl_uid=235621, cgraph_uid=6692, symbol_order=7486)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<free_type*> (struct free_type * D.242116, struct free_type * D.242117)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function function_free_array::~function_free_array (_ZN19function_free_arrayD2Ev, funcdef_no=6329, decl_uid=192805, cgraph_uid=3304, symbol_order=4081)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_free_array::~function_free_array (struct function_free_array * const this)
{
  <bb 2> :
  _1 = &this->free_type_array;
  std::vector<free_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<pthread_detched_type>::~vector (_ZNSt6vectorI20pthread_detched_typeSaIS0_EED2Ev, funcdef_no=7700, decl_uid=177710, cgraph_uid=4332, symbol_order=5118)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_detched_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.177713;
  _2 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.177713._M_impl.D.177058._M_finish;
  _4 = this->D.177713._M_impl.D.177058._M_start;
  std::_Destroy<pthread_detched_type*, pthread_detched_type> (_4, _3, _2);
  _5 = &this->D.177713;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<pthread_detched_type*, pthread_detched_type> (_ZSt8_DestroyIP20pthread_detched_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8599, decl_uid=212996, cgraph_uid=5231, symbol_order=6021)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<pthread_detched_type*, pthread_detched_type> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct allocator & D.223842)
{
  <bb 2> :
  std::_Destroy<pthread_detched_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<pthread_detched_type*> (_ZSt8_DestroyIP20pthread_detched_typeEvT_S2_, funcdef_no=9383, decl_uid=223844, cgraph_uid=6015, symbol_order=6805)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<pthread_detched_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<pthread_detched_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP20pthread_detched_typeEEvT_S4_, funcdef_no=10080, decl_uid=235861, cgraph_uid=6712, symbol_order=7506)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<pthread_detched_type*> (struct pthread_detched_type * D.242189, struct pthread_detched_type * D.242190)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function function_pthread_detched_array::~function_pthread_detched_array (_ZN30function_pthread_detched_arrayD2Ev, funcdef_no=6338, decl_uid=193677, cgraph_uid=3313, symbol_order=4090)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_detched_array::~function_pthread_detched_array (struct function_pthread_detched_array * const this)
{
  <bb 2> :
  _1 = &this->pthread_detched_array;
  std::vector<pthread_detched_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<pthread_exit_type>::~vector (_ZNSt6vectorI17pthread_exit_typeSaIS0_EED2Ev, funcdef_no=7709, decl_uid=178755, cgraph_uid=4341, symbol_order=5127)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_exit_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.178758;
  _2 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.178758._M_impl.D.178103._M_finish;
  _4 = this->D.178758._M_impl.D.178103._M_start;
  std::_Destroy<pthread_exit_type*, pthread_exit_type> (_4, _3, _2);
  _5 = &this->D.178758;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<pthread_exit_type*, pthread_exit_type> (_ZSt8_DestroyIP17pthread_exit_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8612, decl_uid=213136, cgraph_uid=5244, symbol_order=6034)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<pthread_exit_type*, pthread_exit_type> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct allocator & D.223917)
{
  <bb 2> :
  std::_Destroy<pthread_exit_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<pthread_exit_type*> (_ZSt8_DestroyIP17pthread_exit_typeEvT_S2_, funcdef_no=9396, decl_uid=223919, cgraph_uid=6028, symbol_order=6818)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<pthread_exit_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<pthread_exit_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP17pthread_exit_typeEEvT_S4_, funcdef_no=10088, decl_uid=236030, cgraph_uid=6720, symbol_order=7514)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<pthread_exit_type*> (struct pthread_exit_type * D.242225, struct pthread_exit_type * D.242226)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function function_pthread_exit_array::~function_pthread_exit_array (_ZN27function_pthread_exit_arrayD2Ev, funcdef_no=6344, decl_uid=194153, cgraph_uid=3319, symbol_order=4096)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_exit_array::~function_pthread_exit_array (struct function_pthread_exit_array * const this)
{
  <bb 2> :
  _1 = &this->pthread_exit_array;
  std::vector<pthread_exit_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<function_path>::~vector (_ZNSt6vectorI13function_pathSaIS0_EED2Ev, funcdef_no=7675, decl_uid=175604, cgraph_uid=4307, symbol_order=5093)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<function_path>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.175607;
  _2 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_1);
  _3 = this->D.175607._M_impl.D.174952._M_finish;
  _4 = this->D.175607._M_impl.D.174952._M_start;
  std::_Destroy<function_path*, function_path> (_4, _3, _2);
  _5 = &this->D.175607;
  std::_Vector_base<function_path, std::allocator<function_path> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<function_path*, function_path> (_ZSt8_DestroyIP13function_pathS0_EvT_S2_RSaIT0_E, funcdef_no=8561, decl_uid=212675, cgraph_uid=5193, symbol_order=5983)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<function_path*, function_path> (struct function_path * __first, struct function_path * __last, struct allocator & D.223643)
{
  <bb 2> :
  std::_Destroy<function_path*> (__first, __last);
  return;

}



;; Function std::_Destroy<function_path*> (_ZSt8_DestroyIP13function_pathEvT_S2_, funcdef_no=9351, decl_uid=223645, cgraph_uid=5983, symbol_order=6773)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<function_path*> (struct function_path * __first, struct function_path * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<function_path*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<function_path*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP13function_pathEEvT_S4_, funcdef_no=10052, decl_uid=235452, cgraph_uid=6684, symbol_order=7478)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<function_path*> (struct function_path * D.242061, struct function_path * D.242062)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function function_path_array::~function_path_array (_ZN19function_path_arrayD2Ev, funcdef_no=6323, decl_uid=192323, cgraph_uid=3298, symbol_order=4075)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_path_array::~function_path_array (struct function_path_array * const this)
{
  <bb 2> :
  _1 = &this->function_path_array;
  std::vector<function_path>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function tracefree_fucntion (_Z18tracefree_fucntionP11cgraph_nodeP3ptbP12gimple_array, funcdef_no=6350, decl_uid=187020, cgraph_uid=3326, symbol_order=4103)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 4 5 3
;; 2 succs { 7 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 1 }
void tracefree_fucntion (struct cgraph_node * node, struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct cgraph_node * D.251725;
  const char * D.251724;
  struct function * D.251723;
  struct cgraph_node * D.251722;
  availability avail;
  int fucntion_level;
  struct cgraph_edge * e;

  <bb 2> :
  symtab.582_1 = symtab;
  D.251722 = symbol_table::first_defined_function (symtab.582_1);
  node = D.251722;
  goto <bb 7>; [INV]

  <bb 3> :
  fucntion_level = 0;
  D.251723 = cgraph_node::get_fun (node);
  _2 = D.251723;
  push_cfun (_2);
  cfun.583_3 = cfun;
  _4 = cfun.583_3->decl;
  D.251724 = get_name (_4);
  _5 = D.251724;
  stderr.584_6 = stderr;
  fprintf (stderr.584_6, "=======node_fun:%s=========\n", _5);
  cfun.585_7 = cfun;
  if (cfun.585_7 == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  pop_cfun ();
  // predicted unlikely by continue predictor.
  goto <bb 6>; [INV]

  <bb 5> :
  stderr.586_8 = stderr;
  __builtin_fwrite ("fucntion collect path \n", 1, 23, stderr.586_8);
  cfun.587_9 = cfun;
  _10 = &cfun.587_9->decl;
  std::vector<tree_node*>::push_back (&pathStack, _10);
  cfun.588_11 = cfun;
  _12 = cfun.588_11->decl;
  walk_function_path (_12, fucntion_level, ptable, user_tmp);
  std::vector<tree_node*>::pop_back (&pathStack);
  pop_cfun ();

  <bb 6> :
  symtab.589_13 = symtab;
  D.251725 = symbol_table::next_defined_function (symtab.589_13, node);
  node = D.251725;

  <bb 7> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  stderr.590_14 = stderr;
  __builtin_fwrite ("fucntion collect path finsh\n", 1, 28, stderr.590_14);
  return;

}



;; Function walk_function_path (_Z18walk_function_pathP9tree_nodeiP3ptbP12gimple_array, funcdef_no=6351, decl_uid=187016, cgraph_uid=3330, symbol_order=4107)

Merging blocks 4 and 65
Removing basic block 18
Removing basic block 19
Removing basic block 37
Removing basic block 52
Removing basic block 62
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71
;;
;; Loop 1
;;  header 55, latch 54
;;  depth 1, outer 0
;;  nodes: 55 54 26 53 52 29 51 50 38 49 39 48 45 44 40 43 41 42 47 46 37 34 36 35 33 32 31 30 28 27 23 25 21 24 22 20 19
;;
;; Loop 3
;;  header 50, latch 49
;;  depth 2, outer 1
;;  nodes: 50 49 39 48 45 44 40 43 41 42 47 46
;;
;; Loop 4
;;  header 44, latch 43
;;  depth 3, outer 3
;;  nodes: 44 43 41 42
;;
;; Loop 2
;;  header 25, latch 24
;;  depth 2, outer 1
;;  nodes: 25 24 22
;; 2 succs { 71 3 }
;; 3 succs { 4 5 }
;; 4 succs { 60 }
;; 5 succs { 71 6 }
;; 6 succs { 71 7 }
;; 7 succs { 70 8 }
;; 8 succs { 67 9 }
;; 9 succs { 67 10 }
;; 10 succs { 67 11 }
;; 11 succs { 12 18 }
;; 12 succs { 67 13 }
;; 13 succs { 67 14 }
;; 14 succs { 67 15 }
;; 15 succs { 67 16 }
;; 16 succs { 17 18 }
;; 17 succs { 67 18 }
;; 18 succs { 55 }
;; 19 succs { 67 20 }
;; 20 succs { 67 21 }
;; 21 succs { 25 }
;; 22 succs { 23 24 }
;; 23 succs { 26 }
;; 24 succs { 25 }
;; 25 succs { 22 26 }
;; 26 succs { 27 54 }
;; 27 succs { 67 28 }
;; 28 succs { 67 29 }
;; 29 succs { 30 52 }
;; 30 succs { 66 31 }
;; 31 succs { 66 32 }
;; 32 succs { 63 33 }
;; 33 succs { 34 35 }
;; 34 succs { 63 37 }
;; 35 succs { 63 36 }
;; 36 succs { 63 37 }
;; 37 succs { 63 38 }
;; 38 succs { 50 }
;; 39 succs { 40 49 }
;; 40 succs { 44 }
;; 41 succs { 42 43 }
;; 42 succs { 43 }
;; 43 succs { 44 }
;; 44 succs { 41 45 }
;; 45 succs { 46 49 }
;; 46 succs { 61 47 }
;; 47 succs { 61 48 }
;; 48 succs { 49 }
;; 49 succs { 50 }
;; 50 succs { 39 51 }
;; 51 succs { 52 }
;; 52 succs { 67 53 }
;; 53 succs { 54 }
;; 54 succs { 55 }
;; 55 succs { 19 56 }
;; 56 succs { 57 58 }
;; 57 succs { 67 59 }
;; 58 succs { 67 59 }
;; 59 succs { 60 }
;; 60 succs { 1 }
;; 61 succs { 62 }
;; 62 succs { 63 }
;; 63 succs { 64 }
;; 64 succs { 65 }
;; 65 succs { 66 }
;; 66 succs { 67 }
;; 67 succs { 68 }
;; 68 succs { 69 }
;; 69 succs { 70 }
;; 70 succs { 71 }
;; 71 succs { }
void walk_function_path (union tree_node * function_tree, int fucntion_level, struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct function_return_array * D.251778;
  struct function_return_array * D.251777;
  struct function_return_array * D.251776;
  struct function_return_array * D.251775;
  const char * D.251774;
  struct function_return_array * D.251773;
  struct function_return_array * D.251772;
  const char * D.251771;
  struct function_path_array * D.251770;
  struct function_path_array * D.251769;
  struct return_type ret_type;
  int k2;
  int find_diff;
  int k;
  struct vector funcalleeRetTypearray;
  union tree_node * getFucntionDecl;
  struct vector ret_type_find_fun_array;
  struct function_return_array find_fun_array;
  struct function_return_array calleeFunArray;
  int o;
  int i;
  int find_thread;
  int find;
  struct vector callerRetTypearray;
  struct function_return_array callerFunArray;
  struct vector function_path_array;
  struct function_path_array fun_array;
  bool retval.620;
  bool retval.619;
  bool retval.614;
  bool retval.613;
  bool retval.611;
  bool retval.608;
  bool retval.605;
  bool retval.604;
  bool retval.603;
  bool retval.596;
  bool retval.591;

  <bb 2> :
  function_path_collect.592_1 = function_path_collect;
  D.251769 = hash_map<tree_node*, function_path_array>::get (function_path_collect.592_1, &function_tree);

  <bb 3> :
  _2 = D.251769;
  retval.591 = _2 == 0B;
  if (retval.591 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  goto <bb 60>; [INV]

  <bb 5> :
  function_path_collect.593_3 = function_path_collect;
  D.251770 = hash_map<tree_node*, function_path_array>::get (function_path_collect.593_3, &function_tree);

  <bb 6> :
  _4 = D.251770;
  function_path_array::function_path_array (&fun_array, _4);

  <bb 7> :
  std::vector<function_path>::vector (&function_path_array, &fun_array.function_path_array);

  <bb 8> :
  function_return_array::function_return_array (&callerFunArray);
  std::vector<return_type>::vector (&callerRetTypearray);
  _5 = std::vector<function_path>::size (&function_path_array);
  function_tree.594_6 = function_tree;
  D.251771 = get_name (function_tree.594_6);

  <bb 9> :
  _7 = D.251771;
  stderr.595_8 = stderr;
  fprintf (stderr.595_8, "\x1b[40;44m =======print_function_path %s  function_call count: %d level :%d========  \x1b[0m\n", _7, _5, fucntion_level);

  <bb 10> :
  function_return_collect.597_9 = function_return_collect;
  D.251772 = hash_map<tree_node*, function_return_array>::get (function_return_collect.597_9, &function_tree);

  <bb 11> :
  _10 = D.251772;
  retval.596 = _10 != 0B;
  if (retval.596 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 12> :
  function_return_collect.598_11 = function_return_collect;
  D.251773 = hash_map<tree_node*, function_return_array>::get (function_return_collect.598_11, &function_tree);

  <bb 13> :
  _12 = D.251773;
  function_return_array::operator= (&callerFunArray, _12);

  <bb 14> :
  std::vector<return_type>::operator= (&callerRetTypearray, &callerFunArray.return_type_array);

  <bb 15> :
  _13 = callerFunArray.return_type_num;
  stderr.599_14 = stderr;
  fprintf (stderr.599_14, "\x1b[40;44m =======print_function_type %d  ========  \x1b[0m\n", _13);

  <bb 16> :
  _15 = callerFunArray.pthread_type_num;
  _16 = (unsigned int) _15;
  FUNCITON_THREAD.600_17 = FUNCITON_THREAD;
  if (_16 == FUNCITON_THREAD.600_17)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  stderr.601_18 = stderr;
  __builtin_fwrite ("\x1b[40;44m =======print_pthread_type_is thread_fucntion  ========  \x1b[0m\n", 1, 70, stderr.601_18);

  <bb 18> :
  fucntion_level = fucntion_level + 1;
  find = 0;
  find_thread = 0;
  i = 0;
  goto <bb 55>; [INV]

  <bb 19> :
  find = 0;
  _19 = (long unsigned int) i;
  _20 = std::vector<function_path>::operator[] (&function_path_array, _19);
  _21 = _20->next;
  D.251774 = get_name (_21);

  <bb 20> :
  _22 = D.251774;
  stderr.602_23 = stderr;
  fprintf (stderr.602_23, "\x1b[40;42m =======pre add _ fucntion:%s========= \x1b[0m\n", _22);

  <bb 21> :
  o = 0;
  goto <bb 25>; [INV]

  <bb 22> :
  _24 = (long unsigned int) o;
  _25 = std::vector<tree_node*>::operator[] (&pathStack, _24);
  _26 = *_25;
  _27 = (long unsigned int) i;
  _28 = std::vector<function_path>::operator[] (&function_path_array, _27);
  _29 = _28->next;
  retval.603 = _26 == _29;
  if (retval.603 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  find = 1;
  goto <bb 26>; [INV]

  <bb 24> :
  o = o + 1;

  <bb 25> :
  _30 = (long unsigned int) o;
  _31 = std::vector<tree_node*>::size (&pathStack);
  retval.604 = _30 < _31;
  if (retval.604 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 26> :
  if (find == 0)
    goto <bb 27>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 27> :
  _32 = (long unsigned int) i;
  _33 = std::vector<function_path>::operator[] (&function_path_array, _32);
  _34 = &_33->next;
  std::vector<tree_node*>::push_back (&pathStack, _34);

  <bb 28> :
  function_return_collect.606_35 = function_return_collect;
  _36 = (long unsigned int) i;
  _37 = std::vector<function_path>::operator[] (&function_path_array, _36);
  _38 = &_37->next;
  D.251775 = hash_map<tree_node*, function_return_array>::get (function_return_collect.606_35, _38);

  <bb 29> :
  _39 = D.251775;
  retval.605 = _39 != 0B;
  if (retval.605 != 0)
    goto <bb 30>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 30> :
  function_return_collect.607_40 = function_return_collect;
  _41 = (long unsigned int) i;
  _42 = std::vector<function_path>::operator[] (&function_path_array, _41);
  _43 = &_42->next;
  D.251776 = hash_map<tree_node*, function_return_array>::get (function_return_collect.607_40, _43);

  <bb 31> :
  _44 = D.251776;
  function_return_array::function_return_array (&calleeFunArray, _44);

  <bb 32> :
  function_return_array::function_return_array (&find_fun_array);
  std::vector<return_type>::vector (&ret_type_find_fun_array);
  _45 = (long unsigned int) i;
  _46 = std::vector<function_path>::operator[] (&function_path_array, _45);
  _47 = _46->next;
  getFucntionDecl = _47;
  function_return_collect.609_48 = function_return_collect;
  D.251777 = hash_map<tree_node*, function_return_array>::get (function_return_collect.609_48, &getFucntionDecl);

  <bb 33> :
  _49 = D.251777;
  retval.608 = _49 == 0B;
  if (retval.608 != 0)
    goto <bb 34>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 34> :
  std::vector<return_type>::operator= (&find_fun_array.return_type_array, &ret_type_find_fun_array);
  goto <bb 37>; [INV]

  <bb 35> :
  function_return_collect.610_50 = function_return_collect;
  D.251778 = hash_map<tree_node*, function_return_array>::get (function_return_collect.610_50, &getFucntionDecl);

  <bb 36> :
  _51 = D.251778;
  function_return_array::operator= (&find_fun_array, _51);

  <bb 37> :
  std::vector<return_type>::vector (&funcalleeRetTypearray, &find_fun_array.return_type_array);

  <bb 38> :
  k = 0;
  goto <bb 50>; [INV]

  <bb 39> :
  _52 = (long unsigned int) k;
  _53 = std::vector<return_type>::operator[] (&callerRetTypearray, _52);
  _54 = _53->return_type_stmt_num;
  _55 = (unsigned int) _54;
  FUNCITON_THREAD.612_56 = FUNCITON_THREAD;
  retval.611 = _55 == FUNCITON_THREAD.612_56;
  if (retval.611 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 40> :
  find_diff = 0;
  k2 = 0;
  goto <bb 44>; [INV]

  <bb 41> :
  _57 = (long unsigned int) k;
  _58 = std::vector<return_type>::operator[] (&callerRetTypearray, _57);
  _59 = _58->return_tree;
  _60 = (long unsigned int) k2;
  _61 = std::vector<return_type>::operator[] (&funcalleeRetTypearray, _60);
  _62 = _61->return_tree;
  retval.613 = _59 == _62;
  if (retval.613 != 0)
    goto <bb 42>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 42> :
  find_diff = 1;

  <bb 43> :
  k2 = k2 + 1;

  <bb 44> :
  _63 = (long unsigned int) k2;
  _64 = std::vector<return_type>::size (&funcalleeRetTypearray);
  retval.614 = _63 < _64;
  if (retval.614 != 0)
    goto <bb 41>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 45> :
  if (find_diff == 0)
    goto <bb 46>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 46> :
  return_type::return_type (&ret_type);
  _65 = (long unsigned int) k;
  _66 = std::vector<return_type>::operator[] (&callerRetTypearray, _65);
  _67 = _66->stmt;
  ret_type.stmt = _67;
  _68 = (long unsigned int) k;
  _69 = std::vector<return_type>::operator[] (&callerRetTypearray, _68);
  _70 = _69->return_tree;
  ret_type.return_tree = _70;
  FUNCITON_THREAD.615_71 = FUNCITON_THREAD;
  FUNCITON_THREAD.616_72 = (int) FUNCITON_THREAD.615_71;
  ret_type.return_type_stmt_num = FUNCITON_THREAD.616_72;
  std::vector<return_type>::push_back (&find_fun_array.return_type_array, &ret_type);

  <bb 47> :
  function_return_collect.617_73 = function_return_collect;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.617_73, &getFucntionDecl, &find_fun_array);

  <bb 48> :
  FUNCITON_THREAD.618_74 = FUNCITON_THREAD;
  find_thread = (int) FUNCITON_THREAD.618_74;
  ret_type = {CLOBBER};

  <bb 49> :
  k = k + 1;

  <bb 50> :
  _75 = (long unsigned int) k;
  _76 = std::vector<return_type>::size (&callerRetTypearray);
  retval.619 = _75 < _76;
  if (retval.619 != 0)
    goto <bb 39>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 51> :
  std::vector<return_type>::~vector (&funcalleeRetTypearray);
  std::vector<return_type>::~vector (&ret_type_find_fun_array);
  function_return_array::~function_return_array (&find_fun_array);
  function_return_array::~function_return_array (&calleeFunArray);
  calleeFunArray = {CLOBBER};
  find_fun_array = {CLOBBER};
  ret_type_find_fun_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};
  funcalleeRetTypearray = {CLOBBER};

  <bb 52> :
  _77 = (long unsigned int) i;
  _78 = std::vector<function_path>::operator[] (&function_path_array, _77);
  _79 = _78->next;
  walk_function_path (_79, fucntion_level, ptable, user_tmp);

  <bb 53> :
  std::vector<tree_node*>::pop_back (&pathStack);

  <bb 54> :
  i = i + 1;

  <bb 55> :
  _80 = (long unsigned int) i;
  _81 = std::vector<function_path>::size (&function_path_array);
  retval.620 = _80 < _81;
  if (retval.620 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 56> :
  find_thread.621_82 = (unsigned int) find_thread;
  FUNCITON_THREAD.622_83 = FUNCITON_THREAD;
  if (find_thread.621_82 == FUNCITON_THREAD.622_83)
    goto <bb 57>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 57> :
  FUNCITON_THREAD.623_84 = FUNCITON_THREAD;
  FUNCITON_THREAD.624_85 = (int) FUNCITON_THREAD.623_84;
  function_tree.625_86 = function_tree;
  checkPointerConstraint (function_tree.625_86, ptable, user_tmp, 0B, FUNCITON_THREAD.624_85);
  goto <bb 59>; [INV]

  <bb 58> :
  function_tree.626_87 = function_tree;
  checkPointerConstraint (function_tree.626_87, ptable, user_tmp, 0B, 0);

  <bb 59> :
  std::vector<return_type>::~vector (&callerRetTypearray);
  function_return_array::~function_return_array (&callerFunArray);
  std::vector<function_path>::~vector (&function_path_array);
  function_path_array::~function_path_array (&fun_array);
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 60> :
<L45>:
  return;

  <bb 61> :
<L46>:
  ret_type = {CLOBBER};
  resx 11

  <bb 62> :
<L47>:
  std::vector<return_type>::~vector (&funcalleeRetTypearray);
  resx 10

  <bb 63> :
<L48>:
  std::vector<return_type>::~vector (&ret_type_find_fun_array);
  resx 9

  <bb 64> :
<L49>:
  function_return_array::~function_return_array (&find_fun_array);
  resx 8

  <bb 65> :
<L50>:
  function_return_array::~function_return_array (&calleeFunArray);
  resx 7

  <bb 66> :
<L51>:
  calleeFunArray = {CLOBBER};
  find_fun_array = {CLOBBER};
  ret_type_find_fun_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};
  funcalleeRetTypearray = {CLOBBER};
  resx 6

  <bb 67> :
<L52>:
  std::vector<return_type>::~vector (&callerRetTypearray);
  resx 5

  <bb 68> :
<L53>:
  function_return_array::~function_return_array (&callerFunArray);
  resx 4

  <bb 69> :
<L54>:
  std::vector<function_path>::~vector (&function_path_array);
  resx 3

  <bb 70> :
<L55>:
  function_path_array::~function_path_array (&fun_array);
  resx 2

  <bb 71> :
<L56>:
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 1

}



;; Function return_type::return_type (_ZN11return_typeC2Ev, funcdef_no=6353, decl_uid=194322, cgraph_uid=3328, symbol_order=4105)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void return_type::return_type (struct return_type * const this)
{
  <bb 2> :
  this->return_type_stmt_num = 0;
  return;

}



;; Function std::vector<return_type>::push_back (_ZNSt6vectorI11return_typeSaIS0_EE9push_backERKS0_, funcdef_no=7722, decl_uid=174238, cgraph_uid=4355, symbol_order=5141)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<return_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.251795;

  <bb 2> :
  _1 = this->D.174558._M_impl.D.173903._M_finish;
  _2 = this->D.174558._M_impl.D.173903._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.174558._M_impl.D.173903._M_finish;
  _4 = &this->D.174558._M_impl;
  std::allocator_traits<std::allocator<return_type> >::construct<return_type, const return_type&> (_4, _3, __x);
  _5 = this->D.174558._M_impl.D.173903._M_finish;
  _6 = _5 + 24;
  this->D.174558._M_impl.D.173903._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.251795 = std::vector<return_type>::end (this);
  std::vector<return_type>::_M_realloc_insert<const return_type&> (this, D.251795, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<return_type> >::construct<return_type, const return_type&> (_ZNSt16allocator_traitsISaI11return_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8631, decl_uid=213715, cgraph_uid=5263, symbol_order=6053)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<return_type> >::construct<return_type, const return_type&> (struct allocator_type & __a, struct return_type * __p, const struct return_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const return_type&> (__args#0);
  __gnu_cxx::new_allocator<return_type>::construct<return_type, const return_type&> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::construct<return_type, const return_type&> (_ZN9__gnu_cxx13new_allocatorI11return_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9424, decl_uid=224464, cgraph_uid=6056, symbol_order=6846)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::construct<return_type, const return_type&> (struct new_allocator * const this, struct return_type * __p, const struct return_type & __args#0)
{
  void * D.236340;
  void * D.236339;
  const struct return_type * D.236341;

  <bb 2> :
  D.236341 = std::forward<const return_type&> (__args#0);
  D.236339 = __p;
  D.236340 = operator new (24, D.236339);
  MEM[(struct return_type *)D.236340] = *D.236341;
  return;

}



;; Function std::vector<return_type>::_M_realloc_insert<const return_type&> (_ZNSt6vectorI11return_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8632, decl_uid=213884, cgraph_uid=5267, symbol_order=6057)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<return_type>::_M_realloc_insert<const return_type&> (struct vector * const this, struct iterator __position, const struct return_type & __args#0)
{
  struct return_type * D.251800;
  const size_type D.251799;
  struct return_type * __new_finish;
  struct return_type * __new_start;
  const size_type __elems_before;
  struct return_type * __old_finish;
  struct return_type * __old_start;
  const size_type __len;
  struct iterator D.224475;

  <bb 2> :
  D.251799 = std::vector<return_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.251799;
  __old_start = this->D.174558._M_impl.D.173903._M_start;
  __old_finish = this->D.174558._M_impl.D.173903._M_finish;
  D.224475 = std::vector<return_type>::begin (this);
  _1 = __gnu_cxx::operator-<return_type*, std::vector<return_type> > (&__position, &D.224475);
  __elems_before = (const size_type) _1;
  D.224475 = {CLOBBER};
  _2 = &this->D.174558;
  D.251800 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_allocate (_2, __len);
  __new_start = D.251800;
  __new_finish = __new_start;
  _3 = std::forward<const return_type&> (__args#0);
  _4 = __elems_before * 24;
  _5 = __new_start + _4;
  _6 = &this->D.174558._M_impl;
  std::allocator_traits<std::allocator<return_type> >::construct<return_type, const return_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.174558;
  _8 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<return_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 24;
  _11 = &this->D.174558;
  _12 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<return_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.174558;
  _23 = this->D.174558._M_impl.D.173903._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 24;
  _26 = (long unsigned int) _25;
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.174558._M_impl.D.173903._M_start = __new_start;
  this->D.174558._M_impl.D.173903._M_finish = __new_finish;
  _27 = __len * 24;
  _28 = __new_start + _27;
  this->D.174558._M_impl.D.173903._M_end_of_storage = _28;
  return;

}



;; Function std::vector<return_type>::_M_check_len (_ZNKSt6vectorI11return_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9425, decl_uid=174407, cgraph_uid=6057, symbol_order=6847)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<return_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.629;
  size_type D.251804;
  const long unsigned int D.236346;
  bool retval.627;

  <bb 2> :
  _1 = std::vector<return_type>::max_size (this);
  _2 = std::vector<return_type>::size (this);
  _3 = _1 - _2;
  __n.628_4 = __n;
  retval.627 = _3 < __n.628_4;
  if (retval.627 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<return_type>::size (this);
  _6 = std::vector<return_type>::size (this);
  D.236346 = _6;
  _7 = std::max<long unsigned int> (&D.236346, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.236346 = {CLOBBER};
  _9 = std::vector<return_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<return_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.629 = std::vector<return_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.629 = __len;

  <bb 8> :
  D.251804 = iftmp.629;

  <bb 9> :
<L6>:
  return D.251804;

}



;; Function std::vector<return_type>::max_size (_ZNKSt6vectorI11return_typeSaIS0_EE8max_sizeEv, funcdef_no=10103, decl_uid=174193, cgraph_uid=6735, symbol_order=7529)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<return_type>::max_size (const struct vector * const this)
{
  size_type D.251811;

  <bb 2> :
  _1 = &this->D.174558;
  _2 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_1);
  D.251811 = std::vector<return_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.251811;

}



;; Function std::vector<return_type>::_S_max_size (_ZNSt6vectorI11return_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10619, decl_uid=174414, cgraph_uid=7251, symbol_order=8045)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<return_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.251813;

  <bb 2> :
  __diffmax = 384307168202282325;
  _1 = std::allocator_traits<std::allocator<return_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.251813 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251813;

}



;; Function std::allocator_traits<std::allocator<return_type> >::max_size (_ZNSt16allocator_traitsISaI11return_typeEE8max_sizeERKS1_, funcdef_no=10876, decl_uid=173728, cgraph_uid=7508, symbol_order=8304)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<return_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.251816;

  <bb 2> :
  D.251816 = __gnu_cxx::new_allocator<return_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.251816;

}



;; Function __gnu_cxx::new_allocator<return_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI11return_typeE8max_sizeEv, funcdef_no=10986, decl_uid=173570, cgraph_uid=7618, symbol_order=8414)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<return_type>::max_size (const struct new_allocator * const this)
{
  size_type D.251818;

  <bb 2> :
  D.251818 = __gnu_cxx::new_allocator<return_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.251818;

}



;; Function __gnu_cxx::operator-<return_type*, std::vector<return_type> > (_ZN9__gnu_cxxmiIP11return_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9426, decl_uid=224476, cgraph_uid=6058, symbol_order=6848)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<return_type*, std::vector<return_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.251820;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.251820 = _5 /[ex] 24;

  <bb 3> :
<L0>:
  return D.251820;

}



;; Function std::vector<return_type>::_S_relocate (_ZNSt6vectorI11return_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9427, decl_uid=174065, cgraph_uid=6059, symbol_order=6849)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::vector<return_type>::_S_relocate (struct return_type * __first, struct return_type * __last, struct return_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.251823;
  struct return_type * D.251822;

  <bb 2> :
  D.251822 = std::vector<return_type>::_S_do_relocate (__first, __last, __result, __alloc, D.251823);

  <bb 3> :
<L0>:
  return D.251822;

}



;; Function std::vector<return_type>::_S_do_relocate (_ZNSt6vectorI11return_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10104, decl_uid=174053, cgraph_uid=6736, symbol_order=7530)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::vector<return_type>::_S_do_relocate (struct return_type * __first, struct return_type * __last, struct return_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.242310)
{
  struct return_type * D.251825;

  <bb 2> :
  D.251825 = std::__relocate_a<return_type*, return_type*, std::allocator<return_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.251825;

}



;; Function std::__relocate_a<return_type*, return_type*, std::allocator<return_type> > (_ZSt12__relocate_aIP11return_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10620, decl_uid=224641, cgraph_uid=7252, symbol_order=8046)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__relocate_a<return_type*, return_type*, std::allocator<return_type> > (struct return_type * __first, struct return_type * __last, struct return_type * __result, struct allocator & __alloc)
{
  struct return_type * D.251827;

  <bb 2> :
  _1 = std::__niter_base<return_type*> (__result);
  _2 = std::__niter_base<return_type*> (__last);
  _3 = std::__niter_base<return_type*> (__first);
  D.251827 = std::__relocate_a_1<return_type*, return_type*, std::allocator<return_type> > (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.251827;

}



;; Function std::__relocate_a_1<return_type*, return_type*, std::allocator<return_type> > (_ZSt14__relocate_a_1IP11return_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10877, decl_uid=224792, cgraph_uid=7509, symbol_order=8305)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct return_type * std::__relocate_a_1<return_type*, return_type*, std::allocator<return_type> > (struct return_type * __first, struct return_type * __last, struct return_type * __result, struct allocator & __alloc)
{
  struct return_type * __cur;
  struct return_type * D.251829;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<return_type> (__first);
  _2 = std::__addressof<return_type> (__cur);
  std::__relocate_object_a<return_type, return_type, std::allocator<return_type> > (_2, _1, __alloc);
  __first = __first + 24;
  __cur = __cur + 24;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.251829 = __cur;

  <bb 6> :
<L3>:
  return D.251829;

}



;; Function std::__relocate_object_a<return_type, return_type, std::allocator<return_type> > (_ZSt19__relocate_object_aI11return_typeS0_SaIS0_EEvPT_PT0_RT1_, funcdef_no=10987, decl_uid=224821, cgraph_uid=7619, symbol_order=8415)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__relocate_object_a<return_type, return_type, std::allocator<return_type> > (struct return_type * restrict __dest, struct return_type * restrict __orig, struct allocator & __alloc)
{
  <bb 2> :
  _1 = std::move<return_type&> (__orig);
  std::allocator_traits<std::allocator<return_type> >::construct<return_type, return_type> (__alloc, __dest, _1);
  _2 = std::__addressof<return_type> (__orig);
  std::allocator_traits<std::allocator<return_type> >::destroy<return_type> (__alloc, _2);
  return;

}



;; Function std::move<return_type&> (_ZSt4moveIR11return_typeEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=11036, decl_uid=224833, cgraph_uid=7668, symbol_order=8464)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<return_type&> (struct return_type & __t)
{
  struct type & D.251831;

  <bb 2> :
  D.251831 = __t;

  <bb 3> :
<L0>:
  return D.251831;

}



;; Function std::allocator_traits<std::allocator<return_type> >::construct<return_type, return_type> (_ZNSt16allocator_traitsISaI11return_typeEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_, funcdef_no=11037, decl_uid=224835, cgraph_uid=7669, symbol_order=8465)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<return_type> >::construct<return_type, return_type> (struct allocator_type & __a, struct return_type * __p, struct return_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<return_type> (__args#0);
  __gnu_cxx::new_allocator<return_type>::construct<return_type, return_type> (__a, __p, _1);
  return;

}



;; Function std::forward<return_type> (_ZSt7forwardI11return_typeEOT_RNSt16remove_referenceIS1_E4typeE, funcdef_no=11058, decl_uid=247723, cgraph_uid=7690, symbol_order=8486)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct return_type & std::forward<return_type> (struct type & __t)
{
  struct return_type & D.251833;

  <bb 2> :
  D.251833 = __t;

  <bb 3> :
<L0>:
  return D.251833;

}



;; Function __gnu_cxx::new_allocator<return_type>::construct<return_type, return_type> (_ZN9__gnu_cxx13new_allocatorI11return_typeE9constructIS1_JS1_EEEvPT_DpOT0_, funcdef_no=11059, decl_uid=247725, cgraph_uid=7691, symbol_order=8487)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::construct<return_type, return_type> (struct new_allocator * const this, struct return_type * __p, struct return_type & __args#0)
{
  void * D.248164;
  void * D.248163;
  struct return_type * D.248165;

  <bb 2> :
  D.248165 = std::forward<return_type> (__args#0);
  D.248163 = __p;
  D.248164 = operator new (24, D.248163);
  MEM[(struct return_type *)D.248164] = *D.248165;
  return;

}



;; Function std::allocator_traits<std::allocator<return_type> >::destroy<return_type> (_ZNSt16allocator_traitsISaI11return_typeEE7destroyIS0_EEvRS1_PT_, funcdef_no=9429, decl_uid=224850, cgraph_uid=6061, symbol_order=6851)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<return_type> >::destroy<return_type> (struct allocator_type & __a, struct return_type * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<return_type>::destroy<return_type> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::destroy<return_type> (_ZN9__gnu_cxx13new_allocatorI11return_typeE7destroyIS1_EEvPT_, funcdef_no=10105, decl_uid=236361, cgraph_uid=6737, symbol_order=7531)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::destroy<return_type> (struct new_allocator * const this, struct return_type * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_return_array>::put (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7724, decl_uid=189597, cgraph_uid=4356, symbol_order=5142)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_return_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_return_array & v)
{
  bool D.251842;
  struct hash_entry * D.251841;
  unsigned int D.251840;
  bool ins;
  struct hash_entry * e;
  bool D.251838;
  void * D.213894;
  void * D.213893;

  <bb 2> :
  _1 = &this->m_table;
  D.251840 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::hash (k);
  _2 = D.251840;
  D.251841 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.251841;
  D.251842 = hash_map<tree_node*, function_return_array>::hash_entry::is_empty (e);
  ins = D.251842;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.213893 = &e->m_value;
  D.213894 = operator new (32, D.213893);
  function_return_array::function_return_array (D.213894, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_return_array::operator= (_4, v);

  <bb 5> :
  D.251838 = ~ins;

  <bb 6> :
<L3>:
  return D.251838;

  <bb 7> :
<L4>:
  operator delete (D.213894, D.213893);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8636, decl_uid=189755, cgraph_uid=5268, symbol_order=6058)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.251893;
  bool D.251892;
  bool D.251891;
  bool D.251890;
  bool D.251889;
  bool D.251888;
  struct value_type * D.251887;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.635;
  bool retval.634;
  bool retval.633;
  bool retval.632;
  bool retval.631;
  bool retval.630;
  struct value_type * D.251849;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 40;
  entry = _11 + _13;
  size = this->m_size;
  D.251888 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.630 = D.251888;
  if (retval.630 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.251889 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.631 = D.251889;
  if (retval.631 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 40;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.251890 = hash_map<tree_node*, function_return_array>::hash_entry::equal (entry, comparable);
  retval.632 = D.251890;
  if (retval.632 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  D.251849 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 40;
  entry = _24 + _26;
  D.251891 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.633 = D.251891;
  if (retval.633 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.251892 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.634 = D.251892;
  if (retval.634 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 40;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.251893 = hash_map<tree_node*, function_return_array>::hash_entry::equal (entry, comparable);
  retval.635 = D.251893;
  if (retval.635 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 40;
  D.251849 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.251849 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.251849 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 40;
  D.251849 = _37 + _39;

  <bb 27> :
<L37>:
  return D.251849;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9430, decl_uid=189836, cgraph_uid=6074, symbol_order=6864)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.251924;
  unsigned int D.251923;
  bool D.251922;
  bool D.251921;
  struct mem_alloc_description & D.251920;
  struct value_type * D.251919;
  unsigned int D.251918;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.236384;
  void * D.236383;
  struct hash_entry & D.236421;
  bool iftmp.639;
  bool retval.638;
  bool iftmp.637;
  bool retval.636;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 40;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.637 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.637 = 0;

  <bb 6> :
  retval.636 = iftmp.637;
  if (retval.636 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.251918 = hash_table_higher_prime_index (_5);
  nindex = D.251918;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.251919 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.251919;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.251921 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.251921;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.251922 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.251922;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.639 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.639 = 0;

  <bb 15> :
  retval.638 = iftmp.639;
  if (retval.638 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.251923 = hash_map<tree_node*, function_return_array>::hash_entry::hash (x);
  _16 = D.251923;
  D.251924 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.251924;
  D.236421 = std::move<hash_map<tree_node*, function_return_array>::hash_entry&> (x);
  D.236383 = q;
  D.236384 = operator new (40, D.236383);
  hash_map<tree_node*, function_return_array>::hash_entry::hash_entry (D.236384, D.236421);

  <bb 17> :
  p = p + 40;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10106, decl_uid=189731, cgraph_uid=6738, symbol_order=7532)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.251925;

  <bb 2> :
  D.251925 = this->m_size;

  <bb 3> :
<L0>:
  return D.251925;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10107, decl_uid=189733, cgraph_uid=6739, symbol_order=7533)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.251927;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.251927 = _1 - _2;

  <bb 3> :
<L0>:
  return D.251927;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10108, decl_uid=189833, cgraph_uid=6740, symbol_order=7534)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.640;
  bool D.251929;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.640 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.640 = 0;

  <bb 6> :
  D.251929 = iftmp.640;

  <bb 7> :
<L4>:
  return D.251929;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9241, decl_uid=189823, cgraph_uid=5873, symbol_order=6663)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.251951;
  struct value_type * D.251950;
  struct mem_alloc_description & D.251949;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.251947;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.251950 = xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_alloc (n);
  nentries = D.251950;
  goto <bb 6>; [INV]

  <bb 5> :
  D.251951 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_return_array>::hash_entry> (n);
  nentries = D.251951;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.251947 = nentries;

  <bb 9> :
<L14>:
  return D.251947;

}



;; Function xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=9977, decl_uid=218345, cgraph_uid=6609, symbol_order=7403)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.251954;
  struct hash_entry * D.251952;

  <bb 2> :
  D.251954 = xcalloc (count, 40);
  D.251952 = D.251954;

  <bb 3> :
<L0>:
  return D.251952;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_return_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=9978, decl_uid=234125, cgraph_uid=6610, symbol_order=7404)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_return_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.251961;
  struct hash_entry * D.251960;
  struct hash_entry * D.251958;
  bool retval.641;

  <bb 2> :
  retval.641 = need_finalization_p<hash_map<tree_node*, function_return_array>::hash_entry> ();
  if (retval.641 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 40;
  D.251960 = ggc_internal_cleared_alloc (_1, finalize, 40, c);
  D.251958 = D.251960;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 40;
  D.251961 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.251958 = D.251961;

  <bb 5> :
<L2>:
  return D.251958;

}



;; Function finalize<hash_map<tree_node*, function_return_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10510, decl_uid=241705, cgraph_uid=7145, symbol_order=7939)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_return_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_return_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10512, decl_uid=245208, cgraph_uid=7143, symbol_order=7937)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_return_array::~function_return_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_return_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10509, decl_uid=241704, cgraph_uid=7141, symbol_order=7935)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_return_array>::hash_entry> ()
{
  bool D.251962;

  <bb 2> :
  D.251962 = 1;

  <bb 3> :
<L0>:
  return D.251962;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10110, decl_uid=189656, cgraph_uid=6742, symbol_order=7536)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_return_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.251966;
  hashval_t D.251964;

  <bb 2> :
  _1 = &e->m_key;
  D.251966 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::hash (_1);
  D.251964 = D.251966;

  <bb 3> :
<L0>:
  return D.251964;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10109, decl_uid=189826, cgraph_uid=6741, symbol_order=7535)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.251979;
  bool D.251978;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.643;
  struct value_type * D.251970;
  bool retval.642;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 40;
  slot = _2 + _4;
  D.251978 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.642 = D.251978;
  if (retval.642 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.251970 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 40;
  slot = _8 + _10;
  D.251979 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.643 = D.251979;
  if (retval.643 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.251970 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.251970;

}



;; Function std::move<hash_map<tree_node*, function_return_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10111, decl_uid=236381, cgraph_uid=6743, symbol_order=7537)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_return_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.251980;

  <bb 2> :
  D.251980 = __t;

  <bb 3> :
<L0>:
  return D.251980;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9441, decl_uid=236406, cgraph_uid=6072, symbol_order=6862)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.236408)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.236408->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.236408->m_value;
  function_return_array::function_return_array (_2, _3);
  return;

}



;; Function function_return_array::function_return_array (_ZN21function_return_arrayC2EOS_, funcdef_no=9439, decl_uid=189948, cgraph_uid=6069, symbol_order=6859)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_return_array::function_return_array (struct function_return_array * const this, struct function_return_array & D.189950)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.189950->return_type_num;
  this->return_type_num = _1;
  _2 = D.189950->pthread_type_num;
  this->pthread_type_num = _2;
  _3 = &this->return_type_array;
  _4 = &D.189950->return_type_array;
  std::vector<return_type>::vector (_3, _4);
  return;

}



;; Function std::vector<return_type>::vector (_ZNSt6vectorI11return_typeSaIS0_EEC2EOS2_, funcdef_no=9437, decl_uid=174515, cgraph_uid=6066, symbol_order=6856)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<return_type>::vector (struct vector * const this, struct vector & D.174517)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.174558;
  _2 = &D.174517->D.174558;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_ZNSt12_Vector_baseI11return_typeSaIS0_EEC2EOS2_, funcdef_no=9435, decl_uid=173983, cgraph_uid=6063, symbol_order=6853)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.173985)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.173985->_M_impl;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11return_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10113, decl_uid=173889, cgraph_uid=6745, symbol_order=7539)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl&> (__x);
  std::allocator<return_type>::allocator (this, _1);
  _2 = &this->D.173903;
  _3 = std::move<std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.173903;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI11return_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10621, decl_uid=242340, cgraph_uid=7253, symbol_order=8047)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.251982;

  <bb 2> :
  D.251982 = __t;

  <bb 3> :
<L0>:
  return D.251982;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11return_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10623, decl_uid=173845, cgraph_uid=7255, symbol_order=8049)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8955, decl_uid=218347, cgraph_uid=5587, symbol_order=6377)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9443, decl_uid=189844, cgraph_uid=6075, symbol_order=6865)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_return_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10115, decl_uid=189668, cgraph_uid=6747, symbol_order=7541)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::mark_empty<hash_map<tree_node*, function_return_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::mark_empty<hash_map<tree_node*, function_return_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10625, decl_uid=242355, cgraph_uid=7257, symbol_order=8051)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::mark_empty<hash_map<tree_node*, function_return_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function dump_fucntion (_Z13dump_fucntionP11cgraph_nodeP3ptbP12gimple_array, funcdef_no=6355, decl_uid=187045, cgraph_uid=3331, symbol_order=4108)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;;
;; Loop 1
;;  header 11, latch 10
;;  depth 1, outer 0
;;  nodes: 11 10 6 8 9 7 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 11 }
;; 5 succs { 6 7 }
;; 6 succs { 10 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 5 12 }
;; 12 succs { 1 }
void dump_fucntion (struct cgraph_node * node, struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct cgraph_node * D.251998;
  struct function * D.251997;
  struct function * D.251996;
  bool D.251995;
  struct cgraph_node * D.251994;
  int fucntion_level;
  struct cgraph_edge * e;
  bool retval.647;
  bool retval.646;

  <bb 2> :
  if (node == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  stderr.644_1 = stderr;
  __builtin_fwrite ("=======node_fun: =========\n", 1, 27, stderr.644_1);

  <bb 4> :
  symtab.645_2 = symtab;
  D.251994 = symbol_table::first_defined_function (symtab.645_2);
  node = D.251994;
  goto <bb 11>; [INV]

  <bb 5> :
  _3 = node->D.97512.decl;
  D.251995 = gimple_has_body_p (_3);
  _4 = D.251995;
  retval.646 = ~_4;
  if (retval.646 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  // predicted unlikely by continue predictor.
  goto <bb 10>; [INV]

  <bb 7> :
  fucntion_level = 0;
  D.251996 = cgraph_node::get_fun (node);
  _5 = D.251996;
  push_cfun (_5);
  D.251997 = cgraph_node::get_fun (node);
  _6 = D.251997;
  _7 = _6->decl;
  retval.647 = _7 == 0B;
  if (retval.647 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  pop_cfun ();
  // predicted unlikely by continue predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  cfun.648_8 = cfun;
  _9 = &cfun.648_8->decl;
  std::vector<tree_node*>::push_back (&pathStack, _9);
  cfun.649_10 = cfun;
  _11 = cfun.649_10->decl;
  walk_function_path (_11, fucntion_level, ptable, user_tmp);
  std::vector<tree_node*>::pop_back (&pathStack);
  pop_cfun ();

  <bb 10> :
  symtab.650_12 = symtab;
  D.251998 = symbol_table::next_defined_function (symtab.650_12, node);
  node = D.251998;

  <bb 11> :
  if (node != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  stderr.651_13 = stderr;
  __builtin_fwrite ("fucntion collect path finsh\n", 1, 28, stderr.651_13);
  return;

}



;; Function collect_function_call (_Z21collect_function_callP6gimpleP11cgraph_nodeP15basic_block_def, funcdef_no=6356, decl_uid=187001, cgraph_uid=3335, symbol_order=4112)

Removing basic block 5
Removing basic block 13
Removing basic block 14
Removing basic block 15
Removing basic block 21
Removing basic block 22
Removing basic block 27
Removing basic block 31
Removing basic block 35
Removing basic block 55
Removing basic block 58
Removing basic block 76
Removing basic block 78
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67
;;
;; Loop 1
;;  header 18, latch 17
;;  depth 1, outer 0
;;  nodes: 18 17 13 16 14 15
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 66 }
;; 5 succs { 6 21 }
;; 6 succs { 7 12 }
;; 7 succs { 8 12 }
;; 8 succs { 9 12 }
;; 9 succs { 11 10 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 18 }
;; 13 succs { 14 17 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 13 19 }
;; 19 succs { 20 21 }
;; 20 succs { 66 }
;; 21 succs { 22 66 }
;; 22 succs { 23 66 }
;; 23 succs { 24 }
;; 24 succs { 26 25 }
;; 25 succs { 26 29 }
;; 26 succs { 28 27 }
;; 27 succs { 28 }
;; 28 succs { 65 }
;; 29 succs { 36 30 }
;; 30 succs { 36 31 }
;; 31 succs { 36 32 }
;; 32 succs { 36 33 }
;; 33 succs { 36 34 }
;; 34 succs { 36 35 }
;; 35 succs { 36 37 }
;; 36 succs { 38 }
;; 37 succs { 38 }
;; 38 succs { 39 40 }
;; 39 succs { 65 }
;; 40 succs { 41 42 }
;; 41 succs { 65 }
;; 42 succs { 43 58 }
;; 43 succs { 67 44 }
;; 44 succs { 67 45 }
;; 45 succs { 46 }
;; 46 succs { 67 47 }
;; 47 succs { 50 48 }
;; 48 succs { 67 49 }
;; 49 succs { 50 }
;; 50 succs { 67 51 }
;; 51 succs { 67 52 }
;; 52 succs { 53 56 }
;; 53 succs { 67 54 }
;; 54 succs { 67 55 }
;; 55 succs { 56 }
;; 56 succs { 67 57 }
;; 57 succs { 65 }
;; 58 succs { 59 61 }
;; 59 succs { 60 61 }
;; 60 succs { 62 }
;; 61 succs { 62 }
;; 62 succs { 63 65 }
;; 63 succs { 64 65 }
;; 64 succs { 65 }
;; 65 succs { 66 }
;; 66 succs { 1 }
;; 67 succs { }
void collect_function_call (struct gimple * gc, struct cgraph_node * node, struct basic_block_def * bb)
{
  union tree_node * D.252125;
  union tree_node * D.252124;
  union tree_node * D.252123;
  union tree_node * D.252122;
  long int D.252120;
  union tree_node * D.252119;
  union tree_node * D.252118;
  union tree_node * D.252117;
  struct pthread_attr_array * D.252116;
  struct pthread_attr_array * D.252115;
  union tree_node * D.252114;
  union tree_node * D.252113;
  union tree_node * D.252112;
  union tree_node * D.252111;
  const char * D.252110;
  union tree_node * D.252109;
  union tree_node * D.252108;
  union tree_node * D.252107;
  union tree_node * D.252106;
  const char * D.252105;
  union tree_node * D.252104;
  const char * D.252103;
  union tree_node * D.252102;
  union tree_node * D.252101;
  struct pthread_attr_array pthread_attr_array;
  union tree_node * getvardecl;
  size_t found;
  int i;
  int find;
  const char * name;
  struct cgraph_node * node2;
  union tree_node * a;
  location_t loc;
  bool retval.682;
  bool iftmp.681;
  bool retval.680;
  bool retval.678;
  bool retval.675;
  bool retval.674;
  bool iftmp.668;
  bool retval.667;
  bool retval.665;
  bool retval.663;
  bool retval.662;
  bool retval.661;
  struct expanded_location D.194604;
  bool retval.659;
  struct expanded_location D.194394;
  struct expanded_location D.194392;
  bool retval.658;
  bool retval.656;
  bool retval.653;
  bool retval.652;

  <bb 2> :
  loc = gimple_location_safe (gc);
  retval.652 = is_gimple_call (gc);
  if (retval.652 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  D.252101 = gimple_call_fn (gc);
  _1 = D.252101;
  retval.653 = _1 == 0B;
  if (retval.653 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 66>; [INV]

  <bb 5> :
  vscode_extensionmod.654_2 = vscode_extensionmod;
  if (vscode_extensionmod.654_2 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 6> :
  find = 0;
  vscode_extensionIgonefreemod.655_3 = vscode_extensionIgonefreemod;
  if (vscode_extensionIgonefreemod.655_3 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 7> :
  retval.656 = is_gimple_call (gc);
  if (retval.656 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 8> :
  D.252102 = gimple_call_fn (gc);
  _4 = D.252102;
  D.252103 = get_name (_4);
  name = D.252103;
  if (name != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 9> :
  _5 = strcmp (name, "free");
  if (_5 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  _6 = strcmp (name, "xfree");
  if (_6 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  find = 1;
  stderr.657_7 = stderr;
  __builtin_fwrite ("set breakpoint free stmt igone\n", 1, 31, stderr.657_7);
  _8 = gimple_location_safe (gc);
  warning_at (_8, 0, "use location");

  <bb 12> :
  i = 0;
  goto <bb 18>; [INV]

  <bb 13> :
  D.194392 = expand_location (loc); [return slot optimization]
  _9 = D.194392.file;
  retval.658 = _9 != 0B;
  D.194392 = {CLOBBER};
  if (retval.658 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 14> :
  _10 = (long unsigned int) i;
  _11 = std::vector<breakpoint>::operator[] (&vbreakpoint, _10);
  _12 = &_11->name;
  D.194394 = expand_location (loc); [return slot optimization]
  _13 = D.194394.file;
  found = std::__cxx11::basic_string<char>::find (_12, _13, 0);
  D.194394 = {CLOBBER};
  if (found != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  _14 = (long unsigned int) i;
  _15 = std::vector<breakpoint>::operator[] (&vbreakpoint, _14);
  _16 = _15->line;
  D.194604 = expand_location (loc); [return slot optimization]
  _17 = D.194604.line;
  retval.659 = _16 == _17;
  D.194604 = {CLOBBER};
  if (retval.659 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  debug_gimple_stmt (gc);
  _18 = (long unsigned int) i;
  _19 = std::vector<breakpoint>::operator[] (&vbreakpoint, _18);
  _20 = _19->line;
  _21 = (long unsigned int) i;
  _22 = std::vector<breakpoint>::operator[] (&vbreakpoint, _21);
  _23 = &_22->name;
  _24 = std::__cxx11::basic_string<char>::c_str (_23);
  stderr.660_25 = stderr;
  fprintf (stderr.660_25, "set breakpoint %s %d\n", _24, _20);
  find = 1;

  <bb 17> :
  i = i + 1;

  <bb 18> :
  _26 = (long unsigned int) i;
  _27 = std::vector<breakpoint>::size (&vbreakpoint);
  retval.661 = _26 < _27;
  if (retval.661 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  if (find == 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 66>; [INV]

  <bb 21> :
  retval.662 = is_gimple_call (gc);
  if (retval.662 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 66>; [INV]

  <bb 22> :
  D.252104 = gimple_call_fn (gc);
  _28 = D.252104;
  D.252105 = get_name (_28);
  name = D.252105;
  if (name != 0B)
    goto <bb 23>; [INV]
  else
    goto <bb 66>; [INV]

  <bb 23> :
  D.252106 = gimple_call_fndecl (gc);
  _29 = D.252106;
  retval.663 = _29 != 0B;

  <bb 24> :
  _30 = strcmp (name, "free");
  if (_30 == 0)
    goto <bb 26>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 25> :
  _31 = strcmp (name, "xfree");
  if (_31 == 0)
    goto <bb 26>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 26> :
  GIMPLE_FREE_COUNT.664_32 = GIMPLE_FREE_COUNT;
  _33 = GIMPLE_FREE_COUNT.664_32 + 1;
  GIMPLE_FREE_COUNT = _33;
  D.252107 = gimple_call_arg (gc, 0);
  _34 = D.252107;
  _35 = _34->base.code;
  retval.665 = _35 == 131;
  if (retval.665 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 27> :
  D.252108 = gimple_call_arg (gc, 0);
  _36 = D.252108;
  ftable.666_37 = ftable;
  set_ptb (bb, ftable.666_37, _36, loc, 0, gc, node);

  <bb 28> :
  goto <bb 65>; [INV]

  <bb 29> :
  _38 = strcmp (name, "realloc");
  if (_38 == 0)
    goto <bb 36>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 30> :
  _39 = strcmp (name, "malloc");
  if (_39 == 0)
    goto <bb 36>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 31> :
  D.252109 = gimple_call_fn (gc);
  _40 = D.252109;
  D.252110 = get_name (_40);
  _41 = D.252110;
  _42 = strcmp (_41, "calloc");
  if (_42 == 0)
    goto <bb 36>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 32> :
  _43 = strcmp (name, "xcalloc");
  if (_43 == 0)
    goto <bb 36>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 33> :
  _44 = strcmp (name, "xmalloc");
  if (_44 == 0)
    goto <bb 36>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 34> :
  _45 = strcmp (name, "strdup");
  if (_45 == 0)
    goto <bb 36>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 35> :
  _46 = strcmp (name, "xstrdup");
  if (_46 == 0)
    goto <bb 36>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 36> :
  iftmp.668 = 1;
  goto <bb 38>; [INV]

  <bb 37> :
  iftmp.668 = 0;

  <bb 38> :
  retval.667 = iftmp.668;
  if (retval.667 != 0)
    goto <bb 39>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 39> :
  GIMPLE_MALLOC_COUNT.669_47 = GIMPLE_MALLOC_COUNT;
  _48 = GIMPLE_MALLOC_COUNT.669_47 + 1;
  GIMPLE_MALLOC_COUNT = _48;
  D.252111 = gimple_call_lhs (gc);
  _49 = D.252111;
  ptable.670_50 = ptable;
  set_ptb (bb, ptable.670_50, _49, loc, 0, gc, node);
  goto <bb 65>; [INV]

  <bb 40> :
  _51 = strcmp (name, "pthread_create");
  if (_51 == 0)
    goto <bb 41>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 41> :
  IS_PTHREAD_FUCNTION.671_52 = IS_PTHREAD_FUCNTION;
  IS_PTHREAD_FUCNTION.672_53 = (int) IS_PTHREAD_FUCNTION.671_52;
  D.252112 = gimple_call_arg (gc, 0);
  _54 = D.252112;
  ptable.673_55 = ptable;
  set_ptb (bb, ptable.673_55, _54, loc, IS_PTHREAD_FUCNTION.672_53, gc, node);
  goto <bb 65>; [INV]

  <bb 42> :
  _56 = strcmp (name, "pthread_attr_setdetachstate");
  if (_56 == 0)
    goto <bb 43>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 43> :
  D.252113 = gimple_call_arg (gc, 0);

  <bb 44> :
  _57 = D.252113;
  _58 = _57->exp.operands[0];
  getvardecl = _58;
  D.252114 = gimple_call_arg (gc, 1);

  <bb 45> :
  _59 = D.252114;
  _60 = _59->base.code;
  retval.674 = _60 == 26;

  <bb 46> :
  pthread_attr_array::pthread_attr_array (&pthread_attr_array);
  pthread_attr_setdetachstates.676_61 = pthread_attr_setdetachstates;
  D.252115 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.676_61, &getvardecl);

  <bb 47> :
  _62 = D.252115;
  retval.675 = _62 == 0B;
  if (retval.675 != 0)
    goto <bb 50>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 48> :
  pthread_attr_setdetachstates.677_63 = pthread_attr_setdetachstates;
  D.252116 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.677_63, &getvardecl);

  <bb 49> :
  _64 = D.252116;
  pthread_attr_array = MEM[(const struct pthread_attr_array &)_64];

  <bb 50> :
  pthread_attr_array.stmt = gc;
  D.252117 = gimple_call_arg (gc, 0);

  <bb 51> :
  _65 = D.252117;
  pthread_attr_array.attr_tree = _65;
  D.252118 = gimple_call_arg (gc, 1);

  <bb 52> :
  _66 = D.252118;
  _67 = _66->base.code;
  retval.678 = _67 == 26;
  if (retval.678 != 0)
    goto <bb 53>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 53> :
  D.252119 = gimple_call_arg (gc, 1);

  <bb 54> :
  _68 = D.252119;
  D.252120 = int_cst_value (_68);

  <bb 55> :
  _69 = D.252120;
  _70 = (int) _69;
  pthread_attr_array.attr_type_num = _70;

  <bb 56> :
  pthread_attr_setdetachstates.679_71 = pthread_attr_setdetachstates;
  hash_map<tree_node*, pthread_attr_array>::put (pthread_attr_setdetachstates.679_71, &getvardecl, &pthread_attr_array);

  <bb 57> :
  getvardecl = {CLOBBER};
  pthread_attr_array = {CLOBBER};
  goto <bb 65>; [INV]

  <bb 58> :
  D.252122 = gimple_call_lhs (gc);
  _72 = D.252122;
  if (_72 != 0B)
    goto <bb 59>; [INV]
  else
    goto <bb 61>; [INV]

  <bb 59> :
  D.252123 = gimple_call_fn (gc);
  _73 = D.252123;
  if (_73 != 0B)
    goto <bb 60>; [INV]
  else
    goto <bb 61>; [INV]

  <bb 60> :
  iftmp.681 = 1;
  goto <bb 62>; [INV]

  <bb 61> :
  iftmp.681 = 0;

  <bb 62> :
  retval.680 = iftmp.681;
  if (retval.680 != 0)
    goto <bb 63>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 63> :
  D.252124 = gimple_call_lhs (gc);
  _74 = D.252124;
  _75 = _74->base.code;
  retval.682 = _75 == 153;
  if (retval.682 != 0)
    goto <bb 64>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 64> :
  D.252125 = gimple_call_lhs (gc);
  _76 = D.252125;
  ptable.683_77 = ptable;
  set_ptb (bb, ptable.683_77, _76, loc, 0, gc, node);

  <bb 65> :

  <bb 66> :
<L87>:
  return;

  <bb 67> :
<L88>:
  getvardecl = {CLOBBER};
  pthread_attr_array = {CLOBBER};
  resx 4

}



;; Function std::vector<breakpoint>::operator[] (_ZNSt6vectorI10breakpointSaIS0_EEixEm, funcdef_no=7726, decl_uid=185888, cgraph_uid=4358, symbol_order=5144)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<breakpoint>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.252126;

  <bb 2> :
  _1 = this->D.186235._M_impl.D.185580._M_start;
  _2 = __n * 40;
  D.252126 = _1 + _2;

  <bb 3> :
<L0>:
  return D.252126;

}



;; Function std::vector<breakpoint>::size (_ZNKSt6vectorI10breakpointSaIS0_EE4sizeEv, funcdef_no=7725, decl_uid=185868, cgraph_uid=4357, symbol_order=5143)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<breakpoint>::size (const struct vector * const this)
{
  size_type D.252128;

  <bb 2> :
  _1 = this->D.186235._M_impl.D.185580._M_finish;
  _2 = this->D.186235._M_impl.D.185580._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 40;
  D.252128 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.252128;

}



;; Function gimple_call_fndecl (_ZL18gimple_call_fndeclPK6gimple, funcdef_no=2132, decl_uid=92888, cgraph_uid=1269, symbol_order=1429)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_fndecl (const struct gimple * gs)
{
  union tree_node * D.252133;
  const struct gcall * D.252132;
  const struct gcall * gc;
  union tree_node * D.252130;

  <bb 2> :
  D.252132 = GIMPLE_CHECK2<const gcall*> (gs);
  gc = D.252132;
  D.252133 = gimple_call_fndecl (gc);
  D.252130 = D.252133;

  <bb 3> :
<L0>:
  return D.252130;

}



;; Function gimple_call_fndecl (_ZL18gimple_call_fndeclPK5gcall, funcdef_no=2131, decl_uid=92885, cgraph_uid=1268, symbol_order=1428)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_fndecl (const struct gcall * gs)
{
  union tree_node * D.252136;
  union tree_node * D.252134;

  <bb 2> :
  _1 = gimple_call_fn (gs);
  D.252136 = gimple_call_addr_fndecl (_1);
  D.252134 = D.252136;

  <bb 3> :
<L0>:
  return D.252134;

}



;; Function gimple_call_addr_fndecl (_ZL23gimple_call_addr_fndeclPK9tree_node, funcdef_no=1909, decl_uid=89977, cgraph_uid=1048, symbol_order=1208)

Removing basic block 13
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;; 2 succs { 3 13 }
;; 3 succs { 4 13 }
;; 4 succs { 5 8 }
;; 5 succs { 6 8 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
union tree_node * gimple_call_addr_fndecl (const union tree_node * fn)
{
  bool D.252156;
  union tree_node * fndecl;
  union tree_node * D.252153;
  bool iftmp.685;
  bool retval.684;

  <bb 2> :
  if (fn != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 3> :
  _1 = fn->base.code;
  if (_1 == 131)
    goto <bb 4>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 4> :
  fndecl = fn->exp.operands[0];
  _2 = fndecl->base.code;
  if (_2 == 165)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  _3 = fndecl->exp.operands[0];
  _4 = _3->base.code;
  if (_4 == 131)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  _5 = fndecl->exp.operands[1];
  D.252156 = integer_zerop (_5);
  _6 = D.252156;
  if (_6 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  iftmp.685 = 1;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.685 = 0;

  <bb 9> :
  retval.684 = iftmp.685;
  if (retval.684 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _7 = fndecl->exp.operands[0];
  fndecl = _7->exp.operands[0];

  <bb 11> :
  _8 = fndecl->base.code;
  if (_8 == 33)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.252153 = fndecl;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 14>; [INV]

  <bb 13> :
  D.252153 = 0B;

  <bb 14> :
<L15>:
  return D.252153;

}



;; Function pthread_attr_array::pthread_attr_array (_ZN18pthread_attr_arrayC2Ev, funcdef_no=6358, decl_uid=194611, cgraph_uid=3333, symbol_order=4110)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void pthread_attr_array::pthread_attr_array (struct pthread_attr_array * const this)
{
  <bb 2> :
  this->attr_type_num = 0;
  return;

}



;; Function hash_map<tree_node*, pthread_attr_array>::get (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7728, decl_uid=194691, cgraph_uid=4360, symbol_order=5146)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct pthread_attr_array * hash_map<tree_node*, pthread_attr_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.252165;
  struct hash_entry & D.252164;
  unsigned int D.252163;
  struct hash_entry & e;
  struct pthread_attr_array * iftmp.686;
  struct pthread_attr_array * D.252157;

  <bb 2> :
  _1 = &this->m_table;
  D.252163 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::hash (k);
  _2 = D.252163;
  D.252164 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.252164;
  D.252165 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (e);
  _3 = D.252165;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.686 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.686 = &e->m_value;

  <bb 5> :
  D.252157 = iftmp.686;

  <bb 6> :
<L3>:
  return D.252157;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE4hashERKS2_, funcdef_no=8638, decl_uid=194647, cgraph_uid=5270, symbol_order=6060)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::hash (union tree_node * const & h)
{
  hashval_t D.252166;

  <bb 2> :
  D.252166 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.252166;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8639, decl_uid=194831, cgraph_uid=5271, symbol_order=6061)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.252200;
  bool D.252199;
  bool D.252198;
  bool D.252197;
  bool D.252196;
  bool D.252195;
  struct value_type * D.252194;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.690;
  bool retval.689;
  struct value_type & D.252180;
  bool iftmp.688;
  bool retval.687;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 32;
  entry = _5 + _7;
  D.252195 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.252195;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.252196 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.252196;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.252197 = hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (entry, comparable);
  _11 = D.252197;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.688 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.688 = 0;

  <bb 8> :
  retval.687 = iftmp.688;
  if (retval.687 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.252180 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  entry = _17 + _19;
  D.252198 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.252198;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.252199 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.252199;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.252200 = hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (entry, comparable);
  _23 = D.252200;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.690 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.690 = 0;

  <bb 18> :
  retval.689 = iftmp.690;
  if (retval.689 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.252180 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.252180;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8960, decl_uid=194927, cgraph_uid=5592, symbol_order=6382)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.252203;
  bool D.252201;

  <bb 2> :
  D.252203 = hash_map<tree_node*, pthread_attr_array>::hash_entry::is_empty (v);
  D.252201 = D.252203;

  <bb 3> :
<L0>:
  return D.252201;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8642, decl_uid=194760, cgraph_uid=5274, symbol_order=6064)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, pthread_attr_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.252206;
  bool D.252204;

  <bb 2> :
  D.252206 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (e);
  D.252204 = D.252206;

  <bb 3> :
<L0>:
  return D.252204;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8961, decl_uid=194925, cgraph_uid=5593, symbol_order=6383)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.252209;
  bool D.252207;

  <bb 2> :
  D.252209 = hash_map<tree_node*, pthread_attr_array>::hash_entry::is_deleted (v);
  D.252207 = D.252209;

  <bb 3> :
<L0>:
  return D.252207;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9805, decl_uid=194755, cgraph_uid=6437, symbol_order=7227)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, pthread_attr_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.252212;
  bool D.252210;

  <bb 2> :
  D.252212 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_deleted<hash_map<tree_node*, pthread_attr_array>::hash_entry> (e);
  D.252210 = D.252212;

  <bb 3> :
<L0>:
  return D.252210;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_deleted<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10369, decl_uid=239672, cgraph_uid=7001, symbol_order=7795)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_deleted<hash_map<tree_node*, pthread_attr_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.252213;

  <bb 2> :
  _1 = entry->m_key;
  D.252213 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.252213;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9445, decl_uid=194748, cgraph_uid=6077, symbol_order=6867)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.252217;
  bool D.252215;

  <bb 2> :
  _1 = &a->m_key;
  D.252217 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::equal_keys (_1, b);
  D.252215 = D.252217;

  <bb 3> :
<L0>:
  return D.252215;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE10equal_keysERKS2_S7_, funcdef_no=10118, decl_uid=194649, cgraph_uid=6750, symbol_order=7544)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.252218;

  <bb 2> :
  D.252218 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.252218;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8640, decl_uid=213904, cgraph_uid=5272, symbol_order=6062)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.252220;

  <bb 2> :
  _1 = entry->m_key;
  D.252220 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.252220;

}



;; Function hash_map<tree_node*, pthread_attr_array>::put (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7729, decl_uid=194687, cgraph_uid=4361, symbol_order=5147)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
bool hash_map<tree_node*, pthread_attr_array>::put (struct hash_map * const this, union tree_node * const & k, const struct pthread_attr_array & v)
{
  bool D.252229;
  struct hash_entry * D.252228;
  unsigned int D.252227;
  bool ins;
  struct hash_entry * e;
  bool D.252225;
  void * D.213912;
  void * D.213911;

  <bb 2> :
  _1 = &this->m_table;
  D.252227 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::hash (k);
  _2 = D.252227;
  D.252228 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.252228;
  D.252229 = hash_map<tree_node*, pthread_attr_array>::hash_entry::is_empty (e);
  ins = D.252229;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.213911 = &e->m_value;
  D.213912 = operator new (24, D.213911);
  MEM[(struct pthread_attr_array *)D.213912] = *v;
  goto <bb 5>; [INV]

  <bb 4> :
  e->m_value = *v;

  <bb 5> :
  D.252225 = ~ins;

  <bb 6> :
<L3>:
  return D.252225;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8641, decl_uid=194842, cgraph_uid=5273, symbol_order=6063)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.252279;
  bool D.252278;
  bool D.252277;
  bool D.252276;
  bool D.252275;
  bool D.252274;
  struct value_type * D.252273;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.696;
  bool retval.695;
  bool retval.694;
  bool retval.693;
  bool retval.692;
  bool retval.691;
  struct value_type * D.252235;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 32;
  entry = _11 + _13;
  size = this->m_size;
  D.252274 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.691 = D.252274;
  if (retval.691 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.252275 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.692 = D.252275;
  if (retval.692 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 32;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.252276 = hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (entry, comparable);
  retval.693 = D.252276;
  if (retval.693 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  D.252235 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 32;
  entry = _24 + _26;
  D.252277 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.694 = D.252277;
  if (retval.694 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.252278 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.695 = D.252278;
  if (retval.695 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 32;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.252279 = hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (entry, comparable);
  retval.696 = D.252279;
  if (retval.696 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 32;
  D.252235 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.252235 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.252235 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 32;
  D.252235 = _37 + _39;

  <bb 27> :
<L37>:
  return D.252235;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9446, decl_uid=194923, cgraph_uid=6078, symbol_order=6868)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.252310;
  unsigned int D.252309;
  bool D.252308;
  bool D.252307;
  struct mem_alloc_description & D.252306;
  struct value_type * D.252305;
  unsigned int D.252304;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.236461;
  void * D.236460;
  struct hash_entry * D.236486;
  bool iftmp.700;
  bool retval.699;
  bool iftmp.698;
  bool retval.697;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 32;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.698 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.698 = 0;

  <bb 6> :
  retval.697 = iftmp.698;
  if (retval.697 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.252304 = hash_table_higher_prime_index (_5);
  nindex = D.252304;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.252305 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.252305;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.252307 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.252307;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.252308 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.252308;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.700 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.700 = 0;

  <bb 15> :
  retval.699 = iftmp.700;
  if (retval.699 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.252309 = hash_map<tree_node*, pthread_attr_array>::hash_entry::hash (x);
  _16 = D.252309;
  D.252310 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.252310;
  D.236486 = std::move<hash_map<tree_node*, pthread_attr_array>::hash_entry&> (x);
  D.236460 = q;
  D.236461 = operator new (32, D.236460);
  MEM[(struct value_type *)D.236461] = *D.236486;

  <bb 17> :
  p = p + 32;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10119, decl_uid=194818, cgraph_uid=6751, symbol_order=7545)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.252311;

  <bb 2> :
  D.252311 = this->m_size;

  <bb 3> :
<L0>:
  return D.252311;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10120, decl_uid=194820, cgraph_uid=6752, symbol_order=7546)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.252313;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.252313 = _1 - _2;

  <bb 3> :
<L0>:
  return D.252313;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10121, decl_uid=194920, cgraph_uid=6753, symbol_order=7547)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.701;
  bool D.252315;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.701 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.701 = 0;

  <bb 6> :
  D.252315 = iftmp.701;

  <bb 7> :
<L4>:
  return D.252315;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9444, decl_uid=194910, cgraph_uid=6076, symbol_order=6866)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.252337;
  struct value_type * D.252336;
  struct mem_alloc_description & D.252335;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.252333;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.252336 = xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_alloc (n);
  nentries = D.252336;
  goto <bb 6>; [INV]

  <bb 5> :
  D.252337 = ggc_cleared_vec_alloc<hash_map<tree_node*, pthread_attr_array>::hash_entry> (n);
  nentries = D.252337;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.252333 = nentries;

  <bb 9> :
<L14>:
  return D.252333;

}



;; Function xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10116, decl_uid=218393, cgraph_uid=6748, symbol_order=7542)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.252340;
  struct hash_entry * D.252338;

  <bb 2> :
  D.252340 = xcalloc (count, 32);
  D.252338 = D.252340;

  <bb 3> :
<L0>:
  return D.252338;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10117, decl_uid=236431, cgraph_uid=6749, symbol_order=7543)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, pthread_attr_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.252347;
  struct hash_entry * D.252346;
  struct hash_entry * D.252344;
  bool retval.702;

  <bb 2> :
  retval.702 = need_finalization_p<hash_map<tree_node*, pthread_attr_array>::hash_entry> ();
  if (retval.702 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 32;
  D.252346 = ggc_internal_cleared_alloc (_1, finalize, 32, c);
  D.252344 = D.252346;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 32;
  D.252347 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.252344 = D.252347;

  <bb 5> :
<L2>:
  return D.252344;

}



;; Function finalize<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10627, decl_uid=242362, cgraph_uid=7259, symbol_order=8053)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, pthread_attr_array>::hash_entry> (void * p)
{
  <bb 2> :
  MEM[(struct hash_entry *)p] = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10626, decl_uid=242361, cgraph_uid=7258, symbol_order=8052)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, pthread_attr_array>::hash_entry> ()
{
  bool D.252348;

  <bb 2> :
  D.252348 = 0;

  <bb 3> :
<L0>:
  return D.252348;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10123, decl_uid=194746, cgraph_uid=6755, symbol_order=7549)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, pthread_attr_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.252352;
  hashval_t D.252350;

  <bb 2> :
  _1 = &e->m_key;
  D.252352 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::hash (_1);
  D.252350 = D.252352;

  <bb 3> :
<L0>:
  return D.252350;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10122, decl_uid=194913, cgraph_uid=6754, symbol_order=7548)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.252365;
  bool D.252364;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.704;
  struct value_type * D.252356;
  bool retval.703;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 32;
  slot = _2 + _4;
  D.252364 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.703 = D.252364;
  if (retval.703 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.252356 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 32;
  slot = _8 + _10;
  D.252365 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.704 = D.252365;
  if (retval.704 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.252356 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.252356;

}



;; Function std::move<hash_map<tree_node*, pthread_attr_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10124, decl_uid=236458, cgraph_uid=6756, symbol_order=7550)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, pthread_attr_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.252366;

  <bb 2> :
  D.252366 = __t;

  <bb 3> :
<L0>:
  return D.252366;

}



;; Function xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8963, decl_uid=218395, cgraph_uid=5595, symbol_order=6385)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9447, decl_uid=194931, cgraph_uid=6079, symbol_order=6869)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, pthread_attr_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10125, decl_uid=194758, cgraph_uid=6757, symbol_order=7551)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, pthread_attr_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::mark_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::mark_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10628, decl_uid=242388, cgraph_uid=7260, symbol_order=8054)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::mark_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function collect_FunctionMapping_Assign (_Z30collect_FunctionMapping_AssignP6gimpleP11cgraph_nodeP15basic_block_defP3ptb, funcdef_no=6360, decl_uid=187006, cgraph_uid=3381, symbol_order=4158)

Removing basic block 15
Removing basic block 29
Removing basic block 49
Removing basic block 60
Removing basic block 61
Removing basic block 80
Removing basic block 93
Removing basic block 107
Removing basic block 122
Removing basic block 135
Removing basic block 161
Removing basic block 181
Removing basic block 192
Removing basic block 194
Removing basic block 206
Removing basic block 211
Removing basic block 222
Removing basic block 223
Removing basic block 224
Removing basic block 232
Removing basic block 236
Removing basic block 237
Removing basic block 238
Merging blocks 242 and 255
Removing basic block 247
Merging blocks 254 and 256
Removing basic block 260
Removing basic block 261
Merging blocks 270 and 608
Removing basic block 283
Removing basic block 291
Removing basic block 303
Removing basic block 311
Removing basic block 316
Removing basic block 333
Removing basic block 343
Removing basic block 348
Removing basic block 364
Removing basic block 384
Removing basic block 395
Removing basic block 396
Removing basic block 397
Removing basic block 399
Removing basic block 405
Removing basic block 414
Removing basic block 419
Removing basic block 432
Removing basic block 438
Removing basic block 444
Removing basic block 465
Removing basic block 476
Removing basic block 477
Removing basic block 478
Removing basic block 479
Removing basic block 484
Removing basic block 504
Removing basic block 515
Removing basic block 516
Removing basic block 517
Removing basic block 518
Removing basic block 519
Removing basic block 520
Removing basic block 521
Removing basic block 527
Removing basic block 535
Removing basic block 537
Removing basic block 550
Removing basic block 561
Removing basic block 562
Removing basic block 563
Removing basic block 564
Removing basic block 569
Removing basic block 577
Removing basic block 583
Removing basic block 591
Removing basic block 598
Merging blocks 607 and 609
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 4
;;  header 214, latch 213
;;  depth 1, outer 0
;;  nodes: 214 213 210 212 211 209 215
;;
;; Loop 3
;;  header 193, latch 192
;;  depth 1, outer 0
;;  nodes: 193 192 186 191 188 187 190 189 185
;;
;; Loop 2
;;  header 160, latch 159
;;  depth 1, outer 0
;;  nodes: 160 159 141 158 157 156 155 154 150 153 152 151 149 148 145 147 146 143 142 144 139 140 138 137 136 135 161
;;
;; Loop 1
;;  header 391, latch 390
;;  depth 1, outer 0
;;  nodes: 391 390 388 389 387 383 386 384 385
;; 2 succs { 3 234 }
;; 3 succs { 4 5 }
;; 4 succs { 533 }
;; 5 succs { 6 533 }
;; 6 succs { 7 533 }
;; 7 succs { 10 8 }
;; 8 succs { 10 9 }
;; 9 succs { 10 60 }
;; 10 succs { 11 23 }
;; 11 succs { 537 12 }
;; 12 succs { 534 13 }
;; 13 succs { 14 15 }
;; 14 succs { 534 18 }
;; 15 succs { 534 16 }
;; 16 succs { 534 17 }
;; 17 succs { 534 18 }
;; 18 succs { 534 19 }
;; 19 succs { 534 20 }
;; 20 succs { 534 21 }
;; 21 succs { 534 22 }
;; 22 succs { 59 }
;; 23 succs { 24 59 }
;; 24 succs { 547 25 }
;; 25 succs { 545 26 }
;; 26 succs { 27 28 }
;; 27 succs { 545 31 }
;; 28 succs { 545 29 }
;; 29 succs { 545 30 }
;; 30 succs { 545 31 }
;; 31 succs { 545 32 }
;; 32 succs { 545 33 }
;; 33 succs { 545 34 }
;; 34 succs { 545 35 }
;; 35 succs { 36 58 }
;; 36 succs { 542 37 }
;; 37 succs { 38 57 }
;; 38 succs { 39 57 }
;; 39 succs { 542 40 }
;; 40 succs { 41 57 }
;; 41 succs { 541 42 }
;; 42 succs { 541 43 }
;; 43 succs { 541 44 }
;; 44 succs { 538 45 }
;; 45 succs { 46 47 }
;; 46 succs { 541 51 }
;; 47 succs { 541 48 }
;; 48 succs { 539 49 }
;; 49 succs { 539 50 }
;; 50 succs { 541 51 }
;; 51 succs { 541 52 }
;; 52 succs { 541 53 }
;; 53 succs { 541 54 }
;; 54 succs { 541 55 }
;; 55 succs { 540 56 }
;; 56 succs { 57 }
;; 57 succs { 58 }
;; 58 succs { 59 }
;; 59 succs { 233 }
;; 60 succs { 61 69 }
;; 61 succs { 550 62 }
;; 62 succs { 63 68 }
;; 63 succs { 548 64 }
;; 64 succs { 548 65 }
;; 65 succs { 548 66 }
;; 66 succs { 548 67 }
;; 67 succs { 68 }
;; 68 succs { 233 }
;; 69 succs { 71 70 }
;; 70 succs { 71 82 }
;; 71 succs { 552 72 }
;; 72 succs { 552 73 }
;; 73 succs { 74 75 }
;; 74 succs { 552 77 }
;; 75 succs { 552 76 }
;; 76 succs { 552 77 }
;; 77 succs { 552 78 }
;; 78 succs { 552 79 }
;; 79 succs { 552 80 }
;; 80 succs { 552 81 }
;; 81 succs { 233 }
;; 82 succs { 83 109 }
;; 83 succs { 558 84 }
;; 84 succs { 556 85 }
;; 85 succs { 86 87 }
;; 86 succs { 556 90 }
;; 87 succs { 556 88 }
;; 88 succs { 556 89 }
;; 89 succs { 556 90 }
;; 90 succs { 556 91 }
;; 91 succs { 556 92 }
;; 92 succs { 556 93 }
;; 93 succs { 556 94 }
;; 94 succs { 556 95 }
;; 95 succs { 96 108 }
;; 96 succs { 555 97 }
;; 97 succs { 555 98 }
;; 98 succs { 99 100 }
;; 99 succs { 555 103 }
;; 100 succs { 555 101 }
;; 101 succs { 555 102 }
;; 102 succs { 555 103 }
;; 103 succs { 555 104 }
;; 104 succs { 555 105 }
;; 105 succs { 555 106 }
;; 106 succs { 555 107 }
;; 107 succs { 108 }
;; 108 succs { 233 }
;; 109 succs { 110 121 }
;; 110 succs { 561 111 }
;; 111 succs { 559 112 }
;; 112 succs { 113 114 }
;; 113 succs { 559 117 }
;; 114 succs { 559 115 }
;; 115 succs { 559 116 }
;; 116 succs { 559 117 }
;; 117 succs { 559 118 }
;; 118 succs { 559 119 }
;; 119 succs { 559 120 }
;; 120 succs { 233 }
;; 121 succs { 122 133 }
;; 122 succs { 564 123 }
;; 123 succs { 562 124 }
;; 124 succs { 125 126 }
;; 125 succs { 562 129 }
;; 126 succs { 562 127 }
;; 127 succs { 562 128 }
;; 128 succs { 562 129 }
;; 129 succs { 562 130 }
;; 130 succs { 562 131 }
;; 131 succs { 562 132 }
;; 132 succs { 233 }
;; 133 succs { 577 134 }
;; 134 succs { 160 }
;; 135 succs { 568 136 }
;; 136 succs { 139 137 }
;; 137 succs { 568 138 }
;; 138 succs { 139 140 }
;; 139 succs { 141 }
;; 140 succs { 141 }
;; 141 succs { 142 159 }
;; 142 succs { 567 143 }
;; 143 succs { 144 146 }
;; 144 succs { 567 145 }
;; 145 succs { 148 }
;; 146 succs { 567 147 }
;; 147 succs { 148 }
;; 148 succs { 565 149 }
;; 149 succs { 150 151 }
;; 150 succs { 565 154 }
;; 151 succs { 565 152 }
;; 152 succs { 565 153 }
;; 153 succs { 565 154 }
;; 154 succs { 565 155 }
;; 155 succs { 565 156 }
;; 156 succs { 565 157 }
;; 157 succs { 565 158 }
;; 158 succs { 159 }
;; 159 succs { 160 }
;; 160 succs { 577 161 }
;; 161 succs { 135 162 }
;; 162 succs { 577 163 }
;; 163 succs { 164 181 }
;; 164 succs { 577 165 }
;; 165 succs { 166 181 }
;; 166 succs { 571 167 }
;; 167 succs { 569 168 }
;; 168 succs { 169 170 }
;; 169 succs { 571 174 }
;; 170 succs { 571 171 }
;; 171 succs { 570 172 }
;; 172 succs { 570 173 }
;; 173 succs { 571 174 }
;; 174 succs { 571 175 }
;; 175 succs { 571 176 }
;; 176 succs { 571 177 }
;; 177 succs { 571 178 }
;; 178 succs { 179 180 }
;; 179 succs { 571 180 }
;; 180 succs { 181 }
;; 181 succs { 577 182 }
;; 182 succs { 183 216 }
;; 183 succs { 184 196 }
;; 184 succs { 193 }
;; 185 succs { 577 186 }
;; 186 succs { 187 192 }
;; 187 succs { 577 188 }
;; 188 succs { 189 192 }
;; 189 succs { 577 190 }
;; 190 succs { 577 191 }
;; 191 succs { 192 }
;; 192 succs { 193 }
;; 193 succs { 185 194 }
;; 194 succs { 195 196 }
;; 195 succs { 232 }
;; 196 succs { 577 197 }
;; 197 succs { 577 198 }
;; 198 succs { 199 216 }
;; 199 succs { 200 206 }
;; 200 succs { 577 201 }
;; 201 succs { 202 206 }
;; 202 succs { 577 203 }
;; 203 succs { 204 206 }
;; 204 succs { 577 205 }
;; 205 succs { 577 206 }
;; 206 succs { 577 207 }
;; 207 succs { 208 216 }
;; 208 succs { 214 }
;; 209 succs { 577 210 }
;; 210 succs { 211 213 }
;; 211 succs { 577 212 }
;; 212 succs { 577 213 }
;; 213 succs { 214 }
;; 214 succs { 577 215 }
;; 215 succs { 209 216 }
;; 216 succs { 217 231 }
;; 217 succs { 576 218 }
;; 218 succs { 219 220 }
;; 219 succs { 232 }
;; 220 succs { 576 221 }
;; 221 succs { 574 222 }
;; 222 succs { 223 224 }
;; 223 succs { 574 227 }
;; 224 succs { 574 225 }
;; 225 succs { 574 226 }
;; 226 succs { 574 227 }
;; 227 succs { 574 228 }
;; 228 succs { 574 229 }
;; 229 succs { 574 230 }
;; 230 succs { 231 }
;; 231 succs { 233 }
;; 232 succs { 533 }
;; 233 succs { 533 }
;; 234 succs { 235 533 }
;; 235 succs { 649 236 }
;; 236 succs { 239 237 }
;; 237 succs { 649 238 }
;; 238 succs { 239 240 }
;; 239 succs { 241 }
;; 240 succs { 241 }
;; 241 succs { 242 243 }
;; 242 succs { 533 }
;; 243 succs { 649 244 }
;; 244 succs { 649 245 }
;; 245 succs { 246 263 }
;; 246 succs { 247 249 }
;; 247 succs { 248 249 }
;; 248 succs { 250 }
;; 249 succs { 250 }
;; 250 succs { 251 262 }
;; 251 succs { 252 262 }
;; 252 succs { 578 253 }
;; 253 succs { 254 255 }
;; 254 succs { 578 258 }
;; 255 succs { 578 256 }
;; 256 succs { 578 257 }
;; 257 succs { 578 258 }
;; 258 succs { 578 259 }
;; 259 succs { 578 260 }
;; 260 succs { 578 261 }
;; 261 succs { 262 }
;; 262 succs { 263 }
;; 263 succs { 264 294 }
;; 264 succs { 265 267 }
;; 265 succs { 266 267 }
;; 266 succs { 268 }
;; 267 succs { 268 }
;; 268 succs { 269 280 }
;; 269 succs { 270 280 }
;; 270 succs { 582 271 }
;; 271 succs { 272 273 }
;; 272 succs { 582 276 }
;; 273 succs { 582 274 }
;; 274 succs { 582 275 }
;; 275 succs { 582 276 }
;; 276 succs { 582 277 }
;; 277 succs { 582 278 }
;; 278 succs { 582 279 }
;; 279 succs { 280 }
;; 280 succs { 281 293 }
;; 281 succs { 585 282 }
;; 282 succs { 283 284 }
;; 283 succs { 585 287 }
;; 284 succs { 585 285 }
;; 285 succs { 585 286 }
;; 286 succs { 585 287 }
;; 287 succs { 585 288 }
;; 288 succs { 585 289 }
;; 289 succs { 585 290 }
;; 290 succs { 585 291 }
;; 291 succs { 585 292 }
;; 292 succs { 293 }
;; 293 succs { 294 }
;; 294 succs { 295 473 }
;; 295 succs { 296 309 }
;; 296 succs { 297 322 }
;; 297 succs { 589 298 }
;; 298 succs { 299 300 }
;; 299 succs { 589 303 }
;; 300 succs { 589 301 }
;; 301 succs { 589 302 }
;; 302 succs { 589 303 }
;; 303 succs { 589 304 }
;; 304 succs { 589 305 }
;; 305 succs { 589 306 }
;; 306 succs { 589 307 }
;; 307 succs { 589 308 }
;; 308 succs { 322 }
;; 309 succs { 310 322 }
;; 310 succs { 592 311 }
;; 311 succs { 312 313 }
;; 312 succs { 592 316 }
;; 313 succs { 592 314 }
;; 314 succs { 592 315 }
;; 315 succs { 592 316 }
;; 316 succs { 592 317 }
;; 317 succs { 592 318 }
;; 318 succs { 592 319 }
;; 319 succs { 592 320 }
;; 320 succs { 592 321 }
;; 321 succs { 322 }
;; 322 succs { 323 358 }
;; 323 succs { 649 324 }
;; 324 succs { 325 336 }
;; 325 succs { 595 326 }
;; 326 succs { 327 328 }
;; 327 succs { 595 331 }
;; 328 succs { 595 329 }
;; 329 succs { 595 330 }
;; 330 succs { 595 331 }
;; 331 succs { 595 332 }
;; 332 succs { 595 333 }
;; 333 succs { 595 334 }
;; 334 succs { 595 335 }
;; 335 succs { 336 }
;; 336 succs { 337 358 }
;; 337 succs { 604 338 }
;; 338 succs { 339 357 }
;; 339 succs { 340 357 }
;; 340 succs { 341 357 }
;; 341 succs { 602 342 }
;; 342 succs { 343 357 }
;; 343 succs { 601 344 }
;; 344 succs { 598 345 }
;; 345 succs { 346 347 }
;; 346 succs { 601 351 }
;; 347 succs { 601 348 }
;; 348 succs { 599 349 }
;; 349 succs { 599 350 }
;; 350 succs { 601 351 }
;; 351 succs { 601 352 }
;; 352 succs { 601 353 }
;; 353 succs { 601 354 }
;; 354 succs { 601 355 }
;; 355 succs { 600 356 }
;; 356 succs { 357 }
;; 357 succs { 358 }
;; 358 succs { 359 371 }
;; 359 succs { 360 532 }
;; 360 succs { 605 361 }
;; 361 succs { 362 363 }
;; 362 succs { 605 366 }
;; 363 succs { 605 364 }
;; 364 succs { 605 365 }
;; 365 succs { 605 366 }
;; 366 succs { 605 367 }
;; 367 succs { 605 368 }
;; 368 succs { 605 369 }
;; 369 succs { 605 370 }
;; 370 succs { 532 }
;; 371 succs { 372 393 }
;; 372 succs { 608 373 }
;; 373 succs { 374 375 }
;; 374 succs { 608 378 }
;; 375 succs { 608 376 }
;; 376 succs { 608 377 }
;; 377 succs { 608 378 }
;; 378 succs { 379 392 }
;; 379 succs { 380 381 }
;; 380 succs { 382 }
;; 381 succs { 382 }
;; 382 succs { 391 }
;; 383 succs { 384 387 }
;; 384 succs { 385 387 }
;; 385 succs { 608 386 }
;; 386 succs { 387 }
;; 387 succs { 388 389 }
;; 388 succs { 390 }
;; 389 succs { 390 }
;; 390 succs { 391 }
;; 391 succs { 383 392 }
;; 392 succs { 532 }
;; 393 succs { 394 405 }
;; 394 succs { 611 395 }
;; 395 succs { 396 397 }
;; 396 succs { 611 400 }
;; 397 succs { 611 398 }
;; 398 succs { 611 399 }
;; 399 succs { 611 400 }
;; 400 succs { 611 401 }
;; 401 succs { 611 402 }
;; 402 succs { 611 403 }
;; 403 succs { 611 404 }
;; 404 succs { 532 }
;; 405 succs { 406 532 }
;; 406 succs { 407 460 }
;; 407 succs { 408 427 }
;; 408 succs { 409 460 }
;; 409 succs { 410 460 }
;; 410 succs { 411 460 }
;; 411 succs { 632 412 }
;; 412 succs { 413 460 }
;; 413 succs { 617 414 }
;; 414 succs { 614 415 }
;; 415 succs { 416 417 }
;; 416 succs { 617 421 }
;; 417 succs { 617 418 }
;; 418 succs { 615 419 }
;; 419 succs { 615 420 }
;; 420 succs { 617 421 }
;; 421 succs { 617 422 }
;; 422 succs { 617 423 }
;; 423 succs { 617 424 }
;; 424 succs { 617 425 }
;; 425 succs { 616 426 }
;; 426 succs { 460 }
;; 427 succs { 428 438 }
;; 428 succs { 620 429 }
;; 429 succs { 430 431 }
;; 430 succs { 620 434 }
;; 431 succs { 620 432 }
;; 432 succs { 620 433 }
;; 433 succs { 620 434 }
;; 434 succs { 620 435 }
;; 435 succs { 620 436 }
;; 436 succs { 620 437 }
;; 437 succs { 460 }
;; 438 succs { 439 460 }
;; 439 succs { 440 460 }
;; 440 succs { 441 460 }
;; 441 succs { 442 460 }
;; 442 succs { 443 460 }
;; 443 succs { 444 460 }
;; 444 succs { 632 445 }
;; 445 succs { 446 460 }
;; 446 succs { 626 447 }
;; 447 succs { 623 448 }
;; 448 succs { 449 450 }
;; 449 succs { 626 454 }
;; 450 succs { 626 451 }
;; 451 succs { 624 452 }
;; 452 succs { 624 453 }
;; 453 succs { 626 454 }
;; 454 succs { 626 455 }
;; 455 succs { 626 456 }
;; 456 succs { 626 457 }
;; 457 succs { 626 458 }
;; 458 succs { 625 459 }
;; 459 succs { 460 }
;; 460 succs { 461 472 }
;; 461 succs { 462 472 }
;; 462 succs { 629 463 }
;; 463 succs { 464 465 }
;; 464 succs { 629 468 }
;; 465 succs { 629 466 }
;; 466 succs { 629 467 }
;; 467 succs { 629 468 }
;; 468 succs { 629 469 }
;; 469 succs { 629 470 }
;; 470 succs { 629 471 }
;; 471 succs { 472 }
;; 472 succs { 532 }
;; 473 succs { 474 519 }
;; 474 succs { 475 506 }
;; 475 succs { 476 495 }
;; 476 succs { 477 506 }
;; 477 succs { 478 506 }
;; 478 succs { 479 506 }
;; 479 succs { 645 480 }
;; 480 succs { 481 506 }
;; 481 succs { 636 482 }
;; 482 succs { 633 483 }
;; 483 succs { 484 485 }
;; 484 succs { 636 489 }
;; 485 succs { 636 486 }
;; 486 succs { 634 487 }
;; 487 succs { 634 488 }
;; 488 succs { 636 489 }
;; 489 succs { 636 490 }
;; 490 succs { 636 491 }
;; 491 succs { 636 492 }
;; 492 succs { 636 493 }
;; 493 succs { 635 494 }
;; 494 succs { 506 }
;; 495 succs { 496 506 }
;; 496 succs { 639 497 }
;; 497 succs { 498 499 }
;; 498 succs { 639 502 }
;; 499 succs { 639 500 }
;; 500 succs { 639 501 }
;; 501 succs { 639 502 }
;; 502 succs { 639 503 }
;; 503 succs { 639 504 }
;; 504 succs { 639 505 }
;; 505 succs { 506 }
;; 506 succs { 507 518 }
;; 507 succs { 508 518 }
;; 508 succs { 642 509 }
;; 509 succs { 510 511 }
;; 510 succs { 642 514 }
;; 511 succs { 642 512 }
;; 512 succs { 642 513 }
;; 513 succs { 642 514 }
;; 514 succs { 642 515 }
;; 515 succs { 642 516 }
;; 516 succs { 642 517 }
;; 517 succs { 518 }
;; 518 succs { 532 }
;; 519 succs { 520 532 }
;; 520 succs { 648 521 }
;; 521 succs { 646 522 }
;; 522 succs { 523 524 }
;; 523 succs { 646 527 }
;; 524 succs { 646 525 }
;; 525 succs { 646 526 }
;; 526 succs { 646 527 }
;; 527 succs { 646 528 }
;; 528 succs { 646 529 }
;; 529 succs { 646 530 }
;; 530 succs { 646 531 }
;; 531 succs { 532 }
;; 532 succs { 533 }
;; 533 succs { 1 }
;; 534 succs { 535 }
;; 535 succs { 536 }
;; 536 succs { 537 }
;; 537 succs { }
;; 538 succs { 541 }
;; 539 succs { 541 }
;; 540 succs { 541 }
;; 541 succs { 542 }
;; 542 succs { 543 }
;; 543 succs { 544 }
;; 544 succs { 545 }
;; 545 succs { 546 }
;; 546 succs { 547 }
;; 547 succs { }
;; 548 succs { 549 }
;; 549 succs { 550 }
;; 550 succs { 551 }
;; 551 succs { }
;; 552 succs { 553 }
;; 553 succs { 554 }
;; 554 succs { }
;; 555 succs { 556 }
;; 556 succs { 557 }
;; 557 succs { 558 }
;; 558 succs { }
;; 559 succs { 560 }
;; 560 succs { 561 }
;; 561 succs { }
;; 562 succs { 563 }
;; 563 succs { 564 }
;; 564 succs { }
;; 565 succs { 566 }
;; 566 succs { 567 }
;; 567 succs { 568 }
;; 568 succs { 577 }
;; 569 succs { 571 }
;; 570 succs { 571 }
;; 571 succs { 572 }
;; 572 succs { 573 }
;; 573 succs { 577 }
;; 574 succs { 575 }
;; 575 succs { 576 }
;; 576 succs { 577 }
;; 577 succs { }
;; 578 succs { 579 }
;; 579 succs { 580 }
;; 580 succs { 581 }
;; 581 succs { 649 }
;; 582 succs { 583 }
;; 583 succs { 584 }
;; 584 succs { 588 }
;; 585 succs { 586 }
;; 586 succs { 587 }
;; 587 succs { 588 }
;; 588 succs { 649 }
;; 589 succs { 590 }
;; 590 succs { 591 }
;; 591 succs { 649 }
;; 592 succs { 593 }
;; 593 succs { 594 }
;; 594 succs { 649 }
;; 595 succs { 596 }
;; 596 succs { 597 }
;; 597 succs { 649 }
;; 598 succs { 601 }
;; 599 succs { 601 }
;; 600 succs { 601 }
;; 601 succs { 602 }
;; 602 succs { 603 }
;; 603 succs { 604 }
;; 604 succs { 649 }
;; 605 succs { 606 }
;; 606 succs { 607 }
;; 607 succs { 649 }
;; 608 succs { 609 }
;; 609 succs { 610 }
;; 610 succs { 649 }
;; 611 succs { 612 }
;; 612 succs { 613 }
;; 613 succs { 649 }
;; 614 succs { 617 }
;; 615 succs { 617 }
;; 616 succs { 617 }
;; 617 succs { 618 }
;; 618 succs { 619 }
;; 619 succs { 632 }
;; 620 succs { 621 }
;; 621 succs { 622 }
;; 622 succs { 632 }
;; 623 succs { 626 }
;; 624 succs { 626 }
;; 625 succs { 626 }
;; 626 succs { 627 }
;; 627 succs { 628 }
;; 628 succs { 632 }
;; 629 succs { 630 }
;; 630 succs { 631 }
;; 631 succs { 632 }
;; 632 succs { 649 }
;; 633 succs { 636 }
;; 634 succs { 636 }
;; 635 succs { 636 }
;; 636 succs { 637 }
;; 637 succs { 638 }
;; 638 succs { 645 }
;; 639 succs { 640 }
;; 640 succs { 641 }
;; 641 succs { 645 }
;; 642 succs { 643 }
;; 643 succs { 644 }
;; 644 succs { 645 }
;; 645 succs { 649 }
;; 646 succs { 647 }
;; 647 succs { 648 }
;; 648 succs { 649 }
;; 649 succs { }
void collect_FunctionMapping_Assign (struct gimple * gc, struct cgraph_node * node, struct basic_block_def * bb, struct ptb * ptable)
{
  struct function * D.253108;
  union tree_node * D.253107;
  struct function_assign_array * D.253106;
  struct function_assign_array * D.253105;
  struct function * D.253100;
  struct function_assign_array * D.253099;
  struct function_assign_array * D.253098;
  struct function * D.253094;
  struct function_assign_array * D.253093;
  struct function_assign_array * D.253092;
  union tree_node * D.253087;
  struct function * D.253086;
  union tree_node * D.253085;
  struct function_assign_array * D.253083;
  union tree_node * D.253082;
  struct function_assign_array * D.253080;
  union tree_node * D.253079;
  union tree_node * D.253078;
  struct function * D.253073;
  struct function_assign_array * D.253072;
  struct function_assign_array * D.253071;
  union tree_node * D.253066;
  struct function * D.253065;
  union tree_node * D.253064;
  struct function_assign_array * D.253062;
  union tree_node * D.253061;
  struct function_assign_array * D.253059;
  union tree_node * D.253058;
  union tree_node * D.253057;
  struct function * D.253053;
  struct function_assign_array * D.253052;
  struct function_assign_array * D.253051;
  union tree_node * D.253046;
  struct function * D.253045;
  union tree_node * D.253044;
  struct function_assign_array * D.253042;
  union tree_node * D.253041;
  struct function_assign_array * D.253039;
  union tree_node * D.253038;
  union tree_node * D.253037;
  struct function * D.253033;
  union tree_node * D.253032;
  struct function_assign_array * D.253031;
  struct function_assign_array * D.253030;
  struct function * D.253026;
  struct function_assign_array * D.253025;
  struct function_assign_array * D.253024;
  struct function * D.253020;
  union tree_node * D.253019;
  struct function_assign_array * D.253018;
  struct function_assign_array * D.253017;
  union tree_node * D.253011;
  struct function * D.253010;
  union tree_node * D.253009;
  struct function_assign_array * D.253007;
  union tree_node * D.253006;
  struct function_assign_array * D.253004;
  union tree_node * D.253003;
  union tree_node * D.253002;
  union tree_node * D.253001;
  struct function * D.252997;
  union tree_node * D.252996;
  struct function_assign_array * D.252995;
  struct function_assign_array * D.252994;
  union tree_node * D.252993;
  struct function * D.252989;
  union tree_node * D.252988;
  union tree_node * D.252987;
  struct function_assign_array * D.252986;
  struct function_assign_array * D.252985;
  struct function * D.252981;
  union tree_node * D.252980;
  union tree_node * D.252979;
  struct function_assign_array * D.252978;
  struct function_assign_array * D.252977;
  struct function * D.252972;
  union tree_node * D.252971;
  union tree_node * D.252970;
  struct function_assign_array * D.252969;
  struct function_assign_array * D.252968;
  struct function * D.252964;
  struct function_assign_array * D.252963;
  struct function_assign_array * D.252962;
  struct function * D.252957;
  struct function_assign_array * D.252956;
  struct function_assign_array * D.252955;
  union tree_node * D.252954;
  union tree_node * D.252953;
  union tree_node * D.252952;
  union tree_node * D.252951;
  struct function * D.252942;
  struct function_return_array * D.252941;
  struct function_return_array * D.252940;
  struct function * D.252939;
  struct function_return_array * D.252938;
  unsigned int D.252937;
  union tree_node * D.252936;
  union tree_node * D.252935;
  unsigned int D.252934;
  union tree_node * D.252933;
  union tree_node * D.252932;
  union tree_node * D.252931;
  const char * D.252930;
  union tree_node * D.252929;
  union tree_node * D.252928;
  union tree_node * D.252924;
  struct function * D.252923;
  union tree_node * D.252922;
  struct function_assign_array * D.252920;
  union tree_node * D.252919;
  struct function_assign_array * D.252917;
  union tree_node * D.252916;
  union tree_node * D.252915;
  unsigned int D.252914;
  unsigned int D.252913;
  struct function * D.252908;
  union tree_node * D.252907;
  struct function_assign_array * D.252906;
  struct function_assign_array * D.252905;
  union tree_node * D.252904;
  union tree_node * D.252903;
  union tree_node * D.252902;
  union tree_node * D.252901;
  union tree_node * D.252900;
  union tree_node * D.252896;
  struct function_pthread_exit_array * D.252895;
  struct function_pthread_exit_array * D.252894;
  struct function * D.252893;
  union tree_node * D.252889;
  struct function_pthread_detched_array * D.252888;
  struct function_pthread_detched_array * D.252887;
  struct function * D.252886;
  struct function * D.252881;
  union tree_node * D.252880;
  struct function_assign_array * D.252879;
  struct function_assign_array * D.252878;
  union tree_node * D.252877;
  union tree_node * D.252876;
  struct function * D.252875;
  union tree_node * D.252874;
  struct function_assign_array * D.252873;
  struct function_assign_array * D.252872;
  union tree_node * D.252871;
  struct function * D.252867;
  union tree_node * D.252866;
  struct function_return_array * D.252865;
  struct function_return_array * D.252864;
  struct function * D.252863;
  struct function * D.252858;
  union tree_node * D.252857;
  union tree_node * D.252848;
  struct function * D.252847;
  union tree_node * D.252846;
  struct function_assign_array * D.252844;
  union tree_node * D.252843;
  struct function_assign_array * D.252841;
  union tree_node * D.252840;
  union tree_node * D.252839;
  union tree_node * D.252838;
  union tree_node * D.252837;
  union tree_node * D.252836;
  union tree_node * D.252835;
  struct function_free_array * D.252834;
  struct function_free_array * D.252833;
  struct function * D.252832;
  union tree_node * D.252831;
  struct function * D.252826;
  union tree_node * D.252825;
  struct function_assign_array * D.252824;
  struct function_assign_array * D.252823;
  union tree_node * D.252822;
  union tree_node * D.252821;
  union tree_node * D.252820;
  const char * D.252819;
  union tree_node * D.252818;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second2;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct gimple * def_stmt;
  union tree_node * four;
  union tree_node * three;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second2;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  union tree_node * second;
  union tree_node * t2;
  struct ptb * table1;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  union tree_node * first;
  struct assign_type assign_type;
  struct gimple * def_stmt;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  union tree_node * first;
  struct assign_type assign_type;
  union tree_node * function_return_lhstree;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  union tree_node * function_return_lhstree;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  struct assign_type assign_type;
  union tree_node * function_return_lhstree;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * ssa_var;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * ssa_var;
  union tree_node * getFunctionAssignLHS;
  union tree_node * getFunctionAssignRHS;
  struct return_type ret_type;
  struct function_return_array fun_array;
  struct vector ret_type_array;
  union tree_node * getFucntionDecl;
  int i;
  size_t found;
  int i;
  int find;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * getVARDECLtree;
  int i;
  union tree_node * getreturnFucntionDecl;
  union tree_node * checklhstree;
  union tree_node * getVARDECLtree;
  struct pthread_exit_type pthread_exit_type;
  struct vector pthread_exit_array;
  struct function_pthread_exit_array fun_array;
  union tree_node * getFucntionDecl;
  struct pthread_detched_type pthread_detched_type;
  struct vector pthread_detched_array;
  struct function_pthread_detched_array fun_array;
  union tree_node * getFucntionDecl;
  struct assign_type assign_type;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * getFunctionAssignRHS;
  struct return_type ret_type;
  union tree_node * getFucntionDecl;
  struct vector ret_type_array;
  struct function_return_array fun_array;
  struct return_type ret_type;
  struct vector ret_type_array;
  union tree_node * get_function_arg_tree;
  struct function_return_array fun_array;
  struct assign_type assign_type;
  struct gimple * def_stmt;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct free_type free_type;
  struct function_free_array fun_array;
  struct vector free_type_array;
  union tree_node * getFucntionDecl;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  union tree_node * get_function_return_tree;
  const char * name;
  struct cgraph_node * node2;
  union tree_node * a;
  location_t loc;
  bool retval.932;
  bool retval.925;
  bool retval.918;
  union tree_node * const D.195784;
  union tree_node * const D.195782;
  union tree_node * const D.195781;
  bool retval.913;
  bool retval.912;
  bool retval.911;
  bool retval.900;
  union tree_node * const D.195771;
  union tree_node * const D.195769;
  union tree_node * const D.195768;
  bool retval.894;
  bool retval.893;
  bool retval.892;
  bool retval.884;
  union tree_node * const D.195759;
  union tree_node * const D.195757;
  union tree_node * const D.195756;
  bool retval.879;
  bool retval.878;
  bool retval.877;
  bool retval.867;
  union tree_node * iftmp.864;
  union tree_node * iftmp.859;
  bool retval.856;
  bool retval.851;
  union tree_node * const D.195734;
  union tree_node * const D.195732;
  union tree_node * const D.195731;
  bool retval.845;
  bool retval.844;
  bool retval.843;
  bool retval.838;
  bool retval.833;
  bool retval.828;
  bool retval.821;
  bool retval.815;
  union tree_node * iftmp.809;
  bool retval.803;
  union tree_node * iftmp.797;
  bool iftmp.795;
  bool retval.794;
  bool retval.793;
  bool retval.788;
  bool retval.786;
  bool retval.783;
  bool retval.780;
  bool retval.779;
  bool retval.778;
  bool retval.777;
  bool retval.776;
  bool retval.775;
  struct expanded_location D.195692;
  bool retval.773;
  struct expanded_location D.195689;
  bool retval.771;
  union tree_node * const D.195682;
  union tree_node * const D.195681;
  bool retval.766;
  bool retval.765;
  bool retval.764;
  bool retval.762;
  bool retval.757;
  bool retval.753;
  bool iftmp.750;
  bool retval.749;
  bool retval.745;
  bool retval.741;
  bool retval.737;
  bool retval.735;
  bool retval.731;
  bool retval.724;
  union tree_node * const D.195273;
  union tree_node * const D.195271;
  union tree_node * const D.195270;
  bool retval.719;
  bool retval.718;
  bool retval.717;
  bool retval.716;
  bool retval.712;
  bool retval.711;
  bool retval.707;
  bool retval.706;
  bool retval.705;

  <bb 2> :
  loc = gimple_location_safe (gc);
  _1 = gimple_code (gc);
  retval.705 = _1 == 8;
  if (retval.705 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 234>; [INV]

  <bb 3> :
  D.252818 = gimple_call_fn (gc);
  _2 = D.252818;
  D.252819 = get_name (_2);
  name = D.252819;
  D.252820 = gimple_call_fn (gc);
  get_function_return_tree = D.252820;
  _3 = get_function_return_tree->base.code;
  if (_3 == 153)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 533>; [INV]

  <bb 5> :
  if (name != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 533>; [INV]

  <bb 6> :
  _4 = strcmp (name, "printf");
  if (_4 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 533>; [INV]

  <bb 7> :
  _5 = strcmp (name, "free");
  if (_5 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _6 = strcmp (name, "xfree");
  if (_6 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _7 = strcmp (name, "realloc");
  if (_7 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 10> :
  D.252821 = gimple_call_arg (gc, 0);
  _8 = D.252821;
  _9 = _8->base.code;
  retval.706 = _9 == 131;
  if (retval.706 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 11> :
  D.252822 = gimple_call_arg (gc, 0);

  <bb 12> :
  _10 = D.252822;
  _11 = _10->exp.operands[0];
  second = _11;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.708_12 = function_assign_collect;
  D.252823 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.708_12, &second);

  <bb 13> :
  _13 = D.252823;
  retval.707 = _13 == 0B;
  if (retval.707 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 18>; [INV]

  <bb 15> :
  function_assign_collect.709_14 = function_assign_collect;
  D.252824 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.709_14, &second);

  <bb 16> :
  _15 = D.252824;
  function_assign_array::operator= (&assign_array, _15);

  <bb 17> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 18> :
  assign_type.stmt = gc;
  D.252825 = gimple_call_arg (gc, 0);

  <bb 19> :
  _16 = D.252825;
  assign_type.assign_tree = _16;
  D.252826 = cgraph_node::get_fun (node);

  <bb 20> :
  _17 = D.252826;
  _18 = _17->decl;
  assign_type.form_tree = _18;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 21> :
  function_assign_collect.710_19 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.710_19, &second, &assign_array);

  <bb 22> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  second = {CLOBBER};
  goto <bb 59>; [INV]

  <bb 23> :
  D.252831 = gimple_call_arg (gc, 0);
  _20 = D.252831;
  _21 = _20->base.code;
  retval.711 = _21 == 153;
  if (retval.711 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 24> :
  D.252832 = cgraph_node::get_fun (node);

  <bb 25> :
  _22 = D.252832;
  _23 = _22->decl;
  getFucntionDecl = _23;
  std::vector<free_type>::vector (&free_type_array);
  function_free_array::function_free_array (&fun_array);
  function_free_collect.713_24 = function_free_collect;
  D.252833 = hash_map<tree_node*, function_free_array>::get (function_free_collect.713_24, &getFucntionDecl);

  <bb 26> :
  _25 = D.252833;
  retval.712 = _25 == 0B;
  if (retval.712 != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  std::vector<free_type>::operator= (&fun_array.free_type_array, &free_type_array);
  goto <bb 31>; [INV]

  <bb 28> :
  function_free_collect.714_26 = function_free_collect;
  D.252834 = hash_map<tree_node*, function_free_array>::get (function_free_collect.714_26, &getFucntionDecl);

  <bb 29> :
  _27 = D.252834;
  function_free_array::operator= (&fun_array, _27);

  <bb 30> :
  std::vector<free_type>::operator= (&free_type_array, &fun_array.free_type_array);

  <bb 31> :
  free_type::free_type (&free_type);
  free_type.stmt = gc;
  D.252835 = gimple_call_arg (gc, 0);

  <bb 32> :
  _28 = D.252835;
  free_type.free_tree = _28;
  std::vector<free_type>::push_back (&fun_array.free_type_array, &free_type);

  <bb 33> :
  function_free_collect.715_29 = function_free_collect;
  hash_map<tree_node*, function_free_array>::put (function_free_collect.715_29, &getFucntionDecl, &fun_array);

  <bb 34> :
  D.252836 = gimple_call_arg (gc, 0);

  <bb 35> :
  _30 = D.252836;
  _31 = _30->base.code;
  retval.716 = _31 == 153;
  if (retval.716 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 36> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  D.252837 = gimple_call_arg (gc, 0);

  <bb 37> :
  _32 = D.252837;
  def_stmt = _32->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 38>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 38> :
  retval.717 = is_gimple_assign (def_stmt);
  if (retval.717 != 0)
    goto <bb 39>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 39> :
  D.252838 = gimple_assign_rhs1 (def_stmt);

  <bb 40> :
  _33 = D.252838;
  _34 = _33->base.code;
  retval.718 = _34 == 36;
  if (retval.718 != 0)
    goto <bb 41>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 41> :
  D.252839 = gimple_assign_rhs1 (def_stmt);

  <bb 42> :
  _35 = D.252839;
  debug_tree (_35);

  <bb 43> :
  function_assign_collect.720_36 = function_assign_collect;
  D.252840 = gimple_assign_rhs1 (def_stmt);

  <bb 44> :
  _37 = D.252840;
  D.195270 = _37;
  D.252841 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.720_36, &D.195270);

  <bb 45> :
  _38 = D.252841;
  retval.719 = _38 == 0B;
  D.195270 = {CLOBBER};
  if (retval.719 != 0)
    goto <bb 46>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 46> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 51>; [INV]

  <bb 47> :
  function_assign_collect.721_39 = function_assign_collect;
  D.252843 = gimple_assign_rhs1 (def_stmt);

  <bb 48> :
  _40 = D.252843;
  D.195271 = _40;
  D.252844 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.721_39, &D.195271);

  <bb 49> :
  _41 = D.252844;
  function_assign_array::operator= (&assign_array, _41);

  <bb 50> :
  D.195271 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 51> :
  assign_type.stmt = gc;
  D.252846 = gimple_call_arg (gc, 0);

  <bb 52> :
  _42 = D.252846;
  assign_type.assign_tree = _42;
  D.252847 = cgraph_node::get_fun (node);

  <bb 53> :
  _43 = D.252847;
  _44 = _43->decl;
  assign_type.form_tree = _44;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 54> :
  function_assign_collect.722_45 = function_assign_collect;
  D.252848 = gimple_assign_rhs1 (def_stmt);

  <bb 55> :
  _46 = D.252848;
  D.195273 = _46;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.722_45, &D.195273, &assign_array);

  <bb 56> :
  D.195273 = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 57> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};

  <bb 58> :
  function_free_array::~function_free_array (&fun_array);
  std::vector<free_type>::~vector (&free_type_array);
  getFucntionDecl = {CLOBBER};
  free_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  free_type = {CLOBBER};

  <bb 59> :
  goto <bb 233>; [INV]

  <bb 60> :
  _47 = strcmp (name, "exit");
  if (_47 == 0)
    goto <bb 61>; [INV]
  else
    goto <bb 69>; [INV]

  <bb 61> :
  function_return_array::function_return_array (&fun_array);
  D.252857 = gimple_call_arg (gc, 0);

  <bb 62> :
  get_function_arg_tree = D.252857;
  std::vector<return_type>::vector (&ret_type_array);
  if (get_function_return_tree != 0B)
    goto <bb 63>; [INV]
  else
    goto <bb 68>; [INV]

  <bb 63> :
  return_type::return_type (&ret_type);
  ret_type.stmt = gc;
  ret_type.return_tree = get_function_return_tree;
  std::vector<return_type>::push_back (&global_ret_type_array, &ret_type);

  <bb 64> :
  std::vector<return_type>::push_back (&fun_array.return_type_array, &ret_type);

  <bb 65> :
  function_return_collect.723_48 = function_return_collect;
  D.252858 = cgraph_node::get_fun (node);

  <bb 66> :
  _49 = D.252858;
  _50 = &_49->decl;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.723_48, _50, &fun_array);

  <bb 67> :
  ret_type = {CLOBBER};

  <bb 68> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  goto <bb 233>; [INV]

  <bb 69> :
  _51 = strcmp (name, "pthread_mutex_lock");
  if (_51 == 0)
    goto <bb 71>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 70> :
  _52 = strcmp (name, "pthread_mutex_unlock");
  if (_52 == 0)
    goto <bb 71>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 71> :
  function_return_array::function_return_array (&fun_array);
  std::vector<return_type>::vector (&ret_type_array);
  D.252863 = cgraph_node::get_fun (node);

  <bb 72> :
  _53 = D.252863;
  _54 = _53->decl;
  getFucntionDecl = _54;
  function_return_collect.725_55 = function_return_collect;
  D.252864 = hash_map<tree_node*, function_return_array>::get (function_return_collect.725_55, &getFucntionDecl);

  <bb 73> :
  _56 = D.252864;
  retval.724 = _56 == 0B;
  if (retval.724 != 0)
    goto <bb 74>; [INV]
  else
    goto <bb 75>; [INV]

  <bb 74> :
  std::vector<return_type>::operator= (&fun_array.return_type_array, &ret_type_array);
  goto <bb 77>; [INV]

  <bb 75> :
  function_return_collect.726_57 = function_return_collect;
  D.252865 = hash_map<tree_node*, function_return_array>::get (function_return_collect.726_57, &getFucntionDecl);

  <bb 76> :
  _58 = D.252865;
  function_return_array::operator= (&fun_array, _58);

  <bb 77> :
  return_type::return_type (&ret_type);
  ret_type.stmt = gc;
  D.252866 = gimple_call_arg (gc, 0);

  <bb 78> :
  _59 = D.252866;
  ret_type.return_tree = _59;
  FUNCITON_THREAD.727_60 = FUNCITON_THREAD;
  FUNCITON_THREAD.728_61 = (int) FUNCITON_THREAD.727_60;
  ret_type.return_type_stmt_num = FUNCITON_THREAD.728_61;
  std::vector<return_type>::push_back (&fun_array.return_type_array, &ret_type);

  <bb 79> :
  function_return_collect.729_62 = function_return_collect;
  D.252867 = cgraph_node::get_fun (node);

  <bb 80> :
  _63 = D.252867;
  _64 = &_63->decl;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.729_62, _64, &fun_array);

  <bb 81> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};
  ret_type = {CLOBBER};
  goto <bb 233>; [INV]

  <bb 82> :
  _65 = strcmp (name, "pthread_create");
  if (_65 == 0)
    goto <bb 83>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 83> :
  D.252871 = gimple_call_arg (gc, 0);

  <bb 84> :
  _66 = D.252871;
  getFunctionAssignRHS = _66;
  getFunctionAssignRHS.730_67 = getFunctionAssignRHS;
  _68 = getFunctionAssignRHS.730_67->exp.operands[0];
  getFunctionAssignRHS = _68;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.732_69 = function_assign_collect;
  D.252872 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.732_69, &getFunctionAssignRHS);

  <bb 85> :
  _70 = D.252872;
  retval.731 = _70 == 0B;
  if (retval.731 != 0)
    goto <bb 86>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 86> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 90>; [INV]

  <bb 87> :
  function_assign_collect.733_71 = function_assign_collect;
  D.252873 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.733_71, &getFunctionAssignRHS);

  <bb 88> :
  _72 = D.252873;
  function_assign_array::operator= (&assign_array, _72);

  <bb 89> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 90> :
  assign_type.stmt = gc;
  D.252874 = gimple_call_arg (gc, 0);

  <bb 91> :
  _73 = D.252874;
  assign_type.assign_tree = _73;
  D.252875 = cgraph_node::get_fun (node);

  <bb 92> :
  _74 = D.252875;
  _75 = _74->decl;
  assign_type.form_tree = _75;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 93> :
  function_assign_collect.734_76 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.734_76, &getFunctionAssignRHS, &assign_array);

  <bb 94> :
  D.252876 = gimple_call_arg (gc, 3);

  <bb 95> :
  _77 = D.252876;
  retval.735 = _77 != 0B;
  if (retval.735 != 0)
    goto <bb 96>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 96> :
  D.252877 = gimple_call_arg (gc, 3);

  <bb 97> :
  _78 = D.252877;
  getFunctionAssignRHS = _78;
  getFunctionAssignRHS.736_79 = getFunctionAssignRHS;
  _80 = getFunctionAssignRHS.736_79->exp.operands[0];
  getFunctionAssignRHS = _80;
  function_assign_collect.738_81 = function_assign_collect;
  D.252878 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.738_81, &getFunctionAssignRHS);

  <bb 98> :
  _82 = D.252878;
  retval.737 = _82 == 0B;
  if (retval.737 != 0)
    goto <bb 99>; [INV]
  else
    goto <bb 100>; [INV]

  <bb 99> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 103>; [INV]

  <bb 100> :
  function_assign_collect.739_83 = function_assign_collect;
  D.252879 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.739_83, &getFunctionAssignRHS);

  <bb 101> :
  _84 = D.252879;
  function_assign_array::operator= (&assign_array, _84);

  <bb 102> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 103> :
  assign_type.stmt = gc;
  D.252880 = gimple_call_arg (gc, 3);

  <bb 104> :
  _85 = D.252880;
  assign_type.assign_tree = _85;
  D.252881 = cgraph_node::get_fun (node);

  <bb 105> :
  _86 = D.252881;
  _87 = _86->decl;
  assign_type.form_tree = _87;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 106> :
  function_assign_collect.740_88 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.740_88, &getFunctionAssignRHS, &assign_array);

  <bb 107> :
  assign_type = {CLOBBER};

  <bb 108> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  getFunctionAssignRHS = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 233>; [INV]

  <bb 109> :
  _89 = strcmp (name, "pthread_detach");
  if (_89 == 0)
    goto <bb 110>; [INV]
  else
    goto <bb 121>; [INV]

  <bb 110> :
  D.252886 = cgraph_node::get_fun (node);

  <bb 111> :
  _90 = D.252886;
  _91 = _90->decl;
  getFucntionDecl = _91;
  function_pthread_detched_array::function_pthread_detched_array (&fun_array);
  std::vector<pthread_detched_type>::vector (&pthread_detched_array);
  function_pthread_detched_collect.742_92 = function_pthread_detched_collect;
  D.252887 = hash_map<tree_node*, function_pthread_detched_array>::get (function_pthread_detched_collect.742_92, &getFucntionDecl);

  <bb 112> :
  _93 = D.252887;
  retval.741 = _93 == 0B;
  if (retval.741 != 0)
    goto <bb 113>; [INV]
  else
    goto <bb 114>; [INV]

  <bb 113> :
  std::vector<pthread_detched_type>::operator= (&fun_array.pthread_detched_array, &pthread_detched_array);
  goto <bb 117>; [INV]

  <bb 114> :
  function_pthread_detched_collect.743_94 = function_pthread_detched_collect;
  D.252888 = hash_map<tree_node*, function_pthread_detched_array>::get (function_pthread_detched_collect.743_94, &getFucntionDecl);

  <bb 115> :
  _95 = D.252888;
  function_pthread_detched_array::operator= (&fun_array, _95);

  <bb 116> :
  std::vector<pthread_detched_type>::operator= (&pthread_detched_array, &fun_array.pthread_detched_array);

  <bb 117> :
  pthread_detched_type.stmt = gc;
  D.252889 = gimple_call_arg (gc, 0);

  <bb 118> :
  _96 = D.252889;
  pthread_detched_type.pthread_detched_tree = _96;
  std::vector<pthread_detched_type>::push_back (&fun_array.pthread_detched_array, &pthread_detched_type);

  <bb 119> :
  function_pthread_detched_collect.744_97 = function_pthread_detched_collect;
  hash_map<tree_node*, function_pthread_detched_array>::put (function_pthread_detched_collect.744_97, &getFucntionDecl, &fun_array);

  <bb 120> :
  std::vector<pthread_detched_type>::~vector (&pthread_detched_array);
  function_pthread_detched_array::~function_pthread_detched_array (&fun_array);
  getFucntionDecl = {CLOBBER};
  fun_array = {CLOBBER};
  pthread_detched_array = {CLOBBER};
  pthread_detched_type = {CLOBBER};
  goto <bb 233>; [INV]

  <bb 121> :
  _98 = strcmp (name, "pthread_exit");
  if (_98 == 0)
    goto <bb 122>; [INV]
  else
    goto <bb 133>; [INV]

  <bb 122> :
  D.252893 = cgraph_node::get_fun (node);

  <bb 123> :
  _99 = D.252893;
  _100 = _99->decl;
  getFucntionDecl = _100;
  function_pthread_exit_array::function_pthread_exit_array (&fun_array);
  std::vector<pthread_exit_type>::vector (&pthread_exit_array);
  function_pthread_exit_collect.746_101 = function_pthread_exit_collect;
  D.252894 = hash_map<tree_node*, function_pthread_exit_array>::get (function_pthread_exit_collect.746_101, &getFucntionDecl);

  <bb 124> :
  _102 = D.252894;
  retval.745 = _102 == 0B;
  if (retval.745 != 0)
    goto <bb 125>; [INV]
  else
    goto <bb 126>; [INV]

  <bb 125> :
  std::vector<pthread_exit_type>::operator= (&fun_array.pthread_exit_array, &pthread_exit_array);
  goto <bb 129>; [INV]

  <bb 126> :
  function_pthread_exit_collect.747_103 = function_pthread_exit_collect;
  D.252895 = hash_map<tree_node*, function_pthread_exit_array>::get (function_pthread_exit_collect.747_103, &getFucntionDecl);

  <bb 127> :
  _104 = D.252895;
  function_pthread_exit_array::operator= (&fun_array, _104);

  <bb 128> :
  std::vector<pthread_exit_type>::operator= (&pthread_exit_array, &fun_array.pthread_exit_array);

  <bb 129> :
  pthread_exit_type.stmt = gc;
  D.252896 = gimple_call_arg (gc, 0);

  <bb 130> :
  _105 = D.252896;
  pthread_exit_type.pthread_exit_tree = _105;
  std::vector<pthread_exit_type>::push_back (&fun_array.pthread_exit_array, &pthread_exit_type);

  <bb 131> :
  function_pthread_exit_collect.748_106 = function_pthread_exit_collect;
  hash_map<tree_node*, function_pthread_exit_array>::put (function_pthread_exit_collect.748_106, &getFucntionDecl, &fun_array);

  <bb 132> :
  std::vector<pthread_exit_type>::~vector (&pthread_exit_array);
  function_pthread_exit_array::~function_pthread_exit_array (&fun_array);
  getFucntionDecl = {CLOBBER};
  fun_array = {CLOBBER};
  pthread_exit_array = {CLOBBER};
  pthread_exit_type = {CLOBBER};
  goto <bb 233>; [INV]

  <bb 133> :
  debug_gimple_stmt (gc);

  <bb 134> :
  i = 0;
  goto <bb 160>; [INV]

  <bb 135> :
  i.751_107 = (unsigned int) i;
  D.252900 = gimple_call_arg (gc, i.751_107);

  <bb 136> :
  _108 = D.252900;
  _109 = _108->base.code;
  if (_109 == 131)
    goto <bb 139>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 137> :
  i.752_110 = (unsigned int) i;
  D.252901 = gimple_call_arg (gc, i.752_110);

  <bb 138> :
  _111 = D.252901;
  _112 = _111->base.code;
  if (_112 == 36)
    goto <bb 139>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 139> :
  iftmp.750 = 1;
  goto <bb 141>; [INV]

  <bb 140> :
  iftmp.750 = 0;

  <bb 141> :
  retval.749 = iftmp.750;
  if (retval.749 != 0)
    goto <bb 142>; [INV]
  else
    goto <bb 159>; [INV]

  <bb 142> :
  i.754_113 = (unsigned int) i;
  D.252902 = gimple_call_arg (gc, i.754_113);

  <bb 143> :
  _114 = D.252902;
  _115 = _114->base.code;
  retval.753 = _115 == 131;
  if (retval.753 != 0)
    goto <bb 144>; [INV]
  else
    goto <bb 146>; [INV]

  <bb 144> :
  i.755_116 = (unsigned int) i;
  D.252903 = gimple_call_arg (gc, i.755_116);

  <bb 145> :
  _117 = D.252903;
  _118 = _117->exp.operands[0];
  getVARDECLtree = _118;
  goto <bb 148>; [INV]

  <bb 146> :
  i.756_119 = (unsigned int) i;
  D.252904 = gimple_call_arg (gc, i.756_119);

  <bb 147> :
  _120 = D.252904;
  getVARDECLtree = _120;

  <bb 148> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.758_121 = function_assign_collect;
  D.252905 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.758_121, &getVARDECLtree);

  <bb 149> :
  _122 = D.252905;
  retval.757 = _122 == 0B;
  if (retval.757 != 0)
    goto <bb 150>; [INV]
  else
    goto <bb 151>; [INV]

  <bb 150> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 154>; [INV]

  <bb 151> :
  function_assign_collect.759_123 = function_assign_collect;
  D.252906 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.759_123, &getVARDECLtree);

  <bb 152> :
  _124 = D.252906;
  function_assign_array::operator= (&assign_array, _124);

  <bb 153> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 154> :
  assign_type.stmt = gc;
  i.760_125 = (unsigned int) i;
  D.252907 = gimple_call_arg (gc, i.760_125);

  <bb 155> :
  _126 = D.252907;
  assign_type.assign_tree = _126;
  D.252908 = cgraph_node::get_fun (node);

  <bb 156> :
  _127 = D.252908;
  _128 = _127->decl;
  assign_type.form_tree = _128;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 157> :
  function_assign_collect.761_129 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.761_129, &getVARDECLtree, &assign_array);

  <bb 158> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 159> :
  getVARDECLtree = {CLOBBER};
  i = i + 1;

  <bb 160> :
  D.252913 = gimple_call_num_args (gc);

  <bb 161> :
  _130 = D.252913;
  i.763_131 = (unsigned int) i;
  retval.762 = _130 > i.763_131;
  if (retval.762 != 0)
    goto <bb 135>; [INV]
  else
    goto <bb 162>; [INV]

  <bb 162> :
  D.252914 = gimple_call_num_args (gc);

  <bb 163> :
  _132 = D.252914;
  retval.764 = _132 != 0;
  if (retval.764 != 0)
    goto <bb 164>; [INV]
  else
    goto <bb 181>; [INV]

  <bb 164> :
  D.252915 = gimple_call_arg (gc, 0);

  <bb 165> :
  _133 = D.252915;
  _134 = _133->base.code;
  retval.765 = _134 == 131;
  if (retval.765 != 0)
    goto <bb 166>; [INV]
  else
    goto <bb 181>; [INV]

  <bb 166> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.767_135 = function_assign_collect;
  D.252916 = gimple_call_fn (gc);

  <bb 167> :
  _136 = D.252916;
  D.195681 = _136;
  D.252917 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.767_135, &D.195681);

  <bb 168> :
  _137 = D.252917;
  retval.766 = _137 == 0B;
  D.195681 = {CLOBBER};
  if (retval.766 != 0)
    goto <bb 169>; [INV]
  else
    goto <bb 170>; [INV]

  <bb 169> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 174>; [INV]

  <bb 170> :
  function_assign_collect.768_138 = function_assign_collect;
  D.252919 = gimple_call_fn (gc);

  <bb 171> :
  _139 = D.252919;
  D.195682 = _139;
  D.252920 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.768_138, &D.195682);

  <bb 172> :
  _140 = D.252920;
  function_assign_array::operator= (&assign_array, _140);

  <bb 173> :
  D.195682 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 174> :
  assign_type.stmt = gc;
  D.252922 = gimple_call_arg (gc, 0);

  <bb 175> :
  _141 = D.252922;
  assign_type.assign_tree = _141;
  D.252923 = cgraph_node::get_fun (node);

  <bb 176> :
  _142 = D.252923;
  _143 = _142->decl;
  assign_type.form_tree = _143;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 177> :
  D.252924 = gimple_call_arg (gc, 0);

  <bb 178> :
  _144 = D.252924;
  _145 = _144->exp.operands[0];
  second = _145;
  second.769_146 = second;
  _147 = second.769_146->base.code;
  if (_147 == 36)
    goto <bb 179>; [INV]
  else
    goto <bb 180>; [INV]

  <bb 179> :
  function_assign_collect.770_148 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.770_148, &second, &assign_array);

  <bb 180> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  second = {CLOBBER};

  <bb 181> :
  D.252928 = gimple_call_lhs (gc);

  <bb 182> :
  checklhstree = D.252928;
  _149 = gimple_code (gc);
  retval.771 = _149 == 8;
  if (retval.771 != 0)
    goto <bb 183>; [INV]
  else
    goto <bb 216>; [INV]

  <bb 183> :
  vscode_extensionmod.772_150 = vscode_extensionmod;
  if (vscode_extensionmod.772_150 != 0)
    goto <bb 184>; [INV]
  else
    goto <bb 196>; [INV]

  <bb 184> :
  find = 0;
  i = 0;
  goto <bb 193>; [INV]

  <bb 185> :
  _151 = (long unsigned int) i;
  _152 = std::vector<breakpoint>::operator[] (&vbreakpoint, _151);
  _153 = &_152->name;
  D.195689 = expand_location (loc); [return slot optimization]

  <bb 186> :
  _154 = D.195689.file;
  found = std::__cxx11::basic_string<char>::find (_153, _154, 0);
  D.195689 = {CLOBBER};
  if (found != 0)
    goto <bb 187>; [INV]
  else
    goto <bb 192>; [INV]

  <bb 187> :
  _155 = (long unsigned int) i;
  _156 = std::vector<breakpoint>::operator[] (&vbreakpoint, _155);
  _157 = _156->line;
  D.195692 = expand_location (loc); [return slot optimization]

  <bb 188> :
  _158 = D.195692.line;
  retval.773 = _157 == _158;
  D.195692 = {CLOBBER};
  if (retval.773 != 0)
    goto <bb 189>; [INV]
  else
    goto <bb 192>; [INV]

  <bb 189> :
  debug_gimple_stmt (gc);

  <bb 190> :
  _159 = (long unsigned int) i;
  _160 = std::vector<breakpoint>::operator[] (&vbreakpoint, _159);
  _161 = _160->line;
  _162 = (long unsigned int) i;
  _163 = std::vector<breakpoint>::operator[] (&vbreakpoint, _162);
  _164 = &_163->name;
  _165 = std::__cxx11::basic_string<char>::c_str (_164);
  stderr.774_166 = stderr;
  fprintf (stderr.774_166, "set breakpoint %s %d\n", _165, _161);

  <bb 191> :
  find = 1;

  <bb 192> :
  i = i + 1;

  <bb 193> :
  _167 = (long unsigned int) i;
  _168 = std::vector<breakpoint>::size (&vbreakpoint);
  retval.775 = _167 < _168;
  if (retval.775 != 0)
    goto <bb 185>; [INV]
  else
    goto <bb 194>; [INV]

  <bb 194> :
  if (find == 0)
    goto <bb 195>; [INV]
  else
    goto <bb 196>; [INV]

  <bb 195> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 232>; [INV]

  <bb 196> :
  D.252929 = gimple_call_fn (gc);

  <bb 197> :
  _169 = D.252929;
  D.252930 = get_name (_169);

  <bb 198> :
  name = D.252930;
  if (name != 0B)
    goto <bb 199>; [INV]
  else
    goto <bb 216>; [INV]

  <bb 199> :
  _170 = gimple_code (gc);
  retval.776 = _170 == 8;
  if (retval.776 != 0)
    goto <bb 200>; [INV]
  else
    goto <bb 206>; [INV]

  <bb 200> :
  D.252931 = gimple_call_lhs (gc);

  <bb 201> :
  _171 = D.252931;
  retval.777 = _171 != 0B;
  if (retval.777 != 0)
    goto <bb 202>; [INV]
  else
    goto <bb 206>; [INV]

  <bb 202> :
  D.252932 = gimple_call_lhs (gc);

  <bb 203> :
  _172 = D.252932;
  _173 = _172->base.code;
  retval.778 = _173 == 153;
  if (retval.778 != 0)
    goto <bb 204>; [INV]
  else
    goto <bb 206>; [INV]

  <bb 204> :
  D.252933 = gimple_call_lhs (gc);

  <bb 205> :
  _174 = D.252933;
  set_ptb (bb, ptable, _174, loc, 0, gc, node);

  <bb 206> :
  D.252934 = gimple_call_num_args (gc);

  <bb 207> :
  _175 = D.252934;
  retval.779 = _175 != 0;
  if (retval.779 != 0)
    goto <bb 208>; [INV]
  else
    goto <bb 216>; [INV]

  <bb 208> :
  i = 0;
  goto <bb 214>; [INV]

  <bb 209> :
  i.781_176 = (unsigned int) i;
  D.252935 = gimple_call_arg (gc, i.781_176);

  <bb 210> :
  _177 = D.252935;
  _178 = _177->base.code;
  retval.780 = _178 == 153;
  if (retval.780 != 0)
    goto <bb 211>; [INV]
  else
    goto <bb 213>; [INV]

  <bb 211> :
  i.782_179 = (unsigned int) i;
  D.252936 = gimple_call_arg (gc, i.782_179);

  <bb 212> :
  _180 = D.252936;
  set_ptb (bb, ptable, _180, loc, 0, gc, node);

  <bb 213> :
  i = i + 1;

  <bb 214> :
  D.252937 = gimple_call_num_args (gc);

  <bb 215> :
  _181 = D.252937;
  i.784_182 = (unsigned int) i;
  retval.783 = _181 > i.784_182;
  if (retval.783 != 0)
    goto <bb 209>; [INV]
  else
    goto <bb 216>; [INV]

  <bb 216> :
  _183 = get_function_return_tree->exp.operands[0];
  getreturnFucntionDecl = _183;
  getreturnFucntionDecl.785_184 = getreturnFucntionDecl;
  if (getreturnFucntionDecl.785_184 != 0B)
    goto <bb 217>; [INV]
  else
    goto <bb 231>; [INV]

  <bb 217> :
  function_return_collect.787_185 = function_return_collect;
  D.252938 = hash_map<tree_node*, function_return_array>::get (function_return_collect.787_185, &getreturnFucntionDecl);

  <bb 218> :
  _186 = D.252938;
  retval.786 = _186 == 0B;
  if (retval.786 != 0)
    goto <bb 219>; [INV]
  else
    goto <bb 220>; [INV]

  <bb 219> :
  // predicted unlikely by early return (on trees) predictor.
  getFucntionDecl = {CLOBBER};
  ret_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  ret_type = {CLOBBER};
  goto <bb 232>; [INV]

  <bb 220> :
  D.252939 = cgraph_node::get_fun (node);

  <bb 221> :
  _187 = D.252939;
  _188 = _187->decl;
  getFucntionDecl = _188;
  std::vector<return_type>::vector (&ret_type_array);
  function_return_array::function_return_array (&fun_array);
  function_return_collect.789_189 = function_return_collect;
  D.252940 = hash_map<tree_node*, function_return_array>::get (function_return_collect.789_189, &getFucntionDecl);

  <bb 222> :
  _190 = D.252940;
  retval.788 = _190 == 0B;
  if (retval.788 != 0)
    goto <bb 223>; [INV]
  else
    goto <bb 224>; [INV]

  <bb 223> :
  std::vector<return_type>::operator= (&fun_array.return_type_array, &ret_type_array);
  goto <bb 227>; [INV]

  <bb 224> :
  function_return_collect.790_191 = function_return_collect;
  D.252941 = hash_map<tree_node*, function_return_array>::get (function_return_collect.790_191, &getFucntionDecl);

  <bb 225> :
  _192 = D.252941;
  function_return_array::operator= (&fun_array, _192);

  <bb 226> :
  std::vector<return_type>::operator= (&ret_type_array, &fun_array.return_type_array);

  <bb 227> :
  return_type::return_type (&ret_type);
  ret_type.stmt = gc;
  getreturnFucntionDecl.791_193 = getreturnFucntionDecl;
  ret_type.return_tree = getreturnFucntionDecl.791_193;
  std::vector<return_type>::push_back (&fun_array.return_type_array, &ret_type);

  <bb 228> :
  function_return_collect.792_194 = function_return_collect;
  D.252942 = cgraph_node::get_fun (node);

  <bb 229> :
  _195 = D.252942;
  _196 = &_195->decl;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.792_194, _196, &fun_array);

  <bb 230> :
  function_return_array::~function_return_array (&fun_array);
  std::vector<return_type>::~vector (&ret_type_array);
  getFucntionDecl = {CLOBBER};
  ret_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  ret_type = {CLOBBER};

  <bb 231> :
  getreturnFucntionDecl = {CLOBBER};
  goto <bb 233>; [INV]

  <bb 232> :
  getreturnFucntionDecl = {CLOBBER};
  goto <bb 533>; [INV]

  <bb 233> :
  goto <bb 533>; [INV]

  <bb 234> :
  _197 = gimple_code (gc);
  retval.793 = _197 == 6;
  if (retval.793 != 0)
    goto <bb 235>; [INV]
  else
    goto <bb 533>; [INV]

  <bb 235> :
  D.252951 = gimple_assign_lhs (gc);

  <bb 236> :
  _198 = D.252951;
  if (_198 == 0B)
    goto <bb 239>; [INV]
  else
    goto <bb 237>; [INV]

  <bb 237> :
  D.252952 = gimple_assign_rhs1 (gc);

  <bb 238> :
  _199 = D.252952;
  if (_199 == 0B)
    goto <bb 239>; [INV]
  else
    goto <bb 240>; [INV]

  <bb 239> :
  iftmp.795 = 1;
  goto <bb 241>; [INV]

  <bb 240> :
  iftmp.795 = 0;

  <bb 241> :
  retval.794 = iftmp.795;
  if (retval.794 != 0)
    goto <bb 242>; [INV]
  else
    goto <bb 243>; [INV]

  <bb 242> :
  // predicted unlikely by early return (on trees) predictor.
  getFunctionAssignRHS = {CLOBBER};
  getFunctionAssignLHS = {CLOBBER};
  goto <bb 533>; [INV]

  <bb 243> :
  D.252953 = gimple_assign_rhs1 (gc);

  <bb 244> :
  _200 = D.252953;
  getFunctionAssignRHS = _200;
  D.252954 = gimple_assign_lhs (gc);

  <bb 245> :
  _201 = D.252954;
  getFunctionAssignLHS = _201;
  getFunctionAssignRHS.796_202 = getFunctionAssignRHS;
  _203 = getFunctionAssignRHS.796_202->base.code;
  if (_203 == 153)
    goto <bb 246>; [INV]
  else
    goto <bb 263>; [INV]

  <bb 246> :
  getFunctionAssignRHS.798_204 = getFunctionAssignRHS;
  _205 = getFunctionAssignRHS.798_204->ssa_name.var;
  if (_205 != 0B)
    goto <bb 247>; [INV]
  else
    goto <bb 249>; [INV]

  <bb 247> :
  getFunctionAssignRHS.799_206 = getFunctionAssignRHS;
  _207 = getFunctionAssignRHS.799_206->ssa_name.var;
  _208 = _207->base.code;
  if (_208 != 1)
    goto <bb 248>; [INV]
  else
    goto <bb 249>; [INV]

  <bb 248> :
  getFunctionAssignRHS.800_209 = getFunctionAssignRHS;
  iftmp.797 = getFunctionAssignRHS.800_209->ssa_name.var;
  goto <bb 250>; [INV]

  <bb 249> :
  iftmp.797 = 0B;

  <bb 250> :
  ssa_var = iftmp.797;
  ssa_var.801_210 = ssa_var;
  if (ssa_var.801_210 != 0B)
    goto <bb 251>; [INV]
  else
    goto <bb 262>; [INV]

  <bb 251> :
  ssa_var.802_211 = ssa_var;
  _212 = ssa_var.802_211->base.code;
  if (_212 == 36)
    goto <bb 252>; [INV]
  else
    goto <bb 262>; [INV]

  <bb 252> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.804_213 = function_assign_collect;
  D.252955 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.804_213, &ssa_var);

  <bb 253> :
  _214 = D.252955;
  retval.803 = _214 == 0B;
  if (retval.803 != 0)
    goto <bb 254>; [INV]
  else
    goto <bb 255>; [INV]

  <bb 254> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 258>; [INV]

  <bb 255> :
  function_assign_collect.805_215 = function_assign_collect;
  D.252956 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.805_215, &ssa_var);

  <bb 256> :
  _216 = D.252956;
  function_assign_array::operator= (&assign_array, _216);

  <bb 257> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 258> :
  assign_type.stmt = gc;
  ssa_var.806_217 = ssa_var;
  assign_type.assign_tree = ssa_var.806_217;
  D.252957 = cgraph_node::get_fun (node);

  <bb 259> :
  _218 = D.252957;
  _219 = _218->decl;
  assign_type.form_tree = _219;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 260> :
  function_assign_collect.807_220 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.807_220, &ssa_var, &assign_array);

  <bb 261> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 262> :
  ssa_var = {CLOBBER};

  <bb 263> :
  getFunctionAssignLHS.808_221 = getFunctionAssignLHS;
  _222 = getFunctionAssignLHS.808_221->base.code;
  if (_222 == 153)
    goto <bb 264>; [INV]
  else
    goto <bb 294>; [INV]

  <bb 264> :
  getFunctionAssignLHS.810_223 = getFunctionAssignLHS;
  _224 = getFunctionAssignLHS.810_223->ssa_name.var;
  if (_224 != 0B)
    goto <bb 265>; [INV]
  else
    goto <bb 267>; [INV]

  <bb 265> :
  getFunctionAssignLHS.811_225 = getFunctionAssignLHS;
  _226 = getFunctionAssignLHS.811_225->ssa_name.var;
  _227 = _226->base.code;
  if (_227 != 1)
    goto <bb 266>; [INV]
  else
    goto <bb 267>; [INV]

  <bb 266> :
  getFunctionAssignLHS.812_228 = getFunctionAssignLHS;
  iftmp.809 = getFunctionAssignLHS.812_228->ssa_name.var;
  goto <bb 268>; [INV]

  <bb 267> :
  iftmp.809 = 0B;

  <bb 268> :
  ssa_var = iftmp.809;
  ssa_var.813_229 = ssa_var;
  if (ssa_var.813_229 != 0B)
    goto <bb 269>; [INV]
  else
    goto <bb 280>; [INV]

  <bb 269> :
  ssa_var.814_230 = ssa_var;
  _231 = ssa_var.814_230->base.code;
  if (_231 == 36)
    goto <bb 270>; [INV]
  else
    goto <bb 280>; [INV]

  <bb 270> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.816_232 = function_assign_collect;
  D.252962 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.816_232, &ssa_var);

  <bb 271> :
  _233 = D.252962;
  retval.815 = _233 == 0B;
  if (retval.815 != 0)
    goto <bb 272>; [INV]
  else
    goto <bb 273>; [INV]

  <bb 272> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 276>; [INV]

  <bb 273> :
  function_assign_collect.817_234 = function_assign_collect;
  D.252963 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.817_234, &ssa_var);

  <bb 274> :
  _235 = D.252963;
  function_assign_array::operator= (&assign_array, _235);

  <bb 275> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 276> :
  assign_type.stmt = gc;
  ssa_var.818_236 = ssa_var;
  assign_type.assign_tree = ssa_var.818_236;
  D.252964 = cgraph_node::get_fun (node);

  <bb 277> :
  _237 = D.252964;
  _238 = _237->decl;
  assign_type.form_tree = _238;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 278> :
  function_assign_collect.819_239 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.819_239, &ssa_var, &assign_array);

  <bb 279> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 280> :
  getFunctionAssignRHS.820_240 = getFunctionAssignRHS;
  _241 = getFunctionAssignRHS.820_240->base.code;
  if (_241 == 36)
    goto <bb 281>; [INV]
  else
    goto <bb 293>; [INV]

  <bb 281> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.822_242 = function_assign_collect;
  D.252968 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.822_242, &getFunctionAssignRHS);

  <bb 282> :
  _243 = D.252968;
  retval.821 = _243 == 0B;
  if (retval.821 != 0)
    goto <bb 283>; [INV]
  else
    goto <bb 284>; [INV]

  <bb 283> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 287>; [INV]

  <bb 284> :
  function_assign_collect.823_244 = function_assign_collect;
  D.252969 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.823_244, &getFunctionAssignRHS);

  <bb 285> :
  _245 = D.252969;
  function_assign_array::operator= (&assign_array, _245);

  <bb 286> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 287> :
  D.252970 = gimple_assign_lhs (gc);

  <bb 288> :
  function_return_lhstree = D.252970;
  assign_type.stmt = gc;
  D.252971 = gimple_assign_lhs (gc);

  <bb 289> :
  _246 = D.252971;
  assign_type.assign_tree = _246;
  D.252972 = cgraph_node::get_fun (node);

  <bb 290> :
  _247 = D.252972;
  _248 = _247->decl;
  assign_type.form_tree = _248;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 291> :
  function_assign_collect.824_249 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.824_249, &getFunctionAssignRHS, &assign_array);

  <bb 292> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 293> :
  ssa_var = {CLOBBER};

  <bb 294> :
  getFunctionAssignLHS.825_250 = getFunctionAssignLHS;
  _251 = getFunctionAssignLHS.825_250->base.code;
  if (_251 == 36)
    goto <bb 295>; [INV]
  else
    goto <bb 473>; [INV]

  <bb 295> :
  getFunctionAssignRHS.826_252 = getFunctionAssignRHS;
  _253 = getFunctionAssignRHS.826_252->base.code;
  if (_253 == 131)
    goto <bb 296>; [INV]
  else
    goto <bb 309>; [INV]

  <bb 296> :
  getFunctionAssignRHS.827_254 = getFunctionAssignRHS;
  second = getFunctionAssignRHS.827_254->exp.operands[0];
  _255 = second->base.code;
  if (_255 == 36)
    goto <bb 297>; [INV]
  else
    goto <bb 322>; [INV]

  <bb 297> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.829_256 = function_assign_collect;
  D.252977 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.829_256, &getFunctionAssignLHS);

  <bb 298> :
  _257 = D.252977;
  retval.828 = _257 == 0B;
  if (retval.828 != 0)
    goto <bb 299>; [INV]
  else
    goto <bb 300>; [INV]

  <bb 299> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 303>; [INV]

  <bb 300> :
  function_assign_collect.830_258 = function_assign_collect;
  D.252978 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.830_258, &getFunctionAssignLHS);

  <bb 301> :
  _259 = D.252978;
  function_assign_array::operator= (&assign_array, _259);

  <bb 302> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 303> :
  D.252979 = gimple_call_lhs (gc);

  <bb 304> :
  function_return_lhstree = D.252979;
  assign_type.stmt = gc;
  D.252980 = gimple_assign_lhs (gc);

  <bb 305> :
  _260 = D.252980;
  assign_type.assign_tree = _260;
  D.252981 = cgraph_node::get_fun (node);

  <bb 306> :
  _261 = D.252981;
  _262 = _261->decl;
  assign_type.form_tree = _262;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 307> :
  function_assign_collect.831_263 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.831_263, &getFunctionAssignLHS, &assign_array);

  <bb 308> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 322>; [INV]

  <bb 309> :
  getFunctionAssignRHS.832_264 = getFunctionAssignRHS;
  _265 = getFunctionAssignRHS.832_264->base.code;
  if (_265 == 153)
    goto <bb 310>; [INV]
  else
    goto <bb 322>; [INV]

  <bb 310> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.834_266 = function_assign_collect;
  D.252985 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.834_266, &getFunctionAssignLHS);

  <bb 311> :
  _267 = D.252985;
  retval.833 = _267 == 0B;
  if (retval.833 != 0)
    goto <bb 312>; [INV]
  else
    goto <bb 313>; [INV]

  <bb 312> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 316>; [INV]

  <bb 313> :
  function_assign_collect.835_268 = function_assign_collect;
  D.252986 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.835_268, &getFunctionAssignLHS);

  <bb 314> :
  _269 = D.252986;
  function_assign_array::operator= (&assign_array, _269);

  <bb 315> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 316> :
  D.252987 = gimple_assign_rhs1 (gc);

  <bb 317> :
  function_return_lhstree = D.252987;
  assign_type.stmt = gc;
  D.252988 = gimple_assign_rhs1 (gc);

  <bb 318> :
  _270 = D.252988;
  assign_type.assign_tree = _270;
  D.252989 = cgraph_node::get_fun (node);

  <bb 319> :
  _271 = D.252989;
  _272 = _271->decl;
  assign_type.form_tree = _272;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 320> :
  function_assign_collect.836_273 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.836_273, &getFunctionAssignLHS, &assign_array);

  <bb 321> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 322> :
  getFunctionAssignLHS.837_274 = getFunctionAssignLHS;
  _275 = getFunctionAssignLHS.837_274->base.code;
  if (_275 == 165)
    goto <bb 323>; [INV]
  else
    goto <bb 358>; [INV]

  <bb 323> :
  D.252993 = gimple_assign_lhs (gc);

  <bb 324> :
  _276 = D.252993;
  first = _276->exp.operands[0];
  _277 = first->base.code;
  if (_277 == 131)
    goto <bb 325>; [INV]
  else
    goto <bb 336>; [INV]

  <bb 325> :
  _278 = first->exp.operands[0];
  second = _278;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.839_279 = function_assign_collect;
  D.252994 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.839_279, &second);

  <bb 326> :
  _280 = D.252994;
  retval.838 = _280 == 0B;
  if (retval.838 != 0)
    goto <bb 327>; [INV]
  else
    goto <bb 328>; [INV]

  <bb 327> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 331>; [INV]

  <bb 328> :
  function_assign_collect.840_281 = function_assign_collect;
  D.252995 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.840_281, &second);

  <bb 329> :
  _282 = D.252995;
  function_assign_array::operator= (&assign_array, _282);

  <bb 330> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 331> :
  assign_type.stmt = gc;
  D.252996 = gimple_assign_lhs (gc);

  <bb 332> :
  _283 = D.252996;
  assign_type.assign_tree = _283;
  D.252997 = cgraph_node::get_fun (node);

  <bb 333> :
  _284 = D.252997;
  _285 = _284->decl;
  assign_type.form_tree = _285;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 334> :
  function_assign_collect.841_286 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.841_286, &second, &assign_array);

  <bb 335> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 336> :
  getFunctionAssignRHS.842_287 = getFunctionAssignRHS;
  _288 = getFunctionAssignRHS.842_287->base.code;
  if (_288 == 26)
    goto <bb 337>; [INV]
  else
    goto <bb 358>; [INV]

  <bb 337> :
  second = 0B;
  D.253001 = gimple_assign_lhs (gc);

  <bb 338> :
  _289 = D.253001;
  second = _289->exp.operands[0];
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  _290 = second->base.code;
  if (_290 == 153)
    goto <bb 339>; [INV]
  else
    goto <bb 357>; [INV]

  <bb 339> :
  def_stmt = second->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 340>; [INV]
  else
    goto <bb 357>; [INV]

  <bb 340> :
  retval.843 = is_gimple_assign (def_stmt);
  if (retval.843 != 0)
    goto <bb 341>; [INV]
  else
    goto <bb 357>; [INV]

  <bb 341> :
  D.253002 = gimple_assign_rhs1 (def_stmt);

  <bb 342> :
  _291 = D.253002;
  _292 = _291->base.code;
  retval.844 = _292 == 36;
  if (retval.844 != 0)
    goto <bb 343>; [INV]
  else
    goto <bb 357>; [INV]

  <bb 343> :
  function_assign_collect.846_293 = function_assign_collect;
  D.253003 = gimple_assign_rhs1 (def_stmt);

  <bb 344> :
  _294 = D.253003;
  D.195731 = _294;
  D.253004 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.846_293, &D.195731);

  <bb 345> :
  _295 = D.253004;
  retval.845 = _295 == 0B;
  D.195731 = {CLOBBER};
  if (retval.845 != 0)
    goto <bb 346>; [INV]
  else
    goto <bb 347>; [INV]

  <bb 346> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 351>; [INV]

  <bb 347> :
  function_assign_collect.847_296 = function_assign_collect;
  D.253006 = gimple_assign_rhs1 (def_stmt);

  <bb 348> :
  _297 = D.253006;
  D.195732 = _297;
  D.253007 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.847_296, &D.195732);

  <bb 349> :
  _298 = D.253007;
  function_assign_array::operator= (&assign_array, _298);

  <bb 350> :
  D.195732 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 351> :
  assign_type.stmt = gc;
  D.253009 = gimple_assign_lhs (gc);

  <bb 352> :
  _299 = D.253009;
  assign_type.assign_tree = _299;
  D.253010 = cgraph_node::get_fun (node);

  <bb 353> :
  _300 = D.253010;
  _301 = _300->decl;
  assign_type.form_tree = _301;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 354> :
  function_assign_collect.848_302 = function_assign_collect;
  D.253011 = gimple_assign_rhs1 (def_stmt);

  <bb 355> :
  _303 = D.253011;
  D.195734 = _303;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.848_302, &D.195734, &assign_array);

  <bb 356> :
  D.195734 = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 357> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};

  <bb 358> :
  getFunctionAssignRHS.849_304 = getFunctionAssignRHS;
  _305 = getFunctionAssignRHS.849_304->base.code;
  if (_305 == 165)
    goto <bb 359>; [INV]
  else
    goto <bb 371>; [INV]

  <bb 359> :
  getFunctionAssignRHS.850_306 = getFunctionAssignRHS;
  first = getFunctionAssignRHS.850_306->exp.operands[0];
  _307 = first->base.code;
  if (_307 == 131)
    goto <bb 360>; [INV]
  else
    goto <bb 532>; [INV]

  <bb 360> :
  _308 = first->exp.operands[0];
  second = _308;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.852_309 = function_assign_collect;
  D.253017 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.852_309, &second);

  <bb 361> :
  _310 = D.253017;
  retval.851 = _310 == 0B;
  if (retval.851 != 0)
    goto <bb 362>; [INV]
  else
    goto <bb 363>; [INV]

  <bb 362> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 366>; [INV]

  <bb 363> :
  function_assign_collect.853_311 = function_assign_collect;
  D.253018 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.853_311, &second);

  <bb 364> :
  _312 = D.253018;
  function_assign_array::operator= (&assign_array, _312);

  <bb 365> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 366> :
  assign_type.stmt = gc;
  D.253019 = gimple_assign_lhs (gc);

  <bb 367> :
  _313 = D.253019;
  assign_type.assign_tree = _313;
  D.253020 = cgraph_node::get_fun (node);

  <bb 368> :
  _314 = D.253020;
  _315 = _314->decl;
  assign_type.form_tree = _315;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 369> :
  function_assign_collect.854_316 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.854_316, &second, &assign_array);

  <bb 370> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 532>; [INV]

  <bb 371> :
  getFunctionAssignRHS.855_317 = getFunctionAssignRHS;
  _318 = getFunctionAssignRHS.855_317->base.code;
  if (_318 == 36)
    goto <bb 372>; [INV]
  else
    goto <bb 393>; [INV]

  <bb 372> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.857_319 = function_assign_collect;
  D.253024 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.857_319, &getFunctionAssignRHS);

  <bb 373> :
  _320 = D.253024;
  retval.856 = _320 == 0B;
  if (retval.856 != 0)
    goto <bb 374>; [INV]
  else
    goto <bb 375>; [INV]

  <bb 374> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 378>; [INV]

  <bb 375> :
  function_assign_collect.858_321 = function_assign_collect;
  D.253025 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.858_321, &getFunctionAssignRHS);

  <bb 376> :
  _322 = D.253025;
  function_assign_array::operator= (&assign_array, _322);

  <bb 377> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 378> :
  table1 = ptable;
  t2 = 0B;
  _323 = ptable->size;
  if (_323 >= 0)
    goto <bb 379>; [INV]
  else
    goto <bb 392>; [INV]

  <bb 379> :
  if (table1 != 0B)
    goto <bb 380>; [INV]
  else
    goto <bb 381>; [INV]

  <bb 380> :
  iftmp.859 = table1->target;
  goto <bb 382>; [INV]

  <bb 381> :
  iftmp.859 = 0B;

  <bb 382> :
  t2 = iftmp.859;
  goto <bb 391>; [INV]

  <bb 383> :
  _324 = table1->target;
  _325 = _324->base.code;
  if (_325 == 131)
    goto <bb 384>; [INV]
  else
    goto <bb 387>; [INV]

  <bb 384> :
  _326 = table1->target;
  second = _326->exp.operands[0];
  getFunctionAssignRHS.860_327 = getFunctionAssignRHS;
  if (second == getFunctionAssignRHS.860_327)
    goto <bb 385>; [INV]
  else
    goto <bb 387>; [INV]

  <bb 385> :
  _328 = table1->target;
  table1->swap_target = _328;
  _329 = table1->last_stmt;
  table1->swap_stmt = _329;
  getFunctionAssignLHS.861_330 = getFunctionAssignLHS;
  table1->target = getFunctionAssignLHS.861_330;
  table1->last_stmt = gc;
  FUNCITON_THREAD.862_331 = FUNCITON_THREAD;
  FUNCITON_THREAD.863_332 = (int) FUNCITON_THREAD.862_331;
  table1->swap_type = FUNCITON_THREAD.863_332;
  _333 = table1->last_stmt;
  assign_type.stmt = _333;
  _334 = table1->target;
  assign_type.assign_tree = _334;
  D.253026 = cgraph_node::get_fun (node);

  <bb 386> :
  _335 = D.253026;
  _336 = _335->decl;
  assign_type.form_tree = _336;

  <bb 387> :
  table1 = table1->next;
  if (table1 != 0B)
    goto <bb 388>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 388> :
  iftmp.864 = table1->target;
  goto <bb 390>; [INV]

  <bb 389> :
  iftmp.864 = 0B;

  <bb 390> :
  t2 = iftmp.864;

  <bb 391> :
  _337 = table1->next;
  if (_337 != 0B)
    goto <bb 383>; [INV]
  else
    goto <bb 392>; [INV]

  <bb 392> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 532>; [INV]

  <bb 393> :
  getFunctionAssignRHS.865_338 = getFunctionAssignRHS;
  _339 = getFunctionAssignRHS.865_338->base.code;
  if (_339 == 49)
    goto <bb 394>; [INV]
  else
    goto <bb 405>; [INV]

  <bb 394> :
  getFunctionAssignRHS.866_340 = getFunctionAssignRHS;
  _341 = getFunctionAssignRHS.866_340->exp.operands[0];
  second = _341;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.868_342 = function_assign_collect;
  D.253030 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.868_342, &second);

  <bb 395> :
  _343 = D.253030;
  retval.867 = _343 == 0B;
  if (retval.867 != 0)
    goto <bb 396>; [INV]
  else
    goto <bb 397>; [INV]

  <bb 396> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 400>; [INV]

  <bb 397> :
  function_assign_collect.869_344 = function_assign_collect;
  D.253031 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.869_344, &second);

  <bb 398> :
  _345 = D.253031;
  function_assign_array::operator= (&assign_array, _345);

  <bb 399> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 400> :
  assign_type.stmt = gc;
  D.253032 = gimple_assign_lhs (gc);

  <bb 401> :
  _346 = D.253032;
  assign_type.assign_tree = _346;
  D.253033 = cgraph_node::get_fun (node);

  <bb 402> :
  _347 = D.253033;
  _348 = _347->decl;
  assign_type.form_tree = _348;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 403> :
  function_assign_collect.870_349 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.870_349, &second, &assign_array);

  <bb 404> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 532>; [INV]

  <bb 405> :
  getFunctionAssignRHS.871_350 = getFunctionAssignRHS;
  _351 = getFunctionAssignRHS.871_350->base.code;
  if (_351 == 47)
    goto <bb 406>; [INV]
  else
    goto <bb 532>; [INV]

  <bb 406> :
  getFunctionAssignRHS.872_352 = getFunctionAssignRHS;
  _353 = getFunctionAssignRHS.872_352->exp.operands[0];
  second = _353;
  getFunctionAssignRHS.873_354 = getFunctionAssignRHS;
  _355 = getFunctionAssignRHS.873_354->exp.operands[1];
  second2 = _355;
  second.874_356 = second;
  if (second.874_356 != 0B)
    goto <bb 407>; [INV]
  else
    goto <bb 460>; [INV]

  <bb 407> :
  second.875_357 = second;
  _358 = second.875_357->base.code;
  if (_358 == 165)
    goto <bb 408>; [INV]
  else
    goto <bb 427>; [INV]

  <bb 408> :
  second.876_359 = second;
  three = second.876_359->exp.operands[0];
  if (three != 0B)
    goto <bb 409>; [INV]
  else
    goto <bb 460>; [INV]

  <bb 409> :
  _360 = three->base.code;
  if (_360 == 153)
    goto <bb 410>; [INV]
  else
    goto <bb 460>; [INV]

  <bb 410> :
  def_stmt = three->ssa_name.def_stmt;
  retval.877 = is_gimple_assign (def_stmt);
  if (retval.877 != 0)
    goto <bb 411>; [INV]
  else
    goto <bb 460>; [INV]

  <bb 411> :
  D.253037 = gimple_assign_rhs1 (def_stmt);

  <bb 412> :
  _361 = D.253037;
  _362 = _361->base.code;
  retval.878 = _362 == 36;
  if (retval.878 != 0)
    goto <bb 413>; [INV]
  else
    goto <bb 460>; [INV]

  <bb 413> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.880_363 = function_assign_collect;
  D.253038 = gimple_assign_rhs1 (def_stmt);

  <bb 414> :
  _364 = D.253038;
  D.195756 = _364;
  D.253039 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.880_363, &D.195756);

  <bb 415> :
  _365 = D.253039;
  retval.879 = _365 == 0B;
  D.195756 = {CLOBBER};
  if (retval.879 != 0)
    goto <bb 416>; [INV]
  else
    goto <bb 417>; [INV]

  <bb 416> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 421>; [INV]

  <bb 417> :
  function_assign_collect.881_366 = function_assign_collect;
  D.253041 = gimple_assign_rhs1 (def_stmt);

  <bb 418> :
  _367 = D.253041;
  D.195757 = _367;
  D.253042 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.881_366, &D.195757);

  <bb 419> :
  _368 = D.253042;
  function_assign_array::operator= (&assign_array, _368);

  <bb 420> :
  D.195757 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 421> :
  assign_type.stmt = gc;
  D.253044 = gimple_assign_lhs (def_stmt);

  <bb 422> :
  _369 = D.253044;
  assign_type.assign_tree = _369;
  D.253045 = cgraph_node::get_fun (node);

  <bb 423> :
  _370 = D.253045;
  _371 = _370->decl;
  assign_type.form_tree = _371;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 424> :
  function_assign_collect.882_372 = function_assign_collect;
  D.253046 = gimple_assign_rhs1 (def_stmt);

  <bb 425> :
  _373 = D.253046;
  D.195759 = _373;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.882_372, &D.195759, &assign_array);

  <bb 426> :
  D.195759 = {CLOBBER};
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 460>; [INV]

  <bb 427> :
  second.883_374 = second;
  _375 = second.883_374->base.code;
  if (_375 == 36)
    goto <bb 428>; [INV]
  else
    goto <bb 438>; [INV]

  <bb 428> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.885_376 = function_assign_collect;
  D.253051 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.885_376, &second);

  <bb 429> :
  _377 = D.253051;
  retval.884 = _377 == 0B;
  if (retval.884 != 0)
    goto <bb 430>; [INV]
  else
    goto <bb 431>; [INV]

  <bb 430> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 434>; [INV]

  <bb 431> :
  function_assign_collect.886_378 = function_assign_collect;
  D.253052 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.886_378, &second);

  <bb 432> :
  _379 = D.253052;
  function_assign_array::operator= (&assign_array, _379);

  <bb 433> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 434> :
  assign_type.stmt = gc;
  second.887_380 = second;
  assign_type.assign_tree = second.887_380;
  D.253053 = cgraph_node::get_fun (node);

  <bb 435> :
  _381 = D.253053;
  _382 = _381->decl;
  assign_type.form_tree = _382;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 436> :
  function_assign_collect.888_383 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.888_383, &second, &assign_array);

  <bb 437> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 460>; [INV]

  <bb 438> :
  second.889_384 = second;
  _385 = second.889_384->base.code;
  if (_385 == 47)
    goto <bb 439>; [INV]
  else
    goto <bb 460>; [INV]

  <bb 439> :
  getFunctionAssignLHS.890_386 = getFunctionAssignLHS;
  three = getFunctionAssignLHS.890_386->exp.operands[0];
  if (three != 0B)
    goto <bb 440>; [INV]
  else
    goto <bb 460>; [INV]

  <bb 440> :
  _387 = three->base.code;
  if (_387 == 165)
    goto <bb 441>; [INV]
  else
    goto <bb 460>; [INV]

  <bb 441> :
  second.891_388 = second;
  four = second.891_388->exp.operands[0];
  if (four != 0B)
    goto <bb 442>; [INV]
  else
    goto <bb 460>; [INV]

  <bb 442> :
  _389 = four->base.code;
  if (_389 == 153)
    goto <bb 443>; [INV]
  else
    goto <bb 460>; [INV]

  <bb 443> :
  def_stmt = four->ssa_name.def_stmt;
  retval.892 = is_gimple_assign (def_stmt);
  if (retval.892 != 0)
    goto <bb 444>; [INV]
  else
    goto <bb 460>; [INV]

  <bb 444> :
  D.253057 = gimple_assign_rhs1 (def_stmt);

  <bb 445> :
  _390 = D.253057;
  _391 = _390->base.code;
  retval.893 = _391 == 36;
  if (retval.893 != 0)
    goto <bb 446>; [INV]
  else
    goto <bb 460>; [INV]

  <bb 446> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.895_392 = function_assign_collect;
  D.253058 = gimple_assign_rhs1 (def_stmt);

  <bb 447> :
  _393 = D.253058;
  D.195768 = _393;
  D.253059 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.895_392, &D.195768);

  <bb 448> :
  _394 = D.253059;
  retval.894 = _394 == 0B;
  D.195768 = {CLOBBER};
  if (retval.894 != 0)
    goto <bb 449>; [INV]
  else
    goto <bb 450>; [INV]

  <bb 449> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 454>; [INV]

  <bb 450> :
  function_assign_collect.896_395 = function_assign_collect;
  D.253061 = gimple_assign_rhs1 (def_stmt);

  <bb 451> :
  _396 = D.253061;
  D.195769 = _396;
  D.253062 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.896_395, &D.195769);

  <bb 452> :
  _397 = D.253062;
  function_assign_array::operator= (&assign_array, _397);

  <bb 453> :
  D.195769 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 454> :
  assign_type.stmt = gc;
  D.253064 = gimple_assign_lhs (def_stmt);

  <bb 455> :
  _398 = D.253064;
  assign_type.assign_tree = _398;
  D.253065 = cgraph_node::get_fun (node);

  <bb 456> :
  _399 = D.253065;
  _400 = _399->decl;
  assign_type.form_tree = _400;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 457> :
  function_assign_collect.897_401 = function_assign_collect;
  D.253066 = gimple_assign_rhs1 (def_stmt);

  <bb 458> :
  _402 = D.253066;
  D.195771 = _402;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.897_401, &D.195771, &assign_array);

  <bb 459> :
  D.195771 = {CLOBBER};
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 460> :
  second2.898_403 = second2;
  if (second2.898_403 != 0B)
    goto <bb 461>; [INV]
  else
    goto <bb 472>; [INV]

  <bb 461> :
  second2.899_404 = second2;
  _405 = second2.899_404->base.code;
  if (_405 == 35)
    goto <bb 462>; [INV]
  else
    goto <bb 472>; [INV]

  <bb 462> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.901_406 = function_assign_collect;
  D.253071 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.901_406, &second2);

  <bb 463> :
  _407 = D.253071;
  retval.900 = _407 == 0B;
  if (retval.900 != 0)
    goto <bb 464>; [INV]
  else
    goto <bb 465>; [INV]

  <bb 464> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 468>; [INV]

  <bb 465> :
  function_assign_collect.902_408 = function_assign_collect;
  D.253072 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.902_408, &second2);

  <bb 466> :
  _409 = D.253072;
  function_assign_array::operator= (&assign_array, _409);

  <bb 467> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 468> :
  assign_type.stmt = gc;
  getFunctionAssignRHS.903_410 = getFunctionAssignRHS;
  assign_type.assign_tree = getFunctionAssignRHS.903_410;
  D.253073 = cgraph_node::get_fun (node);

  <bb 469> :
  _411 = D.253073;
  _412 = _411->decl;
  assign_type.form_tree = _412;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 470> :
  function_assign_collect.904_413 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.904_413, &second2, &assign_array);

  <bb 471> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 472> :
  second = {CLOBBER};
  second2 = {CLOBBER};
  goto <bb 532>; [INV]

  <bb 473> :
  getFunctionAssignLHS.905_414 = getFunctionAssignLHS;
  _415 = getFunctionAssignLHS.905_414->base.code;
  if (_415 == 47)
    goto <bb 474>; [INV]
  else
    goto <bb 519>; [INV]

  <bb 474> :
  getFunctionAssignLHS.906_416 = getFunctionAssignLHS;
  _417 = getFunctionAssignLHS.906_416->exp.operands[0];
  second = _417;
  getFunctionAssignLHS.907_418 = getFunctionAssignLHS;
  _419 = getFunctionAssignLHS.907_418->exp.operands[1];
  second2 = _419;
  second.908_420 = second;
  if (second.908_420 != 0B)
    goto <bb 475>; [INV]
  else
    goto <bb 506>; [INV]

  <bb 475> :
  second.909_421 = second;
  _422 = second.909_421->base.code;
  if (_422 == 165)
    goto <bb 476>; [INV]
  else
    goto <bb 495>; [INV]

  <bb 476> :
  second.910_423 = second;
  three = second.910_423->exp.operands[0];
  if (three != 0B)
    goto <bb 477>; [INV]
  else
    goto <bb 506>; [INV]

  <bb 477> :
  _424 = three->base.code;
  if (_424 == 153)
    goto <bb 478>; [INV]
  else
    goto <bb 506>; [INV]

  <bb 478> :
  def_stmt = three->ssa_name.def_stmt;
  retval.911 = is_gimple_assign (def_stmt);
  if (retval.911 != 0)
    goto <bb 479>; [INV]
  else
    goto <bb 506>; [INV]

  <bb 479> :
  D.253078 = gimple_assign_rhs1 (def_stmt);

  <bb 480> :
  _425 = D.253078;
  _426 = _425->base.code;
  retval.912 = _426 == 36;
  if (retval.912 != 0)
    goto <bb 481>; [INV]
  else
    goto <bb 506>; [INV]

  <bb 481> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.914_427 = function_assign_collect;
  D.253079 = gimple_assign_rhs1 (def_stmt);

  <bb 482> :
  _428 = D.253079;
  D.195781 = _428;
  D.253080 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.914_427, &D.195781);

  <bb 483> :
  _429 = D.253080;
  retval.913 = _429 == 0B;
  D.195781 = {CLOBBER};
  if (retval.913 != 0)
    goto <bb 484>; [INV]
  else
    goto <bb 485>; [INV]

  <bb 484> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 489>; [INV]

  <bb 485> :
  function_assign_collect.915_430 = function_assign_collect;
  D.253082 = gimple_assign_rhs1 (def_stmt);

  <bb 486> :
  _431 = D.253082;
  D.195782 = _431;
  D.253083 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.915_430, &D.195782);

  <bb 487> :
  _432 = D.253083;
  function_assign_array::operator= (&assign_array, _432);

  <bb 488> :
  D.195782 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 489> :
  assign_type.stmt = gc;
  D.253085 = gimple_assign_lhs (def_stmt);

  <bb 490> :
  _433 = D.253085;
  assign_type.assign_tree = _433;
  D.253086 = cgraph_node::get_fun (node);

  <bb 491> :
  _434 = D.253086;
  _435 = _434->decl;
  assign_type.form_tree = _435;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 492> :
  function_assign_collect.916_436 = function_assign_collect;
  D.253087 = gimple_assign_rhs1 (def_stmt);

  <bb 493> :
  _437 = D.253087;
  D.195784 = _437;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.916_436, &D.195784, &assign_array);

  <bb 494> :
  D.195784 = {CLOBBER};
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 506>; [INV]

  <bb 495> :
  second.917_438 = second;
  _439 = second.917_438->base.code;
  if (_439 == 36)
    goto <bb 496>; [INV]
  else
    goto <bb 506>; [INV]

  <bb 496> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.919_440 = function_assign_collect;
  D.253092 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.919_440, &second);

  <bb 497> :
  _441 = D.253092;
  retval.918 = _441 == 0B;
  if (retval.918 != 0)
    goto <bb 498>; [INV]
  else
    goto <bb 499>; [INV]

  <bb 498> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 502>; [INV]

  <bb 499> :
  function_assign_collect.920_442 = function_assign_collect;
  D.253093 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.920_442, &second);

  <bb 500> :
  _443 = D.253093;
  function_assign_array::operator= (&assign_array, _443);

  <bb 501> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 502> :
  assign_type.stmt = gc;
  second.921_444 = second;
  assign_type.assign_tree = second.921_444;
  D.253094 = cgraph_node::get_fun (node);

  <bb 503> :
  _445 = D.253094;
  _446 = _445->decl;
  assign_type.form_tree = _446;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 504> :
  function_assign_collect.922_447 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.922_447, &second, &assign_array);

  <bb 505> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 506> :
  second2.923_448 = second2;
  if (second2.923_448 != 0B)
    goto <bb 507>; [INV]
  else
    goto <bb 518>; [INV]

  <bb 507> :
  second2.924_449 = second2;
  _450 = second2.924_449->base.code;
  if (_450 == 35)
    goto <bb 508>; [INV]
  else
    goto <bb 518>; [INV]

  <bb 508> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.926_451 = function_assign_collect;
  D.253098 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.926_451, &second2);

  <bb 509> :
  _452 = D.253098;
  retval.925 = _452 == 0B;
  if (retval.925 != 0)
    goto <bb 510>; [INV]
  else
    goto <bb 511>; [INV]

  <bb 510> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 514>; [INV]

  <bb 511> :
  function_assign_collect.927_453 = function_assign_collect;
  D.253099 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.927_453, &second2);

  <bb 512> :
  _454 = D.253099;
  function_assign_array::operator= (&assign_array, _454);

  <bb 513> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 514> :
  assign_type.stmt = gc;
  getFunctionAssignLHS.928_455 = getFunctionAssignLHS;
  assign_type.assign_tree = getFunctionAssignLHS.928_455;
  D.253100 = cgraph_node::get_fun (node);

  <bb 515> :
  _456 = D.253100;
  _457 = _456->decl;
  assign_type.form_tree = _457;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 516> :
  function_assign_collect.929_458 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.929_458, &second2, &assign_array);

  <bb 517> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 518> :
  second = {CLOBBER};
  second2 = {CLOBBER};
  goto <bb 532>; [INV]

  <bb 519> :
  getFunctionAssignLHS.930_459 = getFunctionAssignLHS;
  _460 = getFunctionAssignLHS.930_459->base.code;
  if (_460 == 49)
    goto <bb 520>; [INV]
  else
    goto <bb 532>; [INV]

  <bb 520> :
  debug_gimple_stmt (gc);

  <bb 521> :
  getFunctionAssignLHS.931_461 = getFunctionAssignLHS;
  _462 = getFunctionAssignLHS.931_461->exp.operands[0];
  second = _462;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.933_463 = function_assign_collect;
  D.253105 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.933_463, &second);

  <bb 522> :
  _464 = D.253105;
  retval.932 = _464 == 0B;
  if (retval.932 != 0)
    goto <bb 523>; [INV]
  else
    goto <bb 524>; [INV]

  <bb 523> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 527>; [INV]

  <bb 524> :
  function_assign_collect.934_465 = function_assign_collect;
  D.253106 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.934_465, &second);

  <bb 525> :
  _466 = D.253106;
  function_assign_array::operator= (&assign_array, _466);

  <bb 526> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 527> :
  assign_type.stmt = gc;
  D.253107 = gimple_assign_rhs1 (gc);

  <bb 528> :
  _467 = D.253107;
  assign_type.assign_tree = _467;
  D.253108 = cgraph_node::get_fun (node);

  <bb 529> :
  _468 = D.253108;
  _469 = _468->decl;
  assign_type.form_tree = _469;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 530> :
  function_assign_collect.935_470 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.935_470, &second, &assign_array);

  <bb 531> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 532> :
  getFunctionAssignRHS = {CLOBBER};
  getFunctionAssignLHS = {CLOBBER};

  <bb 533> :
<L399>:
  return;

  <bb 534> :
<L400>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 4

  <bb 535> :
<L401>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 3

  <bb 536> :
<L402>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 2

  <bb 537> :
<L403>:
  second = {CLOBBER};
  resx 1

  <bb 538> :
<L404>:
  D.195270 = {CLOBBER};
  resx 16

  <bb 539> :
<L405>:
  D.195271 = {CLOBBER};
  resx 18

  <bb 540> :
<L406>:
  D.195273 = {CLOBBER};
  resx 20

  <bb 541> :
<L407>:
  assign_type = {CLOBBER};
  resx 15

  <bb 542> :
<L408>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 14

  <bb 543> :
<L409>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 13

  <bb 544> :
<L410>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  resx 12

  <bb 545> :
<L411>:
  function_free_array::~function_free_array (&fun_array);
  resx 11

  <bb 546> :
<L412>:
  std::vector<free_type>::~vector (&free_type_array);
  resx 10

  <bb 547> :
<L413>:
  getFucntionDecl = {CLOBBER};
  free_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  free_type = {CLOBBER};
  resx 9

  <bb 548> :
<L414>:
  ret_type = {CLOBBER};
  resx 32

  <bb 549> :
<L415>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 31

  <bb 550> :
<L416>:
  function_return_array::~function_return_array (&fun_array);
  resx 30

  <bb 551> :
<L417>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  resx 29

  <bb 552> :
<L418>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 39

  <bb 553> :
<L419>:
  function_return_array::~function_return_array (&fun_array);
  resx 38

  <bb 554> :
<L420>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};
  ret_type = {CLOBBER};
  resx 37

  <bb 555> :
<L421>:
  assign_type = {CLOBBER};
  resx 46

  <bb 556> :
<L422>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 45

  <bb 557> :
<L423>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 44

  <bb 558> :
<L424>:
  getFunctionAssignRHS = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 43

  <bb 559> :
<L425>:
  std::vector<pthread_detched_type>::~vector (&pthread_detched_array);
  resx 53

  <bb 560> :
<L426>:
  function_pthread_detched_array::~function_pthread_detched_array (&fun_array);
  resx 52

  <bb 561> :
<L427>:
  getFucntionDecl = {CLOBBER};
  fun_array = {CLOBBER};
  pthread_detched_array = {CLOBBER};
  pthread_detched_type = {CLOBBER};
  resx 51

  <bb 562> :
<L428>:
  std::vector<pthread_exit_type>::~vector (&pthread_exit_array);
  resx 59

  <bb 563> :
<L429>:
  function_pthread_exit_array::~function_pthread_exit_array (&fun_array);
  resx 58

  <bb 564> :
<L430>:
  getFucntionDecl = {CLOBBER};
  fun_array = {CLOBBER};
  pthread_exit_array = {CLOBBER};
  pthread_exit_type = {CLOBBER};
  resx 57

  <bb 565> :
<L431>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 67

  <bb 566> :
<L432>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 66

  <bb 567> :
<L433>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 65

  <bb 568> :
<L434>:
  getVARDECLtree = {CLOBBER};
  resx 64

  <bb 569> :
<L435>:
  D.195681 = {CLOBBER};
  resx 75

  <bb 570> :
<L436>:
  D.195682 = {CLOBBER};
  resx 77

  <bb 571> :
<L437>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 74

  <bb 572> :
<L438>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 73

  <bb 573> :
<L439>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  second = {CLOBBER};
  resx 72

  <bb 574> :
<L440>:
  function_return_array::~function_return_array (&fun_array);
  resx 86

  <bb 575> :
<L441>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 85

  <bb 576> :
<L442>:
  getFucntionDecl = {CLOBBER};
  ret_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  ret_type = {CLOBBER};
  resx 84

  <bb 577> :
<L443>:
  getreturnFucntionDecl = {CLOBBER};
  resx 63

  <bb 578> :
<L444>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 95

  <bb 579> :
<L445>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 94

  <bb 580> :
<L446>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 93

  <bb 581> :
<L447>:
  ssa_var = {CLOBBER};
  resx 92

  <bb 582> :
<L448>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 103

  <bb 583> :
<L449>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 102

  <bb 584> :
<L450>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 101

  <bb 585> :
<L451>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 109

  <bb 586> :
<L452>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 108

  <bb 587> :
<L453>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 107

  <bb 588> :
<L454>:
  ssa_var = {CLOBBER};
  resx 100

  <bb 589> :
<L455>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 116

  <bb 590> :
<L456>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 115

  <bb 591> :
<L457>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 114

  <bb 592> :
<L458>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 122

  <bb 593> :
<L459>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 121

  <bb 594> :
<L460>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 120

  <bb 595> :
<L461>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 128

  <bb 596> :
<L462>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 127

  <bb 597> :
<L463>:
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 126

  <bb 598> :
<L464>:
  D.195731 = {CLOBBER};
  resx 136

  <bb 599> :
<L465>:
  D.195732 = {CLOBBER};
  resx 138

  <bb 600> :
<L466>:
  D.195734 = {CLOBBER};
  resx 140

  <bb 601> :
<L467>:
  assign_type = {CLOBBER};
  resx 135

  <bb 602> :
<L468>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 134

  <bb 603> :
<L469>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 133

  <bb 604> :
<L470>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  resx 132

  <bb 605> :
<L471>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 148

  <bb 606> :
<L472>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 147

  <bb 607> :
<L473>:
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 146

  <bb 608> :
<L474>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 154

  <bb 609> :
<L475>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 153

  <bb 610> :
<L476>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 152

  <bb 611> :
<L477>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 160

  <bb 612> :
<L478>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 159

  <bb 613> :
<L479>:
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 158

  <bb 614> :
<L480>:
  D.195756 = {CLOBBER};
  resx 168

  <bb 615> :
<L481>:
  D.195757 = {CLOBBER};
  resx 170

  <bb 616> :
<L482>:
  D.195759 = {CLOBBER};
  resx 172

  <bb 617> :
<L483>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 167

  <bb 618> :
<L484>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 166

  <bb 619> :
<L485>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 165

  <bb 620> :
<L486>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 179

  <bb 621> :
<L487>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 178

  <bb 622> :
<L488>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 177

  <bb 623> :
<L489>:
  D.195768 = {CLOBBER};
  resx 186

  <bb 624> :
<L490>:
  D.195769 = {CLOBBER};
  resx 188

  <bb 625> :
<L491>:
  D.195771 = {CLOBBER};
  resx 190

  <bb 626> :
<L492>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 185

  <bb 627> :
<L493>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 184

  <bb 628> :
<L494>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 183

  <bb 629> :
<L495>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 197

  <bb 630> :
<L496>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 196

  <bb 631> :
<L497>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 195

  <bb 632> :
<L498>:
  second = {CLOBBER};
  second2 = {CLOBBER};
  resx 164

  <bb 633> :
<L499>:
  D.195781 = {CLOBBER};
  resx 206

  <bb 634> :
<L500>:
  D.195782 = {CLOBBER};
  resx 208

  <bb 635> :
<L501>:
  D.195784 = {CLOBBER};
  resx 210

  <bb 636> :
<L502>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 205

  <bb 637> :
<L503>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 204

  <bb 638> :
<L504>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 203

  <bb 639> :
<L505>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 217

  <bb 640> :
<L506>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 216

  <bb 641> :
<L507>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 215

  <bb 642> :
<L508>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 223

  <bb 643> :
<L509>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 222

  <bb 644> :
<L510>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 221

  <bb 645> :
<L511>:
  second = {CLOBBER};
  second2 = {CLOBBER};
  resx 202

  <bb 646> :
<L512>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 230

  <bb 647> :
<L513>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 229

  <bb 648> :
<L514>:
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 228

  <bb 649> :
<L515>:
  getFunctionAssignRHS = {CLOBBER};
  getFunctionAssignLHS = {CLOBBER};
  resx 91

}



;; Function std::vector<free_type>::vector (_ZNSt6vectorI9free_typeSaIS0_EEC2Ev, funcdef_no=6369, decl_uid=173483, cgraph_uid=3344, symbol_order=4121)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<free_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.173491;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_ZNSt12_Vector_baseI9free_typeSaIS0_EEC2Ev, funcdef_no=6367, decl_uid=172941, cgraph_uid=3341, symbol_order=4118)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI9free_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7733, decl_uid=172833, cgraph_uid=4365, symbol_order=5151)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<free_type>::allocator (this);
  _1 = &this->D.172836;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<free_type>::allocator (_ZNSaI9free_typeEC2Ev, funcdef_no=8649, decl_uid=172611, cgraph_uid=5281, symbol_order=6071)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<free_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<free_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI9free_typeEC2Ev, funcdef_no=9456, decl_uid=172540, cgraph_uid=6088, symbol_order=6878)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function function_free_array::function_free_array (_ZN19function_free_arrayC2Ev, funcdef_no=6372, decl_uid=192775, cgraph_uid=3347, symbol_order=4124)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_free_array::function_free_array (struct function_free_array * const this)
{
  <bb 2> :
  _1 = &this->free_type_array;
  std::vector<free_type>::vector (_1);
  return;

}



;; Function function_free_array::operator= (_ZN19function_free_arrayaSERKS_, funcdef_no=6374, decl_uid=195223, cgraph_uid=3349, symbol_order=4126)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_free_array & function_free_array::operator= (struct function_free_array * const this, const struct function_free_array & D.195224)
{
  struct function_free_array & D.253115;

  <bb 2> :
  _1 = &D.195224->free_type_array;
  _2 = &this->free_type_array;
  std::vector<free_type>::operator= (_2, _1);
  D.253115 = this;

  <bb 3> :
<L0>:
  return D.253115;

}



;; Function std::vector<free_type>::operator= (_ZNSt6vectorI9free_typeSaIS0_EEaSERKS2_, funcdef_no=7741, decl_uid=173069, cgraph_uid=4375, symbol_order=5161)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<free_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct free_type * D.253150;
  struct free_type * __tmp;
  const size_type __xlen;
  struct vector & D.253148;
  struct __normal_iterator D.253145;
  struct __normal_iterator D.253144;
  struct __normal_iterator D.253143;
  struct __normal_iterator D.253142;
  struct __normal_iterator D.253141;
  bool retval.940;
  struct __normal_iterator D.253136;
  struct __normal_iterator D.253135;
  bool retval.939;
  bool iftmp.938;
  bool retval.937;
  bool retval.936;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.936 = __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_propagate_on_copy_assign ();
  if (retval.936 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.173491;
  _4 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.173491;
  _6 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.938 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.938 = 0;

  <bb 8> :
  retval.937 = iftmp.938;
  if (retval.937 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<free_type>::clear (this);
  _8 = &this->D.173491;
  _9 = this->D.173491._M_impl.D.172836._M_end_of_storage;
  _10 = this->D.173491._M_impl.D.172836._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 24;
  _13 = (long unsigned int) _12;
  _14 = this->D.173491._M_impl.D.172836._M_start;
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (_8, _14, _13);
  this->D.173491._M_impl.D.172836._M_start = 0B;
  this->D.173491._M_impl.D.172836._M_finish = 0B;
  this->D.173491._M_impl.D.172836._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.173491;
  _16 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.173491;
  _18 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<free_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<free_type>::size (__x);
  _19 = std::vector<free_type>::capacity (this);
  retval.939 = __xlen > _19;
  if (retval.939 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.253135 = std::vector<free_type>::end (__x);
  D.253136 = std::vector<free_type>::begin (__x);
  D.253150 = std::vector<free_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (this, __xlen, D.253136, D.253135);
  __tmp = D.253150;
  _20 = &this->D.173491;
  _21 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.173491._M_impl.D.172836._M_finish;
  _23 = this->D.173491._M_impl.D.172836._M_start;
  std::_Destroy<free_type*, free_type> (_23, _22, _21);
  _24 = &this->D.173491;
  _25 = this->D.173491._M_impl.D.172836._M_end_of_storage;
  _26 = this->D.173491._M_impl.D.172836._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 24;
  _29 = (long unsigned int) _28;
  _30 = this->D.173491._M_impl.D.172836._M_start;
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (_24, _30, _29);
  this->D.173491._M_impl.D.172836._M_start = __tmp;
  _31 = this->D.173491._M_impl.D.172836._M_start;
  _32 = __xlen * 24;
  _33 = _31 + _32;
  this->D.173491._M_impl.D.172836._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<free_type>::size (this);
  retval.940 = __xlen <= _34;
  if (retval.940 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.173491;
  _36 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_35);
  D.253141 = std::vector<free_type>::end (this);
  D.253142 = std::vector<free_type>::begin (this);
  D.253143 = std::vector<free_type>::end (__x);
  D.253144 = std::vector<free_type>::begin (__x);
  D.253145 = std::copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (D.253144, D.253143, D.253142);
  std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type> (D.253145, D.253141, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.173491._M_impl.D.172836._M_start;
  _38 = __x->D.173491._M_impl.D.172836._M_start;
  _39 = std::vector<free_type>::size (this);
  _40 = _39 * 24;
  _41 = _38 + _40;
  _42 = __x->D.173491._M_impl.D.172836._M_start;
  std::copy<free_type*, free_type*> (_42, _41, _37);
  _43 = &this->D.173491;
  _44 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.173491._M_impl.D.172836._M_finish;
  _46 = __x->D.173491._M_impl.D.172836._M_finish;
  _47 = __x->D.173491._M_impl.D.172836._M_start;
  _48 = std::vector<free_type>::size (this);
  _49 = _48 * 24;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<free_type*, free_type*, free_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.173491._M_impl.D.172836._M_start;
  _52 = __xlen * 24;
  _53 = _51 + _52;
  this->D.173491._M_impl.D.172836._M_finish = _53;

  <bb 17> :
  D.253148 = this;

  <bb 18> :
<L19>:
  return D.253148;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI9free_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7742, decl_uid=172703, cgraph_uid=4373, symbol_order=5159)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_propagate_on_copy_assign ()
{
  bool D.253151;

  <bb 2> :
  D.253151 = 0;

  <bb 3> :
<L0>:
  return D.253151;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI9free_typeES1_E15_S_always_equalEv, funcdef_no=7743, decl_uid=172706, cgraph_uid=4374, symbol_order=5160)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_always_equal ()
{
  bool D.253153;

  <bb 2> :
  D.253153 = 1;

  <bb 3> :
<L0>:
  return D.253153;

}



;; Function std::operator!= (_ZStneRKSaI9free_typeES2_, funcdef_no=8658, decl_uid=172589, cgraph_uid=5290, symbol_order=6080)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.225644, const struct allocator & D.225645)
{
  bool D.253155;

  <bb 2> :
  D.253155 = 0;

  <bb 3> :
<L0>:
  return D.253155;

}



;; Function std::vector<free_type>::clear (_ZNSt6vectorI9free_typeSaIS0_EE5clearEv, funcdef_no=8659, decl_uid=173221, cgraph_uid=5291, symbol_order=6081)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<free_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.173491._M_impl.D.172836._M_start;
  std::vector<free_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<free_type>::_M_erase_at_end (_ZNSt6vectorI9free_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9459, decl_uid=173349, cgraph_uid=6091, symbol_order=6881)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<free_type>::_M_erase_at_end (struct vector * const this, struct free_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.173491._M_impl.D.172836._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 24;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.173491;
  _5 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.173491._M_impl.D.172836._M_finish;
  std::_Destroy<free_type*, free_type> (__pos, _6, _5);
  this->D.173491._M_impl.D.172836._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<free_type> > (_ZSt15__alloc_on_copyISaI9free_typeEEvRT_RKS2_, funcdef_no=8660, decl_uid=214128, cgraph_uid=5292, symbol_order=6082)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<free_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<free_type>::capacity (_ZNKSt6vectorI9free_typeSaIS0_EE8capacityEv, funcdef_no=8661, decl_uid=173137, cgraph_uid=5293, symbol_order=6083)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<free_type>::capacity (const struct vector * const this)
{
  size_type D.253160;

  <bb 2> :
  _1 = this->D.173491._M_impl.D.172836._M_end_of_storage;
  _2 = this->D.173491._M_impl.D.172836._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.253160 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.253160;

}



;; Function std::vector<free_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (_ZNSt6vectorI9free_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8662, decl_uid=214135, cgraph_uid=5294, symbol_order=6084)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct free_type * std::vector<free_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct free_type * D.253164;
  struct free_type * __result;
  struct free_type * D.253162;

  <bb 2> :
  _1 = &this->D.173491;
  D.253164 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_allocate (_1, __n);
  __result = D.253164;
  _2 = &this->D.173491;
  _3 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*, free_type> (__first, __last, __result, _3);

  <bb 3> :
  D.253162 = __result;

  <bb 4> :
<L0>:
  return D.253162;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.173491;
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<free_type>::end (_ZNSt6vectorI9free_typeSaIS0_EE3endEv, funcdef_no=8665, decl_uid=173104, cgraph_uid=5297, symbol_order=6087)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<free_type>::end (struct vector * const this)
{
  struct iterator D.225731;
  struct iterator D.253168;

  <bb 2> :
  _1 = &this->D.173491._M_impl.D.172836._M_finish;
  __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::__normal_iterator (&D.225731, _1);
  D.253168 = D.225731;
  D.225731 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253168;

}



;; Function __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9462, decl_uid=214217, cgraph_uid=6094, symbol_order=6884)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::__normal_iterator (struct __normal_iterator * const this, struct free_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<free_type>::begin (_ZNSt6vectorI9free_typeSaIS0_EE5beginEv, funcdef_no=8663, decl_uid=173100, cgraph_uid=5295, symbol_order=6085)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<free_type>::begin (struct vector * const this)
{
  struct iterator D.225685;
  struct iterator D.253171;

  <bb 2> :
  _1 = &this->D.173491._M_impl.D.172836._M_start;
  __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::__normal_iterator (&D.225685, _1);
  D.253171 = D.225685;
  D.225685 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253171;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8664, decl_uid=214236, cgraph_uid=5296, symbol_order=6086)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.253176;
  struct __normal_iterator D.253175;
  struct __normal_iterator D.253174;

  <bb 2> :
  D.253175 = std::__miter_base<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (__last);
  D.253176 = std::__miter_base<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (__first);
  D.253174 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (D.253176, D.253175, __result);

  <bb 3> :
<L0>:
  return D.253174;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9464, decl_uid=225697, cgraph_uid=6096, symbol_order=6886)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.253178;

  <bb 2> :
  D.253178 = __it;

  <bb 3> :
<L0>:
  return D.253178;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9465, decl_uid=225703, cgraph_uid=6098, symbol_order=6888)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct free_type * D.253182;
  struct __normal_iterator D.253180;

  <bb 2> :
  _1 = std::__niter_base<free_type*, std::vector<free_type> > (__result);
  _2 = std::__niter_base<const free_type*, std::vector<free_type> > (__last);
  _3 = std::__niter_base<const free_type*, std::vector<free_type> > (__first);
  D.253182 = std::__copy_move_a1<false, const free_type*, free_type*> (_3, _2, _1);
  _4 = D.253182;
  D.253180 = std::__niter_wrap<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.253180;

}



;; Function std::__niter_base<free_type*, std::vector<free_type> > (_ZSt12__niter_baseIP9free_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10132, decl_uid=236701, cgraph_uid=6764, symbol_order=7558)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__niter_base<free_type*, std::vector<free_type> > (struct __normal_iterator __it)
{
  struct free_type * D.253183;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (&__it);
  D.253183 = *_1;

  <bb 3> :
<L0>:
  return D.253183;

}



;; Function __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9476, decl_uid=214204, cgraph_uid=6108, symbol_order=6898)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * const & __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (const struct __normal_iterator * const this)
{
  struct free_type * const & D.253185;

  <bb 2> :
  D.253185 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.253185;

}



;; Function std::__niter_base<const free_type*, std::vector<free_type> > (_ZSt12__niter_baseIPK9free_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10131, decl_uid=236550, cgraph_uid=6763, symbol_order=7557)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct free_type * std::__niter_base<const free_type*, std::vector<free_type> > (struct __normal_iterator __it)
{
  const struct free_type * D.253187;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::base (&__it);
  D.253187 = *_1;

  <bb 3> :
<L0>:
  return D.253187;

}



;; Function std::__copy_move_a1<false, const free_type*, free_type*> (_ZSt14__copy_move_a1ILb0EPK9free_typePS0_ET1_T0_S5_S4_, funcdef_no=10133, decl_uid=236704, cgraph_uid=6765, symbol_order=7559)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__copy_move_a1<false, const free_type*, free_type*> (const struct free_type * __first, const struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.253191;
  struct free_type * D.253189;

  <bb 2> :
  D.253191 = std::__copy_move_a2<false, const free_type*, free_type*> (__first, __last, __result);
  D.253189 = D.253191;

  <bb 3> :
<L0>:
  return D.253189;

}



;; Function std::__copy_move_a2<false, const free_type*, free_type*> (_ZSt14__copy_move_a2ILb0EPK9free_typePS0_ET1_T0_S5_S4_, funcdef_no=10634, decl_uid=242413, cgraph_uid=7266, symbol_order=8060)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__copy_move_a2<false, const free_type*, free_type*> (const struct free_type * __first, const struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.253192;

  <bb 2> :
  D.253192 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<free_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.253192;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<free_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI9free_typeEEPT_PKS4_S7_S5_, funcdef_no=10880, decl_uid=245771, cgraph_uid=7512, symbol_order=8308)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct free_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<free_type> (const struct free_type * __first, const struct free_type * __last, struct free_type * __result)
{
  const ptrdiff_t _Num;
  struct free_type * D.253197;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 24;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.941_2 = (long unsigned int) _Num;
  _3 = _Num.941_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.942_4 = (long unsigned int) _Num;
  _5 = _Num.942_4 * 24;
  D.253197 = __result + _5;

  <bb 5> :
<L3>:
  return D.253197;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10134, decl_uid=236708, cgraph_uid=6766, symbol_order=7560)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type*> (struct __normal_iterator __from, struct free_type * __res)
{
  struct __normal_iterator D.253199;

  <bb 2> :
  _1 = std::__niter_base<free_type*, std::vector<free_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 24;
  D.253199 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.253199;

}



;; Function __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10635, decl_uid=214195, cgraph_uid=7267, symbol_order=8061)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct free_type * const D.245777;
  struct __normal_iterator D.245778;
  struct __normal_iterator D.253201;

  <bb 2> :
  _1 = this->_M_current;
  __n.943_2 = (long unsigned int) __n;
  _3 = __n.943_2 * 24;
  _4 = _1 + _3;
  D.245777 = _4;
  __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::__normal_iterator (&D.245778, &D.245777);
  D.253201 = D.245778;
  D.245778 = {CLOBBER};
  D.245777 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.253201;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8666, decl_uid=214242, cgraph_uid=5298, symbol_order=6088)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.225734)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9467, decl_uid=225736, cgraph_uid=6099, symbol_order=6889)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10135, decl_uid=236732, cgraph_uid=6767, symbol_order=7561)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (struct __normal_iterator D.242422, struct __normal_iterator D.242423)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<free_type*, free_type*> (_ZSt4copyIP9free_typeS1_ET0_T_S3_S2_, funcdef_no=8667, decl_uid=214250, cgraph_uid=5299, symbol_order=6089)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::copy<free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.253207;
  struct free_type * D.253205;

  <bb 2> :
  _1 = std::__miter_base<free_type*> (__last);
  _2 = std::__miter_base<free_type*> (__first);
  D.253207 = std::__copy_move_a<false, free_type*, free_type*> (_2, _1, __result);
  D.253205 = D.253207;

  <bb 3> :
<L0>:
  return D.253205;

}



;; Function std::__miter_base<free_type*> (_ZSt12__miter_baseIP9free_typeET_S2_, funcdef_no=9468, decl_uid=225752, cgraph_uid=6100, symbol_order=6890)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__miter_base<free_type*> (struct free_type * __it)
{
  struct free_type * D.253208;

  <bb 2> :
  D.253208 = __it;

  <bb 3> :
<L0>:
  return D.253208;

}



;; Function std::__copy_move_a<false, free_type*, free_type*> (_ZSt13__copy_move_aILb0EP9free_typeS1_ET1_T0_S3_S2_, funcdef_no=9469, decl_uid=225754, cgraph_uid=6101, symbol_order=6891)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__copy_move_a<false, free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.253212;
  struct free_type * D.253210;

  <bb 2> :
  __result.944_1 = __result;
  _2 = std::__niter_base<free_type*> (__result.944_1);
  _3 = std::__niter_base<free_type*> (__last);
  _4 = std::__niter_base<free_type*> (__first);
  D.253212 = std::__copy_move_a1<false, free_type*, free_type*> (_4, _3, _2);
  _5 = D.253212;
  D.253210 = std::__niter_wrap<free_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.253210;

}



;; Function std::__niter_base<free_type*> (_ZSt12__niter_baseIP9free_typeET_S2_, funcdef_no=10136, decl_uid=225963, cgraph_uid=6768, symbol_order=7562)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__niter_base<free_type*> (struct free_type * __it)
{
  struct free_type * D.253213;

  <bb 2> :
  D.253213 = __it;

  <bb 3> :
<L0>:
  return D.253213;

}



;; Function std::__copy_move_a1<false, free_type*, free_type*> (_ZSt14__copy_move_a1ILb0EP9free_typeS1_ET1_T0_S3_S2_, funcdef_no=10137, decl_uid=236743, cgraph_uid=6769, symbol_order=7563)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__copy_move_a1<false, free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.253217;
  struct free_type * D.253215;

  <bb 2> :
  D.253217 = std::__copy_move_a2<false, free_type*, free_type*> (__first, __last, __result);
  D.253215 = D.253217;

  <bb 3> :
<L0>:
  return D.253215;

}



;; Function std::__copy_move_a2<false, free_type*, free_type*> (_ZSt14__copy_move_a2ILb0EP9free_typeS1_ET1_T0_S3_S2_, funcdef_no=10636, decl_uid=242431, cgraph_uid=7268, symbol_order=8062)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__copy_move_a2<false, free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.253218;

  <bb 2> :
  D.253218 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<free_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.253218;

}



;; Function std::__niter_wrap<free_type*> (_ZSt12__niter_wrapIP9free_typeET_RKS2_S2_, funcdef_no=10138, decl_uid=236747, cgraph_uid=6770, symbol_order=7564)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__niter_wrap<free_type*> (struct free_type * const & D.242435, struct free_type * __res)
{
  struct free_type * D.253220;

  <bb 2> :
  D.253220 = __res;

  <bb 3> :
<L0>:
  return D.253220;

}



;; Function std::__uninitialized_copy_a<free_type*, free_type*, free_type> (_ZSt22__uninitialized_copy_aIP9free_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8668, decl_uid=214254, cgraph_uid=5300, symbol_order=6090)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__uninitialized_copy_a<free_type*, free_type*, free_type> (struct free_type * __first, struct free_type * __last, struct free_type * __result, struct allocator & D.225761)
{
  struct free_type * D.253224;
  struct free_type * D.253222;

  <bb 2> :
  D.253224 = std::uninitialized_copy<free_type*, free_type*> (__first, __last, __result);
  D.253222 = D.253224;

  <bb 3> :
<L0>:
  return D.253222;

}



;; Function std::uninitialized_copy<free_type*, free_type*> (_ZSt18uninitialized_copyIP9free_typeS1_ET0_T_S3_S2_, funcdef_no=9470, decl_uid=225763, cgraph_uid=6102, symbol_order=6892)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::uninitialized_copy<free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.253227;
  const bool __assignable;
  struct free_type * D.253225;

  <bb 2> :
  __assignable = 1;
  D.253227 = std::__uninitialized_copy<false>::__uninit_copy<free_type*, free_type*> (__first, __last, __result);
  D.253225 = D.253227;

  <bb 3> :
<L0>:
  return D.253225;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<free_type*, free_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP9free_typeS3_EET0_T_S5_S4_, funcdef_no=10139, decl_uid=236781, cgraph_uid=6771, symbol_order=7565)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct free_type * std::__uninitialized_copy<false>::__uninit_copy<free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * __cur;
  struct free_type * D.253228;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<free_type> (__cur);
  std::_Construct<free_type, free_type&> (_1, __first);
  __first = __first + 24;
  __cur = __cur + 24;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.253228 = __cur;

  <bb 6> :
<L3>:
  return D.253228;

}



;; Function std::_Construct<free_type, free_type&> (_ZSt10_ConstructI9free_typeJRS0_EEvPT_DpOT0_, funcdef_no=10637, decl_uid=242443, cgraph_uid=7269, symbol_order=8063)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<free_type, free_type&> (struct free_type * __p, struct free_type & __args#0)
{
  void * D.245797;
  void * D.245796;
  const struct free_type * D.245798;

  <bb 2> :
  D.245798 = std::forward<free_type&> (__args#0);
  D.245796 = __p;
  D.245797 = operator new (24, D.245796);
  MEM[(struct free_type *)D.245797] = *D.245798;
  return;

}



;; Function std::forward<free_type&> (_ZSt7forwardIR9free_typeEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=10881, decl_uid=245794, cgraph_uid=7513, symbol_order=8309)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct free_type & std::forward<free_type&> (struct type & __t)
{
  struct free_type & D.253230;

  <bb 2> :
  D.253230 = __t;

  <bb 3> :
<L0>:
  return D.253230;

}



;; Function free_type::free_type (_ZN9free_typeC2Ev, funcdef_no=6376, decl_uid=195235, cgraph_uid=3351, symbol_order=4128)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void free_type::free_type (struct free_type * const this)
{
  <bb 2> :
  this->Looserulesfree = 0;
  return;

}



;; Function std::vector<free_type>::push_back (_ZNSt6vectorI9free_typeSaIS0_EE9push_backERKS0_, funcdef_no=7744, decl_uid=173171, cgraph_uid=4377, symbol_order=5163)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<free_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.253235;

  <bb 2> :
  _1 = this->D.173491._M_impl.D.172836._M_finish;
  _2 = this->D.173491._M_impl.D.172836._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.173491._M_impl.D.172836._M_finish;
  _4 = &this->D.173491._M_impl;
  std::allocator_traits<std::allocator<free_type> >::construct<free_type, const free_type&> (_4, _3, __x);
  _5 = this->D.173491._M_impl.D.172836._M_finish;
  _6 = _5 + 24;
  this->D.173491._M_impl.D.172836._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.253235 = std::vector<free_type>::end (this);
  std::vector<free_type>::_M_realloc_insert<const free_type&> (this, D.253235, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<free_type> >::construct<free_type, const free_type&> (_ZNSt16allocator_traitsISaI9free_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8669, decl_uid=214266, cgraph_uid=5301, symbol_order=6091)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<free_type> >::construct<free_type, const free_type&> (struct allocator_type & __a, struct free_type * __p, const struct free_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const free_type&> (__args#0);
  __gnu_cxx::new_allocator<free_type>::construct<free_type, const free_type&> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::construct<free_type, const free_type&> (_ZN9__gnu_cxx13new_allocatorI9free_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9472, decl_uid=225780, cgraph_uid=6104, symbol_order=6894)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::construct<free_type, const free_type&> (struct new_allocator * const this, struct free_type * __p, const struct free_type & __args#0)
{
  void * D.236793;
  void * D.236792;
  const struct free_type * D.236794;

  <bb 2> :
  D.236794 = std::forward<const free_type&> (__args#0);
  D.236792 = __p;
  D.236793 = operator new (24, D.236792);
  MEM[(struct free_type *)D.236793] = *D.236794;
  return;

}



;; Function std::vector<free_type>::_M_realloc_insert<const free_type&> (_ZNSt6vectorI9free_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8670, decl_uid=214435, cgraph_uid=5305, symbol_order=6095)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<free_type>::_M_realloc_insert<const free_type&> (struct vector * const this, struct iterator __position, const struct free_type & __args#0)
{
  struct free_type * D.253240;
  const size_type D.253239;
  struct free_type * __new_finish;
  struct free_type * __new_start;
  const size_type __elems_before;
  struct free_type * __old_finish;
  struct free_type * __old_start;
  const size_type __len;
  struct iterator D.225791;

  <bb 2> :
  D.253239 = std::vector<free_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.253239;
  __old_start = this->D.173491._M_impl.D.172836._M_start;
  __old_finish = this->D.173491._M_impl.D.172836._M_finish;
  D.225791 = std::vector<free_type>::begin (this);
  _1 = __gnu_cxx::operator-<free_type*, std::vector<free_type> > (&__position, &D.225791);
  __elems_before = (const size_type) _1;
  D.225791 = {CLOBBER};
  _2 = &this->D.173491;
  D.253240 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_allocate (_2, __len);
  __new_start = D.253240;
  __new_finish = __new_start;
  _3 = std::forward<const free_type&> (__args#0);
  _4 = __elems_before * 24;
  _5 = __new_start + _4;
  _6 = &this->D.173491._M_impl;
  std::allocator_traits<std::allocator<free_type> >::construct<free_type, const free_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.173491;
  _8 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<free_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 24;
  _11 = &this->D.173491;
  _12 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<free_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.173491;
  _23 = this->D.173491._M_impl.D.172836._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 24;
  _26 = (long unsigned int) _25;
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.173491._M_impl.D.172836._M_start = __new_start;
  this->D.173491._M_impl.D.172836._M_finish = __new_finish;
  _27 = __len * 24;
  _28 = __new_start + _27;
  this->D.173491._M_impl.D.172836._M_end_of_storage = _28;
  return;

}



;; Function std::vector<free_type>::_M_check_len (_ZNKSt6vectorI9free_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9473, decl_uid=173340, cgraph_uid=6105, symbol_order=6895)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<free_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.947;
  size_type D.253244;
  const long unsigned int D.236799;
  bool retval.945;

  <bb 2> :
  _1 = std::vector<free_type>::max_size (this);
  _2 = std::vector<free_type>::size (this);
  _3 = _1 - _2;
  __n.946_4 = __n;
  retval.945 = _3 < __n.946_4;
  if (retval.945 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<free_type>::size (this);
  _6 = std::vector<free_type>::size (this);
  D.236799 = _6;
  _7 = std::max<long unsigned int> (&D.236799, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.236799 = {CLOBBER};
  _9 = std::vector<free_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<free_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.947 = std::vector<free_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.947 = __len;

  <bb 8> :
  D.253244 = iftmp.947;

  <bb 9> :
<L6>:
  return D.253244;

}



;; Function std::vector<free_type>::max_size (_ZNKSt6vectorI9free_typeSaIS0_EE8max_sizeEv, funcdef_no=10140, decl_uid=173126, cgraph_uid=6772, symbol_order=7566)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<free_type>::max_size (const struct vector * const this)
{
  size_type D.253251;

  <bb 2> :
  _1 = &this->D.173491;
  _2 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_1);
  D.253251 = std::vector<free_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.253251;

}



;; Function std::vector<free_type>::_S_max_size (_ZNSt6vectorI9free_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10638, decl_uid=173347, cgraph_uid=7270, symbol_order=8064)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<free_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.253253;

  <bb 2> :
  __diffmax = 384307168202282325;
  _1 = std::allocator_traits<std::allocator<free_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.253253 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253253;

}



;; Function std::allocator_traits<std::allocator<free_type> >::max_size (_ZNSt16allocator_traitsISaI9free_typeEE8max_sizeERKS1_, funcdef_no=10882, decl_uid=172661, cgraph_uid=7514, symbol_order=8310)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<free_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.253256;

  <bb 2> :
  D.253256 = __gnu_cxx::new_allocator<free_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.253256;

}



;; Function __gnu_cxx::new_allocator<free_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI9free_typeE8max_sizeEv, funcdef_no=10989, decl_uid=172503, cgraph_uid=7621, symbol_order=8417)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<free_type>::max_size (const struct new_allocator * const this)
{
  size_type D.253258;

  <bb 2> :
  D.253258 = __gnu_cxx::new_allocator<free_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.253258;

}



;; Function __gnu_cxx::operator-<free_type*, std::vector<free_type> > (_ZN9__gnu_cxxmiIP9free_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9474, decl_uid=225792, cgraph_uid=6106, symbol_order=6896)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<free_type*, std::vector<free_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.253260;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.253260 = _5 /[ex] 24;

  <bb 3> :
<L0>:
  return D.253260;

}



;; Function std::vector<free_type>::_S_relocate (_ZNSt6vectorI9free_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9475, decl_uid=172998, cgraph_uid=6107, symbol_order=6897)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::vector<free_type>::_S_relocate (struct free_type * __first, struct free_type * __last, struct free_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.253263;
  struct free_type * D.253262;

  <bb 2> :
  D.253262 = std::vector<free_type>::_S_do_relocate (__first, __last, __result, __alloc, D.253263);

  <bb 3> :
<L0>:
  return D.253262;

}



;; Function std::vector<free_type>::_S_do_relocate (_ZNSt6vectorI9free_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10141, decl_uid=172986, cgraph_uid=6773, symbol_order=7567)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::vector<free_type>::_S_do_relocate (struct free_type * __first, struct free_type * __last, struct free_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.242455)
{
  struct free_type * D.253265;

  <bb 2> :
  D.253265 = std::__relocate_a<free_type*, free_type*, std::allocator<free_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.253265;

}



;; Function std::__relocate_a<free_type*, free_type*, std::allocator<free_type> > (_ZSt12__relocate_aIP9free_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10639, decl_uid=225957, cgraph_uid=7271, symbol_order=8065)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__relocate_a<free_type*, free_type*, std::allocator<free_type> > (struct free_type * __first, struct free_type * __last, struct free_type * __result, struct allocator & __alloc)
{
  struct free_type * D.253267;

  <bb 2> :
  _1 = std::__niter_base<free_type*> (__result);
  _2 = std::__niter_base<free_type*> (__last);
  _3 = std::__niter_base<free_type*> (__first);
  D.253267 = std::__relocate_a_1<free_type*, free_type*, std::allocator<free_type> > (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.253267;

}



;; Function std::__relocate_a_1<free_type*, free_type*, std::allocator<free_type> > (_ZSt14__relocate_a_1IP9free_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10883, decl_uid=226108, cgraph_uid=7515, symbol_order=8311)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct free_type * std::__relocate_a_1<free_type*, free_type*, std::allocator<free_type> > (struct free_type * __first, struct free_type * __last, struct free_type * __result, struct allocator & __alloc)
{
  struct free_type * __cur;
  struct free_type * D.253269;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<free_type> (__first);
  _2 = std::__addressof<free_type> (__cur);
  std::__relocate_object_a<free_type, free_type, std::allocator<free_type> > (_2, _1, __alloc);
  __first = __first + 24;
  __cur = __cur + 24;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.253269 = __cur;

  <bb 6> :
<L3>:
  return D.253269;

}



;; Function std::__relocate_object_a<free_type, free_type, std::allocator<free_type> > (_ZSt19__relocate_object_aI9free_typeS0_SaIS0_EEvPT_PT0_RT1_, funcdef_no=10990, decl_uid=226137, cgraph_uid=7622, symbol_order=8418)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__relocate_object_a<free_type, free_type, std::allocator<free_type> > (struct free_type * restrict __dest, struct free_type * restrict __orig, struct allocator & __alloc)
{
  <bb 2> :
  _1 = std::move<free_type&> (__orig);
  std::allocator_traits<std::allocator<free_type> >::construct<free_type, free_type> (__alloc, __dest, _1);
  _2 = std::__addressof<free_type> (__orig);
  std::allocator_traits<std::allocator<free_type> >::destroy<free_type> (__alloc, _2);
  return;

}



;; Function std::move<free_type&> (_ZSt4moveIR9free_typeEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=11038, decl_uid=226149, cgraph_uid=7670, symbol_order=8466)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<free_type&> (struct free_type & __t)
{
  struct type & D.253271;

  <bb 2> :
  D.253271 = __t;

  <bb 3> :
<L0>:
  return D.253271;

}



;; Function std::allocator_traits<std::allocator<free_type> >::construct<free_type, free_type> (_ZNSt16allocator_traitsISaI9free_typeEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_, funcdef_no=11039, decl_uid=226151, cgraph_uid=7671, symbol_order=8467)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<free_type> >::construct<free_type, free_type> (struct allocator_type & __a, struct free_type * __p, struct free_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<free_type> (__args#0);
  __gnu_cxx::new_allocator<free_type>::construct<free_type, free_type> (__a, __p, _1);
  return;

}



;; Function std::forward<free_type> (_ZSt7forwardI9free_typeEOT_RNSt16remove_referenceIS1_E4typeE, funcdef_no=11060, decl_uid=247744, cgraph_uid=7692, symbol_order=8488)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct free_type & std::forward<free_type> (struct type & __t)
{
  struct free_type & D.253273;

  <bb 2> :
  D.253273 = __t;

  <bb 3> :
<L0>:
  return D.253273;

}



;; Function __gnu_cxx::new_allocator<free_type>::construct<free_type, free_type> (_ZN9__gnu_cxx13new_allocatorI9free_typeE9constructIS1_JS1_EEEvPT_DpOT0_, funcdef_no=11061, decl_uid=247746, cgraph_uid=7693, symbol_order=8489)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::construct<free_type, free_type> (struct new_allocator * const this, struct free_type * __p, struct free_type & __args#0)
{
  void * D.248174;
  void * D.248173;
  struct free_type * D.248175;

  <bb 2> :
  D.248175 = std::forward<free_type> (__args#0);
  D.248173 = __p;
  D.248174 = operator new (24, D.248173);
  MEM[(struct free_type *)D.248174] = *D.248175;
  return;

}



;; Function std::allocator_traits<std::allocator<free_type> >::destroy<free_type> (_ZNSt16allocator_traitsISaI9free_typeEE7destroyIS0_EEvRS1_PT_, funcdef_no=9477, decl_uid=226166, cgraph_uid=6109, symbol_order=6899)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<free_type> >::destroy<free_type> (struct allocator_type & __a, struct free_type * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<free_type>::destroy<free_type> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::destroy<free_type> (_ZN9__gnu_cxx13new_allocatorI9free_typeE7destroyIS1_EEvPT_, funcdef_no=10142, decl_uid=236814, cgraph_uid=6774, symbol_order=7568)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::destroy<free_type> (struct new_allocator * const this, struct free_type * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_free_array>::put (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7746, decl_uid=192441, cgraph_uid=4378, symbol_order=5164)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_free_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_free_array & v)
{
  bool D.253282;
  struct hash_entry * D.253281;
  unsigned int D.253280;
  bool ins;
  struct hash_entry * e;
  bool D.253278;
  void * D.214445;
  void * D.214444;

  <bb 2> :
  _1 = &this->m_table;
  D.253280 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::hash (k);
  _2 = D.253280;
  D.253281 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.253281;
  D.253282 = hash_map<tree_node*, function_free_array>::hash_entry::is_empty (e);
  ins = D.253282;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.214444 = &e->m_value;
  D.214445 = operator new (24, D.214444);
  function_free_array::function_free_array (D.214445, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_free_array::operator= (_4, v);

  <bb 5> :
  D.253278 = ~ins;

  <bb 6> :
<L3>:
  return D.253278;

  <bb 7> :
<L4>:
  operator delete (D.214445, D.214444);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8674, decl_uid=192599, cgraph_uid=5306, symbol_order=6096)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.253333;
  bool D.253332;
  bool D.253331;
  bool D.253330;
  bool D.253329;
  bool D.253328;
  struct value_type * D.253327;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.953;
  bool retval.952;
  bool retval.951;
  bool retval.950;
  bool retval.949;
  bool retval.948;
  struct value_type * D.253289;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 32;
  entry = _11 + _13;
  size = this->m_size;
  D.253328 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.948 = D.253328;
  if (retval.948 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.253329 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.949 = D.253329;
  if (retval.949 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 32;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.253330 = hash_map<tree_node*, function_free_array>::hash_entry::equal (entry, comparable);
  retval.950 = D.253330;
  if (retval.950 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  D.253289 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 32;
  entry = _24 + _26;
  D.253331 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.951 = D.253331;
  if (retval.951 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.253332 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.952 = D.253332;
  if (retval.952 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 32;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.253333 = hash_map<tree_node*, function_free_array>::hash_entry::equal (entry, comparable);
  retval.953 = D.253333;
  if (retval.953 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 32;
  D.253289 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.253289 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.253289 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 32;
  D.253289 = _37 + _39;

  <bb 27> :
<L37>:
  return D.253289;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9478, decl_uid=192680, cgraph_uid=6122, symbol_order=6912)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.253364;
  unsigned int D.253363;
  bool D.253362;
  bool D.253361;
  struct mem_alloc_description & D.253360;
  struct value_type * D.253359;
  unsigned int D.253358;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.236837;
  void * D.236836;
  struct hash_entry & D.236874;
  bool iftmp.957;
  bool retval.956;
  bool iftmp.955;
  bool retval.954;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 32;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.955 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.955 = 0;

  <bb 6> :
  retval.954 = iftmp.955;
  if (retval.954 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.253358 = hash_table_higher_prime_index (_5);
  nindex = D.253358;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.253359 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.253359;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.253361 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.253361;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.253362 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.253362;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.957 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.957 = 0;

  <bb 15> :
  retval.956 = iftmp.957;
  if (retval.956 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.253363 = hash_map<tree_node*, function_free_array>::hash_entry::hash (x);
  _16 = D.253363;
  D.253364 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.253364;
  D.236874 = std::move<hash_map<tree_node*, function_free_array>::hash_entry&> (x);
  D.236836 = q;
  D.236837 = operator new (32, D.236836);
  hash_map<tree_node*, function_free_array>::hash_entry::hash_entry (D.236837, D.236874);

  <bb 17> :
  p = p + 32;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10143, decl_uid=192575, cgraph_uid=6775, symbol_order=7569)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.253365;

  <bb 2> :
  D.253365 = this->m_size;

  <bb 3> :
<L0>:
  return D.253365;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10144, decl_uid=192577, cgraph_uid=6776, symbol_order=7570)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.253367;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.253367 = _1 - _2;

  <bb 3> :
<L0>:
  return D.253367;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10145, decl_uid=192677, cgraph_uid=6777, symbol_order=7571)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.958;
  bool D.253369;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.958 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.958 = 0;

  <bb 6> :
  D.253369 = iftmp.958;

  <bb 7> :
<L4>:
  return D.253369;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9352, decl_uid=192667, cgraph_uid=5984, symbol_order=6774)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.253391;
  struct value_type * D.253390;
  struct mem_alloc_description & D.253389;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.253387;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.253390 = xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_alloc (n);
  nentries = D.253390;
  goto <bb 6>; [INV]

  <bb 5> :
  D.253391 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_free_array>::hash_entry> (n);
  nentries = D.253391;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.253387 = nentries;

  <bb 9> :
<L14>:
  return D.253387;

}



;; Function xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10053, decl_uid=218489, cgraph_uid=6685, symbol_order=7479)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.253394;
  struct hash_entry * D.253392;

  <bb 2> :
  D.253394 = xcalloc (count, 32);
  D.253392 = D.253394;

  <bb 3> :
<L0>:
  return D.253392;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_free_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10054, decl_uid=235459, cgraph_uid=6686, symbol_order=7480)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_free_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.253401;
  struct hash_entry * D.253400;
  struct hash_entry * D.253398;
  bool retval.959;

  <bb 2> :
  retval.959 = need_finalization_p<hash_map<tree_node*, function_free_array>::hash_entry> ();
  if (retval.959 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 32;
  D.253400 = ggc_internal_cleared_alloc (_1, finalize, 32, c);
  D.253398 = D.253400;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 32;
  D.253401 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.253398 = D.253401;

  <bb 5> :
<L2>:
  return D.253398;

}



;; Function finalize<hash_map<tree_node*, function_free_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10572, decl_uid=242069, cgraph_uid=7207, symbol_order=8001)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_free_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_free_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10574, decl_uid=245517, cgraph_uid=7205, symbol_order=7999)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_free_array::~function_free_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_free_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10571, decl_uid=242068, cgraph_uid=7203, symbol_order=7997)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_free_array>::hash_entry> ()
{
  bool D.253402;

  <bb 2> :
  D.253402 = 1;

  <bb 3> :
<L0>:
  return D.253402;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10147, decl_uid=192500, cgraph_uid=6779, symbol_order=7573)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_free_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.253406;
  hashval_t D.253404;

  <bb 2> :
  _1 = &e->m_key;
  D.253406 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::hash (_1);
  D.253404 = D.253406;

  <bb 3> :
<L0>:
  return D.253404;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10146, decl_uid=192670, cgraph_uid=6778, symbol_order=7572)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.253419;
  bool D.253418;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.961;
  struct value_type * D.253410;
  bool retval.960;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 32;
  slot = _2 + _4;
  D.253418 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.960 = D.253418;
  if (retval.960 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.253410 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 32;
  slot = _8 + _10;
  D.253419 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.961 = D.253419;
  if (retval.961 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.253410 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.253410;

}



;; Function std::move<hash_map<tree_node*, function_free_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10148, decl_uid=236834, cgraph_uid=6780, symbol_order=7574)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_free_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.253420;

  <bb 2> :
  D.253420 = __t;

  <bb 3> :
<L0>:
  return D.253420;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9489, decl_uid=236859, cgraph_uid=6120, symbol_order=6910)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.236861)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.236861->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.236861->m_value;
  function_free_array::function_free_array (_2, _3);
  return;

}



;; Function function_free_array::function_free_array (_ZN19function_free_arrayC2EOS_, funcdef_no=9487, decl_uid=192792, cgraph_uid=6117, symbol_order=6907)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_free_array::function_free_array (struct function_free_array * const this, struct function_free_array & D.192794)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->free_type_array;
  _2 = &D.192794->free_type_array;
  std::vector<free_type>::vector (_1, _2);
  return;

}



;; Function std::vector<free_type>::vector (_ZNSt6vectorI9free_typeSaIS0_EEC2EOS2_, funcdef_no=9485, decl_uid=173448, cgraph_uid=6114, symbol_order=6904)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<free_type>::vector (struct vector * const this, struct vector & D.173450)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.173491;
  _2 = &D.173450->D.173491;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_ZNSt12_Vector_baseI9free_typeSaIS0_EEC2EOS2_, funcdef_no=9483, decl_uid=172916, cgraph_uid=6111, symbol_order=6901)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.172918)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.172918->_M_impl;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI9free_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10150, decl_uid=172822, cgraph_uid=6782, symbol_order=7576)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl&> (__x);
  std::allocator<free_type>::allocator (this, _1);
  _2 = &this->D.172836;
  _3 = std::move<std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.172836;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI9free_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10640, decl_uid=242485, cgraph_uid=7272, symbol_order=8066)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.253422;

  <bb 2> :
  D.253422 = __t;

  <bb 3> :
<L0>:
  return D.253422;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI9free_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10642, decl_uid=172778, cgraph_uid=7274, symbol_order=8068)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8979, decl_uid=218491, cgraph_uid=5611, symbol_order=6401)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9491, decl_uid=192688, cgraph_uid=6123, symbol_order=6913)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_free_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10152, decl_uid=192512, cgraph_uid=6784, symbol_order=7578)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::mark_empty<hash_map<tree_node*, function_free_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::mark_empty<hash_map<tree_node*, function_free_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10644, decl_uid=242500, cgraph_uid=7276, symbol_order=8070)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::mark_empty<hash_map<tree_node*, function_free_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function function_pthread_detched_array::function_pthread_detched_array (_ZN30function_pthread_detched_arrayC2Ev, funcdef_no=6389, decl_uid=193647, cgraph_uid=3364, symbol_order=4141)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_detched_array::function_pthread_detched_array (struct function_pthread_detched_array * const this)
{
  <bb 2> :
  _1 = &this->pthread_detched_array;
  std::vector<pthread_detched_type>::vector (_1);
  return;

}



;; Function std::vector<pthread_detched_type>::vector (_ZNSt6vectorI20pthread_detched_typeSaIS0_EEC2Ev, funcdef_no=6387, decl_uid=177705, cgraph_uid=3361, symbol_order=4138)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_detched_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.177713;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EEC2Ev, funcdef_no=6385, decl_uid=177163, cgraph_uid=3358, symbol_order=4135)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7748, decl_uid=177055, cgraph_uid=4380, symbol_order=5166)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<pthread_detched_type>::allocator (this);
  _1 = &this->D.177058;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<pthread_detched_type>::allocator (_ZNSaI20pthread_detched_typeEC2Ev, funcdef_no=8677, decl_uid=176833, cgraph_uid=5309, symbol_order=6099)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_detched_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeEC2Ev, funcdef_no=9493, decl_uid=176762, cgraph_uid=6125, symbol_order=6915)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function function_pthread_detched_array::operator= (_ZN30function_pthread_detched_arrayaSERKS_, funcdef_no=6391, decl_uid=195439, cgraph_uid=3366, symbol_order=4143)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_pthread_detched_array & function_pthread_detched_array::operator= (struct function_pthread_detched_array * const this, const struct function_pthread_detched_array & D.195440)
{
  struct function_pthread_detched_array & D.253425;

  <bb 2> :
  _1 = &D.195440->pthread_detched_array;
  _2 = &this->pthread_detched_array;
  std::vector<pthread_detched_type>::operator= (_2, _1);
  D.253425 = this;

  <bb 3> :
<L0>:
  return D.253425;

}



;; Function std::vector<pthread_detched_type>::operator= (_ZNSt6vectorI20pthread_detched_typeSaIS0_EEaSERKS2_, funcdef_no=7756, decl_uid=177291, cgraph_uid=4390, symbol_order=5176)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<pthread_detched_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct pthread_detched_type * D.253460;
  struct pthread_detched_type * __tmp;
  const size_type __xlen;
  struct vector & D.253458;
  struct __normal_iterator D.253455;
  struct __normal_iterator D.253454;
  struct __normal_iterator D.253453;
  struct __normal_iterator D.253452;
  struct __normal_iterator D.253451;
  bool retval.966;
  struct __normal_iterator D.253446;
  struct __normal_iterator D.253445;
  bool retval.965;
  bool iftmp.964;
  bool retval.963;
  bool retval.962;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.962 = __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_propagate_on_copy_assign ();
  if (retval.962 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.177713;
  _4 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.177713;
  _6 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.964 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.964 = 0;

  <bb 8> :
  retval.963 = iftmp.964;
  if (retval.963 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<pthread_detched_type>::clear (this);
  _8 = &this->D.177713;
  _9 = this->D.177713._M_impl.D.177058._M_end_of_storage;
  _10 = this->D.177713._M_impl.D.177058._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 16;
  _13 = (long unsigned int) _12;
  _14 = this->D.177713._M_impl.D.177058._M_start;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (_8, _14, _13);
  this->D.177713._M_impl.D.177058._M_start = 0B;
  this->D.177713._M_impl.D.177058._M_finish = 0B;
  this->D.177713._M_impl.D.177058._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.177713;
  _16 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.177713;
  _18 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<pthread_detched_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<pthread_detched_type>::size (__x);
  _19 = std::vector<pthread_detched_type>::capacity (this);
  retval.965 = __xlen > _19;
  if (retval.965 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.253445 = std::vector<pthread_detched_type>::end (__x);
  D.253446 = std::vector<pthread_detched_type>::begin (__x);
  D.253460 = std::vector<pthread_detched_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (this, __xlen, D.253446, D.253445);
  __tmp = D.253460;
  _20 = &this->D.177713;
  _21 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.177713._M_impl.D.177058._M_finish;
  _23 = this->D.177713._M_impl.D.177058._M_start;
  std::_Destroy<pthread_detched_type*, pthread_detched_type> (_23, _22, _21);
  _24 = &this->D.177713;
  _25 = this->D.177713._M_impl.D.177058._M_end_of_storage;
  _26 = this->D.177713._M_impl.D.177058._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 16;
  _29 = (long unsigned int) _28;
  _30 = this->D.177713._M_impl.D.177058._M_start;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (_24, _30, _29);
  this->D.177713._M_impl.D.177058._M_start = __tmp;
  _31 = this->D.177713._M_impl.D.177058._M_start;
  _32 = __xlen * 16;
  _33 = _31 + _32;
  this->D.177713._M_impl.D.177058._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<pthread_detched_type>::size (this);
  retval.966 = __xlen <= _34;
  if (retval.966 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.177713;
  _36 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_35);
  D.253451 = std::vector<pthread_detched_type>::end (this);
  D.253452 = std::vector<pthread_detched_type>::begin (this);
  D.253453 = std::vector<pthread_detched_type>::end (__x);
  D.253454 = std::vector<pthread_detched_type>::begin (__x);
  D.253455 = std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (D.253454, D.253453, D.253452);
  std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type> (D.253455, D.253451, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.177713._M_impl.D.177058._M_start;
  _38 = __x->D.177713._M_impl.D.177058._M_start;
  _39 = std::vector<pthread_detched_type>::size (this);
  _40 = _39 * 16;
  _41 = _38 + _40;
  _42 = __x->D.177713._M_impl.D.177058._M_start;
  std::copy<pthread_detched_type*, pthread_detched_type*> (_42, _41, _37);
  _43 = &this->D.177713;
  _44 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.177713._M_impl.D.177058._M_finish;
  _46 = __x->D.177713._M_impl.D.177058._M_finish;
  _47 = __x->D.177713._M_impl.D.177058._M_start;
  _48 = std::vector<pthread_detched_type>::size (this);
  _49 = _48 * 16;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<pthread_detched_type*, pthread_detched_type*, pthread_detched_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.177713._M_impl.D.177058._M_start;
  _52 = __xlen * 16;
  _53 = _51 + _52;
  this->D.177713._M_impl.D.177058._M_finish = _53;

  <bb 17> :
  D.253458 = this;

  <bb 18> :
<L19>:
  return D.253458;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI20pthread_detched_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7757, decl_uid=176925, cgraph_uid=4388, symbol_order=5174)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_propagate_on_copy_assign ()
{
  bool D.253461;

  <bb 2> :
  D.253461 = 0;

  <bb 3> :
<L0>:
  return D.253461;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI20pthread_detched_typeES1_E15_S_always_equalEv, funcdef_no=7758, decl_uid=176928, cgraph_uid=4389, symbol_order=5175)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_always_equal ()
{
  bool D.253463;

  <bb 2> :
  D.253463 = 1;

  <bb 3> :
<L0>:
  return D.253463;

}



;; Function std::operator!= (_ZStneRKSaI20pthread_detched_typeES2_, funcdef_no=8686, decl_uid=176811, cgraph_uid=5318, symbol_order=6108)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.226380, const struct allocator & D.226381)
{
  bool D.253465;

  <bb 2> :
  D.253465 = 0;

  <bb 3> :
<L0>:
  return D.253465;

}



;; Function std::vector<pthread_detched_type>::clear (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE5clearEv, funcdef_no=8687, decl_uid=177443, cgraph_uid=5319, symbol_order=6109)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_detched_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.177713._M_impl.D.177058._M_start;
  std::vector<pthread_detched_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<pthread_detched_type>::_M_erase_at_end (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9496, decl_uid=177571, cgraph_uid=6128, symbol_order=6918)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<pthread_detched_type>::_M_erase_at_end (struct vector * const this, struct pthread_detched_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.177713._M_impl.D.177058._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 16;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.177713;
  _5 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.177713._M_impl.D.177058._M_finish;
  std::_Destroy<pthread_detched_type*, pthread_detched_type> (__pos, _6, _5);
  this->D.177713._M_impl.D.177058._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<pthread_detched_type> > (_ZSt15__alloc_on_copyISaI20pthread_detched_typeEEvRT_RKS2_, funcdef_no=8688, decl_uid=214486, cgraph_uid=5320, symbol_order=6110)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<pthread_detched_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<pthread_detched_type>::capacity (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE8capacityEv, funcdef_no=8689, decl_uid=177359, cgraph_uid=5321, symbol_order=6111)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_detched_type>::capacity (const struct vector * const this)
{
  size_type D.253470;

  <bb 2> :
  _1 = this->D.177713._M_impl.D.177058._M_end_of_storage;
  _2 = this->D.177713._M_impl.D.177058._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.253470 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.253470;

}



;; Function std::vector<pthread_detched_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8690, decl_uid=214493, cgraph_uid=5322, symbol_order=6112)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct pthread_detched_type * std::vector<pthread_detched_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct pthread_detched_type * D.253474;
  struct pthread_detched_type * __result;
  struct pthread_detched_type * D.253472;

  <bb 2> :
  _1 = &this->D.177713;
  D.253474 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_allocate (_1, __n);
  __result = D.253474;
  _2 = &this->D.177713;
  _3 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*, pthread_detched_type> (__first, __last, __result, _3);

  <bb 3> :
  D.253472 = __result;

  <bb 4> :
<L0>:
  return D.253472;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.177713;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<pthread_detched_type>::end (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE3endEv, funcdef_no=8693, decl_uid=177326, cgraph_uid=5325, symbol_order=6115)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<pthread_detched_type>::end (struct vector * const this)
{
  struct iterator D.226467;
  struct iterator D.253478;

  <bb 2> :
  _1 = &this->D.177713._M_impl.D.177058._M_finish;
  __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (&D.226467, _1);
  D.253478 = D.226467;
  D.226467 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253478;

}



;; Function __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9499, decl_uid=214575, cgraph_uid=6131, symbol_order=6921)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (struct __normal_iterator * const this, struct pthread_detched_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<pthread_detched_type>::begin (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE5beginEv, funcdef_no=8691, decl_uid=177322, cgraph_uid=5323, symbol_order=6113)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<pthread_detched_type>::begin (struct vector * const this)
{
  struct iterator D.226421;
  struct iterator D.253481;

  <bb 2> :
  _1 = &this->D.177713._M_impl.D.177058._M_start;
  __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (&D.226421, _1);
  D.253481 = D.226421;
  D.226421 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253481;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8692, decl_uid=214594, cgraph_uid=5324, symbol_order=6114)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.253486;
  struct __normal_iterator D.253485;
  struct __normal_iterator D.253484;

  <bb 2> :
  D.253485 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (__last);
  D.253486 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (__first);
  D.253484 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (D.253486, D.253485, __result);

  <bb 3> :
<L0>:
  return D.253484;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9502, decl_uid=226439, cgraph_uid=6135, symbol_order=6925)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct pthread_detched_type * D.253490;
  struct __normal_iterator D.253488;

  <bb 2> :
  _1 = std::__niter_base<pthread_detched_type*, std::vector<pthread_detched_type> > (__result);
  _2 = std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (__last);
  _3 = std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (__first);
  D.253490 = std::__copy_move_a1<false, const pthread_detched_type*, pthread_detched_type*> (_3, _2, _1);
  _4 = D.253490;
  D.253488 = std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.253488;

}



;; Function std::__niter_base<pthread_detched_type*, std::vector<pthread_detched_type> > (_ZSt12__niter_baseIP20pthread_detched_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10156, decl_uid=237057, cgraph_uid=6788, symbol_order=7582)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__niter_base<pthread_detched_type*, std::vector<pthread_detched_type> > (struct __normal_iterator __it)
{
  struct pthread_detched_type * D.253491;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (&__it);
  D.253491 = *_1;

  <bb 3> :
<L0>:
  return D.253491;

}



;; Function __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9513, decl_uid=214562, cgraph_uid=6145, symbol_order=6935)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * const & __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (const struct __normal_iterator * const this)
{
  struct pthread_detched_type * const & D.253493;

  <bb 2> :
  D.253493 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.253493;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10158, decl_uid=237064, cgraph_uid=6790, symbol_order=7584)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (struct __normal_iterator __from, struct pthread_detched_type * __res)
{
  struct __normal_iterator D.253495;

  <bb 2> :
  _1 = std::__niter_base<pthread_detched_type*, std::vector<pthread_detched_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 16;
  D.253495 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.253495;

}



;; Function __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10649, decl_uid=214553, cgraph_uid=7281, symbol_order=8075)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct pthread_detched_type * const D.245849;
  struct __normal_iterator D.245850;
  struct __normal_iterator D.253497;

  <bb 2> :
  _1 = this->_M_current;
  __n.967_2 = (long unsigned int) __n;
  _3 = __n.967_2 * 16;
  _4 = _1 + _3;
  D.245849 = _4;
  __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (&D.245850, &D.245849);
  D.253497 = D.245850;
  D.245850 = {CLOBBER};
  D.245849 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.253497;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8694, decl_uid=214600, cgraph_uid=5326, symbol_order=6116)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.226470)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9504, decl_uid=226472, cgraph_uid=6136, symbol_order=6926)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10159, decl_uid=237088, cgraph_uid=6791, symbol_order=7585)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (struct __normal_iterator D.242525, struct __normal_iterator D.242526)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<pthread_detched_type*, pthread_detched_type*> (_ZSt4copyIP20pthread_detched_typeS1_ET0_T_S3_S2_, funcdef_no=8695, decl_uid=214608, cgraph_uid=5327, symbol_order=6117)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::copy<pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.253503;
  struct pthread_detched_type * D.253501;

  <bb 2> :
  _1 = std::__miter_base<pthread_detched_type*> (__last);
  _2 = std::__miter_base<pthread_detched_type*> (__first);
  D.253503 = std::__copy_move_a<false, pthread_detched_type*, pthread_detched_type*> (_2, _1, __result);
  D.253501 = D.253503;

  <bb 3> :
<L0>:
  return D.253501;

}



;; Function std::__miter_base<pthread_detched_type*> (_ZSt12__miter_baseIP20pthread_detched_typeET_S2_, funcdef_no=9505, decl_uid=226488, cgraph_uid=6137, symbol_order=6927)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__miter_base<pthread_detched_type*> (struct pthread_detched_type * __it)
{
  struct pthread_detched_type * D.253504;

  <bb 2> :
  D.253504 = __it;

  <bb 3> :
<L0>:
  return D.253504;

}



;; Function std::__copy_move_a<false, pthread_detched_type*, pthread_detched_type*> (_ZSt13__copy_move_aILb0EP20pthread_detched_typeS1_ET1_T0_S3_S2_, funcdef_no=9506, decl_uid=226490, cgraph_uid=6138, symbol_order=6928)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a<false, pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.253508;
  struct pthread_detched_type * D.253506;

  <bb 2> :
  __result.968_1 = __result;
  _2 = std::__niter_base<pthread_detched_type*> (__result.968_1);
  _3 = std::__niter_base<pthread_detched_type*> (__last);
  _4 = std::__niter_base<pthread_detched_type*> (__first);
  D.253508 = std::__copy_move_a1<false, pthread_detched_type*, pthread_detched_type*> (_4, _3, _2);
  _5 = D.253508;
  D.253506 = std::__niter_wrap<pthread_detched_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.253506;

}



;; Function std::__copy_move_a1<false, pthread_detched_type*, pthread_detched_type*> (_ZSt14__copy_move_a1ILb0EP20pthread_detched_typeS1_ET1_T0_S3_S2_, funcdef_no=10161, decl_uid=237099, cgraph_uid=6793, symbol_order=7587)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a1<false, pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.253511;
  struct pthread_detched_type * D.253509;

  <bb 2> :
  D.253511 = std::__copy_move_a2<false, pthread_detched_type*, pthread_detched_type*> (__first, __last, __result);
  D.253509 = D.253511;

  <bb 3> :
<L0>:
  return D.253509;

}



;; Function std::__copy_move_a2<false, pthread_detched_type*, pthread_detched_type*> (_ZSt14__copy_move_a2ILb0EP20pthread_detched_typeS1_ET1_T0_S3_S2_, funcdef_no=10650, decl_uid=242534, cgraph_uid=7282, symbol_order=8076)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a2<false, pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.253512;

  <bb 2> :
  D.253512 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_detched_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.253512;

}



;; Function std::__uninitialized_copy_a<pthread_detched_type*, pthread_detched_type*, pthread_detched_type> (_ZSt22__uninitialized_copy_aIP20pthread_detched_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8696, decl_uid=214612, cgraph_uid=5328, symbol_order=6118)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__uninitialized_copy_a<pthread_detched_type*, pthread_detched_type*, pthread_detched_type> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result, struct allocator & D.226497)
{
  struct pthread_detched_type * D.253516;
  struct pthread_detched_type * D.253514;

  <bb 2> :
  D.253516 = std::uninitialized_copy<pthread_detched_type*, pthread_detched_type*> (__first, __last, __result);
  D.253514 = D.253516;

  <bb 3> :
<L0>:
  return D.253514;

}



;; Function std::uninitialized_copy<pthread_detched_type*, pthread_detched_type*> (_ZSt18uninitialized_copyIP20pthread_detched_typeS1_ET0_T_S3_S2_, funcdef_no=9507, decl_uid=226499, cgraph_uid=6139, symbol_order=6929)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::uninitialized_copy<pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.253519;
  const bool __assignable;
  struct pthread_detched_type * D.253517;

  <bb 2> :
  __assignable = 1;
  D.253519 = std::__uninitialized_copy<true>::__uninit_copy<pthread_detched_type*, pthread_detched_type*> (__first, __last, __result);
  D.253517 = D.253519;

  <bb 3> :
<L0>:
  return D.253517;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<pthread_detched_type*, pthread_detched_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIP20pthread_detched_typeS3_EET0_T_S5_S4_, funcdef_no=10163, decl_uid=237137, cgraph_uid=6795, symbol_order=7589)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__uninitialized_copy<true>::__uninit_copy<pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.253522;
  struct pthread_detched_type * D.253520;

  <bb 2> :
  D.253522 = std::copy<pthread_detched_type*, pthread_detched_type*> (__first, __last, __result);
  D.253520 = D.253522;

  <bb 3> :
<L0>:
  return D.253520;

}



;; Function std::vector<pthread_detched_type>::push_back (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE9push_backERKS0_, funcdef_no=7759, decl_uid=177393, cgraph_uid=4392, symbol_order=5178)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<pthread_detched_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.253526;

  <bb 2> :
  _1 = this->D.177713._M_impl.D.177058._M_finish;
  _2 = this->D.177713._M_impl.D.177058._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.177713._M_impl.D.177058._M_finish;
  _4 = &this->D.177713._M_impl;
  std::allocator_traits<std::allocator<pthread_detched_type> >::construct<pthread_detched_type, const pthread_detched_type&> (_4, _3, __x);
  _5 = this->D.177713._M_impl.D.177058._M_finish;
  _6 = _5 + 16;
  this->D.177713._M_impl.D.177058._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.253526 = std::vector<pthread_detched_type>::end (this);
  std::vector<pthread_detched_type>::_M_realloc_insert<const pthread_detched_type&> (this, D.253526, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<pthread_detched_type> >::construct<pthread_detched_type, const pthread_detched_type&> (_ZNSt16allocator_traitsISaI20pthread_detched_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8697, decl_uid=214624, cgraph_uid=5329, symbol_order=6119)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<pthread_detched_type> >::construct<pthread_detched_type, const pthread_detched_type&> (struct allocator_type & __a, struct pthread_detched_type * __p, const struct pthread_detched_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const pthread_detched_type&> (__args#0);
  __gnu_cxx::new_allocator<pthread_detched_type>::construct<pthread_detched_type, const pthread_detched_type&> (__a, __p, _1);
  return;

}



;; Function std::forward<const pthread_detched_type&> (_ZSt7forwardIRK20pthread_detched_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9508, decl_uid=226514, cgraph_uid=6140, symbol_order=6930)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct pthread_detched_type & std::forward<const pthread_detched_type&> (const struct type & __t)
{
  const struct pthread_detched_type & D.253527;

  <bb 2> :
  D.253527 = __t;

  <bb 3> :
<L0>:
  return D.253527;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::construct<pthread_detched_type, const pthread_detched_type&> (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9509, decl_uid=226516, cgraph_uid=6141, symbol_order=6931)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_detched_type>::construct<pthread_detched_type, const pthread_detched_type&> (struct new_allocator * const this, struct pthread_detched_type * __p, const struct pthread_detched_type & __args#0)
{
  void * D.237149;
  void * D.237148;
  const struct pthread_detched_type * D.237150;

  <bb 2> :
  D.237150 = std::forward<const pthread_detched_type&> (__args#0);
  D.237148 = __p;
  D.237149 = operator new (16, D.237148);
  MEM[(struct pthread_detched_type *)D.237149] = *D.237150;
  return;

}



;; Function std::vector<pthread_detched_type>::_M_realloc_insert<const pthread_detched_type&> (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8698, decl_uid=214793, cgraph_uid=5333, symbol_order=6123)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_detched_type>::_M_realloc_insert<const pthread_detched_type&> (struct vector * const this, struct iterator __position, const struct pthread_detched_type & __args#0)
{
  struct pthread_detched_type * D.253533;
  const size_type D.253532;
  struct pthread_detched_type * __new_finish;
  struct pthread_detched_type * __new_start;
  const size_type __elems_before;
  struct pthread_detched_type * __old_finish;
  struct pthread_detched_type * __old_start;
  const size_type __len;
  struct iterator D.226527;

  <bb 2> :
  D.253532 = std::vector<pthread_detched_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.253532;
  __old_start = this->D.177713._M_impl.D.177058._M_start;
  __old_finish = this->D.177713._M_impl.D.177058._M_finish;
  D.226527 = std::vector<pthread_detched_type>::begin (this);
  _1 = __gnu_cxx::operator-<pthread_detched_type*, std::vector<pthread_detched_type> > (&__position, &D.226527);
  __elems_before = (const size_type) _1;
  D.226527 = {CLOBBER};
  _2 = &this->D.177713;
  D.253533 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_allocate (_2, __len);
  __new_start = D.253533;
  __new_finish = __new_start;
  _3 = std::forward<const pthread_detched_type&> (__args#0);
  _4 = __elems_before * 16;
  _5 = __new_start + _4;
  _6 = &this->D.177713._M_impl;
  std::allocator_traits<std::allocator<pthread_detched_type> >::construct<pthread_detched_type, const pthread_detched_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.177713;
  _8 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<pthread_detched_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 16;
  _11 = &this->D.177713;
  _12 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<pthread_detched_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.177713;
  _23 = this->D.177713._M_impl.D.177058._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 16;
  _26 = (long unsigned int) _25;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.177713._M_impl.D.177058._M_start = __new_start;
  this->D.177713._M_impl.D.177058._M_finish = __new_finish;
  _27 = __len * 16;
  _28 = __new_start + _27;
  this->D.177713._M_impl.D.177058._M_end_of_storage = _28;
  return;

}



;; Function std::vector<pthread_detched_type>::_M_check_len (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9510, decl_uid=177562, cgraph_uid=6142, symbol_order=6932)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<pthread_detched_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.971;
  size_type D.253537;
  const long unsigned int D.237155;
  bool retval.969;

  <bb 2> :
  _1 = std::vector<pthread_detched_type>::max_size (this);
  _2 = std::vector<pthread_detched_type>::size (this);
  _3 = _1 - _2;
  __n.970_4 = __n;
  retval.969 = _3 < __n.970_4;
  if (retval.969 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<pthread_detched_type>::size (this);
  _6 = std::vector<pthread_detched_type>::size (this);
  D.237155 = _6;
  _7 = std::max<long unsigned int> (&D.237155, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.237155 = {CLOBBER};
  _9 = std::vector<pthread_detched_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<pthread_detched_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.971 = std::vector<pthread_detched_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.971 = __len;

  <bb 8> :
  D.253537 = iftmp.971;

  <bb 9> :
<L6>:
  return D.253537;

}



;; Function std::vector<pthread_detched_type>::max_size (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE8max_sizeEv, funcdef_no=10164, decl_uid=177348, cgraph_uid=6796, symbol_order=7590)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_detched_type>::max_size (const struct vector * const this)
{
  size_type D.253544;

  <bb 2> :
  _1 = &this->D.177713;
  _2 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_1);
  D.253544 = std::vector<pthread_detched_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.253544;

}



;; Function std::vector<pthread_detched_type>::_S_max_size (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10651, decl_uid=177569, cgraph_uid=7283, symbol_order=8077)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_detched_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.253546;

  <bb 2> :
  __diffmax = 576460752303423487;
  _1 = std::allocator_traits<std::allocator<pthread_detched_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.253546 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253546;

}



;; Function std::allocator_traits<std::allocator<pthread_detched_type> >::max_size (_ZNSt16allocator_traitsISaI20pthread_detched_typeEE8max_sizeERKS1_, funcdef_no=10885, decl_uid=176883, cgraph_uid=7517, symbol_order=8313)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<pthread_detched_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.253549;

  <bb 2> :
  D.253549 = __gnu_cxx::new_allocator<pthread_detched_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.253549;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI20pthread_detched_typeE8max_sizeEv, funcdef_no=10991, decl_uid=176725, cgraph_uid=7623, symbol_order=8419)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<pthread_detched_type>::max_size (const struct new_allocator * const this)
{
  size_type D.253551;

  <bb 2> :
  D.253551 = __gnu_cxx::new_allocator<pthread_detched_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.253551;

}



;; Function __gnu_cxx::operator-<pthread_detched_type*, std::vector<pthread_detched_type> > (_ZN9__gnu_cxxmiIP20pthread_detched_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9511, decl_uid=226528, cgraph_uid=6143, symbol_order=6933)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<pthread_detched_type*, std::vector<pthread_detched_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.253553;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.253553 = _5 /[ex] 16;

  <bb 3> :
<L0>:
  return D.253553;

}



;; Function std::vector<pthread_detched_type>::_S_relocate (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9512, decl_uid=177220, cgraph_uid=6144, symbol_order=6934)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::vector<pthread_detched_type>::_S_relocate (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.253556;
  struct pthread_detched_type * D.253555;

  <bb 2> :
  D.253555 = std::vector<pthread_detched_type>::_S_do_relocate (__first, __last, __result, __alloc, D.253556);

  <bb 3> :
<L0>:
  return D.253555;

}



;; Function std::vector<pthread_detched_type>::_S_do_relocate (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10165, decl_uid=177208, cgraph_uid=6797, symbol_order=7591)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::vector<pthread_detched_type>::_S_do_relocate (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.242550)
{
  struct pthread_detched_type * D.253558;

  <bb 2> :
  D.253558 = std::__relocate_a<pthread_detched_type*, pthread_detched_type*, std::allocator<pthread_detched_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.253558;

}



;; Function std::__relocate_a<pthread_detched_type*, pthread_detched_type*, std::allocator<pthread_detched_type> > (_ZSt12__relocate_aIP20pthread_detched_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10652, decl_uid=226693, cgraph_uid=7284, symbol_order=8078)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__relocate_a<pthread_detched_type*, pthread_detched_type*, std::allocator<pthread_detched_type> > (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result, struct allocator & __alloc)
{
  struct pthread_detched_type * D.253560;

  <bb 2> :
  _1 = std::__niter_base<pthread_detched_type*> (__result);
  _2 = std::__niter_base<pthread_detched_type*> (__last);
  _3 = std::__niter_base<pthread_detched_type*> (__first);
  D.253560 = std::__relocate_a_1<pthread_detched_type, pthread_detched_type> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.253560;

}



;; Function std::__relocate_a_1<pthread_detched_type, pthread_detched_type> (_ZSt14__relocate_a_1I20pthread_detched_typeS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E, funcdef_no=10886, decl_uid=226867, cgraph_uid=7518, symbol_order=8314)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct pthread_detched_type * std::__relocate_a_1<pthread_detched_type, pthread_detched_type> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result, struct allocator & D.246967)
{
  ptrdiff_t __count;
  struct pthread_detched_type * D.253565;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 16;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.972_2 = (long unsigned int) __count;
  _3 = __count.972_2 * 16;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.973_4 = (long unsigned int) __count;
  _5 = __count.973_4 * 16;
  D.253565 = __result + _5;

  <bb 5> :
<L3>:
  return D.253565;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::put (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7761, decl_uid=193313, cgraph_uid=4393, symbol_order=5179)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_pthread_detched_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_pthread_detched_array & v)
{
  bool D.253574;
  struct hash_entry * D.253573;
  unsigned int D.253572;
  bool ins;
  struct hash_entry * e;
  bool D.253570;
  void * D.214803;
  void * D.214802;

  <bb 2> :
  _1 = &this->m_table;
  D.253572 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::hash (k);
  _2 = D.253572;
  D.253573 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.253573;
  D.253574 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_empty (e);
  ins = D.253574;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.214802 = &e->m_value;
  D.214803 = operator new (24, D.214802);
  function_pthread_detched_array::function_pthread_detched_array (D.214803, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_pthread_detched_array::operator= (_4, v);

  <bb 5> :
  D.253570 = ~ins;

  <bb 6> :
<L3>:
  return D.253570;

  <bb 7> :
<L4>:
  operator delete (D.214803, D.214802);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8702, decl_uid=193471, cgraph_uid=5334, symbol_order=6124)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.253625;
  bool D.253624;
  bool D.253623;
  bool D.253622;
  bool D.253621;
  bool D.253620;
  struct value_type * D.253619;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.979;
  bool retval.978;
  bool retval.977;
  bool retval.976;
  bool retval.975;
  bool retval.974;
  struct value_type * D.253581;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 32;
  entry = _11 + _13;
  size = this->m_size;
  D.253620 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.974 = D.253620;
  if (retval.974 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.253621 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.975 = D.253621;
  if (retval.975 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 32;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.253622 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (entry, comparable);
  retval.976 = D.253622;
  if (retval.976 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  D.253581 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 32;
  entry = _24 + _26;
  D.253623 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.977 = D.253623;
  if (retval.977 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.253624 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.978 = D.253624;
  if (retval.978 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 32;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.253625 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (entry, comparable);
  retval.979 = D.253625;
  if (retval.979 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 32;
  D.253581 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.253581 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.253581 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 32;
  D.253581 = _37 + _39;

  <bb 27> :
<L37>:
  return D.253581;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9515, decl_uid=193552, cgraph_uid=6159, symbol_order=6949)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.253656;
  unsigned int D.253655;
  bool D.253654;
  bool D.253653;
  struct mem_alloc_description & D.253652;
  struct value_type * D.253651;
  unsigned int D.253650;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.237193;
  void * D.237192;
  struct hash_entry & D.237230;
  bool iftmp.983;
  bool retval.982;
  bool iftmp.981;
  bool retval.980;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 32;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.981 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.981 = 0;

  <bb 6> :
  retval.980 = iftmp.981;
  if (retval.980 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.253650 = hash_table_higher_prime_index (_5);
  nindex = D.253650;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.253651 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.253651;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.253653 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.253653;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.253654 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.253654;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.983 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.983 = 0;

  <bb 15> :
  retval.982 = iftmp.983;
  if (retval.982 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.253655 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash (x);
  _16 = D.253655;
  D.253656 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.253656;
  D.237230 = std::move<hash_map<tree_node*, function_pthread_detched_array>::hash_entry&> (x);
  D.237192 = q;
  D.237193 = operator new (32, D.237192);
  hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash_entry (D.237193, D.237230);

  <bb 17> :
  p = p + 32;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10167, decl_uid=193447, cgraph_uid=6799, symbol_order=7593)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.253657;

  <bb 2> :
  D.253657 = this->m_size;

  <bb 3> :
<L0>:
  return D.253657;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10168, decl_uid=193449, cgraph_uid=6800, symbol_order=7594)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.253659;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.253659 = _1 - _2;

  <bb 3> :
<L0>:
  return D.253659;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10169, decl_uid=193549, cgraph_uid=6801, symbol_order=7595)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.984;
  bool D.253661;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.984 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.984 = 0;

  <bb 6> :
  D.253661 = iftmp.984;

  <bb 7> :
<L4>:
  return D.253661;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9371, decl_uid=193539, cgraph_uid=6003, symbol_order=6793)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.253683;
  struct value_type * D.253682;
  struct mem_alloc_description & D.253681;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.253679;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.253682 = xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_alloc (n);
  nentries = D.253682;
  goto <bb 6>; [INV]

  <bb 5> :
  D.253683 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (n);
  nentries = D.253683;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.253679 = nentries;

  <bb 9> :
<L14>:
  return D.253679;

}



;; Function xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10073, decl_uid=218417, cgraph_uid=6705, symbol_order=7499)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.253686;
  struct hash_entry * D.253684;

  <bb 2> :
  D.253686 = xcalloc (count, 32);
  D.253684 = D.253686;

  <bb 3> :
<L0>:
  return D.253684;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10074, decl_uid=235699, cgraph_uid=6706, symbol_order=7500)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.253693;
  struct hash_entry * D.253692;
  struct hash_entry * D.253690;
  bool retval.985;

  <bb 2> :
  retval.985 = need_finalization_p<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> ();
  if (retval.985 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 32;
  D.253692 = ggc_internal_cleared_alloc (_1, finalize, 32, c);
  D.253690 = D.253692;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 32;
  D.253693 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.253690 = D.253693;

  <bb 5> :
<L2>:
  return D.253690;

}



;; Function finalize<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10589, decl_uid=242161, cgraph_uid=7224, symbol_order=8018)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_pthread_detched_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10591, decl_uid=245571, cgraph_uid=7222, symbol_order=8016)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_pthread_detched_array::~function_pthread_detched_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10588, decl_uid=242160, cgraph_uid=7220, symbol_order=8014)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> ()
{
  bool D.253694;

  <bb 2> :
  D.253694 = 1;

  <bb 3> :
<L0>:
  return D.253694;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10171, decl_uid=193372, cgraph_uid=6803, symbol_order=7597)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.253698;
  hashval_t D.253696;

  <bb 2> :
  _1 = &e->m_key;
  D.253698 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::hash (_1);
  D.253696 = D.253698;

  <bb 3> :
<L0>:
  return D.253696;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10170, decl_uid=193542, cgraph_uid=6802, symbol_order=7596)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.253711;
  bool D.253710;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.987;
  struct value_type * D.253702;
  bool retval.986;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 32;
  slot = _2 + _4;
  D.253710 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.986 = D.253710;
  if (retval.986 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.253702 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 32;
  slot = _8 + _10;
  D.253711 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.987 = D.253711;
  if (retval.987 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.253702 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.253702;

}



;; Function std::move<hash_map<tree_node*, function_pthread_detched_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10172, decl_uid=237190, cgraph_uid=6804, symbol_order=7598)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_pthread_detched_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.253712;

  <bb 2> :
  D.253712 = __t;

  <bb 3> :
<L0>:
  return D.253712;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9526, decl_uid=237215, cgraph_uid=6157, symbol_order=6947)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.237217)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.237217->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.237217->m_value;
  function_pthread_detched_array::function_pthread_detched_array (_2, _3);
  return;

}



;; Function function_pthread_detched_array::function_pthread_detched_array (_ZN30function_pthread_detched_arrayC2EOS_, funcdef_no=9524, decl_uid=193664, cgraph_uid=6154, symbol_order=6944)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_detched_array::function_pthread_detched_array (struct function_pthread_detched_array * const this, struct function_pthread_detched_array & D.193666)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->pthread_detched_array;
  _2 = &D.193666->pthread_detched_array;
  std::vector<pthread_detched_type>::vector (_1, _2);
  return;

}



;; Function std::vector<pthread_detched_type>::vector (_ZNSt6vectorI20pthread_detched_typeSaIS0_EEC2EOS2_, funcdef_no=9522, decl_uid=177670, cgraph_uid=6151, symbol_order=6941)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_detched_type>::vector (struct vector * const this, struct vector & D.177672)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.177713;
  _2 = &D.177672->D.177713;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EEC2EOS2_, funcdef_no=9520, decl_uid=177138, cgraph_uid=6148, symbol_order=6938)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.177140)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.177140->_M_impl;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10174, decl_uid=177044, cgraph_uid=6806, symbol_order=7600)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl&> (__x);
  std::allocator<pthread_detched_type>::allocator (this, _1);
  _2 = &this->D.177058;
  _3 = std::move<std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.177058;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI20pthread_detched_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10653, decl_uid=242580, cgraph_uid=7285, symbol_order=8079)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.253714;

  <bb 2> :
  D.253714 = __t;

  <bb 3> :
<L0>:
  return D.253714;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10655, decl_uid=177000, cgraph_uid=7287, symbol_order=8081)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8967, decl_uid=218419, cgraph_uid=5599, symbol_order=6389)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9528, decl_uid=193560, cgraph_uid=6160, symbol_order=6950)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_pthread_detched_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10176, decl_uid=193384, cgraph_uid=6808, symbol_order=7602)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::mark_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::mark_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10657, decl_uid=242595, cgraph_uid=7289, symbol_order=8083)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::mark_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function function_pthread_exit_array::function_pthread_exit_array (_ZN27function_pthread_exit_arrayC2Ev, funcdef_no=6403, decl_uid=194123, cgraph_uid=3378, symbol_order=4155)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_exit_array::function_pthread_exit_array (struct function_pthread_exit_array * const this)
{
  <bb 2> :
  _1 = &this->pthread_exit_array;
  std::vector<pthread_exit_type>::vector (_1);
  return;

}



;; Function std::vector<pthread_exit_type>::vector (_ZNSt6vectorI17pthread_exit_typeSaIS0_EEC2Ev, funcdef_no=6401, decl_uid=178750, cgraph_uid=3375, symbol_order=4152)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_exit_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.178758;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EEC2Ev, funcdef_no=6399, decl_uid=178208, cgraph_uid=3372, symbol_order=4149)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7763, decl_uid=178100, cgraph_uid=4395, symbol_order=5181)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<pthread_exit_type>::allocator (this);
  _1 = &this->D.178103;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<pthread_exit_type>::allocator (_ZNSaI17pthread_exit_typeEC2Ev, funcdef_no=8705, decl_uid=177878, cgraph_uid=5337, symbol_order=6127)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_exit_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeEC2Ev, funcdef_no=9530, decl_uid=177807, cgraph_uid=6162, symbol_order=6952)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function function_pthread_exit_array::operator= (_ZN27function_pthread_exit_arrayaSERKS_, funcdef_no=6405, decl_uid=195632, cgraph_uid=3380, symbol_order=4157)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_pthread_exit_array & function_pthread_exit_array::operator= (struct function_pthread_exit_array * const this, const struct function_pthread_exit_array & D.195633)
{
  struct function_pthread_exit_array & D.253717;

  <bb 2> :
  _1 = &D.195633->pthread_exit_array;
  _2 = &this->pthread_exit_array;
  std::vector<pthread_exit_type>::operator= (_2, _1);
  D.253717 = this;

  <bb 3> :
<L0>:
  return D.253717;

}



;; Function std::vector<pthread_exit_type>::operator= (_ZNSt6vectorI17pthread_exit_typeSaIS0_EEaSERKS2_, funcdef_no=7771, decl_uid=178336, cgraph_uid=4405, symbol_order=5191)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<pthread_exit_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct pthread_exit_type * D.253752;
  struct pthread_exit_type * __tmp;
  const size_type __xlen;
  struct vector & D.253750;
  struct __normal_iterator D.253747;
  struct __normal_iterator D.253746;
  struct __normal_iterator D.253745;
  struct __normal_iterator D.253744;
  struct __normal_iterator D.253743;
  bool retval.992;
  struct __normal_iterator D.253738;
  struct __normal_iterator D.253737;
  bool retval.991;
  bool iftmp.990;
  bool retval.989;
  bool retval.988;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.988 = __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_propagate_on_copy_assign ();
  if (retval.988 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.178758;
  _4 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.178758;
  _6 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.990 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.990 = 0;

  <bb 8> :
  retval.989 = iftmp.990;
  if (retval.989 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<pthread_exit_type>::clear (this);
  _8 = &this->D.178758;
  _9 = this->D.178758._M_impl.D.178103._M_end_of_storage;
  _10 = this->D.178758._M_impl.D.178103._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 16;
  _13 = (long unsigned int) _12;
  _14 = this->D.178758._M_impl.D.178103._M_start;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (_8, _14, _13);
  this->D.178758._M_impl.D.178103._M_start = 0B;
  this->D.178758._M_impl.D.178103._M_finish = 0B;
  this->D.178758._M_impl.D.178103._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.178758;
  _16 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.178758;
  _18 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<pthread_exit_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<pthread_exit_type>::size (__x);
  _19 = std::vector<pthread_exit_type>::capacity (this);
  retval.991 = __xlen > _19;
  if (retval.991 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.253737 = std::vector<pthread_exit_type>::end (__x);
  D.253738 = std::vector<pthread_exit_type>::begin (__x);
  D.253752 = std::vector<pthread_exit_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (this, __xlen, D.253738, D.253737);
  __tmp = D.253752;
  _20 = &this->D.178758;
  _21 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.178758._M_impl.D.178103._M_finish;
  _23 = this->D.178758._M_impl.D.178103._M_start;
  std::_Destroy<pthread_exit_type*, pthread_exit_type> (_23, _22, _21);
  _24 = &this->D.178758;
  _25 = this->D.178758._M_impl.D.178103._M_end_of_storage;
  _26 = this->D.178758._M_impl.D.178103._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 16;
  _29 = (long unsigned int) _28;
  _30 = this->D.178758._M_impl.D.178103._M_start;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (_24, _30, _29);
  this->D.178758._M_impl.D.178103._M_start = __tmp;
  _31 = this->D.178758._M_impl.D.178103._M_start;
  _32 = __xlen * 16;
  _33 = _31 + _32;
  this->D.178758._M_impl.D.178103._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<pthread_exit_type>::size (this);
  retval.992 = __xlen <= _34;
  if (retval.992 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.178758;
  _36 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_35);
  D.253743 = std::vector<pthread_exit_type>::end (this);
  D.253744 = std::vector<pthread_exit_type>::begin (this);
  D.253745 = std::vector<pthread_exit_type>::end (__x);
  D.253746 = std::vector<pthread_exit_type>::begin (__x);
  D.253747 = std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (D.253746, D.253745, D.253744);
  std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type> (D.253747, D.253743, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.178758._M_impl.D.178103._M_start;
  _38 = __x->D.178758._M_impl.D.178103._M_start;
  _39 = std::vector<pthread_exit_type>::size (this);
  _40 = _39 * 16;
  _41 = _38 + _40;
  _42 = __x->D.178758._M_impl.D.178103._M_start;
  std::copy<pthread_exit_type*, pthread_exit_type*> (_42, _41, _37);
  _43 = &this->D.178758;
  _44 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.178758._M_impl.D.178103._M_finish;
  _46 = __x->D.178758._M_impl.D.178103._M_finish;
  _47 = __x->D.178758._M_impl.D.178103._M_start;
  _48 = std::vector<pthread_exit_type>::size (this);
  _49 = _48 * 16;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<pthread_exit_type*, pthread_exit_type*, pthread_exit_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.178758._M_impl.D.178103._M_start;
  _52 = __xlen * 16;
  _53 = _51 + _52;
  this->D.178758._M_impl.D.178103._M_finish = _53;

  <bb 17> :
  D.253750 = this;

  <bb 18> :
<L19>:
  return D.253750;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI17pthread_exit_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7772, decl_uid=177970, cgraph_uid=4403, symbol_order=5189)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_propagate_on_copy_assign ()
{
  bool D.253753;

  <bb 2> :
  D.253753 = 0;

  <bb 3> :
<L0>:
  return D.253753;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI17pthread_exit_typeES1_E15_S_always_equalEv, funcdef_no=7773, decl_uid=177973, cgraph_uid=4404, symbol_order=5190)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_always_equal ()
{
  bool D.253755;

  <bb 2> :
  D.253755 = 1;

  <bb 3> :
<L0>:
  return D.253755;

}



;; Function std::operator!= (_ZStneRKSaI17pthread_exit_typeES2_, funcdef_no=8714, decl_uid=177856, cgraph_uid=5346, symbol_order=6136)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.227086, const struct allocator & D.227087)
{
  bool D.253757;

  <bb 2> :
  D.253757 = 0;

  <bb 3> :
<L0>:
  return D.253757;

}



;; Function std::vector<pthread_exit_type>::clear (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE5clearEv, funcdef_no=8715, decl_uid=178488, cgraph_uid=5347, symbol_order=6137)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_exit_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.178758._M_impl.D.178103._M_start;
  std::vector<pthread_exit_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<pthread_exit_type>::_M_erase_at_end (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9533, decl_uid=178616, cgraph_uid=6165, symbol_order=6955)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<pthread_exit_type>::_M_erase_at_end (struct vector * const this, struct pthread_exit_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.178758._M_impl.D.178103._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 16;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.178758;
  _5 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.178758._M_impl.D.178103._M_finish;
  std::_Destroy<pthread_exit_type*, pthread_exit_type> (__pos, _6, _5);
  this->D.178758._M_impl.D.178103._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<pthread_exit_type> > (_ZSt15__alloc_on_copyISaI17pthread_exit_typeEEvRT_RKS2_, funcdef_no=8716, decl_uid=214844, cgraph_uid=5348, symbol_order=6138)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<pthread_exit_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<pthread_exit_type>::capacity (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE8capacityEv, funcdef_no=8717, decl_uid=178404, cgraph_uid=5349, symbol_order=6139)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_exit_type>::capacity (const struct vector * const this)
{
  size_type D.253762;

  <bb 2> :
  _1 = this->D.178758._M_impl.D.178103._M_end_of_storage;
  _2 = this->D.178758._M_impl.D.178103._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.253762 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.253762;

}



;; Function std::vector<pthread_exit_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8718, decl_uid=214851, cgraph_uid=5350, symbol_order=6140)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct pthread_exit_type * std::vector<pthread_exit_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct pthread_exit_type * D.253766;
  struct pthread_exit_type * __result;
  struct pthread_exit_type * D.253764;

  <bb 2> :
  _1 = &this->D.178758;
  D.253766 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_allocate (_1, __n);
  __result = D.253766;
  _2 = &this->D.178758;
  _3 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*, pthread_exit_type> (__first, __last, __result, _3);

  <bb 3> :
  D.253764 = __result;

  <bb 4> :
<L0>:
  return D.253764;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.178758;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<pthread_exit_type>::end (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE3endEv, funcdef_no=8721, decl_uid=178371, cgraph_uid=5353, symbol_order=6143)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<pthread_exit_type>::end (struct vector * const this)
{
  struct iterator D.227173;
  struct iterator D.253770;

  <bb 2> :
  _1 = &this->D.178758._M_impl.D.178103._M_finish;
  __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (&D.227173, _1);
  D.253770 = D.227173;
  D.227173 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253770;

}



;; Function __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9536, decl_uid=214933, cgraph_uid=6168, symbol_order=6958)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (struct __normal_iterator * const this, struct pthread_exit_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<pthread_exit_type>::begin (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE5beginEv, funcdef_no=8719, decl_uid=178367, cgraph_uid=5351, symbol_order=6141)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<pthread_exit_type>::begin (struct vector * const this)
{
  struct iterator D.227127;
  struct iterator D.253773;

  <bb 2> :
  _1 = &this->D.178758._M_impl.D.178103._M_start;
  __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (&D.227127, _1);
  D.253773 = D.227127;
  D.227127 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253773;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8720, decl_uid=214952, cgraph_uid=5352, symbol_order=6142)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.253778;
  struct __normal_iterator D.253777;
  struct __normal_iterator D.253776;

  <bb 2> :
  D.253777 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (__last);
  D.253778 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (__first);
  D.253776 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (D.253778, D.253777, __result);

  <bb 3> :
<L0>:
  return D.253776;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9539, decl_uid=227145, cgraph_uid=6172, symbol_order=6962)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct pthread_exit_type * D.253782;
  struct __normal_iterator D.253780;

  <bb 2> :
  _1 = std::__niter_base<pthread_exit_type*, std::vector<pthread_exit_type> > (__result);
  _2 = std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (__last);
  _3 = std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (__first);
  D.253782 = std::__copy_move_a1<false, const pthread_exit_type*, pthread_exit_type*> (_3, _2, _1);
  _4 = D.253782;
  D.253780 = std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.253780;

}



;; Function std::__niter_base<pthread_exit_type*, std::vector<pthread_exit_type> > (_ZSt12__niter_baseIP17pthread_exit_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10180, decl_uid=237413, cgraph_uid=6812, symbol_order=7606)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__niter_base<pthread_exit_type*, std::vector<pthread_exit_type> > (struct __normal_iterator __it)
{
  struct pthread_exit_type * D.253783;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (&__it);
  D.253783 = *_1;

  <bb 3> :
<L0>:
  return D.253783;

}



;; Function __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9550, decl_uid=214920, cgraph_uid=6182, symbol_order=6972)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * const & __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (const struct __normal_iterator * const this)
{
  struct pthread_exit_type * const & D.253785;

  <bb 2> :
  D.253785 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.253785;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10182, decl_uid=237420, cgraph_uid=6814, symbol_order=7608)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (struct __normal_iterator __from, struct pthread_exit_type * __res)
{
  struct __normal_iterator D.253787;

  <bb 2> :
  _1 = std::__niter_base<pthread_exit_type*, std::vector<pthread_exit_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 16;
  D.253787 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.253787;

}



;; Function __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10662, decl_uid=214911, cgraph_uid=7294, symbol_order=8088)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct pthread_exit_type * const D.245910;
  struct __normal_iterator D.245911;
  struct __normal_iterator D.253789;

  <bb 2> :
  _1 = this->_M_current;
  __n.993_2 = (long unsigned int) __n;
  _3 = __n.993_2 * 16;
  _4 = _1 + _3;
  D.245910 = _4;
  __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (&D.245911, &D.245910);
  D.253789 = D.245911;
  D.245911 = {CLOBBER};
  D.245910 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.253789;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8722, decl_uid=214958, cgraph_uid=5354, symbol_order=6144)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.227176)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9541, decl_uid=227178, cgraph_uid=6173, symbol_order=6963)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10183, decl_uid=237444, cgraph_uid=6815, symbol_order=7609)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (struct __normal_iterator D.242620, struct __normal_iterator D.242621)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<pthread_exit_type*, pthread_exit_type*> (_ZSt4copyIP17pthread_exit_typeS1_ET0_T_S3_S2_, funcdef_no=8723, decl_uid=214966, cgraph_uid=5355, symbol_order=6145)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::copy<pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.253795;
  struct pthread_exit_type * D.253793;

  <bb 2> :
  _1 = std::__miter_base<pthread_exit_type*> (__last);
  _2 = std::__miter_base<pthread_exit_type*> (__first);
  D.253795 = std::__copy_move_a<false, pthread_exit_type*, pthread_exit_type*> (_2, _1, __result);
  D.253793 = D.253795;

  <bb 3> :
<L0>:
  return D.253793;

}



;; Function std::__miter_base<pthread_exit_type*> (_ZSt12__miter_baseIP17pthread_exit_typeET_S2_, funcdef_no=9542, decl_uid=227194, cgraph_uid=6174, symbol_order=6964)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__miter_base<pthread_exit_type*> (struct pthread_exit_type * __it)
{
  struct pthread_exit_type * D.253796;

  <bb 2> :
  D.253796 = __it;

  <bb 3> :
<L0>:
  return D.253796;

}



;; Function std::__copy_move_a<false, pthread_exit_type*, pthread_exit_type*> (_ZSt13__copy_move_aILb0EP17pthread_exit_typeS1_ET1_T0_S3_S2_, funcdef_no=9543, decl_uid=227196, cgraph_uid=6175, symbol_order=6965)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a<false, pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.253800;
  struct pthread_exit_type * D.253798;

  <bb 2> :
  __result.994_1 = __result;
  _2 = std::__niter_base<pthread_exit_type*> (__result.994_1);
  _3 = std::__niter_base<pthread_exit_type*> (__last);
  _4 = std::__niter_base<pthread_exit_type*> (__first);
  D.253800 = std::__copy_move_a1<false, pthread_exit_type*, pthread_exit_type*> (_4, _3, _2);
  _5 = D.253800;
  D.253798 = std::__niter_wrap<pthread_exit_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.253798;

}



;; Function std::__copy_move_a1<false, pthread_exit_type*, pthread_exit_type*> (_ZSt14__copy_move_a1ILb0EP17pthread_exit_typeS1_ET1_T0_S3_S2_, funcdef_no=10185, decl_uid=237455, cgraph_uid=6817, symbol_order=7611)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a1<false, pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.253803;
  struct pthread_exit_type * D.253801;

  <bb 2> :
  D.253803 = std::__copy_move_a2<false, pthread_exit_type*, pthread_exit_type*> (__first, __last, __result);
  D.253801 = D.253803;

  <bb 3> :
<L0>:
  return D.253801;

}



;; Function std::__copy_move_a2<false, pthread_exit_type*, pthread_exit_type*> (_ZSt14__copy_move_a2ILb0EP17pthread_exit_typeS1_ET1_T0_S3_S2_, funcdef_no=10663, decl_uid=242629, cgraph_uid=7295, symbol_order=8089)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a2<false, pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.253804;

  <bb 2> :
  D.253804 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_exit_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.253804;

}



;; Function std::__uninitialized_copy_a<pthread_exit_type*, pthread_exit_type*, pthread_exit_type> (_ZSt22__uninitialized_copy_aIP17pthread_exit_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8724, decl_uid=214970, cgraph_uid=5356, symbol_order=6146)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__uninitialized_copy_a<pthread_exit_type*, pthread_exit_type*, pthread_exit_type> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result, struct allocator & D.227203)
{
  struct pthread_exit_type * D.253808;
  struct pthread_exit_type * D.253806;

  <bb 2> :
  D.253808 = std::uninitialized_copy<pthread_exit_type*, pthread_exit_type*> (__first, __last, __result);
  D.253806 = D.253808;

  <bb 3> :
<L0>:
  return D.253806;

}



;; Function std::uninitialized_copy<pthread_exit_type*, pthread_exit_type*> (_ZSt18uninitialized_copyIP17pthread_exit_typeS1_ET0_T_S3_S2_, funcdef_no=9544, decl_uid=227205, cgraph_uid=6176, symbol_order=6966)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::uninitialized_copy<pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.253811;
  const bool __assignable;
  struct pthread_exit_type * D.253809;

  <bb 2> :
  __assignable = 1;
  D.253811 = std::__uninitialized_copy<true>::__uninit_copy<pthread_exit_type*, pthread_exit_type*> (__first, __last, __result);
  D.253809 = D.253811;

  <bb 3> :
<L0>:
  return D.253809;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<pthread_exit_type*, pthread_exit_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIP17pthread_exit_typeS3_EET0_T_S5_S4_, funcdef_no=10187, decl_uid=237493, cgraph_uid=6819, symbol_order=7613)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__uninitialized_copy<true>::__uninit_copy<pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.253814;
  struct pthread_exit_type * D.253812;

  <bb 2> :
  D.253814 = std::copy<pthread_exit_type*, pthread_exit_type*> (__first, __last, __result);
  D.253812 = D.253814;

  <bb 3> :
<L0>:
  return D.253812;

}



;; Function std::vector<pthread_exit_type>::push_back (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE9push_backERKS0_, funcdef_no=7774, decl_uid=178438, cgraph_uid=4407, symbol_order=5193)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<pthread_exit_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.253818;

  <bb 2> :
  _1 = this->D.178758._M_impl.D.178103._M_finish;
  _2 = this->D.178758._M_impl.D.178103._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.178758._M_impl.D.178103._M_finish;
  _4 = &this->D.178758._M_impl;
  std::allocator_traits<std::allocator<pthread_exit_type> >::construct<pthread_exit_type, const pthread_exit_type&> (_4, _3, __x);
  _5 = this->D.178758._M_impl.D.178103._M_finish;
  _6 = _5 + 16;
  this->D.178758._M_impl.D.178103._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.253818 = std::vector<pthread_exit_type>::end (this);
  std::vector<pthread_exit_type>::_M_realloc_insert<const pthread_exit_type&> (this, D.253818, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<pthread_exit_type> >::construct<pthread_exit_type, const pthread_exit_type&> (_ZNSt16allocator_traitsISaI17pthread_exit_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8725, decl_uid=214982, cgraph_uid=5357, symbol_order=6147)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<pthread_exit_type> >::construct<pthread_exit_type, const pthread_exit_type&> (struct allocator_type & __a, struct pthread_exit_type * __p, const struct pthread_exit_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const pthread_exit_type&> (__args#0);
  __gnu_cxx::new_allocator<pthread_exit_type>::construct<pthread_exit_type, const pthread_exit_type&> (__a, __p, _1);
  return;

}



;; Function std::forward<const pthread_exit_type&> (_ZSt7forwardIRK17pthread_exit_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9545, decl_uid=227220, cgraph_uid=6177, symbol_order=6967)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct pthread_exit_type & std::forward<const pthread_exit_type&> (const struct type & __t)
{
  const struct pthread_exit_type & D.253819;

  <bb 2> :
  D.253819 = __t;

  <bb 3> :
<L0>:
  return D.253819;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::construct<pthread_exit_type, const pthread_exit_type&> (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9546, decl_uid=227222, cgraph_uid=6178, symbol_order=6968)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_exit_type>::construct<pthread_exit_type, const pthread_exit_type&> (struct new_allocator * const this, struct pthread_exit_type * __p, const struct pthread_exit_type & __args#0)
{
  void * D.237505;
  void * D.237504;
  const struct pthread_exit_type * D.237506;

  <bb 2> :
  D.237506 = std::forward<const pthread_exit_type&> (__args#0);
  D.237504 = __p;
  D.237505 = operator new (16, D.237504);
  MEM[(struct pthread_exit_type *)D.237505] = *D.237506;
  return;

}



;; Function std::vector<pthread_exit_type>::_M_realloc_insert<const pthread_exit_type&> (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8726, decl_uid=215151, cgraph_uid=5361, symbol_order=6151)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_exit_type>::_M_realloc_insert<const pthread_exit_type&> (struct vector * const this, struct iterator __position, const struct pthread_exit_type & __args#0)
{
  struct pthread_exit_type * D.253825;
  const size_type D.253824;
  struct pthread_exit_type * __new_finish;
  struct pthread_exit_type * __new_start;
  const size_type __elems_before;
  struct pthread_exit_type * __old_finish;
  struct pthread_exit_type * __old_start;
  const size_type __len;
  struct iterator D.227233;

  <bb 2> :
  D.253824 = std::vector<pthread_exit_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.253824;
  __old_start = this->D.178758._M_impl.D.178103._M_start;
  __old_finish = this->D.178758._M_impl.D.178103._M_finish;
  D.227233 = std::vector<pthread_exit_type>::begin (this);
  _1 = __gnu_cxx::operator-<pthread_exit_type*, std::vector<pthread_exit_type> > (&__position, &D.227233);
  __elems_before = (const size_type) _1;
  D.227233 = {CLOBBER};
  _2 = &this->D.178758;
  D.253825 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_allocate (_2, __len);
  __new_start = D.253825;
  __new_finish = __new_start;
  _3 = std::forward<const pthread_exit_type&> (__args#0);
  _4 = __elems_before * 16;
  _5 = __new_start + _4;
  _6 = &this->D.178758._M_impl;
  std::allocator_traits<std::allocator<pthread_exit_type> >::construct<pthread_exit_type, const pthread_exit_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.178758;
  _8 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<pthread_exit_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 16;
  _11 = &this->D.178758;
  _12 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<pthread_exit_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.178758;
  _23 = this->D.178758._M_impl.D.178103._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 16;
  _26 = (long unsigned int) _25;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.178758._M_impl.D.178103._M_start = __new_start;
  this->D.178758._M_impl.D.178103._M_finish = __new_finish;
  _27 = __len * 16;
  _28 = __new_start + _27;
  this->D.178758._M_impl.D.178103._M_end_of_storage = _28;
  return;

}



;; Function std::vector<pthread_exit_type>::_M_check_len (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9547, decl_uid=178607, cgraph_uid=6179, symbol_order=6969)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<pthread_exit_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.997;
  size_type D.253829;
  const long unsigned int D.237511;
  bool retval.995;

  <bb 2> :
  _1 = std::vector<pthread_exit_type>::max_size (this);
  _2 = std::vector<pthread_exit_type>::size (this);
  _3 = _1 - _2;
  __n.996_4 = __n;
  retval.995 = _3 < __n.996_4;
  if (retval.995 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<pthread_exit_type>::size (this);
  _6 = std::vector<pthread_exit_type>::size (this);
  D.237511 = _6;
  _7 = std::max<long unsigned int> (&D.237511, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.237511 = {CLOBBER};
  _9 = std::vector<pthread_exit_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<pthread_exit_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.997 = std::vector<pthread_exit_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.997 = __len;

  <bb 8> :
  D.253829 = iftmp.997;

  <bb 9> :
<L6>:
  return D.253829;

}



;; Function std::vector<pthread_exit_type>::max_size (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE8max_sizeEv, funcdef_no=10188, decl_uid=178393, cgraph_uid=6820, symbol_order=7614)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_exit_type>::max_size (const struct vector * const this)
{
  size_type D.253836;

  <bb 2> :
  _1 = &this->D.178758;
  _2 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_1);
  D.253836 = std::vector<pthread_exit_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.253836;

}



;; Function std::vector<pthread_exit_type>::_S_max_size (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10664, decl_uid=178614, cgraph_uid=7296, symbol_order=8090)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_exit_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.253838;

  <bb 2> :
  __diffmax = 576460752303423487;
  _1 = std::allocator_traits<std::allocator<pthread_exit_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.253838 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253838;

}



;; Function std::allocator_traits<std::allocator<pthread_exit_type> >::max_size (_ZNSt16allocator_traitsISaI17pthread_exit_typeEE8max_sizeERKS1_, funcdef_no=10888, decl_uid=177928, cgraph_uid=7520, symbol_order=8316)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<pthread_exit_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.253841;

  <bb 2> :
  D.253841 = __gnu_cxx::new_allocator<pthread_exit_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.253841;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI17pthread_exit_typeE8max_sizeEv, funcdef_no=10992, decl_uid=177770, cgraph_uid=7624, symbol_order=8420)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<pthread_exit_type>::max_size (const struct new_allocator * const this)
{
  size_type D.253843;

  <bb 2> :
  D.253843 = __gnu_cxx::new_allocator<pthread_exit_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.253843;

}



;; Function __gnu_cxx::operator-<pthread_exit_type*, std::vector<pthread_exit_type> > (_ZN9__gnu_cxxmiIP17pthread_exit_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9548, decl_uid=227234, cgraph_uid=6180, symbol_order=6970)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<pthread_exit_type*, std::vector<pthread_exit_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.253845;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.253845 = _5 /[ex] 16;

  <bb 3> :
<L0>:
  return D.253845;

}



;; Function std::vector<pthread_exit_type>::_S_relocate (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9549, decl_uid=178265, cgraph_uid=6181, symbol_order=6971)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::vector<pthread_exit_type>::_S_relocate (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.253848;
  struct pthread_exit_type * D.253847;

  <bb 2> :
  D.253847 = std::vector<pthread_exit_type>::_S_do_relocate (__first, __last, __result, __alloc, D.253848);

  <bb 3> :
<L0>:
  return D.253847;

}



;; Function std::vector<pthread_exit_type>::_S_do_relocate (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10189, decl_uid=178253, cgraph_uid=6821, symbol_order=7615)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::vector<pthread_exit_type>::_S_do_relocate (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.242645)
{
  struct pthread_exit_type * D.253850;

  <bb 2> :
  D.253850 = std::__relocate_a<pthread_exit_type*, pthread_exit_type*, std::allocator<pthread_exit_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.253850;

}



;; Function std::__relocate_a<pthread_exit_type*, pthread_exit_type*, std::allocator<pthread_exit_type> > (_ZSt12__relocate_aIP17pthread_exit_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10665, decl_uid=227399, cgraph_uid=7297, symbol_order=8091)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__relocate_a<pthread_exit_type*, pthread_exit_type*, std::allocator<pthread_exit_type> > (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result, struct allocator & __alloc)
{
  struct pthread_exit_type * D.253852;

  <bb 2> :
  _1 = std::__niter_base<pthread_exit_type*> (__result);
  _2 = std::__niter_base<pthread_exit_type*> (__last);
  _3 = std::__niter_base<pthread_exit_type*> (__first);
  D.253852 = std::__relocate_a_1<pthread_exit_type, pthread_exit_type> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.253852;

}



;; Function std::__relocate_a_1<pthread_exit_type, pthread_exit_type> (_ZSt14__relocate_a_1I17pthread_exit_typeS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E, funcdef_no=10889, decl_uid=227573, cgraph_uid=7521, symbol_order=8317)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct pthread_exit_type * std::__relocate_a_1<pthread_exit_type, pthread_exit_type> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result, struct allocator & D.246999)
{
  ptrdiff_t __count;
  struct pthread_exit_type * D.253857;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 16;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.998_2 = (long unsigned int) __count;
  _3 = __count.998_2 * 16;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.999_4 = (long unsigned int) __count;
  _5 = __count.999_4 * 16;
  D.253857 = __result + _5;

  <bb 5> :
<L3>:
  return D.253857;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::put (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7776, decl_uid=193789, cgraph_uid=4408, symbol_order=5194)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_pthread_exit_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_pthread_exit_array & v)
{
  bool D.253866;
  struct hash_entry * D.253865;
  unsigned int D.253864;
  bool ins;
  struct hash_entry * e;
  bool D.253862;
  void * D.215161;
  void * D.215160;

  <bb 2> :
  _1 = &this->m_table;
  D.253864 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::hash (k);
  _2 = D.253864;
  D.253865 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.253865;
  D.253866 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_empty (e);
  ins = D.253866;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.215160 = &e->m_value;
  D.215161 = operator new (24, D.215160);
  function_pthread_exit_array::function_pthread_exit_array (D.215161, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_pthread_exit_array::operator= (_4, v);

  <bb 5> :
  D.253862 = ~ins;

  <bb 6> :
<L3>:
  return D.253862;

  <bb 7> :
<L4>:
  operator delete (D.215161, D.215160);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8730, decl_uid=193947, cgraph_uid=5362, symbol_order=6152)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.253917;
  bool D.253916;
  bool D.253915;
  bool D.253914;
  bool D.253913;
  bool D.253912;
  struct value_type * D.253911;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.1005;
  bool retval.1004;
  bool retval.1003;
  bool retval.1002;
  bool retval.1001;
  bool retval.1000;
  struct value_type * D.253873;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 32;
  entry = _11 + _13;
  size = this->m_size;
  D.253912 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1000 = D.253912;
  if (retval.1000 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.253913 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1001 = D.253913;
  if (retval.1001 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 32;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.253914 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (entry, comparable);
  retval.1002 = D.253914;
  if (retval.1002 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  D.253873 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 32;
  entry = _24 + _26;
  D.253915 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1003 = D.253915;
  if (retval.1003 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.253916 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1004 = D.253916;
  if (retval.1004 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 32;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.253917 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (entry, comparable);
  retval.1005 = D.253917;
  if (retval.1005 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 32;
  D.253873 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.253873 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.253873 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 32;
  D.253873 = _37 + _39;

  <bb 27> :
<L37>:
  return D.253873;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9552, decl_uid=194028, cgraph_uid=6196, symbol_order=6986)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.253948;
  unsigned int D.253947;
  bool D.253946;
  bool D.253945;
  struct mem_alloc_description & D.253944;
  struct value_type * D.253943;
  unsigned int D.253942;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.237549;
  void * D.237548;
  struct hash_entry & D.237586;
  bool iftmp.1009;
  bool retval.1008;
  bool iftmp.1007;
  bool retval.1006;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 32;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1007 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1007 = 0;

  <bb 6> :
  retval.1006 = iftmp.1007;
  if (retval.1006 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.253942 = hash_table_higher_prime_index (_5);
  nindex = D.253942;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.253943 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.253943;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.253945 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.253945;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.253946 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.253946;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.1009 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.1009 = 0;

  <bb 15> :
  retval.1008 = iftmp.1009;
  if (retval.1008 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.253947 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash (x);
  _16 = D.253947;
  D.253948 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.253948;
  D.237586 = std::move<hash_map<tree_node*, function_pthread_exit_array>::hash_entry&> (x);
  D.237548 = q;
  D.237549 = operator new (32, D.237548);
  hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash_entry (D.237549, D.237586);

  <bb 17> :
  p = p + 32;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10191, decl_uid=193923, cgraph_uid=6823, symbol_order=7617)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.253949;

  <bb 2> :
  D.253949 = this->m_size;

  <bb 3> :
<L0>:
  return D.253949;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10192, decl_uid=193925, cgraph_uid=6824, symbol_order=7618)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.253951;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.253951 = _1 - _2;

  <bb 3> :
<L0>:
  return D.253951;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10193, decl_uid=194025, cgraph_uid=6825, symbol_order=7619)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.1010;
  bool D.253953;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1010 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1010 = 0;

  <bb 6> :
  D.253953 = iftmp.1010;

  <bb 7> :
<L4>:
  return D.253953;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9384, decl_uid=194015, cgraph_uid=6016, symbol_order=6806)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.253975;
  struct value_type * D.253974;
  struct mem_alloc_description & D.253973;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.253971;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.253974 = xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_alloc (n);
  nentries = D.253974;
  goto <bb 6>; [INV]

  <bb 5> :
  D.253975 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (n);
  nentries = D.253975;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.253971 = nentries;

  <bb 9> :
<L14>:
  return D.253971;

}



;; Function xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10081, decl_uid=218441, cgraph_uid=6713, symbol_order=7507)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.253978;
  struct hash_entry * D.253976;

  <bb 2> :
  D.253978 = xcalloc (count, 32);
  D.253976 = D.253978;

  <bb 3> :
<L0>:
  return D.253976;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10082, decl_uid=235868, cgraph_uid=6714, symbol_order=7508)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.253985;
  struct hash_entry * D.253984;
  struct hash_entry * D.253982;
  bool retval.1011;

  <bb 2> :
  retval.1011 = need_finalization_p<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> ();
  if (retval.1011 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 32;
  D.253984 = ggc_internal_cleared_alloc (_1, finalize, 32, c);
  D.253982 = D.253984;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 32;
  D.253985 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.253982 = D.253985;

  <bb 5> :
<L2>:
  return D.253982;

}



;; Function finalize<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10598, decl_uid=242197, cgraph_uid=7233, symbol_order=8027)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_pthread_exit_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10600, decl_uid=245606, cgraph_uid=7231, symbol_order=8025)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_pthread_exit_array::~function_pthread_exit_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10597, decl_uid=242196, cgraph_uid=7229, symbol_order=8023)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> ()
{
  bool D.253986;

  <bb 2> :
  D.253986 = 1;

  <bb 3> :
<L0>:
  return D.253986;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10195, decl_uid=193848, cgraph_uid=6827, symbol_order=7621)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.253990;
  hashval_t D.253988;

  <bb 2> :
  _1 = &e->m_key;
  D.253990 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::hash (_1);
  D.253988 = D.253990;

  <bb 3> :
<L0>:
  return D.253988;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10194, decl_uid=194018, cgraph_uid=6826, symbol_order=7620)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.254003;
  bool D.254002;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.1013;
  struct value_type * D.253994;
  bool retval.1012;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 32;
  slot = _2 + _4;
  D.254002 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1012 = D.254002;
  if (retval.1012 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.253994 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 32;
  slot = _8 + _10;
  D.254003 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1013 = D.254003;
  if (retval.1013 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.253994 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.253994;

}



;; Function std::move<hash_map<tree_node*, function_pthread_exit_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10196, decl_uid=237546, cgraph_uid=6828, symbol_order=7622)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_pthread_exit_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.254004;

  <bb 2> :
  D.254004 = __t;

  <bb 3> :
<L0>:
  return D.254004;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9563, decl_uid=237571, cgraph_uid=6194, symbol_order=6984)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.237573)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.237573->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.237573->m_value;
  function_pthread_exit_array::function_pthread_exit_array (_2, _3);
  return;

}



;; Function function_pthread_exit_array::function_pthread_exit_array (_ZN27function_pthread_exit_arrayC2EOS_, funcdef_no=9561, decl_uid=194140, cgraph_uid=6191, symbol_order=6981)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_exit_array::function_pthread_exit_array (struct function_pthread_exit_array * const this, struct function_pthread_exit_array & D.194142)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->pthread_exit_array;
  _2 = &D.194142->pthread_exit_array;
  std::vector<pthread_exit_type>::vector (_1, _2);
  return;

}



;; Function std::vector<pthread_exit_type>::vector (_ZNSt6vectorI17pthread_exit_typeSaIS0_EEC2EOS2_, funcdef_no=9559, decl_uid=178715, cgraph_uid=6188, symbol_order=6978)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_exit_type>::vector (struct vector * const this, struct vector & D.178717)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.178758;
  _2 = &D.178717->D.178758;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EEC2EOS2_, funcdef_no=9557, decl_uid=178183, cgraph_uid=6185, symbol_order=6975)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.178185)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.178185->_M_impl;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10198, decl_uid=178089, cgraph_uid=6830, symbol_order=7624)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl&> (__x);
  std::allocator<pthread_exit_type>::allocator (this, _1);
  _2 = &this->D.178103;
  _3 = std::move<std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.178103;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI17pthread_exit_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10666, decl_uid=242675, cgraph_uid=7298, symbol_order=8092)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.254006;

  <bb 2> :
  D.254006 = __t;

  <bb 3> :
<L0>:
  return D.254006;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10668, decl_uid=178045, cgraph_uid=7300, symbol_order=8094)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8971, decl_uid=218443, cgraph_uid=5603, symbol_order=6393)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9565, decl_uid=194036, cgraph_uid=6197, symbol_order=6987)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_pthread_exit_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10200, decl_uid=193860, cgraph_uid=6832, symbol_order=7626)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::mark_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::mark_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10670, decl_uid=242690, cgraph_uid=7302, symbol_order=8096)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::mark_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function std::vector<assign_type>::push_back (_ZNSt6vectorI11assign_typeSaIS0_EE9push_backERKS0_, funcdef_no=7730, decl_uid=176335, cgraph_uid=4363, symbol_order=5149)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<assign_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.254012;

  <bb 2> :
  _1 = this->D.176655._M_impl.D.176000._M_finish;
  _2 = this->D.176655._M_impl.D.176000._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.176655._M_impl.D.176000._M_finish;
  _4 = &this->D.176655._M_impl;
  std::allocator_traits<std::allocator<assign_type> >::construct<assign_type, const assign_type&> (_4, _3, __x);
  _5 = this->D.176655._M_impl.D.176000._M_finish;
  _6 = _5 + 24;
  this->D.176655._M_impl.D.176000._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.254012 = std::vector<assign_type>::end (this);
  std::vector<assign_type>::_M_realloc_insert<const assign_type&> (this, D.254012, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<assign_type> >::construct<assign_type, const assign_type&> (_ZNSt16allocator_traitsISaI11assign_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8643, decl_uid=213915, cgraph_uid=5275, symbol_order=6065)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<assign_type> >::construct<assign_type, const assign_type&> (struct allocator_type & __a, struct assign_type * __p, const struct assign_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const assign_type&> (__args#0);
  __gnu_cxx::new_allocator<assign_type>::construct<assign_type, const assign_type&> (__a, __p, _1);
  return;

}



;; Function std::forward<const assign_type&> (_ZSt7forwardIRK11assign_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9448, decl_uid=225087, cgraph_uid=6080, symbol_order=6870)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct assign_type & std::forward<const assign_type&> (const struct type & __t)
{
  const struct assign_type & D.254013;

  <bb 2> :
  D.254013 = __t;

  <bb 3> :
<L0>:
  return D.254013;

}



;; Function __gnu_cxx::new_allocator<assign_type>::construct<assign_type, const assign_type&> (_ZN9__gnu_cxx13new_allocatorI11assign_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9449, decl_uid=225089, cgraph_uid=6081, symbol_order=6871)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<assign_type>::construct<assign_type, const assign_type&> (struct new_allocator * const this, struct assign_type * __p, const struct assign_type & __args#0)
{
  void * D.236500;
  void * D.236499;
  const struct assign_type * D.236501;

  <bb 2> :
  D.236501 = std::forward<const assign_type&> (__args#0);
  D.236499 = __p;
  D.236500 = operator new (24, D.236499);
  MEM[(struct assign_type *)D.236500] = *D.236501;
  return;

}



;; Function std::vector<assign_type>::_M_realloc_insert<const assign_type&> (_ZNSt6vectorI11assign_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8644, decl_uid=214084, cgraph_uid=5279, symbol_order=6069)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::_M_realloc_insert<const assign_type&> (struct vector * const this, struct iterator __position, const struct assign_type & __args#0)
{
  struct assign_type * D.254019;
  const size_type D.254018;
  struct assign_type * __new_finish;
  struct assign_type * __new_start;
  const size_type __elems_before;
  struct assign_type * __old_finish;
  struct assign_type * __old_start;
  const size_type __len;
  struct iterator D.225100;

  <bb 2> :
  D.254018 = std::vector<assign_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.254018;
  __old_start = this->D.176655._M_impl.D.176000._M_start;
  __old_finish = this->D.176655._M_impl.D.176000._M_finish;
  D.225100 = std::vector<assign_type>::begin (this);
  _1 = __gnu_cxx::operator-<assign_type*, std::vector<assign_type> > (&__position, &D.225100);
  __elems_before = (const size_type) _1;
  D.225100 = {CLOBBER};
  _2 = &this->D.176655;
  D.254019 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_allocate (_2, __len);
  __new_start = D.254019;
  __new_finish = __new_start;
  _3 = std::forward<const assign_type&> (__args#0);
  _4 = __elems_before * 24;
  _5 = __new_start + _4;
  _6 = &this->D.176655._M_impl;
  std::allocator_traits<std::allocator<assign_type> >::construct<assign_type, const assign_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.176655;
  _8 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<assign_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 24;
  _11 = &this->D.176655;
  _12 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<assign_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.176655;
  _23 = this->D.176655._M_impl.D.176000._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 24;
  _26 = (long unsigned int) _25;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.176655._M_impl.D.176000._M_start = __new_start;
  this->D.176655._M_impl.D.176000._M_finish = __new_finish;
  _27 = __len * 24;
  _28 = __new_start + _27;
  this->D.176655._M_impl.D.176000._M_end_of_storage = _28;
  return;

}



;; Function std::vector<assign_type>::_M_check_len (_ZNKSt6vectorI11assign_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9450, decl_uid=176504, cgraph_uid=6082, symbol_order=6872)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<assign_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.1016;
  size_type D.254023;
  const long unsigned int D.236506;
  bool retval.1014;

  <bb 2> :
  _1 = std::vector<assign_type>::max_size (this);
  _2 = std::vector<assign_type>::size (this);
  _3 = _1 - _2;
  __n.1015_4 = __n;
  retval.1014 = _3 < __n.1015_4;
  if (retval.1014 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<assign_type>::size (this);
  _6 = std::vector<assign_type>::size (this);
  D.236506 = _6;
  _7 = std::max<long unsigned int> (&D.236506, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.236506 = {CLOBBER};
  _9 = std::vector<assign_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<assign_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1016 = std::vector<assign_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1016 = __len;

  <bb 8> :
  D.254023 = iftmp.1016;

  <bb 9> :
<L6>:
  return D.254023;

}



;; Function std::vector<assign_type>::max_size (_ZNKSt6vectorI11assign_typeSaIS0_EE8max_sizeEv, funcdef_no=10126, decl_uid=176290, cgraph_uid=6758, symbol_order=7552)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<assign_type>::max_size (const struct vector * const this)
{
  size_type D.254030;

  <bb 2> :
  _1 = &this->D.176655;
  _2 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_1);
  D.254030 = std::vector<assign_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.254030;

}



;; Function std::vector<assign_type>::_S_max_size (_ZNSt6vectorI11assign_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10629, decl_uid=176511, cgraph_uid=7261, symbol_order=8055)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<assign_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.254032;

  <bb 2> :
  __diffmax = 384307168202282325;
  _1 = std::allocator_traits<std::allocator<assign_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.254032 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.254032;

}



;; Function std::allocator_traits<std::allocator<assign_type> >::max_size (_ZNSt16allocator_traitsISaI11assign_typeEE8max_sizeERKS1_, funcdef_no=10878, decl_uid=175825, cgraph_uid=7510, symbol_order=8306)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<assign_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.254035;

  <bb 2> :
  D.254035 = __gnu_cxx::new_allocator<assign_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.254035;

}



;; Function __gnu_cxx::new_allocator<assign_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI11assign_typeE8max_sizeEv, funcdef_no=10988, decl_uid=175667, cgraph_uid=7620, symbol_order=8416)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<assign_type>::max_size (const struct new_allocator * const this)
{
  size_type D.254037;

  <bb 2> :
  D.254037 = __gnu_cxx::new_allocator<assign_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.254037;

}



;; Function __gnu_cxx::operator-<assign_type*, std::vector<assign_type> > (_ZN9__gnu_cxxmiIP11assign_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9451, decl_uid=225101, cgraph_uid=6083, symbol_order=6873)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<assign_type*, std::vector<assign_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.254039;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.254039 = _5 /[ex] 24;

  <bb 3> :
<L0>:
  return D.254039;

}



;; Function std::vector<assign_type>::_S_relocate (_ZNSt6vectorI11assign_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9452, decl_uid=176162, cgraph_uid=6084, symbol_order=6874)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::vector<assign_type>::_S_relocate (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.254042;
  struct assign_type * D.254041;

  <bb 2> :
  D.254041 = std::vector<assign_type>::_S_do_relocate (__first, __last, __result, __alloc, D.254042);

  <bb 3> :
<L0>:
  return D.254041;

}



;; Function std::vector<assign_type>::_S_do_relocate (_ZNSt6vectorI11assign_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10127, decl_uid=176150, cgraph_uid=6759, symbol_order=7553)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::vector<assign_type>::_S_do_relocate (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.242395)
{
  struct assign_type * D.254044;

  <bb 2> :
  D.254044 = std::__relocate_a<assign_type*, assign_type*, std::allocator<assign_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.254044;

}



;; Function std::__relocate_a<assign_type*, assign_type*, std::allocator<assign_type> > (_ZSt12__relocate_aIP11assign_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10630, decl_uid=225266, cgraph_uid=7262, symbol_order=8056)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__relocate_a<assign_type*, assign_type*, std::allocator<assign_type> > (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result, struct allocator & __alloc)
{
  struct assign_type * D.254046;

  <bb 2> :
  _1 = std::__niter_base<assign_type*> (__result);
  _2 = std::__niter_base<assign_type*> (__last);
  _3 = std::__niter_base<assign_type*> (__first);
  D.254046 = std::__relocate_a_1<assign_type, assign_type> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.254046;

}



;; Function std::__relocate_a_1<assign_type, assign_type> (_ZSt14__relocate_a_1I11assign_typeS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E, funcdef_no=10879, decl_uid=225440, cgraph_uid=7511, symbol_order=8307)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct assign_type * std::__relocate_a_1<assign_type, assign_type> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result, struct allocator & D.246893)
{
  ptrdiff_t __count;
  struct assign_type * D.254051;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 24;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.1017_2 = (long unsigned int) __count;
  _3 = __count.1017_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.1018_4 = (long unsigned int) __count;
  _5 = __count.1018_4 * 24;
  D.254051 = __result + _5;

  <bb 5> :
<L3>:
  return D.254051;

}



;; Function collect_function_return (_Z23collect_function_returnP6gimpleP11cgraph_nodeP15basic_block_def, funcdef_no=6406, decl_uid=187030, cgraph_uid=3382, symbol_order=4159)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;; 2 succs { 14 3 }
;; 3 succs { 4 6 }
;; 4 succs { 14 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 13 8 }
;; 8 succs { 13 9 }
;; 9 succs { 13 10 }
;; 10 succs { 13 11 }
;; 11 succs { 13 12 }
;; 12 succs { 1 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { }
void collect_function_return (struct gimple * gc, struct cgraph_node * node, struct basic_block_def * bb)
{
  struct function * D.254059;
  struct greturn * D.254058;
  struct greturn * D.254057;
  struct return_type ret_type;
  struct vector ret_type_array;
  union tree_node * get_function_return_tree;
  struct function_return_array fun_array;
  bool retval.1019;

  <bb 2> :
  function_return_array::function_return_array (&fun_array);
  D.254057 = as_a<greturn*, gimple> (gc);

  <bb 3> :
  _1 = D.254057;
  _2 = gimple_return_retval (_1);
  retval.1019 = _2 != 0B;
  if (retval.1019 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  D.254058 = as_a<greturn*, gimple> (gc);

  <bb 5> :
  _3 = D.254058;
  get_function_return_tree = gimple_return_retval (_3);
  goto <bb 7>; [INV]

  <bb 6> :
  get_function_return_tree = 0B;

  <bb 7> :
  std::vector<return_type>::vector (&ret_type_array);
  std::vector<return_type>::operator= (&fun_array.return_type_array, &ret_type_array);

  <bb 8> :
  return_type::return_type (&ret_type);
  ret_type.stmt = gc;
  ret_type.return_tree = get_function_return_tree;
  std::vector<return_type>::push_back (&global_ret_type_array, &ret_type);

  <bb 9> :
  std::vector<return_type>::push_back (&fun_array.return_type_array, &ret_type);

  <bb 10> :
  function_return_collect.1020_4 = function_return_collect;
  D.254059 = cgraph_node::get_fun (node);

  <bb 11> :
  _5 = D.254059;
  _6 = &_5->decl;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.1020_4, _6, &fun_array);

  <bb 12> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  ret_type = {CLOBBER};
  return;

  <bb 13> :
<L3>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 3

  <bb 14> :
<L4>:
  function_return_array::~function_return_array (&fun_array);
  resx 2

  <bb 15> :
<L5>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  ret_type = {CLOBBER};
  resx 1

}



;; Function as_a<greturn*, gimple> (_Z4as_aIP7greturn6gimpleET_PT0_, funcdef_no=7777, decl_uid=195818, cgraph_uid=4409, symbol_order=5195)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct greturn * as_a<greturn*, gimple> (struct gimple * p)
{
  struct greturn * D.254063;

  <bb 2> :
  D.254063 = reinterpret_is_a_helper<greturn*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.254063;

}



;; Function reinterpret_is_a_helper<greturn*>::cast<gimple> (_ZN23reinterpret_is_a_helperIP7greturnE4castI6gimpleEES1_PT_, funcdef_no=8733, decl_uid=215168, cgraph_uid=5365, symbol_order=6155)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct greturn * reinterpret_is_a_helper<greturn*>::cast<gimple> (struct gimple * p)
{
  struct greturn * D.254065;

  <bb 2> :
  D.254065 = p;

  <bb 3> :
<L0>:
  return D.254065;

}



;; Function gimple_return_retval (_ZL20gimple_return_retvalPK7greturn, funcdef_no=2464, decl_uid=94269, cgraph_uid=1601, symbol_order=1761)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_return_retval (const struct greturn * gs)
{
  union tree_node * D.254067;

  <bb 2> :
  D.254067 = gs->D.90483.op[0];

  <bb 3> :
<L0>:
  return D.254067;

}



;; Function FunctionStmtMappingRet (_Z22FunctionStmtMappingRetP3ptbS0_P12gimple_array, funcdef_no=6407, decl_uid=187034, cgraph_uid=3383, symbol_order=4160)

Removing basic block 41
Removing basic block 42
Removing basic block 43
Removing basic block 55
Removing basic block 69
Removing basic block 70
Removing basic block 76
Removing basic block 82
Merging blocks 83 and 85
Removing basic block 86
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88
;;
;; Loop 1
;;  header 81, latch 80
;;  depth 1, outer 0
;;  nodes: 81 80 78 79 77 6 76 75 8 7 74 73 19 72 71 23 70 51 58 65 69 67 25 53 64 57 56 55 54 61 63 62 60 59 52 24 66 68 41 43 44 50 47 49 48 46 45 42 30 29 28 27 26 35 40 36 38 37 39 33 34 31 32 21 22 20 18 17 16 15 13 12 11 10 9 14
;;
;; Loop 2
;;  header 71, latch 70
;;  depth 2, outer 1
;;  nodes: 71 70 51 58 65 69 67 25 53 64 57 56 55 54 61 63 62 60 59 52 24 66 68 41 43 44 50 47 49 48 46 45 42 30 29 28 27 26 35 40 36 38 37 39 33 34 31 32
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 81 }
;; 6 succs { 7 77 }
;; 7 succs { 88 8 }
;; 8 succs { 9 77 }
;; 9 succs { 87 10 }
;; 10 succs { 87 11 }
;; 11 succs { 87 12 }
;; 12 succs { 87 13 }
;; 13 succs { 14 15 }
;; 14 succs { 76 }
;; 15 succs { 87 16 }
;; 16 succs { 87 17 }
;; 17 succs { 87 18 }
;; 18 succs { 19 20 }
;; 19 succs { 73 }
;; 20 succs { 86 21 }
;; 21 succs { 22 23 }
;; 22 succs { 23 }
;; 23 succs { 71 }
;; 24 succs { 25 52 }
;; 25 succs { 26 70 }
;; 26 succs { 31 27 }
;; 27 succs { 31 28 }
;; 28 succs { 31 29 }
;; 29 succs { 31 30 }
;; 30 succs { 31 42 }
;; 31 succs { 32 34 }
;; 32 succs { 33 34 }
;; 33 succs { 35 }
;; 34 succs { 35 }
;; 35 succs { 36 41 }
;; 36 succs { 37 41 }
;; 37 succs { 85 38 }
;; 38 succs { 39 41 }
;; 39 succs { 85 40 }
;; 40 succs { 85 41 }
;; 41 succs { 51 }
;; 42 succs { 44 43 }
;; 43 succs { 44 51 }
;; 44 succs { 45 51 }
;; 45 succs { 83 46 }
;; 46 succs { 83 47 }
;; 47 succs { 48 50 }
;; 48 succs { 83 49 }
;; 49 succs { 50 }
;; 50 succs { 51 }
;; 51 succs { 70 }
;; 52 succs { 53 65 }
;; 53 succs { 54 70 }
;; 54 succs { 85 55 }
;; 55 succs { 85 56 }
;; 56 succs { 58 57 }
;; 57 succs { 58 70 }
;; 58 succs { 59 70 }
;; 59 succs { 84 60 }
;; 60 succs { 84 61 }
;; 61 succs { 62 64 }
;; 62 succs { 84 63 }
;; 63 succs { 64 }
;; 64 succs { 70 }
;; 65 succs { 66 70 }
;; 66 succs { 85 67 }
;; 67 succs { 68 70 }
;; 68 succs { 85 69 }
;; 69 succs { 70 }
;; 70 succs { 71 }
;; 71 succs { 24 72 }
;; 72 succs { 73 }
;; 73 succs { 76 74 }
;; 74 succs { 75 }
;; 75 succs { 77 }
;; 76 succs { 77 }
;; 77 succs { 78 79 }
;; 78 succs { 80 }
;; 79 succs { 80 }
;; 80 succs { 81 }
;; 81 succs { 6 82 }
;; 82 succs { 1 }
;; 83 succs { 85 }
;; 84 succs { 85 }
;; 85 succs { 86 }
;; 86 succs { 87 }
;; 87 succs { 88 }
;; 88 succs { }
void FunctionStmtMappingRet (struct ptb * ptable, struct ptb * ftable, struct gimple_array * user_tmp)
{
  int finally_tmp.1046;
  union tree_node * D.254176;
  struct pthread_attr_array * D.254174;
  struct pthread_attr_array * D.254173;
  union tree_node * D.254172;
  const char * D.254171;
  union tree_node * D.254170;
  struct pthread_attr_array * D.254168;
  struct pthread_attr_array * D.254167;
  union tree_node * D.254166;
  struct function * D.254165;
  bool D.254164;
  struct function_return_array * D.254163;
  struct function * D.254162;
  struct function_return_array * D.254161;
  struct function * D.254160;
  const char * D.254159;
  union tree_node * D.254158;
  struct gimple_array * D.254157;
  union tree_node * getvardecl;
  struct pthread_attr_array pthread_attr_array;
  const char * name;
  union tree_node * getvardecl;
  struct pthread_attr_array pthread_attr_array;
  int i;
  struct gimple * def_stmt;
  union tree_node * second;
  struct vector ret_type_array;
  struct function_return_array fun_array;
  const char * name;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;
  union tree_node * iftmp.1045;
  bool retval.1044;
  bool retval.1043;
  bool retval.1042;
  bool retval.1039;
  bool retval.1037;
  bool retval.1032;
  bool retval.1030;
  bool retval.1029;
  bool iftmp.1028;
  bool retval.1027;
  bool retval.1026;
  bool retval.1023;
  union tree_node * iftmp.1021;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  if (table_temp != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.1021 = table_temp->target;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1021 = 0B;

  <bb 5> :
  t = iftmp.1021;
  goto <bb 81>; [INV]

  <bb 6> :
  _1 = table_temp->target;
  if (_1 != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 7> :
  treeGimpleArray.1022_2 = treeGimpleArray;
  _3 = &table_temp->target;
  D.254157 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.1022_2, _3);

  <bb 8> :
  user_tmp = D.254157;
  if (user_tmp != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 9> :
  _4 = table_temp->last_stmt;
  D.254158 = gimple_call_fn (_4);

  <bb 10> :
  _5 = D.254158;
  D.254159 = get_name (_5);

  <bb 11> :
  name = D.254159;
  function_return_collect.1024_6 = function_return_collect;
  _7 = table_temp->node;
  D.254160 = cgraph_node::get_fun (_7);

  <bb 12> :
  _8 = D.254160;
  _9 = &_8->decl;
  D.254161 = hash_map<tree_node*, function_return_array>::get (function_return_collect.1024_6, _9);

  <bb 13> :
  _10 = D.254161;
  retval.1023 = _10 == 0B;
  if (retval.1023 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  // predicted unlikely by continue predictor.
  goto <bb 76>; [INV]

  <bb 15> :
  function_return_collect.1025_11 = function_return_collect;
  _12 = table_temp->node;
  D.254162 = cgraph_node::get_fun (_12);

  <bb 16> :
  _13 = D.254162;
  _14 = &_13->decl;
  D.254163 = hash_map<tree_node*, function_return_array>::get (function_return_collect.1025_11, _14);

  <bb 17> :
  _15 = D.254163;
  function_return_array::function_return_array (&fun_array, _15);

  <bb 18> :
  _16 = fun_array.return_type_num;
  if (_16 == 2)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  // predicted unlikely by continue predictor.
  finally_tmp.1046 = 0;
  goto <bb 73>; [INV]

  <bb 20> :
  std::vector<return_type>::vector (&ret_type_array, &fun_array.return_type_array);

  <bb 21> :
  _17 = table_temp->target;
  _18 = _17->base.code;
  if (_18 == 131)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  _19 = table_temp->target;
  second = _19->exp.operands[0];
  _20 = table_temp->target;
  def_stmt = _20->ssa_name.def_stmt;
  table_temp->target = second;
  table_temp->last_stmt = def_stmt;

  <bb 23> :
  i = 0;
  goto <bb 71>; [INV]

  <bb 24> :
  _21 = table_temp->last_stmt;
  _22 = gimple_code (_21);
  retval.1026 = _22 == 8;
  if (retval.1026 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 25> :
  if (name != 0B)
    goto <bb 26>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 26> :
  _23 = strcmp (name, "realloc");
  if (_23 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 27> :
  _24 = strcmp (name, "malloc");
  if (_24 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 28> :
  _25 = strcmp (name, "calloc");
  if (_25 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 29> :
  _26 = strcmp (name, "xmalloc");
  if (_26 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 30> :
  _27 = strcmp (name, "strdup");
  if (_27 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 31> :
  _28 = (long unsigned int) i;
  _29 = std::vector<return_type>::operator[] (&ret_type_array, _28);
  _30 = _29->return_tree;
  if (_30 != 0B)
    goto <bb 32>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 32> :
  _31 = table_temp->target;
  if (_31 != 0B)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  iftmp.1028 = 1;
  goto <bb 35>; [INV]

  <bb 34> :
  iftmp.1028 = 0;

  <bb 35> :
  retval.1027 = iftmp.1028;
  if (retval.1027 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 36> :
  _32 = (long unsigned int) i;
  _33 = std::vector<return_type>::operator[] (&ret_type_array, _32);
  _34 = _33->return_tree;
  _35 = _34->base.code;
  retval.1029 = _35 == 153;
  if (retval.1029 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 37> :
  _36 = (long unsigned int) i;
  _37 = std::vector<return_type>::operator[] (&ret_type_array, _36);
  _38 = _37->return_tree;
  _39 = table_temp->target;
  D.254164 = ptr_derefs_may_alias_p (_39, _38);

  <bb 38> :
  retval.1030 = D.254164;
  if (retval.1030 != 0)
    goto <bb 39>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 39> :
  fun_array.return_type_num = 2;
  function_return_collect.1031_40 = function_return_collect;
  _41 = table_temp->node;
  D.254165 = cgraph_node::get_fun (_41);

  <bb 40> :
  _42 = D.254165;
  _43 = &_42->decl;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.1031_40, _43, &fun_array);

  <bb 41> :
  goto <bb 51>; [INV]

  <bb 42> :
  _44 = strcmp (name, "pthread_create");
  if (_44 == 0)
    goto <bb 44>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 43> :
  _45 = strcmp (name, "pthread_join");
  if (_45 == 0)
    goto <bb 44>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 44> :
  _46 = strcmp (name, "pthread_create");
  if (_46 == 0)
    goto <bb 45>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 45> :
  pthread_attr_array::pthread_attr_array (&pthread_attr_array);
  _47 = table_temp->last_stmt;
  D.254166 = gimple_call_arg (_47, 1);

  <bb 46> :
  _48 = D.254166;
  _49 = _48->exp.operands[0];
  getvardecl = _49;
  pthread_attr_setdetachstates.1033_50 = pthread_attr_setdetachstates;
  D.254167 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.1033_50, &getvardecl);

  <bb 47> :
  _51 = D.254167;
  retval.1032 = _51 != 0B;
  if (retval.1032 != 0)
    goto <bb 48>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 48> :
  pthread_attr_setdetachstates.1034_52 = pthread_attr_setdetachstates;
  D.254168 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.1034_52, &getvardecl);

  <bb 49> :
  _53 = D.254168;
  pthread_attr_array = MEM[(const struct pthread_attr_array &)_53];
  FUNCITON_THREAD.1035_54 = FUNCITON_THREAD;
  FUNCITON_THREAD.1036_55 = (int) FUNCITON_THREAD.1035_54;
  table_temp->swap_type = FUNCITON_THREAD.1036_55;
  _56 = pthread_attr_array.attr_type_num;
  table_temp->pthread_type = _56;

  <bb 50> :
  pthread_attr_array = {CLOBBER};
  getvardecl = {CLOBBER};

  <bb 51> :
  goto <bb 70>; [INV]

  <bb 52> :
  _57 = table_temp->last_stmt;
  _58 = gimple_code (_57);
  retval.1037 = _58 == 6;
  if (retval.1037 != 0)
    goto <bb 53>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 53> :
  _59 = table_temp->swap_type;
  _60 = (unsigned int) _59;
  FUNCITON_THREAD.1038_61 = FUNCITON_THREAD;
  if (_60 == FUNCITON_THREAD.1038_61)
    goto <bb 54>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 54> :
  _62 = table_temp->swap_stmt;
  D.254170 = gimple_call_fn (_62);

  <bb 55> :
  _63 = D.254170;
  D.254171 = get_name (_63);

  <bb 56> :
  name = D.254171;
  _64 = strcmp (name, "pthread_create");
  if (_64 == 0)
    goto <bb 58>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 57> :
  _65 = strcmp (name, "pthread_join");
  if (_65 == 0)
    goto <bb 58>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 58> :
  _66 = strcmp (name, "pthread_create");
  if (_66 == 0)
    goto <bb 59>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 59> :
  pthread_attr_array::pthread_attr_array (&pthread_attr_array);
  _67 = table_temp->swap_stmt;
  D.254172 = gimple_call_arg (_67, 1);

  <bb 60> :
  _68 = D.254172;
  _69 = _68->exp.operands[0];
  getvardecl = _69;
  pthread_attr_setdetachstates.1040_70 = pthread_attr_setdetachstates;
  D.254173 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.1040_70, &getvardecl);

  <bb 61> :
  _71 = D.254173;
  retval.1039 = _71 != 0B;
  if (retval.1039 != 0)
    goto <bb 62>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 62> :
  pthread_attr_setdetachstates.1041_72 = pthread_attr_setdetachstates;
  D.254174 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.1041_72, &getvardecl);

  <bb 63> :
  _73 = D.254174;
  pthread_attr_array = MEM[(const struct pthread_attr_array &)_73];
  _74 = pthread_attr_array.attr_type_num;
  table_temp->pthread_type = _74;

  <bb 64> :
  pthread_attr_array = {CLOBBER};
  getvardecl = {CLOBBER};
  goto <bb 70>; [INV]

  <bb 65> :
  _75 = table_temp->last_stmt;
  _76 = gimple_code (_75);
  retval.1042 = _76 == 18;
  if (retval.1042 != 0)
    goto <bb 66>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 66> :
  _77 = (long unsigned int) i;
  _78 = std::vector<return_type>::operator[] (&ret_type_array, _77);
  _79 = _78->return_tree;
  _80 = table_temp->last_stmt;
  D.254176 = gimple_phi_result (_80);

  <bb 67> :
  _81 = D.254176;
  retval.1043 = _79 == _81;
  if (retval.1043 != 0)
    goto <bb 68>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 68> :
  _82 = (long unsigned int) i;
  _83 = std::vector<return_type>::operator[] (&ret_type_array, _82);
  _84 = _83->stmt;
  _85 = (long unsigned int) i;
  _86 = std::vector<return_type>::operator[] (&ret_type_array, _85);
  _87 = _86->return_tree;
  _88 = (long unsigned int) i;
  _89 = std::vector<return_type>::operator[] (&ret_type_array, _88);
  _90 = _89->return_tree;
  _91 = table_temp->last_stmt;
  set_gimple_array (user_tmp, _91, _90, _87, _84);

  <bb 69> :
  // predicted unlikely by continue predictor.

  <bb 70> :
  i = i + 1;

  <bb 71> :
  _92 = (long unsigned int) i;
  _93 = std::vector<return_type>::size (&ret_type_array);
  retval.1044 = _92 < _93;
  if (retval.1044 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 72> :
  std::vector<return_type>::~vector (&ret_type_array);
  finally_tmp.1046 = 1;

  <bb 73> :
  function_return_array::~function_return_array (&fun_array);
  if (finally_tmp.1046 == 1)
    goto <bb 74>; [INV]
  else
    goto <bb 76>; [INV]

  <bb 74> :
<L73>:

  <bb 75> :
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  goto <bb 77>; [INV]

  <bb 76> :
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};

  <bb 77> :
  table_temp = table_temp->next;
  if (table_temp != 0B)
    goto <bb 78>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 78> :
  iftmp.1045 = table_temp->target;
  goto <bb 80>; [INV]

  <bb 79> :
  iftmp.1045 = 0B;

  <bb 80> :
  t = iftmp.1045;

  <bb 81> :
  _94 = table_temp->next;
  if (_94 != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 82> :
  start = {CLOBBER};
  return;

  <bb 83> :
<L88>:
  pthread_attr_array = {CLOBBER};
  getvardecl = {CLOBBER};
  resx 5

  <bb 84> :
<L89>:
  pthread_attr_array = {CLOBBER};
  getvardecl = {CLOBBER};
  resx 7

  <bb 85> :
<L90>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 4

  <bb 86> :
<L91>:
  function_return_array::~function_return_array (&fun_array);
  resx 3

  <bb 87> :
<L92>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  resx 2

  <bb 88> :
<L93>:
  start = {CLOBBER};
  resx 1

}



;; Function gimple_phi_result (_ZL17gimple_phi_resultPK6gimple, funcdef_no=2265, decl_uid=93420, cgraph_uid=1402, symbol_order=1562)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_phi_result (const struct gimple * gs)
{
  const struct gphi * D.254190;
  const struct gphi * phi_stmt;
  union tree_node * D.254188;

  <bb 2> :
  D.254190 = as_a<const gphi*, const gimple> (gs);
  phi_stmt = D.254190;
  D.254188 = gimple_phi_result (phi_stmt);

  <bb 3> :
<L0>:
  return D.254188;

}



;; Function as_a<const gphi*, const gimple> (_Z4as_aIPK4gphiK6gimpleET_PT0_, funcdef_no=7073, decl_uid=93408, cgraph_uid=3705, symbol_order=4488)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gphi * as_a<const gphi*, const gimple> (const struct gimple * p)
{
  const struct gphi * D.254193;
  const struct gphi * D.254191;

  <bb 2> :
  D.254193 = is_a_helper<const gphi*>::cast<gimple> (p);
  D.254191 = D.254193;

  <bb 3> :
<L0>:
  return D.254191;

}



;; Function is_a_helper<const gphi*>::cast<gimple> (_ZN11is_a_helperIPK4gphiE4castI6gimpleEES2_PKT_, funcdef_no=8085, decl_uid=207249, cgraph_uid=4717, symbol_order=5503)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gphi * is_a_helper<const gphi*>::cast<gimple> (const struct gimple * p)
{
  const struct gphi * D.254194;

  <bb 2> :
  D.254194 = reinterpret_is_a_helper<gphi*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.254194;

}



;; Function reinterpret_is_a_helper<gphi*>::cast<gimple> (_ZN23reinterpret_is_a_helperIP4gphiE4castI6gimpleEES1_PT_, funcdef_no=8087, decl_uid=207257, cgraph_uid=4719, symbol_order=5505)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gphi * reinterpret_is_a_helper<gphi*>::cast<gimple> (struct gimple * p)
{
  struct gphi * D.254196;

  <bb 2> :
  D.254196 = p;

  <bb 3> :
<L0>:
  return D.254196;

}



;; Function gimple_phi_result (_ZL17gimple_phi_resultPK4gphi, funcdef_no=2264, decl_uid=93417, cgraph_uid=1401, symbol_order=1561)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_phi_result (const struct gphi * gs)
{
  union tree_node * D.254198;

  <bb 2> :
  D.254198 = gs->result;

  <bb 3> :
<L0>:
  return D.254198;

}



;; Function FunctionStmtMappingAssign (_Z25FunctionStmtMappingAssignP3ptbP12gimple_array, funcdef_no=6408, decl_uid=187037, cgraph_uid=3384, symbol_order=4161)

Removing basic block 21
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
;;
;; Loop 1
;;  header 28, latch 27
;;  depth 1, outer 0
;;  nodes: 28 27 26 6 11 25 24 13 23 22 14 21 19 20 17 18 16 15 12 9 8 7 5 4 10
;;
;; Loop 2
;;  header 24, latch 23
;;  depth 2, outer 1
;;  nodes: 24 23 22 14 21 19 20 17 18 16 15
;;
;; Loop 3
;;  header 22, latch 21
;;  depth 3, outer 2
;;  nodes: 22 21 19 20 17 18 16 15
;; 2 succs { 31 3 }
;; 3 succs { 28 }
;; 4 succs { 31 5 }
;; 5 succs { 6 7 }
;; 6 succs { 26 }
;; 7 succs { 31 8 }
;; 8 succs { 31 9 }
;; 9 succs { 10 12 }
;; 10 succs { 31 11 }
;; 11 succs { 26 }
;; 12 succs { 31 13 }
;; 13 succs { 24 }
;; 14 succs { 22 }
;; 15 succs { 17 16 }
;; 16 succs { 17 18 }
;; 17 succs { 19 }
;; 18 succs { 19 }
;; 19 succs { 20 21 }
;; 20 succs { 30 21 }
;; 21 succs { 22 }
;; 22 succs { 15 23 }
;; 23 succs { 24 }
;; 24 succs { 14 25 }
;; 25 succs { 31 26 }
;; 26 succs { 31 27 }
;; 27 succs { 28 }
;; 28 succs { 4 29 }
;; 29 succs { 1 }
;; 30 succs { 31 }
;; 31 succs { }
void FunctionStmtMappingAssign (struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct cgraph_node * D.254219;
  struct function * D.254217;
  bool D.254216;
  struct cgraph_node * D.254215;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct cgraph_node * node;
  struct basic_block_def * bb;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;
  bool retval.1053;
  bool iftmp.1052;
  bool retval.1051;
  bool retval.1048;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  symtab.1047_1 = symtab;
  D.254215 = symbol_table::first_defined_function (symtab.1047_1);

  <bb 3> :
  node = D.254215;
  goto <bb 28>; [INV]

  <bb 4> :
  _2 = node->D.97512.decl;
  D.254216 = gimple_has_body_p (_2);

  <bb 5> :
  _3 = D.254216;
  retval.1048 = ~_3;
  if (retval.1048 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  // predicted unlikely by continue predictor.
  goto <bb 26>; [INV]

  <bb 7> :
  D.254217 = cgraph_node::get_fun (node);

  <bb 8> :
  _4 = D.254217;
  push_cfun (_4);

  <bb 9> :
  cfun.1049_5 = cfun;
  if (cfun.1049_5 == 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  pop_cfun ();

  <bb 11> :
  // predicted unlikely by continue predictor.
  goto <bb 26>; [INV]

  <bb 12> :
  calculate_dominance_info (1);

  <bb 13> :
  cfun.1050_6 = cfun;
  _7 = cfun.1050_6->cfg;
  _8 = _7->x_entry_block_ptr;
  bb = _8->next_bb;
  goto <bb 24>; [INV]

  <bb 14> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 22>; [INV]

  <bb 15> :
  gc = gsi_stmt (gsi);
  _9 = is_gimple_call (gc);
  if (_9 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  _10 = is_gimple_assign (gc);
  if (_10 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  iftmp.1052 = 1;
  goto <bb 19>; [INV]

  <bb 18> :
  iftmp.1052 = 0;

  <bb 19> :
  retval.1051 = iftmp.1052;
  if (retval.1051 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  collect_FunctionMapping_Assign (gc, node, bb, ptable);

  <bb 21> :
  gsi_next (&gsi);

  <bb 22> :
  _11 = gsi_end_p (gsi);
  retval.1053 = ~_11;
  if (retval.1053 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 23> :
  gsi = {CLOBBER};
  bb = bb->next_bb;

  <bb 24> :
  cfun.1054_12 = cfun;
  _13 = cfun.1054_12->cfg;
  _14 = _13->x_exit_block_ptr;
  if (bb != _14)
    goto <bb 14>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 25> :
  pop_cfun ();

  <bb 26> :
  symtab.1055_15 = symtab;
  D.254219 = symbol_table::next_defined_function (symtab.1055_15, node);

  <bb 27> :
  node = D.254219;

  <bb 28> :
  if (node != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 29> :
  start = {CLOBBER};
  return;

  <bb 30> :
<L21>:
  gsi = {CLOBBER};
  resx 2

  <bb 31> :
<L22>:
  start = {CLOBBER};
  resx 1

}



;; Function parseLine (_Z9parseLinePc, funcdef_no=6409, decl_uid=195884, cgraph_uid=3385, symbol_order=4162)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3 5
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 3 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
int parseLine (char * line)
{
  const char * p;
  int i;
  int D.254222;

  <bb 2> :
  _1 = strlen (line);
  i = (int) _1;
  p = line;
  goto <bb 4>; [INV]

  <bb 3> :
  p = p + 1;

  <bb 4> :
  _2 = *p;
  if (_2 <= 47)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _3 = *p;
  if (_3 > 57)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _4 = (sizetype) i;
  _5 = _4 + 18446744073709551613;
  _6 = line + _5;
  *_6 = 0;
  i = atoi (p);
  D.254222 = i;

  <bb 7> :
<L4>:
  return D.254222;

}



;; Function GetProcessMemory (_Z16GetProcessMemoryv, funcdef_no=6410, decl_uid=195896, cgraph_uid=3386, symbol_order=4163)

Merging blocks 13 and 14
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;;
;; Loop 1
;;  header 10, latch 7
;;  depth 1, outer 0
;;  nodes: 10 7 4 11
;; 2 succs { 15 3 }
;; 3 succs { 10 }
;; 4 succs { 5 7 }
;; 5 succs { 15 6 }
;; 6 succs { 12 }
;; 7 succs { 8 10 }
;; 8 succs { 15 9 }
;; 9 succs { 12 }
;; 10 succs { 15 11 }
;; 11 succs { 4 12 }
;; 12 succs { 15 13 }
;; 13 succs { 14 }
;; 14 succs { 1 }
;; 15 succs { }
struct processMem_t GetProcessMemory ()
{
  char * D.254234;
  int D.254233;
  int D.254232;
  struct FILE * D.254231;
  struct processMem_t processMem;
  char line[128];
  struct FILE * file;
  struct processMem_t D.254229;
  bool retval.1056;

  <bb 2> :
  D.254231 = fopen ("/proc/self/status", "r");

  <bb 3> :
  file = D.254231;
  goto <bb 10>; [INV]

  <bb 4> :
  _1 = strncmp (&line, "VmSize:", 7);
  if (_1 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.254232 = parseLine (&line);

  <bb 6> :
  _2 = D.254232;
  _3 = (unsigned int) _2;
  processMem.virtualMem = _3;
  goto <bb 12>; [INV]

  <bb 7> :
  _4 = strncmp (&line, "VmRSS:", 6);
  if (_4 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  D.254233 = parseLine (&line);

  <bb 9> :
  _5 = D.254233;
  _6 = (unsigned int) _5;
  processMem.physicalMem = _6;
  goto <bb 12>; [INV]

  <bb 10> :
  D.254234 = fgets (&line, 128, file);

  <bb 11> :
  _7 = D.254234;
  retval.1056 = _7 != 0B;
  if (retval.1056 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  fclose (file);

  <bb 13> :
  D.254229 = processMem;
  line = {CLOBBER};
  processMem = {CLOBBER};

  <bb 14> :
<L8>:
  return D.254229;

  <bb 15> :
<L9>:
  line = {CLOBBER};
  processMem = {CLOBBER};
  resx 1

}



;; Function diff (_Z4diff8timespecS_, funcdef_no=6411, decl_uid=187040, cgraph_uid=3387, symbol_order=4164)

Merging blocks 5 and 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct timespec diff (struct timespec start, struct timespec end)
{
  struct timespec temp;
  struct timespec D.254240;

  <bb 2> :
  _1 = end.tv_nsec;
  _2 = start.tv_nsec;
  _3 = _1 - _2;
  if (_3 < 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = end.tv_sec;
  _5 = start.tv_sec;
  _6 = _4 - _5;
  _7 = _6 + -1;
  temp.tv_sec = _7;
  _8 = end.tv_nsec;
  _9 = _8 + 1000000000;
  _10 = start.tv_nsec;
  _11 = _9 - _10;
  temp.tv_nsec = _11;
  goto <bb 5>; [INV]

  <bb 4> :
  _12 = end.tv_sec;
  _13 = start.tv_sec;
  _14 = _12 - _13;
  temp.tv_sec = _14;
  _15 = end.tv_nsec;
  _16 = start.tv_nsec;
  _17 = _15 - _16;
  temp.tv_nsec = _17;

  <bb 5> :
  D.254240 = temp;
  temp = {CLOBBER};

  <bb 6> :
<L4>:
  return D.254240;

}



;; Function Varnew_search_imm_use (_Z21Varnew_search_imm_useP12gimple_arrayP6gimpleP9tree_nodeS4_, funcdef_no=6414, decl_uid=196211, cgraph_uid=3394, symbol_order=4171)

Removing basic block 28
Removing basic block 29
Removing basic block 42
Removing basic block 47
Removing basic block 57
Removing basic block 58
Removing basic block 84
Removing basic block 85
Removing basic block 93
Removing basic block 94
Removing basic block 110
Removing basic block 111
Removing basic block 114
Removing basic block 115
Removing basic block 146
Removing basic block 147
Removing basic block 148
Removing basic block 149
Removing basic block 150
Removing basic block 161
Removing basic block 162
Removing basic block 163
Removing basic block 164
Removing basic block 187
Removing basic block 188
Removing basic block 189
Removing basic block 190
Removing basic block 205
Removing basic block 206
Removing basic block 207
Removing basic block 208
Removing basic block 209
Removing basic block 220
Removing basic block 221
Removing basic block 222
Removing basic block 223
Removing basic block 246
Removing basic block 247
Removing basic block 248
Removing basic block 249
Removing basic block 250
Removing basic block 253
Removing basic block 254
Removing basic block 255
Removing basic block 257
Removing basic block 258
Removing basic block 260
Removing basic block 276
Removing basic block 287
Removing basic block 288
Removing basic block 289
Removing basic block 292
Removing basic block 293
Removing basic block 327
Removing basic block 328
Removing basic block 329
Removing basic block 330
Removing basic block 331
Removing basic block 345
Removing basic block 346
Removing basic block 347
Removing basic block 348
Removing basic block 371
Removing basic block 372
Removing basic block 373
Removing basic block 374
Removing basic block 392
Removing basic block 393
Removing basic block 394
Removing basic block 395
Removing basic block 396
Removing basic block 410
Removing basic block 411
Removing basic block 412
Removing basic block 413
Removing basic block 414
Removing basic block 415
Removing basic block 437
Removing basic block 438
Removing basic block 439
Removing basic block 440
Removing basic block 441
Removing basic block 444
Removing basic block 445
Removing basic block 446
Removing basic block 448
Removing basic block 449
Removing basic block 453
Removing basic block 454
Removing basic block 455
Removing basic block 466
Removing basic block 477
Removing basic block 491
Removing basic block 505
Removing basic block 506
Removing basic block 507
Removing basic block 508
Removing basic block 509
Removing basic block 510
Removing basic block 511
Removing basic block 519
Removing basic block 534
Removing basic block 535
Removing basic block 536
Removing basic block 560
Removing basic block 561
Removing basic block 562
Removing basic block 563
Removing basic block 564
Removing basic block 565
Removing basic block 566
Removing basic block 567
Removing basic block 568
Removing basic block 581
Removing basic block 594
Removing basic block 595
Removing basic block 596
Removing basic block 597
Removing basic block 598
Removing basic block 599
Removing basic block 612
Removing basic block 615
Removing basic block 616
Removing basic block 617
Removing basic block 625
Removing basic block 642
Removing basic block 643
Removing basic block 644
Removing basic block 645
Removing basic block 669
Removing basic block 670
Removing basic block 671
Removing basic block 672
Removing basic block 673
Removing basic block 674
Removing basic block 675
Removing basic block 676
Removing basic block 677
Removing basic block 698
Removing basic block 699
Removing basic block 700
Removing basic block 701
Removing basic block 702
Removing basic block 703
Removing basic block 711
Removing basic block 714
Removing basic block 715
Removing basic block 716
Removing basic block 717
Removing basic block 740
Removing basic block 741
Removing basic block 744
Removing basic block 747
Removing basic block 760
Removing basic block 761
Removing basic block 766
Removing basic block 767
Removing basic block 770
Removing basic block 777
Removing basic block 793
Removing basic block 794
Removing basic block 795
Removing basic block 796
Removing basic block 799
Removing basic block 800
Removing basic block 801
Removing basic block 802
Removing basic block 803
Removing basic block 806
;; 6 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 3
;;  header 637, latch 636
;;  depth 1, outer 0
;;  nodes
;;
;; Loop 5
;;  header 612, latch 611
;;  depth 2, outer 3
;;  nodes: 612 611 599 608 606 603 610 609 602 601 600 605 604 607 598 597
;;
;; Loop 4
;;  header 635, latch 634
;;  depth 2, outer 3
;;  nodes: 635 634 623 633 625 630 628 627 626 629 624 632 631 622 621
;;
;; Loop 2
;;  header 361, latch 360
;;  depth 1, outer 0
;;  nodes: 361 360 256 310 308 347 354 344 296 303 293 359 358 357 356 355 291 292 289 290 287 288 275 276 273 274 264 267 272 269 265 268 271 270 266 263 261 262 259 260 258 257 277 286 278 282 285 280 279 284 283 281 301 302 298 300 299 297 295 294 342 343 340 341 338 339 328 330 334 337 332 329 331 336 335 333 327 325 326 316 319 324 321 317 320 323 322 318 315 313 314 311 312 352 353 349 351 350 348 346 345 307 306 305 304 309
;;
;; Loop 1
;;  header 211, latch 210
;;  depth 1, outer 0
;;  nodes: 211 210 117 165 163 197 204 194 151 158 148 209 208 207 206 205 146 147 144 145 142 143 133 134 131 132 125 128 130 129 127 126 124 122 123 120 121 119 118 135 141 137 139 140 138 136 156 157 153 155 154 152 150 149 192 193 190 191 188 189 179 180 177 178 171 174 176 175 173 172 170 168 169 166 167 181 187 183 185 186 184 182 202 203 199 201 200 198 196 195 162 161 160 159 164
;; 2 succs { 3 4 }
;; 3 succs { 28 }
;; 4 succs { 5 6 }
;; 5 succs { 16 6 }
;; 6 succs { 7 8 }
;; 7 succs { 16 8 }
;; 8 succs { 9 10 }
;; 9 succs { 16 10 }
;; 10 succs { 11 12 }
;; 11 succs { 16 12 }
;; 12 succs { 13 14 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 28 }
;; 20 succs { 21 28 }
;; 21 succs { 22 24 }
;; 22 succs { 23 24 }
;; 23 succs { 25 }
;; 24 succs { 25 }
;; 25 succs { 26 28 }
;; 26 succs { 27 28 }
;; 27 succs { 28 }
;; 28 succs { 29 640 }
;; 29 succs { 31 30 }
;; 30 succs { 31 32 }
;; 31 succs { 33 }
;; 32 succs { 33 }
;; 33 succs { 34 366 }
;; 34 succs { 35 44 }
;; 35 succs { 651 36 }
;; 36 succs { 37 40 }
;; 37 succs { 651 38 }
;; 38 succs { 39 366 }
;; 39 succs { 366 }
;; 40 succs { 651 41 }
;; 41 succs { 42 366 }
;; 42 succs { 651 43 }
;; 43 succs { 366 }
;; 44 succs { 45 366 }
;; 45 succs { 46 53 }
;; 46 succs { 47 49 }
;; 47 succs { 48 49 }
;; 48 succs { 50 }
;; 49 succs { 50 }
;; 50 succs { 51 53 }
;; 51 succs { 52 53 }
;; 52 succs { 53 }
;; 53 succs { 651 54 }
;; 54 succs { 55 58 }
;; 55 succs { 651 56 }
;; 56 succs { 57 58 }
;; 57 succs { 59 }
;; 58 succs { 59 }
;; 59 succs { 60 62 }
;; 60 succs { 651 61 }
;; 61 succs { 62 }
;; 62 succs { 651 63 }
;; 63 succs { 64 67 }
;; 64 succs { 651 65 }
;; 65 succs { 66 67 }
;; 66 succs { 68 }
;; 67 succs { 68 }
;; 68 succs { 69 71 }
;; 69 succs { 651 70 }
;; 70 succs { 71 }
;; 71 succs { 651 72 }
;; 72 succs { 73 78 }
;; 73 succs { 651 74 }
;; 74 succs { 75 78 }
;; 75 succs { 651 76 }
;; 76 succs { 77 78 }
;; 77 succs { 78 }
;; 78 succs { 651 79 }
;; 79 succs { 80 85 }
;; 80 succs { 651 81 }
;; 81 succs { 82 85 }
;; 82 succs { 651 83 }
;; 83 succs { 84 85 }
;; 84 succs { 85 }
;; 85 succs { 651 86 }
;; 86 succs { 87 214 }
;; 87 succs { 651 88 }
;; 88 succs { 89 214 }
;; 89 succs { 644 90 }
;; 90 succs { 644 91 }
;; 91 succs { 92 213 }
;; 92 succs { 93 102 }
;; 93 succs { 94 104 }
;; 94 succs { 95 100 }
;; 95 succs { 96 104 }
;; 96 succs { 644 97 }
;; 97 succs { 98 104 }
;; 98 succs { 644 99 }
;; 99 succs { 104 }
;; 100 succs { 101 104 }
;; 101 succs { 104 }
;; 102 succs { 103 104 }
;; 103 succs { 104 }
;; 104 succs { 105 213 }
;; 105 succs { 106 213 }
;; 106 succs { 107 108 }
;; 107 succs { 108 }
;; 108 succs { 641 109 }
;; 109 succs { 110 212 }
;; 110 succs { 641 111 }
;; 111 succs { 641 112 }
;; 112 succs { 641 113 }
;; 113 succs { 641 114 }
;; 114 succs { 115 212 }
;; 115 succs { 116 212 }
;; 116 succs { 211 }
;; 117 succs { 118 210 }
;; 118 succs { 641 119 }
;; 119 succs { 120 164 }
;; 120 succs { 121 122 }
;; 121 succs { 122 }
;; 122 succs { 123 124 }
;; 123 succs { 124 }
;; 124 succs { 125 132 }
;; 125 succs { 126 133 }
;; 126 succs { 641 127 }
;; 127 succs { 128 133 }
;; 128 succs { 129 133 }
;; 129 succs { 130 133 }
;; 130 succs { 131 133 }
;; 131 succs { 133 }
;; 132 succs { 133 }
;; 133 succs { 134 143 }
;; 134 succs { 135 143 }
;; 135 succs { 136 142 }
;; 136 succs { 641 137 }
;; 137 succs { 138 142 }
;; 138 succs { 139 142 }
;; 139 succs { 140 142 }
;; 140 succs { 141 142 }
;; 141 succs { 142 }
;; 142 succs { 144 }
;; 143 succs { 144 }
;; 144 succs { 145 146 }
;; 145 succs { 146 }
;; 146 succs { 147 148 }
;; 147 succs { 148 }
;; 148 succs { 149 210 }
;; 149 succs { 641 150 }
;; 150 succs { 641 151 }
;; 151 succs { 152 210 }
;; 152 succs { 641 153 }
;; 153 succs { 154 157 }
;; 154 succs { 641 155 }
;; 155 succs { 156 157 }
;; 156 succs { 158 }
;; 157 succs { 158 }
;; 158 succs { 159 210 }
;; 159 succs { 641 160 }
;; 160 succs { 641 161 }
;; 161 succs { 641 162 }
;; 162 succs { 641 163 }
;; 163 succs { 641 210 }
;; 164 succs { 641 165 }
;; 165 succs { 166 210 }
;; 166 succs { 167 168 }
;; 167 succs { 168 }
;; 168 succs { 169 170 }
;; 169 succs { 170 }
;; 170 succs { 171 178 }
;; 171 succs { 172 179 }
;; 172 succs { 641 173 }
;; 173 succs { 174 179 }
;; 174 succs { 175 179 }
;; 175 succs { 176 179 }
;; 176 succs { 177 179 }
;; 177 succs { 179 }
;; 178 succs { 179 }
;; 179 succs { 180 189 }
;; 180 succs { 181 189 }
;; 181 succs { 182 188 }
;; 182 succs { 641 183 }
;; 183 succs { 184 188 }
;; 184 succs { 185 188 }
;; 185 succs { 186 188 }
;; 186 succs { 187 188 }
;; 187 succs { 188 }
;; 188 succs { 190 }
;; 189 succs { 190 }
;; 190 succs { 191 192 }
;; 191 succs { 192 }
;; 192 succs { 193 194 }
;; 193 succs { 194 }
;; 194 succs { 195 210 }
;; 195 succs { 641 196 }
;; 196 succs { 641 197 }
;; 197 succs { 198 210 }
;; 198 succs { 641 199 }
;; 199 succs { 200 203 }
;; 200 succs { 641 201 }
;; 201 succs { 202 203 }
;; 202 succs { 204 }
;; 203 succs { 204 }
;; 204 succs { 205 210 }
;; 205 succs { 641 206 }
;; 206 succs { 641 207 }
;; 207 succs { 641 208 }
;; 208 succs { 641 209 }
;; 209 succs { 641 210 }
;; 210 succs { 211 }
;; 211 succs { 117 212 }
;; 212 succs { 213 }
;; 213 succs { 214 }
;; 214 succs { 651 215 }
;; 215 succs { 216 366 }
;; 216 succs { 651 217 }
;; 217 succs { 218 366 }
;; 218 succs { 648 219 }
;; 219 succs { 648 220 }
;; 220 succs { 221 363 }
;; 221 succs { 222 241 }
;; 222 succs { 223 241 }
;; 223 succs { 224 239 }
;; 224 succs { 225 229 }
;; 225 succs { 648 226 }
;; 226 succs { 227 229 }
;; 227 succs { 648 228 }
;; 228 succs { 229 }
;; 229 succs { 648 230 }
;; 230 succs { 231 241 }
;; 231 succs { 232 235 }
;; 232 succs { 648 233 }
;; 233 succs { 234 235 }
;; 234 succs { 236 }
;; 235 succs { 236 }
;; 236 succs { 237 241 }
;; 237 succs { 648 238 }
;; 238 succs { 648 241 }
;; 239 succs { 240 241 }
;; 240 succs { 241 }
;; 241 succs { 242 365 }
;; 242 succs { 243 365 }
;; 243 succs { 244 245 }
;; 244 succs { 245 }
;; 245 succs { 645 246 }
;; 246 succs { 247 362 }
;; 247 succs { 645 248 }
;; 248 succs { 645 249 }
;; 249 succs { 645 250 }
;; 250 succs { 645 251 }
;; 251 succs { 252 362 }
;; 252 succs { 253 254 }
;; 253 succs { 254 }
;; 254 succs { 255 362 }
;; 255 succs { 361 }
;; 256 succs { 257 360 }
;; 257 succs { 645 258 }
;; 258 succs { 259 309 }
;; 259 succs { 260 261 }
;; 260 succs { 261 }
;; 261 succs { 262 263 }
;; 262 succs { 263 }
;; 263 succs { 264 274 }
;; 264 succs { 265 275 }
;; 265 succs { 266 275 }
;; 266 succs { 645 267 }
;; 267 succs { 268 275 }
;; 268 succs { 645 269 }
;; 269 succs { 270 275 }
;; 270 succs { 271 273 }
;; 271 succs { 645 272 }
;; 272 succs { 275 }
;; 273 succs { 275 }
;; 274 succs { 275 }
;; 275 succs { 276 288 }
;; 276 succs { 277 288 }
;; 277 succs { 278 287 }
;; 278 succs { 279 287 }
;; 279 succs { 645 280 }
;; 280 succs { 281 287 }
;; 281 succs { 645 282 }
;; 282 succs { 283 287 }
;; 283 succs { 284 286 }
;; 284 succs { 645 285 }
;; 285 succs { 287 }
;; 286 succs { 287 }
;; 287 succs { 289 }
;; 288 succs { 289 }
;; 289 succs { 290 291 }
;; 290 succs { 291 }
;; 291 succs { 292 293 }
;; 292 succs { 293 }
;; 293 succs { 294 360 }
;; 294 succs { 645 295 }
;; 295 succs { 645 296 }
;; 296 succs { 297 360 }
;; 297 succs { 645 298 }
;; 298 succs { 299 302 }
;; 299 succs { 645 300 }
;; 300 succs { 301 302 }
;; 301 succs { 303 }
;; 302 succs { 303 }
;; 303 succs { 304 360 }
;; 304 succs { 645 305 }
;; 305 succs { 645 306 }
;; 306 succs { 645 307 }
;; 307 succs { 645 308 }
;; 308 succs { 645 360 }
;; 309 succs { 645 310 }
;; 310 succs { 311 360 }
;; 311 succs { 312 313 }
;; 312 succs { 313 }
;; 313 succs { 314 315 }
;; 314 succs { 315 }
;; 315 succs { 316 326 }
;; 316 succs { 317 327 }
;; 317 succs { 318 327 }
;; 318 succs { 645 319 }
;; 319 succs { 320 327 }
;; 320 succs { 645 321 }
;; 321 succs { 322 327 }
;; 322 succs { 323 325 }
;; 323 succs { 645 324 }
;; 324 succs { 327 }
;; 325 succs { 327 }
;; 326 succs { 327 }
;; 327 succs { 328 339 }
;; 328 succs { 329 340 }
;; 329 succs { 330 340 }
;; 330 succs { 331 340 }
;; 331 succs { 645 332 }
;; 332 succs { 333 340 }
;; 333 succs { 645 334 }
;; 334 succs { 335 340 }
;; 335 succs { 336 338 }
;; 336 succs { 645 337 }
;; 337 succs { 340 }
;; 338 succs { 340 }
;; 339 succs { 340 }
;; 340 succs { 341 342 }
;; 341 succs { 342 }
;; 342 succs { 343 344 }
;; 343 succs { 344 }
;; 344 succs { 345 360 }
;; 345 succs { 645 346 }
;; 346 succs { 645 347 }
;; 347 succs { 348 360 }
;; 348 succs { 645 349 }
;; 349 succs { 350 353 }
;; 350 succs { 645 351 }
;; 351 succs { 352 353 }
;; 352 succs { 354 }
;; 353 succs { 354 }
;; 354 succs { 355 360 }
;; 355 succs { 645 356 }
;; 356 succs { 645 357 }
;; 357 succs { 645 358 }
;; 358 succs { 645 359 }
;; 359 succs { 645 360 }
;; 360 succs { 361 }
;; 361 succs { 256 362 }
;; 362 succs { 365 }
;; 363 succs { 364 365 }
;; 364 succs { 365 }
;; 365 succs { 366 }
;; 366 succs { 651 367 }
;; 367 succs { 651 368 }
;; 368 succs { 369 372 }
;; 369 succs { 651 370 }
;; 370 succs { 371 372 }
;; 371 succs { 373 }
;; 372 succs { 373 }
;; 373 succs { 374 376 }
;; 374 succs { 651 375 }
;; 375 succs { 651 386 }
;; 376 succs { 651 377 }
;; 377 succs { 651 378 }
;; 378 succs { 379 382 }
;; 379 succs { 651 380 }
;; 380 succs { 381 382 }
;; 381 succs { 383 }
;; 382 succs { 383 }
;; 383 succs { 384 386 }
;; 384 succs { 651 385 }
;; 385 succs { 651 386 }
;; 386 succs { 387 639 }
;; 387 succs { 649 388 }
;; 388 succs { 389 638 }
;; 389 succs { 649 390 }
;; 390 succs { 637 }
;; 391 succs { 392 569 }
;; 392 succs { 649 393 }
;; 393 succs { 394 412 }
;; 394 succs { 649 395 }
;; 395 succs { 649 396 }
;; 396 succs { 397 636 }
;; 397 succs { 398 399 }
;; 398 succs { 649 401 }
;; 399 succs { 649 400 }
;; 400 succs { 649 401 }
;; 401 succs { 649 402 }
;; 402 succs { 403 636 }
;; 403 succs { 404 636 }
;; 404 succs { 405 636 }
;; 405 succs { 649 406 }
;; 406 succs { 407 636 }
;; 407 succs { 649 408 }
;; 408 succs { 409 636 }
;; 409 succs { 649 410 }
;; 410 succs { 649 411 }
;; 411 succs { 649 636 }
;; 412 succs { 649 413 }
;; 413 succs { 414 494 }
;; 414 succs { 649 415 }
;; 415 succs { 649 416 }
;; 416 succs { 417 433 }
;; 417 succs { 418 419 }
;; 418 succs { 649 421 }
;; 419 succs { 649 420 }
;; 420 succs { 649 421 }
;; 421 succs { 649 422 }
;; 422 succs { 423 433 }
;; 423 succs { 649 424 }
;; 424 succs { 425 428 }
;; 425 succs { 649 426 }
;; 426 succs { 427 428 }
;; 427 succs { 429 }
;; 428 succs { 429 }
;; 429 succs { 430 433 }
;; 430 succs { 649 431 }
;; 431 succs { 649 432 }
;; 432 succs { 649 433 }
;; 433 succs { 649 434 }
;; 434 succs { 435 438 }
;; 435 succs { 649 436 }
;; 436 succs { 437 438 }
;; 437 succs { 439 }
;; 438 succs { 439 }
;; 439 succs { 440 456 }
;; 440 succs { 649 441 }
;; 441 succs { 649 442 }
;; 442 succs { 443 636 }
;; 443 succs { 649 444 }
;; 444 succs { 445 636 }
;; 445 succs { 446 636 }
;; 446 succs { 447 636 }
;; 447 succs { 448 636 }
;; 448 succs { 449 636 }
;; 449 succs { 649 450 }
;; 450 succs { 451 636 }
;; 451 succs { 649 452 }
;; 452 succs { 453 636 }
;; 453 succs { 649 454 }
;; 454 succs { 649 455 }
;; 455 succs { 649 636 }
;; 456 succs { 649 457 }
;; 457 succs { 458 461 }
;; 458 succs { 649 459 }
;; 459 succs { 460 461 }
;; 460 succs { 462 }
;; 461 succs { 462 }
;; 462 succs { 463 480 }
;; 463 succs { 649 464 }
;; 464 succs { 649 465 }
;; 465 succs { 466 636 }
;; 466 succs { 467 468 }
;; 467 succs { 649 470 }
;; 468 succs { 649 469 }
;; 469 succs { 649 470 }
;; 470 succs { 649 471 }
;; 471 succs { 472 636 }
;; 472 succs { 473 636 }
;; 473 succs { 649 474 }
;; 474 succs { 475 636 }
;; 475 succs { 649 476 }
;; 476 succs { 477 636 }
;; 477 succs { 649 478 }
;; 478 succs { 649 479 }
;; 479 succs { 649 636 }
;; 480 succs { 649 481 }
;; 481 succs { 482 485 }
;; 482 succs { 649 483 }
;; 483 succs { 484 485 }
;; 484 succs { 486 }
;; 485 succs { 486 }
;; 486 succs { 487 636 }
;; 487 succs { 649 488 }
;; 488 succs { 649 489 }
;; 489 succs { 490 636 }
;; 490 succs { 491 492 }
;; 491 succs { 649 636 }
;; 492 succs { 649 493 }
;; 493 succs { 649 636 }
;; 494 succs { 649 495 }
;; 495 succs { 496 636 }
;; 496 succs { 649 497 }
;; 497 succs { 649 498 }
;; 498 succs { 499 517 }
;; 499 succs { 500 501 }
;; 500 succs { 649 503 }
;; 501 succs { 649 502 }
;; 502 succs { 649 503 }
;; 503 succs { 649 504 }
;; 504 succs { 505 517 }
;; 505 succs { 649 506 }
;; 506 succs { 507 517 }
;; 507 succs { 649 508 }
;; 508 succs { 509 512 }
;; 509 succs { 649 510 }
;; 510 succs { 511 512 }
;; 511 succs { 513 }
;; 512 succs { 513 }
;; 513 succs { 514 517 }
;; 514 succs { 649 515 }
;; 515 succs { 649 516 }
;; 516 succs { 649 517 }
;; 517 succs { 649 518 }
;; 518 succs { 519 522 }
;; 519 succs { 649 520 }
;; 520 succs { 521 522 }
;; 521 succs { 523 }
;; 522 succs { 523 }
;; 523 succs { 524 540 }
;; 524 succs { 649 525 }
;; 525 succs { 649 526 }
;; 526 succs { 527 636 }
;; 527 succs { 649 528 }
;; 528 succs { 529 636 }
;; 529 succs { 530 636 }
;; 530 succs { 531 636 }
;; 531 succs { 532 636 }
;; 532 succs { 533 636 }
;; 533 succs { 649 534 }
;; 534 succs { 535 636 }
;; 535 succs { 649 536 }
;; 536 succs { 537 636 }
;; 537 succs { 649 538 }
;; 538 succs { 649 539 }
;; 539 succs { 649 636 }
;; 540 succs { 649 541 }
;; 541 succs { 542 545 }
;; 542 succs { 649 543 }
;; 543 succs { 544 545 }
;; 544 succs { 546 }
;; 545 succs { 546 }
;; 546 succs { 547 560 }
;; 547 succs { 649 548 }
;; 548 succs { 649 549 }
;; 549 succs { 550 636 }
;; 550 succs { 649 551 }
;; 551 succs { 552 636 }
;; 552 succs { 553 636 }
;; 553 succs { 649 554 }
;; 554 succs { 555 636 }
;; 555 succs { 649 556 }
;; 556 succs { 557 636 }
;; 557 succs { 649 558 }
;; 558 succs { 649 559 }
;; 559 succs { 649 636 }
;; 560 succs { 649 561 }
;; 561 succs { 562 636 }
;; 562 succs { 649 563 }
;; 563 succs { 649 564 }
;; 564 succs { 565 636 }
;; 565 succs { 566 567 }
;; 566 succs { 649 636 }
;; 567 succs { 649 568 }
;; 568 succs { 649 636 }
;; 569 succs { 570 636 }
;; 570 succs { 571 636 }
;; 571 succs { 649 572 }
;; 572 succs { 573 636 }
;; 573 succs { 649 574 }
;; 574 succs { 649 575 }
;; 575 succs { 649 576 }
;; 576 succs { 579 577 }
;; 577 succs { 649 578 }
;; 578 succs { 579 580 }
;; 579 succs { 581 }
;; 580 succs { 581 }
;; 581 succs { 582 636 }
;; 582 succs { 649 583 }
;; 583 succs { 649 584 }
;; 584 succs { 585 613 }
;; 585 succs { 586 595 }
;; 586 succs { 587 591 }
;; 587 succs { 649 588 }
;; 588 succs { 589 595 }
;; 589 succs { 649 590 }
;; 590 succs { 649 595 }
;; 591 succs { 592 593 }
;; 592 succs { 649 595 }
;; 593 succs { 649 594 }
;; 594 succs { 649 595 }
;; 595 succs { 649 596 }
;; 596 succs { 612 }
;; 597 succs { 649 598 }
;; 598 succs { 649 599 }
;; 599 succs { 600 611 }
;; 600 succs { 649 601 }
;; 601 succs { 602 607 }
;; 602 succs { 649 603 }
;; 603 succs { 604 611 }
;; 604 succs { 649 605 }
;; 605 succs { 649 606 }
;; 606 succs { 649 611 }
;; 607 succs { 649 608 }
;; 608 succs { 609 611 }
;; 609 succs { 649 610 }
;; 610 succs { 649 611 }
;; 611 succs { 612 }
;; 612 succs { 597 636 }
;; 613 succs { 649 614 }
;; 614 succs { 615 636 }
;; 615 succs { 649 616 }
;; 616 succs { 617 619 }
;; 617 succs { 649 618 }
;; 618 succs { 649 619 }
;; 619 succs { 649 620 }
;; 620 succs { 635 }
;; 621 succs { 649 622 }
;; 622 succs { 649 623 }
;; 623 succs { 624 634 }
;; 624 succs { 649 625 }
;; 625 succs { 626 634 }
;; 626 succs { 649 627 }
;; 627 succs { 649 628 }
;; 628 succs { 629 634 }
;; 629 succs { 649 630 }
;; 630 succs { 631 634 }
;; 631 succs { 649 632 }
;; 632 succs { 649 633 }
;; 633 succs { 649 634 }
;; 634 succs { 635 }
;; 635 succs { 621 636 }
;; 636 succs { 637 }
;; 637 succs { 391 638 }
;; 638 succs { 639 }
;; 639 succs { 640 }
;; 640 succs { 1 }
;; 641 succs { 642 }
;; 642 succs { 643 }
;; 643 succs { 644 }
;; 644 succs { 651 }
;; 645 succs { 646 }
;; 646 succs { 647 }
;; 647 succs { 648 }
;; 648 succs { 651 }
;; 649 succs { 650 }
;; 650 succs { 651 }
;; 651 succs { }
void Varnew_search_imm_use (struct gimple_array * used_stmt, struct gimple * use_stmt, union tree_node * target, union tree_node * target2)
{
  union tree_node * D.255366;
  union tree_node * D.255365;
  union tree_node * D.255364;
  int D.255363;
  union tree_node * D.255362;
  union tree_node * D.255361;
  int D.255360;
  union tree_node * D.255359;
  unsigned int D.255358;
  union tree_node * D.255357;
  union tree_node * D.255356;
  int D.255355;
  union tree_node * D.255354;
  union tree_node * D.255353;
  union tree_node * D.255352;
  union tree_node * D.255351;
  union tree_node * D.255350;
  union tree_node * D.255349;
  int D.255348;
  union tree_node * D.255347;
  unsigned int D.255346;
  union tree_node * D.255345;
  union tree_node * D.255344;
  int D.255343;
  int D.255342;
  union tree_node * D.255341;
  union tree_node * D.255340;
  union tree_node * D.255339;
  const char * D.255338;
  union tree_node * D.255337;
  union tree_node * D.255336;
  union tree_node * D.255335;
  int D.255334;
  union tree_node * D.255333;
  union tree_node * D.255332;
  union tree_node * D.255331;
  union tree_node * D.255330;
  union tree_node * D.255329;
  union tree_node * D.255328;
  union tree_node * D.255327;
  int D.255326;
  union tree_node * D.255325;
  union tree_node * D.255324;
  union tree_node * D.255323;
  union tree_node * D.255322;
  union tree_node * D.255321;
  union tree_node * D.255320;
  union tree_node * D.255319;
  union tree_node * D.255318;
  int D.255317;
  union tree_node * D.255316;
  union tree_node * D.255315;
  union tree_node * D.255314;
  union tree_node * D.255313;
  union tree_node * D.255312;
  int D.255311;
  union tree_node * D.255310;
  int D.255309;
  union tree_node * D.255308;
  union tree_node * D.255307;
  int D.255306;
  union tree_node * D.255305;
  union tree_node * D.255304;
  union tree_node * D.255303;
  int D.255302;
  union tree_node * D.255301;
  union tree_node * D.255300;
  union tree_node * D.255299;
  union tree_node * D.255298;
  union tree_node * D.255297;
  union tree_node * D.255296;
  union tree_node * D.255295;
  union tree_node * D.255294;
  union tree_node * D.255293;
  int D.255292;
  union tree_node * D.255291;
  union tree_node * D.255290;
  union tree_node * D.255289;
  union tree_node * D.255288;
  union tree_node * D.255287;
  union tree_node * D.255286;
  union tree_node * D.255285;
  union tree_node * D.255284;
  int D.255283;
  union tree_node * D.255282;
  union tree_node * D.255281;
  union tree_node * D.255280;
  union tree_node * D.255279;
  union tree_node * D.255278;
  int D.255277;
  union tree_node * D.255276;
  int D.255275;
  union tree_node * D.255274;
  int D.255273;
  union tree_node * D.255272;
  union tree_node * D.255271;
  union tree_node * D.255270;
  union tree_node * D.255269;
  union tree_node * D.255268;
  union tree_node * D.255267;
  union tree_node * D.255266;
  union tree_node * D.255265;
  int D.255264;
  union tree_node * D.255263;
  union tree_node * D.255262;
  struct function_assign_array * D.255261;
  union tree_node * D.255260;
  int D.255259;
  int D.255258;
  union tree_node * D.255257;
  union tree_node * D.255256;
  int D.255255;
  int D.255254;
  union tree_node * D.255253;
  union tree_node * D.255248;
  union tree_node * D.255247;
  union tree_node * D.255246;
  int D.255245;
  union tree_node * D.255244;
  int D.255243;
  union tree_node * D.255242;
  union tree_node * D.255241;
  union tree_node * D.255240;
  union tree_node * D.255239;
  union tree_node * D.255238;
  union tree_node * D.255237;
  union tree_node * D.255236;
  union tree_node * D.255235;
  union tree_node * D.255234;
  union tree_node * D.255233;
  union tree_node * D.255232;
  int D.255231;
  union tree_node * D.255230;
  int D.255229;
  union tree_node * D.255228;
  union tree_node * D.255227;
  union tree_node * D.255226;
  union tree_node * D.255225;
  union tree_node * D.255224;
  union tree_node * D.255223;
  union tree_node * D.255222;
  union tree_node * D.255221;
  struct function_assign_array * D.255220;
  struct function_assign_array * D.255219;
  struct function_assign_array * D.255218;
  int D.255217;
  int D.255216;
  union tree_node * D.255215;
  union tree_node * D.255214;
  union tree_node * D.255213;
  union tree_node * D.255212;
  union tree_node * D.255211;
  union tree_node * D.255210;
  union tree_node * D.255205;
  union tree_node * D.255204;
  union tree_node * D.255203;
  int D.255202;
  union tree_node * D.255201;
  int D.255200;
  union tree_node * D.255199;
  union tree_node * D.255198;
  union tree_node * D.255197;
  union tree_node * D.255196;
  union tree_node * D.255195;
  union tree_node * D.255194;
  union tree_node * D.255193;
  int D.255192;
  union tree_node * D.255191;
  int D.255190;
  union tree_node * D.255189;
  union tree_node * D.255188;
  union tree_node * D.255187;
  union tree_node * D.255186;
  struct function_assign_array * D.255185;
  struct function_assign_array * D.255184;
  struct function_assign_array * D.255183;
  union tree_node * D.255182;
  union tree_node * D.255181;
  union tree_node * D.255180;
  union tree_node * D.255179;
  union tree_node * D.255178;
  union tree_node * D.255177;
  union tree_node * D.255176;
  union tree_node * D.255175;
  union tree_node * D.255174;
  union tree_node * D.255173;
  union tree_node * D.255172;
  union tree_node * D.255171;
  union tree_node * D.255170;
  union tree_node * D.255169;
  union tree_node * D.255168;
  union tree_node * D.255167;
  union tree_node * D.255166;
  union tree_node * D.255165;
  union tree_node * D.255164;
  union tree_node * D.255163;
  union tree_node * D.255162;
  union tree_node * D.255161;
  union tree_node * D.255160;
  union tree_node * D.255159;
  union tree_node * D.255158;
  union tree_node * D.255157;
  union tree_node * D.255156;
  union tree_node * D.255155;
  union tree_node * D.255154;
  union tree_node * D.255153;
  union tree_node * D.255152;
  union tree_node * D.255151;
  union tree_node * D.255150;
  union tree_node * D.255149;
  int i;
  int size;
  int i;
  int size;
  const char * name;
  struct gimple * def_stmt;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * second;
  struct gimple * nowstmt;
  int i;
  struct function_assign_array assign_array;
  struct gimple * def_stmt2;
  union tree_node * treecheck2;
  struct gimple * def_stmt2;
  struct gimple * def_stmt;
  union tree_node * treecheck;
  union tree_node * filed_from2;
  union tree_node * filed_from;
  struct gimple * def_stmt2;
  union tree_node * treecheck2;
  struct gimple * def_stmt2;
  struct gimple * def_stmt;
  union tree_node * treecheck;
  union tree_node * filed_from2;
  union tree_node * filed_from;
  int i;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second2;
  union tree_node * second;
  union tree_node * getfiledtree;
  struct gimple * def_stmt2;
  union tree_node * getfiledtree;
  union tree_node * treecheck2;
  struct gimple * def_stmt2;
  struct gimple * def_stmt;
  union tree_node * treecheck;
  union tree_node * filed_from2;
  union tree_node * filed_from;
  union tree_node * getfiledtree;
  struct gimple * def_stmt2;
  union tree_node * getfiledtree;
  union tree_node * treecheck2;
  struct gimple * def_stmt2;
  struct gimple * def_stmt;
  union tree_node * treecheck;
  union tree_node * filed_from2;
  union tree_node * filed_from;
  int i;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second2;
  union tree_node * second;
  union tree_node * second;
  union tree_node * second;
  union tree_node * ssa_var;
  union tree_node * first;
  union tree_node * getFunctionAssignVAR;
  union tree_node * ssa_var;
  int passfilter;
  bool retval.1228;
  bool retval.1224;
  bool retval.1222;
  bool retval.1220;
  bool retval.1218;
  bool retval.1217;
  bool retval.1216;
  bool retval.1213;
  bool retval.1209;
  bool retval.1207;
  bool retval.1205;
  bool retval.1204;
  bool retval.1203;
  bool retval.1202;
  bool iftmp.1201;
  bool retval.1200;
  bool retval.1199;
  bool retval.1198;
  bool retval.1197;
  bool retval.1196;
  bool retval.1195;
  bool retval.1194;
  bool retval.1193;
  bool retval.1192;
  bool retval.1191;
  bool retval.1190;
  bool iftmp.1189;
  bool retval.1188;
  bool retval.1187;
  bool retval.1186;
  bool retval.1185;
  bool retval.1184;
  bool iftmp.1183;
  bool retval.1182;
  bool iftmp.1181;
  bool retval.1180;
  bool retval.1179;
  bool retval.1178;
  bool retval.1177;
  bool retval.1176;
  bool retval.1175;
  bool retval.1174;
  bool retval.1173;
  bool iftmp.1172;
  bool retval.1171;
  bool retval.1170;
  bool retval.1169;
  bool retval.1168;
  bool retval.1167;
  bool retval.1166;
  bool iftmp.1165;
  bool retval.1164;
  bool retval.1163;
  bool retval.1162;
  bool retval.1161;
  bool retval.1160;
  bool iftmp.1159;
  bool retval.1158;
  bool iftmp.1157;
  bool retval.1156;
  bool retval.1155;
  bool retval.1154;
  bool retval.1153;
  bool retval.1152;
  bool retval.1151;
  bool retval.1150;
  bool retval.1149;
  bool retval.1148;
  bool retval.1147;
  bool retval.1146;
  bool retval.1145;
  struct function_assign_array D.196267;
  bool retval.1142;
  bool iftmp.1140;
  bool retval.1139;
  bool iftmp.1138;
  bool retval.1137;
  bool retval.1136;
  bool iftmp.1135;
  bool retval.1134;
  bool retval.1133;
  bool retval.1132;
  bool retval.1131;
  bool retval.1130;
  bool retval.1129;
  bool retval.1128;
  bool retval.1127;
  bool retval.1126;
  bool iftmp.1125;
  bool retval.1124;
  bool retval.1123;
  bool retval.1122;
  bool retval.1121;
  bool retval.1120;
  bool retval.1119;
  bool retval.1118;
  bool retval.1117;
  bool retval.1116;
  bool retval.1115;
  bool retval.1113;
  bool retval.1110;
  bool iftmp.1107;
  bool retval.1106;
  bool retval.1105;
  bool retval.1104;
  bool retval.1103;
  bool retval.1102;
  bool retval.1101;
  bool retval.1100;
  bool iftmp.1099;
  bool retval.1098;
  bool retval.1097;
  bool retval.1096;
  bool retval.1095;
  bool retval.1094;
  bool iftmp.1093;
  bool retval.1092;
  bool retval.1091;
  bool retval.1090;
  bool retval.1089;
  bool retval.1088;
  bool retval.1087;
  bool retval.1085;
  bool retval.1082;
  bool retval.1079;
  bool retval.1078;
  bool retval.1077;
  bool retval.1076;
  bool retval.1075;
  bool retval.1074;
  bool retval.1073;
  bool retval.1072;
  bool iftmp.1071;
  bool retval.1070;
  bool iftmp.1069;
  bool retval.1068;
  union tree_node * iftmp.1067;
  bool retval.1066;
  bool retval.1065;
  bool retval.1064;
  bool retval.1063;
  bool iftmp.1062;
  bool retval.1061;
  union tree_node * iftmp.1060;
  bool iftmp.1059;
  bool retval.1058;
  bool retval.1057;

  <bb 2> :
  passfilter = 0;
  retval.1057 = is_gimple_call (use_stmt);
  if (retval.1057 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  passfilter = 1;
  goto <bb 28>; [INV]

  <bb 4> :
  D.255149 = gimple_assign_lhs (use_stmt);
  _1 = D.255149;
  if (_1 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.255150 = gimple_assign_lhs (use_stmt);
  _2 = D.255150;
  _3 = _2->base.code;
  if (_3 == 36)
    goto <bb 16>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  D.255151 = gimple_assign_rhs1 (use_stmt);
  _4 = D.255151;
  if (_4 != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  D.255152 = gimple_assign_rhs1 (use_stmt);
  _5 = D.255152;
  _6 = _5->base.code;
  if (_6 == 36)
    goto <bb 16>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  D.255153 = gimple_assign_rhs1 (use_stmt);
  _7 = D.255153;
  if (_7 != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.255154 = gimple_assign_rhs1 (use_stmt);
  _8 = D.255154;
  _9 = _8->base.code;
  if (_9 == 49)
    goto <bb 16>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  D.255155 = gimple_assign_lhs (use_stmt);
  _10 = D.255155;
  if (_10 != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  D.255156 = gimple_assign_lhs (use_stmt);
  _11 = D.255156;
  _12 = _11->base.code;
  if (_12 == 49)
    goto <bb 16>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  D.255157 = gimple_assign_rhs1 (use_stmt);
  _13 = D.255157;
  if (_13 != 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  D.255158 = gimple_assign_rhs1 (use_stmt);
  _14 = D.255158;
  _15 = _14->base.code;
  if (_15 == 47)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.255159 = gimple_assign_lhs (use_stmt);
  _16 = D.255159;
  if (_16 != 0B)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.255160 = gimple_assign_lhs (use_stmt);
  _17 = D.255160;
  _18 = _17->base.code;
  if (_18 == 47)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1059 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.1059 = 0;

  <bb 18> :
  retval.1058 = iftmp.1059;
  if (retval.1058 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  passfilter = 1;
  goto <bb 28>; [INV]

  <bb 20> :
  _19 = target->base.code;
  if (_19 == 153)
    goto <bb 21>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 21> :
  _20 = target->ssa_name.var;
  if (_20 != 0B)
    goto <bb 22>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 22> :
  _21 = target->ssa_name.var;
  _22 = _21->base.code;
  if (_22 != 1)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  iftmp.1060 = target->ssa_name.var;
  goto <bb 25>; [INV]

  <bb 24> :
  iftmp.1060 = 0B;

  <bb 25> :
  ssa_var = iftmp.1060;
  if (ssa_var != 0B)
    goto <bb 26>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 26> :
  _23 = ssa_var->base.code;
  if (_23 == 36)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  passfilter = 1;

  <bb 28> :
  if (passfilter != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 640>; [INV]

  <bb 29> :
  _24 = is_gimple_assign (use_stmt);
  if (_24 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 30> :
  _25 = is_gimple_call (use_stmt);
  if (_25 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  iftmp.1062 = 1;
  goto <bb 33>; [INV]

  <bb 32> :
  iftmp.1062 = 0;

  <bb 33> :
  retval.1061 = iftmp.1062;
  if (retval.1061 != 0)
    goto <bb 34>; [INV]
  else
    goto <bb 366>; [INV]

  <bb 34> :
  retval.1063 = is_gimple_call (use_stmt);
  if (retval.1063 != 0)
    goto <bb 35>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 35> :
  D.255161 = gimple_call_arg (use_stmt, 0);

  <bb 36> :
  _26 = D.255161;
  _27 = _26->base.code;
  retval.1064 = _27 == 131;
  if (retval.1064 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 37> :
  D.255162 = gimple_call_arg (use_stmt, 0);

  <bb 38> :
  _28 = D.255162;
  first = _28->exp.operands[0];
  _29 = first->base.code;
  if (_29 == 36)
    goto <bb 39>; [INV]
  else
    goto <bb 366>; [INV]

  <bb 39> :
  getFunctionAssignVAR = first;
  goto <bb 366>; [INV]

  <bb 40> :
  D.255163 = gimple_call_arg (use_stmt, 0);

  <bb 41> :
  _30 = D.255163;
  _31 = _30->base.code;
  retval.1065 = _31 == 36;
  if (retval.1065 != 0)
    goto <bb 42>; [INV]
  else
    goto <bb 366>; [INV]

  <bb 42> :
  D.255164 = gimple_call_arg (use_stmt, 0);

  <bb 43> :
  _32 = D.255164;
  getFunctionAssignVAR = _32;
  goto <bb 366>; [INV]

  <bb 44> :
  retval.1066 = is_gimple_assign (use_stmt);
  if (retval.1066 != 0)
    goto <bb 45>; [INV]
  else
    goto <bb 366>; [INV]

  <bb 45> :
  _33 = target->base.code;
  if (_33 == 153)
    goto <bb 46>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 46> :
  _34 = target->ssa_name.var;
  if (_34 != 0B)
    goto <bb 47>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 47> :
  _35 = target->ssa_name.var;
  _36 = _35->base.code;
  if (_36 != 1)
    goto <bb 48>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 48> :
  iftmp.1067 = target->ssa_name.var;
  goto <bb 50>; [INV]

  <bb 49> :
  iftmp.1067 = 0B;

  <bb 50> :
  ssa_var = iftmp.1067;
  if (ssa_var != 0B)
    goto <bb 51>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 51> :
  _37 = ssa_var->base.code;
  if (_37 == 36)
    goto <bb 52>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 52> :
  getFunctionAssignVAR = ssa_var;

  <bb 53> :
  D.255165 = gimple_assign_lhs (use_stmt);

  <bb 54> :
  _38 = D.255165;
  if (_38 != 0B)
    goto <bb 55>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 55> :
  D.255166 = gimple_assign_lhs (use_stmt);

  <bb 56> :
  _39 = D.255166;
  _40 = _39->base.code;
  if (_40 == 36)
    goto <bb 57>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 57> :
  iftmp.1069 = 1;
  goto <bb 59>; [INV]

  <bb 58> :
  iftmp.1069 = 0;

  <bb 59> :
  retval.1068 = iftmp.1069;
  if (retval.1068 != 0)
    goto <bb 60>; [INV]
  else
    goto <bb 62>; [INV]

  <bb 60> :
  D.255167 = gimple_assign_lhs (use_stmt);

  <bb 61> :
  _41 = D.255167;
  getFunctionAssignVAR = _41;

  <bb 62> :
  D.255168 = gimple_assign_rhs1 (use_stmt);

  <bb 63> :
  _42 = D.255168;
  if (_42 != 0B)
    goto <bb 64>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 64> :
  D.255169 = gimple_assign_rhs1 (use_stmt);

  <bb 65> :
  _43 = D.255169;
  _44 = _43->base.code;
  if (_44 == 36)
    goto <bb 66>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 66> :
  iftmp.1071 = 1;
  goto <bb 68>; [INV]

  <bb 67> :
  iftmp.1071 = 0;

  <bb 68> :
  retval.1070 = iftmp.1071;
  if (retval.1070 != 0)
    goto <bb 69>; [INV]
  else
    goto <bb 71>; [INV]

  <bb 69> :
  D.255170 = gimple_assign_rhs1 (use_stmt);

  <bb 70> :
  _45 = D.255170;
  getFunctionAssignVAR = _45;

  <bb 71> :
  D.255171 = gimple_assign_rhs1 (use_stmt);

  <bb 72> :
  _46 = D.255171;
  retval.1072 = _46 != 0B;
  if (retval.1072 != 0)
    goto <bb 73>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 73> :
  D.255172 = gimple_assign_rhs1 (use_stmt);

  <bb 74> :
  _47 = D.255172;
  _48 = _47->base.code;
  retval.1073 = _48 == 49;
  if (retval.1073 != 0)
    goto <bb 75>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 75> :
  D.255173 = gimple_assign_rhs1 (use_stmt);

  <bb 76> :
  _49 = D.255173;
  second = _49->exp.operands[0];
  if (second != 0B)
    goto <bb 77>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 77> :
  getFunctionAssignVAR = second;

  <bb 78> :
  D.255174 = gimple_assign_lhs (use_stmt);

  <bb 79> :
  _50 = D.255174;
  retval.1074 = _50 != 0B;
  if (retval.1074 != 0)
    goto <bb 80>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 80> :
  D.255175 = gimple_assign_lhs (use_stmt);

  <bb 81> :
  _51 = D.255175;
  _52 = _51->base.code;
  retval.1075 = _52 == 49;
  if (retval.1075 != 0)
    goto <bb 82>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 82> :
  D.255176 = gimple_assign_lhs (use_stmt);

  <bb 83> :
  _53 = D.255176;
  second = _53->exp.operands[0];
  if (second != 0B)
    goto <bb 84>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 84> :
  getFunctionAssignVAR = second;

  <bb 85> :
  D.255177 = gimple_assign_rhs1 (use_stmt);

  <bb 86> :
  _54 = D.255177;
  retval.1076 = _54 != 0B;
  if (retval.1076 != 0)
    goto <bb 87>; [INV]
  else
    goto <bb 214>; [INV]

  <bb 87> :
  D.255178 = gimple_assign_rhs1 (use_stmt);

  <bb 88> :
  _55 = D.255178;
  _56 = _55->base.code;
  retval.1077 = _56 == 47;
  if (retval.1077 != 0)
    goto <bb 89>; [INV]
  else
    goto <bb 214>; [INV]

  <bb 89> :
  D.255179 = gimple_assign_rhs1 (use_stmt);

  <bb 90> :
  _57 = D.255179;
  second = _57->exp.operands[0];
  D.255180 = gimple_assign_rhs1 (use_stmt);

  <bb 91> :
  _58 = D.255180;
  _59 = _58->exp.operands[1];
  second2 = _59;
  if (second != 0B)
    goto <bb 92>; [INV]
  else
    goto <bb 213>; [INV]

  <bb 92> :
  _60 = second->base.code;
  if (_60 == 165)
    goto <bb 93>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 93> :
  three = second->exp.operands[0];
  if (three != 0B)
    goto <bb 94>; [INV]
  else
    goto <bb 104>; [INV]

  <bb 94> :
  _61 = three->base.code;
  if (_61 == 153)
    goto <bb 95>; [INV]
  else
    goto <bb 100>; [INV]

  <bb 95> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1078 = is_gimple_assign (def_stmt);
  if (retval.1078 != 0)
    goto <bb 96>; [INV]
  else
    goto <bb 104>; [INV]

  <bb 96> :
  D.255181 = gimple_assign_rhs1 (def_stmt);

  <bb 97> :
  _62 = D.255181;
  _63 = _62->base.code;
  retval.1079 = _63 == 36;
  if (retval.1079 != 0)
    goto <bb 98>; [INV]
  else
    goto <bb 104>; [INV]

  <bb 98> :
  D.255182 = gimple_assign_rhs1 (def_stmt);

  <bb 99> :
  _64 = D.255182;
  getFunctionAssignVAR = _64;
  goto <bb 104>; [INV]

  <bb 100> :
  _65 = three->base.code;
  if (_65 == 36)
    goto <bb 101>; [INV]
  else
    goto <bb 104>; [INV]

  <bb 101> :
  getFunctionAssignVAR = three;
  goto <bb 104>; [INV]

  <bb 102> :
  _66 = second->base.code;
  if (_66 == 36)
    goto <bb 103>; [INV]
  else
    goto <bb 104>; [INV]

  <bb 103> :
  getFunctionAssignVAR = second;

  <bb 104> :
  second2.1080_67 = second2;
  if (second2.1080_67 != 0B)
    goto <bb 105>; [INV]
  else
    goto <bb 213>; [INV]

  <bb 105> :
  second2.1081_68 = second2;
  _69 = second2.1081_68->base.code;
  if (_69 == 35)
    goto <bb 106>; [INV]
  else
    goto <bb 213>; [INV]

  <bb 106> :
  _70 = second->base.code;
  if (_70 == 36)
    goto <bb 107>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 107> :
  getFunctionAssignVAR = second;

  <bb 108> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.1083_71 = function_assign_collect;
  D.255183 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1083_71, &second2);

  <bb 109> :
  _72 = D.255183;
  retval.1082 = _72 != 0B;
  if (retval.1082 != 0)
    goto <bb 110>; [INV]
  else
    goto <bb 212>; [INV]

  <bb 110> :
  function_assign_collect.1084_73 = function_assign_collect;
  D.255184 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1084_73, &second2);

  <bb 111> :
  _74 = D.255184;
  function_assign_array::operator= (&assign_array, _74);

  <bb 112> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 113> :
  function_assign_collect.1086_75 = function_assign_collect;
  D.255185 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1086_75, &second2);

  <bb 114> :
  _76 = D.255185;
  retval.1085 = _76 != 0B;
  if (retval.1085 != 0)
    goto <bb 115>; [INV]
  else
    goto <bb 212>; [INV]

  <bb 115> :
  _77 = second->base.code;
  if (_77 != 36)
    goto <bb 116>; [INV]
  else
    goto <bb 212>; [INV]

  <bb 116> :
  i = 0;
  goto <bb 211>; [INV]

  <bb 117> :
  _78 = (long unsigned int) i;
  _79 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _78);
  _80 = _79->stmt;
  _81 = gimple_code (_80);
  retval.1087 = _81 == 6;
  if (retval.1087 != 0)
    goto <bb 118>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 118> :
  _82 = (long unsigned int) i;
  _83 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _82);
  _84 = _83->stmt;
  D.255186 = gimple_assign_rhs1 (_84);

  <bb 119> :
  _85 = D.255186;
  _86 = _85->base.code;
  retval.1088 = _86 == 153;
  if (retval.1088 != 0)
    goto <bb 120>; [INV]
  else
    goto <bb 164>; [INV]

  <bb 120> :
  filed_from = second->exp.operands[0];
  _87 = (long unsigned int) i;
  _88 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _87);
  _89 = _88->assign_tree;
  filed_from2 = _89->exp.operands[0];
  _90 = filed_from2->base.code;
  if (_90 == 165)
    goto <bb 121>; [INV]
  else
    goto <bb 122>; [INV]

  <bb 121> :
  filed_from2 = filed_from2->exp.operands[0];

  <bb 122> :
  _91 = filed_from->base.code;
  if (_91 == 165)
    goto <bb 123>; [INV]
  else
    goto <bb 124>; [INV]

  <bb 123> :
  filed_from = filed_from->exp.operands[0];

  <bb 124> :
  _92 = filed_from2->base.code;
  if (_92 == 153)
    goto <bb 125>; [INV]
  else
    goto <bb 132>; [INV]

  <bb 125> :
  def_stmt = filed_from2->ssa_name.def_stmt;
  getfiledtree = filed_from2;
  _93 = filed_from->base.code;
  if (_93 != 36)
    goto <bb 126>; [INV]
  else
    goto <bb 133>; [INV]

  <bb 126> :
  D.255187 = gimple_assign_rhs1 (def_stmt);

  <bb 127> :
  getfiledtree = D.255187;
  if (def_stmt != 0B)
    goto <bb 128>; [INV]
  else
    goto <bb 133>; [INV]

  <bb 128> :
  _94 = gimple_code (def_stmt);
  retval.1089 = _94 != 20;
  if (retval.1089 != 0)
    goto <bb 129>; [INV]
  else
    goto <bb 133>; [INV]

  <bb 129> :
  if (getfiledtree != 0B)
    goto <bb 130>; [INV]
  else
    goto <bb 133>; [INV]

  <bb 130> :
  _95 = getfiledtree->base.code;
  if (_95 != 0)
    goto <bb 131>; [INV]
  else
    goto <bb 133>; [INV]

  <bb 131> :
  treecheck = getfiledtree;
  goto <bb 133>; [INV]

  <bb 132> :
  treecheck = filed_from2;

  <bb 133> :
  _96 = second->base.code;
  if (_96 != 36)
    goto <bb 134>; [INV]
  else
    goto <bb 143>; [INV]

  <bb 134> :
  _97 = filed_from->base.code;
  if (_97 != 26)
    goto <bb 135>; [INV]
  else
    goto <bb 143>; [INV]

  <bb 135> :
  def_stmt2 = filed_from->ssa_name.def_stmt;
  getfiledtree = filed_from;
  _98 = filed_from->base.code;
  if (_98 != 36)
    goto <bb 136>; [INV]
  else
    goto <bb 142>; [INV]

  <bb 136> :
  D.255188 = gimple_assign_rhs1 (def_stmt2);

  <bb 137> :
  getfiledtree = D.255188;
  if (def_stmt2 != 0B)
    goto <bb 138>; [INV]
  else
    goto <bb 142>; [INV]

  <bb 138> :
  _99 = gimple_code (def_stmt2);
  retval.1090 = _99 != 20;
  if (retval.1090 != 0)
    goto <bb 139>; [INV]
  else
    goto <bb 142>; [INV]

  <bb 139> :
  if (getfiledtree != 0B)
    goto <bb 140>; [INV]
  else
    goto <bb 142>; [INV]

  <bb 140> :
  _100 = getfiledtree->base.code;
  if (_100 != 0)
    goto <bb 141>; [INV]
  else
    goto <bb 142>; [INV]

  <bb 141> :
  treecheck2 = getfiledtree;

  <bb 142> :
  goto <bb 144>; [INV]

  <bb 143> :
  treecheck2 = filed_from;

  <bb 144> :
  if (treecheck == 0B)
    goto <bb 145>; [INV]
  else
    goto <bb 146>; [INV]

  <bb 145> :
  treecheck = filed_from2;

  <bb 146> :
  if (treecheck2 == 0B)
    goto <bb 147>; [INV]
  else
    goto <bb 148>; [INV]

  <bb 147> :
  treecheck2 = filed_from;

  <bb 148> :
  if (treecheck2 == treecheck)
    goto <bb 149>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 149> :
  _101 = (long unsigned int) i;
  _102 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _101);
  _103 = _102->stmt;
  D.255189 = gimple_assign_rhs1 (_103);

  <bb 150> :
  _104 = D.255189;
  D.255190 = check_stmtStack (_104);

  <bb 151> :
  _105 = D.255190;
  retval.1091 = _105 == 0;
  if (retval.1091 != 0)
    goto <bb 152>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 152> :
  _106 = (long unsigned int) i;
  _107 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _106);
  _108 = _107->stmt;
  D.255191 = gimple_assign_rhs1 (_108);

  <bb 153> :
  _109 = D.255191;
  if (target2 != _109)
    goto <bb 154>; [INV]
  else
    goto <bb 157>; [INV]

  <bb 154> :
  _110 = (long unsigned int) i;
  _111 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _110);
  _112 = _111->stmt;
  D.255192 = check_stmtStack2 (_112);

  <bb 155> :
  _113 = D.255192;
  if (_113 == 0)
    goto <bb 156>; [INV]
  else
    goto <bb 157>; [INV]

  <bb 156> :
  iftmp.1093 = 1;
  goto <bb 158>; [INV]

  <bb 157> :
  iftmp.1093 = 0;

  <bb 158> :
  retval.1092 = iftmp.1093;
  if (retval.1092 != 0)
    goto <bb 159>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 159> :
  _114 = (long unsigned int) i;
  _115 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _114);
  _116 = _115->stmt;
  D.255193 = gimple_assign_rhs1 (_116);

  <bb 160> :
  _117 = D.255193;
  _118 = (long unsigned int) i;
  _119 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _118);
  _120 = _119->stmt;
  set_gimple_array (used_stmt, _120, _117, target, 0B);

  <bb 161> :
  _121 = (long unsigned int) i;
  _122 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _121);
  _123 = _122->stmt;
  D.255194 = gimple_assign_rhs1 (_123);

  <bb 162> :
  _124 = D.255194;
  _125 = (long unsigned int) i;
  _126 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _125);
  _127 = _126->stmt;
  D.255195 = gimple_assign_rhs1 (_127);

  <bb 163> :
  _128 = D.255195;
  new_search_imm_use (used_stmt, _128, _124);
  goto <bb 210>; [INV]

  <bb 164> :
  _129 = (long unsigned int) i;
  _130 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _129);
  _131 = _130->stmt;
  D.255196 = gimple_assign_lhs (_131);

  <bb 165> :
  _132 = D.255196;
  _133 = _132->base.code;
  retval.1094 = _133 == 153;
  if (retval.1094 != 0)
    goto <bb 166>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 166> :
  filed_from = second->exp.operands[0];
  _134 = (long unsigned int) i;
  _135 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _134);
  _136 = _135->assign_tree;
  filed_from2 = _136->exp.operands[0];
  _137 = filed_from2->base.code;
  if (_137 == 165)
    goto <bb 167>; [INV]
  else
    goto <bb 168>; [INV]

  <bb 167> :
  filed_from2 = filed_from2->exp.operands[0];

  <bb 168> :
  _138 = filed_from->base.code;
  if (_138 == 165)
    goto <bb 169>; [INV]
  else
    goto <bb 170>; [INV]

  <bb 169> :
  filed_from = filed_from->exp.operands[0];

  <bb 170> :
  _139 = filed_from2->base.code;
  if (_139 == 153)
    goto <bb 171>; [INV]
  else
    goto <bb 178>; [INV]

  <bb 171> :
  def_stmt = filed_from2->ssa_name.def_stmt;
  getfiledtree = filed_from2;
  _140 = filed_from->base.code;
  if (_140 != 36)
    goto <bb 172>; [INV]
  else
    goto <bb 179>; [INV]

  <bb 172> :
  D.255197 = gimple_assign_rhs1 (def_stmt);

  <bb 173> :
  getfiledtree = D.255197;
  if (def_stmt != 0B)
    goto <bb 174>; [INV]
  else
    goto <bb 179>; [INV]

  <bb 174> :
  _141 = gimple_code (def_stmt);
  retval.1095 = _141 != 20;
  if (retval.1095 != 0)
    goto <bb 175>; [INV]
  else
    goto <bb 179>; [INV]

  <bb 175> :
  if (getfiledtree != 0B)
    goto <bb 176>; [INV]
  else
    goto <bb 179>; [INV]

  <bb 176> :
  _142 = getfiledtree->base.code;
  if (_142 != 0)
    goto <bb 177>; [INV]
  else
    goto <bb 179>; [INV]

  <bb 177> :
  treecheck = getfiledtree;
  goto <bb 179>; [INV]

  <bb 178> :
  treecheck = filed_from2;

  <bb 179> :
  _143 = second->base.code;
  if (_143 != 36)
    goto <bb 180>; [INV]
  else
    goto <bb 189>; [INV]

  <bb 180> :
  _144 = filed_from->base.code;
  if (_144 != 26)
    goto <bb 181>; [INV]
  else
    goto <bb 189>; [INV]

  <bb 181> :
  def_stmt2 = filed_from->ssa_name.def_stmt;
  getfiledtree = filed_from;
  _145 = filed_from->base.code;
  if (_145 != 36)
    goto <bb 182>; [INV]
  else
    goto <bb 188>; [INV]

  <bb 182> :
  D.255198 = gimple_assign_rhs1 (def_stmt2);

  <bb 183> :
  getfiledtree = D.255198;
  if (def_stmt2 != 0B)
    goto <bb 184>; [INV]
  else
    goto <bb 188>; [INV]

  <bb 184> :
  _146 = gimple_code (def_stmt2);
  retval.1096 = _146 != 20;
  if (retval.1096 != 0)
    goto <bb 185>; [INV]
  else
    goto <bb 188>; [INV]

  <bb 185> :
  if (getfiledtree != 0B)
    goto <bb 186>; [INV]
  else
    goto <bb 188>; [INV]

  <bb 186> :
  _147 = getfiledtree->base.code;
  if (_147 != 0)
    goto <bb 187>; [INV]
  else
    goto <bb 188>; [INV]

  <bb 187> :
  treecheck2 = getfiledtree;

  <bb 188> :
  goto <bb 190>; [INV]

  <bb 189> :
  treecheck2 = filed_from;

  <bb 190> :
  if (treecheck == 0B)
    goto <bb 191>; [INV]
  else
    goto <bb 192>; [INV]

  <bb 191> :
  treecheck = filed_from2;

  <bb 192> :
  if (treecheck2 == 0B)
    goto <bb 193>; [INV]
  else
    goto <bb 194>; [INV]

  <bb 193> :
  treecheck2 = filed_from;

  <bb 194> :
  if (treecheck2 == treecheck)
    goto <bb 195>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 195> :
  _148 = (long unsigned int) i;
  _149 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _148);
  _150 = _149->stmt;
  D.255199 = gimple_assign_lhs (_150);

  <bb 196> :
  _151 = D.255199;
  D.255200 = check_stmtStack (_151);

  <bb 197> :
  _152 = D.255200;
  retval.1097 = _152 == 0;
  if (retval.1097 != 0)
    goto <bb 198>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 198> :
  _153 = (long unsigned int) i;
  _154 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _153);
  _155 = _154->stmt;
  D.255201 = gimple_assign_lhs (_155);

  <bb 199> :
  _156 = D.255201;
  if (target2 != _156)
    goto <bb 200>; [INV]
  else
    goto <bb 203>; [INV]

  <bb 200> :
  _157 = (long unsigned int) i;
  _158 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _157);
  _159 = _158->stmt;
  D.255202 = check_stmtStack2 (_159);

  <bb 201> :
  _160 = D.255202;
  if (_160 == 0)
    goto <bb 202>; [INV]
  else
    goto <bb 203>; [INV]

  <bb 202> :
  iftmp.1099 = 1;
  goto <bb 204>; [INV]

  <bb 203> :
  iftmp.1099 = 0;

  <bb 204> :
  retval.1098 = iftmp.1099;
  if (retval.1098 != 0)
    goto <bb 205>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 205> :
  _161 = (long unsigned int) i;
  _162 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _161);
  _163 = _162->stmt;
  D.255203 = gimple_assign_rhs1 (_163);

  <bb 206> :
  _164 = D.255203;
  _165 = (long unsigned int) i;
  _166 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _165);
  _167 = _166->stmt;
  set_gimple_array (used_stmt, _167, _164, target, 0B);

  <bb 207> :
  _168 = (long unsigned int) i;
  _169 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _168);
  _170 = _169->stmt;
  D.255204 = gimple_assign_lhs (_170);

  <bb 208> :
  _171 = D.255204;
  _172 = (long unsigned int) i;
  _173 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _172);
  _174 = _173->stmt;
  D.255205 = gimple_assign_lhs (_174);

  <bb 209> :
  _175 = D.255205;
  new_search_imm_use (used_stmt, _175, _171);

  <bb 210> :
  i = i + 1;

  <bb 211> :
  _176 = (long unsigned int) i;
  _177 = std::vector<assign_type>::size (&assign_array.assign_type_array);
  retval.1100 = _176 < _177;
  if (retval.1100 != 0)
    goto <bb 117>; [INV]
  else
    goto <bb 212>; [INV]

  <bb 212> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};

  <bb 213> :
  second2 = {CLOBBER};

  <bb 214> :
  D.255210 = gimple_assign_lhs (use_stmt);

  <bb 215> :
  _178 = D.255210;
  retval.1101 = _178 != 0B;
  if (retval.1101 != 0)
    goto <bb 216>; [INV]
  else
    goto <bb 366>; [INV]

  <bb 216> :
  D.255211 = gimple_assign_lhs (use_stmt);

  <bb 217> :
  _179 = D.255211;
  _180 = _179->base.code;
  retval.1102 = _180 == 47;
  if (retval.1102 != 0)
    goto <bb 218>; [INV]
  else
    goto <bb 366>; [INV]

  <bb 218> :
  D.255212 = gimple_assign_lhs (use_stmt);

  <bb 219> :
  _181 = D.255212;
  second = _181->exp.operands[0];
  D.255213 = gimple_assign_lhs (use_stmt);

  <bb 220> :
  _182 = D.255213;
  _183 = _182->exp.operands[1];
  second2 = _183;
  if (second != 0B)
    goto <bb 221>; [INV]
  else
    goto <bb 363>; [INV]

  <bb 221> :
  three = second->exp.operands[0];
  _184 = second->base.code;
  if (_184 == 165)
    goto <bb 222>; [INV]
  else
    goto <bb 241>; [INV]

  <bb 222> :
  if (three != 0B)
    goto <bb 223>; [INV]
  else
    goto <bb 241>; [INV]

  <bb 223> :
  _185 = three->base.code;
  if (_185 == 153)
    goto <bb 224>; [INV]
  else
    goto <bb 239>; [INV]

  <bb 224> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1103 = is_gimple_assign (def_stmt);
  if (retval.1103 != 0)
    goto <bb 225>; [INV]
  else
    goto <bb 229>; [INV]

  <bb 225> :
  D.255214 = gimple_assign_rhs1 (def_stmt);

  <bb 226> :
  _186 = D.255214;
  _187 = _186->base.code;
  retval.1104 = _187 == 36;
  if (retval.1104 != 0)
    goto <bb 227>; [INV]
  else
    goto <bb 229>; [INV]

  <bb 227> :
  D.255215 = gimple_assign_rhs1 (def_stmt);

  <bb 228> :
  _188 = D.255215;
  getFunctionAssignVAR = _188;

  <bb 229> :
  D.255216 = check_stmtStack (three);

  <bb 230> :
  _189 = D.255216;
  retval.1105 = _189 == 0;
  if (retval.1105 != 0)
    goto <bb 231>; [INV]
  else
    goto <bb 241>; [INV]

  <bb 231> :
  if (three != target2)
    goto <bb 232>; [INV]
  else
    goto <bb 235>; [INV]

  <bb 232> :
  D.255217 = check_stmtStack2 (use_stmt);

  <bb 233> :
  _190 = D.255217;
  if (_190 == 0)
    goto <bb 234>; [INV]
  else
    goto <bb 235>; [INV]

  <bb 234> :
  iftmp.1107 = 1;
  goto <bb 236>; [INV]

  <bb 235> :
  iftmp.1107 = 0;

  <bb 236> :
  retval.1106 = iftmp.1107;
  if (retval.1106 != 0)
    goto <bb 237>; [INV]
  else
    goto <bb 241>; [INV]

  <bb 237> :
  set_gimple_array (used_stmt, use_stmt, three, target, 0B);

  <bb 238> :
  new_search_imm_use (used_stmt, three, three);
  goto <bb 241>; [INV]

  <bb 239> :
  _191 = three->base.code;
  if (_191 == 36)
    goto <bb 240>; [INV]
  else
    goto <bb 241>; [INV]

  <bb 240> :
  getFunctionAssignVAR = three;

  <bb 241> :
  second2.1108_192 = second2;
  if (second2.1108_192 != 0B)
    goto <bb 242>; [INV]
  else
    goto <bb 365>; [INV]

  <bb 242> :
  second2.1109_193 = second2;
  _194 = second2.1109_193->base.code;
  if (_194 == 35)
    goto <bb 243>; [INV]
  else
    goto <bb 365>; [INV]

  <bb 243> :
  _195 = second->base.code;
  if (_195 == 36)
    goto <bb 244>; [INV]
  else
    goto <bb 245>; [INV]

  <bb 244> :
  getFunctionAssignVAR = second;

  <bb 245> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.1111_196 = function_assign_collect;
  D.255218 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1111_196, &second2);

  <bb 246> :
  _197 = D.255218;
  retval.1110 = _197 != 0B;
  if (retval.1110 != 0)
    goto <bb 247>; [INV]
  else
    goto <bb 362>; [INV]

  <bb 247> :
  function_assign_collect.1112_198 = function_assign_collect;
  D.255219 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1112_198, &second2);

  <bb 248> :
  _199 = D.255219;
  function_assign_array::operator= (&assign_array, _199);

  <bb 249> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 250> :
  function_assign_collect.1114_200 = function_assign_collect;
  D.255220 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1114_200, &second2);

  <bb 251> :
  _201 = D.255220;
  retval.1113 = _201 != 0B;
  if (retval.1113 != 0)
    goto <bb 252>; [INV]
  else
    goto <bb 362>; [INV]

  <bb 252> :
  _202 = second->base.code;
  if (_202 == 36)
    goto <bb 253>; [INV]
  else
    goto <bb 254>; [INV]

  <bb 253> :
  getFunctionAssignVAR = second;

  <bb 254> :
  _203 = second->base.code;
  if (_203 != 36)
    goto <bb 255>; [INV]
  else
    goto <bb 362>; [INV]

  <bb 255> :
  i = 0;
  goto <bb 361>; [INV]

  <bb 256> :
  _204 = (long unsigned int) i;
  _205 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _204);
  _206 = _205->stmt;
  _207 = gimple_code (_206);
  retval.1115 = _207 == 6;
  if (retval.1115 != 0)
    goto <bb 257>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 257> :
  _208 = (long unsigned int) i;
  _209 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _208);
  _210 = _209->stmt;
  D.255221 = gimple_assign_rhs1 (_210);

  <bb 258> :
  _211 = D.255221;
  _212 = _211->base.code;
  retval.1116 = _212 == 153;
  if (retval.1116 != 0)
    goto <bb 259>; [INV]
  else
    goto <bb 309>; [INV]

  <bb 259> :
  filed_from = second->exp.operands[0];
  _213 = (long unsigned int) i;
  _214 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _213);
  _215 = _214->assign_tree;
  filed_from2 = _215->exp.operands[0];
  _216 = filed_from2->base.code;
  if (_216 == 165)
    goto <bb 260>; [INV]
  else
    goto <bb 261>; [INV]

  <bb 260> :
  filed_from2 = filed_from2->exp.operands[0];

  <bb 261> :
  _217 = filed_from->base.code;
  if (_217 == 165)
    goto <bb 262>; [INV]
  else
    goto <bb 263>; [INV]

  <bb 262> :
  filed_from = filed_from->exp.operands[0];

  <bb 263> :
  _218 = filed_from2->base.code;
  if (_218 == 153)
    goto <bb 264>; [INV]
  else
    goto <bb 274>; [INV]

  <bb 264> :
  def_stmt = filed_from2->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 265>; [INV]
  else
    goto <bb 275>; [INV]

  <bb 265> :
  _219 = gimple_code (def_stmt);
  retval.1117 = _219 != 20;
  if (retval.1117 != 0)
    goto <bb 266>; [INV]
  else
    goto <bb 275>; [INV]

  <bb 266> :
  D.255222 = gimple_assign_rhs1 (def_stmt);

  <bb 267> :
  _220 = D.255222;
  retval.1118 = _220 != 0B;
  if (retval.1118 != 0)
    goto <bb 268>; [INV]
  else
    goto <bb 275>; [INV]

  <bb 268> :
  D.255223 = gimple_assign_rhs1 (def_stmt);

  <bb 269> :
  _221 = D.255223;
  _222 = _221->base.code;
  retval.1119 = _222 != 0;
  if (retval.1119 != 0)
    goto <bb 270>; [INV]
  else
    goto <bb 275>; [INV]

  <bb 270> :
  if (def_stmt != 0B)
    goto <bb 271>; [INV]
  else
    goto <bb 273>; [INV]

  <bb 271> :
  D.255224 = gimple_assign_rhs1 (def_stmt);

  <bb 272> :
  treecheck = D.255224;
  goto <bb 275>; [INV]

  <bb 273> :
  treecheck = filed_from2;
  goto <bb 275>; [INV]

  <bb 274> :
  treecheck = filed_from2;

  <bb 275> :
  _223 = second->base.code;
  if (_223 != 36)
    goto <bb 276>; [INV]
  else
    goto <bb 288>; [INV]

  <bb 276> :
  _224 = filed_from->base.code;
  if (_224 != 26)
    goto <bb 277>; [INV]
  else
    goto <bb 288>; [INV]

  <bb 277> :
  def_stmt2 = filed_from->ssa_name.def_stmt;
  if (def_stmt2 != 0B)
    goto <bb 278>; [INV]
  else
    goto <bb 287>; [INV]

  <bb 278> :
  _225 = gimple_code (def_stmt2);
  retval.1120 = _225 != 20;
  if (retval.1120 != 0)
    goto <bb 279>; [INV]
  else
    goto <bb 287>; [INV]

  <bb 279> :
  D.255225 = gimple_assign_rhs1 (def_stmt2);

  <bb 280> :
  _226 = D.255225;
  retval.1121 = _226 != 0B;
  if (retval.1121 != 0)
    goto <bb 281>; [INV]
  else
    goto <bb 287>; [INV]

  <bb 281> :
  D.255226 = gimple_assign_rhs1 (def_stmt2);

  <bb 282> :
  _227 = D.255226;
  _228 = _227->base.code;
  retval.1122 = _228 != 0;
  if (retval.1122 != 0)
    goto <bb 283>; [INV]
  else
    goto <bb 287>; [INV]

  <bb 283> :
  if (def_stmt2 != 0B)
    goto <bb 284>; [INV]
  else
    goto <bb 286>; [INV]

  <bb 284> :
  D.255227 = gimple_assign_rhs1 (def_stmt2);

  <bb 285> :
  treecheck2 = D.255227;
  goto <bb 287>; [INV]

  <bb 286> :
  treecheck2 = filed_from;

  <bb 287> :
  goto <bb 289>; [INV]

  <bb 288> :
  treecheck2 = filed_from;

  <bb 289> :
  if (treecheck == 0B)
    goto <bb 290>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 290> :
  treecheck = filed_from2;

  <bb 291> :
  if (treecheck2 == 0B)
    goto <bb 292>; [INV]
  else
    goto <bb 293>; [INV]

  <bb 292> :
  treecheck2 = filed_from;

  <bb 293> :
  if (treecheck2 == treecheck)
    goto <bb 294>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 294> :
  _229 = (long unsigned int) i;
  _230 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _229);
  _231 = _230->stmt;
  D.255228 = gimple_assign_rhs1 (_231);

  <bb 295> :
  _232 = D.255228;
  D.255229 = check_stmtStack (_232);

  <bb 296> :
  _233 = D.255229;
  retval.1123 = _233 == 0;
  if (retval.1123 != 0)
    goto <bb 297>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 297> :
  _234 = (long unsigned int) i;
  _235 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _234);
  _236 = _235->stmt;
  D.255230 = gimple_assign_rhs1 (_236);

  <bb 298> :
  _237 = D.255230;
  if (target2 != _237)
    goto <bb 299>; [INV]
  else
    goto <bb 302>; [INV]

  <bb 299> :
  _238 = (long unsigned int) i;
  _239 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _238);
  _240 = _239->stmt;
  D.255231 = check_stmtStack2 (_240);

  <bb 300> :
  _241 = D.255231;
  if (_241 == 0)
    goto <bb 301>; [INV]
  else
    goto <bb 302>; [INV]

  <bb 301> :
  iftmp.1125 = 1;
  goto <bb 303>; [INV]

  <bb 302> :
  iftmp.1125 = 0;

  <bb 303> :
  retval.1124 = iftmp.1125;
  if (retval.1124 != 0)
    goto <bb 304>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 304> :
  _242 = (long unsigned int) i;
  _243 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _242);
  _244 = _243->stmt;
  D.255232 = gimple_assign_rhs1 (_244);

  <bb 305> :
  _245 = D.255232;
  _246 = (long unsigned int) i;
  _247 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _246);
  _248 = _247->stmt;
  set_gimple_array (used_stmt, _248, _245, target, 0B);

  <bb 306> :
  _249 = (long unsigned int) i;
  _250 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _249);
  _251 = _250->stmt;
  D.255233 = gimple_assign_rhs1 (_251);

  <bb 307> :
  _252 = D.255233;
  _253 = (long unsigned int) i;
  _254 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _253);
  _255 = _254->stmt;
  D.255234 = gimple_assign_rhs1 (_255);

  <bb 308> :
  _256 = D.255234;
  new_search_imm_use (used_stmt, _256, _252);
  goto <bb 360>; [INV]

  <bb 309> :
  _257 = (long unsigned int) i;
  _258 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _257);
  _259 = _258->stmt;
  D.255235 = gimple_assign_lhs (_259);

  <bb 310> :
  _260 = D.255235;
  _261 = _260->base.code;
  retval.1126 = _261 == 153;
  if (retval.1126 != 0)
    goto <bb 311>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 311> :
  filed_from = second->exp.operands[0];
  _262 = (long unsigned int) i;
  _263 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _262);
  _264 = _263->assign_tree;
  filed_from2 = _264->exp.operands[0];
  _265 = filed_from2->base.code;
  if (_265 == 165)
    goto <bb 312>; [INV]
  else
    goto <bb 313>; [INV]

  <bb 312> :
  filed_from2 = filed_from2->exp.operands[0];

  <bb 313> :
  _266 = filed_from->base.code;
  if (_266 == 165)
    goto <bb 314>; [INV]
  else
    goto <bb 315>; [INV]

  <bb 314> :
  filed_from = filed_from->exp.operands[0];

  <bb 315> :
  _267 = filed_from2->base.code;
  if (_267 == 153)
    goto <bb 316>; [INV]
  else
    goto <bb 326>; [INV]

  <bb 316> :
  def_stmt = filed_from2->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 317>; [INV]
  else
    goto <bb 327>; [INV]

  <bb 317> :
  _268 = gimple_code (def_stmt);
  retval.1127 = _268 != 20;
  if (retval.1127 != 0)
    goto <bb 318>; [INV]
  else
    goto <bb 327>; [INV]

  <bb 318> :
  D.255236 = gimple_assign_rhs1 (def_stmt);

  <bb 319> :
  _269 = D.255236;
  retval.1128 = _269 != 0B;
  if (retval.1128 != 0)
    goto <bb 320>; [INV]
  else
    goto <bb 327>; [INV]

  <bb 320> :
  D.255237 = gimple_assign_rhs1 (def_stmt);

  <bb 321> :
  _270 = D.255237;
  _271 = _270->base.code;
  retval.1129 = _271 != 0;
  if (retval.1129 != 0)
    goto <bb 322>; [INV]
  else
    goto <bb 327>; [INV]

  <bb 322> :
  if (def_stmt != 0B)
    goto <bb 323>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 323> :
  D.255238 = gimple_assign_rhs1 (def_stmt);

  <bb 324> :
  treecheck = D.255238;
  goto <bb 327>; [INV]

  <bb 325> :
  treecheck = filed_from2;
  goto <bb 327>; [INV]

  <bb 326> :
  treecheck = filed_from2;

  <bb 327> :
  _272 = filed_from->base.code;
  if (_272 == 153)
    goto <bb 328>; [INV]
  else
    goto <bb 339>; [INV]

  <bb 328> :
  def_stmt2 = filed_from->ssa_name.def_stmt;
  if (def_stmt2 != 0B)
    goto <bb 329>; [INV]
  else
    goto <bb 340>; [INV]

  <bb 329> :
  _273 = filed_from->base.code;
  if (_273 != 20)
    goto <bb 330>; [INV]
  else
    goto <bb 340>; [INV]

  <bb 330> :
  _274 = gimple_code (def_stmt2);
  retval.1130 = _274 != 20;
  if (retval.1130 != 0)
    goto <bb 331>; [INV]
  else
    goto <bb 340>; [INV]

  <bb 331> :
  D.255239 = gimple_assign_rhs1 (def_stmt2);

  <bb 332> :
  _275 = D.255239;
  retval.1131 = _275 != 0B;
  if (retval.1131 != 0)
    goto <bb 333>; [INV]
  else
    goto <bb 340>; [INV]

  <bb 333> :
  D.255240 = gimple_assign_rhs1 (def_stmt2);

  <bb 334> :
  _276 = D.255240;
  _277 = _276->base.code;
  retval.1132 = _277 != 0;
  if (retval.1132 != 0)
    goto <bb 335>; [INV]
  else
    goto <bb 340>; [INV]

  <bb 335> :
  if (def_stmt2 != 0B)
    goto <bb 336>; [INV]
  else
    goto <bb 338>; [INV]

  <bb 336> :
  D.255241 = gimple_assign_rhs1 (def_stmt2);

  <bb 337> :
  treecheck2 = D.255241;
  goto <bb 340>; [INV]

  <bb 338> :
  treecheck2 = filed_from;
  goto <bb 340>; [INV]

  <bb 339> :
  treecheck2 = filed_from;

  <bb 340> :
  if (treecheck == 0B)
    goto <bb 341>; [INV]
  else
    goto <bb 342>; [INV]

  <bb 341> :
  treecheck = filed_from2;

  <bb 342> :
  if (treecheck2 == 0B)
    goto <bb 343>; [INV]
  else
    goto <bb 344>; [INV]

  <bb 343> :
  treecheck2 = filed_from;

  <bb 344> :
  if (treecheck2 == treecheck)
    goto <bb 345>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 345> :
  _278 = (long unsigned int) i;
  _279 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _278);
  _280 = _279->stmt;
  D.255242 = gimple_assign_lhs (_280);

  <bb 346> :
  _281 = D.255242;
  D.255243 = check_stmtStack (_281);

  <bb 347> :
  _282 = D.255243;
  retval.1133 = _282 == 0;
  if (retval.1133 != 0)
    goto <bb 348>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 348> :
  _283 = (long unsigned int) i;
  _284 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _283);
  _285 = _284->stmt;
  D.255244 = gimple_assign_lhs (_285);

  <bb 349> :
  _286 = D.255244;
  if (target2 != _286)
    goto <bb 350>; [INV]
  else
    goto <bb 353>; [INV]

  <bb 350> :
  _287 = (long unsigned int) i;
  _288 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _287);
  _289 = _288->stmt;
  D.255245 = check_stmtStack2 (_289);

  <bb 351> :
  _290 = D.255245;
  if (_290 == 0)
    goto <bb 352>; [INV]
  else
    goto <bb 353>; [INV]

  <bb 352> :
  iftmp.1135 = 1;
  goto <bb 354>; [INV]

  <bb 353> :
  iftmp.1135 = 0;

  <bb 354> :
  retval.1134 = iftmp.1135;
  if (retval.1134 != 0)
    goto <bb 355>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 355> :
  _291 = (long unsigned int) i;
  _292 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _291);
  _293 = _292->stmt;
  D.255246 = gimple_assign_rhs1 (_293);

  <bb 356> :
  _294 = D.255246;
  _295 = (long unsigned int) i;
  _296 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _295);
  _297 = _296->stmt;
  set_gimple_array (used_stmt, _297, _294, target, 0B);

  <bb 357> :
  _298 = (long unsigned int) i;
  _299 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _298);
  _300 = _299->stmt;
  D.255247 = gimple_assign_lhs (_300);

  <bb 358> :
  _301 = D.255247;
  _302 = (long unsigned int) i;
  _303 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _302);
  _304 = _303->stmt;
  D.255248 = gimple_assign_lhs (_304);

  <bb 359> :
  _305 = D.255248;
  new_search_imm_use (used_stmt, _305, _301);

  <bb 360> :
  i = i + 1;

  <bb 361> :
  _306 = (long unsigned int) i;
  _307 = std::vector<assign_type>::size (&assign_array.assign_type_array);
  retval.1136 = _306 < _307;
  if (retval.1136 != 0)
    goto <bb 256>; [INV]
  else
    goto <bb 362>; [INV]

  <bb 362> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  goto <bb 365>; [INV]

  <bb 363> :
  _308 = second->base.code;
  if (_308 == 36)
    goto <bb 364>; [INV]
  else
    goto <bb 365>; [INV]

  <bb 364> :
  getFunctionAssignVAR = second;

  <bb 365> :
  second2 = {CLOBBER};

  <bb 366> :
  D.255253 = gimple_assign_lhs (use_stmt);

  <bb 367> :
  _309 = D.255253;
  D.255254 = check_stmtStack (_309);

  <bb 368> :
  _310 = D.255254;
  if (_310 == 0)
    goto <bb 369>; [INV]
  else
    goto <bb 372>; [INV]

  <bb 369> :
  D.255255 = check_stmtStack2 (use_stmt);

  <bb 370> :
  _311 = D.255255;
  if (_311 == 0)
    goto <bb 371>; [INV]
  else
    goto <bb 372>; [INV]

  <bb 371> :
  iftmp.1138 = 1;
  goto <bb 373>; [INV]

  <bb 372> :
  iftmp.1138 = 0;

  <bb 373> :
  retval.1137 = iftmp.1138;
  if (retval.1137 != 0)
    goto <bb 374>; [INV]
  else
    goto <bb 376>; [INV]

  <bb 374> :
  D.255256 = gimple_assign_lhs (use_stmt);

  <bb 375> :
  _312 = D.255256;
  set_gimple_array (used_stmt, use_stmt, _312, target, 0B);
  goto <bb 386>; [INV]

  <bb 376> :
  D.255257 = gimple_assign_rhs1 (use_stmt);

  <bb 377> :
  _313 = D.255257;
  D.255258 = check_stmtStack (_313);

  <bb 378> :
  _314 = D.255258;
  if (_314 == 0)
    goto <bb 379>; [INV]
  else
    goto <bb 382>; [INV]

  <bb 379> :
  D.255259 = check_stmtStack2 (use_stmt);

  <bb 380> :
  _315 = D.255259;
  if (_315 == 0)
    goto <bb 381>; [INV]
  else
    goto <bb 382>; [INV]

  <bb 381> :
  iftmp.1140 = 1;
  goto <bb 383>; [INV]

  <bb 382> :
  iftmp.1140 = 0;

  <bb 383> :
  retval.1139 = iftmp.1140;
  if (retval.1139 != 0)
    goto <bb 384>; [INV]
  else
    goto <bb 386>; [INV]

  <bb 384> :
  D.255260 = gimple_assign_rhs1 (use_stmt);

  <bb 385> :
  _316 = D.255260;
  set_gimple_array (used_stmt, use_stmt, _316, target, 0B);

  <bb 386> :
  getFunctionAssignVAR.1141_317 = getFunctionAssignVAR;
  if (getFunctionAssignVAR.1141_317 != 0B)
    goto <bb 387>; [INV]
  else
    goto <bb 639>; [INV]

  <bb 387> :
  function_assign_array::function_assign_array (&assign_array);
  function_assign_collect.1143_318 = function_assign_collect;
  D.255261 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1143_318, &getFunctionAssignVAR);

  <bb 388> :
  _319 = D.255261;
  retval.1142 = _319 != 0B;
  if (retval.1142 != 0)
    goto <bb 389>; [INV]
  else
    goto <bb 638>; [INV]

  <bb 389> :
  getFunctionAssignVAR.1144_320 = getFunctionAssignVAR;
  D.196267 = ret_function_varstmt (getFunctionAssignVAR.1144_320); [return slot optimization]

  <bb 390> :
  function_assign_array::operator= (&assign_array, &D.196267);
  function_assign_array::~function_assign_array (&D.196267);
  D.196267 = {CLOBBER};
  i = 0;
  goto <bb 637>; [INV]

  <bb 391> :
  _321 = (long unsigned int) i;
  _322 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _321);
  nowstmt = _322->stmt;
  _323 = gimple_code (nowstmt);
  retval.1145 = _323 == 6;
  if (retval.1145 != 0)
    goto <bb 392>; [INV]
  else
    goto <bb 569>; [INV]

  <bb 392> :
  D.255262 = gimple_assign_lhs (nowstmt);

  <bb 393> :
  _324 = D.255262;
  _325 = _324->base.code;
  retval.1146 = _325 == 165;
  if (retval.1146 != 0)
    goto <bb 394>; [INV]
  else
    goto <bb 412>; [INV]

  <bb 394> :
  D.255263 = gimple_assign_lhs (nowstmt);

  <bb 395> :
  _326 = D.255263;
  D.255264 = check_stmtStack (_326);

  <bb 396> :
  _327 = D.255264;
  retval.1147 = _327 == 0;
  if (retval.1147 != 0)
    goto <bb 397>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 397> :
  _328 = (long unsigned int) i;
  _329 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _328);
  _330 = _329->form_tree;
  retval.1148 = _330 != 0B;
  if (retval.1148 != 0)
    goto <bb 398>; [INV]
  else
    goto <bb 399>; [INV]

  <bb 398> :
  _331 = (long unsigned int) i;
  _332 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _331);
  _333 = _332->form_tree;
  set_gimple_array (used_stmt, nowstmt, _333, target, 0B);
  goto <bb 401>; [INV]

  <bb 399> :
  D.255265 = gimple_assign_lhs (nowstmt);

  <bb 400> :
  _334 = D.255265;
  set_gimple_array (used_stmt, nowstmt, _334, target, 0B);

  <bb 401> :
  D.255266 = gimple_assign_lhs (nowstmt);

  <bb 402> :
  _335 = D.255266;
  second = _335->exp.operands[0];
  if (second != 0B)
    goto <bb 403>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 403> :
  _336 = second->base.code;
  if (_336 == 153)
    goto <bb 404>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 404> :
  def_stmt = second->ssa_name.def_stmt;
  retval.1149 = is_gimple_assign (def_stmt);
  if (retval.1149 != 0)
    goto <bb 405>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 405> :
  D.255267 = gimple_assign_lhs (def_stmt);

  <bb 406> :
  _337 = D.255267;
  _338 = _337->base.code;
  retval.1150 = _338 == 153;
  if (retval.1150 != 0)
    goto <bb 407>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 407> :
  D.255268 = gimple_assign_lhs (def_stmt);

  <bb 408> :
  _339 = D.255268;
  retval.1151 = target2 != _339;
  if (retval.1151 != 0)
    goto <bb 409>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 409> :
  D.255269 = gimple_assign_lhs (def_stmt);

  <bb 410> :
  _340 = D.255269;
  D.255270 = gimple_assign_lhs (def_stmt);

  <bb 411> :
  _341 = D.255270;
  new_search_imm_use (used_stmt, _341, _340);
  goto <bb 636>; [INV]

  <bb 412> :
  D.255271 = gimple_assign_lhs (nowstmt);

  <bb 413> :
  _342 = D.255271;
  _343 = _342->base.code;
  retval.1152 = _343 == 153;
  if (retval.1152 != 0)
    goto <bb 414>; [INV]
  else
    goto <bb 494>; [INV]

  <bb 414> :
  D.255272 = gimple_assign_lhs (nowstmt);

  <bb 415> :
  _344 = D.255272;
  D.255273 = check_stmtStack (_344);

  <bb 416> :
  _345 = D.255273;
  retval.1153 = _345 == 0;
  if (retval.1153 != 0)
    goto <bb 417>; [INV]
  else
    goto <bb 433>; [INV]

  <bb 417> :
  _346 = (long unsigned int) i;
  _347 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _346);
  _348 = _347->form_tree;
  retval.1154 = _348 != 0B;
  if (retval.1154 != 0)
    goto <bb 418>; [INV]
  else
    goto <bb 419>; [INV]

  <bb 418> :
  _349 = (long unsigned int) i;
  _350 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _349);
  _351 = _350->form_tree;
  set_gimple_array (used_stmt, nowstmt, _351, target, 0B);
  goto <bb 421>; [INV]

  <bb 419> :
  D.255274 = gimple_assign_lhs (nowstmt);

  <bb 420> :
  _352 = D.255274;
  set_gimple_array (used_stmt, nowstmt, _352, target, 0B);

  <bb 421> :
  D.255275 = check_stmtStack4 (nowstmt);

  <bb 422> :
  _353 = D.255275;
  retval.1155 = _353 == 0;
  if (retval.1155 != 0)
    goto <bb 423>; [INV]
  else
    goto <bb 433>; [INV]

  <bb 423> :
  D.255276 = gimple_assign_lhs (nowstmt);

  <bb 424> :
  _354 = D.255276;
  if (target2 != _354)
    goto <bb 425>; [INV]
  else
    goto <bb 428>; [INV]

  <bb 425> :
  D.255277 = check_stmtStack2 (nowstmt);

  <bb 426> :
  _355 = D.255277;
  if (_355 == 0)
    goto <bb 427>; [INV]
  else
    goto <bb 428>; [INV]

  <bb 427> :
  iftmp.1157 = 1;
  goto <bb 429>; [INV]

  <bb 428> :
  iftmp.1157 = 0;

  <bb 429> :
  retval.1156 = iftmp.1157;
  if (retval.1156 != 0)
    goto <bb 430>; [INV]
  else
    goto <bb 433>; [INV]

  <bb 430> :
  D.255278 = gimple_assign_lhs (nowstmt);

  <bb 431> :
  _356 = D.255278;
  D.255279 = gimple_assign_lhs (nowstmt);

  <bb 432> :
  _357 = D.255279;
  new_search_imm_use (used_stmt, _357, _356);

  <bb 433> :
  D.255280 = gimple_assign_rhs1 (nowstmt);

  <bb 434> :
  _358 = D.255280;
  if (_358 != 0B)
    goto <bb 435>; [INV]
  else
    goto <bb 438>; [INV]

  <bb 435> :
  D.255281 = gimple_assign_rhs1 (nowstmt);

  <bb 436> :
  _359 = D.255281;
  _360 = _359->base.code;
  if (_360 == 47)
    goto <bb 437>; [INV]
  else
    goto <bb 438>; [INV]

  <bb 437> :
  iftmp.1159 = 1;
  goto <bb 439>; [INV]

  <bb 438> :
  iftmp.1159 = 0;

  <bb 439> :
  retval.1158 = iftmp.1159;
  if (retval.1158 != 0)
    goto <bb 440>; [INV]
  else
    goto <bb 456>; [INV]

  <bb 440> :
  D.255282 = gimple_assign_rhs1 (nowstmt);

  <bb 441> :
  _361 = D.255282;
  D.255283 = check_stmtStack (_361);

  <bb 442> :
  _362 = D.255283;
  retval.1160 = _362 == 0;
  if (retval.1160 != 0)
    goto <bb 443>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 443> :
  D.255284 = gimple_assign_rhs1 (nowstmt);

  <bb 444> :
  _363 = D.255284;
  second = _363->exp.operands[0];
  if (second != 0B)
    goto <bb 445>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 445> :
  _364 = second->base.code;
  if (_364 == 165)
    goto <bb 446>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 446> :
  three = second->exp.operands[0];
  if (three != 0B)
    goto <bb 447>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 447> :
  _365 = three->base.code;
  if (_365 == 153)
    goto <bb 448>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 448> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1161 = is_gimple_assign (def_stmt);
  if (retval.1161 != 0)
    goto <bb 449>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 449> :
  D.255285 = gimple_assign_lhs (def_stmt);

  <bb 450> :
  _366 = D.255285;
  _367 = _366->base.code;
  retval.1162 = _367 == 153;
  if (retval.1162 != 0)
    goto <bb 451>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 451> :
  D.255286 = gimple_assign_lhs (def_stmt);

  <bb 452> :
  _368 = D.255286;
  retval.1163 = target2 != _368;
  if (retval.1163 != 0)
    goto <bb 453>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 453> :
  D.255287 = gimple_assign_lhs (def_stmt);

  <bb 454> :
  _369 = D.255287;
  D.255288 = gimple_assign_lhs (def_stmt);

  <bb 455> :
  _370 = D.255288;
  new_search_imm_use (used_stmt, _370, _369);
  goto <bb 636>; [INV]

  <bb 456> :
  D.255289 = gimple_assign_rhs1 (nowstmt);

  <bb 457> :
  _371 = D.255289;
  if (_371 != 0B)
    goto <bb 458>; [INV]
  else
    goto <bb 461>; [INV]

  <bb 458> :
  D.255290 = gimple_assign_rhs1 (nowstmt);

  <bb 459> :
  _372 = D.255290;
  _373 = _372->base.code;
  if (_373 == 165)
    goto <bb 460>; [INV]
  else
    goto <bb 461>; [INV]

  <bb 460> :
  iftmp.1165 = 1;
  goto <bb 462>; [INV]

  <bb 461> :
  iftmp.1165 = 0;

  <bb 462> :
  retval.1164 = iftmp.1165;
  if (retval.1164 != 0)
    goto <bb 463>; [INV]
  else
    goto <bb 480>; [INV]

  <bb 463> :
  D.255291 = gimple_assign_rhs1 (nowstmt);

  <bb 464> :
  _374 = D.255291;
  D.255292 = check_stmtStack (_374);

  <bb 465> :
  _375 = D.255292;
  retval.1166 = _375 == 0;
  if (retval.1166 != 0)
    goto <bb 466>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 466> :
  _376 = (long unsigned int) i;
  _377 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _376);
  _378 = _377->form_tree;
  retval.1167 = _378 != 0B;
  if (retval.1167 != 0)
    goto <bb 467>; [INV]
  else
    goto <bb 468>; [INV]

  <bb 467> :
  _379 = (long unsigned int) i;
  _380 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _379);
  _381 = _380->form_tree;
  set_gimple_array (used_stmt, nowstmt, _381, target, 0B);
  goto <bb 470>; [INV]

  <bb 468> :
  D.255293 = gimple_assign_rhs1 (nowstmt);

  <bb 469> :
  _382 = D.255293;
  set_gimple_array (used_stmt, nowstmt, _382, target, 0B);

  <bb 470> :
  D.255294 = gimple_assign_rhs1 (nowstmt);

  <bb 471> :
  _383 = D.255294;
  second = _383->exp.operands[0];
  _384 = second->base.code;
  if (_384 == 165)
    goto <bb 472>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 472> :
  def_stmt = second->ssa_name.def_stmt;
  retval.1168 = is_gimple_assign (def_stmt);
  if (retval.1168 != 0)
    goto <bb 473>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 473> :
  D.255295 = gimple_assign_lhs (def_stmt);

  <bb 474> :
  _385 = D.255295;
  _386 = _385->base.code;
  retval.1169 = _386 == 153;
  if (retval.1169 != 0)
    goto <bb 475>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 475> :
  D.255296 = gimple_assign_lhs (def_stmt);

  <bb 476> :
  _387 = D.255296;
  retval.1170 = target2 != _387;
  if (retval.1170 != 0)
    goto <bb 477>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 477> :
  D.255297 = gimple_assign_lhs (def_stmt);

  <bb 478> :
  _388 = D.255297;
  D.255298 = gimple_assign_lhs (def_stmt);

  <bb 479> :
  _389 = D.255298;
  new_search_imm_use (used_stmt, _389, _388);
  goto <bb 636>; [INV]

  <bb 480> :
  D.255299 = gimple_assign_rhs1 (nowstmt);

  <bb 481> :
  _390 = D.255299;
  if (_390 != 0B)
    goto <bb 482>; [INV]
  else
    goto <bb 485>; [INV]

  <bb 482> :
  D.255300 = gimple_assign_rhs1 (nowstmt);

  <bb 483> :
  _391 = D.255300;
  _392 = _391->base.code;
  if (_392 == 49)
    goto <bb 484>; [INV]
  else
    goto <bb 485>; [INV]

  <bb 484> :
  iftmp.1172 = 1;
  goto <bb 486>; [INV]

  <bb 485> :
  iftmp.1172 = 0;

  <bb 486> :
  retval.1171 = iftmp.1172;
  if (retval.1171 != 0)
    goto <bb 487>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 487> :
  D.255301 = gimple_assign_rhs1 (nowstmt);

  <bb 488> :
  _393 = D.255301;
  D.255302 = check_stmtStack (_393);

  <bb 489> :
  _394 = D.255302;
  retval.1173 = _394 == 0;
  if (retval.1173 != 0)
    goto <bb 490>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 490> :
  _395 = (long unsigned int) i;
  _396 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _395);
  _397 = _396->form_tree;
  retval.1174 = _397 != 0B;
  if (retval.1174 != 0)
    goto <bb 491>; [INV]
  else
    goto <bb 492>; [INV]

  <bb 491> :
  _398 = (long unsigned int) i;
  _399 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _398);
  _400 = _399->form_tree;
  set_gimple_array (used_stmt, nowstmt, _400, target, 0B);
  goto <bb 636>; [INV]

  <bb 492> :
  D.255303 = gimple_assign_rhs1 (nowstmt);

  <bb 493> :
  _401 = D.255303;
  set_gimple_array (used_stmt, nowstmt, _401, target, 0B);
  goto <bb 636>; [INV]

  <bb 494> :
  D.255304 = gimple_assign_rhs1 (nowstmt);

  <bb 495> :
  _402 = D.255304;
  _403 = _402->base.code;
  retval.1175 = _403 == 153;
  if (retval.1175 != 0)
    goto <bb 496>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 496> :
  D.255305 = gimple_assign_rhs1 (nowstmt);

  <bb 497> :
  _404 = D.255305;
  D.255306 = check_stmtStack (_404);

  <bb 498> :
  _405 = D.255306;
  retval.1176 = _405 == 0;
  if (retval.1176 != 0)
    goto <bb 499>; [INV]
  else
    goto <bb 517>; [INV]

  <bb 499> :
  _406 = (long unsigned int) i;
  _407 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _406);
  _408 = _407->form_tree;
  retval.1177 = _408 != 0B;
  if (retval.1177 != 0)
    goto <bb 500>; [INV]
  else
    goto <bb 501>; [INV]

  <bb 500> :
  _409 = (long unsigned int) i;
  _410 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _409);
  _411 = _410->form_tree;
  set_gimple_array (used_stmt, nowstmt, _411, target, 0B);
  goto <bb 503>; [INV]

  <bb 501> :
  D.255307 = gimple_assign_rhs1 (nowstmt);

  <bb 502> :
  _412 = D.255307;
  set_gimple_array (used_stmt, nowstmt, _412, target, 0B);

  <bb 503> :
  D.255308 = gimple_assign_rhs1 (nowstmt);

  <bb 504> :
  _413 = D.255308;
  retval.1178 = target2 != _413;
  if (retval.1178 != 0)
    goto <bb 505>; [INV]
  else
    goto <bb 517>; [INV]

  <bb 505> :
  D.255309 = check_stmtStack4 (nowstmt);

  <bb 506> :
  _414 = D.255309;
  retval.1179 = _414 == 0;
  if (retval.1179 != 0)
    goto <bb 507>; [INV]
  else
    goto <bb 517>; [INV]

  <bb 507> :
  D.255310 = gimple_assign_rhs1 (nowstmt);

  <bb 508> :
  _415 = D.255310;
  if (target2 != _415)
    goto <bb 509>; [INV]
  else
    goto <bb 512>; [INV]

  <bb 509> :
  D.255311 = check_stmtStack2 (nowstmt);

  <bb 510> :
  _416 = D.255311;
  if (_416 == 0)
    goto <bb 511>; [INV]
  else
    goto <bb 512>; [INV]

  <bb 511> :
  iftmp.1181 = 1;
  goto <bb 513>; [INV]

  <bb 512> :
  iftmp.1181 = 0;

  <bb 513> :
  retval.1180 = iftmp.1181;
  if (retval.1180 != 0)
    goto <bb 514>; [INV]
  else
    goto <bb 517>; [INV]

  <bb 514> :
  D.255312 = gimple_assign_rhs1 (nowstmt);

  <bb 515> :
  _417 = D.255312;
  D.255313 = gimple_assign_rhs1 (nowstmt);

  <bb 516> :
  _418 = D.255313;
  new_search_imm_use (used_stmt, _418, _417);

  <bb 517> :
  D.255314 = gimple_assign_lhs (nowstmt);

  <bb 518> :
  _419 = D.255314;
  if (_419 != 0B)
    goto <bb 519>; [INV]
  else
    goto <bb 522>; [INV]

  <bb 519> :
  D.255315 = gimple_assign_lhs (nowstmt);

  <bb 520> :
  _420 = D.255315;
  _421 = _420->base.code;
  if (_421 == 47)
    goto <bb 521>; [INV]
  else
    goto <bb 522>; [INV]

  <bb 521> :
  iftmp.1183 = 1;
  goto <bb 523>; [INV]

  <bb 522> :
  iftmp.1183 = 0;

  <bb 523> :
  retval.1182 = iftmp.1183;
  if (retval.1182 != 0)
    goto <bb 524>; [INV]
  else
    goto <bb 540>; [INV]

  <bb 524> :
  D.255316 = gimple_assign_lhs (nowstmt);

  <bb 525> :
  _422 = D.255316;
  D.255317 = check_stmtStack (_422);

  <bb 526> :
  _423 = D.255317;
  retval.1184 = _423 == 0;
  if (retval.1184 != 0)
    goto <bb 527>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 527> :
  D.255318 = gimple_assign_lhs (nowstmt);

  <bb 528> :
  _424 = D.255318;
  second = _424->exp.operands[0];
  if (second != 0B)
    goto <bb 529>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 529> :
  _425 = second->base.code;
  if (_425 == 165)
    goto <bb 530>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 530> :
  three = second->exp.operands[0];
  if (three != 0B)
    goto <bb 531>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 531> :
  _426 = three->base.code;
  if (_426 == 153)
    goto <bb 532>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 532> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1185 = is_gimple_assign (def_stmt);
  if (retval.1185 != 0)
    goto <bb 533>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 533> :
  D.255319 = gimple_assign_lhs (def_stmt);

  <bb 534> :
  _427 = D.255319;
  _428 = _427->base.code;
  retval.1186 = _428 == 153;
  if (retval.1186 != 0)
    goto <bb 535>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 535> :
  D.255320 = gimple_assign_lhs (def_stmt);

  <bb 536> :
  _429 = D.255320;
  retval.1187 = target2 != _429;
  if (retval.1187 != 0)
    goto <bb 537>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 537> :
  D.255321 = gimple_assign_lhs (def_stmt);

  <bb 538> :
  _430 = D.255321;
  D.255322 = gimple_assign_lhs (def_stmt);

  <bb 539> :
  _431 = D.255322;
  new_search_imm_use (used_stmt, _431, _430);
  goto <bb 636>; [INV]

  <bb 540> :
  D.255323 = gimple_assign_lhs (nowstmt);

  <bb 541> :
  _432 = D.255323;
  if (_432 != 0B)
    goto <bb 542>; [INV]
  else
    goto <bb 545>; [INV]

  <bb 542> :
  D.255324 = gimple_assign_lhs (nowstmt);

  <bb 543> :
  _433 = D.255324;
  _434 = _433->base.code;
  if (_434 == 165)
    goto <bb 544>; [INV]
  else
    goto <bb 545>; [INV]

  <bb 544> :
  iftmp.1189 = 1;
  goto <bb 546>; [INV]

  <bb 545> :
  iftmp.1189 = 0;

  <bb 546> :
  retval.1188 = iftmp.1189;
  if (retval.1188 != 0)
    goto <bb 547>; [INV]
  else
    goto <bb 560>; [INV]

  <bb 547> :
  D.255325 = gimple_assign_lhs (nowstmt);

  <bb 548> :
  _435 = D.255325;
  D.255326 = check_stmtStack (_435);

  <bb 549> :
  _436 = D.255326;
  retval.1190 = _436 == 0;
  if (retval.1190 != 0)
    goto <bb 550>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 550> :
  D.255327 = gimple_assign_lhs (nowstmt);

  <bb 551> :
  _437 = D.255327;
  second = _437->exp.operands[0];
  _438 = second->base.code;
  if (_438 == 165)
    goto <bb 552>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 552> :
  def_stmt = second->ssa_name.def_stmt;
  retval.1191 = is_gimple_assign (def_stmt);
  if (retval.1191 != 0)
    goto <bb 553>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 553> :
  D.255328 = gimple_assign_lhs (def_stmt);

  <bb 554> :
  _439 = D.255328;
  _440 = _439->base.code;
  retval.1192 = _440 == 153;
  if (retval.1192 != 0)
    goto <bb 555>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 555> :
  D.255329 = gimple_assign_lhs (def_stmt);

  <bb 556> :
  _441 = D.255329;
  retval.1193 = target2 != _441;
  if (retval.1193 != 0)
    goto <bb 557>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 557> :
  D.255330 = gimple_assign_lhs (def_stmt);

  <bb 558> :
  _442 = D.255330;
  D.255331 = gimple_assign_lhs (def_stmt);

  <bb 559> :
  _443 = D.255331;
  new_search_imm_use (used_stmt, _443, _442);
  goto <bb 636>; [INV]

  <bb 560> :
  D.255332 = gimple_assign_lhs (nowstmt);

  <bb 561> :
  _444 = D.255332;
  _445 = _444->base.code;
  retval.1194 = _445 == 49;
  if (retval.1194 != 0)
    goto <bb 562>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 562> :
  D.255333 = gimple_assign_lhs (nowstmt);

  <bb 563> :
  _446 = D.255333;
  D.255334 = check_stmtStack (_446);

  <bb 564> :
  _447 = D.255334;
  retval.1195 = _447 == 0;
  if (retval.1195 != 0)
    goto <bb 565>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 565> :
  _448 = (long unsigned int) i;
  _449 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _448);
  _450 = _449->form_tree;
  retval.1196 = _450 != 0B;
  if (retval.1196 != 0)
    goto <bb 566>; [INV]
  else
    goto <bb 567>; [INV]

  <bb 566> :
  _451 = (long unsigned int) i;
  _452 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _451);
  _453 = _452->form_tree;
  set_gimple_array (used_stmt, nowstmt, _453, target, 0B);
  goto <bb 636>; [INV]

  <bb 567> :
  D.255335 = gimple_assign_lhs (nowstmt);

  <bb 568> :
  _454 = D.255335;
  set_gimple_array (used_stmt, nowstmt, _454, target, 0B);
  goto <bb 636>; [INV]

  <bb 569> :
  _455 = gimple_code (nowstmt);
  retval.1197 = _455 == 8;
  if (retval.1197 != 0)
    goto <bb 570>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 570> :
  _456 = gimple_code (nowstmt);
  retval.1198 = _456 == 8;
  if (retval.1198 != 0)
    goto <bb 571>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 571> :
  D.255336 = gimple_call_fn (nowstmt);

  <bb 572> :
  _457 = D.255336;
  retval.1199 = _457 != 0B;
  if (retval.1199 != 0)
    goto <bb 573>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 573> :
  D.255337 = gimple_call_fn (nowstmt);

  <bb 574> :
  _458 = D.255337;
  D.255338 = get_name (_458);

  <bb 575> :
  name = D.255338;
  D.255339 = gimple_call_lhs (nowstmt);

  <bb 576> :
  _459 = D.255339;
  if (_459 != 0B)
    goto <bb 579>; [INV]
  else
    goto <bb 577>; [INV]

  <bb 577> :
  D.255340 = gimple_call_fndecl (nowstmt);

  <bb 578> :
  _460 = D.255340;
  if (_460 != 0B)
    goto <bb 579>; [INV]
  else
    goto <bb 580>; [INV]

  <bb 579> :
  iftmp.1201 = 1;
  goto <bb 581>; [INV]

  <bb 580> :
  iftmp.1201 = 0;

  <bb 581> :
  retval.1200 = iftmp.1201;
  if (retval.1200 != 0)
    goto <bb 582>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 582> :
  D.255341 = gimple_call_lhs (nowstmt);

  <bb 583> :
  _461 = D.255341;
  D.255342 = check_stmtStack (_461);

  <bb 584> :
  _462 = D.255342;
  retval.1202 = _462 == 0;
  if (retval.1202 != 0)
    goto <bb 585>; [INV]
  else
    goto <bb 613>; [INV]

  <bb 585> :
  if (name != 0B)
    goto <bb 586>; [INV]
  else
    goto <bb 595>; [INV]

  <bb 586> :
  _463 = strcmp (name, "free");
  if (_463 == 0)
    goto <bb 587>; [INV]
  else
    goto <bb 591>; [INV]

  <bb 587> :
  D.255343 = check_stmtStack2 (nowstmt);

  <bb 588> :
  _464 = D.255343;
  retval.1203 = _464 == 0;
  if (retval.1203 != 0)
    goto <bb 589>; [INV]
  else
    goto <bb 595>; [INV]

  <bb 589> :
  D.255344 = gimple_call_arg (nowstmt, 0);

  <bb 590> :
  _465 = D.255344;
  set_gimple_array (used_stmt, nowstmt, _465, target, 0B);
  goto <bb 595>; [INV]

  <bb 591> :
  _466 = (long unsigned int) i;
  _467 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _466);
  _468 = _467->form_tree;
  retval.1204 = _468 != 0B;
  if (retval.1204 != 0)
    goto <bb 592>; [INV]
  else
    goto <bb 593>; [INV]

  <bb 592> :
  _469 = (long unsigned int) i;
  _470 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _469);
  _471 = _470->form_tree;
  set_gimple_array (used_stmt, nowstmt, _471, target, 0B);
  goto <bb 595>; [INV]

  <bb 593> :
  D.255345 = gimple_call_lhs (nowstmt);

  <bb 594> :
  _472 = D.255345;
  set_gimple_array (used_stmt, nowstmt, _472, target, 0B);

  <bb 595> :
  D.255346 = gimple_call_num_args (nowstmt);

  <bb 596> :
  _473 = D.255346;
  size = (int) _473;
  i = 0;
  goto <bb 612>; [INV]

  <bb 597> :
  i.1206_474 = (unsigned int) i;
  D.255347 = gimple_call_arg (nowstmt, i.1206_474);

  <bb 598> :
  _475 = D.255347;
  D.255348 = check_stmtStack (_475);

  <bb 599> :
  _476 = D.255348;
  retval.1205 = _476 == 0;
  if (retval.1205 != 0)
    goto <bb 600>; [INV]
  else
    goto <bb 611>; [INV]

  <bb 600> :
  i.1208_477 = (unsigned int) i;
  D.255349 = gimple_call_arg (nowstmt, i.1208_477);

  <bb 601> :
  _478 = D.255349;
  _479 = _478->base.code;
  retval.1207 = _479 == 153;
  if (retval.1207 != 0)
    goto <bb 602>; [INV]
  else
    goto <bb 607>; [INV]

  <bb 602> :
  i.1210_480 = (unsigned int) i;
  D.255350 = gimple_call_arg (nowstmt, i.1210_480);

  <bb 603> :
  _481 = D.255350;
  retval.1209 = target2 != _481;
  if (retval.1209 != 0)
    goto <bb 604>; [INV]
  else
    goto <bb 611>; [INV]

  <bb 604> :
  i.1211_482 = (unsigned int) i;
  D.255351 = gimple_call_arg (nowstmt, i.1211_482);

  <bb 605> :
  _483 = D.255351;
  i.1212_484 = (unsigned int) i;
  D.255352 = gimple_call_arg (nowstmt, i.1212_484);

  <bb 606> :
  _485 = D.255352;
  new_search_imm_use (used_stmt, _485, _483);
  goto <bb 611>; [INV]

  <bb 607> :
  i.1214_486 = (unsigned int) i;
  D.255353 = gimple_call_arg (nowstmt, i.1214_486);

  <bb 608> :
  _487 = D.255353;
  _488 = _487->base.code;
  retval.1213 = _488 == 131;
  if (retval.1213 != 0)
    goto <bb 609>; [INV]
  else
    goto <bb 611>; [INV]

  <bb 609> :
  i.1215_489 = (unsigned int) i;
  D.255354 = gimple_call_arg (nowstmt, i.1215_489);

  <bb 610> :
  _490 = D.255354;
  set_gimple_array (used_stmt, nowstmt, _490, target, 0B);

  <bb 611> :
  i = i + 1;

  <bb 612> :
  if (i < size)
    goto <bb 597>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 613> :
  D.255355 = check_stmtStack2 (nowstmt);

  <bb 614> :
  _491 = D.255355;
  retval.1216 = _491 == 0;
  if (retval.1216 != 0)
    goto <bb 615>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 615> :
  D.255356 = gimple_call_arg (nowstmt, 0);

  <bb 616> :
  _492 = D.255356;
  _493 = _492->base.code;
  retval.1217 = _493 == 131;
  if (retval.1217 != 0)
    goto <bb 617>; [INV]
  else
    goto <bb 619>; [INV]

  <bb 617> :
  D.255357 = gimple_call_arg (nowstmt, 0);

  <bb 618> :
  _494 = D.255357;
  set_gimple_array (used_stmt, nowstmt, _494, target, 0B);

  <bb 619> :
  D.255358 = gimple_call_num_args (nowstmt);

  <bb 620> :
  _495 = D.255358;
  size = (int) _495;
  i = 0;
  goto <bb 635>; [INV]

  <bb 621> :
  i.1219_496 = (unsigned int) i;
  D.255359 = gimple_call_arg (nowstmt, i.1219_496);

  <bb 622> :
  _497 = D.255359;
  D.255360 = check_stmtStack (_497);

  <bb 623> :
  _498 = D.255360;
  retval.1218 = _498 == 0;
  if (retval.1218 != 0)
    goto <bb 624>; [INV]
  else
    goto <bb 634>; [INV]

  <bb 624> :
  i.1221_499 = (unsigned int) i;
  D.255361 = gimple_call_arg (nowstmt, i.1221_499);

  <bb 625> :
  _500 = D.255361;
  _501 = _500->base.code;
  retval.1220 = _501 == 153;
  if (retval.1220 != 0)
    goto <bb 626>; [INV]
  else
    goto <bb 634>; [INV]

  <bb 626> :
  i.1223_502 = (unsigned int) i;
  D.255362 = gimple_call_arg (nowstmt, i.1223_502);

  <bb 627> :
  _503 = D.255362;
  D.255363 = check_stmtStack (_503);

  <bb 628> :
  _504 = D.255363;
  retval.1222 = _504 == 0;
  if (retval.1222 != 0)
    goto <bb 629>; [INV]
  else
    goto <bb 634>; [INV]

  <bb 629> :
  i.1225_505 = (unsigned int) i;
  D.255364 = gimple_call_arg (nowstmt, i.1225_505);

  <bb 630> :
  _506 = D.255364;
  retval.1224 = target2 != _506;
  if (retval.1224 != 0)
    goto <bb 631>; [INV]
  else
    goto <bb 634>; [INV]

  <bb 631> :
  i.1226_507 = (unsigned int) i;
  D.255365 = gimple_call_arg (nowstmt, i.1226_507);

  <bb 632> :
  _508 = D.255365;
  i.1227_509 = (unsigned int) i;
  D.255366 = gimple_call_arg (nowstmt, i.1227_509);

  <bb 633> :
  _510 = D.255366;
  new_search_imm_use (used_stmt, _510, _508);

  <bb 634> :
  i = i + 1;

  <bb 635> :
  if (i < size)
    goto <bb 621>; [INV]
  else
    goto <bb 636>; [INV]

  <bb 636> :
  i = i + 1;

  <bb 637> :
  _511 = (long unsigned int) i;
  _512 = std::vector<assign_type>::size (&assign_array.assign_type_array);
  retval.1228 = _511 < _512;
  if (retval.1228 != 0)
    goto <bb 391>; [INV]
  else
    goto <bb 638>; [INV]

  <bb 638> :
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};

  <bb 639> :
  getFunctionAssignVAR = {CLOBBER};

  <bb 640> :
  return;

  <bb 641> :
<L775>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 5

  <bb 642> :
<L776>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 4

  <bb 643> :
<L777>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  resx 3

  <bb 644> :
<L778>:
  second2 = {CLOBBER};
  resx 2

  <bb 645> :
<L779>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 13

  <bb 646> :
<L780>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 12

  <bb 647> :
<L781>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  resx 11

  <bb 648> :
<L782>:
  second2 = {CLOBBER};
  resx 10

  <bb 649> :
<L783>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 19

  <bb 650> :
<L784>:
  assign_array = {CLOBBER};
  resx 18

  <bb 651> :
<L785>:
  getFunctionAssignVAR = {CLOBBER};
  resx 1

}



;; Function function_assign_array::operator= (_ZN21function_assign_arrayaSEOS_, funcdef_no=6418, decl_uid=191090, cgraph_uid=3393, symbol_order=4170)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_assign_array & function_assign_array::operator= (struct function_assign_array * const this, struct function_assign_array & D.191091)
{
  struct function_assign_array & D.255370;

  <bb 2> :
  _1 = D.191091->pass;
  this->pass = _1;
  _2 = &D.191091->assign_type_array;
  _3 = &this->assign_type_array;
  std::vector<assign_type>::operator= (_3, _2);
  D.255370 = this;

  <bb 3> :
<L0>:
  return D.255370;

}



;; Function std::vector<assign_type>::operator= (_ZNSt6vectorI11assign_typeSaIS0_EEaSEOS2_, funcdef_no=7778, decl_uid=176245, cgraph_uid=4410, symbol_order=5196)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct vector & std::vector<assign_type>::operator= (struct vector * const this, struct vector & __x)
{
  const bool __move_storage;
  struct vector & D.255373;
  struct integral_constant D.255372;

  <bb 2> :
  __move_storage = 1;
  _1 = std::move<std::vector<assign_type>&> (__x);
  std::vector<assign_type>::_M_move_assign (this, _1, D.255372);
  D.255373 = this;

  <bb 3> :
<L0>:
  return D.255373;

}



;; Function std::move<std::vector<assign_type>&> (_ZSt4moveIRSt6vectorI11assign_typeSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_, funcdef_no=8734, decl_uid=215178, cgraph_uid=5366, symbol_order=6156)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::vector<assign_type>&> (struct vector & __t)
{
  struct type & D.255375;

  <bb 2> :
  D.255375 = __t;

  <bb 3> :
<L0>:
  return D.255375;

}



;; Function std::vector<assign_type>::_M_move_assign (_ZNSt6vectorI11assign_typeSaIS0_EE14_M_move_assignEOS2_St17integral_constantIbLb1EE, funcdef_no=8735, decl_uid=176523, cgraph_uid=5367, symbol_order=6157)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::_M_move_assign (struct vector * const this, struct vector & __x, struct true_type D.227784)
{
  struct vector __tmp;
  struct allocator_type D.227787;

  <bb 2> :
  _1 = &this->D.176655;
  D.227787 = std::_Vector_base<assign_type, std::allocator<assign_type> >::get_allocator (_1); [return slot optimization]
  std::vector<assign_type>::vector (&__tmp, &D.227787);
  std::allocator<assign_type>::~allocator (&D.227787);
  D.227787 = {CLOBBER};
  _2 = &this->D.176655._M_impl.D.176000;
  _3 = &__x->D.176655._M_impl.D.176000;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_swap_data (_2, _3);
  _4 = &__x->D.176655._M_impl.D.176000;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_swap_data (&__tmp.D.176655._M_impl.D.176000, _4);
  _5 = &__x->D.176655;
  _6 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_5);
  _7 = &this->D.176655;
  _8 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_7);
  std::__alloc_on_move<std::allocator<assign_type> > (_8, _6);
  std::vector<assign_type>::~vector (&__tmp);
  __tmp = {CLOBBER};
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::get_allocator (_ZNKSt12_Vector_baseI11assign_typeSaIS0_EE13get_allocatorEv, funcdef_no=9566, decl_uid=175892, cgraph_uid=6198, symbol_order=6988)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::_Vector_base<assign_type, std::allocator<assign_type> >::get_allocator (const struct _Vector_base * const this)
{
  <bb 2> :
  _1 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (this);
  std::allocator<assign_type>::allocator (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::vector<assign_type>::vector (_ZNSt6vectorI11assign_typeSaIS0_EEC2ERKS1_, funcdef_no=9568, decl_uid=176642, cgraph_uid=6200, symbol_order=6990)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::vector (struct vector * const this, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.176655;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_1, __a);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_ZNSt12_Vector_baseI11assign_typeSaIS0_EEC2ERKS1_, funcdef_no=10202, decl_uid=176100, cgraph_uid=6834, symbol_order=7628)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (struct _Vector_base * const this, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_1, __a);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_swap_data (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE17_Vector_impl_data12_M_swap_dataERS3_, funcdef_no=9570, decl_uid=175936, cgraph_uid=6202, symbol_order=6992)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_swap_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  struct _Vector_impl_data __tmp;

  <bb 2> :
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (&__tmp);
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_copy_data (&__tmp, this);
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_copy_data (this, __x);
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_copy_data (__x, &__tmp);
  __tmp = {CLOBBER};
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_copy_data (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE17_Vector_impl_data12_M_copy_dataERKS3_, funcdef_no=10204, decl_uid=175933, cgraph_uid=6836, symbol_order=7630)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_copy_data (struct _Vector_impl_data * const this, const struct _Vector_impl_data & __x)
{
  <bb 2> :
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  return;

}



;; Function std::__alloc_on_move<std::allocator<assign_type> > (_ZSt15__alloc_on_moveISaI11assign_typeEEvRT_S3_, funcdef_no=9571, decl_uid=227788, cgraph_uid=6203, symbol_order=6993)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_move<std::allocator<assign_type> > (struct allocator & __one, struct allocator & __two)
{
  <bb 2> :
  std::move<std::allocator<assign_type>&> (__two);
  return;

}



;; Function std::move<std::allocator<assign_type>&> (_ZSt4moveIRSaI11assign_typeEEONSt16remove_referenceIT_E4typeEOS4_, funcdef_no=10205, decl_uid=237611, cgraph_uid=6837, symbol_order=7631)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::allocator<assign_type>&> (struct allocator & __t)
{
  struct type & D.255379;

  <bb 2> :
  D.255379 = __t;

  <bb 3> :
<L0>:
  return D.255379;

}



;; Function Prenew_search_imm_use (_Z21Prenew_search_imm_useP12gimple_arrayP9tree_nodeS2_, funcdef_no=6419, decl_uid=187053, cgraph_uid=3395, symbol_order=4172)

Removing basic block 36
Removing basic block 39
Removing basic block 40
Removing basic block 48
Removing basic block 63
Removing basic block 64
Removing basic block 65
Removing basic block 89
Removing basic block 90
Removing basic block 91
Removing basic block 92
Removing basic block 93
Removing basic block 94
Removing basic block 95
Removing basic block 96
Removing basic block 97
Removing basic block 118
Removing basic block 119
Removing basic block 120
Removing basic block 121
Removing basic block 122
Removing basic block 123
Removing basic block 124
Removing basic block 132
Removing basic block 149
Removing basic block 150
Removing basic block 151
Removing basic block 152
Removing basic block 176
Removing basic block 177
Removing basic block 178
Removing basic block 179
Removing basic block 180
Removing basic block 181
Removing basic block 182
Removing basic block 183
Removing basic block 184
Removing basic block 205
Removing basic block 206
Removing basic block 207
Removing basic block 208
Removing basic block 209
Removing basic block 210
Removing basic block 211
Removing basic block 212
Removing basic block 221
Removing basic block 222
Removing basic block 230
Removing basic block 233
Removing basic block 234
Removing basic block 235
Removing basic block 238
Removing basic block 243
Removing basic block 246
Removing basic block 247
Removing basic block 248
Removing basic block 249
Removing basic block 250
Removing basic block 251
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 1
;;  header 192, latch 191
;;  depth 1, outer 0
;;  nodes
;;
;; Loop 2
;;  header 186, latch 185
;;  depth 2, outer 1
;;  nodes: 186 185 88 168 184 37 167 134 137 139 142 144 140 138 136 157 160 164 162 159 147 101 68 71 73 76 78 74 72 70 91 94 98 96 93 81 35 33 154 103 178 182 180 179 181 177 176 170 175 173 172 171 174 169 102 39 38 30 29 28 152 153 149 151 150 148 131 129 130 126 128 127 125 106 124 112 121 114 113 119 120 116 118 117 115 111 108 110 109 107 123 122 105 104 32 31 34 80 79 92 95 97 90 89 69 77 75 67 66 65 63 64 60 62 61 59 42 58 48 55 53 54 50 52 51 49 47 44 46 45 43 57 56 41 40 100 99 146 145 158 161 163 156 155 135 143 141 133 132 166 165 36 183 86 87 83 85 84 82
;; 2 succs { 3 193 }
;; 3 succs { 4 193 }
;; 4 succs { 5 193 }
;; 5 succs { 6 8 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 193 }
;; 10 succs { 11 193 }
;; 11 succs { 12 193 }
;; 12 succs { 192 }
;; 13 succs { 15 14 }
;; 14 succs { 15 16 }
;; 15 succs { 17 }
;; 16 succs { 17 }
;; 17 succs { 18 188 }
;; 18 succs { 195 19 }
;; 19 succs { 20 22 }
;; 20 succs { 195 21 }
;; 21 succs { 24 }
;; 22 succs { 195 23 }
;; 23 succs { 24 }
;; 24 succs { 194 25 }
;; 25 succs { 26 187 }
;; 26 succs { 194 27 }
;; 27 succs { 186 }
;; 28 succs { 29 168 }
;; 29 succs { 194 30 }
;; 30 succs { 31 38 }
;; 31 succs { 194 32 }
;; 32 succs { 194 33 }
;; 33 succs { 34 185 }
;; 34 succs { 35 36 }
;; 35 succs { 194 185 }
;; 36 succs { 194 37 }
;; 37 succs { 194 185 }
;; 38 succs { 194 39 }
;; 39 succs { 40 102 }
;; 40 succs { 194 41 }
;; 41 succs { 194 42 }
;; 42 succs { 43 59 }
;; 43 succs { 44 45 }
;; 44 succs { 194 47 }
;; 45 succs { 194 46 }
;; 46 succs { 194 47 }
;; 47 succs { 194 48 }
;; 48 succs { 49 59 }
;; 49 succs { 194 50 }
;; 50 succs { 51 54 }
;; 51 succs { 194 52 }
;; 52 succs { 53 54 }
;; 53 succs { 55 }
;; 54 succs { 55 }
;; 55 succs { 56 59 }
;; 56 succs { 194 57 }
;; 57 succs { 194 58 }
;; 58 succs { 194 59 }
;; 59 succs { 194 60 }
;; 60 succs { 61 64 }
;; 61 succs { 194 62 }
;; 62 succs { 63 64 }
;; 63 succs { 65 }
;; 64 succs { 65 }
;; 65 succs { 66 82 }
;; 66 succs { 194 67 }
;; 67 succs { 194 68 }
;; 68 succs { 69 185 }
;; 69 succs { 194 70 }
;; 70 succs { 71 185 }
;; 71 succs { 72 185 }
;; 72 succs { 73 185 }
;; 73 succs { 74 185 }
;; 74 succs { 75 185 }
;; 75 succs { 194 76 }
;; 76 succs { 77 185 }
;; 77 succs { 194 78 }
;; 78 succs { 79 185 }
;; 79 succs { 194 80 }
;; 80 succs { 194 81 }
;; 81 succs { 194 185 }
;; 82 succs { 194 83 }
;; 83 succs { 84 87 }
;; 84 succs { 194 85 }
;; 85 succs { 86 87 }
;; 86 succs { 88 }
;; 87 succs { 88 }
;; 88 succs { 89 185 }
;; 89 succs { 194 90 }
;; 90 succs { 194 91 }
;; 91 succs { 92 185 }
;; 92 succs { 194 93 }
;; 93 succs { 94 185 }
;; 94 succs { 95 185 }
;; 95 succs { 194 96 }
;; 96 succs { 97 185 }
;; 97 succs { 194 98 }
;; 98 succs { 99 185 }
;; 99 succs { 194 100 }
;; 100 succs { 194 101 }
;; 101 succs { 194 185 }
;; 102 succs { 194 103 }
;; 103 succs { 104 185 }
;; 104 succs { 194 105 }
;; 105 succs { 194 106 }
;; 106 succs { 107 125 }
;; 107 succs { 108 109 }
;; 108 succs { 194 111 }
;; 109 succs { 194 110 }
;; 110 succs { 194 111 }
;; 111 succs { 194 112 }
;; 112 succs { 113 125 }
;; 113 succs { 194 114 }
;; 114 succs { 115 125 }
;; 115 succs { 194 116 }
;; 116 succs { 117 120 }
;; 117 succs { 194 118 }
;; 118 succs { 119 120 }
;; 119 succs { 121 }
;; 120 succs { 121 }
;; 121 succs { 122 125 }
;; 122 succs { 194 123 }
;; 123 succs { 194 124 }
;; 124 succs { 194 125 }
;; 125 succs { 194 126 }
;; 126 succs { 127 130 }
;; 127 succs { 194 128 }
;; 128 succs { 129 130 }
;; 129 succs { 131 }
;; 130 succs { 131 }
;; 131 succs { 132 148 }
;; 132 succs { 194 133 }
;; 133 succs { 194 134 }
;; 134 succs { 135 185 }
;; 135 succs { 194 136 }
;; 136 succs { 137 185 }
;; 137 succs { 138 185 }
;; 138 succs { 139 185 }
;; 139 succs { 140 185 }
;; 140 succs { 141 185 }
;; 141 succs { 194 142 }
;; 142 succs { 143 185 }
;; 143 succs { 194 144 }
;; 144 succs { 145 185 }
;; 145 succs { 194 146 }
;; 146 succs { 194 147 }
;; 147 succs { 194 185 }
;; 148 succs { 194 149 }
;; 149 succs { 150 153 }
;; 150 succs { 194 151 }
;; 151 succs { 152 153 }
;; 152 succs { 154 }
;; 153 succs { 154 }
;; 154 succs { 155 185 }
;; 155 succs { 194 156 }
;; 156 succs { 194 157 }
;; 157 succs { 158 185 }
;; 158 succs { 194 159 }
;; 159 succs { 160 185 }
;; 160 succs { 161 185 }
;; 161 succs { 194 162 }
;; 162 succs { 163 185 }
;; 163 succs { 194 164 }
;; 164 succs { 165 185 }
;; 165 succs { 194 166 }
;; 166 succs { 194 167 }
;; 167 succs { 194 185 }
;; 168 succs { 169 185 }
;; 169 succs { 194 170 }
;; 170 succs { 171 176 }
;; 171 succs { 194 172 }
;; 172 succs { 194 173 }
;; 173 succs { 174 176 }
;; 174 succs { 194 175 }
;; 175 succs { 194 176 }
;; 176 succs { 194 177 }
;; 177 succs { 194 178 }
;; 178 succs { 179 185 }
;; 179 succs { 194 180 }
;; 180 succs { 181 185 }
;; 181 succs { 182 183 }
;; 182 succs { 194 185 }
;; 183 succs { 194 184 }
;; 184 succs { 194 185 }
;; 185 succs { 186 }
;; 186 succs { 28 187 }
;; 187 succs { 191 }
;; 188 succs { 189 191 }
;; 189 succs { 190 191 }
;; 190 succs { 191 }
;; 191 succs { 192 }
;; 192 succs { 13 193 }
;; 193 succs { 1 }
;; 194 succs { 195 }
;; 195 succs { }
void Prenew_search_imm_use (struct gimple_array * used_stmt, union tree_node * target, union tree_node * target2)
{
  unsigned int D.255745;
  union tree_node * D.255744;
  union tree_node * D.255743;
  int D.255742;
  union tree_node * D.255741;
  union tree_node * D.255740;
  union tree_node * D.255737;
  union tree_node * D.255736;
  int D.255735;
  union tree_node * D.255734;
  union tree_node * D.255733;
  int D.255732;
  union tree_node * D.255731;
  union tree_node * D.255730;
  union tree_node * D.255729;
  union tree_node * D.255728;
  union tree_node * D.255727;
  union tree_node * D.255726;
  union tree_node * D.255725;
  int D.255724;
  union tree_node * D.255723;
  union tree_node * D.255722;
  union tree_node * D.255721;
  union tree_node * D.255720;
  union tree_node * D.255719;
  union tree_node * D.255718;
  union tree_node * D.255717;
  union tree_node * D.255716;
  int D.255715;
  union tree_node * D.255714;
  union tree_node * D.255713;
  union tree_node * D.255712;
  union tree_node * D.255711;
  union tree_node * D.255710;
  int D.255709;
  union tree_node * D.255708;
  int D.255707;
  union tree_node * D.255706;
  union tree_node * D.255705;
  int D.255704;
  union tree_node * D.255703;
  union tree_node * D.255702;
  union tree_node * D.255701;
  union tree_node * D.255700;
  union tree_node * D.255699;
  union tree_node * D.255698;
  union tree_node * D.255697;
  int D.255696;
  union tree_node * D.255695;
  union tree_node * D.255694;
  union tree_node * D.255693;
  union tree_node * D.255692;
  union tree_node * D.255691;
  union tree_node * D.255690;
  union tree_node * D.255689;
  union tree_node * D.255688;
  int D.255687;
  union tree_node * D.255686;
  union tree_node * D.255685;
  union tree_node * D.255684;
  union tree_node * D.255683;
  union tree_node * D.255682;
  int D.255681;
  union tree_node * D.255680;
  int D.255679;
  union tree_node * D.255678;
  int D.255677;
  union tree_node * D.255676;
  union tree_node * D.255675;
  union tree_node * D.255674;
  int D.255673;
  union tree_node * D.255672;
  union tree_node * D.255671;
  struct function_assign_array * D.255670;
  union tree_node * D.255669;
  union tree_node * D.255668;
  union tree_node * D.255667;
  union tree_node * D.255666;
  union tree_node * D.255665;
  unsigned int D.255664;
  union tree_node * D.255663;
  union tree_node * D.255662;
  union tree_node * D.255661;
  union tree_node * D.255660;
  struct gimple * def_stmt;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second;
  int i;
  struct function_assign_array assign_array;
  union tree_node * getFunctionAssignVAR;
  union tree_node * second;
  int i;
  struct gimple * def_stmt;
  bool retval.1300;
  bool retval.1296;
  bool retval.1294;
  bool retval.1293;
  bool retval.1292;
  bool retval.1291;
  bool retval.1290;
  bool retval.1289;
  bool retval.1288;
  bool retval.1287;
  bool retval.1286;
  bool retval.1285;
  bool retval.1284;
  bool retval.1283;
  bool iftmp.1282;
  bool retval.1281;
  bool retval.1280;
  bool retval.1279;
  bool retval.1278;
  bool retval.1277;
  bool iftmp.1276;
  bool retval.1275;
  bool iftmp.1274;
  bool retval.1273;
  bool retval.1272;
  bool retval.1271;
  bool retval.1270;
  bool retval.1269;
  bool retval.1268;
  bool retval.1267;
  bool retval.1266;
  bool retval.1265;
  bool retval.1264;
  bool iftmp.1263;
  bool retval.1262;
  bool retval.1261;
  bool retval.1260;
  bool retval.1259;
  bool retval.1258;
  bool iftmp.1257;
  bool retval.1256;
  bool iftmp.1255;
  bool retval.1254;
  bool retval.1253;
  bool retval.1252;
  bool retval.1251;
  bool retval.1250;
  bool retval.1249;
  bool retval.1248;
  bool retval.1247;
  bool retval.1246;
  struct function_assign_array D.196324;
  bool retval.1243;
  bool retval.1239;
  bool iftmp.1236;
  bool retval.1235;
  bool retval.1234;
  bool retval.1233;
  bool iftmp.1232;
  bool retval.1231;
  bool retval.1230;
  bool retval.1229;

  <bb 2> :
  def_stmt = target->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 3> :
  _1 = gimple_code (def_stmt);
  retval.1229 = _1 == 8;
  if (retval.1229 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 4> :
  D.255660 = gimple_call_lhs (def_stmt);
  _2 = D.255660;
  retval.1230 = _2 != 0B;
  if (retval.1230 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 5> :
  D.255661 = gimple_call_lhs (def_stmt);
  _3 = D.255661;
  if (_3 != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  D.255662 = gimple_call_lhs (def_stmt);
  _4 = D.255662;
  _5 = _4->base.code;
  if (_5 == 153)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1232 = 1;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.1232 = 0;

  <bb 9> :
  retval.1231 = iftmp.1232;
  if (retval.1231 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 10> :
  D.255663 = gimple_assign_rhs1 (def_stmt);
  _6 = D.255663;
  retval.1233 = _6 != 0B;
  if (retval.1233 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 11> :
  D.255664 = gimple_call_num_args (def_stmt);
  _7 = D.255664;
  retval.1234 = _7 != 0;
  if (retval.1234 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 12> :
  i = 0;
  goto <bb 192>; [INV]

  <bb 13> :
  i.1237_8 = (unsigned int) i;
  D.255665 = gimple_call_arg (def_stmt, i.1237_8);
  _9 = D.255665;
  _10 = _9->base.code;
  if (_10 == 131)
    goto <bb 15>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  i.1238_11 = (unsigned int) i;
  D.255666 = gimple_call_arg (def_stmt, i.1238_11);
  _12 = D.255666;
  _13 = _12->base.code;
  if (_13 == 36)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  iftmp.1236 = 1;
  goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1236 = 0;

  <bb 17> :
  retval.1235 = iftmp.1236;
  if (retval.1235 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 188>; [INV]

  <bb 18> :
  i.1240_14 = (unsigned int) i;
  D.255667 = gimple_call_arg (def_stmt, i.1240_14);

  <bb 19> :
  _15 = D.255667;
  _16 = _15->base.code;
  retval.1239 = _16 == 131;
  if (retval.1239 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 20> :
  i.1241_17 = (unsigned int) i;
  D.255668 = gimple_call_arg (def_stmt, i.1241_17);

  <bb 21> :
  _18 = D.255668;
  second = _18->exp.operands[0];
  goto <bb 24>; [INV]

  <bb 22> :
  i.1242_19 = (unsigned int) i;
  D.255669 = gimple_call_arg (def_stmt, i.1242_19);

  <bb 23> :
  second = D.255669;

  <bb 24> :
  getFunctionAssignVAR = second;
  function_assign_array::function_assign_array (&assign_array);
  function_assign_collect.1244_20 = function_assign_collect;
  D.255670 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1244_20, &getFunctionAssignVAR);

  <bb 25> :
  _21 = D.255670;
  retval.1243 = _21 != 0B;
  if (retval.1243 != 0)
    goto <bb 26>; [INV]
  else
    goto <bb 187>; [INV]

  <bb 26> :
  getFunctionAssignVAR.1245_22 = getFunctionAssignVAR;
  D.196324 = ret_function_varstmt (getFunctionAssignVAR.1245_22); [return slot optimization]

  <bb 27> :
  function_assign_array::operator= (&assign_array, &D.196324);
  function_assign_array::~function_assign_array (&D.196324);
  D.196324 = {CLOBBER};
  i = 0;
  goto <bb 186>; [INV]

  <bb 28> :
  _23 = (long unsigned int) i;
  _24 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _23);
  _25 = _24->stmt;
  _26 = gimple_code (_25);
  retval.1246 = _26 == 6;
  if (retval.1246 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 168>; [INV]

  <bb 29> :
  _27 = (long unsigned int) i;
  _28 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _27);
  _29 = _28->stmt;
  D.255671 = gimple_assign_lhs (_29);

  <bb 30> :
  _30 = D.255671;
  _31 = _30->base.code;
  retval.1247 = _31 == 165;
  if (retval.1247 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 31> :
  _32 = (long unsigned int) i;
  _33 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _32);
  _34 = _33->stmt;
  D.255672 = gimple_assign_lhs (_34);

  <bb 32> :
  _35 = D.255672;
  D.255673 = check_stmtStack (_35);

  <bb 33> :
  _36 = D.255673;
  retval.1248 = _36 == 0;
  if (retval.1248 != 0)
    goto <bb 34>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 34> :
  _37 = (long unsigned int) i;
  _38 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _37);
  _39 = _38->form_tree;
  retval.1249 = _39 != 0B;
  if (retval.1249 != 0)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  _40 = (long unsigned int) i;
  _41 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _40);
  _42 = _41->form_tree;
  _43 = (long unsigned int) i;
  _44 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _43);
  _45 = _44->stmt;
  set_gimple_array (used_stmt, _45, _42, target, 0B);
  goto <bb 185>; [INV]

  <bb 36> :
  _46 = (long unsigned int) i;
  _47 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _46);
  _48 = _47->stmt;
  D.255674 = gimple_assign_lhs (_48);

  <bb 37> :
  _49 = D.255674;
  _50 = (long unsigned int) i;
  _51 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _50);
  _52 = _51->stmt;
  set_gimple_array (used_stmt, _52, _49, target, 0B);
  goto <bb 185>; [INV]

  <bb 38> :
  _53 = (long unsigned int) i;
  _54 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _53);
  _55 = _54->stmt;
  D.255675 = gimple_assign_lhs (_55);

  <bb 39> :
  _56 = D.255675;
  _57 = _56->base.code;
  retval.1250 = _57 == 153;
  if (retval.1250 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 40> :
  _58 = (long unsigned int) i;
  _59 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _58);
  _60 = _59->stmt;
  D.255676 = gimple_assign_lhs (_60);

  <bb 41> :
  _61 = D.255676;
  D.255677 = check_stmtStack (_61);

  <bb 42> :
  _62 = D.255677;
  retval.1251 = _62 == 0;
  if (retval.1251 != 0)
    goto <bb 43>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 43> :
  _63 = (long unsigned int) i;
  _64 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _63);
  _65 = _64->form_tree;
  retval.1252 = _65 != 0B;
  if (retval.1252 != 0)
    goto <bb 44>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 44> :
  _66 = (long unsigned int) i;
  _67 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _66);
  _68 = _67->form_tree;
  _69 = (long unsigned int) i;
  _70 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _69);
  _71 = _70->stmt;
  set_gimple_array (used_stmt, _71, _68, target, 0B);
  goto <bb 47>; [INV]

  <bb 45> :
  _72 = (long unsigned int) i;
  _73 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _72);
  _74 = _73->stmt;
  D.255678 = gimple_assign_lhs (_74);

  <bb 46> :
  _75 = D.255678;
  _76 = (long unsigned int) i;
  _77 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _76);
  _78 = _77->stmt;
  set_gimple_array (used_stmt, _78, _75, target, 0B);

  <bb 47> :
  _79 = (long unsigned int) i;
  _80 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _79);
  _81 = _80->stmt;
  D.255679 = check_stmtStack4 (_81);

  <bb 48> :
  _82 = D.255679;
  retval.1253 = _82 == 0;
  if (retval.1253 != 0)
    goto <bb 49>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 49> :
  _83 = (long unsigned int) i;
  _84 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _83);
  _85 = _84->stmt;
  D.255680 = gimple_assign_lhs (_85);

  <bb 50> :
  _86 = D.255680;
  if (target2 != _86)
    goto <bb 51>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 51> :
  _87 = (long unsigned int) i;
  _88 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _87);
  _89 = _88->stmt;
  D.255681 = check_stmtStack2 (_89);

  <bb 52> :
  _90 = D.255681;
  if (_90 == 0)
    goto <bb 53>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 53> :
  iftmp.1255 = 1;
  goto <bb 55>; [INV]

  <bb 54> :
  iftmp.1255 = 0;

  <bb 55> :
  retval.1254 = iftmp.1255;
  if (retval.1254 != 0)
    goto <bb 56>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 56> :
  _91 = (long unsigned int) i;
  _92 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _91);
  _93 = _92->stmt;
  D.255682 = gimple_assign_lhs (_93);

  <bb 57> :
  _94 = D.255682;
  _95 = (long unsigned int) i;
  _96 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _95);
  _97 = _96->stmt;
  D.255683 = gimple_assign_lhs (_97);

  <bb 58> :
  _98 = D.255683;
  new_search_imm_use (used_stmt, _98, _94);

  <bb 59> :
  _99 = (long unsigned int) i;
  _100 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _99);
  _101 = _100->stmt;
  D.255684 = gimple_assign_rhs1 (_101);

  <bb 60> :
  _102 = D.255684;
  if (_102 != 0B)
    goto <bb 61>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 61> :
  _103 = (long unsigned int) i;
  _104 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _103);
  _105 = _104->stmt;
  D.255685 = gimple_assign_rhs1 (_105);

  <bb 62> :
  _106 = D.255685;
  _107 = _106->base.code;
  if (_107 == 47)
    goto <bb 63>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 63> :
  iftmp.1257 = 1;
  goto <bb 65>; [INV]

  <bb 64> :
  iftmp.1257 = 0;

  <bb 65> :
  retval.1256 = iftmp.1257;
  if (retval.1256 != 0)
    goto <bb 66>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 66> :
  _108 = (long unsigned int) i;
  _109 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _108);
  _110 = _109->stmt;
  D.255686 = gimple_assign_rhs1 (_110);

  <bb 67> :
  _111 = D.255686;
  D.255687 = check_stmtStack (_111);

  <bb 68> :
  _112 = D.255687;
  retval.1258 = _112 == 0;
  if (retval.1258 != 0)
    goto <bb 69>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 69> :
  _113 = (long unsigned int) i;
  _114 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _113);
  _115 = _114->stmt;
  D.255688 = gimple_assign_rhs1 (_115);

  <bb 70> :
  _116 = D.255688;
  second = _116->exp.operands[0];
  if (second != 0B)
    goto <bb 71>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 71> :
  _117 = second->base.code;
  if (_117 == 165)
    goto <bb 72>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 72> :
  three = second->exp.operands[0];
  if (three != 0B)
    goto <bb 73>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 73> :
  _118 = three->base.code;
  if (_118 == 153)
    goto <bb 74>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 74> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1259 = is_gimple_assign (def_stmt);
  if (retval.1259 != 0)
    goto <bb 75>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 75> :
  D.255689 = gimple_assign_lhs (def_stmt);

  <bb 76> :
  _119 = D.255689;
  _120 = _119->base.code;
  retval.1260 = _120 == 153;
  if (retval.1260 != 0)
    goto <bb 77>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 77> :
  D.255690 = gimple_assign_lhs (def_stmt);

  <bb 78> :
  _121 = D.255690;
  retval.1261 = target2 != _121;
  if (retval.1261 != 0)
    goto <bb 79>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 79> :
  D.255691 = gimple_assign_lhs (def_stmt);

  <bb 80> :
  _122 = D.255691;
  D.255692 = gimple_assign_lhs (def_stmt);

  <bb 81> :
  _123 = D.255692;
  new_search_imm_use (used_stmt, _123, _122);
  goto <bb 185>; [INV]

  <bb 82> :
  _124 = (long unsigned int) i;
  _125 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _124);
  _126 = _125->stmt;
  D.255693 = gimple_assign_rhs1 (_126);

  <bb 83> :
  _127 = D.255693;
  if (_127 != 0B)
    goto <bb 84>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 84> :
  _128 = (long unsigned int) i;
  _129 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _128);
  _130 = _129->stmt;
  D.255694 = gimple_assign_rhs1 (_130);

  <bb 85> :
  _131 = D.255694;
  _132 = _131->base.code;
  if (_132 == 165)
    goto <bb 86>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 86> :
  iftmp.1263 = 1;
  goto <bb 88>; [INV]

  <bb 87> :
  iftmp.1263 = 0;

  <bb 88> :
  retval.1262 = iftmp.1263;
  if (retval.1262 != 0)
    goto <bb 89>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 89> :
  _133 = (long unsigned int) i;
  _134 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _133);
  _135 = _134->stmt;
  D.255695 = gimple_assign_rhs1 (_135);

  <bb 90> :
  _136 = D.255695;
  D.255696 = check_stmtStack (_136);

  <bb 91> :
  _137 = D.255696;
  retval.1264 = _137 == 0;
  if (retval.1264 != 0)
    goto <bb 92>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 92> :
  _138 = (long unsigned int) i;
  _139 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _138);
  _140 = _139->stmt;
  D.255697 = gimple_assign_rhs1 (_140);

  <bb 93> :
  _141 = D.255697;
  second = _141->exp.operands[0];
  _142 = second->base.code;
  if (_142 == 165)
    goto <bb 94>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 94> :
  def_stmt = second->ssa_name.def_stmt;
  retval.1265 = is_gimple_assign (def_stmt);
  if (retval.1265 != 0)
    goto <bb 95>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 95> :
  D.255698 = gimple_assign_lhs (def_stmt);

  <bb 96> :
  _143 = D.255698;
  _144 = _143->base.code;
  retval.1266 = _144 == 153;
  if (retval.1266 != 0)
    goto <bb 97>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 97> :
  D.255699 = gimple_assign_lhs (def_stmt);

  <bb 98> :
  _145 = D.255699;
  retval.1267 = target2 != _145;
  if (retval.1267 != 0)
    goto <bb 99>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 99> :
  D.255700 = gimple_assign_lhs (def_stmt);

  <bb 100> :
  _146 = D.255700;
  D.255701 = gimple_assign_lhs (def_stmt);

  <bb 101> :
  _147 = D.255701;
  new_search_imm_use (used_stmt, _147, _146);
  goto <bb 185>; [INV]

  <bb 102> :
  _148 = (long unsigned int) i;
  _149 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _148);
  _150 = _149->stmt;
  D.255702 = gimple_assign_rhs1 (_150);

  <bb 103> :
  _151 = D.255702;
  _152 = _151->base.code;
  retval.1268 = _152 == 153;
  if (retval.1268 != 0)
    goto <bb 104>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 104> :
  _153 = (long unsigned int) i;
  _154 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _153);
  _155 = _154->stmt;
  D.255703 = gimple_assign_rhs1 (_155);

  <bb 105> :
  _156 = D.255703;
  D.255704 = check_stmtStack (_156);

  <bb 106> :
  _157 = D.255704;
  retval.1269 = _157 == 0;
  if (retval.1269 != 0)
    goto <bb 107>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 107> :
  _158 = (long unsigned int) i;
  _159 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _158);
  _160 = _159->form_tree;
  retval.1270 = _160 != 0B;
  if (retval.1270 != 0)
    goto <bb 108>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 108> :
  _161 = (long unsigned int) i;
  _162 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _161);
  _163 = _162->form_tree;
  _164 = (long unsigned int) i;
  _165 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _164);
  _166 = _165->stmt;
  set_gimple_array (used_stmt, _166, _163, target, 0B);
  goto <bb 111>; [INV]

  <bb 109> :
  _167 = (long unsigned int) i;
  _168 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _167);
  _169 = _168->stmt;
  D.255705 = gimple_assign_rhs1 (_169);

  <bb 110> :
  _170 = D.255705;
  _171 = (long unsigned int) i;
  _172 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _171);
  _173 = _172->stmt;
  set_gimple_array (used_stmt, _173, _170, target, 0B);

  <bb 111> :
  _174 = (long unsigned int) i;
  _175 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _174);
  _176 = _175->stmt;
  D.255706 = gimple_assign_rhs1 (_176);

  <bb 112> :
  _177 = D.255706;
  retval.1271 = target2 != _177;
  if (retval.1271 != 0)
    goto <bb 113>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 113> :
  _178 = (long unsigned int) i;
  _179 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _178);
  _180 = _179->stmt;
  D.255707 = check_stmtStack4 (_180);

  <bb 114> :
  _181 = D.255707;
  retval.1272 = _181 == 0;
  if (retval.1272 != 0)
    goto <bb 115>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 115> :
  _182 = (long unsigned int) i;
  _183 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _182);
  _184 = _183->stmt;
  D.255708 = gimple_assign_rhs1 (_184);

  <bb 116> :
  _185 = D.255708;
  if (target2 != _185)
    goto <bb 117>; [INV]
  else
    goto <bb 120>; [INV]

  <bb 117> :
  _186 = (long unsigned int) i;
  _187 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _186);
  _188 = _187->stmt;
  D.255709 = check_stmtStack2 (_188);

  <bb 118> :
  _189 = D.255709;
  if (_189 == 0)
    goto <bb 119>; [INV]
  else
    goto <bb 120>; [INV]

  <bb 119> :
  iftmp.1274 = 1;
  goto <bb 121>; [INV]

  <bb 120> :
  iftmp.1274 = 0;

  <bb 121> :
  retval.1273 = iftmp.1274;
  if (retval.1273 != 0)
    goto <bb 122>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 122> :
  _190 = (long unsigned int) i;
  _191 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _190);
  _192 = _191->stmt;
  D.255710 = gimple_assign_rhs1 (_192);

  <bb 123> :
  _193 = D.255710;
  _194 = (long unsigned int) i;
  _195 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _194);
  _196 = _195->stmt;
  D.255711 = gimple_assign_rhs1 (_196);

  <bb 124> :
  _197 = D.255711;
  new_search_imm_use (used_stmt, _197, _193);

  <bb 125> :
  _198 = (long unsigned int) i;
  _199 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _198);
  _200 = _199->stmt;
  D.255712 = gimple_assign_lhs (_200);

  <bb 126> :
  _201 = D.255712;
  if (_201 != 0B)
    goto <bb 127>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 127> :
  _202 = (long unsigned int) i;
  _203 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _202);
  _204 = _203->stmt;
  D.255713 = gimple_assign_lhs (_204);

  <bb 128> :
  _205 = D.255713;
  _206 = _205->base.code;
  if (_206 == 47)
    goto <bb 129>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 129> :
  iftmp.1276 = 1;
  goto <bb 131>; [INV]

  <bb 130> :
  iftmp.1276 = 0;

  <bb 131> :
  retval.1275 = iftmp.1276;
  if (retval.1275 != 0)
    goto <bb 132>; [INV]
  else
    goto <bb 148>; [INV]

  <bb 132> :
  _207 = (long unsigned int) i;
  _208 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _207);
  _209 = _208->stmt;
  D.255714 = gimple_assign_lhs (_209);

  <bb 133> :
  _210 = D.255714;
  D.255715 = check_stmtStack (_210);

  <bb 134> :
  _211 = D.255715;
  retval.1277 = _211 == 0;
  if (retval.1277 != 0)
    goto <bb 135>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 135> :
  _212 = (long unsigned int) i;
  _213 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _212);
  _214 = _213->stmt;
  D.255716 = gimple_assign_lhs (_214);

  <bb 136> :
  _215 = D.255716;
  second = _215->exp.operands[0];
  if (second != 0B)
    goto <bb 137>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 137> :
  _216 = second->base.code;
  if (_216 == 165)
    goto <bb 138>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 138> :
  three = second->exp.operands[0];
  if (three != 0B)
    goto <bb 139>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 139> :
  _217 = three->base.code;
  if (_217 == 153)
    goto <bb 140>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 140> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1278 = is_gimple_assign (def_stmt);
  if (retval.1278 != 0)
    goto <bb 141>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 141> :
  D.255717 = gimple_assign_lhs (def_stmt);

  <bb 142> :
  _218 = D.255717;
  _219 = _218->base.code;
  retval.1279 = _219 == 153;
  if (retval.1279 != 0)
    goto <bb 143>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 143> :
  D.255718 = gimple_assign_lhs (def_stmt);

  <bb 144> :
  _220 = D.255718;
  retval.1280 = target2 != _220;
  if (retval.1280 != 0)
    goto <bb 145>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 145> :
  D.255719 = gimple_assign_lhs (def_stmt);

  <bb 146> :
  _221 = D.255719;
  D.255720 = gimple_assign_lhs (def_stmt);

  <bb 147> :
  _222 = D.255720;
  new_search_imm_use (used_stmt, _222, _221);
  goto <bb 185>; [INV]

  <bb 148> :
  _223 = (long unsigned int) i;
  _224 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _223);
  _225 = _224->stmt;
  D.255721 = gimple_assign_lhs (_225);

  <bb 149> :
  _226 = D.255721;
  if (_226 != 0B)
    goto <bb 150>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 150> :
  _227 = (long unsigned int) i;
  _228 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _227);
  _229 = _228->stmt;
  D.255722 = gimple_assign_lhs (_229);

  <bb 151> :
  _230 = D.255722;
  _231 = _230->base.code;
  if (_231 == 165)
    goto <bb 152>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 152> :
  iftmp.1282 = 1;
  goto <bb 154>; [INV]

  <bb 153> :
  iftmp.1282 = 0;

  <bb 154> :
  retval.1281 = iftmp.1282;
  if (retval.1281 != 0)
    goto <bb 155>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 155> :
  _232 = (long unsigned int) i;
  _233 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _232);
  _234 = _233->stmt;
  D.255723 = gimple_assign_lhs (_234);

  <bb 156> :
  _235 = D.255723;
  D.255724 = check_stmtStack (_235);

  <bb 157> :
  _236 = D.255724;
  retval.1283 = _236 == 0;
  if (retval.1283 != 0)
    goto <bb 158>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 158> :
  _237 = (long unsigned int) i;
  _238 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _237);
  _239 = _238->stmt;
  D.255725 = gimple_assign_lhs (_239);

  <bb 159> :
  _240 = D.255725;
  second = _240->exp.operands[0];
  _241 = second->base.code;
  if (_241 == 165)
    goto <bb 160>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 160> :
  def_stmt = second->ssa_name.def_stmt;
  retval.1284 = is_gimple_assign (def_stmt);
  if (retval.1284 != 0)
    goto <bb 161>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 161> :
  D.255726 = gimple_assign_lhs (def_stmt);

  <bb 162> :
  _242 = D.255726;
  _243 = _242->base.code;
  retval.1285 = _243 == 153;
  if (retval.1285 != 0)
    goto <bb 163>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 163> :
  D.255727 = gimple_assign_lhs (def_stmt);

  <bb 164> :
  _244 = D.255727;
  retval.1286 = target2 != _244;
  if (retval.1286 != 0)
    goto <bb 165>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 165> :
  D.255728 = gimple_assign_lhs (def_stmt);

  <bb 166> :
  _245 = D.255728;
  D.255729 = gimple_assign_lhs (def_stmt);

  <bb 167> :
  _246 = D.255729;
  new_search_imm_use (used_stmt, _246, _245);
  goto <bb 185>; [INV]

  <bb 168> :
  _247 = (long unsigned int) i;
  _248 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _247);
  _249 = _248->stmt;
  _250 = gimple_code (_249);
  retval.1287 = _250 == 8;
  if (retval.1287 != 0)
    goto <bb 169>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 169> :
  _251 = (long unsigned int) i;
  _252 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _251);
  _253 = _252->stmt;
  D.255730 = gimple_call_arg (_253, 0);

  <bb 170> :
  _254 = D.255730;
  _255 = _254->base.code;
  retval.1288 = _255 == 131;
  if (retval.1288 != 0)
    goto <bb 171>; [INV]
  else
    goto <bb 176>; [INV]

  <bb 171> :
  _256 = (long unsigned int) i;
  _257 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _256);
  _258 = _257->stmt;
  D.255731 = gimple_call_arg (_258, 0);

  <bb 172> :
  _259 = D.255731;
  D.255732 = check_stmtStack (_259);

  <bb 173> :
  _260 = D.255732;
  retval.1289 = _260 == 0;
  if (retval.1289 != 0)
    goto <bb 174>; [INV]
  else
    goto <bb 176>; [INV]

  <bb 174> :
  _261 = (long unsigned int) i;
  _262 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _261);
  _263 = _262->stmt;
  D.255733 = gimple_call_arg (_263, 0);

  <bb 175> :
  _264 = D.255733;
  _265 = (long unsigned int) i;
  _266 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _265);
  _267 = _266->stmt;
  set_gimple_array (used_stmt, _267, _264, target, 0B);

  <bb 176> :
  _268 = (long unsigned int) i;
  _269 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _268);
  _270 = _269->stmt;
  D.255734 = gimple_call_arg (_270, 0);

  <bb 177> :
  _271 = D.255734;
  D.255735 = check_stmtStack (_271);

  <bb 178> :
  _272 = D.255735;
  retval.1290 = _272 == 0;
  if (retval.1290 != 0)
    goto <bb 179>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 179> :
  _273 = (long unsigned int) i;
  _274 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _273);
  _275 = _274->stmt;
  D.255736 = gimple_call_arg (_275, 0);

  <bb 180> :
  _276 = D.255736;
  _277 = _276->base.code;
  retval.1291 = _277 == 153;
  if (retval.1291 != 0)
    goto <bb 181>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 181> :
  _278 = (long unsigned int) i;
  _279 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _278);
  _280 = _279->form_tree;
  retval.1292 = _280 != 0B;
  if (retval.1292 != 0)
    goto <bb 182>; [INV]
  else
    goto <bb 183>; [INV]

  <bb 182> :
  _281 = (long unsigned int) i;
  _282 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _281);
  _283 = _282->form_tree;
  _284 = (long unsigned int) i;
  _285 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _284);
  _286 = _285->stmt;
  set_gimple_array (used_stmt, _286, _283, target, 0B);
  goto <bb 185>; [INV]

  <bb 183> :
  _287 = (long unsigned int) i;
  _288 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _287);
  _289 = _288->stmt;
  D.255737 = gimple_call_arg (_289, 0);

  <bb 184> :
  _290 = D.255737;
  _291 = (long unsigned int) i;
  _292 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _291);
  _293 = _292->stmt;
  set_gimple_array (used_stmt, _293, _290, target, 0B);

  <bb 185> :
  i = i + 1;

  <bb 186> :
  _294 = (long unsigned int) i;
  _295 = std::vector<assign_type>::size (&assign_array.assign_type_array);
  retval.1293 = _294 < _295;
  if (retval.1293 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 187>; [INV]

  <bb 187> :
  function_assign_array::~function_assign_array (&assign_array);
  getFunctionAssignVAR = {CLOBBER};
  assign_array = {CLOBBER};
  goto <bb 191>; [INV]

  <bb 188> :
  i.1295_296 = (unsigned int) i;
  D.255740 = gimple_call_arg (def_stmt, i.1295_296);
  _297 = D.255740;
  _298 = _297->base.code;
  retval.1294 = _298 == 153;
  if (retval.1294 != 0)
    goto <bb 189>; [INV]
  else
    goto <bb 191>; [INV]

  <bb 189> :
  i.1297_299 = (unsigned int) i;
  D.255741 = gimple_call_arg (def_stmt, i.1297_299);
  _300 = D.255741;
  D.255742 = check_stmtStack (_300);
  _301 = D.255742;
  retval.1296 = _301 == 0;
  if (retval.1296 != 0)
    goto <bb 190>; [INV]
  else
    goto <bb 191>; [INV]

  <bb 190> :
  i.1298_302 = (unsigned int) i;
  D.255743 = gimple_call_arg (def_stmt, i.1298_302);
  _303 = D.255743;
  i.1299_304 = (unsigned int) i;
  D.255744 = gimple_call_arg (def_stmt, i.1299_304);
  _305 = D.255744;
  new_search_imm_use (used_stmt, _305, _303);

  <bb 191> :
  i = i + 1;

  <bb 192> :
  D.255745 = gimple_call_num_args (def_stmt);
  _306 = D.255745;
  i.1301_307 = (unsigned int) i;
  retval.1300 = _306 > i.1301_307;
  if (retval.1300 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 193> :
  return;

  <bb 194> :
<L224>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 2

  <bb 195> :
<L225>:
  getFunctionAssignVAR = {CLOBBER};
  assign_array = {CLOBBER};
  resx 1

}



;; Function new_search_imm_use (_Z18new_search_imm_useP12gimple_arrayP9tree_nodeS2_, funcdef_no=6420, decl_uid=187049, cgraph_uid=3396, symbol_order=4173)

Removing basic block 11
Removing basic block 12
Removing basic block 16
Removing basic block 39
Removing basic block 40
Removing basic block 41
Removing basic block 42
Removing basic block 43
Removing basic block 49
Removing basic block 50
Removing basic block 76
Removing basic block 78
Removing basic block 90
Removing basic block 92
Removing basic block 93
Removing basic block 94
Removing basic block 106
Removing basic block 108
Removing basic block 110
Removing basic block 119
Removing basic block 121
Removing basic block 123
Removing basic block 127
Removing basic block 134
Removing basic block 141
Removing basic block 142
Removing basic block 143
Removing basic block 153
Removing basic block 154
Removing basic block 155
Removing basic block 170
Removing basic block 171
Removing basic block 172
Removing basic block 173
Removing basic block 200
Removing basic block 201
Removing basic block 202
Removing basic block 203
Removing basic block 204
Removing basic block 225
Removing basic block 226
Removing basic block 239
Removing basic block 240
Removing basic block 241
Removing basic block 242
Removing basic block 262
Removing basic block 263
Removing basic block 264
Removing basic block 268
Removing basic block 269
Removing basic block 270
Removing basic block 271
Removing basic block 284
Removing basic block 285
Removing basic block 295
Removing basic block 323
Removing basic block 329
Removing basic block 330
Removing basic block 343
Removing basic block 349
Removing basic block 350
Removing basic block 351
Removing basic block 360
Removing basic block 361
Removing basic block 362
Removing basic block 365
Removing basic block 367
Removing basic block 377
Removing basic block 378
Removing basic block 401
Removing basic block 402
Removing basic block 425
Removing basic block 426
Removing basic block 427
Removing basic block 428
Removing basic block 429
Removing basic block 433
Removing basic block 434
Removing basic block 435
Removing basic block 436
Removing basic block 437
Removing basic block 448
Removing basic block 449
Removing basic block 464
Removing basic block 470
Removing basic block 474
Removing basic block 475
Removing basic block 476
Removing basic block 477
Removing basic block 478
Removing basic block 480
Removing basic block 481
Removing basic block 485
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398
;;
;; Loop 3
;;  header 218, latch 217
;;  depth 1, outer 0
;;  nodes: 218 217 209 216 211 213 212 210 215 214 208 219
;;
;; Loop 2
;;  header 355, latch 354
;;  depth 1, outer 0
;;  nodes: 355 354 341 353 343 348 350 345 344 349 347 346 342 352 351 340 356
;;
;; Loop 1
;;  header 299, latch 298
;;  depth 1, outer 0
;;  nodes: 299 298 279 290 297 272 282 265 289 292 295 294 293 291 288 287 284 286 285 283 264 263 262 260 261 257 259 258 256 255 281 280 271 270 267 269 268 266 296 277 278 274 276 275 273
;; 2 succs { 4 3 }
;; 3 succs { 4 393 }
;; 4 succs { 5 7 }
;; 5 succs { 398 6 }
;; 6 succs { 238 }
;; 7 succs { 8 11 }
;; 8 succs { 9 11 }
;; 9 succs { 10 11 }
;; 10 succs { 22 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 394 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 393 }
;; 19 succs { 392 }
;; 20 succs { 398 21 }
;; 21 succs { 22 390 }
;; 22 succs { 398 23 }
;; 23 succs { 24 36 }
;; 24 succs { 25 36 }
;; 25 succs { 398 26 }
;; 26 succs { 27 36 }
;; 27 succs { 398 28 }
;; 28 succs { 29 31 }
;; 29 succs { 30 31 }
;; 30 succs { 32 }
;; 31 succs { 32 }
;; 32 succs { 33 36 }
;; 33 succs { 398 34 }
;; 34 succs { 35 36 }
;; 35 succs { 398 36 }
;; 36 succs { 37 41 }
;; 37 succs { 398 38 }
;; 38 succs { 398 39 }
;; 39 succs { 40 390 }
;; 40 succs { 398 390 }
;; 41 succs { 42 141 }
;; 42 succs { 398 43 }
;; 43 succs { 398 44 }
;; 44 succs { 398 45 }
;; 45 succs { 398 46 }
;; 46 succs { 47 93 }
;; 47 succs { 48 93 }
;; 48 succs { 398 49 }
;; 49 succs { 50 79 }
;; 50 succs { 398 51 }
;; 51 succs { 52 56 }
;; 52 succs { 398 53 }
;; 53 succs { 398 54 }
;; 54 succs { 55 56 }
;; 55 succs { 57 }
;; 56 succs { 57 }
;; 57 succs { 58 67 }
;; 58 succs { 398 59 }
;; 59 succs { 60 63 }
;; 60 succs { 398 61 }
;; 61 succs { 62 63 }
;; 62 succs { 64 }
;; 63 succs { 64 }
;; 64 succs { 65 66 }
;; 65 succs { 398 66 }
;; 66 succs { 398 79 }
;; 67 succs { 68 79 }
;; 68 succs { 69 79 }
;; 69 succs { 398 70 }
;; 70 succs { 71 79 }
;; 71 succs { 72 75 }
;; 72 succs { 398 73 }
;; 73 succs { 74 75 }
;; 74 succs { 76 }
;; 75 succs { 76 }
;; 76 succs { 77 78 }
;; 77 succs { 398 78 }
;; 78 succs { 398 79 }
;; 79 succs { 80 92 }
;; 80 succs { 81 92 }
;; 81 succs { 398 82 }
;; 82 succs { 83 91 }
;; 83 succs { 84 87 }
;; 84 succs { 398 85 }
;; 85 succs { 86 87 }
;; 86 succs { 88 }
;; 87 succs { 88 }
;; 88 succs { 89 90 }
;; 89 succs { 398 90 }
;; 90 succs { 398 91 }
;; 91 succs { 398 92 }
;; 92 succs { 102 }
;; 93 succs { 94 102 }
;; 94 succs { 95 102 }
;; 95 succs { 398 96 }
;; 96 succs { 97 101 }
;; 97 succs { 398 98 }
;; 98 succs { 99 100 }
;; 99 succs { 398 100 }
;; 100 succs { 398 101 }
;; 101 succs { 398 102 }
;; 102 succs { 398 103 }
;; 103 succs { 104 105 }
;; 104 succs { 398 105 }
;; 105 succs { 398 106 }
;; 106 succs { 107 118 }
;; 107 succs { 108 118 }
;; 108 succs { 398 109 }
;; 109 succs { 110 111 }
;; 110 succs { 398 111 }
;; 111 succs { 112 117 }
;; 112 succs { 398 113 }
;; 113 succs { 114 117 }
;; 114 succs { 398 115 }
;; 115 succs { 116 117 }
;; 116 succs { 398 117 }
;; 117 succs { 140 }
;; 118 succs { 119 127 }
;; 119 succs { 120 127 }
;; 120 succs { 121 126 }
;; 121 succs { 398 122 }
;; 122 succs { 123 126 }
;; 123 succs { 398 124 }
;; 124 succs { 125 126 }
;; 125 succs { 398 126 }
;; 126 succs { 140 }
;; 127 succs { 128 140 }
;; 128 succs { 129 140 }
;; 129 succs { 130 140 }
;; 130 succs { 398 131 }
;; 131 succs { 134 132 }
;; 132 succs { 398 133 }
;; 133 succs { 134 135 }
;; 134 succs { 136 }
;; 135 succs { 136 }
;; 136 succs { 137 140 }
;; 137 succs { 398 138 }
;; 138 succs { 139 140 }
;; 139 succs { 398 140 }
;; 140 succs { 390 }
;; 141 succs { 142 166 }
;; 142 succs { 398 143 }
;; 143 succs { 144 147 }
;; 144 succs { 398 145 }
;; 145 succs { 146 147 }
;; 146 succs { 148 }
;; 147 succs { 148 }
;; 148 succs { 149 390 }
;; 149 succs { 398 150 }
;; 150 succs { 151 390 }
;; 151 succs { 398 152 }
;; 152 succs { 398 153 }
;; 153 succs { 154 157 }
;; 154 succs { 398 155 }
;; 155 succs { 156 157 }
;; 156 succs { 158 }
;; 157 succs { 158 }
;; 158 succs { 159 390 }
;; 159 succs { 398 160 }
;; 160 succs { 398 161 }
;; 161 succs { 398 162 }
;; 162 succs { 163 390 }
;; 163 succs { 398 164 }
;; 164 succs { 398 165 }
;; 165 succs { 398 390 }
;; 166 succs { 167 390 }
;; 167 succs { 398 168 }
;; 168 succs { 169 170 }
;; 169 succs { 394 }
;; 170 succs { 398 171 }
;; 171 succs { 398 172 }
;; 172 succs { 173 390 }
;; 173 succs { 174 220 }
;; 174 succs { 398 175 }
;; 175 succs { 176 198 }
;; 176 succs { 398 177 }
;; 177 succs { 398 178 }
;; 178 succs { 179 186 }
;; 179 succs { 398 180 }
;; 180 succs { 398 181 }
;; 181 succs { 398 182 }
;; 182 succs { 183 389 }
;; 183 succs { 398 184 }
;; 184 succs { 398 185 }
;; 185 succs { 398 389 }
;; 186 succs { 398 187 }
;; 187 succs { 188 389 }
;; 188 succs { 398 189 }
;; 189 succs { 398 190 }
;; 190 succs { 191 389 }
;; 191 succs { 398 192 }
;; 192 succs { 398 193 }
;; 193 succs { 398 194 }
;; 194 succs { 195 389 }
;; 195 succs { 398 196 }
;; 196 succs { 398 197 }
;; 197 succs { 398 389 }
;; 198 succs { 398 199 }
;; 199 succs { 200 389 }
;; 200 succs { 398 201 }
;; 201 succs { 398 202 }
;; 202 succs { 203 389 }
;; 203 succs { 398 204 }
;; 204 succs { 398 205 }
;; 205 succs { 398 206 }
;; 206 succs { 207 389 }
;; 207 succs { 218 }
;; 208 succs { 398 209 }
;; 209 succs { 210 217 }
;; 210 succs { 398 211 }
;; 211 succs { 212 217 }
;; 212 succs { 398 213 }
;; 213 succs { 214 217 }
;; 214 succs { 398 215 }
;; 215 succs { 398 216 }
;; 216 succs { 398 217 }
;; 217 succs { 218 }
;; 218 succs { 398 219 }
;; 219 succs { 208 389 }
;; 220 succs { 222 221 }
;; 221 succs { 222 233 }
;; 222 succs { 398 223 }
;; 223 succs { 398 224 }
;; 224 succs { 225 232 }
;; 225 succs { 398 226 }
;; 226 succs { 398 227 }
;; 227 succs { 398 228 }
;; 228 succs { 229 232 }
;; 229 succs { 398 230 }
;; 230 succs { 398 231 }
;; 231 succs { 398 232 }
;; 232 succs { 389 }
;; 233 succs { 235 234 }
;; 234 succs { 235 311 }
;; 235 succs { 398 236 }
;; 236 succs { 398 237 }
;; 237 succs { 238 310 }
;; 238 succs { 239 241 }
;; 239 succs { 240 241 }
;; 240 succs { 241 }
;; 241 succs { 398 242 }
;; 242 succs { 243 245 }
;; 243 succs { 398 244 }
;; 244 succs { 249 }
;; 245 succs { 398 246 }
;; 246 succs { 247 249 }
;; 247 succs { 398 248 }
;; 248 succs { 249 }
;; 249 succs { 250 301 }
;; 250 succs { 251 301 }
;; 251 succs { 396 252 }
;; 252 succs { 253 300 }
;; 253 succs { 396 254 }
;; 254 succs { 299 }
;; 255 succs { 256 290 }
;; 256 succs { 396 257 }
;; 257 succs { 258 261 }
;; 258 succs { 396 259 }
;; 259 succs { 260 261 }
;; 260 succs { 262 }
;; 261 succs { 262 }
;; 262 succs { 263 273 }
;; 263 succs { 396 264 }
;; 264 succs { 396 265 }
;; 265 succs { 266 298 }
;; 266 succs { 267 268 }
;; 267 succs { 396 270 }
;; 268 succs { 396 269 }
;; 269 succs { 396 270 }
;; 270 succs { 396 271 }
;; 271 succs { 396 272 }
;; 272 succs { 396 298 }
;; 273 succs { 396 274 }
;; 274 succs { 275 278 }
;; 275 succs { 396 276 }
;; 276 succs { 277 278 }
;; 277 succs { 279 }
;; 278 succs { 279 }
;; 279 succs { 280 298 }
;; 280 succs { 396 281 }
;; 281 succs { 396 282 }
;; 282 succs { 283 298 }
;; 283 succs { 284 285 }
;; 284 succs { 396 287 }
;; 285 succs { 396 286 }
;; 286 succs { 396 287 }
;; 287 succs { 396 288 }
;; 288 succs { 396 289 }
;; 289 succs { 396 298 }
;; 290 succs { 291 298 }
;; 291 succs { 396 292 }
;; 292 succs { 293 298 }
;; 293 succs { 396 294 }
;; 294 succs { 396 295 }
;; 295 succs { 296 298 }
;; 296 succs { 396 297 }
;; 297 succs { 396 298 }
;; 298 succs { 299 }
;; 299 succs { 255 300 }
;; 300 succs { 301 }
;; 301 succs { 302 303 }
;; 302 succs { 394 }
;; 303 succs { 398 304 }
;; 304 succs { 398 305 }
;; 305 succs { 398 306 }
;; 306 succs { 307 310 }
;; 307 succs { 398 308 }
;; 308 succs { 398 309 }
;; 309 succs { 398 310 }
;; 310 succs { 389 }
;; 311 succs { 398 312 }
;; 312 succs { 313 318 }
;; 313 succs { 398 314 }
;; 314 succs { 315 318 }
;; 315 succs { 398 316 }
;; 316 succs { 317 318 }
;; 317 succs { 319 }
;; 318 succs { 319 }
;; 319 succs { 320 357 }
;; 320 succs { 398 321 }
;; 321 succs { 398 322 }
;; 322 succs { 323 389 }
;; 323 succs { 398 324 }
;; 324 succs { 398 325 }
;; 325 succs { 398 326 }
;; 326 succs { 327 332 }
;; 327 succs { 398 328 }
;; 328 succs { 329 332 }
;; 329 succs { 398 330 }
;; 330 succs { 398 331 }
;; 331 succs { 398 332 }
;; 332 succs { 398 333 }
;; 333 succs { 334 389 }
;; 334 succs { 398 335 }
;; 335 succs { 398 336 }
;; 336 succs { 337 389 }
;; 337 succs { 398 338 }
;; 338 succs { 339 389 }
;; 339 succs { 355 }
;; 340 succs { 398 341 }
;; 341 succs { 342 354 }
;; 342 succs { 398 343 }
;; 343 succs { 344 354 }
;; 344 succs { 398 345 }
;; 345 succs { 346 354 }
;; 346 succs { 398 347 }
;; 347 succs { 398 348 }
;; 348 succs { 349 354 }
;; 349 succs { 398 350 }
;; 350 succs { 351 354 }
;; 351 succs { 398 352 }
;; 352 succs { 398 353 }
;; 353 succs { 398 354 }
;; 354 succs { 355 }
;; 355 succs { 398 356 }
;; 356 succs { 340 389 }
;; 357 succs { 398 358 }
;; 358 succs { 398 359 }
;; 359 succs { 360 367 }
;; 360 succs { 398 361 }
;; 361 succs { 398 362 }
;; 362 succs { 398 363 }
;; 363 succs { 364 367 }
;; 364 succs { 398 365 }
;; 365 succs { 398 366 }
;; 366 succs { 398 367 }
;; 367 succs { 398 368 }
;; 368 succs { 369 389 }
;; 369 succs { 398 370 }
;; 370 succs { 398 371 }
;; 371 succs { 372 389 }
;; 372 succs { 398 373 }
;; 373 succs { 374 389 }
;; 374 succs { 398 375 }
;; 375 succs { 398 376 }
;; 376 succs { 398 377 }
;; 377 succs { 378 381 }
;; 378 succs { 398 379 }
;; 379 succs { 398 380 }
;; 380 succs { 398 381 }
;; 381 succs { 398 382 }
;; 382 succs { 383 389 }
;; 383 succs { 398 384 }
;; 384 succs { 385 386 }
;; 385 succs { 398 389 }
;; 386 succs { 398 387 }
;; 387 succs { 388 389 }
;; 388 succs { 398 389 }
;; 389 succs { 390 }
;; 390 succs { 398 391 }
;; 391 succs { 392 }
;; 392 succs { 20 393 }
;; 393 succs { 395 }
;; 394 succs { 395 }
;; 395 succs { 1 }
;; 396 succs { 397 }
;; 397 succs { 398 }
;; 398 succs { }
void new_search_imm_use (struct gimple_array * used_stmt, union tree_node * target, union tree_node * target2)
{
  struct ssa_use_operand_t * D.256373;
  union tree_node * D.256372;
  union tree_node * D.256371;
  union tree_node * D.256370;
  union tree_node * D.256369;
  union tree_node * D.256368;
  union tree_node * D.256367;
  union tree_node * D.256366;
  union tree_node * D.256365;
  int D.256364;
  union tree_node * D.256363;
  union tree_node * D.256362;
  union tree_node * D.256361;
  union tree_node * D.256360;
  union tree_node * D.256359;
  union tree_node * D.256358;
  int D.256357;
  union tree_node * D.256356;
  unsigned int D.256355;
  union tree_node * D.256354;
  union tree_node * D.256353;
  union tree_node * D.256352;
  int D.256351;
  union tree_node * D.256350;
  union tree_node * D.256349;
  union tree_node * D.256348;
  union tree_node * D.256347;
  unsigned int D.256346;
  int D.256345;
  union tree_node * D.256344;
  union tree_node * D.256343;
  union tree_node * D.256342;
  union tree_node * D.256341;
  int D.256340;
  union tree_node * D.256339;
  union tree_node * D.256338;
  int D.256337;
  union tree_node * D.256336;
  union tree_node * D.256335;
  union tree_node * D.256334;
  union tree_node * D.256333;
  union tree_node * D.256332;
  union tree_node * D.256331;
  union tree_node * D.256330;
  union tree_node * D.256329;
  union tree_node * D.256326;
  int D.256325;
  union tree_node * D.256324;
  union tree_node * D.256323;
  union tree_node * D.256322;
  union tree_node * D.256321;
  union tree_node * D.256320;
  int D.256319;
  union tree_node * D.256318;
  union tree_node * D.256317;
  union tree_node * D.256316;
  union tree_node * D.256315;
  union tree_node * D.256314;
  union tree_node * D.256313;
  int D.256312;
  union tree_node * D.256311;
  union tree_node * D.256310;
  union tree_node * D.256309;
  struct function_assign_array * D.256308;
  union tree_node * D.256307;
  union tree_node * D.256306;
  union tree_node * D.256305;
  union tree_node * D.256304;
  int D.256303;
  union tree_node * D.256302;
  union tree_node * D.256301;
  union tree_node * D.256300;
  union tree_node * D.256299;
  union tree_node * D.256298;
  int D.256297;
  union tree_node * D.256296;
  unsigned int D.256295;
  union tree_node * D.256294;
  union tree_node * D.256293;
  union tree_node * D.256292;
  union tree_node * D.256291;
  union tree_node * D.256290;
  unsigned int D.256289;
  union tree_node * D.256288;
  int D.256287;
  union tree_node * D.256286;
  union tree_node * D.256285;
  union tree_node * D.256284;
  union tree_node * D.256283;
  union tree_node * D.256282;
  union tree_node * D.256281;
  int D.256280;
  union tree_node * D.256279;
  union tree_node * D.256278;
  union tree_node * D.256277;
  union tree_node * D.256276;
  union tree_node * D.256275;
  union tree_node * D.256274;
  int D.256273;
  union tree_node * D.256272;
  union tree_node * D.256271;
  const char * D.256270;
  union tree_node * D.256269;
  union tree_node * D.256268;
  union tree_node * D.256267;
  union tree_node * D.256266;
  union tree_node * D.256265;
  union tree_node * D.256264;
  int D.256263;
  int D.256262;
  union tree_node * D.256261;
  union tree_node * D.256260;
  union tree_node * D.256259;
  union tree_node * D.256258;
  int D.256257;
  int D.256256;
  int D.256255;
  int D.256254;
  int D.256253;
  int D.256252;
  int D.256251;
  int D.256250;
  int D.256249;
  int D.256248;
  int D.256247;
  int D.256246;
  int D.256245;
  union tree_node * D.256244;
  int D.256243;
  union tree_node * D.256242;
  union tree_node * D.256241;
  union tree_node * D.256240;
  union tree_node * D.256239;
  union tree_node * D.256238;
  int D.256237;
  struct greturn * D.256236;
  int D.256235;
  const struct gcond * D.256234;
  union tree_node * D.256233;
  tree_code D.256232;
  int D.256231;
  struct gimple * def_stmt;
  int i;
  int i;
  struct function_assign_array assign_array;
  union tree_node * getFunctionAssignVAR;
  int isVardecl;
  union tree_node * second;
  int i;
  union tree_node * fundecl;
  union tree_node * gimpleassignrhs;
  union tree_node * gimpleassignlhs;
  int ssa_name_assign;
  union tree_node * return_tree;
  const struct gcond * gc;
  const struct ssa_use_operand_t * const head;
  int has_single_use_flag;
  int var_declsuperjump;
  int size;
  struct gimple * def_stmt;
  const char * name;
  struct gimple * gc;
  struct gimple * use_stmt;
  struct ssa_use_operand_t * use_p;
  struct imm_use_iterator imm_iter;
  bool retval.1418;
  bool retval.1417;
  bool retval.1416;
  bool retval.1415;
  bool retval.1414;
  bool retval.1413;
  bool retval.1412;
  bool retval.1411;
  bool retval.1410;
  bool retval.1409;
  bool retval.1407;
  bool retval.1403;
  bool retval.1401;
  bool retval.1399;
  bool retval.1397;
  bool retval.1395;
  bool retval.1394;
  bool retval.1393;
  bool retval.1392;
  bool retval.1391;
  bool retval.1390;
  bool retval.1389;
  bool iftmp.1388;
  bool retval.1387;
  bool retval.1386;
  bool retval.1385;
  bool retval.1384;
  bool retval.1383;
  bool retval.1382;
  bool retval.1381;
  bool retval.1380;
  bool iftmp.1379;
  bool retval.1378;
  bool retval.1377;
  bool retval.1376;
  bool iftmp.1375;
  bool retval.1374;
  bool retval.1373;
  struct function_assign_array D.196405;
  bool retval.1370;
  bool retval.1369;
  bool retval.1368;
  bool retval.1367;
  bool retval.1366;
  bool retval.1365;
  bool retval.1363;
  bool retval.1359;
  bool retval.1357;
  bool retval.1355;
  bool retval.1354;
  bool retval.1353;
  bool retval.1352;
  bool retval.1351;
  bool retval.1350;
  bool retval.1349;
  bool retval.1348;
  bool retval.1347;
  bool retval.1346;
  bool retval.1345;
  bool retval.1344;
  bool retval.1343;
  bool iftmp.1342;
  bool retval.1341;
  bool retval.1340;
  bool iftmp.1339;
  bool retval.1338;
  bool retval.1337;
  bool iftmp.1336;
  bool retval.1335;
  bool retval.1334;
  bool retval.1333;
  bool retval.1332;
  bool retval.1331;
  bool retval.1330;
  bool iftmp.1329;
  bool retval.1328;
  bool retval.1327;
  bool iftmp.1326;
  bool retval.1325;
  bool retval.1324;
  bool iftmp.1323;
  bool retval.1322;
  bool iftmp.1321;
  bool retval.1320;
  bool retval.1319;
  bool retval.1318;
  bool retval.1317;
  bool retval.1316;
  bool retval.1315;
  bool iftmp.1314;
  bool retval.1313;
  bool retval.1312;
  bool retval.1311;
  bool retval.1310;
  bool retval.1309;
  bool iftmp.1308;
  bool retval.1307;
  bool retval.1304;

  <bb 2> :
  def_stmt = target->ssa_name.def_stmt;
  size = 8;
  var_declsuperjump = 0;
  has_single_use_flag = 0;
  levelsize.1302_1 = levelsize;
  _2 = levelsize.1302_1 + 1;
  levelsize = _2;
  _3 = target->base.code;
  if (_3 == 153)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _4 = target->base.code;
  if (_4 == 131)
    goto <bb 4>; [INV]
  else
    goto <bb 393>; [INV]

  <bb 4> :
  head = &target->ssa_name.imm_uses;
  _5 = target->base.code;
  if (_5 == 131)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  stderr.1303_6 = stderr;
  __builtin_fwrite ("GIMPLE CODE :var_declsuperjump-------\n", 1, 38, stderr.1303_6);

  <bb 6> :
  var_declsuperjump = 1;
  // predicted unlikely by goto predictor.
  goto <bb 238>; [INV]

  <bb 7> :
  _7 = head->next;
  _8 = _7->loc.stmt;
  if (_8 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 8> :
  _9 = num_imm_uses (target);
  retval.1304 = _9 == 1;
  if (retval.1304 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  has_single_use_flag = 1;
  if (target != target2)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _10 = head->next;
  use_stmt = _10->loc.stmt;
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 11> :
  levelsize.1305_11 = levelsize;
  if (levelsize.1305_11 > 1)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  now_tree.1306_12 = now_tree;
  if (target == now_tree.1306_12)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 394>; [INV]

  <bb 14> :
  _13 = num_imm_uses (target);
  if (_13 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  _14 = head->next;
  if (_14 != 0B)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1308 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.1308 = 0;

  <bb 18> :
  retval.1307 = iftmp.1308;
  if (retval.1307 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 393>; [INV]

  <bb 19> :
  use_p = first_readonly_imm_use (&imm_iter, target);
  goto <bb 392>; [INV]

  <bb 20> :
  use_stmt = use_p->loc.stmt;
  D.256231 = check_stmtStack4 (use_stmt);

  <bb 21> :
  _15 = D.256231;
  retval.1309 = _15 == 0;
  if (retval.1309 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 390>; [INV]

  <bb 22> :
has_single_use_jump:
  D.256232 = gimple_cond_code (use_stmt);

  <bb 23> :
  _16 = D.256232;
  retval.1310 = _16 != 0;
  if (retval.1310 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 24> :
  _17 = is_gimple_assign (use_stmt);
  retval.1311 = ~_17;
  if (retval.1311 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 25> :
  D.256233 = gimple_cond_lhs (use_stmt);

  <bb 26> :
  _18 = D.256233;
  retval.1312 = _18 != 0B;
  if (retval.1312 != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 27> :
  D.256234 = GIMPLE_CHECK2<const gcond*> (use_stmt);

  <bb 28> :
  gc = D.256234;
  _19 = gimple_cond_rhs (gc);
  if (_19 != 0B)
    goto <bb 29>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 29> :
  _20 = gimple_cond_lhs (gc);
  if (_20 != 0B)
    goto <bb 30>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 30> :
  iftmp.1314 = 1;
  goto <bb 32>; [INV]

  <bb 31> :
  iftmp.1314 = 0;

  <bb 32> :
  retval.1313 = iftmp.1314;
  if (retval.1313 != 0)
    goto <bb 33>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 33> :
  _21 = gimple_cond_rhs (gc);
  D.256235 = check_stmtStack (_21);

  <bb 34> :
  _22 = D.256235;
  retval.1315 = _22 == 0;
  if (retval.1315 != 0)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  _23 = gimple_cond_lhs (gc);
  set_gimple_array (used_stmt, use_stmt, _23, target, 0B);

  <bb 36> :
  _24 = gimple_code (use_stmt);
  retval.1316 = _24 == 10;
  if (retval.1316 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 37> :
  D.256236 = as_a<greturn*, gimple> (use_stmt);

  <bb 38> :
  _25 = D.256236;
  return_tree = gimple_return_retval (_25);
  D.256237 = check_stmtStack (return_tree);

  <bb 39> :
  _26 = D.256237;
  retval.1317 = _26 == 0;
  if (retval.1317 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 390>; [INV]

  <bb 40> :
  set_gimple_array (used_stmt, use_stmt, return_tree, return_tree, 0B);
  goto <bb 390>; [INV]

  <bb 41> :
  _27 = gimple_code (use_stmt);
  retval.1318 = _27 == 6;
  if (retval.1318 != 0)
    goto <bb 42>; [INV]
  else
    goto <bb 141>; [INV]

  <bb 42> :
  ssa_name_assign = 0;
  D.256238 = gimple_assign_lhs (use_stmt);

  <bb 43> :
  _28 = D.256238;
  D.256239 = prechecktree (_28);

  <bb 44> :
  gimpleassignlhs = D.256239;
  D.256240 = gimple_assign_rhs1 (use_stmt);

  <bb 45> :
  _29 = D.256240;
  D.256241 = prechecktree (_29);

  <bb 46> :
  gimpleassignrhs = D.256241;
  if (gimpleassignlhs != 0B)
    goto <bb 47>; [INV]
  else
    goto <bb 93>; [INV]

  <bb 47> :
  _30 = gimpleassignlhs->base.code;
  if (_30 == 153)
    goto <bb 48>; [INV]
  else
    goto <bb 93>; [INV]

  <bb 48> :
  D.256242 = gimple_call_fn (use_stmt);

  <bb 49> :
  _31 = D.256242;
  retval.1319 = _31 != 0B;
  if (retval.1319 != 0)
    goto <bb 50>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 50> :
  D.256243 = check_stmtStack (gimpleassignlhs);

  <bb 51> :
  _32 = D.256243;
  if (_32 == 0)
    goto <bb 52>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 52> :
  D.256244 = gimple_call_fn (use_stmt);

  <bb 53> :
  _33 = D.256244;
  D.256245 = check_stmtStack (_33);

  <bb 54> :
  _34 = D.256245;
  if (_34 == 0)
    goto <bb 55>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 55> :
  iftmp.1321 = 1;
  goto <bb 57>; [INV]

  <bb 56> :
  iftmp.1321 = 0;

  <bb 57> :
  retval.1320 = iftmp.1321;
  if (retval.1320 != 0)
    goto <bb 58>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 58> :
  set_gimple_array (used_stmt, use_stmt, gimpleassignlhs, target, 0B);

  <bb 59> :
  ssa_name_assign = 1;
  if (gimpleassignlhs != target2)
    goto <bb 60>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 60> :
  D.256246 = check_stmtStack2 (use_stmt);

  <bb 61> :
  _35 = D.256246;
  if (_35 == 0)
    goto <bb 62>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 62> :
  iftmp.1323 = 1;
  goto <bb 64>; [INV]

  <bb 63> :
  iftmp.1323 = 0;

  <bb 64> :
  retval.1322 = iftmp.1323;
  if (retval.1322 != 0)
    goto <bb 65>; [INV]
  else
    goto <bb 66>; [INV]

  <bb 65> :
  new_search_imm_use (used_stmt, gimpleassignlhs, gimpleassignlhs);

  <bb 66> :
  Checknew_search_imm_use_lhs (used_stmt, use_stmt, target, target2);
  goto <bb 79>; [INV]

  <bb 67> :
  if (gimpleassignrhs != 0B)
    goto <bb 68>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 68> :
  _36 = gimpleassignrhs->base.code;
  if (_36 == 153)
    goto <bb 69>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 69> :
  D.256247 = check_stmtStack (gimpleassignrhs);

  <bb 70> :
  _37 = D.256247;
  retval.1324 = _37 == 0;
  if (retval.1324 != 0)
    goto <bb 71>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 71> :
  if (gimpleassignrhs != target2)
    goto <bb 72>; [INV]
  else
    goto <bb 75>; [INV]

  <bb 72> :
  D.256248 = check_stmtStack2 (use_stmt);

  <bb 73> :
  _38 = D.256248;
  if (_38 == 0)
    goto <bb 74>; [INV]
  else
    goto <bb 75>; [INV]

  <bb 74> :
  iftmp.1326 = 1;
  goto <bb 76>; [INV]

  <bb 75> :
  iftmp.1326 = 0;

  <bb 76> :
  retval.1325 = iftmp.1326;
  if (retval.1325 != 0)
    goto <bb 77>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 77> :
  new_search_imm_use (used_stmt, gimpleassignrhs, gimpleassignrhs);

  <bb 78> :
  Checknew_search_imm_use_rhs (used_stmt, use_stmt, target, target2);

  <bb 79> :
  if (gimpleassignlhs != 0B)
    goto <bb 80>; [INV]
  else
    goto <bb 92>; [INV]

  <bb 80> :
  _39 = gimpleassignlhs->base.code;
  if (_39 == 153)
    goto <bb 81>; [INV]
  else
    goto <bb 92>; [INV]

  <bb 81> :
  D.256249 = check_stmtStack (gimpleassignlhs);

  <bb 82> :
  _40 = D.256249;
  retval.1327 = _40 == 0;
  if (retval.1327 != 0)
    goto <bb 83>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 83> :
  if (gimpleassignlhs != target2)
    goto <bb 84>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 84> :
  D.256250 = check_stmtStack2 (use_stmt);

  <bb 85> :
  _41 = D.256250;
  if (_41 == 0)
    goto <bb 86>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 86> :
  iftmp.1329 = 1;
  goto <bb 88>; [INV]

  <bb 87> :
  iftmp.1329 = 0;

  <bb 88> :
  retval.1328 = iftmp.1329;
  if (retval.1328 != 0)
    goto <bb 89>; [INV]
  else
    goto <bb 90>; [INV]

  <bb 89> :
  new_search_imm_use (used_stmt, gimpleassignlhs, gimpleassignlhs);

  <bb 90> :
  Checknew_search_imm_use_lhs (used_stmt, use_stmt, target, target2);

  <bb 91> :
  Varnew_search_imm_use (used_stmt, use_stmt, gimpleassignlhs, target2);

  <bb 92> :
  goto <bb 102>; [INV]

  <bb 93> :
  if (gimpleassignrhs != 0B)
    goto <bb 94>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 94> :
  _42 = gimpleassignrhs->base.code;
  if (_42 == 153)
    goto <bb 95>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 95> :
  D.256251 = check_stmtStack (gimpleassignrhs);

  <bb 96> :
  _43 = D.256251;
  retval.1330 = _43 == 0;
  if (retval.1330 != 0)
    goto <bb 97>; [INV]
  else
    goto <bb 101>; [INV]

  <bb 97> :
  set_gimple_array (used_stmt, use_stmt, gimpleassignrhs, target, 0B);

  <bb 98> :
  if (gimpleassignrhs != target2)
    goto <bb 99>; [INV]
  else
    goto <bb 100>; [INV]

  <bb 99> :
  new_search_imm_use (used_stmt, gimpleassignrhs, gimpleassignrhs);

  <bb 100> :
  Checknew_search_imm_use_rhs (used_stmt, use_stmt, target, target2);

  <bb 101> :
  Varnew_search_imm_use (used_stmt, use_stmt, gimpleassignrhs, target2);

  <bb 102> :
  D.256252 = check_stmtStack (target);

  <bb 103> :
  _44 = D.256252;
  retval.1331 = _44 == 0;
  if (retval.1331 != 0)
    goto <bb 104>; [INV]
  else
    goto <bb 105>; [INV]

  <bb 104> :
  set_gimple_array (used_stmt, use_stmt, target, target2, 0B);

  <bb 105> :
  Varnew_search_imm_use (used_stmt, use_stmt, target, target2);

  <bb 106> :
  if (gimpleassignlhs != 0B)
    goto <bb 107>; [INV]
  else
    goto <bb 118>; [INV]

  <bb 107> :
  _45 = gimpleassignlhs->base.code;
  if (_45 == 165)
    goto <bb 108>; [INV]
  else
    goto <bb 118>; [INV]

  <bb 108> :
  fundecl = gimpleassignlhs->exp.operands[0];
  D.256253 = check_stmtStack (gimpleassignlhs);

  <bb 109> :
  _46 = D.256253;
  retval.1332 = _46 == 0;
  if (retval.1332 != 0)
    goto <bb 110>; [INV]
  else
    goto <bb 111>; [INV]

  <bb 110> :
  set_gimple_array (used_stmt, use_stmt, gimpleassignlhs, target, 0B);

  <bb 111> :
  _47 = fundecl->base.code;
  if (_47 == 153)
    goto <bb 112>; [INV]
  else
    goto <bb 117>; [INV]

  <bb 112> :
  D.256254 = check_stmtStack (fundecl);

  <bb 113> :
  _48 = D.256254;
  retval.1333 = _48 == 0;
  if (retval.1333 != 0)
    goto <bb 114>; [INV]
  else
    goto <bb 117>; [INV]

  <bb 114> :
  set_gimple_array (used_stmt, use_stmt, fundecl, target, 0B);

  <bb 115> :
  if (fundecl != target2)
    goto <bb 116>; [INV]
  else
    goto <bb 117>; [INV]

  <bb 116> :
  new_search_imm_use (used_stmt, fundecl, fundecl);

  <bb 117> :
  goto <bb 140>; [INV]

  <bb 118> :
  if (gimpleassignlhs != 0B)
    goto <bb 119>; [INV]
  else
    goto <bb 127>; [INV]

  <bb 119> :
  _49 = gimpleassignlhs->base.code;
  if (_49 == 47)
    goto <bb 120>; [INV]
  else
    goto <bb 127>; [INV]

  <bb 120> :
  _50 = gimpleassignrhs->base.code;
  if (_50 == 153)
    goto <bb 121>; [INV]
  else
    goto <bb 126>; [INV]

  <bb 121> :
  D.256255 = check_stmtStack (gimpleassignrhs);

  <bb 122> :
  _51 = D.256255;
  retval.1334 = _51 == 0;
  if (retval.1334 != 0)
    goto <bb 123>; [INV]
  else
    goto <bb 126>; [INV]

  <bb 123> :
  set_gimple_array (used_stmt, use_stmt, gimpleassignrhs, target, 0B);

  <bb 124> :
  if (gimpleassignrhs != target2)
    goto <bb 125>; [INV]
  else
    goto <bb 126>; [INV]

  <bb 125> :
  new_search_imm_use (used_stmt, gimpleassignrhs, gimpleassignrhs);

  <bb 126> :
  goto <bb 140>; [INV]

  <bb 127> :
  if (gimpleassignrhs != 0B)
    goto <bb 128>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 128> :
  _52 = gimpleassignrhs->base.code;
  if (_52 == 47)
    goto <bb 129>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 129> :
  _53 = gimpleassignlhs->base.code;
  if (_53 == 153)
    goto <bb 130>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 130> :
  D.256256 = check_stmtStack (gimpleassignlhs);

  <bb 131> :
  _54 = D.256256;
  if (_54 == 0)
    goto <bb 134>; [INV]
  else
    goto <bb 132>; [INV]

  <bb 132> :
  D.256257 = check_stmtStack2 (use_stmt);

  <bb 133> :
  _55 = D.256257;
  if (_55 == 0)
    goto <bb 134>; [INV]
  else
    goto <bb 135>; [INV]

  <bb 134> :
  iftmp.1336 = 1;
  goto <bb 136>; [INV]

  <bb 135> :
  iftmp.1336 = 0;

  <bb 136> :
  retval.1335 = iftmp.1336;
  if (retval.1335 != 0)
    goto <bb 137>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 137> :
  set_gimple_array (used_stmt, use_stmt, gimpleassignlhs, target, 0B);

  <bb 138> :
  if (gimpleassignlhs != target2)
    goto <bb 139>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 139> :
  new_search_imm_use (used_stmt, gimpleassignlhs, gimpleassignlhs);

  <bb 140> :
  goto <bb 390>; [INV]

  <bb 141> :
  _56 = gimple_code (use_stmt);
  retval.1337 = _56 == 18;
  if (retval.1337 != 0)
    goto <bb 142>; [INV]
  else
    goto <bb 166>; [INV]

  <bb 142> :
  D.256258 = gimple_phi_result (use_stmt);

  <bb 143> :
  _57 = D.256258;
  if (_57 != 0B)
    goto <bb 144>; [INV]
  else
    goto <bb 147>; [INV]

  <bb 144> :
  D.256259 = gimple_phi_result (use_stmt);

  <bb 145> :
  _58 = D.256259;
  _59 = _58->base.code;
  if (_59 == 153)
    goto <bb 146>; [INV]
  else
    goto <bb 147>; [INV]

  <bb 146> :
  iftmp.1339 = 1;
  goto <bb 148>; [INV]

  <bb 147> :
  iftmp.1339 = 0;

  <bb 148> :
  retval.1338 = iftmp.1339;
  if (retval.1338 != 0)
    goto <bb 149>; [INV]
  else
    goto <bb 390>; [INV]

  <bb 149> :
  D.256260 = gimple_phi_result (use_stmt);

  <bb 150> :
  _60 = D.256260;
  _61 = _60->base.code;
  retval.1340 = _61 == 153;
  if (retval.1340 != 0)
    goto <bb 151>; [INV]
  else
    goto <bb 390>; [INV]

  <bb 151> :
  D.256261 = gimple_phi_result (use_stmt);

  <bb 152> :
  _62 = D.256261;
  D.256262 = check_stmtStack (_62);

  <bb 153> :
  _63 = D.256262;
  if (_63 == 0)
    goto <bb 154>; [INV]
  else
    goto <bb 157>; [INV]

  <bb 154> :
  D.256263 = check_stmtStack2 (use_stmt);

  <bb 155> :
  _64 = D.256263;
  if (_64 == 0)
    goto <bb 156>; [INV]
  else
    goto <bb 157>; [INV]

  <bb 156> :
  iftmp.1342 = 1;
  goto <bb 158>; [INV]

  <bb 157> :
  iftmp.1342 = 0;

  <bb 158> :
  retval.1341 = iftmp.1342;
  if (retval.1341 != 0)
    goto <bb 159>; [INV]
  else
    goto <bb 390>; [INV]

  <bb 159> :
  D.256264 = gimple_phi_result (use_stmt);

  <bb 160> :
  _65 = D.256264;
  set_gimple_array (used_stmt, use_stmt, _65, target, 0B);

  <bb 161> :
  D.256265 = gimple_phi_result (use_stmt);

  <bb 162> :
  _66 = D.256265;
  retval.1343 = target2 != _66;
  if (retval.1343 != 0)
    goto <bb 163>; [INV]
  else
    goto <bb 390>; [INV]

  <bb 163> :
  D.256266 = gimple_phi_result (use_stmt);

  <bb 164> :
  _67 = D.256266;
  D.256267 = gimple_phi_result (use_stmt);

  <bb 165> :
  _68 = D.256267;
  new_search_imm_use (used_stmt, _68, _67);
  goto <bb 390>; [INV]

  <bb 166> :
  _69 = gimple_code (use_stmt);
  retval.1344 = _69 == 8;
  if (retval.1344 != 0)
    goto <bb 167>; [INV]
  else
    goto <bb 390>; [INV]

  <bb 167> :
  D.256268 = gimple_call_fn (use_stmt);

  <bb 168> :
  _70 = D.256268;
  retval.1345 = _70 == 0B;
  if (retval.1345 != 0)
    goto <bb 169>; [INV]
  else
    goto <bb 170>; [INV]

  <bb 169> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 394>; [INV]

  <bb 170> :
  D.256269 = gimple_call_fn (use_stmt);

  <bb 171> :
  _71 = D.256269;
  D.256270 = get_name (_71);

  <bb 172> :
  name = D.256270;
  if (name != 0B)
    goto <bb 173>; [INV]
  else
    goto <bb 390>; [INV]

  <bb 173> :
  _72 = strcmp (name, "realloc");
  if (_72 == 0)
    goto <bb 174>; [INV]
  else
    goto <bb 220>; [INV]

  <bb 174> :
  D.256271 = gimple_call_lhs (use_stmt);

  <bb 175> :
  _73 = D.256271;
  retval.1346 = _73 != 0B;
  if (retval.1346 != 0)
    goto <bb 176>; [INV]
  else
    goto <bb 198>; [INV]

  <bb 176> :
  D.256272 = gimple_call_lhs (use_stmt);

  <bb 177> :
  _74 = D.256272;
  D.256273 = check_stmtStack (_74);

  <bb 178> :
  _75 = D.256273;
  retval.1347 = _75 == 0;
  if (retval.1347 != 0)
    goto <bb 179>; [INV]
  else
    goto <bb 186>; [INV]

  <bb 179> :
  D.256274 = gimple_call_lhs (use_stmt);

  <bb 180> :
  _76 = D.256274;
  set_gimple_array (used_stmt, use_stmt, _76, target, 0B);

  <bb 181> :
  D.256275 = gimple_call_lhs (use_stmt);

  <bb 182> :
  _77 = D.256275;
  _78 = _77->base.code;
  retval.1348 = _78 == 153;
  if (retval.1348 != 0)
    goto <bb 183>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 183> :
  D.256276 = gimple_call_lhs (use_stmt);

  <bb 184> :
  _79 = D.256276;
  D.256277 = gimple_call_lhs (use_stmt);

  <bb 185> :
  _80 = D.256277;
  new_search_imm_use (used_stmt, _80, _79);
  goto <bb 389>; [INV]

  <bb 186> :
  D.256278 = gimple_call_fn (use_stmt);

  <bb 187> :
  _81 = D.256278;
  retval.1349 = _81 != 0B;
  if (retval.1349 != 0)
    goto <bb 188>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 188> :
  D.256279 = gimple_call_arg (use_stmt, 0);

  <bb 189> :
  _82 = D.256279;
  D.256280 = check_stmtStack (_82);

  <bb 190> :
  _83 = D.256280;
  retval.1350 = _83 == 0;
  if (retval.1350 != 0)
    goto <bb 191>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 191> :
  D.256281 = gimple_call_arg (use_stmt, 0);

  <bb 192> :
  _84 = D.256281;
  set_gimple_array (used_stmt, use_stmt, _84, target, 0B);

  <bb 193> :
  D.256282 = gimple_call_arg (use_stmt, 0);

  <bb 194> :
  _85 = D.256282;
  _86 = _85->base.code;
  retval.1351 = _86 == 153;
  if (retval.1351 != 0)
    goto <bb 195>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 195> :
  D.256283 = gimple_call_arg (use_stmt, 0);

  <bb 196> :
  _87 = D.256283;
  D.256284 = gimple_call_arg (use_stmt, 0);

  <bb 197> :
  _88 = D.256284;
  new_search_imm_use (used_stmt, _88, _87);
  goto <bb 389>; [INV]

  <bb 198> :
  D.256285 = gimple_call_fn (use_stmt);

  <bb 199> :
  _89 = D.256285;
  retval.1352 = _89 != 0B;
  if (retval.1352 != 0)
    goto <bb 200>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 200> :
  D.256286 = gimple_call_fn (use_stmt);

  <bb 201> :
  _90 = D.256286;
  D.256287 = check_stmtStack (_90);

  <bb 202> :
  _91 = D.256287;
  retval.1353 = _91 == 0;
  if (retval.1353 != 0)
    goto <bb 203>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 203> :
  D.256288 = gimple_call_fn (use_stmt);

  <bb 204> :
  _92 = D.256288;
  set_gimple_array (used_stmt, use_stmt, _92, target, 0B);

  <bb 205> :
  D.256289 = gimple_call_num_args (use_stmt);

  <bb 206> :
  _93 = D.256289;
  retval.1354 = _93 != 0;
  if (retval.1354 != 0)
    goto <bb 207>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 207> :
  i = 0;
  goto <bb 218>; [INV]

  <bb 208> :
  i.1356_94 = (unsigned int) i;
  D.256290 = gimple_call_arg (use_stmt, i.1356_94);

  <bb 209> :
  _95 = D.256290;
  retval.1355 = _95 != 0B;
  if (retval.1355 != 0)
    goto <bb 210>; [INV]
  else
    goto <bb 217>; [INV]

  <bb 210> :
  i.1358_96 = (unsigned int) i;
  D.256291 = gimple_call_arg (use_stmt, i.1358_96);

  <bb 211> :
  _97 = D.256291;
  retval.1357 = target2 != _97;
  if (retval.1357 != 0)
    goto <bb 212>; [INV]
  else
    goto <bb 217>; [INV]

  <bb 212> :
  i.1360_98 = (unsigned int) i;
  D.256292 = gimple_call_arg (use_stmt, i.1360_98);

  <bb 213> :
  _99 = D.256292;
  _100 = _99->base.code;
  retval.1359 = _100 == 153;
  if (retval.1359 != 0)
    goto <bb 214>; [INV]
  else
    goto <bb 217>; [INV]

  <bb 214> :
  i.1361_101 = (unsigned int) i;
  D.256293 = gimple_call_arg (use_stmt, i.1361_101);

  <bb 215> :
  _102 = D.256293;
  i.1362_103 = (unsigned int) i;
  D.256294 = gimple_call_arg (use_stmt, i.1362_103);

  <bb 216> :
  _104 = D.256294;
  new_search_imm_use (used_stmt, _104, _102);

  <bb 217> :
  i = i + 1;

  <bb 218> :
  D.256295 = gimple_call_num_args (use_stmt);

  <bb 219> :
  _105 = D.256295;
  i.1364_106 = (unsigned int) i;
  retval.1363 = _105 > i.1364_106;
  if (retval.1363 != 0)
    goto <bb 208>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 220> :
  _107 = strcmp (name, "free");
  if (_107 == 0)
    goto <bb 222>; [INV]
  else
    goto <bb 221>; [INV]

  <bb 221> :
  _108 = strcmp (name, "xfree");
  if (_108 == 0)
    goto <bb 222>; [INV]
  else
    goto <bb 233>; [INV]

  <bb 222> :
  D.256296 = gimple_call_fn (use_stmt);

  <bb 223> :
  _109 = D.256296;
  D.256297 = check_stmtStack (_109);

  <bb 224> :
  _110 = D.256297;
  retval.1365 = _110 == 0;
  if (retval.1365 != 0)
    goto <bb 225>; [INV]
  else
    goto <bb 232>; [INV]

  <bb 225> :
  D.256298 = gimple_call_fn (use_stmt);

  <bb 226> :
  _111 = D.256298;
  set_gimple_array (used_stmt, use_stmt, _111, target, 0B);

  <bb 227> :
  D.256299 = gimple_call_fn (use_stmt);

  <bb 228> :
  _112 = D.256299;
  _113 = _112->base.code;
  retval.1366 = _113 == 153;
  if (retval.1366 != 0)
    goto <bb 229>; [INV]
  else
    goto <bb 232>; [INV]

  <bb 229> :
  D.256300 = gimple_call_fn (use_stmt);

  <bb 230> :
  _114 = D.256300;
  D.256301 = gimple_call_fn (use_stmt);

  <bb 231> :
  _115 = D.256301;
  new_search_imm_use (used_stmt, _115, _114);

  <bb 232> :
  goto <bb 389>; [INV]

  <bb 233> :
  _116 = strcmp (name, "pthread_create");
  if (_116 == 0)
    goto <bb 235>; [INV]
  else
    goto <bb 234>; [INV]

  <bb 234> :
  _117 = strcmp (name, "pthread_join");
  if (_117 == 0)
    goto <bb 235>; [INV]
  else
    goto <bb 311>; [INV]

  <bb 235> :
  D.256302 = gimple_call_fn (use_stmt);

  <bb 236> :
  _118 = D.256302;
  D.256303 = check_stmtStack (_118);

  <bb 237> :
  _119 = D.256303;
  retval.1367 = _119 == 0;
  if (retval.1367 != 0)
    goto <bb 238>; [INV]
  else
    goto <bb 310>; [INV]

  <bb 238> :
has_single_use_addr_expr_jump:
  second = 0B;
  isVardecl = 0;
  if (var_declsuperjump == 1)
    goto <bb 239>; [INV]
  else
    goto <bb 241>; [INV]

  <bb 239> :
  _120 = target->base.code;
  if (_120 == 131)
    goto <bb 240>; [INV]
  else
    goto <bb 241>; [INV]

  <bb 240> :
  second = target->exp.operands[0];
  target = target;
  isVardecl = 1;

  <bb 241> :
  D.256304 = gimple_assign_rhs1 (def_stmt);

  <bb 242> :
  _121 = D.256304;
  _122 = _121->base.code;
  retval.1368 = _122 == 131;
  if (retval.1368 != 0)
    goto <bb 243>; [INV]
  else
    goto <bb 245>; [INV]

  <bb 243> :
  D.256305 = gimple_assign_rhs1 (def_stmt);

  <bb 244> :
  _123 = D.256305;
  second = _123->exp.operands[0];
  second = second->exp.operands[0];
  isVardecl = 1;
  goto <bb 249>; [INV]

  <bb 245> :
  D.256306 = gimple_assign_rhs1 (def_stmt);

  <bb 246> :
  _124 = D.256306;
  _125 = _124->base.code;
  retval.1369 = _125 == 36;
  if (retval.1369 != 0)
    goto <bb 247>; [INV]
  else
    goto <bb 249>; [INV]

  <bb 247> :
  D.256307 = gimple_assign_rhs1 (def_stmt);

  <bb 248> :
  second = D.256307;
  isVardecl = 1;

  <bb 249> :
  if (second != 0B)
    goto <bb 250>; [INV]
  else
    goto <bb 301>; [INV]

  <bb 250> :
  _126 = second->base.code;
  if (_126 == 36)
    goto <bb 251>; [INV]
  else
    goto <bb 301>; [INV]

  <bb 251> :
  getFunctionAssignVAR = second;
  function_assign_array::function_assign_array (&assign_array);
  function_assign_collect.1371_127 = function_assign_collect;
  D.256308 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1371_127, &getFunctionAssignVAR);

  <bb 252> :
  _128 = D.256308;
  retval.1370 = _128 != 0B;
  if (retval.1370 != 0)
    goto <bb 253>; [INV]
  else
    goto <bb 300>; [INV]

  <bb 253> :
  getFunctionAssignVAR.1372_129 = getFunctionAssignVAR;
  D.196405 = ret_function_varstmt (getFunctionAssignVAR.1372_129); [return slot optimization]

  <bb 254> :
  function_assign_array::operator= (&assign_array, &D.196405);
  function_assign_array::~function_assign_array (&D.196405);
  D.196405 = {CLOBBER};
  i = 0;
  goto <bb 299>; [INV]

  <bb 255> :
  _130 = (long unsigned int) i;
  _131 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _130);
  _132 = _131->stmt;
  _133 = gimple_code (_132);
  retval.1373 = _133 == 6;
  if (retval.1373 != 0)
    goto <bb 256>; [INV]
  else
    goto <bb 290>; [INV]

  <bb 256> :
  _134 = (long unsigned int) i;
  _135 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _134);
  _136 = _135->stmt;
  D.256309 = gimple_assign_lhs (_136);

  <bb 257> :
  _137 = D.256309;
  if (target != _137)
    goto <bb 258>; [INV]
  else
    goto <bb 261>; [INV]

  <bb 258> :
  _138 = (long unsigned int) i;
  _139 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _138);
  _140 = _139->stmt;
  D.256310 = gimple_assign_lhs (_140);

  <bb 259> :
  _141 = D.256310;
  _142 = _141->base.code;
  if (_142 == 153)
    goto <bb 260>; [INV]
  else
    goto <bb 261>; [INV]

  <bb 260> :
  iftmp.1375 = 1;
  goto <bb 262>; [INV]

  <bb 261> :
  iftmp.1375 = 0;

  <bb 262> :
  retval.1374 = iftmp.1375;
  if (retval.1374 != 0)
    goto <bb 263>; [INV]
  else
    goto <bb 273>; [INV]

  <bb 263> :
  _143 = (long unsigned int) i;
  _144 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _143);
  _145 = _144->stmt;
  D.256311 = gimple_assign_lhs (_145);

  <bb 264> :
  _146 = D.256311;
  D.256312 = check_stmtStack (_146);

  <bb 265> :
  _147 = D.256312;
  retval.1376 = _147 == 0;
  if (retval.1376 != 0)
    goto <bb 266>; [INV]
  else
    goto <bb 298>; [INV]

  <bb 266> :
  _148 = (long unsigned int) i;
  _149 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _148);
  _150 = _149->form_tree;
  retval.1377 = _150 != 0B;
  if (retval.1377 != 0)
    goto <bb 267>; [INV]
  else
    goto <bb 268>; [INV]

  <bb 267> :
  _151 = (long unsigned int) i;
  _152 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _151);
  _153 = _152->form_tree;
  _154 = (long unsigned int) i;
  _155 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _154);
  _156 = _155->stmt;
  set_gimple_array (used_stmt, _156, _153, target, 0B);
  goto <bb 270>; [INV]

  <bb 268> :
  _157 = (long unsigned int) i;
  _158 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _157);
  _159 = _158->stmt;
  D.256313 = gimple_assign_lhs (_159);

  <bb 269> :
  _160 = D.256313;
  _161 = (long unsigned int) i;
  _162 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _161);
  _163 = _162->stmt;
  set_gimple_array (used_stmt, _163, _160, target, 0B);

  <bb 270> :
  _164 = (long unsigned int) i;
  _165 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _164);
  _166 = _165->stmt;
  D.256314 = gimple_assign_lhs (_166);

  <bb 271> :
  _167 = D.256314;
  _168 = (long unsigned int) i;
  _169 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _168);
  _170 = _169->stmt;
  D.256315 = gimple_assign_lhs (_170);

  <bb 272> :
  _171 = D.256315;
  new_search_imm_use (used_stmt, _171, _167);
  goto <bb 298>; [INV]

  <bb 273> :
  _172 = (long unsigned int) i;
  _173 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _172);
  _174 = _173->stmt;
  D.256316 = gimple_assign_rhs1 (_174);

  <bb 274> :
  _175 = D.256316;
  if (target != _175)
    goto <bb 275>; [INV]
  else
    goto <bb 278>; [INV]

  <bb 275> :
  _176 = (long unsigned int) i;
  _177 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _176);
  _178 = _177->stmt;
  D.256317 = gimple_assign_rhs1 (_178);

  <bb 276> :
  _179 = D.256317;
  _180 = _179->base.code;
  if (_180 == 153)
    goto <bb 277>; [INV]
  else
    goto <bb 278>; [INV]

  <bb 277> :
  iftmp.1379 = 1;
  goto <bb 279>; [INV]

  <bb 278> :
  iftmp.1379 = 0;

  <bb 279> :
  retval.1378 = iftmp.1379;
  if (retval.1378 != 0)
    goto <bb 280>; [INV]
  else
    goto <bb 298>; [INV]

  <bb 280> :
  _181 = (long unsigned int) i;
  _182 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _181);
  _183 = _182->stmt;
  D.256318 = gimple_assign_rhs1 (_183);

  <bb 281> :
  _184 = D.256318;
  D.256319 = check_stmtStack (_184);

  <bb 282> :
  _185 = D.256319;
  retval.1380 = _185 == 0;
  if (retval.1380 != 0)
    goto <bb 283>; [INV]
  else
    goto <bb 298>; [INV]

  <bb 283> :
  _186 = (long unsigned int) i;
  _187 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _186);
  _188 = _187->form_tree;
  retval.1381 = _188 != 0B;
  if (retval.1381 != 0)
    goto <bb 284>; [INV]
  else
    goto <bb 285>; [INV]

  <bb 284> :
  _189 = (long unsigned int) i;
  _190 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _189);
  _191 = _190->form_tree;
  _192 = (long unsigned int) i;
  _193 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _192);
  _194 = _193->stmt;
  set_gimple_array (used_stmt, _194, _191, target, 0B);
  goto <bb 287>; [INV]

  <bb 285> :
  _195 = (long unsigned int) i;
  _196 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _195);
  _197 = _196->stmt;
  D.256320 = gimple_assign_rhs1 (_197);

  <bb 286> :
  _198 = D.256320;
  _199 = (long unsigned int) i;
  _200 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _199);
  _201 = _200->stmt;
  set_gimple_array (used_stmt, _201, _198, target, 0B);

  <bb 287> :
  _202 = (long unsigned int) i;
  _203 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _202);
  _204 = _203->stmt;
  D.256321 = gimple_assign_rhs1 (_204);

  <bb 288> :
  _205 = D.256321;
  _206 = (long unsigned int) i;
  _207 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _206);
  _208 = _207->stmt;
  D.256322 = gimple_assign_rhs1 (_208);

  <bb 289> :
  _209 = D.256322;
  new_search_imm_use (used_stmt, _209, _205);
  goto <bb 298>; [INV]

  <bb 290> :
  _210 = (long unsigned int) i;
  _211 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _210);
  _212 = _211->stmt;
  _213 = gimple_code (_212);
  retval.1382 = _213 == 8;
  if (retval.1382 != 0)
    goto <bb 291>; [INV]
  else
    goto <bb 298>; [INV]

  <bb 291> :
  _214 = (long unsigned int) i;
  _215 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _214);
  _216 = _215->stmt;
  D.256323 = gimple_call_arg (_216, 0);

  <bb 292> :
  _217 = D.256323;
  _218 = _217->base.code;
  retval.1383 = _218 == 131;
  if (retval.1383 != 0)
    goto <bb 293>; [INV]
  else
    goto <bb 298>; [INV]

  <bb 293> :
  _219 = (long unsigned int) i;
  _220 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _219);
  _221 = _220->stmt;
  D.256324 = gimple_call_arg (_221, 0);

  <bb 294> :
  _222 = D.256324;
  D.256325 = check_stmtStack (_222);

  <bb 295> :
  _223 = D.256325;
  retval.1384 = _223 == 0;
  if (retval.1384 != 0)
    goto <bb 296>; [INV]
  else
    goto <bb 298>; [INV]

  <bb 296> :
  _224 = (long unsigned int) i;
  _225 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _224);
  _226 = _225->stmt;
  D.256326 = gimple_call_arg (_226, 0);

  <bb 297> :
  _227 = D.256326;
  _228 = (long unsigned int) i;
  _229 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _228);
  _230 = _229->stmt;
  set_gimple_array (used_stmt, _230, _227, target, 0B);

  <bb 298> :
  i = i + 1;

  <bb 299> :
  _231 = (long unsigned int) i;
  _232 = std::vector<assign_type>::size (&assign_array.assign_type_array);
  retval.1385 = _231 < _232;
  if (retval.1385 != 0)
    goto <bb 255>; [INV]
  else
    goto <bb 300>; [INV]

  <bb 300> :
  function_assign_array::~function_assign_array (&assign_array);
  getFunctionAssignVAR = {CLOBBER};
  assign_array = {CLOBBER};

  <bb 301> :
  if (var_declsuperjump == 1)
    goto <bb 302>; [INV]
  else
    goto <bb 303>; [INV]

  <bb 302> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 394>; [INV]

  <bb 303> :
  D.256329 = gimple_call_fn (use_stmt);

  <bb 304> :
  _233 = D.256329;
  set_gimple_array (used_stmt, use_stmt, _233, target, 0B);

  <bb 305> :
  D.256330 = gimple_call_fn (use_stmt);

  <bb 306> :
  _234 = D.256330;
  _235 = _234->base.code;
  retval.1386 = _235 == 153;
  if (retval.1386 != 0)
    goto <bb 307>; [INV]
  else
    goto <bb 310>; [INV]

  <bb 307> :
  D.256331 = gimple_call_fn (use_stmt);

  <bb 308> :
  _236 = D.256331;
  D.256332 = gimple_call_fn (use_stmt);

  <bb 309> :
  _237 = D.256332;
  new_search_imm_use (used_stmt, _237, _236);

  <bb 310> :
  goto <bb 389>; [INV]

  <bb 311> :
  D.256333 = gimple_call_fn (use_stmt);

  <bb 312> :
  _238 = D.256333;
  if (_238 != 0B)
    goto <bb 313>; [INV]
  else
    goto <bb 318>; [INV]

  <bb 313> :
  D.256334 = gimple_call_lhs (use_stmt);

  <bb 314> :
  _239 = D.256334;
  if (_239 != 0B)
    goto <bb 315>; [INV]
  else
    goto <bb 318>; [INV]

  <bb 315> :
  D.256335 = gimple_call_lhs (use_stmt);

  <bb 316> :
  _240 = D.256335;
  _241 = _240->base.code;
  if (_241 == 153)
    goto <bb 317>; [INV]
  else
    goto <bb 318>; [INV]

  <bb 317> :
  iftmp.1388 = 1;
  goto <bb 319>; [INV]

  <bb 318> :
  iftmp.1388 = 0;

  <bb 319> :
  retval.1387 = iftmp.1388;
  if (retval.1387 != 0)
    goto <bb 320>; [INV]
  else
    goto <bb 357>; [INV]

  <bb 320> :
  D.256336 = gimple_call_lhs (use_stmt);

  <bb 321> :
  _242 = D.256336;
  D.256337 = check_stmtStack (_242);

  <bb 322> :
  _243 = D.256337;
  retval.1389 = _243 == 0;
  if (retval.1389 != 0)
    goto <bb 323>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 323> :
  D.256338 = gimple_call_lhs (use_stmt);

  <bb 324> :
  _244 = D.256338;
  set_gimple_array (used_stmt, use_stmt, _244, target, 0B);

  <bb 325> :
  D.256339 = gimple_call_lhs (use_stmt);

  <bb 326> :
  _245 = D.256339;
  retval.1390 = target2 != _245;
  if (retval.1390 != 0)
    goto <bb 327>; [INV]
  else
    goto <bb 332>; [INV]

  <bb 327> :
  D.256340 = check_stmtStack2 (use_stmt);

  <bb 328> :
  _246 = D.256340;
  retval.1391 = _246 == 0;
  if (retval.1391 != 0)
    goto <bb 329>; [INV]
  else
    goto <bb 332>; [INV]

  <bb 329> :
  D.256341 = gimple_call_lhs (use_stmt);

  <bb 330> :
  _247 = D.256341;
  D.256342 = gimple_call_lhs (use_stmt);

  <bb 331> :
  _248 = D.256342;
  new_search_imm_use (used_stmt, _248, _247);

  <bb 332> :
  D.256343 = gimple_call_fn (use_stmt);

  <bb 333> :
  _249 = D.256343;
  retval.1392 = _249 != 0B;
  if (retval.1392 != 0)
    goto <bb 334>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 334> :
  D.256344 = gimple_call_fn (use_stmt);

  <bb 335> :
  _250 = D.256344;
  D.256345 = check_stmtStack (_250);

  <bb 336> :
  _251 = D.256345;
  retval.1393 = _251 == 0;
  if (retval.1393 != 0)
    goto <bb 337>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 337> :
  D.256346 = gimple_call_num_args (use_stmt);

  <bb 338> :
  _252 = D.256346;
  retval.1394 = _252 != 0;
  if (retval.1394 != 0)
    goto <bb 339>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 339> :
  i = 0;
  goto <bb 355>; [INV]

  <bb 340> :
  i.1396_253 = (unsigned int) i;
  D.256347 = gimple_call_arg (use_stmt, i.1396_253);

  <bb 341> :
  _254 = D.256347;
  retval.1395 = _254 != 0B;
  if (retval.1395 != 0)
    goto <bb 342>; [INV]
  else
    goto <bb 354>; [INV]

  <bb 342> :
  i.1398_255 = (unsigned int) i;
  D.256348 = gimple_call_arg (use_stmt, i.1398_255);

  <bb 343> :
  _256 = D.256348;
  retval.1397 = target2 != _256;
  if (retval.1397 != 0)
    goto <bb 344>; [INV]
  else
    goto <bb 354>; [INV]

  <bb 344> :
  i.1400_257 = (unsigned int) i;
  D.256349 = gimple_call_arg (use_stmt, i.1400_257);

  <bb 345> :
  _258 = D.256349;
  _259 = _258->base.code;
  retval.1399 = _259 == 153;
  if (retval.1399 != 0)
    goto <bb 346>; [INV]
  else
    goto <bb 354>; [INV]

  <bb 346> :
  i.1402_260 = (unsigned int) i;
  D.256350 = gimple_call_arg (use_stmt, i.1402_260);

  <bb 347> :
  _261 = D.256350;
  D.256351 = check_stmtStack (_261);

  <bb 348> :
  _262 = D.256351;
  retval.1401 = _262 == 0;
  if (retval.1401 != 0)
    goto <bb 349>; [INV]
  else
    goto <bb 354>; [INV]

  <bb 349> :
  i.1404_263 = (unsigned int) i;
  D.256352 = gimple_call_arg (use_stmt, i.1404_263);

  <bb 350> :
  _264 = D.256352;
  retval.1403 = target2 != _264;
  if (retval.1403 != 0)
    goto <bb 351>; [INV]
  else
    goto <bb 354>; [INV]

  <bb 351> :
  i.1405_265 = (unsigned int) i;
  D.256353 = gimple_call_arg (use_stmt, i.1405_265);

  <bb 352> :
  _266 = D.256353;
  i.1406_267 = (unsigned int) i;
  D.256354 = gimple_call_arg (use_stmt, i.1406_267);

  <bb 353> :
  _268 = D.256354;
  new_search_imm_use (used_stmt, _268, _266);

  <bb 354> :
  i = i + 1;

  <bb 355> :
  D.256355 = gimple_call_num_args (use_stmt);

  <bb 356> :
  _269 = D.256355;
  i.1408_270 = (unsigned int) i;
  retval.1407 = _269 > i.1408_270;
  if (retval.1407 != 0)
    goto <bb 340>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 357> :
  D.256356 = gimple_call_fn (use_stmt);

  <bb 358> :
  _271 = D.256356;
  D.256357 = check_stmtStack (_271);

  <bb 359> :
  _272 = D.256357;
  retval.1409 = _272 == 0;
  if (retval.1409 != 0)
    goto <bb 360>; [INV]
  else
    goto <bb 367>; [INV]

  <bb 360> :
  D.256358 = gimple_call_fn (use_stmt);

  <bb 361> :
  _273 = D.256358;
  set_gimple_array (used_stmt, use_stmt, _273, target, 0B);

  <bb 362> :
  D.256359 = gimple_call_fn (use_stmt);

  <bb 363> :
  _274 = D.256359;
  _275 = _274->base.code;
  retval.1410 = _275 == 153;
  if (retval.1410 != 0)
    goto <bb 364>; [INV]
  else
    goto <bb 367>; [INV]

  <bb 364> :
  D.256360 = gimple_call_fn (use_stmt);

  <bb 365> :
  _276 = D.256360;
  D.256361 = gimple_call_fn (use_stmt);

  <bb 366> :
  _277 = D.256361;
  new_search_imm_use (used_stmt, _277, _276);

  <bb 367> :
  D.256362 = gimple_call_arg (use_stmt, 0);

  <bb 368> :
  _278 = D.256362;
  retval.1411 = _278 != 0B;
  if (retval.1411 != 0)
    goto <bb 369>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 369> :
  D.256363 = gimple_call_arg (use_stmt, 0);

  <bb 370> :
  _279 = D.256363;
  D.256364 = check_stmtStack (_279);

  <bb 371> :
  _280 = D.256364;
  retval.1412 = _280 == 0;
  if (retval.1412 != 0)
    goto <bb 372>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 372> :
  D.256365 = gimple_call_arg (use_stmt, 0);

  <bb 373> :
  _281 = D.256365;
  _282 = _281->base.code;
  retval.1413 = _282 == 153;
  if (retval.1413 != 0)
    goto <bb 374>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 374> :
  D.256366 = gimple_call_arg (use_stmt, 0);

  <bb 375> :
  _283 = D.256366;
  debug_tree (_283);

  <bb 376> :
  D.256367 = gimple_call_arg (use_stmt, 0);

  <bb 377> :
  _284 = D.256367;
  _285 = _284->base.code;
  retval.1414 = _285 == 153;
  if (retval.1414 != 0)
    goto <bb 378>; [INV]
  else
    goto <bb 381>; [INV]

  <bb 378> :
  D.256368 = gimple_call_arg (use_stmt, 0);

  <bb 379> :
  _286 = D.256368;
  D.256369 = gimple_call_arg (use_stmt, 0);

  <bb 380> :
  _287 = D.256369;
  new_search_imm_use (used_stmt, _287, _286);

  <bb 381> :
  D.256370 = gimple_call_arg (use_stmt, 0);

  <bb 382> :
  _288 = D.256370;
  def_stmt = _288->ssa_name.def_stmt;
  retval.1415 = is_gimple_assign (def_stmt);
  if (retval.1415 != 0)
    goto <bb 383>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 383> :
  D.256371 = gimple_assign_lhs (def_stmt);

  <bb 384> :
  _289 = D.256371;
  _290 = _289->base.code;
  retval.1416 = _290 == 36;
  if (retval.1416 != 0)
    goto <bb 385>; [INV]
  else
    goto <bb 386>; [INV]

  <bb 385> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 389>; [INV]

  <bb 386> :
  D.256372 = gimple_assign_rhs1 (def_stmt);

  <bb 387> :
  _291 = D.256372;
  _292 = _291->base.code;
  retval.1417 = _292 == 36;
  if (retval.1417 != 0)
    goto <bb 388>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 388> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);

  <bb 389> :

  <bb 390> :
  D.256373 = next_readonly_imm_use (&imm_iter);

  <bb 391> :
  use_p = D.256373;

  <bb 392> :
  _293 = end_readonly_imm_use_p (&imm_iter);
  retval.1418 = ~_293;
  if (retval.1418 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 393>; [INV]

  <bb 393> :
  imm_iter = {CLOBBER};
  goto <bb 395>; [INV]

  <bb 394> :
  imm_iter = {CLOBBER};

  <bb 395> :
<L403>:
  return;

  <bb 396> :
<L404>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 3

  <bb 397> :
<L405>:
  getFunctionAssignVAR = {CLOBBER};
  assign_array = {CLOBBER};
  resx 2

  <bb 398> :
<L406>:
  imm_iter = {CLOBBER};
  resx 1

}



;; Function num_imm_uses (_ZL12num_imm_usesPK9tree_node, funcdef_no=2993, decl_uid=109485, cgraph_uid=2095, symbol_order=2260)

Removing basic block 8
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;;
;; Loop 2
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 4 5
;;
;; Loop 1
;;  header 16, latch 15
;;  depth 1, outer 0
;;  nodes: 16 15 13 14 11 12 9 10
;; 2 succs { 3 8 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 4 17 }
;; 8 succs { 16 }
;; 9 succs { 10 12 }
;; 10 succs { 11 12 }
;; 11 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 }
;; 16 succs { 9 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
unsigned int num_imm_uses (const union tree_node * var)
{
  unsigned int num;
  const struct ssa_use_operand_t * ptr;
  const struct ssa_use_operand_t * const start;
  unsigned int D.256392;
  bool iftmp.1420;
  bool retval.1419;

  <bb 2> :
  start = &var->ssa_name.imm_uses;
  num = 0;
  _1 = global_options.x_flag_var_tracking_assignments;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  ptr = start->next;
  goto <bb 7>; [INV]

  <bb 4> :
  _2 = ptr->loc.stmt;
  if (_2 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  num = num + 1;

  <bb 6> :
  ptr = ptr->next;

  <bb 7> :
  if (ptr != start)
    goto <bb 4>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 8> :
  ptr = start->next;
  goto <bb 16>; [INV]

  <bb 9> :
  _3 = ptr->loc.stmt;
  if (_3 != 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  _4 = ptr->loc.stmt;
  _5 = is_gimple_debug (_4);
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  iftmp.1420 = 1;
  goto <bb 13>; [INV]

  <bb 12> :
  iftmp.1420 = 0;

  <bb 13> :
  retval.1419 = iftmp.1420;
  if (retval.1419 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  num = num + 1;

  <bb 15> :
  ptr = ptr->next;

  <bb 16> :
  if (ptr != start)
    goto <bb 9>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  D.256392 = num;

  <bb 18> :
<L19>:
  return D.256392;

}



;; Function is_gimple_debug (_ZL15is_gimple_debugPK6gimple, funcdef_no=2297, decl_uid=93567, cgraph_uid=1434, symbol_order=1594)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool is_gimple_debug (const struct gimple * gs)
{
  bool D.256394;

  <bb 2> :
  _1 = gimple_code (gs);
  D.256394 = _1 == 2;

  <bb 3> :
<L0>:
  return D.256394;

}



;; Function first_readonly_imm_use (_ZL22first_readonly_imm_useP16imm_use_iteratorP9tree_node, funcdef_no=2988, decl_uid=109451, cgraph_uid=2090, symbol_order=2255)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct ssa_use_operand_t * first_readonly_imm_use (struct imm_use_iterator * imm, union tree_node * var)
{
  struct ssa_use_operand_t * D.256399;
  bool retval.1421;

  <bb 2> :
  _1 = &var->ssa_name.imm_uses;
  imm->end_p = _1;
  _2 = imm->end_p;
  _3 = _2->next;
  imm->imm_use = _3;
  _4 = imm->imm_use;
  _5 = _4->next;
  imm->iter_node.next = _5;
  retval.1421 = end_readonly_imm_use_p (imm);
  if (retval.1421 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.256399 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.256399 = imm->imm_use;

  <bb 5> :
<L2>:
  return D.256399;

}



;; Function gimple_cond_code (_ZL16gimple_cond_codePK6gimple, funcdef_no=2174, decl_uid=93048, cgraph_uid=1311, symbol_order=1471)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
tree_code gimple_cond_code (const struct gimple * gs)
{
  const struct gcond * D.256403;
  const struct gcond * gc;
  tree_code D.256401;

  <bb 2> :
  D.256403 = GIMPLE_CHECK2<const gcond*> (gs);
  gc = D.256403;
  D.256401 = gimple_cond_code (gc);

  <bb 3> :
<L0>:
  return D.256401;

}



;; Function GIMPLE_CHECK2<const gcond*> (_Z13GIMPLE_CHECK2IPK5gcondET_PK6gimple, funcdef_no=7066, decl_uid=93051, cgraph_uid=3698, symbol_order=4481)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcond * GIMPLE_CHECK2<const gcond*> (const struct gimple * gs)
{
  const struct gcond * D.256406;
  const struct gcond * D.256404;

  <bb 2> :
  D.256406 = as_a<const gcond*, const gimple> (gs);
  D.256404 = D.256406;

  <bb 3> :
<L0>:
  return D.256404;

}



;; Function as_a<const gcond*, const gimple> (_Z4as_aIPK5gcondK6gimpleET_PT0_, funcdef_no=8071, decl_uid=207191, cgraph_uid=4703, symbol_order=5489)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcond * as_a<const gcond*, const gimple> (const struct gimple * p)
{
  const struct gcond * D.256409;
  const struct gcond * D.256407;

  <bb 2> :
  D.256409 = is_a_helper<const gcond*>::cast<gimple> (p);
  D.256407 = D.256409;

  <bb 3> :
<L0>:
  return D.256407;

}



;; Function is_a_helper<const gcond*>::cast<gimple> (_ZN11is_a_helperIPK5gcondE4castI6gimpleEES2_PKT_, funcdef_no=8075, decl_uid=207209, cgraph_uid=4707, symbol_order=5493)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcond * is_a_helper<const gcond*>::cast<gimple> (const struct gimple * p)
{
  const struct gcond * D.256410;

  <bb 2> :
  D.256410 = reinterpret_is_a_helper<gcond*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.256410;

}



;; Function reinterpret_is_a_helper<gcond*>::cast<gimple> (_ZN23reinterpret_is_a_helperIP5gcondE4castI6gimpleEES1_PT_, funcdef_no=9048, decl_uid=219650, cgraph_uid=5680, symbol_order=6470)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gcond * reinterpret_is_a_helper<gcond*>::cast<gimple> (struct gimple * p)
{
  struct gcond * D.256412;

  <bb 2> :
  D.256412 = p;

  <bb 3> :
<L0>:
  return D.256412;

}



;; Function gimple_cond_code (_ZL16gimple_cond_codePK5gcond, funcdef_no=2173, decl_uid=93045, cgraph_uid=1310, symbol_order=1470)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
tree_code gimple_cond_code (const struct gcond * gs)
{
  tree_code D.256414;

  <bb 2> :
  _1 = gs->D.90458.D.90144.D.90137.subcode;
  D.256414 = (tree_code) _1;

  <bb 3> :
<L0>:
  return D.256414;

}



;; Function gimple_cond_lhs (_ZL15gimple_cond_lhsPK6gimple, funcdef_no=2177, decl_uid=93063, cgraph_uid=1314, symbol_order=1474)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_cond_lhs (const struct gimple * gs)
{
  const struct gcond * D.256418;
  const struct gcond * gc;
  union tree_node * D.256416;

  <bb 2> :
  D.256418 = GIMPLE_CHECK2<const gcond*> (gs);
  gc = D.256418;
  D.256416 = gimple_cond_lhs (gc);

  <bb 3> :
<L0>:
  return D.256416;

}



;; Function GIMPLE_CHECK2<const gcond*> (_Z13GIMPLE_CHECK2IPK5gcondET_P6gimple, funcdef_no=7779, decl_uid=93053, cgraph_uid=4411, symbol_order=5197)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcond * GIMPLE_CHECK2<const gcond*> (struct gimple * gs)
{
  const struct gcond * D.256421;
  const struct gcond * D.256419;

  <bb 2> :
  D.256421 = as_a<const gcond*, gimple> (gs);
  D.256419 = D.256421;

  <bb 3> :
<L0>:
  return D.256419;

}



;; Function as_a<const gcond*, gimple> (_Z4as_aIPK5gcond6gimpleET_PT0_, funcdef_no=8736, decl_uid=215183, cgraph_uid=5368, symbol_order=6158)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcond * as_a<const gcond*, gimple> (struct gimple * p)
{
  const struct gcond * D.256424;
  const struct gcond * D.256422;

  <bb 2> :
  D.256424 = is_a_helper<const gcond*>::cast<gimple> (p);
  D.256422 = D.256424;

  <bb 3> :
<L0>:
  return D.256422;

}



;; Function gimple_cond_rhs (_ZL15gimple_cond_rhsPK5gcond, funcdef_no=2180, decl_uid=93074, cgraph_uid=1317, symbol_order=1477)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_cond_rhs (const struct gcond * gs)
{
  union tree_node * D.256425;

  <bb 2> :
  D.256425 = gs->D.90458.op[1];

  <bb 3> :
<L0>:
  return D.256425;

}



;; Function gimple_cond_lhs (_ZL15gimple_cond_lhsPK5gcond, funcdef_no=2176, decl_uid=93060, cgraph_uid=1313, symbol_order=1473)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_cond_lhs (const struct gcond * gs)
{
  union tree_node * D.256427;

  <bb 2> :
  D.256427 = gs->D.90458.op[0];

  <bb 3> :
<L0>:
  return D.256427;

}



;; Function next_readonly_imm_use (_ZL21next_readonly_imm_useP16imm_use_iterator, funcdef_no=2989, decl_uid=109454, cgraph_uid=2091, symbol_order=2256)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct ssa_use_operand_t * next_readonly_imm_use (struct imm_use_iterator * imm)
{
  static const char __FUNCTION__[22] [value-expr: "next_readonly_imm_use"];
  struct ssa_use_operand_t * old;
  struct ssa_use_operand_t * D.256437;
  bool retval.1422;

  <bb 2> :
  old = imm->imm_use;
  _1 = global_options.x_flag_checking;
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  _2 = imm->iter_node.next;
  _3 = old->next;
  if (_2 != _3)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/ssa-iterators.h", 374, "next_readonly_imm_use");

  <bb 5> :
  _4 = old->next;
  _5 = _4->next;
  imm->iter_node.next = _5;

  <bb 6> :
  _6 = old->next;
  imm->imm_use = _6;
  retval.1422 = end_readonly_imm_use_p (imm);
  if (retval.1422 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  D.256437 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  D.256437 = imm->imm_use;

  <bb 9> :
<L7>:
  return D.256437;

}



;; Function end_readonly_imm_use_p (_ZL22end_readonly_imm_use_pPK16imm_use_iterator, funcdef_no=2987, decl_uid=109447, cgraph_uid=2089, symbol_order=2254)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool end_readonly_imm_use_p (const struct imm_use_iterator * imm)
{
  bool D.256439;

  <bb 2> :
  _1 = imm->imm_use;
  _2 = imm->end_p;
  D.256439 = _1 == _2;

  <bb 3> :
<L0>:
  return D.256439;

}



;; Function check_bbStack (_Z13check_bbStackP15basic_block_def, funcdef_no=6421, decl_uid=196426, cgraph_uid=3397, symbol_order=4174)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int check_bbStack (struct basic_block_def * target)
{
  int o;
  int size;
  int D.256444;
  bool retval.1423;

  <bb 2> :
  _1 = std::vector<basic_block_def*>::size (&new_path_array);
  _2 = (unsigned int) _1;
  _3 = _2 + 4294967295;
  o = (int) _3;
  goto <bb 6>; [INV]

  <bb 3> :
  _4 = (long unsigned int) o;
  _5 = std::vector<basic_block_def*>::operator[] (&new_path_array, _4);
  _6 = *_5;
  target.1424_7 = target;
  retval.1423 = _6 == target.1424_7;
  if (retval.1423 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.256444 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  o = o + -1;

  <bb 6> :
  if (o >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  size = 8;
  totalsize.1425_8 = totalsize;
  _9 = size + totalsize.1425_8;
  totalsize = _9;
  std::vector<basic_block_def*>::push_back (&new_path_array, &target);
  D.256444 = 0;

  <bb 8> :
<L5>:
  return D.256444;

}



;; Function std::vector<basic_block_def*>::size (_ZNKSt6vectorIP15basic_block_defSaIS1_EE4sizeEv, funcdef_no=7780, decl_uid=169934, cgraph_uid=4412, symbol_order=5198)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<basic_block_def*>::size (const struct vector * const this)
{
  size_type D.256446;

  <bb 2> :
  _1 = this->D.170301._M_impl.D.169646._M_finish;
  _2 = this->D.170301._M_impl.D.169646._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  D.256446 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.256446;

}



;; Function std::vector<basic_block_def*>::operator[] (_ZNSt6vectorIP15basic_block_defSaIS1_EEixEm, funcdef_no=7781, decl_uid=169954, cgraph_uid=4413, symbol_order=5199)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * & std::vector<basic_block_def*>::operator[] (struct vector * const this, size_type __n)
{
  struct basic_block_def * & D.256448;

  <bb 2> :
  _1 = this->D.170301._M_impl.D.169646._M_start;
  _2 = __n * 8;
  D.256448 = _1 + _2;

  <bb 3> :
<L0>:
  return D.256448;

}



;; Function std::vector<basic_block_def*>::push_back (_ZNSt6vectorIP15basic_block_defSaIS1_EE9push_backERKS1_, funcdef_no=7782, decl_uid=169981, cgraph_uid=4415, symbol_order=5201)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<basic_block_def*>::push_back (struct vector * const this, struct basic_block_def * const & __x)
{
  struct __normal_iterator D.256453;

  <bb 2> :
  _1 = this->D.170301._M_impl.D.169646._M_finish;
  _2 = this->D.170301._M_impl.D.169646._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.170301._M_impl.D.169646._M_finish;
  _4 = &this->D.170301._M_impl;
  std::allocator_traits<std::allocator<basic_block_def*> >::construct<basic_block_def*, basic_block_def* const&> (_4, _3, __x);
  _5 = this->D.170301._M_impl.D.169646._M_finish;
  _6 = _5 + 8;
  this->D.170301._M_impl.D.169646._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.256453 = std::vector<basic_block_def*>::end (this);
  std::vector<basic_block_def*>::_M_realloc_insert<basic_block_def* const&> (this, D.256453, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<basic_block_def*> >::construct<basic_block_def*, basic_block_def* const&> (_ZNSt16allocator_traitsISaIP15basic_block_defEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_, funcdef_no=8737, decl_uid=215190, cgraph_uid=5369, symbol_order=6159)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<basic_block_def*> >::construct<basic_block_def*, basic_block_def* const&> (struct allocator_type & __a, struct basic_block_def * * __p, struct basic_block_def * const & __args#0)
{
  <bb 2> :
  _1 = std::forward<basic_block_def* const&> (__args#0);
  __gnu_cxx::new_allocator<basic_block_def*>::construct<basic_block_def*, basic_block_def* const&> (__a, __p, _1);
  return;

}



;; Function std::forward<basic_block_def* const&> (_ZSt7forwardIRKP15basic_block_defEOT_RNSt16remove_referenceIS4_E4typeE, funcdef_no=9573, decl_uid=227806, cgraph_uid=6205, symbol_order=6995)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct basic_block_def * const & std::forward<basic_block_def* const&> (struct basic_block_def * const & __t)
{
  struct basic_block_def * const & D.256454;

  <bb 2> :
  D.256454 = __t;

  <bb 3> :
<L0>:
  return D.256454;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::construct<basic_block_def*, basic_block_def* const&> (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defE9constructIS2_JRKS2_EEEvPT_DpOT0_, funcdef_no=9574, decl_uid=227808, cgraph_uid=6206, symbol_order=6996)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<basic_block_def*>::construct<basic_block_def*, basic_block_def* const&> (struct new_allocator * const this, struct basic_block_def * * __p, struct basic_block_def * const & __args#0)
{
  void * D.237628;
  void * D.237627;
  struct basic_block_def * D.237629;

  <bb 2> :
  _1 = std::forward<basic_block_def* const&> (__args#0);
  D.237629 = *_1;
  D.237627 = __p;
  D.237628 = operator new (8, D.237627);
  MEM[(struct basic_block_def * *)D.237628] = D.237629;
  return;

}



;; Function std::vector<basic_block_def*>::end (_ZNSt6vectorIP15basic_block_defSaIS1_EE3endEv, funcdef_no=8738, decl_uid=169914, cgraph_uid=5370, symbol_order=6160)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<basic_block_def*>::end (struct vector * const this)
{
  struct iterator D.227831;
  struct iterator D.256456;

  <bb 2> :
  _1 = &this->D.170301._M_impl.D.169646._M_finish;
  __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::__normal_iterator (&D.227831, _1);
  D.256456 = D.227831;
  D.227831 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256456;

}



;; Function __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS2_SaIS2_EEEC2ERKS3_, funcdef_no=9576, decl_uid=215437, cgraph_uid=6208, symbol_order=6998)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::__normal_iterator (struct __normal_iterator * const this, struct basic_block_def * * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<basic_block_def*>::_M_realloc_insert<basic_block_def* const&> (_ZNSt6vectorIP15basic_block_defSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_, funcdef_no=8739, decl_uid=215456, cgraph_uid=5374, symbol_order=6164)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<basic_block_def*>::_M_realloc_insert<basic_block_def* const&> (struct vector * const this, struct iterator __position, struct basic_block_def * const & __args#0)
{
  struct basic_block_def * * D.256463;
  const size_type D.256462;
  struct basic_block_def * * __new_finish;
  struct basic_block_def * * __new_start;
  const size_type __elems_before;
  struct basic_block_def * * __old_finish;
  struct basic_block_def * * __old_start;
  const size_type __len;
  struct iterator D.227839;

  <bb 2> :
  D.256462 = std::vector<basic_block_def*>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.256462;
  __old_start = this->D.170301._M_impl.D.169646._M_start;
  __old_finish = this->D.170301._M_impl.D.169646._M_finish;
  D.227839 = std::vector<basic_block_def*>::begin (this);
  _1 = __gnu_cxx::operator-<basic_block_def**, std::vector<basic_block_def*> > (&__position, &D.227839);
  __elems_before = (const size_type) _1;
  D.227839 = {CLOBBER};
  _2 = &this->D.170301;
  D.256463 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_allocate (_2, __len);
  __new_start = D.256463;
  __new_finish = __new_start;
  _3 = std::forward<basic_block_def* const&> (__args#0);
  _4 = __elems_before * 8;
  _5 = __new_start + _4;
  _6 = &this->D.170301._M_impl;
  std::allocator_traits<std::allocator<basic_block_def*> >::construct<basic_block_def*, basic_block_def* const&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.170301;
  _8 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<basic_block_def*>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 8;
  _11 = &this->D.170301;
  _12 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<basic_block_def*>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.170301;
  _23 = this->D.170301._M_impl.D.169646._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 8;
  _26 = (long unsigned int) _25;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (_22, __old_start, _26);
  this->D.170301._M_impl.D.169646._M_start = __new_start;
  this->D.170301._M_impl.D.169646._M_finish = __new_finish;
  _27 = __len * 8;
  _28 = __new_start + _27;
  this->D.170301._M_impl.D.169646._M_end_of_storage = _28;
  return;

}



;; Function std::vector<basic_block_def*>::_M_check_len (_ZNKSt6vectorIP15basic_block_defSaIS1_EE12_M_check_lenEmPKc, funcdef_no=9578, decl_uid=170150, cgraph_uid=6210, symbol_order=7000)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<basic_block_def*>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.1428;
  size_type D.256467;
  const long unsigned int D.237638;
  bool retval.1426;

  <bb 2> :
  _1 = std::vector<basic_block_def*>::max_size (this);
  _2 = std::vector<basic_block_def*>::size (this);
  _3 = _1 - _2;
  __n.1427_4 = __n;
  retval.1426 = _3 < __n.1427_4;
  if (retval.1426 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<basic_block_def*>::size (this);
  _6 = std::vector<basic_block_def*>::size (this);
  D.237638 = _6;
  _7 = std::max<long unsigned int> (&D.237638, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.237638 = {CLOBBER};
  _9 = std::vector<basic_block_def*>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<basic_block_def*>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1428 = std::vector<basic_block_def*>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1428 = __len;

  <bb 8> :
  D.256467 = iftmp.1428;

  <bb 9> :
<L6>:
  return D.256467;

}



;; Function std::vector<basic_block_def*>::max_size (_ZNKSt6vectorIP15basic_block_defSaIS1_EE8max_sizeEv, funcdef_no=10206, decl_uid=169936, cgraph_uid=6838, symbol_order=7632)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<basic_block_def*>::max_size (const struct vector * const this)
{
  size_type D.256474;

  <bb 2> :
  _1 = &this->D.170301;
  _2 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_1);
  D.256474 = std::vector<basic_block_def*>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.256474;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseIP15basic_block_defSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=9671, decl_uid=169536, cgraph_uid=6303, symbol_order=7093)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.256476;

  <bb 2> :
  D.256476 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.256476;

}



;; Function std::vector<basic_block_def*>::_S_max_size (_ZNSt6vectorIP15basic_block_defSaIS1_EE11_S_max_sizeERKS2_, funcdef_no=10671, decl_uid=170157, cgraph_uid=7303, symbol_order=8097)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<basic_block_def*>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.256478;

  <bb 2> :
  __diffmax = 1152921504606846975;
  _1 = std::allocator_traits<std::allocator<basic_block_def*> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.256478 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256478;

}



;; Function std::allocator_traits<std::allocator<basic_block_def*> >::max_size (_ZNSt16allocator_traitsISaIP15basic_block_defEE8max_sizeERKS2_, funcdef_no=10890, decl_uid=169471, cgraph_uid=7522, symbol_order=8318)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<basic_block_def*> >::max_size (const struct allocator_type & __a)
{
  size_type D.256481;

  <bb 2> :
  D.256481 = __gnu_cxx::new_allocator<basic_block_def*>::max_size (__a);

  <bb 3> :
<L0>:
  return D.256481;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::max_size (_ZNK9__gnu_cxx13new_allocatorIP15basic_block_defE8max_sizeEv, funcdef_no=10993, decl_uid=169313, cgraph_uid=7625, symbol_order=8421)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<basic_block_def*>::max_size (const struct new_allocator * const this)
{
  size_type D.256483;

  <bb 2> :
  D.256483 = __gnu_cxx::new_allocator<basic_block_def*>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.256483;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIP15basic_block_defE11_M_max_sizeEv, funcdef_no=10673, decl_uid=169332, cgraph_uid=7304, symbol_order=8098)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<basic_block_def*>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.256485;

  <bb 2> :
  D.256485 = 1152921504606846975;

  <bb 3> :
<L0>:
  return D.256485;

}



;; Function std::vector<basic_block_def*>::begin (_ZNSt6vectorIP15basic_block_defSaIS1_EE5beginEv, funcdef_no=9579, decl_uid=169910, cgraph_uid=6211, symbol_order=7001)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<basic_block_def*>::begin (struct vector * const this)
{
  struct iterator D.237640;
  struct iterator D.256487;

  <bb 2> :
  _1 = &this->D.170301._M_impl.D.169646._M_start;
  __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::__normal_iterator (&D.237640, _1);
  D.256487 = D.237640;
  D.237640 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256487;

}



;; Function __gnu_cxx::operator-<basic_block_def**, std::vector<basic_block_def*> > (_ZN9__gnu_cxxmiIPP15basic_block_defSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_, funcdef_no=9580, decl_uid=227840, cgraph_uid=6212, symbol_order=7002)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<basic_block_def**, std::vector<basic_block_def*> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.256490;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.256490 = _5 /[ex] 8;

  <bb 3> :
<L0>:
  return D.256490;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_allocate (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE11_M_allocateEm, funcdef_no=9581, decl_uid=169650, cgraph_uid=6213, symbol_order=7003)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct basic_block_def * * std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct basic_block_def * * D.256498;
  struct basic_block_def * * iftmp.1429;
  struct basic_block_def * * D.256492;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.256498 = std::allocator_traits<std::allocator<basic_block_def*> >::allocate (_1, __n);
  iftmp.1429 = D.256498;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1429 = 0B;

  <bb 5> :
  D.256492 = iftmp.1429;

  <bb 6> :
<L3>:
  return D.256492;

}



;; Function std::allocator_traits<std::allocator<basic_block_def*> >::allocate (_ZNSt16allocator_traitsISaIP15basic_block_defEE8allocateERS2_m, funcdef_no=10207, decl_uid=169451, cgraph_uid=6839, symbol_order=7633)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct basic_block_def * * std::allocator_traits<std::allocator<basic_block_def*> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct basic_block_def * * D.256501;
  struct basic_block_def * * D.256499;

  <bb 2> :
  D.256501 = __gnu_cxx::new_allocator<basic_block_def*>::allocate (__a, __n, 0B);
  D.256499 = D.256501;

  <bb 3> :
<L0>:
  return D.256499;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::allocate (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defE8allocateEmPKv, funcdef_no=10672, decl_uid=169305, cgraph_uid=7305, symbol_order=8099)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct basic_block_def * * __gnu_cxx::new_allocator<basic_block_def*>::allocate (struct new_allocator * const this, size_type __n, const void * D.245946)
{
  struct basic_block_def * * D.256512;
  struct basic_block_def * * D.256511;
  align_val_t __al;
  struct basic_block_def * * D.256509;
  bool retval.1430;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<basic_block_def*>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.1430 = _4 != 0;
  if (retval.1430 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 2305843009213693951)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 8;
  D.256512 = operator new (_6);
  D.256509 = D.256512;

  <bb 7> :
<L6>:
  return D.256509;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=8764, decl_uid=169534, cgraph_uid=5396, symbol_order=6186)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.256513;

  <bb 2> :
  D.256513 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.256513;

}



;; Function __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS2_SaIS2_EEE4baseEv, funcdef_no=9583, decl_uid=215424, cgraph_uid=6215, symbol_order=7005)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * const & __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (const struct __normal_iterator * const this)
{
  struct basic_block_def * * const & D.256515;

  <bb 2> :
  D.256515 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.256515;

}



;; Function std::vector<basic_block_def*>::_S_relocate (_ZNSt6vectorIP15basic_block_defSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_, funcdef_no=9582, decl_uid=169808, cgraph_uid=6214, symbol_order=7004)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::vector<basic_block_def*>::_S_relocate (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.256518;
  struct basic_block_def * * D.256517;

  <bb 2> :
  D.256517 = std::vector<basic_block_def*>::_S_do_relocate (__first, __last, __result, __alloc, D.256518);

  <bb 3> :
<L0>:
  return D.256517;

}



;; Function std::vector<basic_block_def*>::_S_do_relocate (_ZNSt6vectorIP15basic_block_defSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE, funcdef_no=10208, decl_uid=169796, cgraph_uid=6840, symbol_order=7634)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::vector<basic_block_def*>::_S_do_relocate (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result, struct _Tp_alloc_type & __alloc, struct true_type D.242710)
{
  struct basic_block_def * * D.256520;

  <bb 2> :
  D.256520 = std::__relocate_a<basic_block_def**, basic_block_def**, std::allocator<basic_block_def*> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.256520;

}



;; Function std::__relocate_a<basic_block_def**, basic_block_def**, std::allocator<basic_block_def*> > (_ZSt12__relocate_aIPP15basic_block_defS2_SaIS1_EET0_T_S5_S4_RT1_, funcdef_no=10674, decl_uid=228005, cgraph_uid=7306, symbol_order=8100)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__relocate_a<basic_block_def**, basic_block_def**, std::allocator<basic_block_def*> > (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result, struct allocator & __alloc)
{
  struct basic_block_def * * D.256522;

  <bb 2> :
  _1 = std::__niter_base<basic_block_def**> (__result);
  _2 = std::__niter_base<basic_block_def**> (__last);
  _3 = std::__niter_base<basic_block_def**> (__first);
  D.256522 = std::__relocate_a_1<basic_block_def*, basic_block_def*> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.256522;

}



;; Function std::__niter_base<basic_block_def**> (_ZSt12__niter_baseIPP15basic_block_defET_S3_, funcdef_no=10724, decl_uid=228011, cgraph_uid=7356, symbol_order=8150)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__niter_base<basic_block_def**> (struct basic_block_def * * __it)
{
  struct basic_block_def * * D.256524;

  <bb 2> :
  D.256524 = __it;

  <bb 3> :
<L0>:
  return D.256524;

}



;; Function std::__relocate_a_1<basic_block_def*, basic_block_def*> (_ZSt14__relocate_a_1IP15basic_block_defS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E, funcdef_no=10891, decl_uid=228179, cgraph_uid=7523, symbol_order=8319)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct basic_block_def * * std::__relocate_a_1<basic_block_def*, basic_block_def*> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result, struct allocator & D.247007)
{
  ptrdiff_t __count;
  struct basic_block_def * * D.256529;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 8;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.1431_2 = (long unsigned int) __count;
  _3 = __count.1431_2 * 8;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.1432_4 = (long unsigned int) __count;
  _5 = __count.1432_4 * 8;
  D.256529 = __result + _5;

  <bb 5> :
<L3>:
  return D.256529;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE13_M_deallocateEPS1_m, funcdef_no=8406, decl_uid=169653, cgraph_uid=5038, symbol_order=5828)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (struct _Vector_base * const this, struct basic_block_def * * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<basic_block_def*> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<basic_block_def*> >::deallocate (_ZNSt16allocator_traitsISaIP15basic_block_defEE10deallocateERS2_PS1_m, funcdef_no=9211, decl_uid=169458, cgraph_uid=5843, symbol_order=6633)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<basic_block_def*> >::deallocate (struct allocator_type & __a, struct basic_block_def * * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<basic_block_def*>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::deallocate (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defE10deallocateEPS2_m, funcdef_no=9948, decl_uid=169309, cgraph_uid=6580, symbol_order=7374)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<basic_block_def*>::deallocate (struct new_allocator * const this, struct basic_block_def * * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 8;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function check_stmtStack (_Z15check_stmtStackP9tree_node, funcdef_no=6422, decl_uid=186979, cgraph_uid=3398, symbol_order=4175)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int check_stmtStack (union tree_node * target)
{
  int o;
  int size;
  int D.256540;
  bool retval.1433;

  <bb 2> :
  _1 = std::vector<tree_node*>::size (&new_gimpletree_array);
  _2 = (unsigned int) _1;
  _3 = _2 + 4294967295;
  o = (int) _3;
  goto <bb 6>; [INV]

  <bb 3> :
  _4 = (long unsigned int) o;
  _5 = std::vector<tree_node*>::operator[] (&new_gimpletree_array, _4);
  _6 = *_5;
  target.1434_7 = target;
  retval.1433 = _6 == target.1434_7;
  if (retval.1433 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.256540 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  o = o + -1;

  <bb 6> :
  if (o >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  size = 8;
  totalsize.1435_8 = totalsize;
  _9 = size + totalsize.1435_8;
  totalsize = _9;
  std::vector<tree_node*>::push_back (&new_gimpletree_array, &target);
  D.256540 = 0;

  <bb 8> :
<L5>:
  return D.256540;

}



;; Function check_stmtStack2 (_Z16check_stmtStack2P6gimple, funcdef_no=6423, decl_uid=186977, cgraph_uid=3399, symbol_order=4176)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int check_stmtStack2 (struct gimple * stmt)
{
  int o;
  int size;
  int D.256545;
  bool retval.1436;

  <bb 2> :
  _1 = std::vector<gimple*>::size (&new_gimple_array);
  _2 = (unsigned int) _1;
  _3 = _2 + 4294967295;
  o = (int) _3;
  goto <bb 6>; [INV]

  <bb 3> :
  _4 = (long unsigned int) o;
  _5 = std::vector<gimple*>::operator[] (&new_gimple_array, _4);
  _6 = *_5;
  stmt.1437_7 = stmt;
  retval.1436 = _6 == stmt.1437_7;
  if (retval.1436 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.256545 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  o = o + -1;

  <bb 6> :
  if (o >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  size = 8;
  totalsize.1438_8 = totalsize;
  _9 = size + totalsize.1438_8;
  totalsize = _9;
  std::vector<gimple*>::push_back (&new_gimple_array, &stmt);
  D.256545 = 0;

  <bb 8> :
<L5>:
  return D.256545;

}



;; Function std::vector<gimple*>::size (_ZNKSt6vectorIP6gimpleSaIS1_EE4sizeEv, funcdef_no=7784, decl_uid=183616, cgraph_uid=4416, symbol_order=5202)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<gimple*>::size (const struct vector * const this)
{
  size_type D.256547;

  <bb 2> :
  _1 = this->D.183983._M_impl.D.183339._M_finish;
  _2 = this->D.183983._M_impl.D.183339._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  D.256547 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.256547;

}



;; Function std::vector<gimple*>::operator[] (_ZNSt6vectorIP6gimpleSaIS1_EEixEm, funcdef_no=7785, decl_uid=183636, cgraph_uid=4417, symbol_order=5203)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * & std::vector<gimple*>::operator[] (struct vector * const this, size_type __n)
{
  struct gimple * & D.256549;

  <bb 2> :
  _1 = this->D.183983._M_impl.D.183339._M_start;
  _2 = __n * 8;
  D.256549 = _1 + _2;

  <bb 3> :
<L0>:
  return D.256549;

}



;; Function std::vector<gimple*>::push_back (_ZNSt6vectorIP6gimpleSaIS1_EE9push_backERKS1_, funcdef_no=7786, decl_uid=183663, cgraph_uid=4419, symbol_order=5205)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<gimple*>::push_back (struct vector * const this, struct gimple * const & __x)
{
  struct __normal_iterator D.256554;

  <bb 2> :
  _1 = this->D.183983._M_impl.D.183339._M_finish;
  _2 = this->D.183983._M_impl.D.183339._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.183983._M_impl.D.183339._M_finish;
  _4 = &this->D.183983._M_impl;
  std::allocator_traits<std::allocator<gimple*> >::construct<gimple*, gimple* const&> (_4, _3, __x);
  _5 = this->D.183983._M_impl.D.183339._M_finish;
  _6 = _5 + 8;
  this->D.183983._M_impl.D.183339._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.256554 = std::vector<gimple*>::end (this);
  std::vector<gimple*>::_M_realloc_insert<gimple* const&> (this, D.256554, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<gimple*> >::construct<gimple*, gimple* const&> (_ZNSt16allocator_traitsISaIP6gimpleEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_, funcdef_no=8743, decl_uid=215465, cgraph_uid=5375, symbol_order=6165)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<gimple*> >::construct<gimple*, gimple* const&> (struct allocator_type & __a, struct gimple * * __p, struct gimple * const & __args#0)
{
  <bb 2> :
  _1 = std::forward<gimple* const&> (__args#0);
  __gnu_cxx::new_allocator<gimple*>::construct<gimple*, gimple* const&> (__a, __p, _1);
  return;

}



;; Function std::forward<gimple* const&> (_ZSt7forwardIRKP6gimpleEOT_RNSt16remove_referenceIS4_E4typeE, funcdef_no=9585, decl_uid=228331, cgraph_uid=6217, symbol_order=7007)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct gimple * const & std::forward<gimple* const&> (struct gimple * const & __t)
{
  struct gimple * const & D.256555;

  <bb 2> :
  D.256555 = __t;

  <bb 3> :
<L0>:
  return D.256555;

}



;; Function __gnu_cxx::new_allocator<gimple*>::construct<gimple*, gimple* const&> (_ZN9__gnu_cxx13new_allocatorIP6gimpleE9constructIS2_JRKS2_EEEvPT_DpOT0_, funcdef_no=9586, decl_uid=228333, cgraph_uid=6218, symbol_order=7008)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple*>::construct<gimple*, gimple* const&> (struct new_allocator * const this, struct gimple * * __p, struct gimple * const & __args#0)
{
  void * D.237669;
  void * D.237668;
  struct gimple * D.237670;

  <bb 2> :
  _1 = std::forward<gimple* const&> (__args#0);
  D.237670 = *_1;
  D.237668 = __p;
  D.237669 = operator new (8, D.237668);
  MEM[(struct gimple * *)D.237669] = D.237670;
  return;

}



;; Function std::vector<gimple*>::end (_ZNSt6vectorIP6gimpleSaIS1_EE3endEv, funcdef_no=8744, decl_uid=183596, cgraph_uid=5376, symbol_order=6166)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<gimple*>::end (struct vector * const this)
{
  struct iterator D.228356;
  struct iterator D.256557;

  <bb 2> :
  _1 = &this->D.183983._M_impl.D.183339._M_finish;
  __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::__normal_iterator (&D.228356, _1);
  D.256557 = D.228356;
  D.228356 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256557;

}



;; Function __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPP6gimpleSt6vectorIS2_SaIS2_EEEC2ERKS3_, funcdef_no=9588, decl_uid=215702, cgraph_uid=6220, symbol_order=7010)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::__normal_iterator (struct __normal_iterator * const this, struct gimple * * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<gimple*>::_M_realloc_insert<gimple* const&> (_ZNSt6vectorIP6gimpleSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_, funcdef_no=8745, decl_uid=215721, cgraph_uid=5380, symbol_order=6170)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<gimple*>::_M_realloc_insert<gimple* const&> (struct vector * const this, struct iterator __position, struct gimple * const & __args#0)
{
  struct gimple * * D.256564;
  const size_type D.256563;
  struct gimple * * __new_finish;
  struct gimple * * __new_start;
  const size_type __elems_before;
  struct gimple * * __old_finish;
  struct gimple * * __old_start;
  const size_type __len;
  struct iterator D.228364;

  <bb 2> :
  D.256563 = std::vector<gimple*>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.256563;
  __old_start = this->D.183983._M_impl.D.183339._M_start;
  __old_finish = this->D.183983._M_impl.D.183339._M_finish;
  D.228364 = std::vector<gimple*>::begin (this);
  _1 = __gnu_cxx::operator-<gimple**, std::vector<gimple*> > (&__position, &D.228364);
  __elems_before = (const size_type) _1;
  D.228364 = {CLOBBER};
  _2 = &this->D.183983;
  D.256564 = std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_allocate (_2, __len);
  __new_start = D.256564;
  __new_finish = __new_start;
  _3 = std::forward<gimple* const&> (__args#0);
  _4 = __elems_before * 8;
  _5 = __new_start + _4;
  _6 = &this->D.183983._M_impl;
  std::allocator_traits<std::allocator<gimple*> >::construct<gimple*, gimple* const&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.183983;
  _8 = std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<gimple*>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 8;
  _11 = &this->D.183983;
  _12 = std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<gimple*>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.183983;
  _23 = this->D.183983._M_impl.D.183339._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 8;
  _26 = (long unsigned int) _25;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_deallocate (_22, __old_start, _26);
  this->D.183983._M_impl.D.183339._M_start = __new_start;
  this->D.183983._M_impl.D.183339._M_finish = __new_finish;
  _27 = __len * 8;
  _28 = __new_start + _27;
  this->D.183983._M_impl.D.183339._M_end_of_storage = _28;
  return;

}



;; Function std::vector<gimple*>::_M_check_len (_ZNKSt6vectorIP6gimpleSaIS1_EE12_M_check_lenEmPKc, funcdef_no=9590, decl_uid=183832, cgraph_uid=6222, symbol_order=7012)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<gimple*>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.1441;
  size_type D.256568;
  const long unsigned int D.237679;
  bool retval.1439;

  <bb 2> :
  _1 = std::vector<gimple*>::max_size (this);
  _2 = std::vector<gimple*>::size (this);
  _3 = _1 - _2;
  __n.1440_4 = __n;
  retval.1439 = _3 < __n.1440_4;
  if (retval.1439 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<gimple*>::size (this);
  _6 = std::vector<gimple*>::size (this);
  D.237679 = _6;
  _7 = std::max<long unsigned int> (&D.237679, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.237679 = {CLOBBER};
  _9 = std::vector<gimple*>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<gimple*>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1441 = std::vector<gimple*>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1441 = __len;

  <bb 8> :
  D.256568 = iftmp.1441;

  <bb 9> :
<L6>:
  return D.256568;

}



;; Function std::vector<gimple*>::max_size (_ZNKSt6vectorIP6gimpleSaIS1_EE8max_sizeEv, funcdef_no=10210, decl_uid=183618, cgraph_uid=6842, symbol_order=7636)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<gimple*>::max_size (const struct vector * const this)
{
  size_type D.256575;

  <bb 2> :
  _1 = &this->D.183983;
  _2 = std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_1);
  D.256575 = std::vector<gimple*>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.256575;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseIP6gimpleSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=10676, decl_uid=183229, cgraph_uid=7308, symbol_order=8102)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.256577;

  <bb 2> :
  D.256577 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.256577;

}



;; Function std::vector<gimple*>::_S_max_size (_ZNSt6vectorIP6gimpleSaIS1_EE11_S_max_sizeERKS2_, funcdef_no=10675, decl_uid=183839, cgraph_uid=7307, symbol_order=8101)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<gimple*>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.256579;

  <bb 2> :
  __diffmax = 1152921504606846975;
  _1 = std::allocator_traits<std::allocator<gimple*> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.256579 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256579;

}



;; Function std::allocator_traits<std::allocator<gimple*> >::max_size (_ZNSt16allocator_traitsISaIP6gimpleEE8max_sizeERKS2_, funcdef_no=10892, decl_uid=181795, cgraph_uid=7524, symbol_order=8320)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<gimple*> >::max_size (const struct allocator_type & __a)
{
  size_type D.256582;

  <bb 2> :
  D.256582 = __gnu_cxx::new_allocator<gimple*>::max_size (__a);

  <bb 3> :
<L0>:
  return D.256582;

}



;; Function __gnu_cxx::new_allocator<gimple*>::max_size (_ZNK9__gnu_cxx13new_allocatorIP6gimpleE8max_sizeEv, funcdef_no=10994, decl_uid=181637, cgraph_uid=7626, symbol_order=8422)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<gimple*>::max_size (const struct new_allocator * const this)
{
  size_type D.256584;

  <bb 2> :
  D.256584 = __gnu_cxx::new_allocator<gimple*>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.256584;

}



;; Function __gnu_cxx::new_allocator<gimple*>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIP6gimpleE11_M_max_sizeEv, funcdef_no=10678, decl_uid=181656, cgraph_uid=7309, symbol_order=8103)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<gimple*>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.256586;

  <bb 2> :
  D.256586 = 1152921504606846975;

  <bb 3> :
<L0>:
  return D.256586;

}



;; Function std::vector<gimple*>::begin (_ZNSt6vectorIP6gimpleSaIS1_EE5beginEv, funcdef_no=9591, decl_uid=183592, cgraph_uid=6223, symbol_order=7013)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<gimple*>::begin (struct vector * const this)
{
  struct iterator D.237681;
  struct iterator D.256588;

  <bb 2> :
  _1 = &this->D.183983._M_impl.D.183339._M_start;
  __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::__normal_iterator (&D.237681, _1);
  D.256588 = D.237681;
  D.237681 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256588;

}



;; Function __gnu_cxx::operator-<gimple**, std::vector<gimple*> > (_ZN9__gnu_cxxmiIPP6gimpleSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_, funcdef_no=9592, decl_uid=228365, cgraph_uid=6224, symbol_order=7014)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<gimple**, std::vector<gimple*> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.256591;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.256591 = _5 /[ex] 8;

  <bb 3> :
<L0>:
  return D.256591;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_allocate (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE11_M_allocateEm, funcdef_no=9593, decl_uid=183343, cgraph_uid=6225, symbol_order=7015)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct gimple * * std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct gimple * * D.256599;
  struct gimple * * iftmp.1442;
  struct gimple * * D.256593;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.256599 = std::allocator_traits<std::allocator<gimple*> >::allocate (_1, __n);
  iftmp.1442 = D.256599;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1442 = 0B;

  <bb 5> :
  D.256593 = iftmp.1442;

  <bb 6> :
<L3>:
  return D.256593;

}



;; Function std::allocator_traits<std::allocator<gimple*> >::allocate (_ZNSt16allocator_traitsISaIP6gimpleEE8allocateERS2_m, funcdef_no=10211, decl_uid=181775, cgraph_uid=6843, symbol_order=7637)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct gimple * * std::allocator_traits<std::allocator<gimple*> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct gimple * * D.256602;
  struct gimple * * D.256600;

  <bb 2> :
  D.256602 = __gnu_cxx::new_allocator<gimple*>::allocate (__a, __n, 0B);
  D.256600 = D.256602;

  <bb 3> :
<L0>:
  return D.256600;

}



;; Function __gnu_cxx::new_allocator<gimple*>::allocate (_ZN9__gnu_cxx13new_allocatorIP6gimpleE8allocateEmPKv, funcdef_no=10677, decl_uid=181629, cgraph_uid=7310, symbol_order=8104)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct gimple * * __gnu_cxx::new_allocator<gimple*>::allocate (struct new_allocator * const this, size_type __n, const void * D.245963)
{
  struct gimple * * D.256613;
  struct gimple * * D.256612;
  align_val_t __al;
  struct gimple * * D.256610;
  bool retval.1443;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<gimple*>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.1443 = _4 != 0;
  if (retval.1443 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 2305843009213693951)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 8;
  D.256613 = operator new (_6);
  D.256610 = D.256613;

  <bb 7> :
<L6>:
  return D.256610;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=9596, decl_uid=183227, cgraph_uid=6228, symbol_order=7018)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.256614;

  <bb 2> :
  D.256614 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.256614;

}



;; Function __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPP6gimpleSt6vectorIS2_SaIS2_EEE4baseEv, funcdef_no=9595, decl_uid=215689, cgraph_uid=6227, symbol_order=7017)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * const & __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (const struct __normal_iterator * const this)
{
  struct gimple * * const & D.256616;

  <bb 2> :
  D.256616 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.256616;

}



;; Function std::vector<gimple*>::_S_relocate (_ZNSt6vectorIP6gimpleSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_, funcdef_no=9594, decl_uid=183491, cgraph_uid=6226, symbol_order=7016)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * std::vector<gimple*>::_S_relocate (struct gimple * * __first, struct gimple * * __last, struct gimple * * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.256619;
  struct gimple * * D.256618;

  <bb 2> :
  D.256618 = std::vector<gimple*>::_S_do_relocate (__first, __last, __result, __alloc, D.256619);

  <bb 3> :
<L0>:
  return D.256618;

}



;; Function std::vector<gimple*>::_S_do_relocate (_ZNSt6vectorIP6gimpleSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE, funcdef_no=10212, decl_uid=183479, cgraph_uid=6844, symbol_order=7638)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * std::vector<gimple*>::_S_do_relocate (struct gimple * * __first, struct gimple * * __last, struct gimple * * __result, struct _Tp_alloc_type & __alloc, struct true_type D.242722)
{
  struct gimple * * D.256621;

  <bb 2> :
  D.256621 = std::__relocate_a<gimple**, gimple**, std::allocator<gimple*> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.256621;

}



;; Function std::__relocate_a<gimple**, gimple**, std::allocator<gimple*> > (_ZSt12__relocate_aIPP6gimpleS2_SaIS1_EET0_T_S5_S4_RT1_, funcdef_no=10679, decl_uid=228530, cgraph_uid=7311, symbol_order=8105)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * std::__relocate_a<gimple**, gimple**, std::allocator<gimple*> > (struct gimple * * __first, struct gimple * * __last, struct gimple * * __result, struct allocator & __alloc)
{
  struct gimple * * D.256623;

  <bb 2> :
  _1 = std::__niter_base<gimple**> (__result);
  _2 = std::__niter_base<gimple**> (__last);
  _3 = std::__niter_base<gimple**> (__first);
  D.256623 = std::__relocate_a_1<gimple*, gimple*> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.256623;

}



;; Function std::__niter_base<gimple**> (_ZSt12__niter_baseIPP6gimpleET_S3_, funcdef_no=10893, decl_uid=228536, cgraph_uid=7525, symbol_order=8321)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * std::__niter_base<gimple**> (struct gimple * * __it)
{
  struct gimple * * D.256625;

  <bb 2> :
  D.256625 = __it;

  <bb 3> :
<L0>:
  return D.256625;

}



;; Function std::__relocate_a_1<gimple*, gimple*> (_ZSt14__relocate_a_1IP6gimpleS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E, funcdef_no=10894, decl_uid=228704, cgraph_uid=7526, symbol_order=8322)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct gimple * * std::__relocate_a_1<gimple*, gimple*> (struct gimple * * __first, struct gimple * * __last, struct gimple * * __result, struct allocator & D.247017)
{
  ptrdiff_t __count;
  struct gimple * * D.256630;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 8;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.1444_2 = (long unsigned int) __count;
  _3 = __count.1444_2 * 8;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.1445_4 = (long unsigned int) __count;
  _5 = __count.1445_4 * 8;
  D.256630 = __result + _5;

  <bb 5> :
<L3>:
  return D.256630;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_deallocate (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE13_M_deallocateEPS1_m, funcdef_no=8386, decl_uid=183346, cgraph_uid=5018, symbol_order=5808)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_deallocate (struct _Vector_base * const this, struct gimple * * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<gimple*> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<gimple*> >::deallocate (_ZNSt16allocator_traitsISaIP6gimpleEE10deallocateERS2_PS1_m, funcdef_no=9203, decl_uid=181782, cgraph_uid=5835, symbol_order=6625)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<gimple*> >::deallocate (struct allocator_type & __a, struct gimple * * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple*>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple*>::deallocate (_ZN9__gnu_cxx13new_allocatorIP6gimpleE10deallocateEPS2_m, funcdef_no=9946, decl_uid=181633, cgraph_uid=6578, symbol_order=7372)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<gimple*>::deallocate (struct new_allocator * const this, struct gimple * * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 8;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function check_stmtStack3 (_Z16check_stmtStack3P9tree_node, funcdef_no=6424, decl_uid=186975, cgraph_uid=3400, symbol_order=4177)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int check_stmtStack3 (union tree_node * target)
{
  int o;
  int D.256641;
  bool retval.1446;

  <bb 2> :
  _1 = std::vector<tree_node*>::size (&new_gimpletree_array);
  _2 = (unsigned int) _1;
  _3 = _2 + 4294967295;
  o = (int) _3;
  goto <bb 6>; [INV]

  <bb 3> :
  _4 = (long unsigned int) o;
  _5 = std::vector<tree_node*>::operator[] (&new_gimpletree_array, _4);
  _6 = *_5;
  retval.1446 = target == _6;
  if (retval.1446 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.256641 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  o = o + -1;

  <bb 6> :
  if (o >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  D.256641 = 0;

  <bb 8> :
<L5>:
  return D.256641;

}



;; Function check_stmtStack4 (_Z16check_stmtStack4P6gimple, funcdef_no=6425, decl_uid=186973, cgraph_uid=3401, symbol_order=4178)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int check_stmtStack4 (struct gimple * stmt)
{
  int o;
  int D.256646;
  bool retval.1447;

  <bb 2> :
  _1 = std::vector<gimple*>::size (&new_gimple_array);
  _2 = (unsigned int) _1;
  _3 = _2 + 4294967295;
  o = (int) _3;
  goto <bb 6>; [INV]

  <bb 3> :
  _4 = (long unsigned int) o;
  _5 = std::vector<gimple*>::operator[] (&new_gimple_array, _4);
  _6 = *_5;
  retval.1447 = stmt == _6;
  if (retval.1447 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.256646 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  o = o + -1;

  <bb 6> :
  if (o >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  D.256646 = 0;

  <bb 8> :
<L5>:
  return D.256646;

}



;; Function Checknew_search_imm_use_lhs (_Z27Checknew_search_imm_use_lhsP12gimple_arrayP6gimpleP9tree_nodeS4_, funcdef_no=6426, decl_uid=186971, cgraph_uid=3402, symbol_order=4179)

Removing basic block 14
Removing basic block 15
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 14 }
;; 5 succs { 6 14 }
;; 6 succs { 7 8 }
;; 7 succs { 14 }
;; 8 succs { 9 10 }
;; 9 succs { 14 }
;; 10 succs { 11 12 }
;; 11 succs { 14 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void Checknew_search_imm_use_lhs (struct gimple_array * used_stmt, struct gimple * use_stmt, union tree_node * target, union tree_node * target2)
{
  union tree_node * D.256679;
  union tree_node * D.256678;
  union tree_node * D.256677;
  union tree_node * D.256676;
  union tree_node * D.256675;
  union tree_node * D.256674;
  struct gimple * def_stmt;
  struct gimple * def_stmt;
  bool retval.1452;
  bool retval.1451;
  bool retval.1450;
  bool retval.1449;
  bool retval.1448;

  <bb 2> :
  def_stmt = use_stmt;
  D.256674 = gimple_assign_lhs (use_stmt);
  _1 = D.256674;
  _2 = _1->base.code;
  retval.1448 = _2 == 153;
  if (retval.1448 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.256675 = gimple_assign_lhs (use_stmt);
  _3 = D.256675;
  def_stmt = _3->ssa_name.def_stmt;

  <bb 4> :
  if (def_stmt != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 5> :
  D.256676 = gimple_assign_lhs (def_stmt);
  _4 = D.256676;
  retval.1449 = _4 != 0B;
  if (retval.1449 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 6> :
  D.256677 = gimple_assign_lhs (def_stmt);
  _5 = D.256677;
  _6 = _5->base.code;
  retval.1450 = _6 == 49;
  if (retval.1450 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 14>; [INV]

  <bb 8> :
  D.256678 = gimple_assign_lhs (def_stmt);
  _7 = D.256678;
  _8 = _7->base.code;
  retval.1451 = _8 == 47;
  if (retval.1451 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 14>; [INV]

  <bb 10> :
  D.256679 = gimple_assign_lhs (def_stmt);
  _9 = D.256679;
  _10 = _9->base.code;
  retval.1452 = _10 == 165;
  if (retval.1452 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 14>; [INV]

  <bb 12> :
  _11 = target->base.code;
  if (_11 == 36)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  Varnew_search_imm_use (used_stmt, use_stmt, target, target2);

  <bb 14> :
  return;

}



;; Function Checknew_search_imm_use_rhs (_Z27Checknew_search_imm_use_rhsP12gimple_arrayP6gimpleP9tree_nodeS4_, funcdef_no=6427, decl_uid=186966, cgraph_uid=3403, symbol_order=4180)

Removing basic block 14
Removing basic block 15
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 14 }
;; 5 succs { 6 14 }
;; 6 succs { 7 8 }
;; 7 succs { 14 }
;; 8 succs { 9 10 }
;; 9 succs { 14 }
;; 10 succs { 11 12 }
;; 11 succs { 14 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void Checknew_search_imm_use_rhs (struct gimple_array * used_stmt, struct gimple * use_stmt, union tree_node * target, union tree_node * target2)
{
  union tree_node * D.256711;
  union tree_node * D.256710;
  union tree_node * D.256709;
  union tree_node * D.256708;
  union tree_node * D.256707;
  union tree_node * D.256706;
  struct gimple * def_stmt;
  bool retval.1457;
  bool retval.1456;
  bool retval.1455;
  bool retval.1454;
  bool retval.1453;

  <bb 2> :
  def_stmt = use_stmt;
  D.256706 = gimple_assign_rhs1 (use_stmt);
  _1 = D.256706;
  _2 = _1->base.code;
  retval.1453 = _2 == 153;
  if (retval.1453 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.256707 = gimple_assign_rhs1 (use_stmt);
  _3 = D.256707;
  def_stmt = _3->ssa_name.def_stmt;

  <bb 4> :
  if (def_stmt != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 5> :
  D.256708 = gimple_assign_rhs1 (def_stmt);
  _4 = D.256708;
  retval.1454 = _4 != 0B;
  if (retval.1454 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 6> :
  D.256709 = gimple_assign_rhs1 (def_stmt);
  _5 = D.256709;
  _6 = _5->base.code;
  retval.1455 = _6 == 49;
  if (retval.1455 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 14>; [INV]

  <bb 8> :
  D.256710 = gimple_assign_rhs1 (def_stmt);
  _7 = D.256710;
  _8 = _7->base.code;
  retval.1456 = _8 == 47;
  if (retval.1456 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 14>; [INV]

  <bb 10> :
  D.256711 = gimple_assign_rhs1 (def_stmt);
  _9 = D.256711;
  _10 = _9->base.code;
  retval.1457 = _10 == 165;
  if (retval.1457 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 14>; [INV]

  <bb 12> :
  _11 = target->base.code;
  if (_11 == 36)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  Varnew_search_imm_use (used_stmt, use_stmt, target, target2);

  <bb 14> :
  return;

}



;; Function prechecktree (_Z12prechecktreeP9tree_node, funcdef_no=6428, decl_uid=186953, cgraph_uid=3404, symbol_order=4182)

Removing basic block 7
Removing basic block 8
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 7 }
;; 3 succs { 4 7 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
union tree_node * prechecktree (union tree_node * tree)
{
  union tree_node * D.256720;

  <bb 2> :
  if (tree != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  _1 = tree->base.code;
  if (_1 == 131)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  _2 = tree->exp.operands[0];
  gettree = _2;
  gettree.1458_3 = gettree;
  if (gettree.1458_3 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  gettree.1459_4 = gettree;
  _5 = gettree.1459_4->base.code;
  if (_5 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  D.256720 = gettree;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 7> :
  D.256720 = tree;

  <bb 8> :
<L10>:
  return D.256720;

}



;; Function check_bbinfo (_Z12check_bbinfoP11cgraph_nodeP15basic_block_def, funcdef_no=6429, decl_uid=186961, cgraph_uid=3405, symbol_order=4183)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
;;
;; Loop 1
;;  header 23, latch 22
;;  depth 1, outer 0
;;  nodes: 23 22 4 21 17 20 18 19 15 16 14 13 9 12 10 11 7 8 6 5
;; 2 succs { 3 28 }
;; 3 succs { 23 }
;; 4 succs { 5 22 }
;; 5 succs { 7 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 13 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { 15 14 }
;; 14 succs { 15 16 }
;; 15 succs { 17 }
;; 16 succs { 17 }
;; 17 succs { 18 21 }
;; 18 succs { 19 20 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 4 24 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 28 }
;; 28 succs { 1 }
void check_bbinfo (struct cgraph_node * m, struct basic_block_def * bb)
{
  bool D.256765;
  bool D.256764;
  struct function * D.256763;
  struct symbolicinfo * D.256762;
  struct symbolicinfo * D.256761;
  struct symbolicinfo * symbolicinfotmp;
  int o;
  int find_path_constraint;
  bool retval.1471;
  bool retval.1470;
  bool iftmp.1469;
  bool retval.1468;
  bool retval.1467;
  bool iftmp.1466;
  bool retval.1465;
  bool retval.1462;

  <bb 2> :
  pathconstraint.1460_1 = pathconstraint;
  if (pathconstraint.1460_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 3> :
  find_path_constraint = 0;
  stderr.1461_2 = stderr;
  __builtin_fwrite ("=======================Path Constaint===========================\n\n", 1, 66, stderr.1461_2);
  o = 0;
  goto <bb 23>; [INV]

  <bb 4> :
  syminfo.1463_3 = syminfo;
  _4 = (long unsigned int) o;
  _5 = std::vector<basic_block_def*>::operator[] (&symbolicExecution, _4);
  D.256761 = hash_map<basic_block_def*, symbolicinfo>::get (syminfo.1463_3, _5);
  _6 = D.256761;
  retval.1462 = _6 != 0B;
  if (retval.1462 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 5> :
  syminfo.1464_7 = syminfo;
  _8 = (long unsigned int) o;
  _9 = std::vector<basic_block_def*>::operator[] (&symbolicExecution, _8);
  D.256762 = hash_map<basic_block_def*, symbolicinfo>::get (syminfo.1464_7, _9);
  symbolicinfotmp = D.256762;
  _10 = symbolicinfotmp->node;
  D.256763 = cgraph_node::get_fun (_10);
  _11 = D.256763;
  push_cfun (_11);
  calculate_dominance_info (1);
  _12 = symbolicinfotmp->cond_truebranch;
  if (bb == _12)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _13 = symbolicinfotmp->cond_truebranch;
  D.256764 = dominated_by_p (1, bb, _13);
  _14 = D.256764;
  if (_14 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1466 = 1;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.1466 = 0;

  <bb 9> :
  retval.1465 = iftmp.1466;
  if (retval.1465 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  _15 = symbolicinfotmp->cond_stmt;
  gimple_location_safe (_15);
  retval.1467 = 1;
  if (retval.1467 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _16 = symbolicinfotmp->cond_stmt;
  debug_gimple_stmt (_16);

  <bb 12> :
  _17 = symbolicinfotmp->cond_stmt;
  _18 = gimple_location_safe (_17);
  warning_at (_18, 0, "use location");
  find_path_constraint = find_path_constraint + 1;

  <bb 13> :
  _19 = symbolicinfotmp->cond_falsebranch;
  if (bb == _19)
    goto <bb 15>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  _20 = symbolicinfotmp->cond_falsebranch;
  D.256765 = dominated_by_p (1, bb, _20);
  _21 = D.256765;
  if (_21 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  iftmp.1469 = 1;
  goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1469 = 0;

  <bb 17> :
  retval.1468 = iftmp.1469;
  if (retval.1468 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _22 = symbolicinfotmp->cond_stmt;
  gimple_location_safe (_22);
  retval.1470 = 1;
  if (retval.1470 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  _23 = symbolicinfotmp->cond_stmt;
  debug_gimple_stmt (_23);

  <bb 20> :
  _24 = symbolicinfotmp->cond_stmt;
  _25 = gimple_location_safe (_24);
  warning_at (_25, 0, "use location");
  find_path_constraint = find_path_constraint + 1;

  <bb 21> :
  pop_cfun ();

  <bb 22> :
  o = o + 1;

  <bb 23> :
  _26 = (long unsigned int) o;
  _27 = std::vector<basic_block_def*>::size (&symbolicExecution);
  retval.1471 = _26 < _27;
  if (retval.1471 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  if (find_path_constraint == 0)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  stderr.1472_28 = stderr;
  __builtin_fwrite ("=======================NO find Path Constaint===========================\n\n", 1, 74, stderr.1472_28);
  goto <bb 27>; [INV]

  <bb 26> :
  stderr.1473_29 = stderr;
  fprintf (stderr.1473_29, "=======================Path Constaint=====%d======================\n\n", find_path_constraint);

  <bb 27> :
  stderr.1474_30 = stderr;
  __builtin_fwrite ("=======================Path Constaint===========================\n\n", 1, 66, stderr.1474_30);

  <bb 28> :
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::get (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7788, decl_uid=196588, cgraph_uid=4420, symbol_order=5206)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct symbolicinfo * hash_map<basic_block_def*, symbolicinfo>::get (struct hash_map * const this, struct basic_block_def * const & k)
{
  bool D.256774;
  struct hash_entry & D.256773;
  unsigned int D.256772;
  struct hash_entry & e;
  struct symbolicinfo * iftmp.1475;
  struct symbolicinfo * D.256766;

  <bb 2> :
  _1 = &this->m_table;
  D.256772 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::hash (k);
  _2 = D.256772;
  D.256773 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.256773;
  D.256774 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (e);
  _3 = D.256774;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.1475 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1475 = &e->m_value;

  <bb 5> :
  D.256766 = iftmp.1475;

  <bb 6> :
<L3>:
  return D.256766;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE4hashERKS2_, funcdef_no=8749, decl_uid=196544, cgraph_uid=5381, symbol_order=6171)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::hash (struct basic_block_def * const & h)
{
  hashval_t D.256775;

  <bb 2> :
  D.256775 = pointer_hash<basic_block_def>::hash (h);

  <bb 3> :
<L0>:
  return D.256775;

}



;; Function pointer_hash<basic_block_def>::hash (_ZN12pointer_hashI15basic_block_defE4hashERKPS0_, funcdef_no=9598, decl_uid=196501, cgraph_uid=6230, symbol_order=7020)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t pointer_hash<basic_block_def>::hash (struct basic_block_def * const & candidate)
{
  hashval_t D.256777;

  <bb 2> :
  _1 = *candidate;
  _2 = (long int) _1;
  _3 = _2 >> 3;
  D.256777 = (hashval_t) _3;

  <bb 3> :
<L0>:
  return D.256777;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8750, decl_uid=196731, cgraph_uid=5382, symbol_order=6172)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, struct basic_block_def * const & comparable, hashval_t hash)
{
  bool D.256811;
  bool D.256810;
  bool D.256809;
  bool D.256808;
  bool D.256807;
  bool D.256806;
  struct value_type * D.256805;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.1479;
  bool retval.1478;
  struct value_type & D.256791;
  bool iftmp.1477;
  bool retval.1476;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 168;
  entry = _5 + _7;
  D.256806 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.256806;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.256807 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.256807;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.256808 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (entry, comparable);
  _11 = D.256808;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1477 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1477 = 0;

  <bb 8> :
  retval.1476 = iftmp.1477;
  if (retval.1476 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.256791 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 168;
  entry = _17 + _19;
  D.256809 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.256809;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.256810 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.256810;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.256811 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (entry, comparable);
  _23 = D.256811;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1479 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.1479 = 0;

  <bb 18> :
  retval.1478 = iftmp.1479;
  if (retval.1478 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.256791 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.256791;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8944, decl_uid=196827, cgraph_uid=5576, symbol_order=6366)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.256814;
  bool D.256812;

  <bb 2> :
  D.256814 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_empty (v);
  D.256812 = D.256814;

  <bb 3> :
<L0>:
  return D.256812;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_empty (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8827, decl_uid=196657, cgraph_uid=5459, symbol_order=6249)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.256817;
  bool D.256815;

  <bb 2> :
  D.256817 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (e);
  D.256815 = D.256817;

  <bb 3> :
<L0>:
  return D.256815;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8945, decl_uid=196825, cgraph_uid=5577, symbol_order=6367)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.256820;
  bool D.256818;

  <bb 2> :
  D.256820 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_deleted (v);
  D.256818 = D.256820;

  <bb 3> :
<L0>:
  return D.256818;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_deleted (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9797, decl_uid=196652, cgraph_uid=6429, symbol_order=7219)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.256823;
  bool D.256821;

  <bb 2> :
  D.256823 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_deleted<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (e);
  D.256821 = D.256823;

  <bb 3> :
<L0>:
  return D.256821;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_deleted<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10363, decl_uid=239648, cgraph_uid=6995, symbol_order=7789)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_deleted<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (const struct hash_entry & entry)
{
  bool D.256824;

  <bb 2> :
  _1 = entry->m_key;
  D.256824 = pointer_hash<basic_block_def>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.256824;

}



;; Function pointer_hash<basic_block_def>::is_deleted (_ZN12pointer_hashI15basic_block_defE10is_deletedEPS0_, funcdef_no=10785, decl_uid=196511, cgraph_uid=7417, symbol_order=8211)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<basic_block_def>::is_deleted (struct basic_block_def * e)
{
  bool D.256826;

  <bb 2> :
  D.256826 = e == 1B;

  <bb 3> :
<L0>:
  return D.256826;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9600, decl_uid=196645, cgraph_uid=6232, symbol_order=7022)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (const struct hash_entry & a, struct basic_block_def * const & b)
{
  bool D.256830;
  bool D.256828;

  <bb 2> :
  _1 = &a->m_key;
  D.256830 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::equal_keys (_1, b);
  D.256828 = D.256830;

  <bb 3> :
<L0>:
  return D.256828;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE10equal_keysERKS2_S7_, funcdef_no=10216, decl_uid=196546, cgraph_uid=6848, symbol_order=7642)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::equal_keys (struct basic_block_def * const & k1, struct basic_block_def * const & k2)
{
  bool D.256831;

  <bb 2> :
  D.256831 = pointer_hash<basic_block_def>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.256831;

}



;; Function pointer_hash<basic_block_def>::equal (_ZN12pointer_hashI15basic_block_defE5equalERKPS0_S4_, funcdef_no=10686, decl_uid=196503, cgraph_uid=7318, symbol_order=8112)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<basic_block_def>::equal (struct basic_block_def * const & existing, struct basic_block_def * const & candidate)
{
  bool D.256833;

  <bb 2> :
  _1 = *existing;
  _2 = *candidate;
  D.256833 = _1 == _2;

  <bb 3> :
<L0>:
  return D.256833;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8751, decl_uid=215728, cgraph_uid=5383, symbol_order=6173)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (const struct hash_entry & entry)
{
  bool D.256835;

  <bb 2> :
  _1 = entry->m_key;
  D.256835 = pointer_hash<basic_block_def>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.256835;

}



;; Function pointer_hash<basic_block_def>::is_empty (_ZN12pointer_hashI15basic_block_defE8is_emptyEPS0_, funcdef_no=9601, decl_uid=196513, cgraph_uid=6233, symbol_order=7023)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<basic_block_def>::is_empty (struct basic_block_def * e)
{
  bool D.256837;

  <bb 2> :
  D.256837 = e == 0B;

  <bb 3> :
<L0>:
  return D.256837;

}



;; Function checkPointerConstraint (_Z22checkPointerConstraintP9tree_nodeP3ptbP12gimple_arrayS0_i, funcdef_no=6787, decl_uid=186995, cgraph_uid=3441, symbol_order=4219)

Removing basic block 57
Removing basic block 58
Removing basic block 59
Removing basic block 68
Removing basic block 69
Removing basic block 82
Removing basic block 83
Removing basic block 84
Removing basic block 85
Removing basic block 86
Removing basic block 112
Removing basic block 118
Removing basic block 141
Removing basic block 150
Removing basic block 174
Removing basic block 175
Removing basic block 176
Removing basic block 192
Removing basic block 193
Removing basic block 203
Removing basic block 210
Removing basic block 211
Removing basic block 224
Removing basic block 225
Removing basic block 241
Removing basic block 242
Removing basic block 243
Removing basic block 244
Removing basic block 245
Removing basic block 246
Removing basic block 253
Removing basic block 289
Removing basic block 290
Removing basic block 295
Removing basic block 296
Removing basic block 297
Removing basic block 303
Removing basic block 340
Removing basic block 349
Removing basic block 364
Removing basic block 367
Removing basic block 370
Removing basic block 377
Removing basic block 383
Removing basic block 389
Removing basic block 398
Removing basic block 400
Removing basic block 401
Removing basic block 404
Removing basic block 418
Removing basic block 437
Removing basic block 438
Removing basic block 458
Removing basic block 474
Removing basic block 477
Removing basic block 486
Removing basic block 489
Removing basic block 490
Removing basic block 491
Removing basic block 501
Removing basic block 502
Removing basic block 517
Removing basic block 518
Removing basic block 526
Removing basic block 530
Removing basic block 531
Removing basic block 536
Removing basic block 546
Removing basic block 554
Removing basic block 555
Removing basic block 557
Removing basic block 558
Removing basic block 559
Removing basic block 583
Removing basic block 584
Removing basic block 601
Removing basic block 603
Removing basic block 609
Removing basic block 610
Removing basic block 611
Removing basic block 632
Removing basic block 634
Removing basic block 658
Removing basic block 667
Removing basic block 668
Removing basic block 689
Removing basic block 707
Removing basic block 711
Removing basic block 712
Removing basic block 713
Removing basic block 721
Removing basic block 722
Removing basic block 727
Removing basic block 728
Removing basic block 736
Removing basic block 753
Removing basic block 756
Removing basic block 757
Removing basic block 758
Removing basic block 766
Removing basic block 778
Removing basic block 782
Removing basic block 786
Removing basic block 796
Removing basic block 799
Removing basic block 801
Removing basic block 812
Removing basic block 817
Removing basic block 820
Removing basic block 825
Removing basic block 831
Removing basic block 839
Removing basic block 841
Removing basic block 850
Removing basic block 856
Removing basic block 859
Removing basic block 865
Removing basic block 866
Removing basic block 871
Merging blocks 872 and 874
Merging blocks 873 and 959
Removing basic block 875
Removing basic block 892
Removing basic block 893
Removing basic block 938
Removing basic block 939
Removing basic block 950
Removing basic block 951
Removing basic block 952
Removing basic block 957
;; 21 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 3
;;  header 834, latch 833
;;  depth 1, outer 0
;;  nodes: 834 833 831 832 830 829 754 751 39 750 749 716 720 728 731 743 736 748 744 737 732 747 746 745 735 734 733 741 742 740 739 738 730 729 721 717 696 687 695 693 694 691 692 690 689 688 684 685 686 672 683 680 677 676 675 674 673 679 678 682 681 670 671 96 95 82 94 91 93 92 89 88 87 86 85 84 83 90 40 81 78 80 79 41 42 77 58 65 64 69 75 67 63 76 66 62 61 60 59 74 73 72 71 70 68 57 44 49 48 53 51 56 50 55 54 52 47 46 45 43 36 35 34 33 32 31 30 669 584 668 667 587 666 591 665 663 664 662 661 592 660 595 603 623 630 634 659 597 637 636 635 606 633 631 624 629 628 627 626 625 609 622 610 611 621 613 620 619 614 618 616 617 615 612 608 607 632 605 604 598 602 601 600 599 596 657 658 656 655 654 653 652 651 650 649 648 647 646 645 644 643 642 640 641 639 638 594 593 589 590 588 586 585 553 560 559 562 583 582 566 581 568 580 579 578 577 575 576 573 569 572 571 570 574 567 565 564 563 561 558 557 556 555 554 533 552 534 536 551 540 550 549 548 547 546 545 544 543 542 541 539 538 537 535 531 532 494 497 495 496 493 113 492 490 491 489 487 488 216 378 377 376 375 374 373 372 371 370 369 367 356 366 364 365 363 362 361 360 359 358 357 354 355 346 353 348 352 351 350 349 347 345 262 344 269 268 267 263 266 265 264 334 343 313 312 311 306 310 309 308 307 305 304 303 287 302 301 300 299 298 297 296 295 294 292 293 289 291 290 288 286 285 284 283 282 281 280 279 278 277 276 275 274 273 272 271 270 342 341 340 335 339 338 337 336 329 333 332 331 330 316 315 314 327 328 321 326 324 325 323 322 320 319 318 317 218 217 190 204 191 194 201 200 207 196 192 195 206 205 199 198 197 193 203 202 184 189 186 185 188 187 114 183 182 118 181 180 179 120 178 177 176 121 175 133 174 139 144 142 143 141 140 137 138 134 136 135 173 172 145 171 159 160 161 170 148 150 149 147 146 169 168 167 166 165 164 163 162 158 157 156 155 154 153 152 151 131 132 130 129 123 128 125 124 127 126 122 119 117 116 115 215 214 213 212 211 210 209 208 261 395 392 227 223 486 408 465 469 470 472 410 467 471 485 484 478 477 476 475 474 473 483 482 481 480 479 466 409 398 397 396 468 462 464 461 460 458 459 457 456 447 455 453 452 451 450 449 448 454 445 446 442 444 443 433 441 439 437 438 435 436 434 440 425 431 427 432 430 429 428 426 424 423 417 422 420 419 418 421 416 415 414 413 412 411 463 407 405 406 403 402 401 400 399 404 219 222 221 220 226 225 224 390 391 387 389 388 368 386 385 384 383 382 381 380 379 394 393 260 259 258 245 257 252 250 251 247 249 248 246 256 255 254 253 244 243 242 241 240 239 238 237 236 235 234 233 232 231 230 229 228 111 112 110 109 108 106 107 105 101 104 103 102 100 99 98 97 529 530 528 514 527 516 526 524 525 523 522 521 520 519 518 517 515 513 503 512 511 505 510 506 509 508 507 504 502 501 500 499 498 726 727 725 724 723 722 719 718 705 711 712 715 714 713 706 702 701 700 697 699 698 709 710 708 707 704 703 38 37 755 828 756 827 826 757 825 771 824 786 814 804 790 789 788 787 803 802 793 801 799 800 798 797 796 795 794 792 791 813 812 811 810 809 808 807 806 805 784 785 780 782 781 779 777 778 773 775 774 772 776 783 823 822 821 820 819 818 817 816 815 760 770 769 768 767 766 765 764 763 762 761 759 758 753 752
;;
;; Loop 18
;;  header 828, latch 827
;;  depth 2, outer 3
;;  nodes: 828 827 826 757 825 771 824 786 814 804 790 789 788 787 803 802 793 801 799 800 798 797 796 795 794 792 791 813 812 811 810 809 808 807 806 805 784 785 780 782 781 779 777 778 773 775 774 772 776 783 823 822 821 820 819 818 817 816 815 760 770 769 768 767 766 765 764 763 762 761 759 758
;;
;; Loop 19
;;  header 826, latch 825
;;  depth 3, outer 18
;;  nodes: 826 825 771 824 786 814 804 790 789 788 787 803 802 793 801 799 800 798 797 796 795 794 792 791 813 812 811 810 809 808 807 806 805 784 785 780 782 781 779 777 778 773 775 774 772 776 783 823 822 821 820 819 818 817 816 815 760 770 769 768 767 766 765 764 763 762 761 759 758
;;
;; Loop 20
;;  header 802, latch 801
;;  depth 4, outer 19
;;  nodes: 802 801 799 800 798 797 796 795 794 803
;;
;; Loop 10
;;  header 700, latch 699
;;  depth 2, outer 3
;;  nodes: 700 699 698
;;
;; Loop 9
;;  header 666, latch 665
;;  depth 2, outer 3
;;  nodes: 666 665 663 664 662 661 592 660 595 603 623 630 634 659 597 637 636 635 606 633 631 624 629 628 627 626 625 609 622 610 611 621 613 620 619 614 618 616 617 615 612 608 607 632 605 604 598 602 601 600 599 596 657 658 656 655 654 653 652 651 650 649 648 647 646 645 644 643 642 640 641 639 638 594 593
;;
;; Loop 11
;;  header 661, latch 660
;;  depth 3, outer 9
;;  nodes: 661 660 595 603 623 630 634 659 597 637 636 635 606 633 631 624 629 628 627 626 625 609 622 610 611 621 613 620 619 614 618 616 617 615 612 608 607 632 605 604 598 602 601 600 599 596 657 658 656 655 654 653 652 651 650 649 648 647 646 645 644 643 642 640 641 639 638 594 593
;;
;; Loop 12
;;  header 619, latch 618
;;  depth 4, outer 11
;;  nodes: 619 618 616 617 615 620
;;
;; Loop 8
;;  header 582, latch 581
;;  depth 2, outer 3
;;  nodes: 582 581 568 580 579 578 577 575 576 573 569 572 571 570 574 567
;;
;; Loop 7
;;  header 551, latch 550
;;  depth 2, outer 3
;;  nodes: 551 550 549 548 547 546 545 544 543 542 541
;;
;; Loop 6
;;  header 528, latch 527
;;  depth 2, outer 3
;;  nodes: 528 527 516 526 524 525 523 522 521 520 519 518 517 515
;;
;; Loop 5
;;  header 513, latch 512
;;  depth 2, outer 3
;;  nodes: 513 512 511 505 510 506 509 508 507 504
;;
;; Loop 13
;;  header 511, latch 510
;;  depth 3, outer 5
;;  nodes: 511 510 506 509 508 507
;;
;; Loop 4
;;  header 493, latch 492
;;  depth 2, outer 3
;;  nodes
;;
;; Loop 14
;;  header 182, latch 181
;;  depth 3, outer 4
;;  nodes: 182 181 180 179 120 178 177 176 121 175 133 174 139 144 142 143 141 140 137 138 134 136 135 173 172 145 171 159 160 161 170 148 150 149 147 146 169 168 167 166 165 164 163 162 158 157 156 155 154 153 152 151 131 132 130 129 123 128 125 124 127 126 122 119
;;
;; Loop 15
;;  header 179, latch 178
;;  depth 4, outer 14
;;  nodes: 179 178 177 176 121 175 133 174 139 144 142 143 141 140 137 138 134 136 135 173 172 145 171 159 160 161 170 148 150 149 147 146 169 168 167 166 165 164 163 162 158 157 156 155 154 153 152 151 131 132 130 129 123 128 125 124 127 126 122 180
;;
;; Loop 16
;;  header 176, latch 175
;;  depth 5, outer 15
;;  nodes: 176 175 133 174 139 144 142 143 141 140 137 138 134 136 135 173 172 145 171 159 160 161 170 148 150 149 147 146 169 168 167 166 165 164 163 162 158 157 156 155 154 153 152 151 131 132 130 129 123 128 125 124 127 126 122 177
;;
;; Loop 17
;;  header 172, latch 171
;;  depth 6, outer 16
;;  nodes: 172 171 159 160 161 170 148 150 149 147 146 173 169 168 167 166 165 164 163 162 158 157 156 155 154 153 152 151
;;
;; Loop 2
;;  header 21, latch 20
;;  depth 1, outer 0
;;  nodes: 21 20 15 19 18 17 16
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 864 6 }
;; 6 succs { 864 7 }
;; 7 succs { 8 24 }
;; 8 succs { 9 24 }
;; 9 succs { 837 10 }
;; 10 succs { 837 11 }
;; 11 succs { 837 12 }
;; 12 succs { 837 13 }
;; 13 succs { 837 14 }
;; 14 succs { 21 }
;; 15 succs { 16 20 }
;; 16 succs { 836 17 }
;; 17 succs { 836 18 }
;; 18 succs { 836 19 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { 15 22 }
;; 22 succs { 836 23 }
;; 23 succs { 24 }
;; 24 succs { 864 25 }
;; 25 succs { 864 26 }
;; 26 succs { 27 28 }
;; 27 succs { 29 }
;; 28 succs { 29 }
;; 29 succs { 834 }
;; 30 succs { 862 31 }
;; 31 succs { 32 755 }
;; 32 succs { 33 755 }
;; 33 succs { 860 34 }
;; 34 succs { 860 35 }
;; 35 succs { 37 36 }
;; 36 succs { 37 40 }
;; 37 succs { 860 38 }
;; 38 succs { 860 39 }
;; 39 succs { 751 }
;; 40 succs { 41 82 }
;; 41 succs { 42 79 }
;; 42 succs { 43 79 }
;; 43 succs { 860 44 }
;; 44 succs { 45 57 }
;; 45 succs { 860 46 }
;; 46 succs { 47 49 }
;; 47 succs { 860 48 }
;; 48 succs { 57 }
;; 49 succs { 50 57 }
;; 50 succs { 51 57 }
;; 51 succs { 52 57 }
;; 52 succs { 860 53 }
;; 53 succs { 54 57 }
;; 54 succs { 860 55 }
;; 55 succs { 860 56 }
;; 56 succs { 57 }
;; 57 succs { 860 58 }
;; 58 succs { 59 77 }
;; 59 succs { 60 65 }
;; 60 succs { 860 61 }
;; 61 succs { 860 62 }
;; 62 succs { 860 63 }
;; 63 succs { 64 77 }
;; 64 succs { 860 77 }
;; 65 succs { 66 77 }
;; 66 succs { 67 77 }
;; 67 succs { 68 77 }
;; 68 succs { 860 69 }
;; 69 succs { 70 77 }
;; 70 succs { 860 71 }
;; 71 succs { 860 72 }
;; 72 succs { 860 73 }
;; 73 succs { 860 74 }
;; 74 succs { 860 75 }
;; 75 succs { 76 77 }
;; 76 succs { 860 77 }
;; 77 succs { 860 78 }
;; 78 succs { 81 }
;; 79 succs { 860 80 }
;; 80 succs { 860 81 }
;; 81 succs { 82 }
;; 82 succs { 83 95 }
;; 83 succs { 90 84 }
;; 84 succs { 90 85 }
;; 85 succs { 90 86 }
;; 86 succs { 90 87 }
;; 87 succs { 90 88 }
;; 88 succs { 90 89 }
;; 89 succs { 90 92 }
;; 90 succs { 860 91 }
;; 91 succs { 94 }
;; 92 succs { 860 93 }
;; 93 succs { 860 94 }
;; 94 succs { 95 }
;; 95 succs { 860 96 }
;; 96 succs { 97 671 }
;; 97 succs { 856 98 }
;; 98 succs { 839 99 }
;; 99 succs { 854 100 }
;; 100 succs { 101 102 }
;; 101 succs { 854 105 }
;; 102 succs { 854 103 }
;; 103 succs { 854 104 }
;; 104 succs { 854 105 }
;; 105 succs { 106 107 }
;; 106 succs { 854 108 }
;; 107 succs { 854 108 }
;; 108 succs { 854 109 }
;; 109 succs { 110 532 }
;; 110 succs { 111 112 }
;; 111 succs { 113 }
;; 112 succs { 113 }
;; 113 succs { 493 }
;; 114 succs { 115 184 }
;; 115 succs { 843 116 }
;; 116 succs { 843 117 }
;; 117 succs { 843 118 }
;; 118 succs { 182 }
;; 119 succs { 843 120 }
;; 120 succs { 179 }
;; 121 succs { 176 }
;; 122 succs { 841 123 }
;; 123 succs { 124 129 }
;; 124 succs { 841 125 }
;; 125 succs { 126 129 }
;; 126 succs { 841 127 }
;; 127 succs { 841 128 }
;; 128 succs { 129 }
;; 129 succs { 131 130 }
;; 130 succs { 131 132 }
;; 131 succs { 133 }
;; 132 succs { 133 }
;; 133 succs { 134 175 }
;; 134 succs { 135 137 }
;; 135 succs { 136 137 }
;; 136 succs { 137 }
;; 137 succs { 138 139 }
;; 138 succs { 139 }
;; 139 succs { 140 175 }
;; 140 succs { 142 141 }
;; 141 succs { 142 143 }
;; 142 succs { 144 }
;; 143 succs { 144 }
;; 144 succs { 145 175 }
;; 145 succs { 172 }
;; 146 succs { 147 160 }
;; 147 succs { 840 148 }
;; 148 succs { 149 171 }
;; 149 succs { 840 150 }
;; 150 succs { 151 171 }
;; 151 succs { 840 152 }
;; 152 succs { 840 153 }
;; 153 succs { 840 154 }
;; 154 succs { 840 155 }
;; 155 succs { 840 156 }
;; 156 succs { 840 157 }
;; 157 succs { 840 158 }
;; 158 succs { 840 159 }
;; 159 succs { 840 171 }
;; 160 succs { 161 171 }
;; 161 succs { 162 171 }
;; 162 succs { 840 163 }
;; 163 succs { 840 164 }
;; 164 succs { 840 165 }
;; 165 succs { 840 166 }
;; 166 succs { 840 167 }
;; 167 succs { 840 168 }
;; 168 succs { 840 169 }
;; 169 succs { 840 170 }
;; 170 succs { 171 }
;; 171 succs { 840 172 }
;; 172 succs { 840 173 }
;; 173 succs { 146 174 }
;; 174 succs { 175 }
;; 175 succs { 841 176 }
;; 176 succs { 841 177 }
;; 177 succs { 122 178 }
;; 178 succs { 179 }
;; 179 succs { 843 180 }
;; 180 succs { 121 181 }
;; 181 succs { 182 }
;; 182 succs { 119 183 }
;; 183 succs { 843 184 }
;; 184 succs { 185 190 }
;; 185 succs { 843 186 }
;; 186 succs { 187 190 }
;; 187 succs { 843 188 }
;; 188 succs { 843 189 }
;; 189 succs { 843 190 }
;; 190 succs { 191 217 }
;; 191 succs { 192 217 }
;; 192 succs { 193 217 }
;; 193 succs { 843 194 }
;; 194 succs { 195 217 }
;; 195 succs { 843 196 }
;; 196 succs { 197 217 }
;; 197 succs { 843 198 }
;; 198 succs { 843 199 }
;; 199 succs { 200 202 }
;; 200 succs { 201 217 }
;; 201 succs { 843 217 }
;; 202 succs { 843 203 }
;; 203 succs { 843 204 }
;; 204 succs { 205 217 }
;; 205 succs { 843 206 }
;; 206 succs { 843 207 }
;; 207 succs { 208 217 }
;; 208 succs { 843 209 }
;; 209 succs { 843 210 }
;; 210 succs { 843 211 }
;; 211 succs { 843 212 }
;; 212 succs { 843 213 }
;; 213 succs { 843 214 }
;; 214 succs { 843 215 }
;; 215 succs { 843 216 }
;; 216 succs { 488 }
;; 217 succs { 218 487 }
;; 218 succs { 219 262 }
;; 219 succs { 220 223 }
;; 220 succs { 843 221 }
;; 221 succs { 843 222 }
;; 222 succs { 843 223 }
;; 223 succs { 224 487 }
;; 224 succs { 843 225 }
;; 225 succs { 843 226 }
;; 226 succs { 843 227 }
;; 227 succs { 228 487 }
;; 228 succs { 843 229 }
;; 229 succs { 843 230 }
;; 230 succs { 843 231 }
;; 231 succs { 843 232 }
;; 232 succs { 843 233 }
;; 233 succs { 843 234 }
;; 234 succs { 843 235 }
;; 235 succs { 843 236 }
;; 236 succs { 843 237 }
;; 237 succs { 843 238 }
;; 238 succs { 843 239 }
;; 239 succs { 843 240 }
;; 240 succs { 843 241 }
;; 241 succs { 843 242 }
;; 242 succs { 843 243 }
;; 243 succs { 843 244 }
;; 244 succs { 843 245 }
;; 245 succs { 246 258 }
;; 246 succs { 843 247 }
;; 247 succs { 248 251 }
;; 248 succs { 843 249 }
;; 249 succs { 250 251 }
;; 250 succs { 252 }
;; 251 succs { 252 }
;; 252 succs { 253 258 }
;; 253 succs { 843 254 }
;; 254 succs { 843 255 }
;; 255 succs { 843 256 }
;; 256 succs { 843 257 }
;; 257 succs { 843 258 }
;; 258 succs { 843 259 }
;; 259 succs { 843 260 }
;; 260 succs { 843 261 }
;; 261 succs { 843 487 }
;; 262 succs { 263 345 }
;; 263 succs { 264 267 }
;; 264 succs { 843 265 }
;; 265 succs { 843 266 }
;; 266 succs { 843 267 }
;; 267 succs { 843 268 }
;; 268 succs { 843 269 }
;; 269 succs { 270 345 }
;; 270 succs { 842 271 }
;; 271 succs { 842 272 }
;; 272 succs { 842 273 }
;; 273 succs { 842 274 }
;; 274 succs { 842 275 }
;; 275 succs { 842 276 }
;; 276 succs { 842 277 }
;; 277 succs { 842 278 }
;; 278 succs { 842 279 }
;; 279 succs { 842 280 }
;; 280 succs { 842 281 }
;; 281 succs { 842 282 }
;; 282 succs { 842 283 }
;; 283 succs { 842 284 }
;; 284 succs { 842 285 }
;; 285 succs { 842 286 }
;; 286 succs { 842 287 }
;; 287 succs { 288 303 }
;; 288 succs { 842 289 }
;; 289 succs { 290 293 }
;; 290 succs { 842 291 }
;; 291 succs { 292 293 }
;; 292 succs { 294 }
;; 293 succs { 294 }
;; 294 succs { 295 302 }
;; 295 succs { 842 296 }
;; 296 succs { 842 297 }
;; 297 succs { 842 298 }
;; 298 succs { 842 299 }
;; 299 succs { 842 300 }
;; 300 succs { 842 301 }
;; 301 succs { 303 }
;; 302 succs { 303 }
;; 303 succs { 842 304 }
;; 304 succs { 842 305 }
;; 305 succs { 306 335 }
;; 306 succs { 307 311 }
;; 307 succs { 842 308 }
;; 308 succs { 842 309 }
;; 309 succs { 842 310 }
;; 310 succs { 842 311 }
;; 311 succs { 842 312 }
;; 312 succs { 842 313 }
;; 313 succs { 314 344 }
;; 314 succs { 317 315 }
;; 315 succs { 317 316 }
;; 316 succs { 317 330 }
;; 317 succs { 842 318 }
;; 318 succs { 842 319 }
;; 319 succs { 842 320 }
;; 320 succs { 842 321 }
;; 321 succs { 322 327 }
;; 322 succs { 842 323 }
;; 323 succs { 324 325 }
;; 324 succs { 842 326 }
;; 325 succs { 842 326 }
;; 326 succs { 842 327 }
;; 327 succs { 328 329 }
;; 328 succs { 842 329 }
;; 329 succs { 334 }
;; 330 succs { 842 331 }
;; 331 succs { 842 332 }
;; 332 succs { 842 333 }
;; 333 succs { 842 334 }
;; 334 succs { 344 }
;; 335 succs { 336 340 }
;; 336 succs { 842 337 }
;; 337 succs { 842 338 }
;; 338 succs { 842 339 }
;; 339 succs { 842 340 }
;; 340 succs { 842 341 }
;; 341 succs { 842 342 }
;; 342 succs { 842 343 }
;; 343 succs { 842 344 }
;; 344 succs { 345 }
;; 345 succs { 346 487 }
;; 346 succs { 347 354 }
;; 347 succs { 843 348 }
;; 348 succs { 349 354 }
;; 349 succs { 843 350 }
;; 350 succs { 843 351 }
;; 351 succs { 352 353 }
;; 352 succs { 843 354 }
;; 353 succs { 843 354 }
;; 354 succs { 355 356 }
;; 355 succs { 843 356 }
;; 356 succs { 357 367 }
;; 357 succs { 364 358 }
;; 358 succs { 364 359 }
;; 359 succs { 364 360 }
;; 360 succs { 364 361 }
;; 361 succs { 364 362 }
;; 362 succs { 364 363 }
;; 363 succs { 364 365 }
;; 364 succs { 366 }
;; 365 succs { 366 }
;; 366 succs { 367 }
;; 367 succs { 368 369 }
;; 368 succs { 843 387 }
;; 369 succs { 370 387 }
;; 370 succs { 371 387 }
;; 371 succs { 372 387 }
;; 372 succs { 843 373 }
;; 373 succs { 374 379 }
;; 374 succs { 843 375 }
;; 375 succs { 843 376 }
;; 376 succs { 843 377 }
;; 377 succs { 843 378 }
;; 378 succs { 488 }
;; 379 succs { 843 380 }
;; 380 succs { 843 381 }
;; 381 succs { 843 382 }
;; 382 succs { 843 383 }
;; 383 succs { 843 384 }
;; 384 succs { 843 385 }
;; 385 succs { 843 386 }
;; 386 succs { 843 387 }
;; 387 succs { 388 391 }
;; 388 succs { 390 389 }
;; 389 succs { 390 391 }
;; 390 succs { 392 }
;; 391 succs { 392 }
;; 392 succs { 393 487 }
;; 393 succs { 843 394 }
;; 394 succs { 843 395 }
;; 395 succs { 396 487 }
;; 396 succs { 399 397 }
;; 397 succs { 399 398 }
;; 398 succs { 399 409 }
;; 399 succs { 843 400 }
;; 400 succs { 843 401 }
;; 401 succs { 843 402 }
;; 402 succs { 843 403 }
;; 403 succs { 404 406 }
;; 404 succs { 843 405 }
;; 405 succs { 843 407 }
;; 406 succs { 843 407 }
;; 407 succs { 843 408 }
;; 408 succs { 486 }
;; 409 succs { 410 466 }
;; 410 succs { 411 486 }
;; 411 succs { 843 412 }
;; 412 succs { 843 413 }
;; 413 succs { 843 414 }
;; 414 succs { 843 415 }
;; 415 succs { 843 416 }
;; 416 succs { 843 417 }
;; 417 succs { 418 423 }
;; 418 succs { 419 421 }
;; 419 succs { 843 420 }
;; 420 succs { 843 423 }
;; 421 succs { 843 422 }
;; 422 succs { 843 423 }
;; 423 succs { 843 424 }
;; 424 succs { 843 425 }
;; 425 succs { 426 433 }
;; 426 succs { 843 427 }
;; 427 succs { 428 433 }
;; 428 succs { 843 429 }
;; 429 succs { 430 431 }
;; 430 succs { 843 433 }
;; 431 succs { 432 433 }
;; 432 succs { 843 433 }
;; 433 succs { 434 442 }
;; 434 succs { 843 435 }
;; 435 succs { 436 438 }
;; 436 succs { 437 438 }
;; 437 succs { 439 }
;; 438 succs { 439 }
;; 439 succs { 440 442 }
;; 440 succs { 843 441 }
;; 441 succs { 843 442 }
;; 442 succs { 443 446 }
;; 443 succs { 843 444 }
;; 444 succs { 445 446 }
;; 445 succs { 447 }
;; 446 succs { 447 }
;; 447 succs { 448 456 }
;; 448 succs { 843 449 }
;; 449 succs { 843 450 }
;; 450 succs { 843 451 }
;; 451 succs { 843 452 }
;; 452 succs { 843 453 }
;; 453 succs { 454 456 }
;; 454 succs { 843 455 }
;; 455 succs { 843 456 }
;; 456 succs { 457 463 }
;; 457 succs { 458 459 }
;; 458 succs { 460 }
;; 459 succs { 460 }
;; 460 succs { 843 461 }
;; 461 succs { 462 465 }
;; 462 succs { 465 }
;; 463 succs { 843 464 }
;; 464 succs { 465 }
;; 465 succs { 843 486 }
;; 466 succs { 467 470 }
;; 467 succs { 468 486 }
;; 468 succs { 843 469 }
;; 469 succs { 486 }
;; 470 succs { 471 486 }
;; 471 succs { 486 472 }
;; 472 succs { 486 473 }
;; 473 succs { 486 474 }
;; 474 succs { 486 475 }
;; 475 succs { 486 476 }
;; 476 succs { 486 477 }
;; 477 succs { 486 478 }
;; 478 succs { 486 479 }
;; 479 succs { 843 480 }
;; 480 succs { 843 481 }
;; 481 succs { 843 482 }
;; 482 succs { 843 483 }
;; 483 succs { 843 484 }
;; 484 succs { 485 486 }
;; 485 succs { 843 486 }
;; 486 succs { 487 }
;; 487 succs { 489 }
;; 488 succs { 489 }
;; 489 succs { 490 491 }
;; 490 succs { 492 }
;; 491 succs { 492 }
;; 492 succs { 493 }
;; 493 succs { 114 494 }
;; 494 succs { 495 533 }
;; 495 succs { 496 533 }
;; 496 succs { 854 497 }
;; 497 succs { 498 533 }
;; 498 succs { 845 499 }
;; 499 succs { 845 500 }
;; 500 succs { 845 501 }
;; 501 succs { 845 502 }
;; 502 succs { 844 503 }
;; 503 succs { 513 }
;; 504 succs { 845 505 }
;; 505 succs { 511 }
;; 506 succs { 507 510 }
;; 507 succs { 845 508 }
;; 508 succs { 509 510 }
;; 509 succs { 845 510 }
;; 510 succs { 511 }
;; 511 succs { 506 512 }
;; 512 succs { 513 }
;; 513 succs { 504 514 }
;; 514 succs { 528 }
;; 515 succs { 845 516 }
;; 516 succs { 517 527 }
;; 517 succs { 845 518 }
;; 518 succs { 845 519 }
;; 519 succs { 845 520 }
;; 520 succs { 845 521 }
;; 521 succs { 845 522 }
;; 522 succs { 845 523 }
;; 523 succs { 845 524 }
;; 524 succs { 525 526 }
;; 525 succs { 845 526 }
;; 526 succs { 845 527 }
;; 527 succs { 528 }
;; 528 succs { 515 529 }
;; 529 succs { 530 531 }
;; 530 succs { 531 }
;; 531 succs { 533 }
;; 532 succs { 533 }
;; 533 succs { 534 553 }
;; 534 succs { 535 553 }
;; 535 succs { 846 536 }
;; 536 succs { 537 552 }
;; 537 succs { 846 538 }
;; 538 succs { 846 539 }
;; 539 succs { 846 540 }
;; 540 succs { 551 }
;; 541 succs { 846 542 }
;; 542 succs { 846 543 }
;; 543 succs { 846 544 }
;; 544 succs { 846 545 }
;; 545 succs { 846 546 }
;; 546 succs { 846 547 }
;; 547 succs { 846 548 }
;; 548 succs { 846 549 }
;; 549 succs { 846 550 }
;; 550 succs { 551 }
;; 551 succs { 541 552 }
;; 552 succs { 553 }
;; 553 succs { 554 584 }
;; 554 succs { 854 555 }
;; 555 succs { 854 556 }
;; 556 succs { 854 557 }
;; 557 succs { 854 558 }
;; 558 succs { 560 559 }
;; 559 succs { 560 584 }
;; 560 succs { 561 584 }
;; 561 succs { 854 562 }
;; 562 succs { 563 584 }
;; 563 succs { 852 564 }
;; 564 succs { 852 565 }
;; 565 succs { 851 566 }
;; 566 succs { 582 }
;; 567 succs { 850 568 }
;; 568 succs { 569 581 }
;; 569 succs { 570 573 }
;; 570 succs { 849 571 }
;; 571 succs { 849 572 }
;; 572 succs { 573 }
;; 573 succs { 574 576 }
;; 574 succs { 849 575 }
;; 575 succs { 849 577 }
;; 576 succs { 849 577 }
;; 577 succs { 849 578 }
;; 578 succs { 849 579 }
;; 579 succs { 849 580 }
;; 580 succs { 581 }
;; 581 succs { 582 }
;; 582 succs { 567 583 }
;; 583 succs { 584 }
;; 584 succs { 585 669 }
;; 585 succs { 853 586 }
;; 586 succs { 853 587 }
;; 587 succs { 588 667 }
;; 588 succs { 589 590 }
;; 589 succs { 591 }
;; 590 succs { 591 }
;; 591 succs { 666 }
;; 592 succs { 661 }
;; 593 succs { 853 594 }
;; 594 succs { 853 595 }
;; 595 succs { 596 660 }
;; 596 succs { 853 597 }
;; 597 succs { 598 660 }
;; 598 succs { 599 604 }
;; 599 succs { 853 600 }
;; 600 succs { 853 601 }
;; 601 succs { 853 602 }
;; 602 succs { 603 604 }
;; 603 succs { 660 }
;; 604 succs { 853 605 }
;; 605 succs { 853 606 }
;; 606 succs { 607 635 }
;; 607 succs { 853 608 }
;; 608 succs { 853 609 }
;; 609 succs { 610 624 }
;; 610 succs { 611 624 }
;; 611 succs { 612 624 }
;; 612 succs { 853 613 }
;; 613 succs { 614 621 }
;; 614 succs { 619 }
;; 615 succs { 853 616 }
;; 616 succs { 617 618 }
;; 617 succs { 618 }
;; 618 succs { 619 }
;; 619 succs { 853 620 }
;; 620 succs { 615 621 }
;; 621 succs { 853 622 }
;; 622 succs { 623 624 }
;; 623 succs { 660 }
;; 624 succs { 625 631 }
;; 625 succs { 853 626 }
;; 626 succs { 853 627 }
;; 627 succs { 853 628 }
;; 628 succs { 629 631 }
;; 629 succs { 630 631 }
;; 630 succs { 660 }
;; 631 succs { 632 635 }
;; 632 succs { 853 633 }
;; 633 succs { 634 635 }
;; 634 succs { 660 }
;; 635 succs { 853 636 }
;; 636 succs { 853 637 }
;; 637 succs { 638 660 }
;; 638 succs { 853 639 }
;; 639 succs { 853 640 }
;; 640 succs { 641 642 }
;; 641 succs { 853 642 }
;; 642 succs { 853 643 }
;; 643 succs { 853 644 }
;; 644 succs { 853 645 }
;; 645 succs { 853 646 }
;; 646 succs { 853 647 }
;; 647 succs { 853 648 }
;; 648 succs { 853 649 }
;; 649 succs { 853 650 }
;; 650 succs { 853 651 }
;; 651 succs { 853 652 }
;; 652 succs { 853 653 }
;; 653 succs { 853 654 }
;; 654 succs { 853 655 }
;; 655 succs { 853 656 }
;; 656 succs { 657 658 }
;; 657 succs { 853 659 }
;; 658 succs { 853 659 }
;; 659 succs { 853 660 }
;; 660 succs { 661 }
;; 661 succs { 593 662 }
;; 662 succs { 663 664 }
;; 663 succs { 665 }
;; 664 succs { 665 }
;; 665 succs { 666 }
;; 666 succs { 592 667 }
;; 667 succs { 853 668 }
;; 668 succs { 669 }
;; 669 succs { 854 670 }
;; 670 succs { 672 }
;; 671 succs { 672 }
;; 672 succs { 673 684 }
;; 673 succs { 674 681 }
;; 674 succs { 675 678 }
;; 675 succs { 859 676 }
;; 676 succs { 859 677 }
;; 677 succs { 859 684 }
;; 678 succs { 859 679 }
;; 679 succs { 859 680 }
;; 680 succs { 859 684 }
;; 681 succs { 859 682 }
;; 682 succs { 859 683 }
;; 683 succs { 859 684 }
;; 684 succs { 685 687 }
;; 685 succs { 686 687 }
;; 686 succs { 687 }
;; 687 succs { 688 696 }
;; 688 succs { 859 689 }
;; 689 succs { 859 690 }
;; 690 succs { 859 691 }
;; 691 succs { 692 693 }
;; 692 succs { 859 693 }
;; 693 succs { 694 695 }
;; 694 succs { 859 695 }
;; 695 succs { 859 696 }
;; 696 succs { 697 717 }
;; 697 succs { 700 }
;; 698 succs { 857 699 }
;; 699 succs { 700 }
;; 700 succs { 698 701 }
;; 701 succs { 857 702 }
;; 702 succs { 703 706 }
;; 703 succs { 857 704 }
;; 704 succs { 857 705 }
;; 705 succs { 857 716 }
;; 706 succs { 707 712 }
;; 707 succs { 857 708 }
;; 708 succs { 709 710 }
;; 709 succs { 857 711 }
;; 710 succs { 857 711 }
;; 711 succs { 857 716 }
;; 712 succs { 713 716 }
;; 713 succs { 857 714 }
;; 714 succs { 857 715 }
;; 715 succs { 857 716 }
;; 716 succs { 749 }
;; 717 succs { 718 721 }
;; 718 succs { 859 719 }
;; 719 succs { 859 720 }
;; 720 succs { 859 749 }
;; 721 succs { 722 729 }
;; 722 succs { 859 723 }
;; 723 succs { 859 724 }
;; 724 succs { 859 725 }
;; 725 succs { 859 726 }
;; 726 succs { 727 728 }
;; 727 succs { 859 728 }
;; 728 succs { 859 749 }
;; 729 succs { 859 730 }
;; 730 succs { 859 731 }
;; 731 succs { 732 749 }
;; 732 succs { 733 737 }
;; 733 succs { 859 734 }
;; 734 succs { 859 735 }
;; 735 succs { 859 736 }
;; 736 succs { 859 749 }
;; 737 succs { 738 744 }
;; 738 succs { 859 739 }
;; 739 succs { 859 740 }
;; 740 succs { 741 742 }
;; 741 succs { 859 743 }
;; 742 succs { 859 743 }
;; 743 succs { 859 749 }
;; 744 succs { 745 749 }
;; 745 succs { 859 746 }
;; 746 succs { 859 747 }
;; 747 succs { 859 748 }
;; 748 succs { 859 749 }
;; 749 succs { 859 750 }
;; 750 succs { 751 }
;; 751 succs { 754 752 }
;; 752 succs { 753 }
;; 753 succs { 755 }
;; 754 succs { 830 }
;; 755 succs { 756 829 }
;; 756 succs { 828 }
;; 757 succs { 826 }
;; 758 succs { 862 759 }
;; 759 succs { 862 760 }
;; 760 succs { 761 771 }
;; 761 succs { 862 762 }
;; 762 succs { 862 763 }
;; 763 succs { 862 764 }
;; 764 succs { 862 765 }
;; 765 succs { 862 766 }
;; 766 succs { 862 767 }
;; 767 succs { 862 768 }
;; 768 succs { 862 769 }
;; 769 succs { 770 771 }
;; 770 succs { 862 771 }
;; 771 succs { 772 825 }
;; 772 succs { 862 773 }
;; 773 succs { 774 778 }
;; 774 succs { 862 775 }
;; 775 succs { 776 778 }
;; 776 succs { 862 777 }
;; 777 succs { 779 }
;; 778 succs { 779 }
;; 779 succs { 862 780 }
;; 780 succs { 781 785 }
;; 781 succs { 862 782 }
;; 782 succs { 783 785 }
;; 783 succs { 862 784 }
;; 784 succs { 786 }
;; 785 succs { 786 }
;; 786 succs { 787 825 }
;; 787 succs { 862 788 }
;; 788 succs { 862 789 }
;; 789 succs { 862 790 }
;; 790 succs { 791 825 }
;; 791 succs { 862 792 }
;; 792 succs { 793 815 }
;; 793 succs { 802 }
;; 794 succs { 862 795 }
;; 795 succs { 862 796 }
;; 796 succs { 862 797 }
;; 797 succs { 862 798 }
;; 798 succs { 799 800 }
;; 799 succs { 801 }
;; 800 succs { 801 }
;; 801 succs { 802 }
;; 802 succs { 862 803 }
;; 803 succs { 794 804 }
;; 804 succs { 805 825 }
;; 805 succs { 862 806 }
;; 806 succs { 862 807 }
;; 807 succs { 862 808 }
;; 808 succs { 862 809 }
;; 809 succs { 862 810 }
;; 810 succs { 862 811 }
;; 811 succs { 862 812 }
;; 812 succs { 862 813 }
;; 813 succs { 862 814 }
;; 814 succs { 862 825 }
;; 815 succs { 862 816 }
;; 816 succs { 862 817 }
;; 817 succs { 862 818 }
;; 818 succs { 862 819 }
;; 819 succs { 862 820 }
;; 820 succs { 862 821 }
;; 821 succs { 862 822 }
;; 822 succs { 862 823 }
;; 823 succs { 862 824 }
;; 824 succs { 862 825 }
;; 825 succs { 826 }
;; 826 succs { 758 827 }
;; 827 succs { 828 }
;; 828 succs { 757 829 }
;; 829 succs { 830 }
;; 830 succs { 831 832 }
;; 831 succs { 833 }
;; 832 succs { 833 }
;; 833 succs { 834 }
;; 834 succs { 30 835 }
;; 835 succs { 1 }
;; 836 succs { 837 }
;; 837 succs { 838 }
;; 838 succs { 864 }
;; 839 succs { 856 }
;; 840 succs { 841 }
;; 841 succs { 843 }
;; 842 succs { 843 }
;; 843 succs { 854 }
;; 844 succs { 845 }
;; 845 succs { 854 }
;; 846 succs { 847 }
;; 847 succs { 848 }
;; 848 succs { 854 }
;; 849 succs { 850 }
;; 850 succs { 851 }
;; 851 succs { 852 }
;; 852 succs { 854 }
;; 853 succs { 854 }
;; 854 succs { 855 }
;; 855 succs { 856 }
;; 856 succs { 859 }
;; 857 succs { 858 }
;; 858 succs { 859 }
;; 859 succs { 860 }
;; 860 succs { 861 }
;; 861 succs { 862 }
;; 862 succs { 863 }
;; 863 succs { 864 }
;; 864 succs { }
void checkPointerConstraint (union tree_node * function_tree, struct ptb * ptable, struct gimple_array * user_tmp, union tree_node * checkTree, int calleetype)
{
  struct value_type & D.257729;
  struct value_type & D.257728;
  struct value_type & D.257727;
  struct value_type & D.257726;
  struct value_type & D.257725;
  struct value_type & D.257724;
  struct value_type & D.257723;
  struct value_type & D.257722;
  struct value_type & D.257721;
  bool D.257720;
  struct value_type & D.257719;
  struct value_type & D.257718;
  struct value_type & D.257717;
  struct value_type & D.257716;
  bool D.257715;
  struct value_type & D.257714;
  struct value_type & D.257713;
  struct value_type & D.257712;
  struct value_type & D.257711;
  struct value_type & D.257710;
  struct value_type & D.257709;
  struct value_type & D.257708;
  struct value_type & D.257707;
  bool D.257706;
  struct value_type & D.257705;
  struct value_type & D.257704;
  struct value_type & D.257703;
  struct value_type & D.257702;
  struct value_type & D.257701;
  struct value_type & D.257700;
  int finally_tmp.1895;
  bool D.257689;
  const char * D.257682;
  union tree_node * D.257681;
  struct value_type & D.257680;
  struct value_type & D.257679;
  struct value_type & D.257678;
  struct value_type & D.257677;
  struct value_type & D.257676;
  bool D.257675;
  struct value_type & D.257674;
  union tree_node * D.257673;
  union tree_node * D.257672;
  union tree_node * D.257671;
  struct value_type & D.257670;
  union tree_node * D.257669;
  unsigned int D.257668;
  union tree_node * D.257667;
  unsigned int D.257666;
  union tree_node * D.257665;
  struct value_type & D.257664;
  unsigned int D.257663;
  struct value_type & D.257662;
  union tree_node * D.257661;
  union tree_node * D.257660;
  struct value_type & D.257659;
  struct value_type & D.257658;
  union tree_node * D.257657;
  struct value_type & D.257656;
  struct gimple_array * D.257655;
  const char * D.257650;
  union tree_node * D.257649;
  bool D.257648;
  struct function_free_array * D.257647;
  struct function_free_array * D.257646;
  const char * D.257642;
  struct function_relate_array * D.257641;
  struct function_relate_array * D.257640;
  const char * D.257638;
  int * D.257637;
  int * D.257636;
  void * D.257634;
  struct function_relate_array * D.257633;
  struct function_relate_array * D.257632;
  union tree_node * D.257628;
  union tree_node * D.257627;
  union tree_node * D.257626;
  union tree_node * D.257625;
  unsigned int D.257624;
  union tree_node * D.257623;
  unsigned int D.257622;
  union tree_node * D.257621;
  unsigned int D.257620;
  union tree_node * D.257619;
  union tree_node * D.257618;
  union tree_node * D.257617;
  unsigned int D.257616;
  const char * D.257615;
  union tree_node * D.257614;
  union tree_node * D.257613;
  const char * D.257612;
  union tree_node * D.257611;
  union tree_node * D.257610;
  const char * D.257608;
  union tree_node * D.257607;
  union tree_node * D.257606;
  const char * D.257605;
  union tree_node * D.257604;
  union tree_node * D.257603;
  union tree_node * D.257602;
  union tree_node * D.257601;
  const char * D.257600;
  const char * D.257599;
  const char * D.257598;
  union tree_node * D.257597;
  union tree_node * D.257596;
  union tree_node * D.257595;
  union tree_node * D.257594;
  const char * D.257593;
  const char * D.257592;
  const char * D.257591;
  union tree_node * D.257590;
  const char * D.257589;
  union tree_node * D.257588;
  union tree_node * D.257587;
  union tree_node * D.257586;
  union tree_node * D.257585;
  union tree_node * D.257584;
  bool D.257583;
  struct function * D.257582;
  bool D.257580;
  bool D.257578;
  bool D.257577;
  bool D.257576;
  const char * D.257575;
  union tree_node * D.257574;
  union tree_node * D.257573;
  union tree_node * D.257572;
  struct function * D.257571;
  struct function * D.257570;
  struct function_relate_array * D.257569;
  struct function_relate_array * D.257568;
  void * D.257566;
  struct gimple_array * D.257565;
  union tree_node * D.257564;
  const char * D.257563;
  union tree_node * D.257562;
  union tree_node * D.257561;
  const char * D.257560;
  const char * D.257559;
  union tree_node * D.257558;
  union tree_node * D.257557;
  const char * D.257556;
  struct function * D.257555;
  const char * D.257554;
  struct function_return_array * D.257550;
  const char * D.257549;
  const char * D.257548;
  int k;
  int finddefsafe;
  int j;
  int i;
  int i;
  struct defmalloc_type defmalloc_type;
  union tree_node * arg;
  int k;
  struct gimple * def_stmt;
  union tree_node * callarg;
  int i;
  struct gimple_array start;
  struct free_type free_type;
  int k;
  struct vector callerRetTypearray;
  struct function_free_array callerFunArray;
  long unsigned int x;
  int k;
  struct function_relate_array fun_array;
  struct vector relate_type_array;
  long unsigned int x;
  struct gimple * def_stmt;
  int max_bb;
  int max_bb;
  int j;
  int i;
  struct iterator it_i;
  struct hash_map * function_maxbasicblock_collect;
  int freecount;
  union tree_node * findtree;
  union tree_node * findtree;
  const char * name;
  struct gimple * def_stmt;
  struct relate_type relate_type;
  struct gimple * finalstmt;
  struct gimple * tmp;
  struct edge_iterator ei2;
  struct edge_def * e2;
  int check;
  struct edge_iterator ei;
  struct edge_def * e;
  struct basic_block_def * bb;
  int k;
  int succ_havereturn;
  struct free_type free_type;
  int lastbasicblock;
  struct function_relate_array maxbb_array;
  struct vector maxbb_type_array;
  struct gimple * laststmt;
  union tree_node * lastfucntion;
  struct hash_map * function_maxbb_collect;
  const char * name;
  const char * name;
  struct vector earlyend;
  struct gimple * def_stmt;
  const char * name;
  struct vector free_array;
  int init_check_table_stmt;
  int find_mallocstmt;
  int is_pthread_detched;
  int find_pthread_join;
  int find_pthread_detched;
  int find_retheapstmt;
  int find_freestmt;
  int find_phistmt;
  int childptable_type;
  int ptable_type;
  int find_Looserulesfreestmt;
  int k;
  int find_thread_count;
  int find_thread;
  struct vector funcalleeRetTypearray;
  struct function_return_array find_fun_array;
  struct vector defmalloc_array;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * user_tmp2;
  struct gimple_array * used_stmt2;
  struct gimple_array * used_stmt;
  struct gimple_array start2;
  struct gimple_array start;
  struct gimple * u_stmt2;
  struct gimple * u_stmt;
  union tree_node * iftmp.1894;
  bool retval.1893;
  bool retval.1892;
  bool retval.1887;
  bool retval.1885;
  bool retval.1884;
  bool retval.1882;
  union tree_node * iftmp.1881;
  union tree_node * iftmp.1880;
  bool retval.1879;
  bool retval.1877;
  bool retval.1875;
  bool retval.1851;
  bool retval.1826;
  struct gimple * iftmp.1795;
  bool retval.1794;
  bool retval.1787;
  bool retval.1784;
  bool retval.1783;
  bool retval.1782;
  bool retval.1781;
  bool retval.1780;
  bool retval.1779;
  bool retval.1777;
  bool retval.1776;
  bool retval.1775;
  bool retval.1774;
  bool retval.1773;
  bool retval.1772;
  bool retval.1771;
  bool retval.1770;
  struct gimple * iftmp.1769;
  bool retval.1765;
  bool retval.1761;
  bool retval.1760;
  bool retval.1757;
  bool retval.1751;
  bool retval.1742;
  struct hash_map * function_maxbb_collect.1738;
  struct iterator D.202820;
  bool retval.1737;
  bool retval.1735;
  bool retval.1729;
  bool retval.1728;
  bool retval.1727;
  bool retval.1726;
  bool retval.1725;
  void * D.202686;
  bool retval.1724;
  struct gimple * iftmp.1721;
  const char[16] * iftmp.1709;
  bool iftmp.1705;
  bool retval.1704;
  bool iftmp.1703;
  bool retval.1702;
  bool retval.1699;
  bool retval.1698;
  bool retval.1696;
  bool retval.1695;
  bool iftmp.1673;
  bool retval.1672;
  bool retval.1663;
  bool retval.1662;
  bool retval.1652;
  bool retval.1649;
  bool retval.1648;
  bool retval.1629;
  bool iftmp.1623;
  bool retval.1622;
  bool retval.1621;
  bool iftmp.1598;
  bool retval.1597;
  bool retval.1596;
  bool retval.1584;
  bool retval.1575;
  bool retval.1574;
  bool retval.1573;
  bool retval.1572;
  bool retval.1571;
  bool retval.1570;
  bool retval.1565;
  bool retval.1563;
  bool retval.1562;
  bool retval.1561;
  bool retval.1560;
  bool retval.1543;
  bool retval.1541;
  bool iftmp.1537;
  bool retval.1536;
  bool retval.1535;
  bool iftmp.1534;
  bool retval.1533;
  bool retval.1532;
  bool retval.1531;
  struct gimple * iftmp.1529;
  bool retval.1524;
  void * D.202565;
  bool retval.1511;
  bool retval.1510;
  bool retval.1503;
  bool retval.1502;
  bool retval.1497;
  union tree_node * iftmp.1496;
  bool retval.1492;
  bool retval.1489;
  bool retval.1480;

  <bb 2> :
  gimple_array::gimple_array (&start);
  gimple_array::gimple_array (&start2);
  start.stmt = 0B;
  start2.stmt = 0B;
  used_stmt = &start;
  used_stmt2 = &start;
  user_tmp2 = user_tmp;
  table_temp = ptable;
  goto <bb 4>; [INV]

  <bb 3> :
  std::vector<tree_node*>::pop_back (&traceStack);

  <bb 4> :
  _1 = std::vector<tree_node*>::size (&traceStack);
  retval.1480 = _1 != 0;
  if (retval.1480 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  function_tree.1481_2 = function_tree;
  D.257548 = get_name (function_tree.1481_2);

  <bb 6> :
  _3 = D.257548;
  stderr.1482_4 = stderr;
  fprintf (stderr.1482_4, "\x1b[40;42m =======pre_check_funciton:%s========= \x1b[0m\n", _3);

  <bb 7> :
  calleetype.1483_5 = (unsigned int) calleetype;
  FUNCITON_THREAD.1484_6 = FUNCITON_THREAD;
  if (calleetype.1483_5 == FUNCITON_THREAD.1484_6)
    goto <bb 8>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 8> :
  threadmod.1485_7 = threadmod;
  _8 = (int) threadmod.1485_7;
  if (_8 == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 9> :
  function_return_array::function_return_array (&find_fun_array);
  function_tree.1486_9 = function_tree;
  D.257549 = get_name (function_tree.1486_9);

  <bb 10> :
  _10 = D.257549;
  stderr.1487_11 = stderr;
  fprintf (stderr.1487_11, "\x1b[40;42m =======thread job funciton:%s========= \x1b[0m\n", _10);

  <bb 11> :
  function_return_collect.1488_12 = function_return_collect;
  D.257550 = hash_map<tree_node*, function_return_array>::get (function_return_collect.1488_12, &function_tree);

  <bb 12> :
  _13 = D.257550;
  function_return_array::operator= (&find_fun_array, _13);

  <bb 13> :
  std::vector<return_type>::vector (&funcalleeRetTypearray, &find_fun_array.return_type_array);

  <bb 14> :
  find_thread = 0;
  find_thread_count = 0;
  k = 0;
  goto <bb 21>; [INV]

  <bb 15> :
  _14 = (long unsigned int) k;
  _15 = std::vector<return_type>::operator[] (&funcalleeRetTypearray, _14);
  _16 = _15->return_type_stmt_num;
  _17 = (unsigned int) _16;
  FUNCITON_THREAD.1490_18 = FUNCITON_THREAD;
  retval.1489 = _17 == FUNCITON_THREAD.1490_18;
  if (retval.1489 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 16> :
  _19 = (long unsigned int) k;
  _20 = std::vector<return_type>::operator[] (&funcalleeRetTypearray, _19);
  _21 = _20->return_type_stmt_num;
  stderr.1491_22 = stderr;
  fprintf (stderr.1491_22, "\x1b[40;44m ======= print pthread lock stmt %d ========  \x1b[0m\n", _21);

  <bb 17> :
  _23 = (long unsigned int) k;
  _24 = std::vector<return_type>::operator[] (&funcalleeRetTypearray, _23);
  _25 = _24->stmt;
  debug_gimple_stmt (_25);

  <bb 18> :
  _26 = (long unsigned int) k;
  _27 = std::vector<return_type>::operator[] (&funcalleeRetTypearray, _26);
  _28 = _27->stmt;
  _29 = gimple_location_safe (_28);
  warning_at (_29, 0, "use location");

  <bb 19> :
  find_thread_count = find_thread_count + 1;

  <bb 20> :
  k = k + 1;

  <bb 21> :
  _30 = (long unsigned int) k;
  _31 = std::vector<return_type>::size (&funcalleeRetTypearray);
  retval.1492 = _30 < _31;
  if (retval.1492 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 22> :
  stderr.1493_32 = stderr;
  fprintf (stderr.1493_32, "\x1b[40;42m =======thread job funciton lock count :%d========= \x1b[0m\n", find_thread_count);

  <bb 23> :
  std::vector<return_type>::~vector (&funcalleeRetTypearray);
  function_return_array::~function_return_array (&find_fun_array);
  find_fun_array = {CLOBBER};
  funcalleeRetTypearray = {CLOBBER};

  <bb 24> :
  function_tree.1494_33 = function_tree;
  D.257554 = get_name (function_tree.1494_33);

  <bb 25> :
  _34 = D.257554;
  stderr.1495_35 = stderr;
  fprintf (stderr.1495_35, "\x1b[40;42m =======start_check_funciton:%s========= \x1b[0m\n", _34);

  <bb 26> :
  std::vector<defmalloc_type>::vector (&defmalloc_array);
  if (table_temp != 0B)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  iftmp.1496 = table_temp->target;
  goto <bb 29>; [INV]

  <bb 28> :
  iftmp.1496 = 0B;

  <bb 29> :
  t = iftmp.1496;
  goto <bb 834>; [INV]

  <bb 30> :
  find_Looserulesfreestmt = 0;
  ptable_type = 0;
  childptable_type = 0;
  find_phistmt = 0;
  find_freestmt = 0;
  find_retheapstmt = -2;
  find_pthread_detched = 0;
  find_pthread_join = 0;
  is_pthread_detched = 0;
  find_mallocstmt = 0;
  init_check_table_stmt = 0;
  _36 = table_temp->node;
  D.257555 = cgraph_node::get_fun (_36);

  <bb 31> :
  _37 = D.257555;
  _38 = _37->decl;
  function_tree.1498_39 = function_tree;
  retval.1497 = _38 == function_tree.1498_39;
  if (retval.1497 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 755>; [INV]

  <bb 32> :
  _40 = table_temp->target;
  if (_40 != 0B)
    goto <bb 33>; [INV]
  else
    goto <bb 755>; [INV]

  <bb 33> :
  std::vector<free_type>::vector (&free_array);
  find_phistmt = 0;
  find_mallocstmt = find_phistmt;
  find_freestmt = find_mallocstmt;
  stderr.1499_41 = stderr;
  __builtin_fwrite ("\ndot graph START\n", 1, 17, stderr.1499_41);

  <bb 34> :
  stderr.1500_42 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1500_42);

  <bb 35> :
  name = "";
  _43 = table_temp->target;
  _44 = _43->base.code;
  if (_44 == 26)
    goto <bb 37>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 36> :
  _45 = table_temp->target;
  _46 = _45->base.code;
  if (_46 == 32)
    goto <bb 37>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 37> :
  stderr.1501_47 = stderr;
  __builtin_fwrite ("\n ================== collect possiable invalid ================== \n", 1, 67, stderr.1501_47);

  <bb 38> :
  _48 = table_temp->target;
  debug_tree (_48);

  <bb 39> :
  // predicted unlikely by continue predictor.
  finally_tmp.1895 = 0;
  goto <bb 751>; [INV]

  <bb 40> :
  _49 = table_temp->target;
  def_stmt = _49->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 41>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 41> :
  _50 = table_temp->target;
  _51 = _50->base.code;
  if (_51 != 36)
    goto <bb 42>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 42> :
  _52 = table_temp->target;
  _53 = _52->base.code;
  if (_53 != 38)
    goto <bb 43>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 43> :
  _54 = table_temp->target;
  debug_tree (_54);

  <bb 44> :
  if (def_stmt != 0B)
    goto <bb 45>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 45> :
  _55 = table_temp->target;
  debug_tree (_55);

  <bb 46> :
  _56 = table_temp->target;
  _57 = _56->base.code;
  if (_57 == 33)
    goto <bb 47>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 47> :
  _58 = table_temp->target;
  D.257556 = get_name (_58);

  <bb 48> :
  name = D.257556;
  goto <bb 57>; [INV]

  <bb 49> :
  _59 = table_temp->target;
  _60 = _59->base.code;
  if (_60 != 131)
    goto <bb 50>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 50> :
  _61 = table_temp->target;
  _62 = _61->base.code;
  if (_62 != 0)
    goto <bb 51>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 51> :
  retval.1502 = is_gimple_call (def_stmt);
  if (retval.1502 != 0)
    goto <bb 52>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 52> :
  D.257557 = gimple_call_fndecl (def_stmt);

  <bb 53> :
  _63 = D.257557;
  retval.1503 = _63 != 0B;
  if (retval.1503 != 0)
    goto <bb 54>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 54> :
  D.257558 = gimple_call_fndecl (def_stmt);

  <bb 55> :
  _64 = D.257558;
  D.257559 = get_name (_64);

  <bb 56> :
  name = D.257559;

  <bb 57> :
  stderr.1504_65 = stderr;
  __builtin_fwrite ("\n ================== pre trace ptable ================== \n", 1, 58, stderr.1504_65);

  <bb 58> :
  if (def_stmt != 0B)
    goto <bb 59>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 59> :
  _66 = table_temp->target;
  _67 = _66->base.code;
  if (_67 == 33)
    goto <bb 60>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 60> :
  _68 = table_temp->target;
  D.257560 = get_name (_68);

  <bb 61> :
  name = D.257560;
  stderr.1505_69 = stderr;
  fprintf (stderr.1505_69, "trace fucntion name:%s \n", name);

  <bb 62> :
  _70 = table_temp->target;
  RET_HEAP_OBJECT.1506_71 = RET_HEAP_OBJECT;
  RET_HEAP_OBJECT.1507_72 = (int) RET_HEAP_OBJECT.1506_71;
  _73 = table_temp->target;
  trace_function_path (_73, RET_HEAP_OBJECT.1507_72, _70, &find_retheapstmt);

  <bb 63> :
  find_retheapstmt.1508_74 = find_retheapstmt;
  if (find_retheapstmt.1508_74 > 0)
    goto <bb 64>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 64> :
  stderr.1509_75 = stderr;
  __builtin_fwrite ("some fucntion return value is heap-object and with Collection SSA_NAME alias relation\n", 1, 86, stderr.1509_75);
  goto <bb 77>; [INV]

  <bb 65> :
  _76 = table_temp->target;
  _77 = _76->base.code;
  if (_77 != 131)
    goto <bb 66>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 66> :
  _78 = table_temp->target;
  _79 = _78->base.code;
  if (_79 != 38)
    goto <bb 67>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 67> :
  retval.1510 = is_gimple_call (def_stmt);
  if (retval.1510 != 0)
    goto <bb 68>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 68> :
  D.257561 = gimple_call_fn (def_stmt);

  <bb 69> :
  _80 = D.257561;
  retval.1511 = _80 != 0B;
  if (retval.1511 != 0)
    goto <bb 70>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 70> :
  D.257562 = gimple_call_fn (def_stmt);

  <bb 71> :
  _81 = D.257562;
  D.257563 = get_name (_81);

  <bb 72> :
  name = D.257563;
  stderr.1512_82 = stderr;
  fprintf (stderr.1512_82, "trace fucntion name:%s \n", name);

  <bb 73> :
  _83 = table_temp->target;
  RET_HEAP_OBJECT.1513_84 = RET_HEAP_OBJECT;
  RET_HEAP_OBJECT.1514_85 = (int) RET_HEAP_OBJECT.1513_84;
  D.257564 = gimple_call_fndecl (def_stmt);

  <bb 74> :
  _86 = D.257564;
  trace_function_path (_86, RET_HEAP_OBJECT.1514_85, _83, &find_retheapstmt);

  <bb 75> :
  find_retheapstmt.1515_87 = find_retheapstmt;
  if (find_retheapstmt.1515_87 > 0)
    goto <bb 76>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 76> :
  stderr.1516_88 = stderr;
  __builtin_fwrite ("some fucntion return value is heap-object and with Collection SSA_NAME alias relation\n", 1, 86, stderr.1516_88);

  <bb 77> :
  stderr.1517_89 = stderr;
  __builtin_fwrite ("\n ================== pre trace ptable finish================== \n", 1, 64, stderr.1517_89);

  <bb 78> :
  goto <bb 81>; [INV]

  <bb 79> :
  _90 = table_temp->target;
  debug_tree (_90);

  <bb 80> :
  stderr.1518_91 = stderr;
  __builtin_fwrite ("\n ================== this stmt hava call fucntion ================== \n", 1, 70, stderr.1518_91);

  <bb 81> :

  <bb 82> :
  if (name != 0B)
    goto <bb 83>; [INV]
  else
    goto <bb 95>; [INV]

  <bb 83> :
  _92 = strcmp (name, "realloc");
  if (_92 == 0)
    goto <bb 90>; [INV]
  else
    goto <bb 84>; [INV]

  <bb 84> :
  _93 = strcmp (name, "malloc");
  if (_93 == 0)
    goto <bb 90>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 85> :
  _94 = strcmp (name, "xmalloc");
  if (_94 == 0)
    goto <bb 90>; [INV]
  else
    goto <bb 86>; [INV]

  <bb 86> :
  _95 = strcmp (name, "calloc");
  if (_95 == 0)
    goto <bb 90>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 87> :
  _96 = strcmp (name, "xcalloc");
  if (_96 == 0)
    goto <bb 90>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 88> :
  _97 = strcmp (name, "strdup");
  if (_97 == 0)
    goto <bb 90>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 89> :
  _98 = strcmp (name, "xstrdup");
  if (_98 == 0)
    goto <bb 90>; [INV]
  else
    goto <bb 92>; [INV]

  <bb 90> :
  IS_MALLOC_FUCNTION.1519_99 = IS_MALLOC_FUCNTION;
  ptable_type = (int) IS_MALLOC_FUCNTION.1519_99;
  stderr.1520_100 = stderr;
  fprintf (stderr.1520_100, "is Reserved word function :%s\n", name);

  <bb 91> :
  goto <bb 94>; [INV]

  <bb 92> :
  IS_OTHRER_FUCNTION.1521_101 = IS_OTHRER_FUCNTION;
  ptable_type = (int) IS_OTHRER_FUCNTION.1521_101;
  _102 = table_temp->target;
  debug_tree (_102);

  <bb 93> :
  stderr.1522_103 = stderr;
  fprintf (stderr.1522_103, "is Other function %s\n", name);

  <bb 94> :

  <bb 95> :
  treeGimpleArray.1523_104 = treeGimpleArray;
  _105 = &table_temp->target;
  D.257565 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.1523_104, _105);

  <bb 96> :
  user_tmp = D.257565;
  std::vector<basic_block_def*>::vector (&earlyend);
  start.stmt = 0B;
  used_stmt = &start;
  if (user_tmp != 0B)
    goto <bb 97>; [INV]
  else
    goto <bb 671>; [INV]

  <bb 97> :
  D.257566 = operator new (48);

  <bb 98> :
  D.202565 = D.257566;
  hash_map<tree_node*, function_relate_array>::hash_map (D.202565, 13, 0, 1, 0);

  <bb 99> :
  function_maxbb_collect = D.202565;
  lastfucntion = 0B;
  laststmt = 0B;
  std::vector<relate_type>::vector (&maxbb_type_array);
  function_relate_array::function_relate_array (&maxbb_array);
  _106 = &table_temp->target;
  D.257568 = hash_map<tree_node*, function_relate_array>::get (function_maxbb_collect, _106);

  <bb 100> :
  _107 = D.257568;
  retval.1524 = _107 == 0B;
  if (retval.1524 != 0)
    goto <bb 101>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 101> :
  std::vector<relate_type>::operator= (&maxbb_array.relate_type_array, &maxbb_type_array);
  goto <bb 105>; [INV]

  <bb 102> :
  _108 = &table_temp->target;
  D.257569 = hash_map<tree_node*, function_relate_array>::get (function_maxbb_collect, _108);

  <bb 103> :
  _109 = D.257569;
  function_relate_array::operator= (&maxbb_array, _109);

  <bb 104> :
  std::vector<relate_type>::operator= (&maxbb_type_array, &maxbb_array.relate_type_array);

  <bb 105> :
  lastbasicblock = -1;
  _110 = table_temp->swap_type;
  _111 = (unsigned int) _110;
  FUNCITON_THREAD.1525_112 = FUNCITON_THREAD;
  if (_111 == FUNCITON_THREAD.1525_112)
    goto <bb 106>; [INV]
  else
    goto <bb 107>; [INV]

  <bb 106> :
  stderr.1526_113 = stderr;
  __builtin_fwrite (" \n Start is Pthread Job Collect  \n", 1, 34, stderr.1526_113);
  goto <bb 108>; [INV]

  <bb 107> :
  stderr.1527_114 = stderr;
  __builtin_fwrite (" \n Start check Pointer Collect  \n", 1, 33, stderr.1527_114);

  <bb 108> :
  stderr.1528_115 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1528_115);

  <bb 109> :
  _116 = user_tmp->size;
  if (_116 > 0)
    goto <bb 110>; [INV]
  else
    goto <bb 532>; [INV]

  <bb 110> :
  if (user_tmp != 0B)
    goto <bb 111>; [INV]
  else
    goto <bb 112>; [INV]

  <bb 111> :
  iftmp.1529 = user_tmp->stmt;
  goto <bb 113>; [INV]

  <bb 112> :
  iftmp.1529 = 0B;

  <bb 113> :
  u_stmt = iftmp.1529;
  goto <bb 493>; [INV]

  <bb 114> :
  prebranchexit.1530_117 = prebranchexit;
  if (prebranchexit.1530_117 != 0)
    goto <bb 115>; [INV]
  else
    goto <bb 184>; [INV]

  <bb 115> :
  _118 = table_temp->node;
  D.257570 = cgraph_node::get_fun (_118);

  <bb 116> :
  _119 = D.257570;
  push_cfun (_119);

  <bb 117> :
  calculate_dominance_info (1);

  <bb 118> :
  succ_havereturn = 0;
  k = 0;
  goto <bb 182>; [INV]

  <bb 119> :
  _120 = table_temp->node;
  D.257571 = cgraph_node::get_fun (_120);

  <bb 120> :
  _121 = D.257571;
  _122 = _121->cfg;
  _123 = _122->x_entry_block_ptr;
  bb = _123->next_bb;
  goto <bb 179>; [INV]

  <bb 121> :
  _124 = &bb->succs;
  ei = ei_start_1 (_124);
  goto <bb 176>; [INV]

  <bb 122> :
  name = "";
  _125 = (long unsigned int) k;
  _126 = std::vector<return_type>::operator[] (&global_ret_type_array, _125);
  _127 = _126->stmt;
  D.257572 = gimple_call_lhs (_127);

  <bb 123> :
  _128 = D.257572;
  retval.1531 = _128 == 0B;
  if (retval.1531 != 0)
    goto <bb 124>; [INV]
  else
    goto <bb 129>; [INV]

  <bb 124> :
  _129 = (long unsigned int) k;
  _130 = std::vector<return_type>::operator[] (&global_ret_type_array, _129);
  _131 = _130->stmt;
  D.257573 = gimple_call_fn (_131);

  <bb 125> :
  _132 = D.257573;
  retval.1532 = _132 != 0B;
  if (retval.1532 != 0)
    goto <bb 126>; [INV]
  else
    goto <bb 129>; [INV]

  <bb 126> :
  _133 = (long unsigned int) k;
  _134 = std::vector<return_type>::operator[] (&global_ret_type_array, _133);
  _135 = _134->stmt;
  D.257574 = gimple_call_fn (_135);

  <bb 127> :
  _136 = D.257574;
  D.257575 = get_name (_136);

  <bb 128> :
  name = D.257575;

  <bb 129> :
  if (name != 0B)
    goto <bb 131>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 130> :
  _137 = (long unsigned int) k;
  _138 = std::vector<return_type>::operator[] (&global_ret_type_array, _137);
  _139 = _138->stmt;
  _140 = gimple_code (_139);
  if (_140 == 10)
    goto <bb 131>; [INV]
  else
    goto <bb 132>; [INV]

  <bb 131> :
  iftmp.1534 = 1;
  goto <bb 133>; [INV]

  <bb 132> :
  iftmp.1534 = 0;

  <bb 133> :
  retval.1533 = iftmp.1534;
  if (retval.1533 != 0)
    goto <bb 134>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 134> :
  check = 0;
  if (name != 0B)
    goto <bb 135>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 135> :
  _141 = strcmp (name, "exit");
  if (_141 == 0)
    goto <bb 136>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 136> :
  check = 1;

  <bb 137> :
  _142 = (long unsigned int) k;
  _143 = std::vector<return_type>::operator[] (&global_ret_type_array, _142);
  _144 = _143->stmt;
  _145 = gimple_code (_144);
  retval.1535 = _145 == 10;
  if (retval.1535 != 0)
    goto <bb 138>; [INV]
  else
    goto <bb 139>; [INV]

  <bb 138> :
  check = 1;

  <bb 139> :
  if (check == 1)
    goto <bb 140>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 140> :
  _146 = bb->index;
  _147 = gimple_bb (u_stmt);
  _148 = _147->index;
  if (_146 == _148)
    goto <bb 142>; [INV]
  else
    goto <bb 141>; [INV]

  <bb 141> :
  e.1538_149 = e;
  _150 = e.1538_149->dest;
  _151 = _150->index;
  _152 = gimple_bb (u_stmt);
  _153 = _152->index;
  if (_151 == _153)
    goto <bb 142>; [INV]
  else
    goto <bb 143>; [INV]

  <bb 142> :
  iftmp.1537 = 1;
  goto <bb 144>; [INV]

  <bb 143> :
  iftmp.1537 = 0;

  <bb 144> :
  retval.1536 = iftmp.1537;
  if (retval.1536 != 0)
    goto <bb 145>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 145> :
  _154 = (long unsigned int) k;
  _155 = std::vector<return_type>::operator[] (&global_ret_type_array, _154);
  tmp = _155->stmt;
  _156 = &bb->succs;
  ei2 = ei_start_1 (_156);
  goto <bb 172>; [INV]

  <bb 146> :
  e.1539_157 = e;
  _158 = e.1539_157->dest;
  _159 = _158->index;
  e2.1540_160 = e2;
  _161 = e2.1540_160->dest;
  _162 = _161->index;
  if (_159 != _162)
    goto <bb 147>; [INV]
  else
    goto <bb 160>; [INV]

  <bb 147> :
  e2.1542_163 = e2;
  _164 = e2.1542_163->dest;
  _165 = gimple_bb (tmp);
  D.257576 = dominated_by_p (1, _165, _164);

  <bb 148> :
  retval.1541 = D.257576;
  if (retval.1541 != 0)
    goto <bb 149>; [INV]
  else
    goto <bb 171>; [INV]

  <bb 149> :
  _166 = gimple_bb (tmp);
  cfun.1544_167 = cfun;
  _168 = cfun.1544_167->cfg;
  _169 = _168->x_exit_block_ptr;
  _170 = _169->prev_bb;
  D.257577 = dominated_by_p (1, _170, _166);

  <bb 150> :
  _171 = D.257577;
  retval.1543 = ~_171;
  if (retval.1543 != 0)
    goto <bb 151>; [INV]
  else
    goto <bb 171>; [INV]

  <bb 151> :
  stderr.1545_172 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1545_172);

  <bb 152> :
  stderr.1546_173 = stderr;
  __builtin_fwrite ("\x1b[40;31m    branch possiable have return or exit  \x1b[0m\n", 1, 55, stderr.1546_173);

  <bb 153> :
  debug_gimple_stmt (u_stmt);

  <bb 154> :
  _174 = gimple_bb (u_stmt);
  _175 = _174->index;
  stderr.1547_176 = stderr;
  fprintf (stderr.1547_176, "bb index := %d\n", _175);

  <bb 155> :
  debug_gimple_stmt (tmp);

  <bb 156> :
  _177 = gimple_location_safe (tmp);
  warning_at (_177, 0, "use location");

  <bb 157> :
  _178 = gimple_bb (u_stmt);
  _179 = _178->index;
  stderr.1548_180 = stderr;
  fprintf (stderr.1548_180, "gimple stmt in succ := %d \n", _179);

  <bb 158> :
  _181 = gimple_bb (tmp);
  _182 = _181->index;
  stderr.1549_183 = stderr;
  fprintf (stderr.1549_183, "branch in succ := %d have return or exit\n", _182);

  <bb 159> :
  stderr.1550_184 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1550_184);
  goto <bb 171>; [INV]

  <bb 160> :
  if (succ_havereturn == 0)
    goto <bb 161>; [INV]
  else
    goto <bb 171>; [INV]

  <bb 161> :
  e2.1551_185 = e2;
  _186 = e2.1551_185->dest;
  _187 = _186->index;
  cfun.1552_188 = cfun;
  _189 = cfun.1552_188->cfg;
  _190 = _189->x_exit_block_ptr;
  _191 = _190->prev_bb;
  _192 = _191->index;
  if (_187 == _192)
    goto <bb 162>; [INV]
  else
    goto <bb 171>; [INV]

  <bb 162> :
  stderr.1553_193 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1553_193);

  <bb 163> :
  stderr.1554_194 = stderr;
  __builtin_fwrite ("\x1b[40;31m    fucntion exit  \x1b[0m\n", 1, 32, stderr.1554_194);

  <bb 164> :
  debug_gimple_stmt (u_stmt);

  <bb 165> :
  _195 = gimple_location_safe (u_stmt);
  warning_at (_195, 0, "use location");

  <bb 166> :
  succ_havereturn = 1;
  _196 = bb->index;
  stderr.1555_197 = stderr;
  fprintf (stderr.1555_197, "\x1b[40;31m    branch possiable have return in bb:%d \x1b[0m\n", _196);

  <bb 167> :
  _198 = gimple_bb (u_stmt);
  _199 = _198->index;
  stderr.1556_200 = stderr;
  fprintf (stderr.1556_200, "gimple stmt in succ := %d \n", _199);

  <bb 168> :
  cfun.1557_201 = cfun;
  _202 = cfun.1557_201->cfg;
  _203 = _202->x_exit_block_ptr;
  _204 = _203->prev_bb;
  _205 = _204->index;
  stderr.1558_206 = stderr;
  fprintf (stderr.1558_206, "beacuse in succ := %d have return \n", _205);

  <bb 169> :
  stderr.1559_207 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1559_207);

  <bb 170> :
  // predicted unlikely by continue predictor.

  <bb 171> :
  ei_next (&ei2);

  <bb 172> :
  D.257578 = ei_cond (ei2, &e2);

  <bb 173> :
  retval.1560 = D.257578;
  if (retval.1560 != 0)
    goto <bb 146>; [INV]
  else
    goto <bb 174>; [INV]

  <bb 174> :
  e2 = {CLOBBER};
  ei2 = {CLOBBER};

  <bb 175> :
  ei_next (&ei);

  <bb 176> :
  D.257580 = ei_cond (ei, &e);

  <bb 177> :
  retval.1561 = D.257580;
  if (retval.1561 != 0)
    goto <bb 122>; [INV]
  else
    goto <bb 178>; [INV]

  <bb 178> :
  e = {CLOBBER};
  ei = {CLOBBER};
  bb = bb->next_bb;

  <bb 179> :
  _208 = table_temp->node;
  D.257582 = cgraph_node::get_fun (_208);

  <bb 180> :
  _209 = D.257582;
  _210 = _209->cfg;
  _211 = _210->x_exit_block_ptr;
  retval.1562 = bb != _211;
  if (retval.1562 != 0)
    goto <bb 121>; [INV]
  else
    goto <bb 181>; [INV]

  <bb 181> :
  k = k + 1;

  <bb 182> :
  _212 = (long unsigned int) k;
  _213 = std::vector<return_type>::size (&global_ret_type_array);
  retval.1563 = _212 < _213;
  if (retval.1563 != 0)
    goto <bb 119>; [INV]
  else
    goto <bb 183>; [INV]

  <bb 183> :
  pop_cfun ();

  <bb 184> :
  stmtloopcheck.1564_214 = stmtloopcheck;
  if (stmtloopcheck.1564_214 != 0)
    goto <bb 185>; [INV]
  else
    goto <bb 190>; [INV]

  <bb 185> :
  _215 = gimple_bb (u_stmt);
  D.257583 = bb_in_loop_p (_215);

  <bb 186> :
  retval.1565 = D.257583;
  if (retval.1565 != 0)
    goto <bb 187>; [INV]
  else
    goto <bb 190>; [INV]

  <bb 187> :
  stderr.1566_216 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1566_216);

  <bb 188> :
  stderr.1567_217 = stderr;
  __builtin_fwrite ("\x1b[40;31m    collect Stmt in loop \x1b[0m\n", 1, 38, stderr.1567_217);

  <bb 189> :
  stderr.1568_218 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1568_218);

  <bb 190> :
  samefucntioncheck.1569_219 = samefucntioncheck;
  if (samefucntioncheck.1569_219 != 0)
    goto <bb 191>; [INV]
  else
    goto <bb 217>; [INV]

  <bb 191> :
  _220 = table_temp->last_stmt;
  _221 = gimple_code (_220);
  retval.1570 = _221 == 8;
  if (retval.1570 != 0)
    goto <bb 192>; [INV]
  else
    goto <bb 217>; [INV]

  <bb 192> :
  _222 = gimple_code (u_stmt);
  retval.1571 = _222 == 8;
  if (retval.1571 != 0)
    goto <bb 193>; [INV]
  else
    goto <bb 217>; [INV]

  <bb 193> :
  _223 = table_temp->last_stmt;
  D.257584 = gimple_call_fn (_223);

  <bb 194> :
  _224 = D.257584;
  retval.1572 = _224 != 0B;
  if (retval.1572 != 0)
    goto <bb 195>; [INV]
  else
    goto <bb 217>; [INV]

  <bb 195> :
  D.257585 = gimple_call_fn (u_stmt);

  <bb 196> :
  _225 = D.257585;
  retval.1573 = _225 != 0B;
  if (retval.1573 != 0)
    goto <bb 197>; [INV]
  else
    goto <bb 217>; [INV]

  <bb 197> :
  _226 = table_temp->last_stmt;
  D.257586 = gimple_call_fn (_226);

  <bb 198> :
  _227 = D.257586;
  D.257587 = gimple_call_fn (u_stmt);

  <bb 199> :
  _228 = D.257587;
  retval.1574 = _227 == _228;
  if (retval.1574 != 0)
    goto <bb 200>; [INV]
  else
    goto <bb 202>; [INV]

  <bb 200> :
  _229 = table_temp->last_stmt;
  if (u_stmt == _229)
    goto <bb 201>; [INV]
  else
    goto <bb 217>; [INV]

  <bb 201> :
  debug_gimple_stmt (u_stmt);
  goto <bb 217>; [INV]

  <bb 202> :
  D.257588 = gimple_call_fn (u_stmt);

  <bb 203> :
  _230 = D.257588;
  D.257589 = get_name (_230);

  <bb 204> :
  name = D.257589;
  if (name != 0B)
    goto <bb 205>; [INV]
  else
    goto <bb 217>; [INV]

  <bb 205> :
  _231 = table_temp->last_stmt;
  D.257590 = gimple_call_fn (_231);

  <bb 206> :
  _232 = D.257590;
  D.257591 = get_name (_232);

  <bb 207> :
  _233 = D.257591;
  _234 = strcmp (name, _233);
  retval.1575 = _234 == 0;
  if (retval.1575 != 0)
    goto <bb 208>; [INV]
  else
    goto <bb 217>; [INV]

  <bb 208> :
  stderr.1576_235 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1576_235);

  <bb 209> :
  stderr.1577_236 = stderr;
  fprintf (stderr.1577_236, "\n Expand conflict \n", name);

  <bb 210> :
  stderr.1578_237 = stderr;
  fprintf (stderr.1578_237, " The same function may have multiple branches :%s\n", name);

  <bb 211> :
  _238 = table_temp->last_stmt;
  debug_gimple_stmt (_238);

  <bb 212> :
  _239 = table_temp->last_stmt;
  _240 = gimple_location_safe (_239);
  warning_at (_240, 0, "use location");

  <bb 213> :
  debug_gimple_stmt (u_stmt);

  <bb 214> :
  _241 = gimple_location_safe (u_stmt);
  warning_at (_241, 0, "use location");

  <bb 215> :
  _242 = gimple_bb (u_stmt);
  _243 = table_temp->node;
  check_bbinfo (_243, _242);

  <bb 216> :
  // predicted unlikely by continue predictor.
  goto <bb 488>; [INV]

  <bb 217> :
  free_type::free_type (&free_type);
  memoryleakcheck.1579_244 = memoryleakcheck;
  if (memoryleakcheck.1579_244 != 0)
    goto <bb 218>; [INV]
  else
    goto <bb 487>; [INV]

  <bb 218> :
  _245 = user_tmp->ret_stmt;
  if (_245 != 0B)
    goto <bb 219>; [INV]
  else
    goto <bb 262>; [INV]

  <bb 219> :
  debugmod.1580_246 = debugmod;
  if (debugmod.1580_246 != 0)
    goto <bb 220>; [INV]
  else
    goto <bb 223>; [INV]

  <bb 220> :
  function_tree.1581_247 = function_tree;
  D.257592 = get_name (function_tree.1581_247);

  <bb 221> :
  _248 = D.257592;
  stderr.1582_249 = stderr;
  fprintf (stderr.1582_249, "dot graph entry %s\n", _248);

  <bb 222> :
  stderr.1583_250 = stderr;
  __builtin_fwrite ("dot graph target entry end\n\n", 1, 28, stderr.1583_250);

  <bb 223> :
  _251 = user_tmp->ret_stmt;
  _252 = gimple_code (_251);
  retval.1584 = _252 == 10;
  if (retval.1584 != 0)
    goto <bb 224>; [INV]
  else
    goto <bb 487>; [INV]

  <bb 224> :
  _253 = user_tmp->ret_stmt;
  debug (_253);

  <bb 225> :
  _254 = user_tmp->ret_stmt;
  _255 = gimple_location_safe (_254);
  warning_at (_255, 0, "use location");

  <bb 226> :
  _256 = user_tmp->ret_stmt;
  debug_gimple_stmt (_256);

  <bb 227> :
  _257 = user_tmp->ret_stmt;
  now_stmt = _257;
  debugmod.1585_258 = debugmod;
  if (debugmod.1585_258 != 0)
    goto <bb 228>; [INV]
  else
    goto <bb 487>; [INV]

  <bb 228> :
  stderr.1586_259 = stderr;
  __builtin_fwrite ("dot graph target loc start ", 1, 27, stderr.1586_259);

  <bb 229> :
  _260 = user_tmp->ret_stmt;
  debug_gimple_stmt (_260);

  <bb 230> :
  _261 = user_tmp->ret_stmt;
  _262 = gimple_location_safe (_261);
  warning_at (_262, 0, "use location");

  <bb 231> :
  stderr.1587_263 = stderr;
  __builtin_fwrite ("dot graph target loc en1\n\n", 1, 26, stderr.1587_263);

  <bb 232> :
  _264 = user_tmp->ret_stmt;
  _265 = gimple_bb (_264);
  _266 = _265->index;
  stderr.1588_267 = stderr;
  fprintf (stderr.1588_267, "dot graph target line desc form basic block %d: ", _266);

  <bb 233> :
  _268 = user_tmp->ret_stmt;
  debug_gimple_stmt (_268);

  <bb 234> :
  _269 = user_tmp->ret_stmt;
  _270 = gimple_location_safe (_269);
  warning_at (_270, 0, "use location");

  <bb 235> :
  stderr.1589_271 = stderr;
  __builtin_fwrite ("dot graph target line desend\n\n", 1, 30, stderr.1589_271);

  <bb 236> :
  stderr.1590_272 = stderr;
  __builtin_fwrite ("dot graph target loc start ", 1, 27, stderr.1590_272);

  <bb 237> :
  _273 = user_tmp->ret_stmt;
  debug_gimple_stmt (_273);

  <bb 238> :
  _274 = user_tmp->ret_stmt;
  _275 = gimple_location_safe (_274);
  warning_at (_275, 0, "use location");

  <bb 239> :
  stderr.1591_276 = stderr;
  __builtin_fwrite ("dot graph target loc end\n\n", 1, 26, stderr.1591_276);

  <bb 240> :
  stderr.1592_277 = stderr;
  __builtin_fwrite ("dot graph target basicblock start ", 1, 34, stderr.1592_277);

  <bb 241> :
  _278 = user_tmp->ret_stmt;
  _279 = gimple_bb (_278);
  _280 = _279->index;
  function_tree.1593_281 = function_tree;
  D.257593 = get_name (function_tree.1593_281);

  <bb 242> :
  _282 = D.257593;
  stderr.1594_283 = stderr;
  fprintf (stderr.1594_283, "from %s basic block %d", _282, _280);

  <bb 243> :
  stderr.1595_284 = stderr;
  __builtin_fwrite ("dot graph target basicblock end\n\n", 1, 33, stderr.1595_284);

  <bb 244> :
  _285 = user_tmp->ret_stmt;
  D.257594 = gimple_block (_285);

  <bb 245> :
  _286 = D.257594;
  retval.1596 = _286 != 0B;
  if (retval.1596 != 0)
    goto <bb 246>; [INV]
  else
    goto <bb 258>; [INV]

  <bb 246> :
  _287 = user_tmp->ret_stmt;
  D.257595 = gimple_block (_287);

  <bb 247> :
  _288 = D.257595;
  _289 = _288->block.supercontext;
  _290 = _289->base.code;
  if (_290 == 33)
    goto <bb 248>; [INV]
  else
    goto <bb 251>; [INV]

  <bb 248> :
  _291 = user_tmp->ret_stmt;
  D.257596 = gimple_block (_291);

  <bb 249> :
  _292 = D.257596;
  _293 = _292->block.supercontext;
  function_tree.1599_294 = function_tree;
  if (_293 != function_tree.1599_294)
    goto <bb 250>; [INV]
  else
    goto <bb 251>; [INV]

  <bb 250> :
  iftmp.1598 = 1;
  goto <bb 252>; [INV]

  <bb 251> :
  iftmp.1598 = 0;

  <bb 252> :
  retval.1597 = iftmp.1598;
  if (retval.1597 != 0)
    goto <bb 253>; [INV]
  else
    goto <bb 258>; [INV]

  <bb 253> :
  stderr.1600_295 = stderr;
  __builtin_fwrite ("dot graph target basicblock star1 ", 1, 34, stderr.1600_295);

  <bb 254> :
  _296 = user_tmp->ret_stmt;
  _297 = gimple_bb (_296);
  _298 = _297->index;
  _299 = user_tmp->ret_stmt;
  D.257597 = gimple_block (_299);

  <bb 255> :
  _300 = D.257597;
  _301 = _300->block.supercontext;
  D.257598 = get_name (_301);

  <bb 256> :
  _302 = D.257598;
  stderr.1601_303 = stderr;
  fprintf (stderr.1601_303, "from %s basic block %d", _302, _298);

  <bb 257> :
  stderr.1602_304 = stderr;
  __builtin_fwrite ("dot graph target basicblock end\n\n", 1, 33, stderr.1602_304);

  <bb 258> :
  stderr.1603_305 = stderr;
  __builtin_fwrite ("dot graph stmt start ", 1, 21, stderr.1603_305);

  <bb 259> :
  _306 = user_tmp->ret_stmt;
  debug (_306);

  <bb 260> :
  _307 = user_tmp->ret_stmt;
  _308 = gimple_location_safe (_307);
  warning_at (_308, 0, "use location");

  <bb 261> :
  stderr.1604_309 = stderr;
  __builtin_fwrite ("dot graph stmt end\n\n", 1, 20, stderr.1604_309);
  goto <bb 487>; [INV]

  <bb 262> :
  _310 = user_tmp->target;
  if (_310 != 0B)
    goto <bb 263>; [INV]
  else
    goto <bb 345>; [INV]

  <bb 263> :
  debugmod.1605_311 = debugmod;
  if (debugmod.1605_311 != 0)
    goto <bb 264>; [INV]
  else
    goto <bb 267>; [INV]

  <bb 264> :
  function_tree.1606_312 = function_tree;
  D.257599 = get_name (function_tree.1606_312);

  <bb 265> :
  _313 = D.257599;
  stderr.1607_314 = stderr;
  fprintf (stderr.1607_314, "dot graph entry %s\n", _313);

  <bb 266> :
  stderr.1608_315 = stderr;
  __builtin_fwrite ("dot graph target entry end\n\n", 1, 28, stderr.1608_315);

  <bb 267> :
  finalstmt = u_stmt;
  debug (u_stmt);

  <bb 268> :
  _316 = gimple_location_safe (u_stmt);
  warning_at (_316, 0, "use location");

  <bb 269> :
  now_stmt = u_stmt;
  debugmod.1609_317 = debugmod;
  if (debugmod.1609_317 != 0)
    goto <bb 270>; [INV]
  else
    goto <bb 345>; [INV]

  <bb 270> :
  stderr.1610_318 = stderr;
  __builtin_fwrite ("dot graph target loc start ", 1, 27, stderr.1610_318);

  <bb 271> :
  _319 = table_temp->last_stmt;
  debug_gimple_stmt (_319);

  <bb 272> :
  _320 = table_temp->last_stmt;
  _321 = gimple_location_safe (_320);
  warning_at (_321, 0, "use location");

  <bb 273> :
  stderr.1611_322 = stderr;
  __builtin_fwrite ("dot graph target loc en1\n\n", 1, 26, stderr.1611_322);

  <bb 274> :
  _323 = gimple_bb (u_stmt);
  _324 = _323->index;
  stderr.1612_325 = stderr;
  fprintf (stderr.1612_325, "dot graph target line desc form basic block %d: ", _324);

  <bb 275> :
  debug (u_stmt);

  <bb 276> :
  _326 = gimple_location_safe (u_stmt);
  warning_at (_326, 0, "use location");

  <bb 277> :
  stderr.1613_327 = stderr;
  __builtin_fwrite ("dot graph target line desend\n\n", 1, 30, stderr.1613_327);

  <bb 278> :
  stderr.1614_328 = stderr;
  __builtin_fwrite ("dot graph target loc start ", 1, 27, stderr.1614_328);

  <bb 279> :
  _329 = table_temp->last_stmt;
  debug_gimple_stmt (_329);

  <bb 280> :
  _330 = table_temp->last_stmt;
  _331 = gimple_location_safe (_330);
  warning_at (_331, 0, "use location");

  <bb 281> :
  stderr.1615_332 = stderr;
  __builtin_fwrite ("dot graph target loc end\n\n", 1, 26, stderr.1615_332);

  <bb 282> :
  stderr.1616_333 = stderr;
  __builtin_fwrite ("dot graph target basicblock start ", 1, 34, stderr.1616_333);

  <bb 283> :
  _334 = gimple_bb (u_stmt);
  _335 = _334->index;
  function_tree.1617_336 = function_tree;
  D.257600 = get_name (function_tree.1617_336);

  <bb 284> :
  _337 = D.257600;
  stderr.1618_338 = stderr;
  fprintf (stderr.1618_338, "from %s basic block %d", _337, _335);

  <bb 285> :
  stderr.1619_339 = stderr;
  __builtin_fwrite ("dot graph target basicblock en1\n\n", 1, 33, stderr.1619_339);

  <bb 286> :
  relate_type::relate_type (&relate_type);
  function_tree.1620_340 = function_tree;
  relate_type.relate_funtree = function_tree.1620_340;
  D.257601 = gimple_block (u_stmt);

  <bb 287> :
  _341 = D.257601;
  retval.1621 = _341 != 0B;
  if (retval.1621 != 0)
    goto <bb 288>; [INV]
  else
    goto <bb 303>; [INV]

  <bb 288> :
  D.257602 = gimple_block (u_stmt);

  <bb 289> :
  _342 = D.257602;
  _343 = _342->block.supercontext;
  _344 = _343->base.code;
  if (_344 == 33)
    goto <bb 290>; [INV]
  else
    goto <bb 293>; [INV]

  <bb 290> :
  D.257603 = gimple_block (u_stmt);

  <bb 291> :
  _345 = D.257603;
  _346 = _345->block.supercontext;
  function_tree.1624_347 = function_tree;
  if (_346 != function_tree.1624_347)
    goto <bb 292>; [INV]
  else
    goto <bb 293>; [INV]

  <bb 292> :
  iftmp.1623 = 1;
  goto <bb 294>; [INV]

  <bb 293> :
  iftmp.1623 = 0;

  <bb 294> :
  retval.1622 = iftmp.1623;
  if (retval.1622 != 0)
    goto <bb 295>; [INV]
  else
    goto <bb 302>; [INV]

  <bb 295> :
  stderr.1625_348 = stderr;
  __builtin_fwrite ("dot graph target basicblock star1 ", 1, 34, stderr.1625_348);

  <bb 296> :
  _349 = gimple_bb (u_stmt);
  _350 = _349->index;
  D.257604 = gimple_block (u_stmt);

  <bb 297> :
  _351 = D.257604;
  _352 = _351->block.supercontext;
  D.257605 = get_name (_352);

  <bb 298> :
  _353 = D.257605;
  stderr.1626_354 = stderr;
  fprintf (stderr.1626_354, "from %s basic block %d", _353, _350);

  <bb 299> :
  stderr.1627_355 = stderr;
  __builtin_fwrite ("dot graph target basicblock end\n\n", 1, 33, stderr.1627_355);

  <bb 300> :
  D.257606 = gimple_block (u_stmt);

  <bb 301> :
  _356 = D.257606;
  _357 = _356->block.supercontext;
  relate_type.relate_funtree = _357;
  goto <bb 303>; [INV]

  <bb 302> :
  function_tree.1628_358 = function_tree;
  relate_type.relate_funtree = function_tree.1628_358;

  <bb 303> :
  _359 = table_temp->last_stmt;
  relate_type.laststmt = _359;
  relate_type.stmt = u_stmt;
  _360 = user_tmp->target;
  relate_type.relate_tree = _360;
  _361 = gimple_bb (u_stmt);
  _362 = _361->index;
  relate_type.now_basicblock = _362;
  std::vector<relate_type>::push_back (&maxbb_array.relate_type_array, &relate_type);

  <bb 304> :
  _363 = &table_temp->target;
  hash_map<tree_node*, function_relate_array>::put (function_maxbb_collect, _363, &maxbb_array);

  <bb 305> :
  _364 = gimple_code (u_stmt);
  retval.1629 = _364 == 8;
  if (retval.1629 != 0)
    goto <bb 306>; [INV]
  else
    goto <bb 335>; [INV]

  <bb 306> :
  debugmod.1630_365 = debugmod;
  if (debugmod.1630_365 != 0)
    goto <bb 307>; [INV]
  else
    goto <bb 311>; [INV]

  <bb 307> :
  stderr.1631_366 = stderr;
  __builtin_fwrite ("dot graph stmt start ", 1, 21, stderr.1631_366);

  <bb 308> :
  debug (finalstmt);

  <bb 309> :
  _367 = table_temp->last_stmt;
  debug (_367);

  <bb 310> :
  stderr.1632_368 = stderr;
  __builtin_fwrite ("dot graph stmt end\n\n", 1, 20, stderr.1632_368);

  <bb 311> :
  D.257607 = gimple_call_fn (u_stmt);

  <bb 312> :
  _369 = D.257607;
  D.257608 = get_name (_369);

  <bb 313> :
  name = D.257608;
  if (name != 0B)
    goto <bb 314>; [INV]
  else
    goto <bb 344>; [INV]

  <bb 314> :
  _370 = strcmp (name, "free");
  if (_370 == 0)
    goto <bb 317>; [INV]
  else
    goto <bb 315>; [INV]

  <bb 315> :
  _371 = strcmp (name, "xfree");
  if (_371 == 0)
    goto <bb 317>; [INV]
  else
    goto <bb 316>; [INV]

  <bb 316> :
  _372 = strcmp (name, "realloc");
  if (_372 == 0)
    goto <bb 317>; [INV]
  else
    goto <bb 330>; [INV]

  <bb 317> :
  stderr.1633_373 = stderr;
  __builtin_fwrite ("dot graph stmt start ", 1, 21, stderr.1633_373);

  <bb 318> :
  debug (u_stmt);

  <bb 319> :
  _374 = gimple_location_safe (u_stmt);
  warning_at (_374, 0, "use location");

  <bb 320> :
  stderr.1634_375 = stderr;
  __builtin_fwrite ("dot graph stmt end\n\n", 1, 20, stderr.1634_375);

  <bb 321> :
  freemod.1635_376 = freemod;
  if (freemod.1635_376 != 0)
    goto <bb 322>; [INV]
  else
    goto <bb 327>; [INV]

  <bb 322> :
  stderr.1636_377 = stderr;
  __builtin_fwrite ("dot graph target color desc", 1, 27, stderr.1636_377);

  <bb 323> :
  _378 = strcmp (name, "realloc");
  if (_378 == 0)
    goto <bb 324>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 324> :
  stderr.1637_379 = stderr;
  __builtin_fwrite ("red", 1, 3, stderr.1637_379);
  goto <bb 326>; [INV]

  <bb 325> :
  stderr.1638_380 = stderr;
  __builtin_fwrite ("green", 1, 5, stderr.1638_380);

  <bb 326> :
  stderr.1639_381 = stderr;
  __builtin_fwrite ("dot graph target color desend\n\n", 1, 31, stderr.1639_381);

  <bb 327> :
  _382 = strcmp (name, "realloc");
  if (_382 == 0)
    goto <bb 328>; [INV]
  else
    goto <bb 329>; [INV]

  <bb 328> :
  stderr.1640_383 = stderr;
  __builtin_fwrite ("If realloc() fails, the initial memory block will not be freed() ", 1, 65, stderr.1640_383);

  <bb 329> :
  goto <bb 334>; [INV]

  <bb 330> :
  stderr.1641_384 = stderr;
  __builtin_fwrite ("dot graph stmt start ", 1, 21, stderr.1641_384);

  <bb 331> :
  debug (u_stmt);

  <bb 332> :
  _385 = gimple_location_safe (u_stmt);
  warning_at (_385, 0, "use location");

  <bb 333> :
  stderr.1642_386 = stderr;
  __builtin_fwrite ("dot graph stmt end\n\n", 1, 20, stderr.1642_386);

  <bb 334> :
  goto <bb 344>; [INV]

  <bb 335> :
  debugmod.1643_387 = debugmod;
  if (debugmod.1643_387 != 0)
    goto <bb 336>; [INV]
  else
    goto <bb 340>; [INV]

  <bb 336> :
  stderr.1644_388 = stderr;
  __builtin_fwrite ("dot graph stmt start ", 1, 21, stderr.1644_388);

  <bb 337> :
  debug (u_stmt);

  <bb 338> :
  _389 = table_temp->last_stmt;
  debug (_389);

  <bb 339> :
  stderr.1645_390 = stderr;
  __builtin_fwrite ("dot graph stmt end\n\n", 1, 20, stderr.1645_390);

  <bb 340> :
  stderr.1646_391 = stderr;
  __builtin_fwrite ("dot graph stmt start ", 1, 21, stderr.1646_391);

  <bb 341> :
  debug (u_stmt);

  <bb 342> :
  _392 = gimple_location_safe (u_stmt);
  warning_at (_392, 0, "use location");

  <bb 343> :
  stderr.1647_393 = stderr;
  __builtin_fwrite ("dot graph stmt end\n\n", 1, 20, stderr.1647_393);

  <bb 344> :
  relate_type = {CLOBBER};

  <bb 345> :
  _394 = user_tmp->target;
  if (_394 != 0B)
    goto <bb 346>; [INV]
  else
    goto <bb 487>; [INV]

  <bb 346> :
  _395 = gimple_code (u_stmt);
  retval.1648 = _395 == 8;
  if (retval.1648 != 0)
    goto <bb 347>; [INV]
  else
    goto <bb 354>; [INV]

  <bb 347> :
  D.257610 = gimple_call_fndecl (u_stmt);

  <bb 348> :
  _396 = D.257610;
  retval.1649 = _396 != 0B;
  if (retval.1649 != 0)
    goto <bb 349>; [INV]
  else
    goto <bb 354>; [INV]

  <bb 349> :
  D.257611 = gimple_call_fndecl (u_stmt);

  <bb 350> :
  _397 = D.257611;
  D.257612 = get_name (_397);

  <bb 351> :
  name = D.257612;
  if (name != 0B)
    goto <bb 352>; [INV]
  else
    goto <bb 353>; [INV]

  <bb 352> :
  stderr.1650_398 = stderr;
  fprintf (stderr.1650_398, "this stmt call this function :%s\n", name);
  goto <bb 354>; [INV]

  <bb 353> :
  stderr.1651_399 = stderr;
  fprintf (stderr.1651_399, "this stmt call this function :null\n", name);

  <bb 354> :
  _400 = gimple_code (u_stmt);
  retval.1652 = _400 == 18;
  if (retval.1652 != 0)
    goto <bb 355>; [INV]
  else
    goto <bb 356>; [INV]

  <bb 355> :
  find_phistmt = 1;
  stderr.1653_401 = stderr;
  fprintf (stderr.1653_401, "this stmt have mutiple branch ---%s-----\n", name);

  <bb 356> :
  if (name != 0B)
    goto <bb 357>; [INV]
  else
    goto <bb 367>; [INV]

  <bb 357> :
  _402 = strcmp (name, "realloc");
  if (_402 == 0)
    goto <bb 364>; [INV]
  else
    goto <bb 358>; [INV]

  <bb 358> :
  _403 = strcmp (name, "malloc");
  if (_403 == 0)
    goto <bb 364>; [INV]
  else
    goto <bb 359>; [INV]

  <bb 359> :
  _404 = strcmp (name, "xmalloc");
  if (_404 == 0)
    goto <bb 364>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 360> :
  _405 = strcmp (name, "calloc");
  if (_405 == 0)
    goto <bb 364>; [INV]
  else
    goto <bb 361>; [INV]

  <bb 361> :
  _406 = strcmp (name, "xcalloc");
  if (_406 == 0)
    goto <bb 364>; [INV]
  else
    goto <bb 362>; [INV]

  <bb 362> :
  _407 = strcmp (name, "strdup");
  if (_407 == 0)
    goto <bb 364>; [INV]
  else
    goto <bb 363>; [INV]

  <bb 363> :
  _408 = strcmp (name, "xstrdup");
  if (_408 == 0)
    goto <bb 364>; [INV]
  else
    goto <bb 365>; [INV]

  <bb 364> :
  IS_MALLOC_FUCNTION.1654_409 = IS_MALLOC_FUCNTION;
  find_mallocstmt = (int) IS_MALLOC_FUCNTION.1654_409;
  goto <bb 366>; [INV]

  <bb 365> :
  IS_OTHRER_FUCNTION.1655_410 = IS_OTHRER_FUCNTION;
  find_mallocstmt = (int) IS_OTHRER_FUCNTION.1655_410;

  <bb 366> :

  <bb 367> :
  calleetype.1656_411 = (unsigned int) calleetype;
  FUNCITON_HEAP.1657_412 = FUNCITON_HEAP;
  if (calleetype.1656_411 == FUNCITON_HEAP.1657_412)
    goto <bb 368>; [INV]
  else
    goto <bb 369>; [INV]

  <bb 368> :
  function_tree.1658_413 = function_tree;
  debug_tree (function_tree.1658_413);
  goto <bb 387>; [INV]

  <bb 369> :
  calleetype.1659_414 = (unsigned int) calleetype;
  FUNCITON_THREAD.1660_415 = FUNCITON_THREAD;
  if (calleetype.1659_414 == FUNCITON_THREAD.1660_415)
    goto <bb 370>; [INV]
  else
    goto <bb 387>; [INV]

  <bb 370> :
  threadmod.1661_416 = threadmod;
  _417 = (int) threadmod.1661_416;
  if (_417 == 1)
    goto <bb 371>; [INV]
  else
    goto <bb 387>; [INV]

  <bb 371> :
  _418 = gimple_code (finalstmt);
  retval.1662 = _418 == 6;
  if (retval.1662 != 0)
    goto <bb 372>; [INV]
  else
    goto <bb 387>; [INV]

  <bb 372> :
  D.257613 = gimple_assign_lhs (finalstmt);

  <bb 373> :
  _419 = D.257613;
  _420 = BIT_FIELD_REF <_419->base, 8, 24>;
  _421 = _420 & 4;
  _422 = _421 == 0;
  _423 = (int) _422;
  retval.1663 = _423 == 1;
  if (retval.1663 != 0)
    goto <bb 374>; [INV]
  else
    goto <bb 379>; [INV]

  <bb 374> :
  stderr.1664_424 = stderr;
  __builtin_fwrite (" \n LOCAL VARIBALE  \n", 1, 20, stderr.1664_424);

  <bb 375> :
  debug_gimple_stmt (finalstmt);

  <bb 376> :
  _425 = gimple_location_safe (finalstmt);
  warning_at (_425, 0, "use location");

  <bb 377> :
  stderr.1665_426 = stderr;
  __builtin_fwrite (" \n LOCAL VARIBALE  \n", 1, 20, stderr.1665_426);

  <bb 378> :
  // predicted unlikely by continue predictor.
  goto <bb 488>; [INV]

  <bb 379> :
  stderr.1666_427 = stderr;
  __builtin_fwrite ("\n ================== warring  ================== \n", 1, 50, stderr.1666_427);

  <bb 380> :
  stderr.1667_428 = stderr;
  __builtin_fwrite ("\x1b[40;35m warring thread fucntion detction is on \x1b[0m\n", 1, 53, stderr.1667_428);

  <bb 381> :
  stderr.1668_429 = stderr;
  __builtin_fwrite ("\x1b[40;35m Detect GLOBAL VARIBALE \x1b[0m\n", 1, 37, stderr.1668_429);

  <bb 382> :
  debug_gimple_stmt (finalstmt);

  <bb 383> :
  _430 = gimple_location_safe (finalstmt);
  warning_at (_430, 0, "use location");

  <bb 384> :
  stderr.1669_431 = stderr;
  __builtin_fwrite ("\x1b[40;35m thread job function \x1b[0m\n", 1, 34, stderr.1669_431);

  <bb 385> :
  stderr.1670_432 = stderr;
  __builtin_fwrite ("\x1b[40;35m this stmt possible have Race Condition \xe3\x80\x82 \x1b[0m\n", 1, 57, stderr.1670_432);

  <bb 386> :
  stderr.1671_433 = stderr;
  __builtin_fwrite ("\n ================== warring  ================== \n", 1, 50, stderr.1671_433);

  <bb 387> :
  _434 = gimple_code (u_stmt);
  if (_434 == 8)
    goto <bb 388>; [INV]
  else
    goto <bb 391>; [INV]

  <bb 388> :
  find_mallocstmt.1674_435 = (unsigned int) find_mallocstmt;
  IS_MALLOC_FUCNTION.1675_436 = IS_MALLOC_FUCNTION;
  if (find_mallocstmt.1674_435 == IS_MALLOC_FUCNTION.1675_436)
    goto <bb 390>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 389> :
  find_mallocstmt.1676_437 = (unsigned int) find_mallocstmt;
  IS_OTHRER_FUCNTION.1677_438 = IS_OTHRER_FUCNTION;
  if (find_mallocstmt.1676_437 == IS_OTHRER_FUCNTION.1677_438)
    goto <bb 390>; [INV]
  else
    goto <bb 391>; [INV]

  <bb 390> :
  iftmp.1673 = 1;
  goto <bb 392>; [INV]

  <bb 391> :
  iftmp.1673 = 0;

  <bb 392> :
  retval.1672 = iftmp.1673;
  if (retval.1672 != 0)
    goto <bb 393>; [INV]
  else
    goto <bb 487>; [INV]

  <bb 393> :
  IS_MALLOC_FUCNTION.1678_439 = IS_MALLOC_FUCNTION;
  find_mallocstmt = (int) IS_MALLOC_FUCNTION.1678_439;
  _440 = user_tmp->target;
  def_stmt = _440->ssa_name.def_stmt;
  D.257614 = gimple_call_fn (u_stmt);

  <bb 394> :
  _441 = D.257614;
  D.257615 = get_name (_441);

  <bb 395> :
  name = D.257615;
  if (name != 0B)
    goto <bb 396>; [INV]
  else
    goto <bb 487>; [INV]

  <bb 396> :
  _442 = strcmp (name, "free");
  if (_442 == 0)
    goto <bb 399>; [INV]
  else
    goto <bb 397>; [INV]

  <bb 397> :
  _443 = strcmp (name, "xfree");
  if (_443 == 0)
    goto <bb 399>; [INV]
  else
    goto <bb 398>; [INV]

  <bb 398> :
  _444 = strcmp (name, "realloc");
  if (_444 == 0)
    goto <bb 399>; [INV]
  else
    goto <bb 409>; [INV]

  <bb 399> :
  free_type.stmt = u_stmt;
  std::vector<free_type>::push_back (&free_array, &free_type);

  <bb 400> :
  stderr.1679_445 = stderr;
  __builtin_fwrite ("\n ================== find free stmt ================== \n", 1, 56, stderr.1679_445);

  <bb 401> :
  debug (u_stmt);

  <bb 402> :
  _446 = gimple_location_safe (u_stmt);
  warning_at (_446, 0, "use location");

  <bb 403> :
  _447 = strcmp (name, "realloc");
  if (_447 == 0)
    goto <bb 404>; [INV]
  else
    goto <bb 406>; [INV]

  <bb 404> :
  find_freestmt.1680_448 = find_freestmt;
  _449 = find_freestmt.1680_448 + 1;
  find_freestmt = _449;
  find_freestmt.1681_450 = find_freestmt;
  stderr.1682_451 = stderr;
  fprintf (stderr.1682_451, "\x1b[40;32m    FIND REALLOC STMT count:%d name:%s \x1b[0m\n", find_freestmt.1681_450, name);

  <bb 405> :
  find_freestmt.1683_452 = find_freestmt;
  stderr.1684_453 = stderr;
  fprintf (stderr.1684_453, "\x1b[40;32m    this stmt possiable free memory \x1b[0m\n", find_freestmt.1683_452, name);
  goto <bb 407>; [INV]

  <bb 406> :
  find_freestmt.1685_454 = find_freestmt;
  _455 = find_freestmt.1685_454 + 1;
  find_freestmt = _455;
  find_freestmt.1686_456 = find_freestmt;
  stderr.1687_457 = stderr;
  fprintf (stderr.1687_457, "\x1b[40;32m    HAS FREE STMT count:%d name:%s \x1b[0m\n", find_freestmt.1686_456, name);

  <bb 407> :
  stderr.1688_458 = stderr;
  __builtin_fwrite ("\n ================== find free stmt ================== \n", 1, 56, stderr.1688_458);

  <bb 408> :
  goto <bb 486>; [INV]

  <bb 409> :
  _459 = strcmp (name, "pthread_create");
  if (_459 == 0)
    goto <bb 410>; [INV]
  else
    goto <bb 466>; [INV]

  <bb 410> :
  table_temp->last_stmt = u_stmt;
  FUNCITON_THREAD.1689_460 = FUNCITON_THREAD;
  FUNCITON_THREAD.1690_461 = (int) FUNCITON_THREAD.1689_460;
  table_temp->swap_type = FUNCITON_THREAD.1690_461;
  _462 = table_temp->swap_type;
  _463 = (unsigned int) _462;
  FUNCITON_THREAD.1691_464 = FUNCITON_THREAD;
  if (_463 == FUNCITON_THREAD.1691_464)
    goto <bb 411>; [INV]
  else
    goto <bb 486>; [INV]

  <bb 411> :
  stderr.1692_465 = stderr;
  __builtin_fwrite ("\n ================== find pthread stmt ================== \n", 1, 59, stderr.1692_465);

  <bb 412> :
  debug (u_stmt);

  <bb 413> :
  _466 = gimple_location_safe (u_stmt);
  warning_at (_466, 0, "use location");

  <bb 414> :
  stderr.1693_467 = stderr;
  __builtin_fwrite ("\x1b[40;32m    FIND PTHREAD_CREATED STMT  \x1b[0m\n", 1, 44, stderr.1693_467);

  <bb 415> :
  stderr.1694_468 = stderr;
  __builtin_fwrite ("\n ================== pre_pthread_detched ================== \n", 1, 61, stderr.1694_468);

  <bb 416> :
  _469 = table_temp->last_stmt;
  D.257616 = gimple_call_num_args (_469);

  <bb 417> :
  _470 = D.257616;
  retval.1695 = _470 != 0;
  if (retval.1695 != 0)
    goto <bb 418>; [INV]
  else
    goto <bb 423>; [INV]

  <bb 418> :
  _471 = table_temp->last_stmt;
  retval.1696 = is_gimple_assign (_471);
  if (retval.1696 != 0)
    goto <bb 419>; [INV]
  else
    goto <bb 421>; [INV]

  <bb 419> :
  _472 = table_temp->last_stmt;
  D.257617 = gimple_assign_lhs (_472);

  <bb 420> :
  _473 = D.257617;
  trace_function_path (_473, -1, 0B, &find_pthread_detched);
  goto <bb 423>; [INV]

  <bb 421> :
  _474 = table_temp->last_stmt;
  D.257618 = gimple_call_arg (_474, 2);

  <bb 422> :
  _475 = D.257618;
  _476 = _475->exp.operands[0];
  trace_function_path (_476, -1, 0B, &find_pthread_detched);

  <bb 423> :
  stderr.1697_477 = stderr;
  __builtin_fwrite ("\n ================== pre_pthread_detched end ================== \n", 1, 65, stderr.1697_477);

  <bb 424> :
  _478 = table_temp->last_stmt;
  D.257619 = gimple_call_arg (_478, 3);

  <bb 425> :
  findtree = D.257619;
  retval.1698 = is_gimple_call (u_stmt);
  if (retval.1698 != 0)
    goto <bb 426>; [INV]
  else
    goto <bb 433>; [INV]

  <bb 426> :
  D.257620 = gimple_call_num_args (u_stmt);

  <bb 427> :
  _479 = D.257620;
  retval.1699 = _479 != 0;
  if (retval.1699 != 0)
    goto <bb 428>; [INV]
  else
    goto <bb 433>; [INV]

  <bb 428> :
  D.257621 = gimple_call_arg (u_stmt, 3);

  <bb 429> :
  findtree = D.257621;
  _480 = findtree->base.code;
  if (_480 == 131)
    goto <bb 430>; [INV]
  else
    goto <bb 431>; [INV]

  <bb 430> :
  _481 = findtree->exp.operands[0];
  function_tree.1700_482 = function_tree;
  trace_function_path (function_tree.1700_482, -1, _481, &find_freestmt);
  goto <bb 433>; [INV]

  <bb 431> :
  _483 = findtree->base.code;
  if (_483 == 153)
    goto <bb 432>; [INV]
  else
    goto <bb 433>; [INV]

  <bb 432> :
  function_tree.1701_484 = function_tree;
  trace_function_path (function_tree.1701_484, -1, findtree, &find_freestmt);

  <bb 433> :
  if (findtree != 0B)
    goto <bb 434>; [INV]
  else
    goto <bb 442>; [INV]

  <bb 434> :
  _485 = table_temp->last_stmt;
  D.257622 = gimple_call_num_args (_485);

  <bb 435> :
  _486 = D.257622;
  if (_486 != 0)
    goto <bb 436>; [INV]
  else
    goto <bb 438>; [INV]

  <bb 436> :
  _487 = table_temp->last_stmt;
  _488 = is_gimple_call (_487);
  if (_488 != 0)
    goto <bb 437>; [INV]
  else
    goto <bb 438>; [INV]

  <bb 437> :
  iftmp.1703 = 1;
  goto <bb 439>; [INV]

  <bb 438> :
  iftmp.1703 = 0;

  <bb 439> :
  retval.1702 = iftmp.1703;
  if (retval.1702 != 0)
    goto <bb 440>; [INV]
  else
    goto <bb 442>; [INV]

  <bb 440> :
  _489 = table_temp->last_stmt;
  D.257623 = gimple_call_arg (_489, 2);

  <bb 441> :
  _490 = D.257623;
  _491 = _490->exp.operands[0];
  trace_function_path (_491, 0, findtree, &find_freestmt);

  <bb 442> :
  _492 = table_temp->swap_stmt;
  if (_492 != 0B)
    goto <bb 443>; [INV]
  else
    goto <bb 446>; [INV]

  <bb 443> :
  _493 = table_temp->swap_stmt;
  D.257624 = gimple_call_num_args (_493);

  <bb 444> :
  _494 = D.257624;
  if (_494 != 0)
    goto <bb 445>; [INV]
  else
    goto <bb 446>; [INV]

  <bb 445> :
  iftmp.1705 = 1;
  goto <bb 447>; [INV]

  <bb 446> :
  iftmp.1705 = 0;

  <bb 447> :
  retval.1704 = iftmp.1705;
  if (retval.1704 != 0)
    goto <bb 448>; [INV]
  else
    goto <bb 456>; [INV]

  <bb 448> :
  stderr.1706_495 = stderr;
  __builtin_fwrite ("\n ================== pre_pthread_detched ================== \n", 1, 61, stderr.1706_495);

  <bb 449> :
  _496 = table_temp->swap_stmt;
  D.257625 = gimple_call_arg (_496, 2);

  <bb 450> :
  _497 = D.257625;
  _498 = _497->exp.operands[0];
  trace_function_path (_498, -1, 0B, &find_pthread_detched);

  <bb 451> :
  stderr.1707_499 = stderr;
  __builtin_fwrite ("\n ================== pre_pthread_detched end ================== \n", 1, 65, stderr.1707_499);

  <bb 452> :
  _500 = table_temp->swap_stmt;
  D.257626 = gimple_call_arg (_500, 3);

  <bb 453> :
  findtree = D.257626;
  if (findtree != 0B)
    goto <bb 454>; [INV]
  else
    goto <bb 456>; [INV]

  <bb 454> :
  _501 = table_temp->swap_stmt;
  D.257627 = gimple_call_arg (_501, 2);

  <bb 455> :
  _502 = D.257627;
  _503 = _502->exp.operands[0];
  trace_function_path (_503, 0, findtree, &find_freestmt);

  <bb 456> :
  find_pthread_detched.1708_504 = find_pthread_detched;
  if (find_pthread_detched.1708_504 == 0)
    goto <bb 457>; [INV]
  else
    goto <bb 463>; [INV]

  <bb 457> :
  _505 = table_temp->pthread_type;
  if (_505 == 0)
    goto <bb 458>; [INV]
  else
    goto <bb 459>; [INV]

  <bb 458> :
  iftmp.1709 = "CREATE_JOINABLE";
  goto <bb 460>; [INV]

  <bb 459> :
  iftmp.1709 = "CREATE_DETACHED";

  <bb 460> :
  stderr.1710_506 = stderr;
  fprintf (stderr.1710_506, "\x1b[40;32m    FIND PTHREAD_CREATED TYPE is %s  \x1b[0m\n", iftmp.1709);

  <bb 461> :
  is_pthread_detched = 0;
  _507 = table_temp->pthread_type;
  if (_507 == 1)
    goto <bb 462>; [INV]
  else
    goto <bb 465>; [INV]

  <bb 462> :
  is_pthread_detched = 1;
  goto <bb 465>; [INV]

  <bb 463> :
  stderr.1711_508 = stderr;
  __builtin_fwrite ("\x1b[40;32m    FIND PTHREAD_CREATED TYPE is CREATE_DETACHED  \x1b[0m\n", 1, 63, stderr.1711_508);

  <bb 464> :
  is_pthread_detched = 1;

  <bb 465> :
  stderr.1712_509 = stderr;
  __builtin_fwrite ("\n ================== find pthread stmt ================== \n", 1, 59, stderr.1712_509);
  goto <bb 486>; [INV]

  <bb 466> :
  _510 = strcmp (name, "pthread_join");
  if (_510 == 0)
    goto <bb 467>; [INV]
  else
    goto <bb 470>; [INV]

  <bb 467> :
  _511 = table_temp->swap_type;
  _512 = (unsigned int) _511;
  FUNCITON_THREAD.1713_513 = FUNCITON_THREAD;
  if (_512 == FUNCITON_THREAD.1713_513)
    goto <bb 468>; [INV]
  else
    goto <bb 486>; [INV]

  <bb 468> :
  stderr.1714_514 = stderr;
  __builtin_fwrite ("\x1b[40;32m    FIND PTHREAD_JOIN \x1b[0m\n", 1, 35, stderr.1714_514);

  <bb 469> :
  find_pthread_join = find_pthread_join + 1;
  goto <bb 486>; [INV]

  <bb 470> :
  freecount = find_freestmt;
  if (name != 0B)
    goto <bb 471>; [INV]
  else
    goto <bb 486>; [INV]

  <bb 471> :
  _515 = strcmp (name, "realloc");
  if (_515 == 0)
    goto <bb 486>; [INV]
  else
    goto <bb 472>; [INV]

  <bb 472> :
  _516 = strcmp (name, "malloc");
  if (_516 == 0)
    goto <bb 486>; [INV]
  else
    goto <bb 473>; [INV]

  <bb 473> :
  _517 = strcmp (name, "xmalloc");
  if (_517 == 0)
    goto <bb 486>; [INV]
  else
    goto <bb 474>; [INV]

  <bb 474> :
  _518 = strcmp (name, "calloc");
  if (_518 == 0)
    goto <bb 486>; [INV]
  else
    goto <bb 475>; [INV]

  <bb 475> :
  _519 = strcmp (name, "xcalloc");
  if (_519 == 0)
    goto <bb 486>; [INV]
  else
    goto <bb 476>; [INV]

  <bb 476> :
  _520 = strcmp (name, "strdup");
  if (_520 == 0)
    goto <bb 486>; [INV]
  else
    goto <bb 477>; [INV]

  <bb 477> :
  _521 = strcmp (name, "xstrdup");
  if (_521 == 0)
    goto <bb 486>; [INV]
  else
    goto <bb 478>; [INV]

  <bb 478> :
  _522 = strcmp (name, "fprintf");
  if (_522 == 0)
    goto <bb 486>; [INV]
  else
    goto <bb 479>; [INV]

  <bb 479> :
  IS_MALLOC_FUCNTION.1715_523 = IS_MALLOC_FUCNTION;
  find_mallocstmt = (int) IS_MALLOC_FUCNTION.1715_523;
  stderr.1716_524 = stderr;
  fprintf (stderr.1716_524, "trace fucntion name:%s \n", name);

  <bb 480> :
  _525 = table_temp->target;
  D.257628 = gimple_call_fndecl (u_stmt);

  <bb 481> :
  _526 = D.257628;
  trace_function_path (_526, 0, _525, &find_freestmt);

  <bb 482> :
  stderr.1717_527 = stderr;
  __builtin_fwrite ("\n ================== trace ================== \n", 1, 47, stderr.1717_527);

  <bb 483> :
  find_freestmt.1718_528 = find_freestmt;
  stderr.1719_529 = stderr;
  fprintf (stderr.1719_529, "trace fucntion free:%d \n", find_freestmt.1718_528);

  <bb 484> :
  find_freestmt.1720_530 = find_freestmt;
  if (freecount < find_freestmt.1720_530)
    goto <bb 485>; [INV]
  else
    goto <bb 486>; [INV]

  <bb 485> :
  free_type.stmt = u_stmt;
  std::vector<free_type>::push_back (&free_array, &free_type);

  <bb 486> :

  <bb 487> :
  free_type = {CLOBBER};
  goto <bb 489>; [INV]

  <bb 488> :
  free_type = {CLOBBER};

  <bb 489> :
  user_tmp = user_tmp->next;
  if (user_tmp != 0B)
    goto <bb 490>; [INV]
  else
    goto <bb 491>; [INV]

  <bb 490> :
  iftmp.1721 = user_tmp->stmt;
  goto <bb 492>; [INV]

  <bb 491> :
  iftmp.1721 = 0B;

  <bb 492> :
  u_stmt = iftmp.1721;

  <bb 493> :
  if (user_tmp != 0B)
    goto <bb 114>; [INV]
  else
    goto <bb 494>; [INV]

  <bb 494> :
  samefucntioncheck.1722_531 = samefucntioncheck;
  if (samefucntioncheck.1722_531 != 0)
    goto <bb 495>; [INV]
  else
    goto <bb 533>; [INV]

  <bb 495> :
  debugmod.1723_532 = debugmod;
  if (debugmod.1723_532 != 0)
    goto <bb 496>; [INV]
  else
    goto <bb 533>; [INV]

  <bb 496> :
  lastbasicblock = -1;
  _533 = &table_temp->target;
  D.257632 = hash_map<tree_node*, function_relate_array>::get (function_maxbb_collect, _533);

  <bb 497> :
  _534 = D.257632;
  retval.1724 = _534 != 0B;
  if (retval.1724 != 0)
    goto <bb 498>; [INV]
  else
    goto <bb 533>; [INV]

  <bb 498> :
  _535 = &table_temp->target;
  D.257633 = hash_map<tree_node*, function_relate_array>::get (function_maxbb_collect, _535);

  <bb 499> :
  _536 = D.257633;
  function_relate_array::operator= (&maxbb_array, _536);

  <bb 500> :
  std::vector<relate_type>::operator= (&maxbb_type_array, &maxbb_array.relate_type_array);

  <bb 501> :
  D.257634 = operator new (48);

  <bb 502> :
  D.202686 = D.257634;
  hash_map<tree_node*, int>::hash_map (D.202686, 13, 0, 1, 0);

  <bb 503> :
  function_maxbasicblock_collect = D.202686;
  i = 0;
  goto <bb 513>; [INV]

  <bb 504> :
  _537 = (long unsigned int) i;
  _538 = std::vector<relate_type>::operator[] (&maxbb_type_array, _537);
  _539 = &_538->now_basicblock;
  _540 = (long unsigned int) i;
  _541 = std::vector<relate_type>::operator[] (&maxbb_type_array, _540);
  _542 = &_541->relate_funtree;
  hash_map<tree_node*, int>::put (function_maxbasicblock_collect, _542, _539);

  <bb 505> :
  j = 0;
  goto <bb 511>; [INV]

  <bb 506> :
  _543 = (long unsigned int) i;
  _544 = std::vector<relate_type>::operator[] (&maxbb_type_array, _543);
  _545 = _544->relate_funtree;
  _546 = (long unsigned int) j;
  _547 = std::vector<relate_type>::operator[] (&maxbb_type_array, _546);
  _548 = _547->relate_funtree;
  retval.1725 = _545 == _548;
  if (retval.1725 != 0)
    goto <bb 507>; [INV]
  else
    goto <bb 510>; [INV]

  <bb 507> :
  _549 = (long unsigned int) i;
  _550 = std::vector<relate_type>::operator[] (&maxbb_type_array, _549);
  _551 = &_550->relate_funtree;
  D.257636 = hash_map<tree_node*, int>::get (function_maxbasicblock_collect, _551);

  <bb 508> :
  _552 = D.257636;
  max_bb = *_552;
  _553 = (long unsigned int) j;
  _554 = std::vector<relate_type>::operator[] (&maxbb_type_array, _553);
  _555 = _554->now_basicblock;
  retval.1726 = max_bb <= _555;
  if (retval.1726 != 0)
    goto <bb 509>; [INV]
  else
    goto <bb 510>; [INV]

  <bb 509> :
  _556 = (long unsigned int) j;
  _557 = std::vector<relate_type>::operator[] (&maxbb_type_array, _556);
  _558 = &_557->now_basicblock;
  _559 = (long unsigned int) j;
  _560 = std::vector<relate_type>::operator[] (&maxbb_type_array, _559);
  _561 = &_560->relate_funtree;
  hash_map<tree_node*, int>::put (function_maxbasicblock_collect, _561, _558);

  <bb 510> :
  j = j + 1;

  <bb 511> :
  _562 = (long unsigned int) j;
  _563 = std::vector<relate_type>::size (&maxbb_type_array);
  retval.1727 = _562 < _563;
  if (retval.1727 != 0)
    goto <bb 506>; [INV]
  else
    goto <bb 512>; [INV]

  <bb 512> :
  i = i + 1;

  <bb 513> :
  _564 = (long unsigned int) i;
  _565 = std::vector<relate_type>::size (&maxbb_type_array);
  retval.1728 = _564 < _565;
  if (retval.1728 != 0)
    goto <bb 504>; [INV]
  else
    goto <bb 514>; [INV]

  <bb 514> :
  it_i._M_current = 0B;
  it_i = std::vector<relate_type>::begin (&maxbb_type_array);
  goto <bb 528>; [INV]

  <bb 515> :
  _566 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _567 = &_566->relate_funtree;
  D.257637 = hash_map<tree_node*, int>::get (function_maxbasicblock_collect, _567);

  <bb 516> :
  _568 = D.257637;
  max_bb = *_568;
  _569 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _570 = _569->now_basicblock;
  retval.1729 = max_bb == _570;
  if (retval.1729 != 0)
    goto <bb 517>; [INV]
  else
    goto <bb 527>; [INV]

  <bb 517> :
  _571 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _572 = _571->relate_tree;
  def_stmt = _572->ssa_name.def_stmt;
  stderr.1730_573 = stderr;
  __builtin_fwrite ("dot graph target basicblock start ", 1, 34, stderr.1730_573);

  <bb 518> :
  _574 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _575 = _574->stmt;
  _576 = gimple_bb (_575);
  _577 = _576->index;
  _578 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _579 = _578->relate_funtree;
  D.257638 = get_name (_579);

  <bb 519> :
  _580 = D.257638;
  stderr.1731_581 = stderr;
  fprintf (stderr.1731_581, "from %s basic block %d", _580, _577);

  <bb 520> :
  stderr.1732_582 = stderr;
  __builtin_fwrite ("dot graph target basicblock en1\n\n", 1, 33, stderr.1732_582);

  <bb 521> :
  _583 = rand ();
  x = (long unsigned int) _583;
  stderr.1733_584 = stderr;
  __builtin_fwrite ("dot graph arrow", 1, 15, stderr.1733_584);

  <bb 522> :
  stderr.1734_585 = stderr;
  fprintf (stderr.1734_585, "subgraph cluster_%lu dot graph subgraph  ", x);

  <bb 523> :
  _586 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _587 = _586->stmt;
  debug (_587);

  <bb 524> :
  _588 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _589 = _588->relate_tree;
  _590 = _589->base.code;
  retval.1735 = _590 == 153;
  if (retval.1735 != 0)
    goto <bb 525>; [INV]
  else
    goto <bb 526>; [INV]

  <bb 525> :
  debug (def_stmt);

  <bb 526> :
  stderr.1736_591 = stderr;
  __builtin_fwrite ("dot graph subgrapend\n\n", 1, 22, stderr.1736_591);

  <bb 527> :
  __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator++ (&it_i);

  <bb 528> :
  D.202820 = std::vector<relate_type>::end (&maxbb_type_array);
  retval.1737 = __gnu_cxx::operator!=<relate_type*, std::vector<relate_type> > (&it_i, &D.202820);
  D.202820 = {CLOBBER};
  if (retval.1737 != 0)
    goto <bb 515>; [INV]
  else
    goto <bb 529>; [INV]

  <bb 529> :
  function_maxbb_collect.1738 = function_maxbb_collect;
  if (function_maxbb_collect.1738 != 0B)
    goto <bb 530>; [INV]
  else
    goto <bb 531>; [INV]

  <bb 530> :
  hash_map<tree_node*, function_relate_array>::~hash_map (function_maxbb_collect.1738);
  operator delete (function_maxbb_collect.1738, 48);

  <bb 531> :
  it_i = {CLOBBER};
  goto <bb 533>; [INV]

  <bb 532> :
  PTABLE_IS_NULL.1739_592 = PTABLE_IS_NULL;
  find_mallocstmt = (int) PTABLE_IS_NULL.1739_592;

  <bb 533> :
  relatemod.1740_593 = relatemod;
  if (relatemod.1740_593 != 0)
    goto <bb 534>; [INV]
  else
    goto <bb 553>; [INV]

  <bb 534> :
  debugmod.1741_594 = debugmod;
  if (debugmod.1741_594 != 0)
    goto <bb 535>; [INV]
  else
    goto <bb 553>; [INV]

  <bb 535> :
  std::vector<relate_type>::vector (&relate_type_array);
  function_relate_array::function_relate_array (&fun_array);
  function_relate_collect.1743_595 = function_relate_collect;
  _596 = &table_temp->target;
  D.257640 = hash_map<tree_node*, function_relate_array>::get (function_relate_collect.1743_595, _596);

  <bb 536> :
  _597 = D.257640;
  retval.1742 = _597 != 0B;
  if (retval.1742 != 0)
    goto <bb 537>; [INV]
  else
    goto <bb 552>; [INV]

  <bb 537> :
  function_relate_collect.1744_598 = function_relate_collect;
  _599 = &table_temp->target;
  D.257641 = hash_map<tree_node*, function_relate_array>::get (function_relate_collect.1744_598, _599);

  <bb 538> :
  _600 = D.257641;
  function_relate_array::operator= (&fun_array, _600);

  <bb 539> :
  std::vector<relate_type>::operator= (&relate_type_array, &fun_array.relate_type_array);

  <bb 540> :
  k = 0;
  goto <bb 551>; [INV]

  <bb 541> :
  _601 = rand ();
  x = (long unsigned int) _601;
  stderr.1745_602 = stderr;
  __builtin_fwrite ("dot graph start relate for1", 1, 27, stderr.1745_602);

  <bb 542> :
  _603 = (long unsigned int) k;
  _604 = std::vector<relate_type>::operator[] (&relate_type_array, _603);
  _605 = _604->now_fucntion;
  stderr.1746_606 = stderr;
  fprintf (stderr.1746_606, "ID : %lu\n", _605);

  <bb 543> :
  _607 = (long unsigned int) k;
  _608 = std::vector<relate_type>::operator[] (&relate_type_array, _607);
  _609 = _608->stmt;
  _610 = gimple_bb (_609);
  _611 = _610->index;
  _612 = (long unsigned int) k;
  _613 = std::vector<relate_type>::operator[] (&relate_type_array, _612);
  _614 = _613->relate_funtree;
  D.257642 = get_name (_614);

  <bb 544> :
  _615 = D.257642;
  stderr.1747_616 = stderr;
  fprintf (stderr.1747_616, "from %s basic block %d", _615, _611);

  <bb 545> :
  stderr.1748_617 = stderr;
  __builtin_fwrite ("dot graph end relate end\n\n", 1, 26, stderr.1748_617);

  <bb 546> :
  _618 = (long unsigned int) k;
  _619 = std::vector<relate_type>::operator[] (&relate_type_array, _618);
  _620 = _619->now_fucntion;
  _621 = (long unsigned int) k;
  _622 = std::vector<relate_type>::operator[] (&relate_type_array, _621);
  _623 = _622->now_stmt;
  stderr.1749_624 = stderr;
  fprintf (stderr.1749_624, "subgraph cluster_%lu dot graph subgraph  start ID : %lu stmt(relate) \xef\xbc\x8c Tree ID : %lu : ", x, _623, _620);

  <bb 547> :
  _625 = (long unsigned int) k;
  _626 = std::vector<relate_type>::operator[] (&relate_type_array, _625);
  _627 = _626->stmt;
  debug (_627);

  <bb 548> :
  _628 = (long unsigned int) k;
  _629 = std::vector<relate_type>::operator[] (&relate_type_array, _628);
  _630 = _629->stmt;
  _631 = gimple_location_safe (_630);
  warning_at (_631, 0, "use location");

  <bb 549> :
  stderr.1750_632 = stderr;
  __builtin_fwrite ("dot graph subgrapend\n\n", 1, 22, stderr.1750_632);

  <bb 550> :
  k = k + 1;

  <bb 551> :
  _633 = (long unsigned int) k;
  _634 = std::vector<relate_type>::size (&relate_type_array);
  retval.1751 = _633 < _634;
  if (retval.1751 != 0)
    goto <bb 541>; [INV]
  else
    goto <bb 552>; [INV]

  <bb 552> :
  function_relate_array::~function_relate_array (&fun_array);
  std::vector<relate_type>::~vector (&relate_type_array);
  relate_type_array = {CLOBBER};
  fun_array = {CLOBBER};

  <bb 553> :
  Looserulesfree.1752_635 = Looserulesfree;
  if (Looserulesfree.1752_635 != 0)
    goto <bb 554>; [INV]
  else
    goto <bb 584>; [INV]

  <bb 554> :
  stderr.1753_636 = stderr;
  __builtin_fwrite ("\n ================== Start Looserules free Check ================== \n", 1, 69, stderr.1753_636);

  <bb 555> :
  stderr.1754_637 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.1754_637);

  <bb 556> :
  stderr.1755_638 = stderr;
  __builtin_fwrite ("\x1b[40;35m   this module possiable false positives \x1b[0m\n", 1, 54, stderr.1755_638);

  <bb 557> :
  stderr.1756_639 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.1756_639);

  <bb 558> :
  _640 = table_temp->target;
  _641 = _640->base.code;
  if (_641 == 153)
    goto <bb 560>; [INV]
  else
    goto <bb 559>; [INV]

  <bb 559> :
  _642 = table_temp->target;
  _643 = _642->base.code;
  if (_643 == 165)
    goto <bb 560>; [INV]
  else
    goto <bb 584>; [INV]

  <bb 560> :
  _644 = table_temp->target;
  if (_644 != 0B)
    goto <bb 561>; [INV]
  else
    goto <bb 584>; [INV]

  <bb 561> :
  function_free_collect.1758_645 = function_free_collect;
  D.257646 = hash_map<tree_node*, function_free_array>::get (function_free_collect.1758_645, &function_tree);

  <bb 562> :
  _646 = D.257646;
  retval.1757 = _646 != 0B;
  if (retval.1757 != 0)
    goto <bb 563>; [INV]
  else
    goto <bb 584>; [INV]

  <bb 563> :
  function_free_collect.1759_647 = function_free_collect;
  D.257647 = hash_map<tree_node*, function_free_array>::get (function_free_collect.1759_647, &function_tree);

  <bb 564> :
  _648 = D.257647;
  function_free_array::function_free_array (&callerFunArray, _648);

  <bb 565> :
  std::vector<free_type>::vector (&callerRetTypearray, &callerFunArray.free_type_array);

  <bb 566> :
  k = 0;
  goto <bb 582>; [INV]

  <bb 567> :
  _649 = table_temp->target;
  _650 = (long unsigned int) k;
  _651 = std::vector<free_type>::operator[] (&callerRetTypearray, _650);
  _652 = _651->free_tree;
  D.257648 = ptr_derefs_may_alias_p (_652, _649);

  <bb 568> :
  retval.1760 = D.257648;
  if (retval.1760 != 0)
    goto <bb 569>; [INV]
  else
    goto <bb 581>; [INV]

  <bb 569> :
  _653 = (long unsigned int) k;
  _654 = std::vector<free_type>::operator[] (&callerRetTypearray, _653);
  _655 = _654->stmt;
  retval.1761 = is_gimple_call (_655);
  if (retval.1761 != 0)
    goto <bb 570>; [INV]
  else
    goto <bb 573>; [INV]

  <bb 570> :
  _656 = (long unsigned int) k;
  _657 = std::vector<free_type>::operator[] (&callerRetTypearray, _656);
  _658 = _657->stmt;
  D.257649 = gimple_call_fn (_658);

  <bb 571> :
  _659 = D.257649;
  D.257650 = get_name (_659);

  <bb 572> :
  name = D.257650;

  <bb 573> :
  _660 = strcmp (name, "realloc");
  if (_660 == 0)
    goto <bb 574>; [INV]
  else
    goto <bb 576>; [INV]

  <bb 574> :
  stderr.1762_661 = stderr;
  __builtin_fwrite ("\x1b[40;35m <Looserules> find realloc stmt free same pointer \x1b[0m\n", 1, 63, stderr.1762_661);

  <bb 575> :
  stderr.1763_662 = stderr;
  __builtin_fwrite ("*/If realloc() fails, the initial memory block will not be freed() */", 1, 69, stderr.1763_662);
  goto <bb 577>; [INV]

  <bb 576> :
  stderr.1764_663 = stderr;
  __builtin_fwrite ("\x1b[40;35m <Looserules> find free stmt free same pointer \x1b[0m\n", 1, 60, stderr.1764_663);

  <bb 577> :
  _664 = (long unsigned int) k;
  _665 = std::vector<free_type>::operator[] (&callerRetTypearray, _664);
  _666 = _665->stmt;
  debug_gimple_stmt (_666);

  <bb 578> :
  _667 = (long unsigned int) k;
  _668 = std::vector<free_type>::operator[] (&callerRetTypearray, _667);
  _669 = _668->stmt;
  _670 = gimple_location_safe (_669);
  warning_at (_670, 0, "use location");

  <bb 579> :
  free_type::free_type (&free_type);
  _671 = (long unsigned int) k;
  _672 = std::vector<free_type>::operator[] (&callerRetTypearray, _671);
  _673 = _672->stmt;
  free_type.stmt = _673;
  free_type.Looserulesfree = 1;
  std::vector<free_type>::push_back (&free_array, &free_type);

  <bb 580> :
  find_Looserulesfreestmt = find_Looserulesfreestmt + 1;
  free_type = {CLOBBER};

  <bb 581> :
  k = k + 1;

  <bb 582> :
  _674 = (long unsigned int) k;
  _675 = std::vector<free_type>::size (&callerRetTypearray);
  retval.1765 = _674 < _675;
  if (retval.1765 != 0)
    goto <bb 567>; [INV]
  else
    goto <bb 583>; [INV]

  <bb 583> :
  std::vector<free_type>::~vector (&callerRetTypearray);
  function_free_array::~function_free_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 584> :
  useafterfree.1766_676 = useafterfree;
  if (useafterfree.1766_676 != 0)
    goto <bb 585>; [INV]
  else
    goto <bb 669>; [INV]

  <bb 585> :
  treeGimpleArray.1767_677 = treeGimpleArray;
  _678 = &table_temp->target;
  D.257655 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.1767_677, _678);

  <bb 586> :
  user_tmp = D.257655;
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  stderr.1768_679 = stderr;
  __builtin_fwrite ("\n ================== Start Use after free Check ================== \n", 1, 68, stderr.1768_679);

  <bb 587> :
  _680 = user_tmp->size;
  if (_680 > 0)
    goto <bb 588>; [INV]
  else
    goto <bb 667>; [INV]

  <bb 588> :
  if (user_tmp != 0B)
    goto <bb 589>; [INV]
  else
    goto <bb 590>; [INV]

  <bb 589> :
  iftmp.1769 = user_tmp->stmt;
  goto <bb 591>; [INV]

  <bb 590> :
  iftmp.1769 = 0B;

  <bb 591> :
  u_stmt = iftmp.1769;
  goto <bb 666>; [INV]

  <bb 592> :
  i = 0;
  goto <bb 661>; [INV]

  <bb 593> :
  _681 = (long unsigned int) i;
  D.257656 = std::vector<free_type>::at (&free_array, _681);

  <bb 594> :
  _682 = D.257656;
  _683 = _682->stmt;
  D.257657 = gimple_call_fndecl (_683);

  <bb 595> :
  _684 = D.257657;
  retval.1770 = _684 != 0B;
  if (retval.1770 != 0)
    goto <bb 596>; [INV]
  else
    goto <bb 660>; [INV]

  <bb 596> :
  _685 = (long unsigned int) i;
  D.257658 = std::vector<free_type>::at (&free_array, _685);

  <bb 597> :
  _686 = D.257658;
  _687 = _686->stmt;
  retval.1771 = u_stmt != _687;
  if (retval.1771 != 0)
    goto <bb 598>; [INV]
  else
    goto <bb 660>; [INV]

  <bb 598> :
  retval.1772 = is_gimple_call (u_stmt);
  if (retval.1772 != 0)
    goto <bb 599>; [INV]
  else
    goto <bb 604>; [INV]

  <bb 599> :
  _688 = (long unsigned int) i;
  D.257659 = std::vector<free_type>::at (&free_array, _688);

  <bb 600> :
  _689 = D.257659;
  _690 = _689->stmt;
  D.257660 = gimple_call_fndecl (_690);

  <bb 601> :
  _691 = D.257660;
  D.257661 = gimple_call_fndecl (u_stmt);

  <bb 602> :
  _692 = D.257661;
  retval.1773 = _691 == _692;
  if (retval.1773 != 0)
    goto <bb 603>; [INV]
  else
    goto <bb 604>; [INV]

  <bb 603> :
  // predicted unlikely by continue predictor.
  goto <bb 660>; [INV]

  <bb 604> :
  _693 = (long unsigned int) i;
  D.257662 = std::vector<free_type>::at (&free_array, _693);

  <bb 605> :
  _694 = D.257662;
  _695 = _694->stmt;
  D.257663 = gimple_call_num_args (_695);

  <bb 606> :
  _696 = D.257663;
  retval.1774 = _696 != 0;
  if (retval.1774 != 0)
    goto <bb 607>; [INV]
  else
    goto <bb 635>; [INV]

  <bb 607> :
  _697 = (long unsigned int) i;
  D.257664 = std::vector<free_type>::at (&free_array, _697);

  <bb 608> :
  _698 = D.257664;
  _699 = _698->stmt;
  D.257665 = gimple_call_arg (_699, 0);

  <bb 609> :
  callarg = D.257665;
  _700 = callarg->base.code;
  if (_700 == 153)
    goto <bb 610>; [INV]
  else
    goto <bb 624>; [INV]

  <bb 610> :
  def_stmt = callarg->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 611>; [INV]
  else
    goto <bb 624>; [INV]

  <bb 611> :
  _701 = gimple_code (def_stmt);
  retval.1775 = _701 == 18;
  if (retval.1775 != 0)
    goto <bb 612>; [INV]
  else
    goto <bb 624>; [INV]

  <bb 612> :
  D.257666 = gimple_phi_num_args (def_stmt);

  <bb 613> :
  _702 = D.257666;
  retval.1776 = _702 != 0;
  if (retval.1776 != 0)
    goto <bb 614>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 614> :
  k = 0;
  goto <bb 619>; [INV]

  <bb 615> :
  _703 = (long unsigned int) k;
  D.257667 = gimple_phi_arg_def (def_stmt, _703);

  <bb 616> :
  arg = D.257667;
  _704 = user_tmp->target;
  if (arg == _704)
    goto <bb 617>; [INV]
  else
    goto <bb 618>; [INV]

  <bb 617> :
  // predicted unlikely by continue predictor.

  <bb 618> :
  k = k + 1;

  <bb 619> :
  D.257668 = gimple_phi_num_args (def_stmt);

  <bb 620> :
  _705 = D.257668;
  k.1778_706 = (unsigned int) k;
  retval.1777 = _705 > k.1778_706;
  if (retval.1777 != 0)
    goto <bb 615>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 621> :
  D.257669 = gimple_phi_result (def_stmt);

  <bb 622> :
  _707 = D.257669;
  _708 = user_tmp->target;
  retval.1779 = _707 == _708;
  if (retval.1779 != 0)
    goto <bb 623>; [INV]
  else
    goto <bb 624>; [INV]

  <bb 623> :
  // predicted unlikely by continue predictor.
  goto <bb 660>; [INV]

  <bb 624> :
  retval.1780 = is_gimple_call (u_stmt);
  if (retval.1780 != 0)
    goto <bb 625>; [INV]
  else
    goto <bb 631>; [INV]

  <bb 625> :
  _709 = (long unsigned int) i;
  D.257670 = std::vector<free_type>::at (&free_array, _709);

  <bb 626> :
  _710 = D.257670;
  _711 = _710->stmt;
  D.257671 = gimple_call_fndecl (_711);

  <bb 627> :
  _712 = D.257671;
  D.257672 = gimple_call_fndecl (u_stmt);

  <bb 628> :
  _713 = D.257672;
  retval.1781 = _712 == _713;
  if (retval.1781 != 0)
    goto <bb 629>; [INV]
  else
    goto <bb 631>; [INV]

  <bb 629> :
  _714 = user_tmp->target;
  if (callarg == _714)
    goto <bb 630>; [INV]
  else
    goto <bb 631>; [INV]

  <bb 630> :
  // predicted unlikely by continue predictor.
  goto <bb 660>; [INV]

  <bb 631> :
  _715 = gimple_code (u_stmt);
  retval.1782 = _715 == 18;
  if (retval.1782 != 0)
    goto <bb 632>; [INV]
  else
    goto <bb 635>; [INV]

  <bb 632> :
  D.257673 = gimple_phi_result (u_stmt);

  <bb 633> :
  _716 = D.257673;
  retval.1783 = callarg == _716;
  if (retval.1783 != 0)
    goto <bb 634>; [INV]
  else
    goto <bb 635>; [INV]

  <bb 634> :
  // predicted unlikely by continue predictor.
  goto <bb 660>; [INV]

  <bb 635> :
  function_tree.1785_717 = function_tree;
  _718 = (long unsigned int) i;
  D.257674 = std::vector<free_type>::at (&free_array, _718);

  <bb 636> :
  _719 = D.257674;
  _720 = _719->stmt;
  D.257675 = Location_b2 (_720, u_stmt, function_tree.1785_717);

  <bb 637> :
  retval.1784 = D.257675;
  if (retval.1784 != 0)
    goto <bb 638>; [INV]
  else
    goto <bb 660>; [INV]

  <bb 638> :
  stderr.1786_721 = stderr;
  __builtin_fwrite ("\n============================================================\n", 1, 62, stderr.1786_721);

  <bb 639> :
  _722 = (long unsigned int) i;
  D.257676 = std::vector<free_type>::at (&free_array, _722);

  <bb 640> :
  _723 = D.257676;
  _724 = _723->Looserulesfree;
  retval.1787 = _724 != 0;
  if (retval.1787 != 0)
    goto <bb 641>; [INV]
  else
    goto <bb 642>; [INV]

  <bb 641> :
  stderr.1788_725 = stderr;
  __builtin_fwrite ("\x1b[40;35m <Looserules> find free stmt free same pointer \x1b[0m\n", 1, 60, stderr.1788_725);

  <bb 642> :
  _726 = (long unsigned int) i;
  D.257677 = std::vector<free_type>::at (&free_array, _726);

  <bb 643> :
  _727 = D.257677;
  _728 = _727->stmt;
  debug_gimple_stmt (_728);

  <bb 644> :
  _729 = (long unsigned int) i;
  D.257678 = std::vector<free_type>::at (&free_array, _729);

  <bb 645> :
  _730 = D.257678;
  _731 = _730->stmt;
  _732 = gimple_location_safe (_731);
  warning_at (_732, 0, "free in this location");

  <bb 646> :
  _733 = (long unsigned int) i;
  D.257679 = std::vector<free_type>::at (&free_array, _733);

  <bb 647> :
  _734 = D.257679;
  _735 = _734->stmt;
  _736 = gimple_bb (_735);
  _737 = table_temp->node;
  check_bbinfo (_737, _736);

  <bb 648> :
  stderr.1789_738 = stderr;
  __builtin_fwrite ("\n===== possiable asias =====\n", 1, 29, stderr.1789_738);

  <bb 649> :
  debug_gimple_stmt (u_stmt);

  <bb 650> :
  _739 = gimple_location_safe (u_stmt);
  warning_at (_739, 0, "use location");

  <bb 651> :
  _740 = gimple_bb (u_stmt);
  _741 = table_temp->node;
  check_bbinfo (_741, _740);

  <bb 652> :
  stderr.1790_742 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.1790_742);

  <bb 653> :
  _743 = (long unsigned int) i;
  D.257680 = std::vector<free_type>::at (&free_array, _743);

  <bb 654> :
  _744 = D.257680;
  _745 = _744->stmt;
  D.257681 = gimple_call_fn (_745);

  <bb 655> :
  _746 = D.257681;
  D.257682 = get_name (_746);

  <bb 656> :
  name = D.257682;
  _747 = strcmp (name, "realloc");
  if (_747 == 0)
    goto <bb 657>; [INV]
  else
    goto <bb 658>; [INV]

  <bb 657> :
  stderr.1791_748 = stderr;
  __builtin_fwrite ("\x1b[40;35m  realloc Use after free error! \x1b[0m\n", 1, 45, stderr.1791_748);
  goto <bb 659>; [INV]

  <bb 658> :
  stderr.1792_749 = stderr;
  __builtin_fwrite ("\x1b[40;35m    Use after free error! \x1b[0m\n", 1, 39, stderr.1792_749);

  <bb 659> :
  stderr.1793_750 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.1793_750);

  <bb 660> :
  i = i + 1;

  <bb 661> :
  _751 = (long unsigned int) i;
  _752 = std::vector<free_type>::size (&free_array);
  retval.1794 = _751 < _752;
  if (retval.1794 != 0)
    goto <bb 593>; [INV]
  else
    goto <bb 662>; [INV]

  <bb 662> :
  user_tmp = user_tmp->next;
  if (user_tmp != 0B)
    goto <bb 663>; [INV]
  else
    goto <bb 664>; [INV]

  <bb 663> :
  iftmp.1795 = user_tmp->stmt;
  goto <bb 665>; [INV]

  <bb 664> :
  iftmp.1795 = 0B;

  <bb 665> :
  u_stmt = iftmp.1795;

  <bb 666> :
  if (user_tmp != 0B)
    goto <bb 592>; [INV]
  else
    goto <bb 667>; [INV]

  <bb 667> :
  stderr.1796_753 = stderr;
  __builtin_fwrite ("\ndot graph END\n", 1, 15, stderr.1796_753);

  <bb 668> :
  start = {CLOBBER};

  <bb 669> :
  stderr.1797_754 = stderr;
  __builtin_fwrite (" \n Finish check Pointer Collect  \n", 1, 34, stderr.1797_754);

  <bb 670> :
  function_relate_array::~function_relate_array (&maxbb_array);
  std::vector<relate_type>::~vector (&maxbb_type_array);
  maxbb_type_array = {CLOBBER};
  maxbb_array = {CLOBBER};
  goto <bb 672>; [INV]

  <bb 671> :
  PTABLE_IS_NULL.1798_755 = PTABLE_IS_NULL;
  find_mallocstmt = (int) PTABLE_IS_NULL.1798_755;

  <bb 672> :
  _756 = table_temp->swap_type;
  _757 = (unsigned int) _756;
  FUNCITON_THREAD.1799_758 = FUNCITON_THREAD;
  if (_757 == FUNCITON_THREAD.1799_758)
    goto <bb 673>; [INV]
  else
    goto <bb 684>; [INV]

  <bb 673> :
  if (is_pthread_detched == 0)
    goto <bb 674>; [INV]
  else
    goto <bb 681>; [INV]

  <bb 674> :
  if (find_pthread_join == 0)
    goto <bb 675>; [INV]
  else
    goto <bb 678>; [INV]

  <bb 675> :
  stderr.1800_759 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1800_759);

  <bb 676> :
  stderr.1801_760 = stderr;
  __builtin_fwrite ("\x1b[40;31m    pthread is JOINABLE but no pthread_join stmt \x1b[0m\n", 1, 62, stderr.1801_760);

  <bb 677> :
  stderr.1802_761 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1802_761);
  goto <bb 684>; [INV]

  <bb 678> :
  stderr.1803_762 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1803_762);

  <bb 679> :
  stderr.1804_763 = stderr;
  __builtin_fwrite ("\x1b[40;32m    pthread is JOINABLE and no memory leak   \x1b[0m\n", 1, 58, stderr.1804_763);

  <bb 680> :
  stderr.1805_764 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1805_764);
  goto <bb 684>; [INV]

  <bb 681> :
  stderr.1806_765 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1806_765);

  <bb 682> :
  stderr.1807_766 = stderr;
  __builtin_fwrite ("\x1b[40;32m    pthread is DETACHED and no memory leak  \x1b[0m\n", 1, 57, stderr.1807_766);

  <bb 683> :
  stderr.1808_767 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1808_767);

  <bb 684> :
  ptable_type.1809_768 = (unsigned int) ptable_type;
  IS_MALLOC_FUCNTION.1810_769 = IS_MALLOC_FUCNTION;
  if (ptable_type.1809_768 == IS_MALLOC_FUCNTION.1810_769)
    goto <bb 685>; [INV]
  else
    goto <bb 687>; [INV]

  <bb 685> :
  find_mallocstmt.1811_770 = (unsigned int) find_mallocstmt;
  IS_OTHRER_FUCNTION.1812_771 = IS_OTHRER_FUCNTION;
  if (find_mallocstmt.1811_770 == IS_OTHRER_FUCNTION.1812_771)
    goto <bb 686>; [INV]
  else
    goto <bb 687>; [INV]

  <bb 686> :
  IS_MALLOC_FUCNTION.1813_772 = IS_MALLOC_FUCNTION;
  find_mallocstmt = (int) IS_MALLOC_FUCNTION.1813_772;

  <bb 687> :
  Looserulesfree.1814_773 = Looserulesfree;
  if (Looserulesfree.1814_773 != 0)
    goto <bb 688>; [INV]
  else
    goto <bb 696>; [INV]

  <bb 688> :
  stderr.1815_774 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1815_774);

  <bb 689> :
  stderr.1816_775 = stderr;
  fprintf (stderr.1816_775, "\x1b[40;35m  \tLooserules free count:%d \x1b[0m\n", find_Looserulesfreestmt);

  <bb 690> :
  find_freestmt.1817_776 = find_freestmt;
  stderr.1818_777 = stderr;
  fprintf (stderr.1818_777, "\x1b[40;31m  \tfree count:%d \x1b[0m\n", find_freestmt.1817_776);

  <bb 691> :
  if (find_Looserulesfreestmt > 1)
    goto <bb 692>; [INV]
  else
    goto <bb 693>; [INV]

  <bb 692> :
  stderr.1819_778 = stderr;
  fprintf (stderr.1819_778, "\x1b[40;31m  \tpossible double free [Looserules]:%d \x1b[0m\n", find_Looserulesfreestmt);

  <bb 693> :
  find_freestmt.1820_779 = find_freestmt;
  if (find_freestmt.1820_779 > 1)
    goto <bb 694>; [INV]
  else
    goto <bb 695>; [INV]

  <bb 694> :
  find_freestmt.1821_780 = find_freestmt;
  stderr.1822_781 = stderr;
  fprintf (stderr.1822_781, "\x1b[40;31m  \tpossible double free [rigorous]:%d \x1b[0m\n", find_freestmt.1821_780);

  <bb 695> :
  stderr.1823_782 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1823_782);

  <bb 696> :
  find_mallocstmt.1824_783 = (unsigned int) find_mallocstmt;
  IS_MALLOC_FUCNTION.1825_784 = IS_MALLOC_FUCNTION;
  if (find_mallocstmt.1824_783 == IS_MALLOC_FUCNTION.1825_784)
    goto <bb 697>; [INV]
  else
    goto <bb 717>; [INV]

  <bb 697> :
  defmalloc_type::defmalloc_type (&defmalloc_type);
  _785 = table_temp->last_stmt;
  defmalloc_type.stmt = _785;
  _786 = table_temp->target;
  defmalloc_type.malloc_tree = _786;
  i = 0;
  goto <bb 700>; [INV]

  <bb 698> :
  _787 = (long unsigned int) i;
  _788 = std::vector<free_type>::operator[] (&free_array, _787);
  std::vector<free_type>::push_back (&defmalloc_type.free_array, _788);

  <bb 699> :
  i = i + 1;

  <bb 700> :
  _789 = (long unsigned int) i;
  _790 = std::vector<free_type>::size (&free_array);
  retval.1826 = _789 < _790;
  if (retval.1826 != 0)
    goto <bb 698>; [INV]
  else
    goto <bb 701>; [INV]

  <bb 701> :
  std::vector<defmalloc_type>::push_back (&defmalloc_array, &defmalloc_type);

  <bb 702> :
  find_freestmt.1827_791 = find_freestmt;
  if (find_freestmt.1827_791 == 0)
    goto <bb 703>; [INV]
  else
    goto <bb 706>; [INV]

  <bb 703> :
  stderr.1828_792 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1828_792);

  <bb 704> :
  stderr.1829_793 = stderr;
  __builtin_fwrite ("\x1b[40;31m    no free stmt possible memory leak \x1b[0m\n", 1, 51, stderr.1829_793);

  <bb 705> :
  stderr.1830_794 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1830_794);
  goto <bb 716>; [INV]

  <bb 706> :
  find_freestmt.1831_795 = find_freestmt;
  if (find_freestmt.1831_795 == 1)
    goto <bb 707>; [INV]
  else
    goto <bb 712>; [INV]

  <bb 707> :
  stderr.1832_796 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1832_796);

  <bb 708> :
  if (find_phistmt == 1)
    goto <bb 709>; [INV]
  else
    goto <bb 710>; [INV]

  <bb 709> :
  stderr.1833_797 = stderr;
  __builtin_fwrite ("\x1b[40;31m   need check branch because multiple direction varible\x1b[0m\n", 1, 68, stderr.1833_797);
  goto <bb 711>; [INV]

  <bb 710> :
  stderr.1834_798 = stderr;
  __builtin_fwrite ("\x1b[40;32m   No memory leak, need more check!  \x1b[0m\n", 1, 50, stderr.1834_798);

  <bb 711> :
  stderr.1835_799 = stderr;
  __builtin_fwrite ("\n======================================================================\n\n", 1, 73, stderr.1835_799);
  goto <bb 716>; [INV]

  <bb 712> :
  find_freestmt.1836_800 = find_freestmt;
  if (find_freestmt.1836_800 > 1)
    goto <bb 713>; [INV]
  else
    goto <bb 716>; [INV]

  <bb 713> :
  stderr.1837_801 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1837_801);

  <bb 714> :
  find_freestmt.1838_802 = find_freestmt;
  stderr.1839_803 = stderr;
  fprintf (stderr.1839_803, "\x1b[40;31m  \tpossible double free [rigorous]:%d \x1b[0m\n", find_freestmt.1838_802);

  <bb 715> :
  stderr.1840_804 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1840_804);

  <bb 716> :
  defmalloc_type::~defmalloc_type (&defmalloc_type);
  defmalloc_type = {CLOBBER};
  goto <bb 749>; [INV]

  <bb 717> :
  find_mallocstmt.1841_805 = (unsigned int) find_mallocstmt;
  IS_HEAP_FUCNTION.1842_806 = IS_HEAP_FUCNTION;
  if (find_mallocstmt.1841_805 == IS_HEAP_FUCNTION.1842_806)
    goto <bb 718>; [INV]
  else
    goto <bb 721>; [INV]

  <bb 718> :
  stderr.1843_807 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1843_807);

  <bb 719> :
  stderr.1844_808 = stderr;
  __builtin_fwrite ("\x1b[40;31m \tthis fucntion return possible is heap-object \x1b[0m\n", 1, 60, stderr.1844_808);

  <bb 720> :
  stderr.1845_809 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1845_809);
  goto <bb 749>; [INV]

  <bb 721> :
  find_mallocstmt.1846_810 = (unsigned int) find_mallocstmt;
  PTABLE_IS_NULL.1847_811 = PTABLE_IS_NULL;
  if (find_mallocstmt.1846_810 == PTABLE_IS_NULL.1847_811)
    goto <bb 722>; [INV]
  else
    goto <bb 729>; [INV]

  <bb 722> :
  stderr.1848_812 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1848_812);

  <bb 723> :
  stderr.1849_813 = stderr;
  __builtin_fwrite ("\x1b[40;31m \tCan\'t find this fucntion in Pointer table \x1b[0m\n", 1, 57, stderr.1849_813);

  <bb 724> :
  stderr.1850_814 = stderr;
  __builtin_fwrite ("\x1b[40;31m \tPossiable no other stmt relate with this stmt \x1b[0m\n", 1, 61, stderr.1850_814);

  <bb 725> :
  _815 = table_temp->last_stmt;
  D.257689 = empty_body_p (_815);

  <bb 726> :
  retval.1851 = D.257689;
  if (retval.1851 != 0)
    goto <bb 727>; [INV]
  else
    goto <bb 728>; [INV]

  <bb 727> :
  _816 = table_temp->last_stmt;
  _817 = gimple_location_safe (_816);
  warning_at (_817, 0, "use location");

  <bb 728> :
  stderr.1852_818 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1852_818);
  goto <bb 749>; [INV]

  <bb 729> :
  stderr.1853_819 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1853_819);

  <bb 730> :
  stderr.1854_820 = stderr;
  __builtin_fwrite ("\x1b[40;31m \tthis stmt need double check \x1b[0m\n", 1, 43, stderr.1854_820);

  <bb 731> :
  find_retheapstmt.1855_821 = find_retheapstmt;
  if (find_retheapstmt.1855_821 > 0)
    goto <bb 732>; [INV]
  else
    goto <bb 749>; [INV]

  <bb 732> :
  find_freestmt.1856_822 = find_freestmt;
  if (find_freestmt.1856_822 > 2)
    goto <bb 733>; [INV]
  else
    goto <bb 737>; [INV]

  <bb 733> :
  stderr.1857_823 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1857_823);

  <bb 734> :
  stderr.1858_824 = stderr;
  __builtin_fwrite ("\x1b[40;31m    this function with other function alias that other function return value is heap-object \x1b[0m\n", 1, 105, stderr.1858_824);

  <bb 735> :
  find_freestmt.1859_825 = find_freestmt;
  stderr.1860_826 = stderr;
  fprintf (stderr.1860_826, "\x1b[40;31m  \tpossible double free :%d \x1b[0m\n", find_freestmt.1859_825);

  <bb 736> :
  stderr.1861_827 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1861_827);
  goto <bb 749>; [INV]

  <bb 737> :
  find_freestmt.1862_828 = find_freestmt;
  if (find_freestmt.1862_828 == 1)
    goto <bb 738>; [INV]
  else
    goto <bb 744>; [INV]

  <bb 738> :
  stderr.1863_829 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1863_829);

  <bb 739> :
  stderr.1864_830 = stderr;
  __builtin_fwrite ("\x1b[40;31m    this function with other function alias that other function return value is heap-object \x1b[0m\n", 1, 105, stderr.1864_830);

  <bb 740> :
  if (find_phistmt == 1)
    goto <bb 741>; [INV]
  else
    goto <bb 742>; [INV]

  <bb 741> :
  stderr.1865_831 = stderr;
  __builtin_fwrite ("\x1b[40;31m   need check branch because multiple direction varible\x1b[0m\n", 1, 68, stderr.1865_831);
  goto <bb 743>; [INV]

  <bb 742> :
  stderr.1866_832 = stderr;
  __builtin_fwrite ("\x1b[40;32m   Maybe you don\'t have memory leak.... need more checks  \x1b[0m\n", 1, 71, stderr.1866_832);

  <bb 743> :
  stderr.1867_833 = stderr;
  __builtin_fwrite ("\n======================================================================\n\n", 1, 73, stderr.1867_833);
  goto <bb 749>; [INV]

  <bb 744> :
  find_freestmt.1868_834 = find_freestmt;
  if (find_freestmt.1868_834 == 0)
    goto <bb 745>; [INV]
  else
    goto <bb 749>; [INV]

  <bb 745> :
  stderr.1869_835 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1869_835);

  <bb 746> :
  stderr.1870_836 = stderr;
  __builtin_fwrite ("\x1b[40;31m    this function with other function alias that other function return value is heap-object \x1b[0m\n", 1, 105, stderr.1870_836);

  <bb 747> :
  stderr.1871_837 = stderr;
  __builtin_fwrite ("\x1b[40;31m    no free stmt possible memory leak \x1b[0m\n", 1, 51, stderr.1871_837);

  <bb 748> :
  stderr.1872_838 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1872_838);

  <bb 749> :
  stderr.1873_839 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1873_839);

  <bb 750> :
  std::vector<basic_block_def*>::~vector (&earlyend);
  finally_tmp.1895 = 1;

  <bb 751> :
  std::vector<free_type>::~vector (&free_array);
  if (finally_tmp.1895 == 1)
    goto <bb 752>; [INV]
  else
    goto <bb 754>; [INV]

  <bb 752> :
<L620>:

  <bb 753> :
  free_array = {CLOBBER};
  earlyend = {CLOBBER};
  goto <bb 755>; [INV]

  <bb 754> :
  free_array = {CLOBBER};
  earlyend = {CLOBBER};
  find_freestmt = {CLOBBER};
  find_retheapstmt = {CLOBBER};
  find_pthread_detched = {CLOBBER};
  goto <bb 830>; [INV]

  <bb 755> :
  defmemoryleak.1874_840 = defmemoryleak;
  if (defmemoryleak.1874_840 != 0)
    goto <bb 756>; [INV]
  else
    goto <bb 829>; [INV]

  <bb 756> :
  i = 0;
  goto <bb 828>; [INV]

  <bb 757> :
  j = 0;
  goto <bb 826>; [INV]

  <bb 758> :
  _841 = (long unsigned int) i;
  D.257700 = std::vector<defmalloc_type>::at (&defmalloc_array, _841);

  <bb 759> :
  _842 = D.257700;
  _843 = _842->malloc_tree;
  _844 = (long unsigned int) j;
  D.257701 = std::vector<defmalloc_type>::at (&defmalloc_array, _844);

  <bb 760> :
  _845 = D.257701;
  _846 = _845->malloc_tree;
  retval.1875 = _843 != _846;
  if (retval.1875 != 0)
    goto <bb 761>; [INV]
  else
    goto <bb 771>; [INV]

  <bb 761> :
  stderr.1876_847 = stderr;
  __builtin_fwrite ("\x1b[40;31m  start check tree \x1b[0m\n", 1, 32, stderr.1876_847);

  <bb 762> :
  _848 = (long unsigned int) i;
  D.257702 = std::vector<defmalloc_type>::at (&defmalloc_array, _848);

  <bb 763> :
  _849 = D.257702;
  _850 = _849->malloc_tree;
  debug (_850);

  <bb 764> :
  _851 = (long unsigned int) j;
  D.257703 = std::vector<defmalloc_type>::at (&defmalloc_array, _851);

  <bb 765> :
  _852 = D.257703;
  _853 = _852->malloc_tree;
  debug (_853);

  <bb 766> :
  _854 = (long unsigned int) j;
  D.257704 = std::vector<defmalloc_type>::at (&defmalloc_array, _854);

  <bb 767> :
  _855 = D.257704;
  _856 = _855->malloc_tree;
  _857 = (long unsigned int) i;
  D.257705 = std::vector<defmalloc_type>::at (&defmalloc_array, _857);

  <bb 768> :
  _858 = D.257705;
  _859 = _858->malloc_tree;
  D.257706 = ptr_derefs_may_alias_p (_859, _856);

  <bb 769> :
  retval.1877 = D.257706;
  if (retval.1877 != 0)
    goto <bb 770>; [INV]
  else
    goto <bb 771>; [INV]

  <bb 770> :
  stderr.1878_860 = stderr;
  __builtin_fwrite ("\x1b[40;31m  same alias gimple tree \x1b[0m\n", 1, 38, stderr.1878_860);

  <bb 771> :
  if (i != j)
    goto <bb 772>; [INV]
  else
    goto <bb 825>; [INV]

  <bb 772> :
  _861 = (long unsigned int) i;
  D.257707 = std::vector<defmalloc_type>::at (&defmalloc_array, _861);

  <bb 773> :
  _862 = D.257707;
  _863 = _862->malloc_tree;
  _864 = _863->ssa_name.var;
  if (_864 != 0B)
    goto <bb 774>; [INV]
  else
    goto <bb 778>; [INV]

  <bb 774> :
  _865 = (long unsigned int) i;
  D.257708 = std::vector<defmalloc_type>::at (&defmalloc_array, _865);

  <bb 775> :
  _866 = D.257708;
  _867 = _866->malloc_tree;
  _868 = _867->ssa_name.var;
  _869 = _868->base.code;
  if (_869 != 1)
    goto <bb 776>; [INV]
  else
    goto <bb 778>; [INV]

  <bb 776> :
  _870 = (long unsigned int) i;
  D.257709 = std::vector<defmalloc_type>::at (&defmalloc_array, _870);

  <bb 777> :
  _871 = D.257709;
  _872 = _871->malloc_tree;
  iftmp.1880 = _872->ssa_name.var;
  goto <bb 779>; [INV]

  <bb 778> :
  iftmp.1880 = 0B;

  <bb 779> :
  _873 = (long unsigned int) j;
  D.257710 = std::vector<defmalloc_type>::at (&defmalloc_array, _873);

  <bb 780> :
  _874 = D.257710;
  _875 = _874->malloc_tree;
  _876 = _875->ssa_name.var;
  if (_876 != 0B)
    goto <bb 781>; [INV]
  else
    goto <bb 785>; [INV]

  <bb 781> :
  _877 = (long unsigned int) j;
  D.257711 = std::vector<defmalloc_type>::at (&defmalloc_array, _877);

  <bb 782> :
  _878 = D.257711;
  _879 = _878->malloc_tree;
  _880 = _879->ssa_name.var;
  _881 = _880->base.code;
  if (_881 != 1)
    goto <bb 783>; [INV]
  else
    goto <bb 785>; [INV]

  <bb 783> :
  _882 = (long unsigned int) j;
  D.257712 = std::vector<defmalloc_type>::at (&defmalloc_array, _882);

  <bb 784> :
  _883 = D.257712;
  _884 = _883->malloc_tree;
  iftmp.1881 = _884->ssa_name.var;
  goto <bb 786>; [INV]

  <bb 785> :
  iftmp.1881 = 0B;

  <bb 786> :
  retval.1879 = iftmp.1880 == iftmp.1881;
  if (retval.1879 != 0)
    goto <bb 787>; [INV]
  else
    goto <bb 825>; [INV]

  <bb 787> :
  function_tree.1883_885 = function_tree;
  _886 = (long unsigned int) i;
  D.257713 = std::vector<defmalloc_type>::at (&defmalloc_array, _886);

  <bb 788> :
  _887 = D.257713;
  _888 = _887->stmt;
  _889 = (long unsigned int) j;
  D.257714 = std::vector<defmalloc_type>::at (&defmalloc_array, _889);

  <bb 789> :
  _890 = D.257714;
  _891 = _890->stmt;
  D.257715 = Location_b3 (_891, _888, function_tree.1883_885);

  <bb 790> :
  retval.1882 = D.257715;
  if (retval.1882 != 0)
    goto <bb 791>; [INV]
  else
    goto <bb 825>; [INV]

  <bb 791> :
  _892 = (long unsigned int) i;
  D.257716 = std::vector<defmalloc_type>::at (&defmalloc_array, _892);

  <bb 792> :
  _893 = D.257716;
  _894 = &_893->free_array;
  _895 = std::vector<free_type>::size (_894);
  retval.1884 = _895 != 0;
  if (retval.1884 != 0)
    goto <bb 793>; [INV]
  else
    goto <bb 815>; [INV]

  <bb 793> :
  finddefsafe = 0;
  k = 0;
  goto <bb 802>; [INV]

  <bb 794> :
  function_tree.1886_896 = function_tree;
  _897 = (long unsigned int) i;
  D.257717 = std::vector<defmalloc_type>::at (&defmalloc_array, _897);

  <bb 795> :
  _898 = D.257717;
  _899 = &_898->free_array;
  _900 = (long unsigned int) k;
  D.257718 = std::vector<free_type>::at (_899, _900);

  <bb 796> :
  _901 = D.257718;
  _902 = _901->stmt;
  _903 = (long unsigned int) j;
  D.257719 = std::vector<defmalloc_type>::at (&defmalloc_array, _903);

  <bb 797> :
  _904 = D.257719;
  _905 = _904->stmt;
  D.257720 = Location_b3 (_905, _902, function_tree.1886_896);

  <bb 798> :
  _906 = D.257720;
  retval.1885 = ~_906;
  if (retval.1885 != 0)
    goto <bb 799>; [INV]
  else
    goto <bb 800>; [INV]

  <bb 799> :
  finddefsafe = 1;
  goto <bb 801>; [INV]

  <bb 800> :
  finddefsafe = -1;

  <bb 801> :
  k = k + 1;

  <bb 802> :
  _907 = (long unsigned int) k;
  _908 = (long unsigned int) i;
  D.257721 = std::vector<defmalloc_type>::at (&defmalloc_array, _908);

  <bb 803> :
  _909 = D.257721;
  _910 = &_909->free_array;
  _911 = std::vector<free_type>::size (_910);
  retval.1887 = _907 < _911;
  if (retval.1887 != 0)
    goto <bb 794>; [INV]
  else
    goto <bb 804>; [INV]

  <bb 804> :
  if (finddefsafe >= 0)
    goto <bb 805>; [INV]
  else
    goto <bb 825>; [INV]

  <bb 805> :
  stderr.1888_912 = stderr;
  __builtin_fwrite ("\x1b[40;31m   malloc def-leak warring \x1b[0m\n", 1, 40, stderr.1888_912);

  <bb 806> :
  _913 = (long unsigned int) i;
  D.257722 = std::vector<defmalloc_type>::at (&defmalloc_array, _913);

  <bb 807> :
  _914 = D.257722;
  _915 = _914->malloc_tree;
  debug (_915);

  <bb 808> :
  _916 = (long unsigned int) i;
  D.257723 = std::vector<defmalloc_type>::at (&defmalloc_array, _916);

  <bb 809> :
  _917 = D.257723;
  _918 = _917->stmt;
  _919 = gimple_location_safe (_918);
  warning_at (_919, 0, "use location");

  <bb 810> :
  stderr.1889_920 = stderr;
  __builtin_fwrite ("\x1b[40;31m   memory leak and alloc new memory \x1b[0m\n", 1, 49, stderr.1889_920);

  <bb 811> :
  _921 = (long unsigned int) j;
  D.257724 = std::vector<defmalloc_type>::at (&defmalloc_array, _921);

  <bb 812> :
  _922 = D.257724;
  _923 = _922->malloc_tree;
  debug (_923);

  <bb 813> :
  _924 = (long unsigned int) j;
  D.257725 = std::vector<defmalloc_type>::at (&defmalloc_array, _924);

  <bb 814> :
  _925 = D.257725;
  _926 = _925->stmt;
  _927 = gimple_location_safe (_926);
  warning_at (_927, 0, "use location");
  goto <bb 825>; [INV]

  <bb 815> :
  stderr.1890_928 = stderr;
  __builtin_fwrite ("\x1b[40;31m   malloc def-leak warring \x1b[0m\n", 1, 40, stderr.1890_928);

  <bb 816> :
  _929 = (long unsigned int) i;
  D.257726 = std::vector<defmalloc_type>::at (&defmalloc_array, _929);

  <bb 817> :
  _930 = D.257726;
  _931 = _930->malloc_tree;
  debug (_931);

  <bb 818> :
  _932 = (long unsigned int) i;
  D.257727 = std::vector<defmalloc_type>::at (&defmalloc_array, _932);

  <bb 819> :
  _933 = D.257727;
  _934 = _933->stmt;
  _935 = gimple_location_safe (_934);
  warning_at (_935, 0, "use location");

  <bb 820> :
  stderr.1891_936 = stderr;
  __builtin_fwrite ("\x1b[40;31m   memory leak and alloc new memory \x1b[0m\n", 1, 49, stderr.1891_936);

  <bb 821> :
  _937 = (long unsigned int) j;
  D.257728 = std::vector<defmalloc_type>::at (&defmalloc_array, _937);

  <bb 822> :
  _938 = D.257728;
  _939 = _938->malloc_tree;
  debug (_939);

  <bb 823> :
  _940 = (long unsigned int) j;
  D.257729 = std::vector<defmalloc_type>::at (&defmalloc_array, _940);

  <bb 824> :
  _941 = D.257729;
  _942 = _941->stmt;
  _943 = gimple_location_safe (_942);
  warning_at (_943, 0, "use location");

  <bb 825> :
  j = j + 1;

  <bb 826> :
  _944 = (long unsigned int) j;
  _945 = std::vector<defmalloc_type>::size (&defmalloc_array);
  retval.1892 = _944 < _945;
  if (retval.1892 != 0)
    goto <bb 758>; [INV]
  else
    goto <bb 827>; [INV]

  <bb 827> :
  i = i + 1;

  <bb 828> :
  _946 = (long unsigned int) i;
  _947 = std::vector<defmalloc_type>::size (&defmalloc_array);
  retval.1893 = _946 < _947;
  if (retval.1893 != 0)
    goto <bb 757>; [INV]
  else
    goto <bb 829>; [INV]

  <bb 829> :
  find_freestmt = {CLOBBER};
  find_retheapstmt = {CLOBBER};
  find_pthread_detched = {CLOBBER};

  <bb 830> :
  table_temp = table_temp->next;
  if (table_temp != 0B)
    goto <bb 831>; [INV]
  else
    goto <bb 832>; [INV]

  <bb 831> :
  iftmp.1894 = table_temp->target;
  goto <bb 833>; [INV]

  <bb 832> :
  iftmp.1894 = 0B;

  <bb 833> :
  t = iftmp.1894;

  <bb 834> :
  _948 = table_temp->next;
  if (_948 != 0B)
    goto <bb 30>; [INV]
  else
    goto <bb 835>; [INV]

  <bb 835> :
  std::vector<defmalloc_type>::~vector (&defmalloc_array);
  start = {CLOBBER};
  start2 = {CLOBBER};
  defmalloc_array = {CLOBBER};
  return;

  <bb 836> :
<L681>:
  std::vector<return_type>::~vector (&funcalleeRetTypearray);
  resx 4

  <bb 837> :
<L682>:
  function_return_array::~function_return_array (&find_fun_array);
  resx 3

  <bb 838> :
<L683>:
  find_fun_array = {CLOBBER};
  funcalleeRetTypearray = {CLOBBER};
  resx 2

  <bb 839> :
<L684>:
  operator delete (D.202565, 48);
  resx 14

  <bb 840> :
<L685>:
  e2 = {CLOBBER};
  ei2 = {CLOBBER};
  resx 20

  <bb 841> :
<L686>:
  e = {CLOBBER};
  ei = {CLOBBER};
  resx 19

  <bb 842> :
<L687>:
  relate_type = {CLOBBER};
  resx 23

  <bb 843> :
<L688>:
  free_type = {CLOBBER};
  resx 18

  <bb 844> :
<L689>:
  operator delete (D.202686, 48);
  resx 27

  <bb 845> :
<L690>:
  it_i = {CLOBBER};
  resx 26

  <bb 846> :
<L691>:
  function_relate_array::~function_relate_array (&fun_array);
  resx 34

  <bb 847> :
<L692>:
  std::vector<relate_type>::~vector (&relate_type_array);
  resx 33

  <bb 848> :
<L693>:
  relate_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  resx 32

  <bb 849> :
<L694>:
  free_type = {CLOBBER};
  resx 41

  <bb 850> :
<L695>:
  std::vector<free_type>::~vector (&callerRetTypearray);
  resx 40

  <bb 851> :
<L696>:
  function_free_array::~function_free_array (&callerFunArray);
  resx 39

  <bb 852> :
<L697>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 38

  <bb 853> :
<L698>:
  start = {CLOBBER};
  resx 46

  <bb 854> :
<L699>:
  function_relate_array::~function_relate_array (&maxbb_array);
  resx 17

  <bb 855> :
<L700>:
  std::vector<relate_type>::~vector (&maxbb_type_array);
  resx 16

  <bb 856> :
<L701>:
  maxbb_type_array = {CLOBBER};
  maxbb_array = {CLOBBER};
  resx 13

  <bb 857> :
<L702>:
  defmalloc_type::~defmalloc_type (&defmalloc_type);
  resx 52

  <bb 858> :
<L703>:
  defmalloc_type = {CLOBBER};
  resx 51

  <bb 859> :
<L704>:
  std::vector<basic_block_def*>::~vector (&earlyend);
  resx 12

  <bb 860> :
<L705>:
  std::vector<free_type>::~vector (&free_array);
  resx 11

  <bb 861> :
<L706>:
  free_array = {CLOBBER};
  earlyend = {CLOBBER};
  resx 10

  <bb 862> :
<L707>:
  find_freestmt = {CLOBBER};
  find_retheapstmt = {CLOBBER};
  find_pthread_detched = {CLOBBER};
  resx 9

  <bb 863> :
<L708>:
  std::vector<defmalloc_type>::~vector (&defmalloc_array);
  resx 8

  <bb 864> :
<L709>:
  start = {CLOBBER};
  start2 = {CLOBBER};
  defmalloc_array = {CLOBBER};
  resx 1

}



;; Function std::vector<defmalloc_type>::vector (_ZNSt6vectorI14defmalloc_typeSaIS0_EEC2Ev, funcdef_no=6796, decl_uid=202390, cgraph_uid=3427, symbol_order=4205)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<defmalloc_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.202398;
  std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_base (_ZNSt12_Vector_baseI14defmalloc_typeSaIS0_EEC2Ev, funcdef_no=6794, decl_uid=201848, cgraph_uid=3424, symbol_order=4202)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI14defmalloc_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7790, decl_uid=201740, cgraph_uid=4422, symbol_order=5208)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<defmalloc_type>::allocator (this);
  _1 = &this->D.201743;
  std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<defmalloc_type>::allocator (_ZNSaI14defmalloc_typeEC2Ev, funcdef_no=8753, decl_uid=201518, cgraph_uid=5385, symbol_order=6175)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<defmalloc_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<defmalloc_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<defmalloc_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI14defmalloc_typeEC2Ev, funcdef_no=9603, decl_uid=201447, cgraph_uid=6235, symbol_order=7025)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<defmalloc_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI14defmalloc_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8756, decl_uid=201690, cgraph_uid=5388, symbol_order=6178)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::vector<basic_block_def*>::vector (_ZNSt6vectorIP15basic_block_defSaIS1_EEC2Ev, funcdef_no=6201, decl_uid=170293, cgraph_uid=3177, symbol_order=3931)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<basic_block_def*>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.170301;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EEC2Ev, funcdef_no=6199, decl_uid=169751, cgraph_uid=3174, symbol_order=3928)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE12_Vector_implC2Ev, funcdef_no=7570, decl_uid=169643, cgraph_uid=4202, symbol_order=4988)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<basic_block_def*>::allocator (this);
  _1 = &this->D.169646;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<basic_block_def*>::allocator (_ZNSaIP15basic_block_defEC2Ev, funcdef_no=8398, decl_uid=169421, cgraph_uid=5030, symbol_order=5820)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<basic_block_def*>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defEC2Ev, funcdef_no=9209, decl_uid=169350, cgraph_uid=5841, symbol_order=6631)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE17_Vector_impl_dataC2Ev, funcdef_no=8401, decl_uid=169593, cgraph_uid=5033, symbol_order=5823)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_map (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7805, decl_uid=191791, cgraph_uid=4437, symbol_order=5223)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8767, decl_uid=191750, cgraph_uid=5399, symbol_order=6189)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.257736;
  unsigned int D.257735;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.257735 = hash_table_higher_prime_index (size);
  size_prime_index = D.257735;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.257736 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.257736;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function ei_start_1 (_ZL10ei_start_1PP3vecIP8edge_def5va_gc8vl_embedE, funcdef_no=1666, decl_uid=75277, cgraph_uid=817, symbol_order=969)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct edge_iterator ei_start_1 (struct vec * * ev)
{
  struct edge_iterator i;
  struct edge_iterator D.257737;

  <bb 2> :
  i.index = 0;
  i.container = ev;
  D.257737 = i;
  i = {CLOBBER};

  <bb 3> :
<L1>:
  return D.257737;

}



;; Function ei_next (_ZL7ei_nextP13edge_iterator, funcdef_no=1670, decl_uid=75328, cgraph_uid=821, symbol_order=973)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ei_next (struct edge_iterator * i)
{
  <bb 2> :
  _1 = i->index;
  _2 = _1 + 1;
  i->index = _2;
  return;

}



;; Function ei_cond (_ZL7ei_cond13edge_iteratorPP8edge_def, funcdef_no=1674, decl_uid=75345, cgraph_uid=825, symbol_order=977)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
bool ei_cond (struct edge_iterator ei, struct edge_def * * p)
{
  struct edge_def * D.257746;
  bool D.257745;
  bool D.257743;
  bool retval.1896;

  <bb 2> :
  D.257745 = ei_end_p (ei);
  _1 = D.257745;
  retval.1896 = ~_1;
  if (retval.1896 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.257746 = ei_edge (ei);
  _2 = D.257746;
  *p = _2;
  D.257743 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  *p = 0B;
  D.257743 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
<L2>:
  return D.257743;

}



;; Function ei_end_p (_ZL8ei_end_p13edge_iterator, funcdef_no=1668, decl_uid=75320, cgraph_uid=819, symbol_order=971)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool ei_end_p (struct edge_iterator i)
{
  unsigned int D.257749;
  bool D.257747;

  <bb 2> :
  _1 = i.index;
  _2 = ei_container (i);
  D.257749 = vec_safe_length<edge_def*, va_gc> (_2);
  _3 = D.257749;
  D.257747 = _1 == _3;

  <bb 3> :
<L0>:
  return D.257747;

}



;; Function ei_container (_ZL12ei_container13edge_iterator, funcdef_no=1665, decl_uid=75274, cgraph_uid=816, symbol_order=968)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct vec * ei_container (struct edge_iterator i)
{
  struct vec * D.257750;

  <bb 2> :
  _1 = i.container;
  D.257750 = *_1;

  <bb 3> :
<L0>:
  return D.257750;

}



;; Function vec_safe_length<edge_def*, va_gc> (_Z15vec_safe_lengthIP8edge_def5va_gcEjPK3vecIT_T0_8vl_embedE, funcdef_no=6974, decl_uid=75252, cgraph_uid=3606, symbol_order=4389)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
unsigned int vec_safe_length<edge_def*, va_gc> (const struct vec * v)
{
  unsigned int iftmp.1897;
  unsigned int D.257752;

  <bb 2> :
  if (v != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.1897 = vec<edge_def*, va_gc>::length (v);
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1897 = 0;

  <bb 5> :
  D.257752 = iftmp.1897;

  <bb 6> :
<L3>:
  return D.257752;

}



;; Function vec<edge_def*, va_gc>::length (_ZNK3vecIP8edge_def5va_gc8vl_embedE6lengthEv, funcdef_no=7996, decl_uid=75146, cgraph_uid=4628, symbol_order=5414)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int vec<edge_def*, va_gc>::length (const struct vec * const this)
{
  unsigned int D.257758;

  <bb 2> :
  D.257758 = this->m_vecpfx.m_num;

  <bb 3> :
<L0>:
  return D.257758;

}



;; Function ei_edge (_ZL7ei_edge13edge_iterator, funcdef_no=1672, decl_uid=75335, cgraph_uid=823, symbol_order=975)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct edge_def * ei_edge (struct edge_iterator i)
{
  struct edge_def * D.257760;

  <bb 2> :
  _1 = ei_container (i);
  _2 = i.index;
  _3 = vec<edge_def*, va_gc>::operator[] (_1, _2);
  D.257760 = *_3;

  <bb 3> :
<L0>:
  return D.257760;

}



;; Function vec<edge_def*, va_gc>::operator[] (_ZN3vecIP8edge_def5va_gc8vl_embedEixEj, funcdef_no=6975, decl_uid=75165, cgraph_uid=3607, symbol_order=4390)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct edge_def * & vec<edge_def*, va_gc>::operator[] (struct vec * const this, unsigned int ix)
{
  struct edge_def * & D.257762;

  <bb 2> :
  D.257762 = &this->m_vecdata[ix];

  <bb 3> :
<L0>:
  return D.257762;

}



;; Function __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (_ZNK9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS1_SaIS1_EEEptEv, funcdef_no=7813, decl_uid=202731, cgraph_uid=4445, symbol_order=5231)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (const struct __normal_iterator * const this)
{
  struct relate_type * D.257764;

  <bb 2> :
  D.257764 = this->_M_current;

  <bb 3> :
<L0>:
  return D.257764;

}



;; Function __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS1_SaIS1_EEEppEv, funcdef_no=7812, decl_uid=202733, cgraph_uid=4444, symbol_order=5230)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.257766;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 48;
  this->_M_current = _2;
  D.257766 = this;

  <bb 3> :
<L0>:
  return D.257766;

}



;; Function __gnu_cxx::operator!=<relate_type*, std::vector<relate_type> > (_ZN9__gnu_cxxneIP11relate_typeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_, funcdef_no=7811, decl_uid=202831, cgraph_uid=4443, symbol_order=5229)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<relate_type*, std::vector<relate_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.257768;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (__rhs);
  _4 = *_3;
  D.257768 = _2 != _4;

  <bb 3> :
<L0>:
  return D.257768;

}



;; Function hash_map<tree_node*, function_relate_array>::~hash_map (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6802, decl_uid=202847, cgraph_uid=3433, symbol_order=4211)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7815, decl_uid=191760, cgraph_uid=4447, symbol_order=5233)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.257783;
  bool D.257782;
  size_t i;
  bool iftmp.1899;
  bool retval.1898;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 32;
  _4 = _2 + _3;
  D.257782 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.257782;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 32;
  _9 = _7 + _8;
  D.257783 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.257783;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1899 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1899 = 0;

  <bb 7> :
  retval.1898 = iftmp.1899;
  if (retval.1898 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 32;
  _14 = _12 + _13;
  hash_map<tree_node*, function_relate_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8775, decl_uid=191534, cgraph_uid=5407, symbol_order=6197)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::remove<hash_map<tree_node*, function_relate_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::remove<hash_map<tree_node*, function_relate_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9609, decl_uid=228788, cgraph_uid=6241, symbol_order=7031)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::remove<hash_map<tree_node*, function_relate_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_relate_array::~function_relate_array (_2);
  return;

}



;; Function std::vector<relate_type>::operator[] (_ZNSt6vectorI11relate_typeSaIS0_EEixEm, funcdef_no=7808, decl_uid=179459, cgraph_uid=4440, symbol_order=5226)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<relate_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.257784;

  <bb 2> :
  _1 = this->D.179806._M_impl.D.179151._M_start;
  _2 = __n * 48;
  D.257784 = _1 + _2;

  <bb 3> :
<L0>:
  return D.257784;

}



;; Function gimple_phi_arg_def (_ZL18gimple_phi_arg_defP6gimplem, funcdef_no=2276, decl_uid=93486, cgraph_uid=1413, symbol_order=1573)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_phi_arg_def (struct gimple * gs, size_t index)
{
  struct phi_arg_d * D.257788;
  union tree_node * D.257786;

  <bb 2> :
  _1 = (unsigned int) index;
  D.257788 = gimple_phi_arg (gs, _1);
  _2 = D.257788;
  D.257786 = _2->def;

  <bb 3> :
<L0>:
  return D.257786;

}



;; Function gimple_phi_arg (_ZL14gimple_phi_argP6gimplej, funcdef_no=2271, decl_uid=93448, cgraph_uid=1408, symbol_order=1568)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct phi_arg_d * gimple_phi_arg (struct gimple * gs, unsigned int index)
{
  struct gphi * D.257791;
  struct gphi * phi_stmt;
  struct phi_arg_d * D.257789;

  <bb 2> :
  D.257791 = as_a<gphi*, gimple> (gs);
  phi_stmt = D.257791;
  D.257789 = gimple_phi_arg (phi_stmt, index);

  <bb 3> :
<L0>:
  return D.257789;

}



;; Function as_a<gphi*, gimple> (_Z4as_aIP4gphi6gimpleET_PT0_, funcdef_no=7074, decl_uid=93430, cgraph_uid=3706, symbol_order=4489)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gphi * as_a<gphi*, gimple> (struct gimple * p)
{
  struct gphi * D.257792;

  <bb 2> :
  D.257792 = reinterpret_is_a_helper<gphi*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.257792;

}



;; Function gimple_phi_arg (_ZL14gimple_phi_argP4gphij, funcdef_no=2269, decl_uid=93440, cgraph_uid=1406, symbol_order=1566)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct phi_arg_d * gimple_phi_arg (struct gphi * gs, unsigned int index)
{
  struct phi_arg_d * D.257794;

  <bb 2> :
  D.257794 = &gs->args[index];

  <bb 3> :
<L0>:
  return D.257794;

}



;; Function gimple_phi_num_args (_ZL19gimple_phi_num_argsPK6gimple, funcdef_no=2263, decl_uid=93413, cgraph_uid=1400, symbol_order=1560)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int gimple_phi_num_args (const struct gimple * gs)
{
  const struct gphi * D.257798;
  const struct gphi * phi_stmt;
  unsigned int D.257796;

  <bb 2> :
  D.257798 = as_a<const gphi*, const gimple> (gs);
  phi_stmt = D.257798;
  D.257796 = phi_stmt->nargs;

  <bb 3> :
<L0>:
  return D.257796;

}



;; Function defmalloc_type::defmalloc_type (_ZN14defmalloc_typeC2Ev, funcdef_no=6805, decl_uid=202878, cgraph_uid=3436, symbol_order=4214)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void defmalloc_type::defmalloc_type (struct defmalloc_type * const this)
{
  <bb 2> :
  _1 = &this->free_array;
  std::vector<free_type>::vector (_1);
  return;

}



;; Function std::vector<defmalloc_type>::push_back (_ZNSt6vectorI14defmalloc_typeSaIS0_EE9push_backERKS0_, funcdef_no=7818, decl_uid=202078, cgraph_uid=4451, symbol_order=5237)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<defmalloc_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.257802;

  <bb 2> :
  _1 = this->D.202398._M_impl.D.201743._M_finish;
  _2 = this->D.202398._M_impl.D.201743._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.202398._M_impl.D.201743._M_finish;
  _4 = &this->D.202398._M_impl;
  std::allocator_traits<std::allocator<defmalloc_type> >::construct<defmalloc_type, const defmalloc_type&> (_4, _3, __x);
  _5 = this->D.202398._M_impl.D.201743._M_finish;
  _6 = _5 + 40;
  this->D.202398._M_impl.D.201743._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.257802 = std::vector<defmalloc_type>::end (this);
  std::vector<defmalloc_type>::_M_realloc_insert<const defmalloc_type&> (this, D.257802, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<defmalloc_type> >::construct<defmalloc_type, const defmalloc_type&> (_ZNSt16allocator_traitsISaI14defmalloc_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8778, decl_uid=215824, cgraph_uid=5410, symbol_order=6200)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<defmalloc_type> >::construct<defmalloc_type, const defmalloc_type&> (struct allocator_type & __a, struct defmalloc_type * __p, const struct defmalloc_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const defmalloc_type&> (__args#0);
  __gnu_cxx::new_allocator<defmalloc_type>::construct<defmalloc_type, const defmalloc_type&> (__a, __p, _1);
  return;

}



;; Function std::forward<const defmalloc_type&> (_ZSt7forwardIRK14defmalloc_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9610, decl_uid=228805, cgraph_uid=6242, symbol_order=7032)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct defmalloc_type & std::forward<const defmalloc_type&> (const struct type & __t)
{
  const struct defmalloc_type & D.257803;

  <bb 2> :
  D.257803 = __t;

  <bb 3> :
<L0>:
  return D.257803;

}



;; Function __gnu_cxx::new_allocator<defmalloc_type>::construct<defmalloc_type, const defmalloc_type&> (_ZN9__gnu_cxx13new_allocatorI14defmalloc_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9611, decl_uid=228807, cgraph_uid=6246, symbol_order=7036)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void __gnu_cxx::new_allocator<defmalloc_type>::construct<defmalloc_type, const defmalloc_type&> (struct new_allocator * const this, struct defmalloc_type * __p, const struct defmalloc_type & __args#0)
{
  void * D.237799;
  void * D.237798;
  const struct defmalloc_type & D.237803;

  <bb 2> :
  D.237803 = std::forward<const defmalloc_type&> (__args#0);
  D.237798 = __p;
  D.237799 = operator new (40, D.237798);
  defmalloc_type::defmalloc_type (D.237799, D.237803);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  operator delete (D.237799, D.237798);
  resx 1

}



;; Function defmalloc_type::defmalloc_type (_ZN14defmalloc_typeC2ERKS_, funcdef_no=9613, decl_uid=202886, cgraph_uid=6244, symbol_order=7034)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void defmalloc_type::defmalloc_type (struct defmalloc_type * const this, const struct defmalloc_type & D.202888)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.202888->stmt;
  this->stmt = _1;
  _2 = D.202888->malloc_tree;
  this->malloc_tree = _2;
  _3 = &this->free_array;
  _4 = &D.202888->free_array;
  std::vector<free_type>::vector (_3, _4);
  return;

}



;; Function std::vector<defmalloc_type>::end (_ZNSt6vectorI14defmalloc_typeSaIS0_EE3endEv, funcdef_no=8779, decl_uid=202011, cgraph_uid=5411, symbol_order=6201)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<defmalloc_type>::end (struct vector * const this)
{
  struct iterator D.228830;
  struct iterator D.257806;

  <bb 2> :
  _1 = &this->D.202398._M_impl.D.201743._M_finish;
  __gnu_cxx::__normal_iterator<defmalloc_type*, std::vector<defmalloc_type> >::__normal_iterator (&D.228830, _1);
  D.257806 = D.228830;
  D.228830 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.257806;

}



;; Function __gnu_cxx::__normal_iterator<defmalloc_type*, std::vector<defmalloc_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP14defmalloc_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9616, decl_uid=216071, cgraph_uid=6248, symbol_order=7038)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<defmalloc_type*, std::vector<defmalloc_type> >::__normal_iterator (struct __normal_iterator * const this, struct defmalloc_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<defmalloc_type>::_M_realloc_insert<const defmalloc_type&> (_ZNSt6vectorI14defmalloc_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8780, decl_uid=216090, cgraph_uid=5415, symbol_order=6205)

Removing basic block 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 10 8 }
;; 8 succs { 10 9 }
;; 9 succs { 10 }
;; 10 succs { }
void std::vector<defmalloc_type>::_M_realloc_insert<const defmalloc_type&> (struct vector * const this, struct iterator __position, const struct defmalloc_type & __args#0)
{
  struct defmalloc_type * D.257813;
  const size_type D.257812;
  struct defmalloc_type * __new_finish;
  struct defmalloc_type * __new_start;
  const size_type __elems_before;
  struct defmalloc_type * __old_finish;
  struct defmalloc_type * __old_start;
  const size_type __len;
  struct iterator D.228838;

  <bb 2> :
  D.257812 = std::vector<defmalloc_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.257812;
  __old_start = this->D.202398._M_impl.D.201743._M_start;
  __old_finish = this->D.202398._M_impl.D.201743._M_finish;
  D.228838 = std::vector<defmalloc_type>::begin (this);
  _1 = __gnu_cxx::operator-<defmalloc_type*, std::vector<defmalloc_type> > (&__position, &D.228838);
  __elems_before = (const size_type) _1;
  D.228838 = {CLOBBER};
  _2 = &this->D.202398;
  D.257813 = std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_allocate (_2, __len);
  __new_start = D.257813;
  __new_finish = __new_start;
  _3 = std::forward<const defmalloc_type&> (__args#0);
  _4 = __elems_before * 40;
  _5 = __new_start + _4;
  _6 = &this->D.202398._M_impl;
  std::allocator_traits<std::allocator<defmalloc_type> >::construct<defmalloc_type, const defmalloc_type&> (_6, _5, _3);

  <bb 3> :
  __new_finish = 0B;
  _7 = &this->D.202398;
  _8 = std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<defmalloc_type*, std::vector<defmalloc_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<defmalloc_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 40;
  _11 = &this->D.202398;
  _12 = std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<defmalloc_type*, std::vector<defmalloc_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<defmalloc_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.202398;
  _23 = this->D.202398._M_impl.D.201743._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 40;
  _26 = (long unsigned int) _25;
  std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.202398._M_impl.D.201743._M_start = __new_start;
  this->D.202398._M_impl.D.201743._M_finish = __new_finish;
  _27 = __len * 40;
  _28 = __new_start + _27;
  this->D.202398._M_impl.D.201743._M_end_of_storage = _28;
  return;

  <bb 4> :
<L0>:
  eh_dispatch 2

  <bb 5> :
<L1>:
  _15 = __builtin_eh_pointer (2);
  __cxa_begin_catch (_15);
  if (__new_finish == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _16 = __elems_before * 40;
  _17 = __new_start + _16;
  _18 = &this->D.202398._M_impl;
  std::allocator_traits<std::allocator<defmalloc_type> >::destroy<defmalloc_type> (_18, _17);
  goto <bb 8>; [INV]

  <bb 7> :
  _19 = &this->D.202398;
  _20 = std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_get_Tp_allocator (_19);
  std::_Destroy<defmalloc_type*, defmalloc_type> (__new_start, __new_finish, _20);

  <bb 8> :
  _21 = &this->D.202398;
  std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_deallocate (_21, __new_start, __len);

  <bb 9> :
  __cxa_rethrow ();

  <bb 10> :
<L5>:
  __cxa_end_catch ();
  resx 3

}



;; Function std::vector<defmalloc_type>::_M_check_len (_ZNKSt6vectorI14defmalloc_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9618, decl_uid=202247, cgraph_uid=6250, symbol_order=7040)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<defmalloc_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.1902;
  size_type D.257820;
  const long unsigned int D.237812;
  bool retval.1900;

  <bb 2> :
  _1 = std::vector<defmalloc_type>::max_size (this);
  _2 = std::vector<defmalloc_type>::size (this);
  _3 = _1 - _2;
  __n.1901_4 = __n;
  retval.1900 = _3 < __n.1901_4;
  if (retval.1900 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<defmalloc_type>::size (this);
  _6 = std::vector<defmalloc_type>::size (this);
  D.237812 = _6;
  _7 = std::max<long unsigned int> (&D.237812, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.237812 = {CLOBBER};
  _9 = std::vector<defmalloc_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<defmalloc_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1902 = std::vector<defmalloc_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1902 = __len;

  <bb 8> :
  D.257820 = iftmp.1902;

  <bb 9> :
<L6>:
  return D.257820;

}



;; Function std::vector<defmalloc_type>::max_size (_ZNKSt6vectorI14defmalloc_typeSaIS0_EE8max_sizeEv, funcdef_no=10221, decl_uid=202033, cgraph_uid=6853, symbol_order=7647)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<defmalloc_type>::max_size (const struct vector * const this)
{
  size_type D.257827;

  <bb 2> :
  _1 = &this->D.202398;
  _2 = std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_get_Tp_allocator (_1);
  D.257827 = std::vector<defmalloc_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.257827;

}



;; Function std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI14defmalloc_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=10690, decl_uid=201633, cgraph_uid=7322, symbol_order=8116)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.257829;

  <bb 2> :
  D.257829 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.257829;

}



;; Function std::vector<defmalloc_type>::_S_max_size (_ZNSt6vectorI14defmalloc_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10689, decl_uid=202254, cgraph_uid=7321, symbol_order=8115)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<defmalloc_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.257831;

  <bb 2> :
  __diffmax = 230584300921369395;
  _1 = std::allocator_traits<std::allocator<defmalloc_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.257831 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.257831;

}



;; Function std::allocator_traits<std::allocator<defmalloc_type> >::max_size (_ZNSt16allocator_traitsISaI14defmalloc_typeEE8max_sizeERKS1_, funcdef_no=10895, decl_uid=201568, cgraph_uid=7527, symbol_order=8323)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<defmalloc_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.257834;

  <bb 2> :
  D.257834 = __gnu_cxx::new_allocator<defmalloc_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.257834;

}



;; Function __gnu_cxx::new_allocator<defmalloc_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI14defmalloc_typeE8max_sizeEv, funcdef_no=10995, decl_uid=201410, cgraph_uid=7627, symbol_order=8423)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<defmalloc_type>::max_size (const struct new_allocator * const this)
{
  size_type D.257836;

  <bb 2> :
  D.257836 = __gnu_cxx::new_allocator<defmalloc_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.257836;

}



;; Function __gnu_cxx::new_allocator<defmalloc_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI14defmalloc_typeE11_M_max_sizeEv, funcdef_no=10692, decl_uid=201429, cgraph_uid=7323, symbol_order=8117)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<defmalloc_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.257838;

  <bb 2> :
  D.257838 = 230584300921369395;

  <bb 3> :
<L0>:
  return D.257838;

}



;; Function std::vector<defmalloc_type>::begin (_ZNSt6vectorI14defmalloc_typeSaIS0_EE5beginEv, funcdef_no=9619, decl_uid=202007, cgraph_uid=6251, symbol_order=7041)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<defmalloc_type>::begin (struct vector * const this)
{
  struct iterator D.237814;
  struct iterator D.257840;

  <bb 2> :
  _1 = &this->D.202398._M_impl.D.201743._M_start;
  __gnu_cxx::__normal_iterator<defmalloc_type*, std::vector<defmalloc_type> >::__normal_iterator (&D.237814, _1);
  D.257840 = D.237814;
  D.237814 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.257840;

}



;; Function __gnu_cxx::operator-<defmalloc_type*, std::vector<defmalloc_type> > (_ZN9__gnu_cxxmiIP14defmalloc_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9620, decl_uid=228839, cgraph_uid=6252, symbol_order=7042)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<defmalloc_type*, std::vector<defmalloc_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.257843;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<defmalloc_type*, std::vector<defmalloc_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<defmalloc_type*, std::vector<defmalloc_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.257843 = _5 /[ex] 40;

  <bb 3> :
<L0>:
  return D.257843;

}



;; Function std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_allocate (_ZNSt12_Vector_baseI14defmalloc_typeSaIS0_EE11_M_allocateEm, funcdef_no=9621, decl_uid=201747, cgraph_uid=6253, symbol_order=7043)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct defmalloc_type * std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct defmalloc_type * D.257851;
  struct defmalloc_type * iftmp.1903;
  struct defmalloc_type * D.257845;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.257851 = std::allocator_traits<std::allocator<defmalloc_type> >::allocate (_1, __n);
  iftmp.1903 = D.257851;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1903 = 0B;

  <bb 5> :
  D.257845 = iftmp.1903;

  <bb 6> :
<L3>:
  return D.257845;

}



;; Function std::allocator_traits<std::allocator<defmalloc_type> >::allocate (_ZNSt16allocator_traitsISaI14defmalloc_typeEE8allocateERS1_m, funcdef_no=10222, decl_uid=201548, cgraph_uid=6854, symbol_order=7648)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct defmalloc_type * std::allocator_traits<std::allocator<defmalloc_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct defmalloc_type * D.257854;
  struct defmalloc_type * D.257852;

  <bb 2> :
  D.257854 = __gnu_cxx::new_allocator<defmalloc_type>::allocate (__a, __n, 0B);
  D.257852 = D.257854;

  <bb 3> :
<L0>:
  return D.257852;

}



;; Function __gnu_cxx::new_allocator<defmalloc_type>::allocate (_ZN9__gnu_cxx13new_allocatorI14defmalloc_typeE8allocateEmPKv, funcdef_no=10691, decl_uid=201402, cgraph_uid=7324, symbol_order=8118)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct defmalloc_type * __gnu_cxx::new_allocator<defmalloc_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.246013)
{
  struct defmalloc_type * D.257865;
  struct defmalloc_type * D.257864;
  align_val_t __al;
  struct defmalloc_type * D.257862;
  bool retval.1904;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<defmalloc_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.1904 = _4 != 0;
  if (retval.1904 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 461168601842738790)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 40;
  D.257865 = operator new (_6);
  D.257862 = D.257865;

  <bb 7> :
<L6>:
  return D.257862;

}



;; Function __gnu_cxx::__normal_iterator<defmalloc_type*, std::vector<defmalloc_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP14defmalloc_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9623, decl_uid=216058, cgraph_uid=6255, symbol_order=7045)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct defmalloc_type * const & __gnu_cxx::__normal_iterator<defmalloc_type*, std::vector<defmalloc_type> >::base (const struct __normal_iterator * const this)
{
  struct defmalloc_type * const & D.257866;

  <bb 2> :
  D.257866 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.257866;

}



;; Function std::vector<defmalloc_type>::_S_relocate (_ZNSt6vectorI14defmalloc_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9622, decl_uid=201905, cgraph_uid=6254, symbol_order=7044)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct defmalloc_type * std::vector<defmalloc_type>::_S_relocate (struct defmalloc_type * __first, struct defmalloc_type * __last, struct defmalloc_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.257869;
  struct defmalloc_type * D.257868;

  <bb 2> :
  D.257868 = std::vector<defmalloc_type>::_S_do_relocate (__first, __last, __result, __alloc, D.257869);

  <bb 3> :
<L0>:
  return D.257868;

}



;; Function std::vector<defmalloc_type>::_S_do_relocate (_ZNSt6vectorI14defmalloc_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10223, decl_uid=201893, cgraph_uid=6855, symbol_order=7649)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct defmalloc_type * std::vector<defmalloc_type>::_S_do_relocate (struct defmalloc_type * __first, struct defmalloc_type * __last, struct defmalloc_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.242778)
{
  struct defmalloc_type * D.257871;

  <bb 2> :
  D.257871 = std::__relocate_a<defmalloc_type*, defmalloc_type*, std::allocator<defmalloc_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.257871;

}



;; Function std::__relocate_a<defmalloc_type*, defmalloc_type*, std::allocator<defmalloc_type> > (_ZSt12__relocate_aIP14defmalloc_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10693, decl_uid=229004, cgraph_uid=7325, symbol_order=8119)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct defmalloc_type * std::__relocate_a<defmalloc_type*, defmalloc_type*, std::allocator<defmalloc_type> > (struct defmalloc_type * __first, struct defmalloc_type * __last, struct defmalloc_type * __result, struct allocator & __alloc)
{
  struct defmalloc_type * D.257873;

  <bb 2> :
  _1 = std::__niter_base<defmalloc_type*> (__result);
  _2 = std::__niter_base<defmalloc_type*> (__last);
  _3 = std::__niter_base<defmalloc_type*> (__first);
  D.257873 = std::__relocate_a_1<defmalloc_type*, defmalloc_type*, std::allocator<defmalloc_type> > (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.257873;

}



;; Function std::__niter_base<defmalloc_type*> (_ZSt12__niter_baseIP14defmalloc_typeET_S2_, funcdef_no=10896, decl_uid=229010, cgraph_uid=7528, symbol_order=8324)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct defmalloc_type * std::__niter_base<defmalloc_type*> (struct defmalloc_type * __it)
{
  struct defmalloc_type * D.257875;

  <bb 2> :
  D.257875 = __it;

  <bb 3> :
<L0>:
  return D.257875;

}



;; Function std::__relocate_a_1<defmalloc_type*, defmalloc_type*, std::allocator<defmalloc_type> > (_ZSt14__relocate_a_1IP14defmalloc_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10897, decl_uid=229155, cgraph_uid=7529, symbol_order=8325)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct defmalloc_type * std::__relocate_a_1<defmalloc_type*, defmalloc_type*, std::allocator<defmalloc_type> > (struct defmalloc_type * __first, struct defmalloc_type * __last, struct defmalloc_type * __result, struct allocator & __alloc)
{
  struct defmalloc_type * __cur;
  struct defmalloc_type * D.257877;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<defmalloc_type> (__first);
  _2 = std::__addressof<defmalloc_type> (__cur);
  std::__relocate_object_a<defmalloc_type, defmalloc_type, std::allocator<defmalloc_type> > (_2, _1, __alloc);
  __first = __first + 40;
  __cur = __cur + 40;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.257877 = __cur;

  <bb 6> :
<L3>:
  return D.257877;

}



;; Function std::__addressof<defmalloc_type> (_ZSt11__addressofI14defmalloc_typeEPT_RS1_, funcdef_no=10687, decl_uid=229211, cgraph_uid=7319, symbol_order=8113)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct defmalloc_type * std::__addressof<defmalloc_type> (struct defmalloc_type & __r)
{
  struct defmalloc_type * D.257879;

  <bb 2> :
  D.257879 = __r;

  <bb 3> :
<L0>:
  return D.257879;

}



;; Function std::__relocate_object_a<defmalloc_type, defmalloc_type, std::allocator<defmalloc_type> > (_ZSt19__relocate_object_aI14defmalloc_typeS0_SaIS0_EEvPT_PT0_RT1_, funcdef_no=10996, decl_uid=229184, cgraph_uid=7628, symbol_order=8424)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__relocate_object_a<defmalloc_type, defmalloc_type, std::allocator<defmalloc_type> > (struct defmalloc_type * restrict __dest, struct defmalloc_type * restrict __orig, struct allocator & __alloc)
{
  <bb 2> :
  _1 = std::move<defmalloc_type&> (__orig);
  std::allocator_traits<std::allocator<defmalloc_type> >::construct<defmalloc_type, defmalloc_type> (__alloc, __dest, _1);
  _2 = std::__addressof<defmalloc_type> (__orig);
  std::allocator_traits<std::allocator<defmalloc_type> >::destroy<defmalloc_type> (__alloc, _2);
  return;

}



;; Function std::move<defmalloc_type&> (_ZSt4moveIR14defmalloc_typeEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=11040, decl_uid=229196, cgraph_uid=7672, symbol_order=8468)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<defmalloc_type&> (struct defmalloc_type & __t)
{
  struct type & D.257881;

  <bb 2> :
  D.257881 = __t;

  <bb 3> :
<L0>:
  return D.257881;

}



;; Function std::allocator_traits<std::allocator<defmalloc_type> >::construct<defmalloc_type, defmalloc_type> (_ZNSt16allocator_traitsISaI14defmalloc_typeEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_, funcdef_no=11041, decl_uid=229198, cgraph_uid=7673, symbol_order=8469)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<defmalloc_type> >::construct<defmalloc_type, defmalloc_type> (struct allocator_type & __a, struct defmalloc_type * __p, struct defmalloc_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<defmalloc_type> (__args#0);
  __gnu_cxx::new_allocator<defmalloc_type>::construct<defmalloc_type, defmalloc_type> (__a, __p, _1);
  return;

}



;; Function std::forward<defmalloc_type> (_ZSt7forwardI14defmalloc_typeEOT_RNSt16remove_referenceIS1_E4typeE, funcdef_no=11062, decl_uid=247765, cgraph_uid=7694, symbol_order=8490)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct defmalloc_type & std::forward<defmalloc_type> (struct type & __t)
{
  struct defmalloc_type & D.257883;

  <bb 2> :
  D.257883 = __t;

  <bb 3> :
<L0>:
  return D.257883;

}



;; Function __gnu_cxx::new_allocator<defmalloc_type>::construct<defmalloc_type, defmalloc_type> (_ZN9__gnu_cxx13new_allocatorI14defmalloc_typeE9constructIS1_JS1_EEEvPT_DpOT0_, funcdef_no=11063, decl_uid=247767, cgraph_uid=7698, symbol_order=8494)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<defmalloc_type>::construct<defmalloc_type, defmalloc_type> (struct new_allocator * const this, struct defmalloc_type * __p, struct defmalloc_type & __args#0)
{
  void * D.248184;
  void * D.248183;
  struct defmalloc_type & D.248188;

  <bb 2> :
  D.248188 = std::forward<defmalloc_type> (__args#0);
  D.248183 = __p;
  D.248184 = operator new (40, D.248183);
  defmalloc_type::defmalloc_type (D.248184, D.248188);
  return;

}



;; Function defmalloc_type::defmalloc_type (_ZN14defmalloc_typeC2EOS_, funcdef_no=11065, decl_uid=202895, cgraph_uid=7696, symbol_order=8492)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void defmalloc_type::defmalloc_type (struct defmalloc_type * const this, struct defmalloc_type & D.202897)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.202897->stmt;
  this->stmt = _1;
  _2 = D.202897->malloc_tree;
  this->malloc_tree = _2;
  _3 = &this->free_array;
  _4 = &D.202897->free_array;
  std::vector<free_type>::vector (_3, _4);
  return;

}



;; Function std::allocator_traits<std::allocator<defmalloc_type> >::destroy<defmalloc_type> (_ZNSt16allocator_traitsISaI14defmalloc_typeEE7destroyIS0_EEvRS1_PT_, funcdef_no=9624, decl_uid=229213, cgraph_uid=6256, symbol_order=7046)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<defmalloc_type> >::destroy<defmalloc_type> (struct allocator_type & __a, struct defmalloc_type * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<defmalloc_type>::destroy<defmalloc_type> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<defmalloc_type>::destroy<defmalloc_type> (_ZN9__gnu_cxx13new_allocatorI14defmalloc_typeE7destroyIS1_EEvPT_, funcdef_no=10224, decl_uid=237832, cgraph_uid=6856, symbol_order=7650)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<defmalloc_type>::destroy<defmalloc_type> (struct new_allocator * const this, struct defmalloc_type * __p)
{
  <bb 2> :
  defmalloc_type::~defmalloc_type (__p);
  return;

}



;; Function std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI14defmalloc_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8762, decl_uid=201631, cgraph_uid=5394, symbol_order=6184)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.257885;

  <bb 2> :
  D.257885 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.257885;

}



;; Function std::_Destroy<defmalloc_type*, defmalloc_type> (_ZSt8_DestroyIP14defmalloc_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8763, decl_uid=215749, cgraph_uid=5395, symbol_order=6185)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<defmalloc_type*, defmalloc_type> (struct defmalloc_type * __first, struct defmalloc_type * __last, struct allocator & D.228754)
{
  <bb 2> :
  std::_Destroy<defmalloc_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<defmalloc_type*> (_ZSt8_DestroyIP14defmalloc_typeEvT_S2_, funcdef_no=9606, decl_uid=228756, cgraph_uid=6238, symbol_order=7028)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<defmalloc_type*> (struct defmalloc_type * __first, struct defmalloc_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<false>::__destroy<defmalloc_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<false>::__destroy<defmalloc_type*> (_ZNSt12_Destroy_auxILb0EE9__destroyIP14defmalloc_typeEEvT_S4_, funcdef_no=10218, decl_uid=237763, cgraph_uid=6850, symbol_order=7644)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void std::_Destroy_aux<false>::__destroy<defmalloc_type*> (struct defmalloc_type * __first, struct defmalloc_type * __last)
{
  <bb 2> :
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<defmalloc_type> (__first);
  std::_Destroy<defmalloc_type> (_1);
  __first = __first + 40;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



;; Function std::_Destroy<defmalloc_type> (_ZSt8_DestroyI14defmalloc_typeEvPT_, funcdef_no=10688, decl_uid=242759, cgraph_uid=7320, symbol_order=8114)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<defmalloc_type> (struct defmalloc_type * __pointer)
{
  <bb 2> :
  defmalloc_type::~defmalloc_type (__pointer);
  return;

}



;; Function std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_deallocate (_ZNSt12_Vector_baseI14defmalloc_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8761, decl_uid=201750, cgraph_uid=5393, symbol_order=6183)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_deallocate (struct _Vector_base * const this, struct defmalloc_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<defmalloc_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<defmalloc_type> >::deallocate (_ZNSt16allocator_traitsISaI14defmalloc_typeEE10deallocateERS1_PS0_m, funcdef_no=9605, decl_uid=201555, cgraph_uid=6237, symbol_order=7027)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<defmalloc_type> >::deallocate (struct allocator_type & __a, struct defmalloc_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<defmalloc_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<defmalloc_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI14defmalloc_typeE10deallocateEPS1_m, funcdef_no=10217, decl_uid=201406, cgraph_uid=6849, symbol_order=7643)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<defmalloc_type>::deallocate (struct new_allocator * const this, struct defmalloc_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 40;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<free_type>::at (_ZNSt6vectorI9free_typeSaIS0_EE2atEm, funcdef_no=7817, decl_uid=173153, cgraph_uid=4449, symbol_order=5235)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<free_type>::at (struct vector * const this, size_type __n)
{
  struct value_type & D.257893;

  <bb 2> :
  std::vector<free_type>::_M_range_check (this, __n);
  D.257893 = std::vector<free_type>::operator[] (this, __n);

  <bb 3> :
<L0>:
  return D.257893;

}



;; Function std::vector<free_type>::_M_range_check (_ZNKSt6vectorI9free_typeSaIS0_EE14_M_range_checkEm, funcdef_no=8777, decl_uid=173150, cgraph_uid=5409, symbol_order=6199)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
void std::vector<free_type>::_M_range_check (const struct vector * const this, size_type __n)
{
  bool retval.1905;

  <bb 2> :
  _1 = std::vector<free_type>::size (this);
  retval.1905 = __n >= _1;
  if (retval.1905 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = std::vector<free_type>::size (this);
  std::__throw_out_of_range_fmt ("vector::_M_range_check: __n (which is %zu) >= this->size() (which is %zu)", __n, _2);

  <bb 4> :
  return;

}



;; Function std::vector<defmalloc_type>::at (_ZNSt6vectorI14defmalloc_typeSaIS0_EE2atEm, funcdef_no=7821, decl_uid=202060, cgraph_uid=4453, symbol_order=5239)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<defmalloc_type>::at (struct vector * const this, size_type __n)
{
  struct value_type & D.257898;

  <bb 2> :
  std::vector<defmalloc_type>::_M_range_check (this, __n);
  D.257898 = std::vector<defmalloc_type>::operator[] (this, __n);

  <bb 3> :
<L0>:
  return D.257898;

}



;; Function std::vector<defmalloc_type>::_M_range_check (_ZNKSt6vectorI14defmalloc_typeSaIS0_EE14_M_range_checkEm, funcdef_no=8784, decl_uid=202057, cgraph_uid=5416, symbol_order=6206)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
void std::vector<defmalloc_type>::_M_range_check (const struct vector * const this, size_type __n)
{
  bool retval.1906;

  <bb 2> :
  _1 = std::vector<defmalloc_type>::size (this);
  retval.1906 = __n >= _1;
  if (retval.1906 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = std::vector<defmalloc_type>::size (this);
  std::__throw_out_of_range_fmt ("vector::_M_range_check: __n (which is %zu) >= this->size() (which is %zu)", __n, _2);

  <bb 4> :
  return;

}



;; Function std::vector<defmalloc_type>::operator[] (_ZNSt6vectorI14defmalloc_typeSaIS0_EEixEm, funcdef_no=8785, decl_uid=202051, cgraph_uid=5417, symbol_order=6207)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<defmalloc_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.257903;

  <bb 2> :
  _1 = this->D.202398._M_impl.D.201743._M_start;
  _2 = __n * 40;
  D.257903 = _1 + _2;

  <bb 3> :
<L0>:
  return D.257903;

}



;; Function std::vector<defmalloc_type>::size (_ZNKSt6vectorI14defmalloc_typeSaIS0_EE4sizeEv, funcdef_no=7820, decl_uid=202031, cgraph_uid=4452, symbol_order=5238)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<defmalloc_type>::size (const struct vector * const this)
{
  size_type D.257905;

  <bb 2> :
  _1 = this->D.202398._M_impl.D.201743._M_finish;
  _2 = this->D.202398._M_impl.D.201743._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 40;
  D.257905 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.257905;

}



;; Function defmalloc_type::~defmalloc_type (_ZN14defmalloc_typeD2Ev, funcdef_no=6808, decl_uid=202907, cgraph_uid=3439, symbol_order=4217)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void defmalloc_type::~defmalloc_type (struct defmalloc_type * const this)
{
  <bb 2> :
  _1 = &this->free_array;
  std::vector<free_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<basic_block_def*>::~vector (_ZNSt6vectorIP15basic_block_defSaIS1_EED2Ev, funcdef_no=7802, decl_uid=170298, cgraph_uid=4434, symbol_order=5220)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<basic_block_def*>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.170301;
  _2 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_1);
  _3 = this->D.170301._M_impl.D.169646._M_finish;
  _4 = this->D.170301._M_impl.D.169646._M_start;
  std::_Destroy<basic_block_def**, basic_block_def*> (_4, _3, _2);
  _5 = &this->D.170301;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<basic_block_def**, basic_block_def*> (_ZSt8_DestroyIPP15basic_block_defS1_EvT_S3_RSaIT0_E, funcdef_no=8765, decl_uid=215764, cgraph_uid=5397, symbol_order=6187)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<basic_block_def**, basic_block_def*> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct allocator & D.228762)
{
  <bb 2> :
  std::_Destroy<basic_block_def**> (__first, __last);
  return;

}



;; Function std::_Destroy<basic_block_def**> (_ZSt8_DestroyIPP15basic_block_defEvT_S3_, funcdef_no=9607, decl_uid=228764, cgraph_uid=6239, symbol_order=7029)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<basic_block_def**> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<basic_block_def**> (_ZNSt12_Destroy_auxILb1EE9__destroyIPP15basic_block_defEEvT_S5_, funcdef_no=10219, decl_uid=237782, cgraph_uid=6851, symbol_order=7645)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<basic_block_def**> (struct basic_block_def * * D.242765, struct basic_block_def * * D.242766)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::~_Vector_base (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EED2Ev, funcdef_no=7576, decl_uid=169756, cgraph_uid=4208, symbol_order=4994)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.169646._M_end_of_storage;
  _2 = this->_M_impl.D.169646._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.169646._M_start;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE12_Vector_implD2Ev, funcdef_no=6197, decl_uid=169693, cgraph_uid=3171, symbol_order=3925)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<basic_block_def*>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<basic_block_def*>::~allocator (_ZNSaIP15basic_block_defED2Ev, funcdef_no=7573, decl_uid=169426, cgraph_uid=4205, symbol_order=4991)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<basic_block_def*>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<basic_block_def*>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defED2Ev, funcdef_no=8404, decl_uid=169355, cgraph_uid=5036, symbol_order=5826)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<basic_block_def*>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<defmalloc_type>::~vector (_ZNSt6vectorI14defmalloc_typeSaIS0_EED2Ev, funcdef_no=7799, decl_uid=202395, cgraph_uid=4431, symbol_order=5217)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<defmalloc_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.202398;
  _2 = std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.202398._M_impl.D.201743._M_finish;
  _4 = this->D.202398._M_impl.D.201743._M_start;
  std::_Destroy<defmalloc_type*, defmalloc_type> (_4, _3, _2);
  _5 = &this->D.202398;
  std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::~_Vector_base (_ZNSt12_Vector_baseI14defmalloc_typeSaIS0_EED2Ev, funcdef_no=7796, decl_uid=201853, cgraph_uid=4428, symbol_order=5214)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.201743._M_end_of_storage;
  _2 = this->_M_impl.D.201743._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 40;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.201743._M_start;
  std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI14defmalloc_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6792, decl_uid=201790, cgraph_uid=3421, symbol_order=4199)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<defmalloc_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<defmalloc_type>::~allocator (_ZNSaI14defmalloc_typeED2Ev, funcdef_no=7793, decl_uid=201523, cgraph_uid=4425, symbol_order=5211)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<defmalloc_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<defmalloc_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<defmalloc_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI14defmalloc_typeED2Ev, funcdef_no=8759, decl_uid=201452, cgraph_uid=5391, symbol_order=6181)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<defmalloc_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function record_fucntion (_Z15record_fucntionP11cgraph_node, funcdef_no=6810, decl_uid=186997, cgraph_uid=3474, symbol_order=4252)

Removing basic block 50
;; 7 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72
;;
;; Loop 1
;;  header 61, latch 60
;;  depth 1, outer 0
;;  nodes: 61 60 59 57 58 6 11 10 9 8 7 5 4 56 55 54 53 30 52 51 31 50 33 49 35 34 48 39 47 46 45 40 44 42 43 41 38 37 36 32 29 13 28 18 27 24 26 25 23 19 22 20 21 17 15 16 14 12
;;
;; Loop 3
;;  header 53, latch 52
;;  depth 2, outer 1
;;  nodes: 53 52 51 31 50 33 49 35 34 48 39 47 46 45 40 44 42 43 41 38 37 36 32
;;
;; Loop 4
;;  header 51, latch 50
;;  depth 3, outer 3
;;  nodes: 51 50 33 49 35 34 48 39 47 46 45 40 44 42 43 41 38 37 36 32
;;
;; Loop 5
;;  header 45, latch 44
;;  depth 4, outer 4
;;  nodes: 45 44 42 43 41 46
;;
;; Loop 2
;;  header 29, latch 28
;;  depth 2, outer 1
;;  nodes: 29 28 18 27 24 26 25 23 19 22 20 21 17 15 16 14
;;
;; Loop 6
;;  header 23, latch 22
;;  depth 3, outer 2
;;  nodes: 23 22 20 21
;; 2 succs { 72 3 }
;; 3 succs { 61 }
;; 4 succs { 71 5 }
;; 5 succs { 6 7 }
;; 6 succs { 58 }
;; 7 succs { 71 8 }
;; 8 succs { 71 9 }
;; 9 succs { 10 12 }
;; 10 succs { 71 11 }
;; 11 succs { 58 }
;; 12 succs { 69 13 }
;; 13 succs { 29 }
;; 14 succs { 15 16 }
;; 15 succs { 17 }
;; 16 succs { 17 }
;; 17 succs { 69 18 }
;; 18 succs { 19 28 }
;; 19 succs { 23 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 20 24 }
;; 24 succs { 25 27 }
;; 25 succs { 63 26 }
;; 26 succs { 27 }
;; 27 succs { 28 }
;; 28 succs { 29 }
;; 29 succs { 14 30 }
;; 30 succs { 53 }
;; 31 succs { 51 }
;; 32 succs { 68 33 }
;; 33 succs { 34 50 }
;; 34 succs { 68 35 }
;; 35 succs { 36 50 }
;; 36 succs { 67 37 }
;; 37 succs { 66 38 }
;; 38 succs { 66 39 }
;; 39 succs { 40 48 }
;; 40 succs { 45 }
;; 41 succs { 42 43 }
;; 42 succs { 44 }
;; 43 succs { 44 }
;; 44 succs { 65 45 }
;; 45 succs { 65 46 }
;; 46 succs { 41 47 }
;; 47 succs { 48 }
;; 48 succs { 66 49 }
;; 49 succs { 50 }
;; 50 succs { 51 }
;; 51 succs { 32 52 }
;; 52 succs { 53 }
;; 53 succs { 31 54 }
;; 54 succs { 69 55 }
;; 55 succs { 69 56 }
;; 56 succs { 69 57 }
;; 57 succs { 59 }
;; 58 succs { 59 }
;; 59 succs { 72 60 }
;; 60 succs { 61 }
;; 61 succs { 4 62 }
;; 62 succs { 1 }
;; 63 succs { 64 }
;; 64 succs { 69 }
;; 65 succs { 66 }
;; 66 succs { 67 }
;; 67 succs { 68 }
;; 68 succs { 69 }
;; 69 succs { 70 }
;; 70 succs { 71 }
;; 71 succs { 72 }
;; 72 succs { }
void record_fucntion (struct cgraph_node * node)
{
  struct cgraph_node * D.257964;
  struct function * D.257958;
  bool D.257953;
  union tree_node * D.257952;
  union tree_node * D.257951;
  tree_code D.257950;
  tree_code D.257949;
  struct cgraph_node * D.257946;
  struct function * D.257945;
  bool D.257944;
  struct cgraph_node * D.257943;
  int init;
  struct edge_iterator ei;
  struct edge_def * e;
  struct symbolicinfo symbolicinfo;
  tree_code code;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct function_path path_type;
  struct iterator it_i;
  int find;
  struct cgraph_node * callee;
  struct cgraph_node * caller;
  struct vector function_path_array;
  struct function_path_array fun_array;
  availability avail;
  struct basic_block_def * bb;
  struct cgraph_edge * e;
  bool retval.1924;
  bool retval.1922;
  bool retval.1916;
  bool retval.1915;
  struct iterator D.203290;
  bool retval.1912;
  bool retval.1911;
  struct cgraph_node * iftmp.1910;
  bool retval.1908;

  <bb 2> :
  symtab.1907_1 = symtab;
  D.257943 = symbol_table::first_defined_function (symtab.1907_1);

  <bb 3> :
  node = D.257943;
  goto <bb 61>; [INV]

  <bb 4> :
  _2 = node->D.97512.decl;
  D.257944 = gimple_has_body_p (_2);

  <bb 5> :
  _3 = D.257944;
  retval.1908 = ~_3;
  if (retval.1908 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  // predicted unlikely by continue predictor.
  goto <bb 58>; [INV]

  <bb 7> :
  D.257945 = cgraph_node::get_fun (node);

  <bb 8> :
  _4 = D.257945;
  push_cfun (_4);

  <bb 9> :
  cfun.1909_5 = cfun;
  if (cfun.1909_5 == 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  pop_cfun ();

  <bb 11> :
  // predicted unlikely by continue predictor.
  goto <bb 58>; [INV]

  <bb 12> :
  function_path_array::function_path_array (&fun_array);
  std::vector<function_path>::vector (&function_path_array);
  std::vector<function_path>::operator= (&fun_array.function_path_array, &function_path_array);

  <bb 13> :
  e = node->callees;
  goto <bb 29>; [INV]

  <bb 14> :
  _6 = e->caller;
  _7 = _6->inlined_to;
  if (_7 != 0B)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  _8 = e->caller;
  iftmp.1910 = _8->inlined_to;
  goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1910 = e->caller;

  <bb 17> :
  caller = iftmp.1910;
  _9 = e->callee;
  D.257946 = cgraph_node::ultimate_alias_target (_9, &avail, caller);

  <bb 18> :
  callee = D.257946;
  if (callee != 0B)
    goto <bb 19>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 19> :
  find = 0;
  it_i._M_current = 0B;
  it_i = std::vector<function_path>::begin (&fun_array.function_path_array);
  goto <bb 23>; [INV]

  <bb 20> :
  _10 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator-> (&it_i);
  _11 = _10->next;
  _12 = callee->D.97512.decl;
  retval.1911 = _11 == _12;
  if (retval.1911 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  find = 1;

  <bb 22> :
  __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator++ (&it_i);

  <bb 23> :
  D.203290 = std::vector<function_path>::end (&fun_array.function_path_array);
  retval.1912 = __gnu_cxx::operator!=<function_path*, std::vector<function_path> > (&it_i, &D.203290);
  D.203290 = {CLOBBER};
  if (retval.1912 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  if (find == 0)
    goto <bb 25>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 25> :
  path_type.cgnext = callee;
  _13 = callee->D.97512.decl;
  path_type.next = _13;
  std::vector<function_path>::push_back (&fun_array.function_path_array, &path_type);

  <bb 26> :
  path_type = {CLOBBER};

  <bb 27> :
  it_i = {CLOBBER};

  <bb 28> :
  e = e->next_callee;

  <bb 29> :
  if (e != 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 30> :
  cfun.1913_14 = cfun;
  _15 = cfun.1913_14->cfg;
  _16 = _15->x_entry_block_ptr;
  _17 = _16->next_bb;
  bb = _17;
  goto <bb 53>; [INV]

  <bb 31> :
  bb.1914_18 = bb;
  gsi = gsi_start_bb (bb.1914_18); [return slot optimization]
  goto <bb 51>; [INV]

  <bb 32> :
  gc = gsi_stmt (gsi);
  D.257949 = gimple_cond_code (gc);

  <bb 33> :
  _19 = D.257949;
  retval.1915 = _19 != 0;
  if (retval.1915 != 0)
    goto <bb 34>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 34> :
  D.257950 = gimple_cond_code (gc);

  <bb 35> :
  code = D.257950;
  _20 = is_gimple_assign (gc);
  retval.1916 = ~_20;
  if (retval.1916 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 36> :
  std::vector<basic_block_def*>::push_back (&symbolicExecution, &bb);

  <bb 37> :
  symbolicinfo::symbolicinfo (&symbolicinfo);
  symbolicinfo.cond_stmt = gc;
  D.257951 = gimple_cond_lhs (gc);

  <bb 38> :
  _21 = D.257951;
  symbolicinfo.cond_lhs = _21;
  D.257952 = gimple_cond_rhs (gc);

  <bb 39> :
  _22 = D.257952;
  symbolicinfo.cond_rhs = _22;
  symbolicinfo.node = node;
  cfun.1917_23 = cfun;
  _24 = cfun.1917_23->cfg;
  _25 = _24->x_exit_block_ptr;
  _26 = _25->prev_bb;
  bb.1918_27 = bb;
  if (_26 != bb.1918_27)
    goto <bb 40>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 40> :
  init = 0;
  bb.1919_28 = bb;
  _29 = &bb.1919_28->succs;
  ei = ei_start_1 (_29);
  goto <bb 45>; [INV]

  <bb 41> :
  if (init == 0)
    goto <bb 42>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 42> :
  e.1920_30 = e;
  _31 = e.1920_30->dest;
  symbolicinfo.cond_truebranch = _31;
  goto <bb 44>; [INV]

  <bb 43> :
  e.1921_32 = e;
  _33 = e.1921_32->dest;
  symbolicinfo.cond_falsebranch = _33;

  <bb 44> :
  init = init + 1;
  ei_next (&ei);

  <bb 45> :
  D.257953 = ei_cond (ei, &e);

  <bb 46> :
  retval.1922 = D.257953;
  if (retval.1922 != 0)
    goto <bb 41>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 47> :
  e = {CLOBBER};
  ei = {CLOBBER};

  <bb 48> :
  syminfo.1923_34 = syminfo;
  hash_map<basic_block_def*, symbolicinfo>::put (syminfo.1923_34, &bb, &symbolicinfo);

  <bb 49> :
  symbolicinfo::~symbolicinfo (&symbolicinfo);
  symbolicinfo = {CLOBBER};

  <bb 50> :
  gsi_next (&gsi);

  <bb 51> :
  _35 = gsi_end_p (gsi);
  retval.1924 = ~_35;
  if (retval.1924 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 52> :
  gsi = {CLOBBER};
  bb.1925_36 = bb;
  _37 = bb.1925_36->next_bb;
  bb = _37;

  <bb 53> :
  cfun.1926_38 = cfun;
  _39 = cfun.1926_38->cfg;
  _40 = _39->x_exit_block_ptr;
  bb.1927_41 = bb;
  if (_40 != bb.1927_41)
    goto <bb 31>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 54> :
  function_path_collect.1928_42 = function_path_collect;
  D.257958 = cgraph_node::get_fun (node);

  <bb 55> :
  _43 = D.257958;
  _44 = &_43->decl;
  hash_map<tree_node*, function_path_array>::put (function_path_collect.1928_42, _44, &fun_array);

  <bb 56> :
  pop_cfun ();

  <bb 57> :
  std::vector<function_path>::~vector (&function_path_array);
  function_path_array::~function_path_array (&fun_array);
  avail = {CLOBBER};
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  goto <bb 59>; [INV]

  <bb 58> :
  avail = {CLOBBER};
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};

  <bb 59> :
  symtab.1929_45 = symtab;
  D.257964 = symbol_table::next_defined_function (symtab.1929_45, node);

  <bb 60> :
  node = D.257964;

  <bb 61> :
  if (node != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 62>; [INV]

  <bb 62> :
  bb = {CLOBBER};
  return;

  <bb 63> :
<L49>:
  path_type = {CLOBBER};
  resx 7

  <bb 64> :
<L50>:
  it_i = {CLOBBER};
  resx 5

  <bb 65> :
<L51>:
  e = {CLOBBER};
  ei = {CLOBBER};
  resx 13

  <bb 66> :
<L52>:
  symbolicinfo::~symbolicinfo (&symbolicinfo);
  resx 12

  <bb 67> :
<L53>:
  symbolicinfo = {CLOBBER};
  resx 11

  <bb 68> :
<L54>:
  gsi = {CLOBBER};
  resx 10

  <bb 69> :
<L55>:
  std::vector<function_path>::~vector (&function_path_array);
  resx 4

  <bb 70> :
<L56>:
  function_path_array::~function_path_array (&fun_array);
  resx 3

  <bb 71> :
<L57>:
  avail = {CLOBBER};
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  resx 2

  <bb 72> :
<L58>:
  bb = {CLOBBER};
  resx 1

}



;; Function function_path_array::function_path_array (_ZN19function_path_arrayC2Ev, funcdef_no=6822, decl_uid=192293, cgraph_uid=3453, symbol_order=4231)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_path_array::function_path_array (struct function_path_array * const this)
{
  <bb 2> :
  this->funtion_type_num = 0;
  _1 = &this->function_path_array;
  std::vector<function_path>::vector (_1);
  return;

}



;; Function std::vector<function_path>::vector (_ZNSt6vectorI13function_pathSaIS0_EEC2Ev, funcdef_no=6820, decl_uid=175599, cgraph_uid=3450, symbol_order=4228)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<function_path>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.175607;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_ZNSt12_Vector_baseI13function_pathSaIS0_EEC2Ev, funcdef_no=6818, decl_uid=175057, cgraph_uid=3447, symbol_order=4225)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI13function_pathSaIS0_EE12_Vector_implC2Ev, funcdef_no=7823, decl_uid=174949, cgraph_uid=4455, symbol_order=5241)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<function_path>::allocator (this);
  _1 = &this->D.174952;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<function_path>::allocator (_ZNSaI13function_pathEC2Ev, funcdef_no=8787, decl_uid=174727, cgraph_uid=5419, symbol_order=6209)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<function_path>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<function_path>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<function_path>::new_allocator (_ZN9__gnu_cxx13new_allocatorI13function_pathEC2Ev, funcdef_no=9626, decl_uid=174656, cgraph_uid=6258, symbol_order=7048)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<function_path>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<function_path>::operator= (_ZNSt6vectorI13function_pathSaIS0_EEaSERKS2_, funcdef_no=7831, decl_uid=175185, cgraph_uid=4465, symbol_order=5251)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<function_path>::operator= (struct vector * const this, const struct vector & __x)
{
  struct function_path * D.257999;
  struct function_path * __tmp;
  const size_type __xlen;
  struct vector & D.257997;
  struct __normal_iterator D.257994;
  struct __normal_iterator D.257993;
  struct __normal_iterator D.257992;
  struct __normal_iterator D.257991;
  struct __normal_iterator D.257990;
  bool retval.1934;
  struct __normal_iterator D.257985;
  struct __normal_iterator D.257984;
  bool retval.1933;
  bool iftmp.1932;
  bool retval.1931;
  bool retval.1930;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.1930 = __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_propagate_on_copy_assign ();
  if (retval.1930 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.175607;
  _4 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.175607;
  _6 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1932 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1932 = 0;

  <bb 8> :
  retval.1931 = iftmp.1932;
  if (retval.1931 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<function_path>::clear (this);
  _8 = &this->D.175607;
  _9 = this->D.175607._M_impl.D.174952._M_end_of_storage;
  _10 = this->D.175607._M_impl.D.174952._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 24;
  _13 = (long unsigned int) _12;
  _14 = this->D.175607._M_impl.D.174952._M_start;
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (_8, _14, _13);
  this->D.175607._M_impl.D.174952._M_start = 0B;
  this->D.175607._M_impl.D.174952._M_finish = 0B;
  this->D.175607._M_impl.D.174952._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.175607;
  _16 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.175607;
  _18 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<function_path> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<function_path>::size (__x);
  _19 = std::vector<function_path>::capacity (this);
  retval.1933 = __xlen > _19;
  if (retval.1933 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.257984 = std::vector<function_path>::end (__x);
  D.257985 = std::vector<function_path>::begin (__x);
  D.257999 = std::vector<function_path>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (this, __xlen, D.257985, D.257984);
  __tmp = D.257999;
  _20 = &this->D.175607;
  _21 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_20);
  _22 = this->D.175607._M_impl.D.174952._M_finish;
  _23 = this->D.175607._M_impl.D.174952._M_start;
  std::_Destroy<function_path*, function_path> (_23, _22, _21);
  _24 = &this->D.175607;
  _25 = this->D.175607._M_impl.D.174952._M_end_of_storage;
  _26 = this->D.175607._M_impl.D.174952._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 24;
  _29 = (long unsigned int) _28;
  _30 = this->D.175607._M_impl.D.174952._M_start;
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (_24, _30, _29);
  this->D.175607._M_impl.D.174952._M_start = __tmp;
  _31 = this->D.175607._M_impl.D.174952._M_start;
  _32 = __xlen * 24;
  _33 = _31 + _32;
  this->D.175607._M_impl.D.174952._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<function_path>::size (this);
  retval.1934 = __xlen <= _34;
  if (retval.1934 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.175607;
  _36 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_35);
  D.257990 = std::vector<function_path>::end (this);
  D.257991 = std::vector<function_path>::begin (this);
  D.257992 = std::vector<function_path>::end (__x);
  D.257993 = std::vector<function_path>::begin (__x);
  D.257994 = std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (D.257993, D.257992, D.257991);
  std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path> (D.257994, D.257990, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.175607._M_impl.D.174952._M_start;
  _38 = __x->D.175607._M_impl.D.174952._M_start;
  _39 = std::vector<function_path>::size (this);
  _40 = _39 * 24;
  _41 = _38 + _40;
  _42 = __x->D.175607._M_impl.D.174952._M_start;
  std::copy<function_path*, function_path*> (_42, _41, _37);
  _43 = &this->D.175607;
  _44 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_43);
  _45 = this->D.175607._M_impl.D.174952._M_finish;
  _46 = __x->D.175607._M_impl.D.174952._M_finish;
  _47 = __x->D.175607._M_impl.D.174952._M_start;
  _48 = std::vector<function_path>::size (this);
  _49 = _48 * 24;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<function_path*, function_path*, function_path> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.175607._M_impl.D.174952._M_start;
  _52 = __xlen * 24;
  _53 = _51 + _52;
  this->D.175607._M_impl.D.174952._M_finish = _53;

  <bb 17> :
  D.257997 = this;

  <bb 18> :
<L19>:
  return D.257997;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI13function_pathES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7832, decl_uid=174819, cgraph_uid=4463, symbol_order=5249)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_propagate_on_copy_assign ()
{
  bool D.258000;

  <bb 2> :
  D.258000 = 0;

  <bb 3> :
<L0>:
  return D.258000;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI13function_pathES1_E15_S_always_equalEv, funcdef_no=7833, decl_uid=174822, cgraph_uid=4464, symbol_order=5250)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_always_equal ()
{
  bool D.258002;

  <bb 2> :
  D.258002 = 1;

  <bb 3> :
<L0>:
  return D.258002;

}



;; Function std::operator!= (_ZStneRKSaI13function_pathES2_, funcdef_no=8796, decl_uid=174705, cgraph_uid=5428, symbol_order=6218)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.229416, const struct allocator & D.229417)
{
  bool D.258004;

  <bb 2> :
  D.258004 = 0;

  <bb 3> :
<L0>:
  return D.258004;

}



;; Function std::vector<function_path>::clear (_ZNSt6vectorI13function_pathSaIS0_EE5clearEv, funcdef_no=8797, decl_uid=175337, cgraph_uid=5429, symbol_order=6219)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<function_path>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.175607._M_impl.D.174952._M_start;
  std::vector<function_path>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<function_path>::_M_erase_at_end (_ZNSt6vectorI13function_pathSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9629, decl_uid=175465, cgraph_uid=6261, symbol_order=7051)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<function_path>::_M_erase_at_end (struct vector * const this, struct function_path * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.175607._M_impl.D.174952._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 24;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.175607;
  _5 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_4);
  _6 = this->D.175607._M_impl.D.174952._M_finish;
  std::_Destroy<function_path*, function_path> (__pos, _6, _5);
  this->D.175607._M_impl.D.174952._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<function_path> > (_ZSt15__alloc_on_copyISaI13function_pathEEvRT_RKS2_, funcdef_no=8798, decl_uid=216137, cgraph_uid=5430, symbol_order=6220)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<function_path> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<function_path>::capacity (_ZNKSt6vectorI13function_pathSaIS0_EE8capacityEv, funcdef_no=8799, decl_uid=175253, cgraph_uid=5431, symbol_order=6221)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<function_path>::capacity (const struct vector * const this)
{
  size_type D.258009;

  <bb 2> :
  _1 = this->D.175607._M_impl.D.174952._M_end_of_storage;
  _2 = this->D.175607._M_impl.D.174952._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.258009 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.258009;

}



;; Function std::vector<function_path>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (_ZNSt6vectorI13function_pathSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8800, decl_uid=216144, cgraph_uid=5432, symbol_order=6222)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct function_path * std::vector<function_path>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct function_path * D.258013;
  struct function_path * __result;
  struct function_path * D.258011;

  <bb 2> :
  _1 = &this->D.175607;
  D.258013 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_allocate (_1, __n);
  __result = D.258013;
  _2 = &this->D.175607;
  _3 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*, function_path> (__first, __last, __result, _3);

  <bb 3> :
  D.258011 = __result;

  <bb 4> :
<L0>:
  return D.258011;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.175607;
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8801, decl_uid=216152, cgraph_uid=5433, symbol_order=6223)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.258019;
  struct __normal_iterator D.258018;
  struct __normal_iterator D.258017;

  <bb 2> :
  D.258018 = std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (__last);
  D.258019 = std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (__first);
  D.258017 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (D.258019, D.258018, __result);

  <bb 3> :
<L0>:
  return D.258017;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9632, decl_uid=229455, cgraph_uid=6265, symbol_order=7055)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct function_path * D.258023;
  struct __normal_iterator D.258021;

  <bb 2> :
  _1 = std::__niter_base<function_path*, std::vector<function_path> > (__result);
  _2 = std::__niter_base<const function_path*, std::vector<function_path> > (__last);
  _3 = std::__niter_base<const function_path*, std::vector<function_path> > (__first);
  D.258023 = std::__copy_move_a1<false, const function_path*, function_path*> (_3, _2, _1);
  _4 = D.258023;
  D.258021 = std::__niter_wrap<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path*> (__result, _4);

  <bb 3> :
<L0>:
  return D.258021;

}



;; Function std::__niter_base<function_path*, std::vector<function_path> > (_ZSt12__niter_baseIP13function_pathSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10228, decl_uid=238008, cgraph_uid=6860, symbol_order=7654)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__niter_base<function_path*, std::vector<function_path> > (struct __normal_iterator __it)
{
  struct function_path * D.258024;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (&__it);
  D.258024 = *_1;

  <bb 3> :
<L0>:
  return D.258024;

}



;; Function __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=8808, decl_uid=203228, cgraph_uid=5440, symbol_order=6230)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * const & __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (const struct __normal_iterator * const this)
{
  struct function_path * const & D.258026;

  <bb 2> :
  D.258026 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.258026;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10230, decl_uid=238015, cgraph_uid=6862, symbol_order=7656)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path*> (struct __normal_iterator __from, struct function_path * __res)
{
  struct __normal_iterator D.258028;

  <bb 2> :
  _1 = std::__niter_base<function_path*, std::vector<function_path> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 24;
  D.258028 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.258028;

}



;; Function __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10698, decl_uid=203219, cgraph_uid=7330, symbol_order=8124)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct function_path * const D.246055;
  struct __normal_iterator D.246056;
  struct __normal_iterator D.258030;

  <bb 2> :
  _1 = this->_M_current;
  __n.1935_2 = (long unsigned int) __n;
  _3 = __n.1935_2 * 24;
  _4 = _1 + _3;
  D.246055 = _4;
  __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::__normal_iterator (&D.246056, &D.246055);
  D.258030 = D.246056;
  D.246056 = {CLOBBER};
  D.246055 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.258030;

}



;; Function __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=8806, decl_uid=203241, cgraph_uid=5438, symbol_order=6228)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::__normal_iterator (struct __normal_iterator * const this, struct function_path * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8802, decl_uid=216158, cgraph_uid=5434, symbol_order=6224)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.229484)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9634, decl_uid=229486, cgraph_uid=6266, symbol_order=7056)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10231, decl_uid=238039, cgraph_uid=6863, symbol_order=7657)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (struct __normal_iterator D.242805, struct __normal_iterator D.242806)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<function_path*, function_path*> (_ZSt4copyIP13function_pathS1_ET0_T_S3_S2_, funcdef_no=8803, decl_uid=216166, cgraph_uid=5435, symbol_order=6225)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::copy<function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.258036;
  struct function_path * D.258034;

  <bb 2> :
  _1 = std::__miter_base<function_path*> (__last);
  _2 = std::__miter_base<function_path*> (__first);
  D.258036 = std::__copy_move_a<false, function_path*, function_path*> (_2, _1, __result);
  D.258034 = D.258036;

  <bb 3> :
<L0>:
  return D.258034;

}



;; Function std::__miter_base<function_path*> (_ZSt12__miter_baseIP13function_pathET_S2_, funcdef_no=9635, decl_uid=229502, cgraph_uid=6267, symbol_order=7057)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__miter_base<function_path*> (struct function_path * __it)
{
  struct function_path * D.258037;

  <bb 2> :
  D.258037 = __it;

  <bb 3> :
<L0>:
  return D.258037;

}



;; Function std::__copy_move_a<false, function_path*, function_path*> (_ZSt13__copy_move_aILb0EP13function_pathS1_ET1_T0_S3_S2_, funcdef_no=9636, decl_uid=229504, cgraph_uid=6268, symbol_order=7058)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a<false, function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.258041;
  struct function_path * D.258039;

  <bb 2> :
  __result.1936_1 = __result;
  _2 = std::__niter_base<function_path*> (__result.1936_1);
  _3 = std::__niter_base<function_path*> (__last);
  _4 = std::__niter_base<function_path*> (__first);
  D.258041 = std::__copy_move_a1<false, function_path*, function_path*> (_4, _3, _2);
  _5 = D.258041;
  D.258039 = std::__niter_wrap<function_path*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.258039;

}



;; Function std::__copy_move_a1<false, function_path*, function_path*> (_ZSt14__copy_move_a1ILb0EP13function_pathS1_ET1_T0_S3_S2_, funcdef_no=10233, decl_uid=238050, cgraph_uid=6865, symbol_order=7659)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a1<false, function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.258044;
  struct function_path * D.258042;

  <bb 2> :
  D.258044 = std::__copy_move_a2<false, function_path*, function_path*> (__first, __last, __result);
  D.258042 = D.258044;

  <bb 3> :
<L0>:
  return D.258042;

}



;; Function std::__copy_move_a2<false, function_path*, function_path*> (_ZSt14__copy_move_a2ILb0EP13function_pathS1_ET1_T0_S3_S2_, funcdef_no=10699, decl_uid=242814, cgraph_uid=7331, symbol_order=8125)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a2<false, function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.258045;

  <bb 2> :
  D.258045 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<function_path> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.258045;

}



;; Function std::__uninitialized_copy_a<function_path*, function_path*, function_path> (_ZSt22__uninitialized_copy_aIP13function_pathS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8804, decl_uid=216170, cgraph_uid=5436, symbol_order=6226)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__uninitialized_copy_a<function_path*, function_path*, function_path> (struct function_path * __first, struct function_path * __last, struct function_path * __result, struct allocator & D.229511)
{
  struct function_path * D.258049;
  struct function_path * D.258047;

  <bb 2> :
  D.258049 = std::uninitialized_copy<function_path*, function_path*> (__first, __last, __result);
  D.258047 = D.258049;

  <bb 3> :
<L0>:
  return D.258047;

}



;; Function std::uninitialized_copy<function_path*, function_path*> (_ZSt18uninitialized_copyIP13function_pathS1_ET0_T_S3_S2_, funcdef_no=9637, decl_uid=229513, cgraph_uid=6269, symbol_order=7059)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::uninitialized_copy<function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.258052;
  const bool __assignable;
  struct function_path * D.258050;

  <bb 2> :
  __assignable = 1;
  D.258052 = std::__uninitialized_copy<true>::__uninit_copy<function_path*, function_path*> (__first, __last, __result);
  D.258050 = D.258052;

  <bb 3> :
<L0>:
  return D.258050;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<function_path*, function_path*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIP13function_pathS3_EET0_T_S5_S4_, funcdef_no=10235, decl_uid=238088, cgraph_uid=6867, symbol_order=7661)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__uninitialized_copy<true>::__uninit_copy<function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.258055;
  struct function_path * D.258053;

  <bb 2> :
  D.258055 = std::copy<function_path*, function_path*> (__first, __last, __result);
  D.258053 = D.258055;

  <bb 3> :
<L0>:
  return D.258053;

}



;; Function cgraph_node::ultimate_alias_target (_ZN11cgraph_node21ultimate_alias_targetEP12availabilityP11symtab_node, funcdef_no=2586, decl_uid=97088, cgraph_uid=1723, symbol_order=1883)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct cgraph_node * cgraph_node::ultimate_alias_target (struct cgraph_node * const this, availability * availability, struct symtab_node * ref)
{
  struct cgraph_node * D.258064;
  struct symtab_node * D.258063;
  struct cgraph_node * n;
  struct cgraph_node * D.258061;

  <bb 2> :
  _1 = &this->D.97512;
  D.258063 = symtab_node::ultimate_alias_target (_1, availability, ref);
  _2 = D.258063;
  D.258064 = dyn_cast<cgraph_node*, symtab_node> (_2);
  n = D.258064;
  if (n == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  if (availability != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  *availability = 1;

  <bb 5> :
  D.258061 = n;

  <bb 6> :
<L5>:
  return D.258061;

}



;; Function symtab_node::ultimate_alias_target (_ZN11symtab_node21ultimate_alias_targetEP12availabilityPS_, funcdef_no=2585, decl_uid=96460, cgraph_uid=1722, symbol_order=1882)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
struct symtab_node * symtab_node::ultimate_alias_target (struct symtab_node * const this, availability * availability, struct symtab_node * ref)
{
  struct symtab_node * D.258073;
  availability D.258072;
  struct symtab_node * D.258070;

  <bb 2> :
  _1 = BIT_FIELD_REF <*this, 8, 16>;
  _2 = _1 & 2;
  if (_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (availability != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.258072 = symtab_node::get_availability (this, ref);
  _3 = D.258072;
  *availability = _3;

  <bb 5> :
  D.258070 = this;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  D.258073 = symtab_node::ultimate_alias_target_1 (this, availability, ref);
  D.258070 = D.258073;

  <bb 7> :
<L5>:
  return D.258070;

}



;; Function symtab_node::get_availability (_ZN11symtab_node16get_availabilityEPS_, funcdef_no=2597, decl_uid=96516, cgraph_uid=1734, symbol_order=1894)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
availability symtab_node::get_availability (struct symtab_node * const this, struct symtab_node * ref)
{
  availability D.258082;
  struct varpool_node * D.258081;
  availability D.258080;
  struct cgraph_node * D.258079;
  availability D.258077;
  bool retval.1937;

  <bb 2> :
  retval.1937 = is_a<cgraph_node*, symtab_node> (this);
  if (retval.1937 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.258079 = dyn_cast<cgraph_node*, symtab_node> (this);
  _1 = D.258079;
  D.258080 = cgraph_node::get_availability (_1, ref);
  D.258077 = D.258080;
  goto <bb 5>; [INV]

  <bb 4> :
  D.258081 = dyn_cast<varpool_node*, symtab_node> (this);
  _2 = D.258081;
  D.258082 = varpool_node::get_availability (_2, ref);
  D.258077 = D.258082;

  <bb 5> :
<L2>:
  return D.258077;

}



;; Function dyn_cast<varpool_node*, symtab_node> (_Z8dyn_castIP12varpool_node11symtab_nodeET_PT0_, funcdef_no=7104, decl_uid=99587, cgraph_uid=3736, symbol_order=4519)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct varpool_node * dyn_cast<varpool_node*, symtab_node> (struct symtab_node * p)
{
  struct varpool_node * D.258086;
  bool retval.1938;

  <bb 2> :
  retval.1938 = is_a<varpool_node*, symtab_node> (p);
  if (retval.1938 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.258086 = reinterpret_is_a_helper<varpool_node*>::cast<symtab_node> (p);
  goto <bb 5>; [INV]

  <bb 4> :
  D.258086 = 0B;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
<L2>:
  return D.258086;

}



;; Function is_a<varpool_node*, symtab_node> (_Z4is_aIP12varpool_node11symtab_nodeEbPT0_, funcdef_no=7107, decl_uid=99946, cgraph_uid=3739, symbol_order=4522)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool is_a<varpool_node*, symtab_node> (struct symtab_node * p)
{
  bool D.258088;

  <bb 2> :
  D.258088 = is_a_helper<varpool_node*>::test<symtab_node> (p);

  <bb 3> :
<L0>:
  return D.258088;

}



;; Function is_a_helper<varpool_node*>::test<symtab_node> (_ZN11is_a_helperIP12varpool_nodeE4testI11symtab_nodeEEbPT_, funcdef_no=2533, decl_uid=98472, cgraph_uid=1670, symbol_order=1830)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool is_a_helper<varpool_node*>::test<symtab_node> (struct symtab_node * p)
{
  bool iftmp.1939;
  bool D.258090;

  <bb 2> :
  if (p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _1 = p->type;
  if (_1 == 2)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1939 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1939 = 0;

  <bb 6> :
  D.258090 = iftmp.1939;

  <bb 7> :
<L4>:
  return D.258090;

}



;; Function reinterpret_is_a_helper<varpool_node*>::cast<symtab_node> (_ZN23reinterpret_is_a_helperIP12varpool_nodeE4castI11symtab_nodeEES1_PT_, funcdef_no=8130, decl_uid=207431, cgraph_uid=4762, symbol_order=5548)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct varpool_node * reinterpret_is_a_helper<varpool_node*>::cast<symtab_node> (struct symtab_node * p)
{
  struct varpool_node * D.258097;

  <bb 2> :
  D.258097 = p;

  <bb 3> :
<L0>:
  return D.258097;

}



;; Function std::vector<function_path>::begin (_ZNSt6vectorI13function_pathSaIS0_EE5beginEv, funcdef_no=7834, decl_uid=175216, cgraph_uid=4466, symbol_order=5252)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<function_path>::begin (struct vector * const this)
{
  struct iterator D.216181;
  struct iterator D.258099;

  <bb 2> :
  _1 = &this->D.175607._M_impl.D.174952._M_start;
  __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::__normal_iterator (&D.216181, _1);
  D.258099 = D.216181;
  D.216181 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.258099;

}



;; Function __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator-> (_ZNK9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS1_SaIS1_EEEptEv, funcdef_no=7838, decl_uid=203201, cgraph_uid=4470, symbol_order=5256)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator-> (const struct __normal_iterator * const this)
{
  struct function_path * D.258102;

  <bb 2> :
  D.258102 = this->_M_current;

  <bb 3> :
<L0>:
  return D.258102;

}



;; Function __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS1_SaIS1_EEEppEv, funcdef_no=7837, decl_uid=203203, cgraph_uid=4469, symbol_order=5255)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.258104;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 24;
  this->_M_current = _2;
  D.258104 = this;

  <bb 3> :
<L0>:
  return D.258104;

}



;; Function std::vector<function_path>::end (_ZNSt6vectorI13function_pathSaIS0_EE3endEv, funcdef_no=7835, decl_uid=175220, cgraph_uid=4467, symbol_order=5253)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<function_path>::end (struct vector * const this)
{
  struct iterator D.216183;
  struct iterator D.258106;

  <bb 2> :
  _1 = &this->D.175607._M_impl.D.174952._M_finish;
  __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::__normal_iterator (&D.216183, _1);
  D.258106 = D.216183;
  D.216183 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.258106;

}



;; Function __gnu_cxx::operator!=<function_path*, std::vector<function_path> > (_ZN9__gnu_cxxneIP13function_pathSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_, funcdef_no=7836, decl_uid=203301, cgraph_uid=4468, symbol_order=5254)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<function_path*, std::vector<function_path> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.258109;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (__rhs);
  _4 = *_3;
  D.258109 = _2 != _4;

  <bb 3> :
<L0>:
  return D.258109;

}



;; Function std::vector<function_path>::push_back (_ZNSt6vectorI13function_pathSaIS0_EE9push_backERKS0_, funcdef_no=7839, decl_uid=175287, cgraph_uid=4472, symbol_order=5258)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<function_path>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.258114;

  <bb 2> :
  _1 = this->D.175607._M_impl.D.174952._M_finish;
  _2 = this->D.175607._M_impl.D.174952._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.175607._M_impl.D.174952._M_finish;
  _4 = &this->D.175607._M_impl;
  std::allocator_traits<std::allocator<function_path> >::construct<function_path, const function_path&> (_4, _3, __x);
  _5 = this->D.175607._M_impl.D.174952._M_finish;
  _6 = _5 + 24;
  this->D.175607._M_impl.D.174952._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.258114 = std::vector<function_path>::end (this);
  std::vector<function_path>::_M_realloc_insert<const function_path&> (this, D.258114, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<function_path> >::construct<function_path, const function_path&> (_ZNSt16allocator_traitsISaI13function_pathEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8809, decl_uid=216191, cgraph_uid=5441, symbol_order=6231)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<function_path> >::construct<function_path, const function_path&> (struct allocator_type & __a, struct function_path * __p, const struct function_path & __args#0)
{
  <bb 2> :
  _1 = std::forward<const function_path&> (__args#0);
  __gnu_cxx::new_allocator<function_path>::construct<function_path, const function_path&> (__a, __p, _1);
  return;

}



;; Function std::forward<const function_path&> (_ZSt7forwardIRK13function_pathEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9638, decl_uid=229533, cgraph_uid=6270, symbol_order=7060)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct function_path & std::forward<const function_path&> (const struct type & __t)
{
  const struct function_path & D.258115;

  <bb 2> :
  D.258115 = __t;

  <bb 3> :
<L0>:
  return D.258115;

}



;; Function __gnu_cxx::new_allocator<function_path>::construct<function_path, const function_path&> (_ZN9__gnu_cxx13new_allocatorI13function_pathE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9639, decl_uid=229535, cgraph_uid=6271, symbol_order=7061)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<function_path>::construct<function_path, const function_path&> (struct new_allocator * const this, struct function_path * __p, const struct function_path & __args#0)
{
  void * D.238100;
  void * D.238099;
  const struct function_path * D.238101;

  <bb 2> :
  D.238101 = std::forward<const function_path&> (__args#0);
  D.238099 = __p;
  D.238100 = operator new (24, D.238099);
  MEM[(struct function_path *)D.238100] = *D.238101;
  return;

}



;; Function std::vector<function_path>::_M_realloc_insert<const function_path&> (_ZNSt6vectorI13function_pathSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8810, decl_uid=216360, cgraph_uid=5445, symbol_order=6235)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<function_path>::_M_realloc_insert<const function_path&> (struct vector * const this, struct iterator __position, const struct function_path & __args#0)
{
  struct function_path * D.258121;
  const size_type D.258120;
  struct function_path * __new_finish;
  struct function_path * __new_start;
  const size_type __elems_before;
  struct function_path * __old_finish;
  struct function_path * __old_start;
  const size_type __len;
  struct iterator D.229546;

  <bb 2> :
  D.258120 = std::vector<function_path>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.258120;
  __old_start = this->D.175607._M_impl.D.174952._M_start;
  __old_finish = this->D.175607._M_impl.D.174952._M_finish;
  D.229546 = std::vector<function_path>::begin (this);
  _1 = __gnu_cxx::operator-<function_path*, std::vector<function_path> > (&__position, &D.229546);
  __elems_before = (const size_type) _1;
  D.229546 = {CLOBBER};
  _2 = &this->D.175607;
  D.258121 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_allocate (_2, __len);
  __new_start = D.258121;
  __new_finish = __new_start;
  _3 = std::forward<const function_path&> (__args#0);
  _4 = __elems_before * 24;
  _5 = __new_start + _4;
  _6 = &this->D.175607._M_impl;
  std::allocator_traits<std::allocator<function_path> >::construct<function_path, const function_path&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.175607;
  _8 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<function_path>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 24;
  _11 = &this->D.175607;
  _12 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<function_path>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.175607;
  _23 = this->D.175607._M_impl.D.174952._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 24;
  _26 = (long unsigned int) _25;
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (_22, __old_start, _26);
  this->D.175607._M_impl.D.174952._M_start = __new_start;
  this->D.175607._M_impl.D.174952._M_finish = __new_finish;
  _27 = __len * 24;
  _28 = __new_start + _27;
  this->D.175607._M_impl.D.174952._M_end_of_storage = _28;
  return;

}



;; Function std::vector<function_path>::_M_check_len (_ZNKSt6vectorI13function_pathSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9640, decl_uid=175456, cgraph_uid=6272, symbol_order=7062)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<function_path>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.1942;
  size_type D.258125;
  const long unsigned int D.238106;
  bool retval.1940;

  <bb 2> :
  _1 = std::vector<function_path>::max_size (this);
  _2 = std::vector<function_path>::size (this);
  _3 = _1 - _2;
  __n.1941_4 = __n;
  retval.1940 = _3 < __n.1941_4;
  if (retval.1940 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<function_path>::size (this);
  _6 = std::vector<function_path>::size (this);
  D.238106 = _6;
  _7 = std::max<long unsigned int> (&D.238106, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.238106 = {CLOBBER};
  _9 = std::vector<function_path>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<function_path>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1942 = std::vector<function_path>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1942 = __len;

  <bb 8> :
  D.258125 = iftmp.1942;

  <bb 9> :
<L6>:
  return D.258125;

}



;; Function std::vector<function_path>::max_size (_ZNKSt6vectorI13function_pathSaIS0_EE8max_sizeEv, funcdef_no=10236, decl_uid=175242, cgraph_uid=6868, symbol_order=7662)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<function_path>::max_size (const struct vector * const this)
{
  size_type D.258132;

  <bb 2> :
  _1 = &this->D.175607;
  _2 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_1);
  D.258132 = std::vector<function_path>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.258132;

}



;; Function std::vector<function_path>::_S_max_size (_ZNSt6vectorI13function_pathSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10700, decl_uid=175463, cgraph_uid=7332, symbol_order=8126)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<function_path>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.258134;

  <bb 2> :
  __diffmax = 384307168202282325;
  _1 = std::allocator_traits<std::allocator<function_path> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.258134 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.258134;

}



;; Function std::allocator_traits<std::allocator<function_path> >::max_size (_ZNSt16allocator_traitsISaI13function_pathEE8max_sizeERKS1_, funcdef_no=10899, decl_uid=174777, cgraph_uid=7531, symbol_order=8327)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<function_path> >::max_size (const struct allocator_type & __a)
{
  size_type D.258137;

  <bb 2> :
  D.258137 = __gnu_cxx::new_allocator<function_path>::max_size (__a);

  <bb 3> :
<L0>:
  return D.258137;

}



;; Function __gnu_cxx::new_allocator<function_path>::max_size (_ZNK9__gnu_cxx13new_allocatorI13function_pathE8max_sizeEv, funcdef_no=10997, decl_uid=174619, cgraph_uid=7629, symbol_order=8425)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<function_path>::max_size (const struct new_allocator * const this)
{
  size_type D.258139;

  <bb 2> :
  D.258139 = __gnu_cxx::new_allocator<function_path>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.258139;

}



;; Function __gnu_cxx::operator-<function_path*, std::vector<function_path> > (_ZN9__gnu_cxxmiIP13function_pathSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9641, decl_uid=229547, cgraph_uid=6273, symbol_order=7063)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<function_path*, std::vector<function_path> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.258141;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.258141 = _5 /[ex] 24;

  <bb 3> :
<L0>:
  return D.258141;

}



;; Function std::vector<function_path>::_S_relocate (_ZNSt6vectorI13function_pathSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9642, decl_uid=175114, cgraph_uid=6274, symbol_order=7064)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::vector<function_path>::_S_relocate (struct function_path * __first, struct function_path * __last, struct function_path * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.258144;
  struct function_path * D.258143;

  <bb 2> :
  D.258143 = std::vector<function_path>::_S_do_relocate (__first, __last, __result, __alloc, D.258144);

  <bb 3> :
<L0>:
  return D.258143;

}



;; Function std::vector<function_path>::_S_do_relocate (_ZNSt6vectorI13function_pathSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10237, decl_uid=175102, cgraph_uid=6869, symbol_order=7663)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::vector<function_path>::_S_do_relocate (struct function_path * __first, struct function_path * __last, struct function_path * __result, struct _Tp_alloc_type & __alloc, struct true_type D.242830)
{
  struct function_path * D.258146;

  <bb 2> :
  D.258146 = std::__relocate_a<function_path*, function_path*, std::allocator<function_path> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.258146;

}



;; Function std::__relocate_a<function_path*, function_path*, std::allocator<function_path> > (_ZSt12__relocate_aIP13function_pathS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10701, decl_uid=229711, cgraph_uid=7333, symbol_order=8127)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__relocate_a<function_path*, function_path*, std::allocator<function_path> > (struct function_path * __first, struct function_path * __last, struct function_path * __result, struct allocator & __alloc)
{
  struct function_path * D.258148;

  <bb 2> :
  _1 = std::__niter_base<function_path*> (__result);
  _2 = std::__niter_base<function_path*> (__last);
  _3 = std::__niter_base<function_path*> (__first);
  D.258148 = std::__relocate_a_1<function_path, function_path> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.258148;

}



;; Function std::__relocate_a_1<function_path, function_path> (_ZSt14__relocate_a_1I13function_pathS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E, funcdef_no=10900, decl_uid=229885, cgraph_uid=7532, symbol_order=8328)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct function_path * std::__relocate_a_1<function_path, function_path> (struct function_path * __first, struct function_path * __last, struct function_path * __result, struct allocator & D.247065)
{
  ptrdiff_t __count;
  struct function_path * D.258153;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 24;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.1943_2 = (long unsigned int) __count;
  _3 = __count.1943_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.1944_4 = (long unsigned int) __count;
  _5 = __count.1944_4 * 24;
  D.258153 = __result + _5;

  <bb 5> :
<L3>:
  return D.258153;

}



;; Function symbolicinfo::symbolicinfo (_ZN12symbolicinfoC2Ev, funcdef_no=6838, decl_uid=203353, cgraph_uid=3469, symbol_order=4247)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void symbolicinfo::symbolicinfo (struct symbolicinfo * const this)
{
  <bb 2> :
  _1 = &this->switchs;
  std::vector<basic_block_def*>::vector (_1);
  this->prevlogic = 1;
  _2 = &this->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::vector (_2);
  _3 = &this->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::vector (_3);
  _4 = &this->symbolicExecutionPathConstraintarrayFalse;
  std::vector<symbolicinfoPatharray>::vector (_4);
  return;

}



;; Function std::vector<symbolicinfoPatharray>::vector (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EEC2Ev, funcdef_no=6836, decl_uid=171338, cgraph_uid=3466, symbol_order=4244)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<symbolicinfoPatharray>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.171346;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EEC2Ev, funcdef_no=6834, decl_uid=170796, cgraph_uid=3463, symbol_order=4241)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE12_Vector_implC2Ev, funcdef_no=7842, decl_uid=170688, cgraph_uid=4474, symbol_order=5260)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<symbolicinfoPatharray>::allocator (this);
  _1 = &this->D.170691;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<symbolicinfoPatharray>::allocator (_ZNSaI21symbolicinfoPatharrayEC2Ev, funcdef_no=8815, decl_uid=170466, cgraph_uid=5447, symbol_order=6237)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<symbolicinfoPatharray>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (_ZN9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayEC2Ev, funcdef_no=9645, decl_uid=170395, cgraph_uid=6277, symbol_order=7067)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8818, decl_uid=170638, cgraph_uid=5450, symbol_order=6240)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function gimple_cond_rhs (_ZL15gimple_cond_rhsPK6gimple, funcdef_no=2181, decl_uid=93077, cgraph_uid=1318, symbol_order=1478)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_cond_rhs (const struct gimple * gs)
{
  const struct gcond * D.258157;
  const struct gcond * gc;
  union tree_node * D.258155;

  <bb 2> :
  D.258157 = GIMPLE_CHECK2<const gcond*> (gs);
  gc = D.258157;
  D.258155 = gimple_cond_rhs (gc);

  <bb 3> :
<L0>:
  return D.258155;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::put (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7853, decl_uid=196584, cgraph_uid=4489, symbol_order=5275)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<basic_block_def*, symbolicinfo>::put (struct hash_map * const this, struct basic_block_def * const & k, const struct symbolicinfo & v)
{
  bool D.258165;
  struct hash_entry * D.258164;
  unsigned int D.258163;
  bool ins;
  struct hash_entry * e;
  bool D.258161;
  void * D.216402;
  void * D.216401;

  <bb 2> :
  _1 = &this->m_table;
  D.258163 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::hash (k);
  _2 = D.258163;
  D.258164 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.258164;
  D.258165 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_empty (e);
  ins = D.258165;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.216401 = &e->m_value;
  D.216402 = operator new (160, D.216401);
  symbolicinfo::symbolicinfo (D.216402, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  symbolicinfo::operator= (_4, v);

  <bb 5> :
  D.258161 = ~ins;

  <bb 6> :
<L3>:
  return D.258161;

  <bb 7> :
<L4>:
  operator delete (D.216402, D.216401);
  resx 1

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8826, decl_uid=196742, cgraph_uid=5458, symbol_order=6248)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, struct basic_block_def * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.258216;
  bool D.258215;
  bool D.258214;
  bool D.258213;
  bool D.258212;
  bool D.258211;
  struct value_type * D.258210;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.1950;
  bool retval.1949;
  bool retval.1948;
  bool retval.1947;
  bool retval.1946;
  bool retval.1945;
  struct value_type * D.258172;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 168;
  entry = _11 + _13;
  size = this->m_size;
  D.258211 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1945 = D.258211;
  if (retval.1945 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.258212 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1946 = D.258212;
  if (retval.1946 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 168;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.258213 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (entry, comparable);
  retval.1947 = D.258213;
  if (retval.1947 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 168;
  D.258172 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 168;
  entry = _24 + _26;
  D.258214 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1948 = D.258214;
  if (retval.1948 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.258215 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1949 = D.258215;
  if (retval.1949 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 168;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.258216 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (entry, comparable);
  retval.1950 = D.258216;
  if (retval.1950 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 168;
  D.258172 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.258172 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.258172 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 168;
  D.258172 = _37 + _39;

  <bb 27> :
<L37>:
  return D.258172;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9650, decl_uid=196823, cgraph_uid=6300, symbol_order=7090)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.258247;
  unsigned int D.258246;
  bool D.258245;
  bool D.258244;
  struct mem_alloc_description & D.258243;
  struct value_type * D.258242;
  unsigned int D.258241;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.238463;
  void * D.238462;
  struct hash_entry & D.238506;
  bool iftmp.1954;
  bool retval.1953;
  bool iftmp.1952;
  bool retval.1951;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 168;
  olimit = oentries + _1;
  elts = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1952 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1952 = 0;

  <bb 6> :
  retval.1951 = iftmp.1952;
  if (retval.1951 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.258241 = hash_table_higher_prime_index (_5);
  nindex = D.258241;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.258242 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.258242;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.258244 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.258244;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.258245 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.258245;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.1954 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.1954 = 0;

  <bb 15> :
  retval.1953 = iftmp.1954;
  if (retval.1953 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.258246 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash (x);
  _16 = D.258246;
  D.258247 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.258247;
  D.238506 = std::move<hash_map<basic_block_def*, symbolicinfo>::hash_entry&> (x);
  D.238462 = q;
  D.238463 = operator new (168, D.238462);
  hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash_entry (D.238463, D.238506);

  <bb 17> :
  p = p + 168;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10241, decl_uid=196718, cgraph_uid=6873, symbol_order=7667)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.258248;

  <bb 2> :
  D.258248 = this->m_size;

  <bb 3> :
<L0>:
  return D.258248;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10242, decl_uid=196720, cgraph_uid=6874, symbol_order=7668)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.258250;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.258250 = _1 - _2;

  <bb 3> :
<L0>:
  return D.258250;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10243, decl_uid=196820, cgraph_uid=6875, symbol_order=7669)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.1955;
  bool D.258252;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1955 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1955 = 0;

  <bb 6> :
  D.258252 = iftmp.1955;

  <bb 7> :
<L4>:
  return D.258252;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9599, decl_uid=196810, cgraph_uid=6231, symbol_order=7021)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.258274;
  struct value_type * D.258273;
  struct mem_alloc_description & D.258272;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.258270;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.258273 = xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_alloc (n);
  nentries = D.258273;
  goto <bb 6>; [INV]

  <bb 5> :
  D.258274 = ggc_cleared_vec_alloc<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (n);
  nentries = D.258274;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.258270 = nentries;

  <bb 9> :
<L14>:
  return D.258270;

}



;; Function xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10214, decl_uid=218297, cgraph_uid=6846, symbol_order=7640)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.258277;
  struct hash_entry * D.258275;

  <bb 2> :
  D.258277 = xcalloc (count, 168);
  D.258275 = D.258277;

  <bb 3> :
<L0>:
  return D.258275;

}



;; Function ggc_cleared_vec_alloc<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10215, decl_uid=237710, cgraph_uid=6847, symbol_order=7641)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (size_t c)
{
  struct hash_entry * D.258284;
  struct hash_entry * D.258283;
  struct hash_entry * D.258281;
  bool retval.1956;

  <bb 2> :
  retval.1956 = need_finalization_p<hash_map<basic_block_def*, symbolicinfo>::hash_entry> ();
  if (retval.1956 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 168;
  D.258283 = ggc_internal_cleared_alloc (_1, finalize, 168, c);
  D.258281 = D.258283;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 168;
  D.258284 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.258281 = D.258284;

  <bb 5> :
<L2>:
  return D.258281;

}



;; Function finalize<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_Z8finalizeIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10682, decl_uid=242748, cgraph_uid=7317, symbol_order=8111)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<basic_block_def*, symbolicinfo>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::~hash_entry (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10684, decl_uid=245986, cgraph_uid=7315, symbol_order=8109)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  symbolicinfo::~symbolicinfo (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10681, decl_uid=242747, cgraph_uid=7313, symbol_order=8107)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<basic_block_def*, symbolicinfo>::hash_entry> ()
{
  bool D.258285;

  <bb 2> :
  D.258285 = 1;

  <bb 3> :
<L0>:
  return D.258285;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10245, decl_uid=196643, cgraph_uid=6877, symbol_order=7671)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.258289;
  hashval_t D.258287;

  <bb 2> :
  _1 = &e->m_key;
  D.258289 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::hash (_1);
  D.258287 = D.258289;

  <bb 3> :
<L0>:
  return D.258287;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10244, decl_uid=196813, cgraph_uid=6876, symbol_order=7670)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.258302;
  bool D.258301;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.1958;
  struct value_type * D.258293;
  bool retval.1957;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 168;
  slot = _2 + _4;
  D.258301 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1957 = D.258301;
  if (retval.1957 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.258293 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 168;
  slot = _8 + _10;
  D.258302 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1958 = D.258302;
  if (retval.1958 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.258293 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.258293;

}



;; Function std::move<hash_map<basic_block_def*, symbolicinfo>::hash_entry&> (_ZSt4moveIRN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10246, decl_uid=238460, cgraph_uid=6878, symbol_order=7672)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<basic_block_def*, symbolicinfo>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.258303;

  <bb 2> :
  D.258303 = __t;

  <bb 3> :
<L0>:
  return D.258303;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash_entry (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9667, decl_uid=238485, cgraph_uid=6298, symbol_order=7088)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.238487)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.238487->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.238487->m_value;
  symbolicinfo::symbolicinfo (_2, _3);
  return;

}



;; Function symbolicinfo::symbolicinfo (_ZN12symbolicinfoC2EOS_, funcdef_no=9665, decl_uid=203370, cgraph_uid=6295, symbol_order=7085)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void symbolicinfo::symbolicinfo (struct symbolicinfo * const this, struct symbolicinfo & D.203372)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.203372->cond_stmt;
  this->cond_stmt = _1;
  _2 = D.203372->switch_stmt;
  this->switch_stmt = _2;
  _3 = D.203372->cond_rhs;
  this->cond_rhs = _3;
  _4 = D.203372->cond_lhs;
  this->cond_lhs = _4;
  _5 = D.203372->node;
  this->node = _5;
  _6 = &this->switchs;
  _7 = &D.203372->switchs;
  std::vector<basic_block_def*>::vector (_6, _7);
  _8 = D.203372->cond_truebranch;
  this->cond_truebranch = _8;
  _9 = D.203372->cond_falsebranch;
  this->cond_falsebranch = _9;
  _10 = D.203372->prevlogic;
  this->prevlogic = _10;
  _11 = &this->symbolicExecutionPathConstraint;
  _12 = &D.203372->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::vector (_11, _12);
  _13 = &this->symbolicExecutionPathConstraintarrayTrue;
  _14 = &D.203372->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::vector (_13, _14);
  _15 = &this->symbolicExecutionPathConstraintarrayFalse;
  _16 = &D.203372->symbolicExecutionPathConstraintarrayFalse;
  std::vector<symbolicinfoPatharray>::vector (_15, _16);
  return;

}



;; Function std::vector<basic_block_def*>::vector (_ZNSt6vectorIP15basic_block_defSaIS1_EEC2EOS3_, funcdef_no=9657, decl_uid=170258, cgraph_uid=6286, symbol_order=7076)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<basic_block_def*>::vector (struct vector * const this, struct vector & D.170260)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.170301;
  _2 = &D.170260->D.170301;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EEC2EOS3_, funcdef_no=9655, decl_uid=169726, cgraph_uid=6283, symbol_order=7073)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.169728)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.169728->_M_impl;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE12_Vector_implC2EOS4_, funcdef_no=10248, decl_uid=169632, cgraph_uid=6880, symbol_order=7674)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl&> (__x);
  std::allocator<basic_block_def*>::allocator (this, _1);
  _2 = &this->D.169646;
  _3 = std::move<std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl&> (__x);
  _4 = &_3->D.169646;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::allocator<basic_block_def*>::allocator (_ZNSaIP15basic_block_defEC2ERKS1_, funcdef_no=10704, decl_uid=169416, cgraph_uid=7336, symbol_order=8130)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<basic_block_def*>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defEC2ERKS3_, funcdef_no=10902, decl_uid=169345, cgraph_uid=7534, symbol_order=8330)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.169347)
{
  <bb 2> :
  return;

}



;; Function std::move<std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseIP15basic_block_defSaIS2_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS8_, funcdef_no=10702, decl_uid=242866, cgraph_uid=7334, symbol_order=8128)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.258305;

  <bb 2> :
  D.258305 = __t;

  <bb 3> :
<L0>:
  return D.258305;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE17_Vector_impl_dataC2EOS4_, funcdef_no=10707, decl_uid=169588, cgraph_uid=7339, symbol_order=8133)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function std::vector<symbolicinfoPatharray>::vector (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EEC2EOS2_, funcdef_no=9663, decl_uid=171303, cgraph_uid=6292, symbol_order=7082)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<symbolicinfoPatharray>::vector (struct vector * const this, struct vector & D.171305)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.171346;
  _2 = &D.171305->D.171346;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EEC2EOS2_, funcdef_no=9661, decl_uid=170771, cgraph_uid=6289, symbol_order=7079)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.170773)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.170773->_M_impl;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10251, decl_uid=170677, cgraph_uid=6883, symbol_order=7677)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl&> (__x);
  std::allocator<symbolicinfoPatharray>::allocator (this, _1);
  _2 = &this->D.170691;
  _3 = std::move<std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl&> (__x);
  _4 = &_3->D.170691;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::allocator<symbolicinfoPatharray>::allocator (_ZNSaI21symbolicinfoPatharrayEC2ERKS0_, funcdef_no=10711, decl_uid=170461, cgraph_uid=7343, symbol_order=8137)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<symbolicinfoPatharray>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (_ZN9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayEC2ERKS2_, funcdef_no=10905, decl_uid=170390, cgraph_uid=7537, symbol_order=8333)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.170392)
{
  <bb 2> :
  return;

}



;; Function std::move<std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI21symbolicinfoPatharraySaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10709, decl_uid=242886, cgraph_uid=7341, symbol_order=8135)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.258307;

  <bb 2> :
  D.258307 = __t;

  <bb 3> :
<L0>:
  return D.258307;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10714, decl_uid=170633, cgraph_uid=7346, symbol_order=8140)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8947, decl_uid=218299, cgraph_uid=5579, symbol_order=6369)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9669, decl_uid=196831, cgraph_uid=6301, symbol_order=7091)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<basic_block_def*, symbolicinfo>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::mark_empty (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10253, decl_uid=196655, cgraph_uid=6885, symbol_order=7679)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::mark_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::mark_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10716, decl_uid=242901, cgraph_uid=7348, symbol_order=8142)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::mark_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<basic_block_def>::mark_empty (_1);
  return;

}



;; Function pointer_hash<basic_block_def>::mark_empty (_ZN12pointer_hashI15basic_block_defE10mark_emptyERPS0_, funcdef_no=10907, decl_uid=196509, cgraph_uid=7539, symbol_order=8335)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void pointer_hash<basic_block_def>::mark_empty (struct basic_block_def * & e)
{
  <bb 2> :
  *e = 0B;
  return;

}



;; Function symbolicinfo::symbolicinfo (_ZN12symbolicinfoC2ERKS_, funcdef_no=7855, decl_uid=203361, cgraph_uid=4486, symbol_order=5272)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 8 3 }
;; 3 succs { 7 4 }
;; 4 succs { 6 5 }
;; 5 succs { 1 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { }
void symbolicinfo::symbolicinfo (struct symbolicinfo * const this, const struct symbolicinfo & D.203363)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.203363->cond_stmt;
  this->cond_stmt = _1;
  _2 = D.203363->switch_stmt;
  this->switch_stmt = _2;
  _3 = D.203363->cond_rhs;
  this->cond_rhs = _3;
  _4 = D.203363->cond_lhs;
  this->cond_lhs = _4;
  _5 = D.203363->node;
  this->node = _5;
  _6 = &this->switchs;
  _7 = &D.203363->switchs;
  std::vector<basic_block_def*>::vector (_6, _7);
  _8 = D.203363->cond_truebranch;
  this->cond_truebranch = _8;
  _9 = D.203363->cond_falsebranch;
  this->cond_falsebranch = _9;
  _10 = D.203363->prevlogic;
  this->prevlogic = _10;
  _11 = &this->symbolicExecutionPathConstraint;
  _12 = &D.203363->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::vector (_11, _12);

  <bb 3> :
  _13 = &this->symbolicExecutionPathConstraintarrayTrue;
  _14 = &D.203363->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::vector (_13, _14);

  <bb 4> :
  _15 = &this->symbolicExecutionPathConstraintarrayFalse;
  _16 = &D.203363->symbolicExecutionPathConstraintarrayFalse;
  std::vector<symbolicinfoPatharray>::vector (_15, _16);

  <bb 5> :
  return;

  <bb 6> :
<L0>:
  _18 = &this->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::~vector (_18);
  resx 3

  <bb 7> :
<L1>:
  _19 = &this->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::~vector (_19);
  resx 2

  <bb 8> :
<L2>:
  _20 = &this->switchs;
  std::vector<basic_block_def*>::~vector (_20);
  resx 1

}



;; Function std::vector<basic_block_def*>::vector (_ZNSt6vectorIP15basic_block_defSaIS1_EEC2ERKS3_, funcdef_no=8829, decl_uid=170264, cgraph_uid=5461, symbol_order=6251)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<basic_block_def*>::vector (struct vector * const this, const struct vector & __x)
{
  struct basic_block_def * * D.258317;
  struct __normal_iterator D.258314;
  struct __normal_iterator D.258313;
  struct allocator D.230221;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.170301;
  _2 = &__x->D.170301;
  _3 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_2);
  D.230221 = __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<basic_block_def*>::size (__x);
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_1, _4, &D.230221);

  <bb 3> :
  std::allocator<basic_block_def*>::~allocator (&D.230221);
  D.230221 = {CLOBBER};
  _5 = &this->D.170301;
  _6 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_5);
  _7 = this->D.170301._M_impl.D.169646._M_start;
  D.258313 = std::vector<basic_block_def*>::end (__x);
  D.258314 = std::vector<basic_block_def*>::begin (__x);
  D.258317 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**, basic_block_def*> (D.258314, D.258313, _7, _6);

  <bb 4> :
  _8 = D.258317;
  this->D.170301._M_impl.D.169646._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<basic_block_def*>::~allocator (&D.230221);
  resx 2

  <bb 6> :
<L1>:
  D.230221 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.170301;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::~_Vector_base (_9);
  resx 5

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaIP15basic_block_defES2_E17_S_select_on_copyERKS3_, funcdef_no=9670, decl_uid=169508, cgraph_uid=6302, symbol_order=7092)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<basic_block_def*> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<basic_block_def*> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaIP15basic_block_defEE37select_on_container_copy_constructionERKS2_, funcdef_no=10254, decl_uid=169473, cgraph_uid=6886, symbol_order=7680)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<basic_block_def*> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<basic_block_def*>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EEC2EmRKS2_, funcdef_no=9673, decl_uid=169733, cgraph_uid=6305, symbol_order=7095)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE12_Vector_implC2ERKS2_, funcdef_no=10256, decl_uid=169638, cgraph_uid=6888, symbol_order=7682)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<basic_block_def*>::allocator (this, __a);
  _1 = &this->D.169646;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_create_storage (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE17_M_create_storageEm, funcdef_no=10258, decl_uid=169657, cgraph_uid=6890, symbol_order=7684)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct basic_block_def * * D.258324;

  <bb 2> :
  D.258324 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_allocate (this, __n);
  _1 = D.258324;
  this->_M_impl.D.169646._M_start = _1;
  _2 = this->_M_impl.D.169646._M_start;
  this->_M_impl.D.169646._M_finish = _2;
  _3 = this->_M_impl.D.169646._M_start;
  _4 = __n * 8;
  _5 = _3 + _4;
  this->_M_impl.D.169646._M_end_of_storage = _5;
  return;

}



;; Function std::vector<basic_block_def*>::end (_ZNKSt6vectorIP15basic_block_defSaIS1_EE3endEv, funcdef_no=9676, decl_uid=169916, cgraph_uid=6308, symbol_order=7098)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<basic_block_def*>::end (const struct vector * const this)
{
  struct const_iterator D.238542;
  struct const_iterator D.258325;

  <bb 2> :
  _1 = &this->D.170301._M_impl.D.169646._M_finish;
  __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::__normal_iterator (&D.238542, _1);
  D.258325 = D.238542;
  D.238542 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.258325;

}



;; Function __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS2_SaIS2_EEEC2ERKS4_, funcdef_no=10260, decl_uid=230190, cgraph_uid=6892, symbol_order=7686)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::__normal_iterator (struct __normal_iterator * const this, struct basic_block_def * const * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<basic_block_def*>::begin (_ZNKSt6vectorIP15basic_block_defSaIS1_EE5beginEv, funcdef_no=9675, decl_uid=169912, cgraph_uid=6307, symbol_order=7097)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<basic_block_def*>::begin (const struct vector * const this)
{
  struct const_iterator D.238540;
  struct const_iterator D.258328;

  <bb 2> :
  _1 = &this->D.170301._M_impl.D.169646._M_start;
  __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::__normal_iterator (&D.238540, _1);
  D.258328 = D.238540;
  D.238540 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.258328;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**, basic_block_def*> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E, funcdef_no=9677, decl_uid=230210, cgraph_uid=6309, symbol_order=7099)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**, basic_block_def*> (struct __normal_iterator __first, struct __normal_iterator __last, struct basic_block_def * * __result, struct allocator & D.238546)
{
  struct basic_block_def * * D.258333;
  struct basic_block_def * * D.258331;

  <bb 2> :
  D.258333 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (__first, __last, __result);
  D.258331 = D.258333;

  <bb 3> :
<L0>:
  return D.258331;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_, funcdef_no=10262, decl_uid=238548, cgraph_uid=6895, symbol_order=7689)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::uninitialized_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (struct __normal_iterator __first, struct __normal_iterator __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258336;
  const bool __assignable;
  struct basic_block_def * * D.258334;

  <bb 2> :
  __assignable = 1;
  D.258336 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (__first, __last, __result);
  D.258334 = D.258336;

  <bb 3> :
<L0>:
  return D.258334;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_, funcdef_no=10717, decl_uid=243018, cgraph_uid=7349, symbol_order=8143)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (struct __normal_iterator __first, struct __normal_iterator __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258339;
  struct basic_block_def * * D.258337;

  <bb 2> :
  D.258339 = std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (__first, __last, __result);
  D.258337 = D.258339;

  <bb 3> :
<L0>:
  return D.258337;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_, funcdef_no=10908, decl_uid=246124, cgraph_uid=7540, symbol_order=8336)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (struct __normal_iterator __first, struct __normal_iterator __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258344;
  struct __normal_iterator D.258342;
  struct __normal_iterator D.258341;
  struct basic_block_def * * D.258340;

  <bb 2> :
  D.258341 = std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (__last);
  D.258342 = std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (__first);
  D.258344 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (D.258342, D.258341, __result);
  D.258340 = D.258344;

  <bb 3> :
<L0>:
  return D.258340;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEEET_SA_, funcdef_no=10275, decl_uid=238652, cgraph_uid=6907, symbol_order=7701)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.258345;

  <bb 2> :
  D.258345 = __it;

  <bb 3> :
<L0>:
  return D.258345;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEEPS3_ET1_T0_SC_SB_, funcdef_no=10998, decl_uid=247086, cgraph_uid=7630, symbol_order=8426)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (struct __normal_iterator __first, struct __normal_iterator __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258349;
  struct basic_block_def * * D.258347;

  <bb 2> :
  __result.1959_1 = __result;
  _2 = std::__niter_base<basic_block_def**> (__result.1959_1);
  _3 = std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (__last);
  _4 = std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (__first);
  D.258349 = std::__copy_move_a1<false, basic_block_def* const*, basic_block_def**> (_4, _3, _2);
  _5 = D.258349;
  D.258347 = std::__niter_wrap<basic_block_def**> (&__result, _5);

  <bb 3> :
<L0>:
  return D.258347;

}



;; Function std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (_ZSt12__niter_baseIPKP15basic_block_defSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE, funcdef_no=10719, decl_uid=243187, cgraph_uid=7351, symbol_order=8145)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * const * std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (struct __normal_iterator __it)
{
  struct basic_block_def * const * D.258350;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::base (&__it);
  D.258350 = *_1;

  <bb 3> :
<L0>:
  return D.258350;

}



;; Function __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS2_SaIS2_EEE4baseEv, funcdef_no=10914, decl_uid=230177, cgraph_uid=7546, symbol_order=8342)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * const * const & __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::base (const struct __normal_iterator * const this)
{
  struct basic_block_def * const * const & D.258352;

  <bb 2> :
  D.258352 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.258352;

}



;; Function std::__copy_move_a1<false, basic_block_def* const*, basic_block_def**> (_ZSt14__copy_move_a1ILb0EPKP15basic_block_defPS1_ET1_T0_S6_S5_, funcdef_no=10721, decl_uid=243341, cgraph_uid=7353, symbol_order=8147)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a1<false, basic_block_def* const*, basic_block_def**> (struct basic_block_def * const * __first, struct basic_block_def * const * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258356;
  struct basic_block_def * * D.258354;

  <bb 2> :
  D.258356 = std::__copy_move_a2<false, basic_block_def* const*, basic_block_def**> (__first, __last, __result);
  D.258354 = D.258356;

  <bb 3> :
<L0>:
  return D.258354;

}



;; Function std::__copy_move_a2<false, basic_block_def* const*, basic_block_def**> (_ZSt14__copy_move_a2ILb0EPKP15basic_block_defPS1_ET1_T0_S6_S5_, funcdef_no=10915, decl_uid=246169, cgraph_uid=7547, symbol_order=8343)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a2<false, basic_block_def* const*, basic_block_def**> (struct basic_block_def * const * __first, struct basic_block_def * const * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258357;

  <bb 2> :
  D.258357 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<basic_block_def*> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.258357;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<basic_block_def*> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP15basic_block_defEEPT_PKS5_S8_S6_, funcdef_no=11000, decl_uid=247131, cgraph_uid=7632, symbol_order=8428)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct basic_block_def * * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<basic_block_def*> (struct basic_block_def * const * __first, struct basic_block_def * const * __last, struct basic_block_def * * __result)
{
  const ptrdiff_t _Num;
  struct basic_block_def * * D.258362;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 8;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.1960_2 = (long unsigned int) _Num;
  _3 = _Num.1960_2 * 8;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.1961_4 = (long unsigned int) _Num;
  _5 = _Num.1961_4 * 8;
  D.258362 = __result + _5;

  <bb 5> :
<L3>:
  return D.258362;

}



;; Function std::__niter_wrap<basic_block_def**> (_ZSt12__niter_wrapIPP15basic_block_defET_RKS3_S3_, funcdef_no=10726, decl_uid=243384, cgraph_uid=7358, symbol_order=8152)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__niter_wrap<basic_block_def**> (struct basic_block_def * * const & D.246191, struct basic_block_def * * __res)
{
  struct basic_block_def * * D.258364;

  <bb 2> :
  D.258364 = __res;

  <bb 3> :
<L0>:
  return D.258364;

}



;; Function std::vector<symbolicinfoPatharray>::vector (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EEC2ERKS2_, funcdef_no=8832, decl_uid=171309, cgraph_uid=5464, symbol_order=6254)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<symbolicinfoPatharray>::vector (struct vector * const this, const struct vector & __x)
{
  struct symbolicinfoPatharray * D.258370;
  struct __normal_iterator D.258367;
  struct __normal_iterator D.258366;
  struct allocator D.230338;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.171346;
  _2 = &__x->D.171346;
  _3 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_2);
  D.230338 = __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<symbolicinfoPatharray>::size (__x);
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_1, _4, &D.230338);

  <bb 3> :
  std::allocator<symbolicinfoPatharray>::~allocator (&D.230338);
  D.230338 = {CLOBBER};
  _5 = &this->D.171346;
  _6 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_5);
  _7 = this->D.171346._M_impl.D.170691._M_start;
  D.258366 = std::vector<symbolicinfoPatharray>::end (__x);
  D.258367 = std::vector<symbolicinfoPatharray>::begin (__x);
  D.258370 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*, symbolicinfoPatharray> (D.258367, D.258366, _7, _6);

  <bb 4> :
  _8 = D.258370;
  this->D.171346._M_impl.D.170691._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<symbolicinfoPatharray>::~allocator (&D.230338);
  resx 2

  <bb 6> :
<L1>:
  D.230338 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.171346;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=9680, decl_uid=170581, cgraph_uid=6312, symbol_order=7102)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.258372;

  <bb 2> :
  D.258372 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.258372;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI21symbolicinfoPatharrayES1_E17_S_select_on_copyERKS2_, funcdef_no=9679, decl_uid=170553, cgraph_uid=6311, symbol_order=7101)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<symbolicinfoPatharray> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<symbolicinfoPatharray> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI21symbolicinfoPatharrayEE37select_on_container_copy_constructionERKS1_, funcdef_no=10264, decl_uid=170518, cgraph_uid=6896, symbol_order=7690)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<symbolicinfoPatharray> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<symbolicinfoPatharray>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::vector<symbolicinfoPatharray>::size (_ZNKSt6vectorI21symbolicinfoPatharraySaIS0_EE4sizeEv, funcdef_no=9678, decl_uid=170979, cgraph_uid=6310, symbol_order=7100)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<symbolicinfoPatharray>::size (const struct vector * const this)
{
  size_type D.258378;

  <bb 2> :
  _1 = this->D.171346._M_impl.D.170691._M_finish;
  _2 = this->D.171346._M_impl.D.170691._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.258378 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.258378;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EEC2EmRKS1_, funcdef_no=9682, decl_uid=170778, cgraph_uid=6314, symbol_order=7104)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=10266, decl_uid=170683, cgraph_uid=6898, symbol_order=7692)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<symbolicinfoPatharray>::allocator (this, __a);
  _1 = &this->D.170691;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_create_storage (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE17_M_create_storageEm, funcdef_no=10268, decl_uid=170702, cgraph_uid=6900, symbol_order=7694)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct symbolicinfoPatharray * D.258381;

  <bb 2> :
  D.258381 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_allocate (this, __n);
  _1 = D.258381;
  this->_M_impl.D.170691._M_start = _1;
  _2 = this->_M_impl.D.170691._M_start;
  this->_M_impl.D.170691._M_finish = _2;
  _3 = this->_M_impl.D.170691._M_start;
  _4 = __n * 16;
  _5 = _3 + _4;
  this->_M_impl.D.170691._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_allocate (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE11_M_allocateEm, funcdef_no=10283, decl_uid=170695, cgraph_uid=6915, symbol_order=7709)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct symbolicinfoPatharray * std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct symbolicinfoPatharray * D.258388;
  struct symbolicinfoPatharray * iftmp.1962;
  struct symbolicinfoPatharray * D.258382;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.258388 = std::allocator_traits<std::allocator<symbolicinfoPatharray> >::allocate (_1, __n);
  iftmp.1962 = D.258388;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1962 = 0B;

  <bb 5> :
  D.258382 = iftmp.1962;

  <bb 6> :
<L3>:
  return D.258382;

}



;; Function std::allocator_traits<std::allocator<symbolicinfoPatharray> >::allocate (_ZNSt16allocator_traitsISaI21symbolicinfoPatharrayEE8allocateERS1_m, funcdef_no=10728, decl_uid=170496, cgraph_uid=7360, symbol_order=8154)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct symbolicinfoPatharray * std::allocator_traits<std::allocator<symbolicinfoPatharray> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct symbolicinfoPatharray * D.258391;
  struct symbolicinfoPatharray * D.258389;

  <bb 2> :
  D.258391 = __gnu_cxx::new_allocator<symbolicinfoPatharray>::allocate (__a, __n, 0B);
  D.258389 = D.258391;

  <bb 3> :
<L0>:
  return D.258389;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::allocate (_ZN9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayE8allocateEmPKv, funcdef_no=10918, decl_uid=170350, cgraph_uid=7551, symbol_order=8347)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct symbolicinfoPatharray * __gnu_cxx::new_allocator<symbolicinfoPatharray>::allocate (struct new_allocator * const this, size_type __n, const void * D.247150)
{
  struct symbolicinfoPatharray * D.258402;
  struct symbolicinfoPatharray * D.258401;
  align_val_t __al;
  struct symbolicinfoPatharray * D.258399;
  bool retval.1963;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<symbolicinfoPatharray>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.1963 = _4 != 0;
  if (retval.1963 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 1152921504606846975)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 16;
  D.258402 = operator new (_6);
  D.258399 = D.258402;

  <bb 7> :
<L6>:
  return D.258399;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayE11_M_max_sizeEv, funcdef_no=10919, decl_uid=170377, cgraph_uid=7550, symbol_order=8346)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<symbolicinfoPatharray>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.258403;

  <bb 2> :
  D.258403 = 576460752303423487;

  <bb 3> :
<L0>:
  return D.258403;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE12_Vector_implD2Ev, funcdef_no=6832, decl_uid=170738, cgraph_uid=3460, symbol_order=4238)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<symbolicinfoPatharray>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<symbolicinfoPatharray>::~allocator (_ZNSaI21symbolicinfoPatharrayED2Ev, funcdef_no=7845, decl_uid=170471, cgraph_uid=4477, symbol_order=5263)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<symbolicinfoPatharray>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<symbolicinfoPatharray>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayED2Ev, funcdef_no=8821, decl_uid=170400, cgraph_uid=5453, symbol_order=6243)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<symbolicinfoPatharray>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8824, decl_uid=170579, cgraph_uid=5456, symbol_order=6246)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.258405;

  <bb 2> :
  D.258405 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.258405;

}



;; Function std::vector<symbolicinfoPatharray>::end (_ZNKSt6vectorI21symbolicinfoPatharraySaIS0_EE3endEv, funcdef_no=9685, decl_uid=170961, cgraph_uid=6317, symbol_order=7107)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<symbolicinfoPatharray>::end (const struct vector * const this)
{
  struct const_iterator D.238596;
  struct const_iterator D.258407;

  <bb 2> :
  _1 = &this->D.171346._M_impl.D.170691._M_finish;
  __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (&D.238596, _1);
  D.258407 = D.238596;
  D.238596 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.258407;

}



;; Function __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=10270, decl_uid=230307, cgraph_uid=6902, symbol_order=7696)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (struct __normal_iterator * const this, const struct symbolicinfoPatharray * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<symbolicinfoPatharray>::begin (_ZNKSt6vectorI21symbolicinfoPatharraySaIS0_EE5beginEv, funcdef_no=9684, decl_uid=170957, cgraph_uid=6316, symbol_order=7106)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<symbolicinfoPatharray>::begin (const struct vector * const this)
{
  struct const_iterator D.238594;
  struct const_iterator D.258410;

  <bb 2> :
  _1 = &this->D.171346._M_impl.D.170691._M_start;
  __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (&D.238594, _1);
  D.258410 = D.238594;
  D.238594 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.258410;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*, symbolicinfoPatharray> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=9686, decl_uid=230327, cgraph_uid=6318, symbol_order=7108)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*, symbolicinfoPatharray> (struct __normal_iterator __first, struct __normal_iterator __last, struct symbolicinfoPatharray * __result, struct allocator & D.238600)
{
  struct symbolicinfoPatharray * D.258415;
  struct symbolicinfoPatharray * D.258413;

  <bb 2> :
  D.258415 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (__first, __last, __result);
  D.258413 = D.258415;

  <bb 3> :
<L0>:
  return D.258413;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10272, decl_uid=238602, cgraph_uid=6905, symbol_order=7699)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (struct __normal_iterator __first, struct __normal_iterator __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.258418;
  const bool __assignable;
  struct symbolicinfoPatharray * D.258416;

  <bb 2> :
  __assignable = 1;
  D.258418 = std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (__first, __last, __result);
  D.258416 = D.258418;

  <bb 3> :
<L0>:
  return D.258416;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10718, decl_uid=243169, cgraph_uid=7350, symbol_order=8144)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct symbolicinfoPatharray * std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (struct __normal_iterator __first, struct __normal_iterator __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * __cur;
  struct symbolicinfoPatharray * D.258420;
  bool retval.1964;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator* (&__first);
  _2 = std::__addressof<symbolicinfoPatharray> (__cur);
  std::_Construct<symbolicinfoPatharray, const symbolicinfoPatharray&> (_2, _1);
  __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator++ (&__first);
  __cur = __cur + 16;

  <bb 4> :
  retval.1964 = __gnu_cxx::operator!=<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (&__first, &__last);
  if (retval.1964 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.258420 = __cur;

  <bb 6> :
<L3>:
  return D.258420;

}



;; Function __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEdeEv, funcdef_no=10912, decl_uid=230265, cgraph_uid=7544, symbol_order=8340)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct symbolicinfoPatharray & __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator* (const struct __normal_iterator * const this)
{
  const struct symbolicinfoPatharray & D.258422;

  <bb 2> :
  D.258422 = this->_M_current;

  <bb 3> :
<L0>:
  return D.258422;

}



;; Function std::__addressof<symbolicinfoPatharray> (_ZSt11__addressofI21symbolicinfoPatharrayEPT_RS1_, funcdef_no=10911, decl_uid=246152, cgraph_uid=7543, symbol_order=8339)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__addressof<symbolicinfoPatharray> (struct symbolicinfoPatharray & __r)
{
  struct symbolicinfoPatharray * D.258424;

  <bb 2> :
  D.258424 = __r;

  <bb 3> :
<L0>:
  return D.258424;

}



;; Function std::_Construct<symbolicinfoPatharray, const symbolicinfoPatharray&> (_ZSt10_ConstructI21symbolicinfoPatharrayJRKS0_EEvPT_DpOT0_, funcdef_no=10913, decl_uid=246154, cgraph_uid=7545, symbol_order=8341)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<symbolicinfoPatharray, const symbolicinfoPatharray&> (struct symbolicinfoPatharray * __p, const struct symbolicinfoPatharray & __args#0)
{
  void * D.247112;
  void * D.247111;
  const struct symbolicinfoPatharray * D.247113;

  <bb 2> :
  D.247113 = std::forward<const symbolicinfoPatharray&> (__args#0);
  D.247111 = __p;
  D.247112 = operator new (16, D.247111);
  MEM[(struct symbolicinfoPatharray *)D.247112] = *D.247113;
  return;

}



;; Function std::forward<const symbolicinfoPatharray&> (_ZSt7forwardIRK21symbolicinfoPatharrayEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=10999, decl_uid=247109, cgraph_uid=7631, symbol_order=8427)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct symbolicinfoPatharray & std::forward<const symbolicinfoPatharray&> (const struct type & __t)
{
  const struct symbolicinfoPatharray & D.258426;

  <bb 2> :
  D.258426 = __t;

  <bb 3> :
<L0>:
  return D.258426;

}



;; Function __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEppEv, funcdef_no=10910, decl_uid=230269, cgraph_uid=7542, symbol_order=8338)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.258428;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 16;
  this->_M_current = _2;
  D.258428 = this;

  <bb 3> :
<L0>:
  return D.258428;

}



;; Function __gnu_cxx::operator!=<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (_ZN9__gnu_cxxneIPK21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_, funcdef_no=10909, decl_uid=246145, cgraph_uid=7541, symbol_order=8337)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.258430;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (__rhs);
  _4 = *_3;
  D.258430 = _2 != _4;

  <bb 3> :
<L0>:
  return D.258430;

}



;; Function __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10920, decl_uid=230294, cgraph_uid=7552, symbol_order=8348)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct symbolicinfoPatharray * const & __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (const struct __normal_iterator * const this)
{
  const struct symbolicinfoPatharray * const & D.258432;

  <bb 2> :
  D.258432 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.258432;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::~_Vector_base (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EED2Ev, funcdef_no=7848, decl_uid=170801, cgraph_uid=4480, symbol_order=5266)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.170691._M_end_of_storage;
  _2 = this->_M_impl.D.170691._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.170691._M_start;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8823, decl_uid=170698, cgraph_uid=5455, symbol_order=6245)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (struct _Vector_base * const this, struct symbolicinfoPatharray * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<symbolicinfoPatharray> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<symbolicinfoPatharray> >::deallocate (_ZNSt16allocator_traitsISaI21symbolicinfoPatharrayEE10deallocateERS1_PS0_m, funcdef_no=9647, decl_uid=170503, cgraph_uid=6279, symbol_order=7069)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<symbolicinfoPatharray> >::deallocate (struct allocator_type & __a, struct symbolicinfoPatharray * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<symbolicinfoPatharray>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::deallocate (_ZN9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayE10deallocateEPS1_m, funcdef_no=10239, decl_uid=170354, cgraph_uid=6871, symbol_order=7665)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<symbolicinfoPatharray>::deallocate (struct new_allocator * const this, struct symbolicinfoPatharray * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 16;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<symbolicinfoPatharray>::~vector (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EED2Ev, funcdef_no=7851, decl_uid=171343, cgraph_uid=4483, symbol_order=5269)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<symbolicinfoPatharray>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.171346;
  _2 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_1);
  _3 = this->D.171346._M_impl.D.170691._M_finish;
  _4 = this->D.171346._M_impl.D.170691._M_start;
  std::_Destroy<symbolicinfoPatharray*, symbolicinfoPatharray> (_4, _3, _2);
  _5 = &this->D.171346;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<symbolicinfoPatharray*, symbolicinfoPatharray> (_ZSt8_DestroyIP21symbolicinfoPatharrayS0_EvT_S2_RSaIT0_E, funcdef_no=8825, decl_uid=216383, cgraph_uid=5457, symbol_order=6247)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<symbolicinfoPatharray*, symbolicinfoPatharray> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct allocator & D.230092)
{
  <bb 2> :
  std::_Destroy<symbolicinfoPatharray*> (__first, __last);
  return;

}



;; Function std::_Destroy<symbolicinfoPatharray*> (_ZSt8_DestroyIP21symbolicinfoPatharrayEvT_S2_, funcdef_no=9648, decl_uid=230094, cgraph_uid=6281, symbol_order=7071)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<symbolicinfoPatharray*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<symbolicinfoPatharray*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP21symbolicinfoPatharrayEEvT_S4_, funcdef_no=10240, decl_uid=238440, cgraph_uid=6872, symbol_order=7666)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<symbolicinfoPatharray*> (struct symbolicinfoPatharray * D.242837, struct symbolicinfoPatharray * D.242838)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function symbolicinfo::operator= (_ZN12symbolicinfoaSERKS_, funcdef_no=7857, decl_uid=216406, cgraph_uid=4488, symbol_order=5274)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfo & symbolicinfo::operator= (struct symbolicinfo * const this, const struct symbolicinfo & D.216407)
{
  struct symbolicinfo & D.258440;

  <bb 2> :
  _1 = D.216407->cond_stmt;
  this->cond_stmt = _1;
  _2 = D.216407->switch_stmt;
  this->switch_stmt = _2;
  _3 = D.216407->cond_rhs;
  this->cond_rhs = _3;
  _4 = D.216407->cond_lhs;
  this->cond_lhs = _4;
  _5 = D.216407->node;
  this->node = _5;
  _6 = &D.216407->switchs;
  _7 = &this->switchs;
  std::vector<basic_block_def*>::operator= (_7, _6);
  _8 = D.216407->cond_truebranch;
  this->cond_truebranch = _8;
  _9 = D.216407->cond_falsebranch;
  this->cond_falsebranch = _9;
  _10 = D.216407->prevlogic;
  this->prevlogic = _10;
  _11 = &D.216407->symbolicExecutionPathConstraint;
  _12 = &this->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::operator= (_12, _11);
  _13 = &D.216407->symbolicExecutionPathConstraintarrayTrue;
  _14 = &this->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::operator= (_14, _13);
  _15 = &D.216407->symbolicExecutionPathConstraintarrayFalse;
  _16 = &this->symbolicExecutionPathConstraintarrayFalse;
  std::vector<symbolicinfoPatharray>::operator= (_16, _15);
  D.258440 = this;

  <bb 3> :
<L0>:
  return D.258440;

}



;; Function std::vector<basic_block_def*>::operator= (_ZNSt6vectorIP15basic_block_defSaIS1_EEaSERKS3_, funcdef_no=8834, decl_uid=169879, cgraph_uid=5468, symbol_order=6258)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<basic_block_def*>::operator= (struct vector * const this, const struct vector & __x)
{
  struct basic_block_def * * D.258475;
  struct basic_block_def * * __tmp;
  const size_type __xlen;
  struct vector & D.258473;
  struct __normal_iterator D.258470;
  struct __normal_iterator D.258469;
  struct __normal_iterator D.258468;
  struct __normal_iterator D.258467;
  struct __normal_iterator D.258466;
  bool retval.1969;
  struct __normal_iterator D.258461;
  struct __normal_iterator D.258460;
  bool retval.1968;
  bool iftmp.1967;
  bool retval.1966;
  bool retval.1965;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.1965 = __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_propagate_on_copy_assign ();
  if (retval.1965 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.170301;
  _4 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.170301;
  _6 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1967 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1967 = 0;

  <bb 8> :
  retval.1966 = iftmp.1967;
  if (retval.1966 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<basic_block_def*>::clear (this);
  _8 = &this->D.170301;
  _9 = this->D.170301._M_impl.D.169646._M_end_of_storage;
  _10 = this->D.170301._M_impl.D.169646._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 8;
  _13 = (long unsigned int) _12;
  _14 = this->D.170301._M_impl.D.169646._M_start;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (_8, _14, _13);
  this->D.170301._M_impl.D.169646._M_start = 0B;
  this->D.170301._M_impl.D.169646._M_finish = 0B;
  this->D.170301._M_impl.D.169646._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.170301;
  _16 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.170301;
  _18 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<basic_block_def*> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<basic_block_def*>::size (__x);
  _19 = std::vector<basic_block_def*>::capacity (this);
  retval.1968 = __xlen > _19;
  if (retval.1968 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.258460 = std::vector<basic_block_def*>::end (__x);
  D.258461 = std::vector<basic_block_def*>::begin (__x);
  D.258475 = std::vector<basic_block_def*>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (this, __xlen, D.258461, D.258460);
  __tmp = D.258475;
  _20 = &this->D.170301;
  _21 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_20);
  _22 = this->D.170301._M_impl.D.169646._M_finish;
  _23 = this->D.170301._M_impl.D.169646._M_start;
  std::_Destroy<basic_block_def**, basic_block_def*> (_23, _22, _21);
  _24 = &this->D.170301;
  _25 = this->D.170301._M_impl.D.169646._M_end_of_storage;
  _26 = this->D.170301._M_impl.D.169646._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 8;
  _29 = (long unsigned int) _28;
  _30 = this->D.170301._M_impl.D.169646._M_start;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (_24, _30, _29);
  this->D.170301._M_impl.D.169646._M_start = __tmp;
  _31 = this->D.170301._M_impl.D.169646._M_start;
  _32 = __xlen * 8;
  _33 = _31 + _32;
  this->D.170301._M_impl.D.169646._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<basic_block_def*>::size (this);
  retval.1969 = __xlen <= _34;
  if (retval.1969 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.170301;
  _36 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_35);
  D.258466 = std::vector<basic_block_def*>::end (this);
  D.258467 = std::vector<basic_block_def*>::begin (this);
  D.258468 = std::vector<basic_block_def*>::end (__x);
  D.258469 = std::vector<basic_block_def*>::begin (__x);
  D.258470 = std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (D.258469, D.258468, D.258467);
  std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def*> (D.258470, D.258466, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.170301._M_impl.D.169646._M_start;
  _38 = __x->D.170301._M_impl.D.169646._M_start;
  _39 = std::vector<basic_block_def*>::size (this);
  _40 = _39 * 8;
  _41 = _38 + _40;
  _42 = __x->D.170301._M_impl.D.169646._M_start;
  std::copy<basic_block_def**, basic_block_def**> (_42, _41, _37);
  _43 = &this->D.170301;
  _44 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_43);
  _45 = this->D.170301._M_impl.D.169646._M_finish;
  _46 = __x->D.170301._M_impl.D.169646._M_finish;
  _47 = __x->D.170301._M_impl.D.169646._M_start;
  _48 = std::vector<basic_block_def*>::size (this);
  _49 = _48 * 8;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<basic_block_def**, basic_block_def**, basic_block_def*> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.170301._M_impl.D.169646._M_start;
  _52 = __xlen * 8;
  _53 = _51 + _52;
  this->D.170301._M_impl.D.169646._M_finish = _53;

  <bb 17> :
  D.258473 = this;

  <bb 18> :
<L19>:
  return D.258473;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaIP15basic_block_defES2_E27_S_propagate_on_copy_assignEv, funcdef_no=8835, decl_uid=169513, cgraph_uid=5466, symbol_order=6256)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_propagate_on_copy_assign ()
{
  bool D.258476;

  <bb 2> :
  D.258476 = 0;

  <bb 3> :
<L0>:
  return D.258476;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaIP15basic_block_defES2_E15_S_always_equalEv, funcdef_no=8836, decl_uid=169516, cgraph_uid=5467, symbol_order=6257)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_always_equal ()
{
  bool D.258478;

  <bb 2> :
  D.258478 = 1;

  <bb 3> :
<L0>:
  return D.258478;

}



;; Function std::operator!= (_ZStneRKSaIP15basic_block_defES3_, funcdef_no=9687, decl_uid=169399, cgraph_uid=6319, symbol_order=7109)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.238619, const struct allocator & D.238620)
{
  bool D.258480;

  <bb 2> :
  D.258480 = 0;

  <bb 3> :
<L0>:
  return D.258480;

}



;; Function std::vector<basic_block_def*>::clear (_ZNSt6vectorIP15basic_block_defSaIS1_EE5clearEv, funcdef_no=9688, decl_uid=170031, cgraph_uid=6320, symbol_order=7110)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<basic_block_def*>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.170301._M_impl.D.169646._M_start;
  std::vector<basic_block_def*>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<basic_block_def*>::_M_erase_at_end (_ZNSt6vectorIP15basic_block_defSaIS1_EE15_M_erase_at_endEPS1_, funcdef_no=10274, decl_uid=170159, cgraph_uid=6906, symbol_order=7700)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<basic_block_def*>::_M_erase_at_end (struct vector * const this, struct basic_block_def * * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.170301._M_impl.D.169646._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 8;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.170301;
  _5 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_4);
  _6 = this->D.170301._M_impl.D.169646._M_finish;
  std::_Destroy<basic_block_def**, basic_block_def*> (__pos, _6, _5);
  this->D.170301._M_impl.D.169646._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<basic_block_def*> > (_ZSt15__alloc_on_copyISaIP15basic_block_defEEvRT_RKS3_, funcdef_no=9689, decl_uid=230365, cgraph_uid=6321, symbol_order=7111)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<basic_block_def*> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<basic_block_def*>::capacity (_ZNKSt6vectorIP15basic_block_defSaIS1_EE8capacityEv, funcdef_no=9690, decl_uid=169947, cgraph_uid=6322, symbol_order=7112)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<basic_block_def*>::capacity (const struct vector * const this)
{
  size_type D.258485;

  <bb 2> :
  _1 = this->D.170301._M_impl.D.169646._M_end_of_storage;
  _2 = this->D.170301._M_impl.D.169646._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  D.258485 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.258485;

}



;; Function std::vector<basic_block_def*>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (_ZNSt6vectorIP15basic_block_defSaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_, funcdef_no=9691, decl_uid=230372, cgraph_uid=6323, symbol_order=7113)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct basic_block_def * * std::vector<basic_block_def*>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct basic_block_def * * D.258489;
  struct basic_block_def * * __result;
  struct basic_block_def * * D.258487;

  <bb 2> :
  _1 = &this->D.170301;
  D.258489 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_allocate (_1, __n);
  __result = D.258489;
  _2 = &this->D.170301;
  _3 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**, basic_block_def*> (__first, __last, __result, _3);

  <bb 3> :
  D.258487 = __result;

  <bb 4> :
<L0>:
  return D.258487;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.170301;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_, funcdef_no=9692, decl_uid=230380, cgraph_uid=6324, symbol_order=7114)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.258495;
  struct __normal_iterator D.258494;
  struct __normal_iterator D.258493;

  <bb 2> :
  D.258494 = std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (__last);
  D.258495 = std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (__first);
  D.258493 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (D.258495, D.258494, __result);

  <bb 3> :
<L0>:
  return D.258493;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_, funcdef_no=10276, decl_uid=238658, cgraph_uid=6909, symbol_order=7703)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct basic_block_def * * D.258499;
  struct __normal_iterator D.258497;

  <bb 2> :
  _1 = std::__niter_base<basic_block_def**, std::vector<basic_block_def*> > (__result);
  _2 = std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (__last);
  _3 = std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (__first);
  D.258499 = std::__copy_move_a1<false, basic_block_def* const*, basic_block_def**> (_3, _2, _1);
  _4 = D.258499;
  D.258497 = std::__niter_wrap<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def**> (__result, _4);

  <bb 3> :
<L0>:
  return D.258497;

}



;; Function std::__niter_base<basic_block_def**, std::vector<basic_block_def*> > (_ZSt12__niter_baseIPP15basic_block_defSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10720, decl_uid=243338, cgraph_uid=7352, symbol_order=8146)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__niter_base<basic_block_def**, std::vector<basic_block_def*> > (struct __normal_iterator __it)
{
  struct basic_block_def * * D.258500;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (&__it);
  D.258500 = *_1;

  <bb 3> :
<L0>:
  return D.258500;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def**> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_, funcdef_no=10722, decl_uid=243345, cgraph_uid=7354, symbol_order=8148)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def**> (struct __normal_iterator __from, struct basic_block_def * * __res)
{
  struct __normal_iterator D.258502;

  <bb 2> :
  _1 = std::__niter_base<basic_block_def**, std::vector<basic_block_def*> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 8;
  D.258502 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.258502;

}



;; Function __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS2_SaIS2_EEEplEl, funcdef_no=10916, decl_uid=215415, cgraph_uid=7548, symbol_order=8344)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct basic_block_def * * const D.247137;
  struct __normal_iterator D.247138;
  struct __normal_iterator D.258504;

  <bb 2> :
  _1 = this->_M_current;
  __n.1970_2 = (long unsigned int) __n;
  _3 = __n.1970_2 * 8;
  _4 = _1 + _3;
  D.247137 = _4;
  __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::__normal_iterator (&D.247138, &D.247137);
  D.258504 = D.247138;
  D.247138 = {CLOBBER};
  D.247137 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.258504;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def*> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E, funcdef_no=9693, decl_uid=230386, cgraph_uid=6325, symbol_order=7115)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def*> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.238687)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS3_SaIS3_EEEEEvT_S9_, funcdef_no=10278, decl_uid=238689, cgraph_uid=6910, symbol_order=7704)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS5_SaIS5_EEEEEEvT_SB_, funcdef_no=10723, decl_uid=243369, cgraph_uid=7355, symbol_order=8149)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (struct __normal_iterator D.246178, struct __normal_iterator D.246179)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<basic_block_def**, basic_block_def**> (_ZSt4copyIPP15basic_block_defS2_ET0_T_S4_S3_, funcdef_no=9694, decl_uid=230394, cgraph_uid=6326, symbol_order=7116)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::copy<basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258510;
  struct basic_block_def * * D.258508;

  <bb 2> :
  _1 = std::__miter_base<basic_block_def**> (__last);
  _2 = std::__miter_base<basic_block_def**> (__first);
  D.258510 = std::__copy_move_a<false, basic_block_def**, basic_block_def**> (_2, _1, __result);
  D.258508 = D.258510;

  <bb 3> :
<L0>:
  return D.258508;

}



;; Function std::__miter_base<basic_block_def**> (_ZSt12__miter_baseIPP15basic_block_defET_S3_, funcdef_no=10279, decl_uid=238705, cgraph_uid=6911, symbol_order=7705)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__miter_base<basic_block_def**> (struct basic_block_def * * __it)
{
  struct basic_block_def * * D.258511;

  <bb 2> :
  D.258511 = __it;

  <bb 3> :
<L0>:
  return D.258511;

}



;; Function std::__copy_move_a<false, basic_block_def**, basic_block_def**> (_ZSt13__copy_move_aILb0EPP15basic_block_defS2_ET1_T0_S4_S3_, funcdef_no=10280, decl_uid=238707, cgraph_uid=6912, symbol_order=7706)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a<false, basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258515;
  struct basic_block_def * * D.258513;

  <bb 2> :
  __result.1971_1 = __result;
  _2 = std::__niter_base<basic_block_def**> (__result.1971_1);
  _3 = std::__niter_base<basic_block_def**> (__last);
  _4 = std::__niter_base<basic_block_def**> (__first);
  D.258515 = std::__copy_move_a1<false, basic_block_def**, basic_block_def**> (_4, _3, _2);
  _5 = D.258515;
  D.258513 = std::__niter_wrap<basic_block_def**> (&__result, _5);

  <bb 3> :
<L0>:
  return D.258513;

}



;; Function std::__copy_move_a1<false, basic_block_def**, basic_block_def**> (_ZSt14__copy_move_a1ILb0EPP15basic_block_defS2_ET1_T0_S4_S3_, funcdef_no=10725, decl_uid=243380, cgraph_uid=7357, symbol_order=8151)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a1<false, basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258518;
  struct basic_block_def * * D.258516;

  <bb 2> :
  D.258518 = std::__copy_move_a2<false, basic_block_def**, basic_block_def**> (__first, __last, __result);
  D.258516 = D.258518;

  <bb 3> :
<L0>:
  return D.258516;

}



;; Function std::__copy_move_a2<false, basic_block_def**, basic_block_def**> (_ZSt14__copy_move_a2ILb0EPP15basic_block_defS2_ET1_T0_S4_S3_, funcdef_no=10917, decl_uid=246187, cgraph_uid=7549, symbol_order=8345)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a2<false, basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258519;

  <bb 2> :
  D.258519 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<basic_block_def*> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.258519;

}



;; Function std::__uninitialized_copy_a<basic_block_def**, basic_block_def**, basic_block_def*> (_ZSt22__uninitialized_copy_aIPP15basic_block_defS2_S1_ET0_T_S4_S3_RSaIT1_E, funcdef_no=9695, decl_uid=230398, cgraph_uid=6327, symbol_order=7117)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__uninitialized_copy_a<basic_block_def**, basic_block_def**, basic_block_def*> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result, struct allocator & D.238714)
{
  struct basic_block_def * * D.258523;
  struct basic_block_def * * D.258521;

  <bb 2> :
  D.258523 = std::uninitialized_copy<basic_block_def**, basic_block_def**> (__first, __last, __result);
  D.258521 = D.258523;

  <bb 3> :
<L0>:
  return D.258521;

}



;; Function std::uninitialized_copy<basic_block_def**, basic_block_def**> (_ZSt18uninitialized_copyIPP15basic_block_defS2_ET0_T_S4_S3_, funcdef_no=10281, decl_uid=238716, cgraph_uid=6913, symbol_order=7707)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::uninitialized_copy<basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258526;
  const bool __assignable;
  struct basic_block_def * * D.258524;

  <bb 2> :
  __assignable = 1;
  D.258526 = std::__uninitialized_copy<true>::__uninit_copy<basic_block_def**, basic_block_def**> (__first, __last, __result);
  D.258524 = D.258526;

  <bb 3> :
<L0>:
  return D.258524;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<basic_block_def**, basic_block_def**> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPP15basic_block_defS4_EET0_T_S6_S5_, funcdef_no=10727, decl_uid=243418, cgraph_uid=7359, symbol_order=8153)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__uninitialized_copy<true>::__uninit_copy<basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258529;
  struct basic_block_def * * D.258527;

  <bb 2> :
  D.258529 = std::copy<basic_block_def**, basic_block_def**> (__first, __last, __result);
  D.258527 = D.258529;

  <bb 3> :
<L0>:
  return D.258527;

}



;; Function std::vector<symbolicinfoPatharray>::operator= (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EEaSERKS2_, funcdef_no=8837, decl_uid=170924, cgraph_uid=5471, symbol_order=6261)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<symbolicinfoPatharray>::operator= (struct vector * const this, const struct vector & __x)
{
  struct symbolicinfoPatharray * D.258563;
  struct symbolicinfoPatharray * __tmp;
  const size_type __xlen;
  struct vector & D.258561;
  struct __normal_iterator D.258558;
  struct __normal_iterator D.258557;
  struct __normal_iterator D.258556;
  struct __normal_iterator D.258555;
  struct __normal_iterator D.258554;
  bool retval.1976;
  struct __normal_iterator D.258549;
  struct __normal_iterator D.258548;
  bool retval.1975;
  bool iftmp.1974;
  bool retval.1973;
  bool retval.1972;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.1972 = __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_propagate_on_copy_assign ();
  if (retval.1972 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.171346;
  _4 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.171346;
  _6 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1974 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1974 = 0;

  <bb 8> :
  retval.1973 = iftmp.1974;
  if (retval.1973 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<symbolicinfoPatharray>::clear (this);
  _8 = &this->D.171346;
  _9 = this->D.171346._M_impl.D.170691._M_end_of_storage;
  _10 = this->D.171346._M_impl.D.170691._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 16;
  _13 = (long unsigned int) _12;
  _14 = this->D.171346._M_impl.D.170691._M_start;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (_8, _14, _13);
  this->D.171346._M_impl.D.170691._M_start = 0B;
  this->D.171346._M_impl.D.170691._M_finish = 0B;
  this->D.171346._M_impl.D.170691._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.171346;
  _16 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.171346;
  _18 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<symbolicinfoPatharray> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<symbolicinfoPatharray>::size (__x);
  _19 = std::vector<symbolicinfoPatharray>::capacity (this);
  retval.1975 = __xlen > _19;
  if (retval.1975 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.258548 = std::vector<symbolicinfoPatharray>::end (__x);
  D.258549 = std::vector<symbolicinfoPatharray>::begin (__x);
  D.258563 = std::vector<symbolicinfoPatharray>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (this, __xlen, D.258549, D.258548);
  __tmp = D.258563;
  _20 = &this->D.171346;
  _21 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_20);
  _22 = this->D.171346._M_impl.D.170691._M_finish;
  _23 = this->D.171346._M_impl.D.170691._M_start;
  std::_Destroy<symbolicinfoPatharray*, symbolicinfoPatharray> (_23, _22, _21);
  _24 = &this->D.171346;
  _25 = this->D.171346._M_impl.D.170691._M_end_of_storage;
  _26 = this->D.171346._M_impl.D.170691._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 16;
  _29 = (long unsigned int) _28;
  _30 = this->D.171346._M_impl.D.170691._M_start;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (_24, _30, _29);
  this->D.171346._M_impl.D.170691._M_start = __tmp;
  _31 = this->D.171346._M_impl.D.170691._M_start;
  _32 = __xlen * 16;
  _33 = _31 + _32;
  this->D.171346._M_impl.D.170691._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<symbolicinfoPatharray>::size (this);
  retval.1976 = __xlen <= _34;
  if (retval.1976 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.171346;
  _36 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_35);
  D.258554 = std::vector<symbolicinfoPatharray>::end (this);
  D.258555 = std::vector<symbolicinfoPatharray>::begin (this);
  D.258556 = std::vector<symbolicinfoPatharray>::end (__x);
  D.258557 = std::vector<symbolicinfoPatharray>::begin (__x);
  D.258558 = std::copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (D.258557, D.258556, D.258555);
  std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray> (D.258558, D.258554, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.171346._M_impl.D.170691._M_start;
  _38 = __x->D.171346._M_impl.D.170691._M_start;
  _39 = std::vector<symbolicinfoPatharray>::size (this);
  _40 = _39 * 16;
  _41 = _38 + _40;
  _42 = __x->D.171346._M_impl.D.170691._M_start;
  std::copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (_42, _41, _37);
  _43 = &this->D.171346;
  _44 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_43);
  _45 = this->D.171346._M_impl.D.170691._M_finish;
  _46 = __x->D.171346._M_impl.D.170691._M_finish;
  _47 = __x->D.171346._M_impl.D.170691._M_start;
  _48 = std::vector<symbolicinfoPatharray>::size (this);
  _49 = _48 * 16;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<symbolicinfoPatharray*, symbolicinfoPatharray*, symbolicinfoPatharray> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.171346._M_impl.D.170691._M_start;
  _52 = __xlen * 16;
  _53 = _51 + _52;
  this->D.171346._M_impl.D.170691._M_finish = _53;

  <bb 17> :
  D.258561 = this;

  <bb 18> :
<L19>:
  return D.258561;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI21symbolicinfoPatharrayES1_E27_S_propagate_on_copy_assignEv, funcdef_no=8838, decl_uid=170558, cgraph_uid=5469, symbol_order=6259)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_propagate_on_copy_assign ()
{
  bool D.258564;

  <bb 2> :
  D.258564 = 0;

  <bb 3> :
<L0>:
  return D.258564;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI21symbolicinfoPatharrayES1_E15_S_always_equalEv, funcdef_no=8839, decl_uid=170561, cgraph_uid=5470, symbol_order=6260)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_always_equal ()
{
  bool D.258566;

  <bb 2> :
  D.258566 = 1;

  <bb 3> :
<L0>:
  return D.258566;

}



;; Function std::operator!= (_ZStneRKSaI21symbolicinfoPatharrayES2_, funcdef_no=9696, decl_uid=170444, cgraph_uid=6328, symbol_order=7118)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.238720, const struct allocator & D.238721)
{
  bool D.258568;

  <bb 2> :
  D.258568 = 0;

  <bb 3> :
<L0>:
  return D.258568;

}



;; Function std::vector<symbolicinfoPatharray>::clear (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EE5clearEv, funcdef_no=9697, decl_uid=171076, cgraph_uid=6329, symbol_order=7119)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<symbolicinfoPatharray>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.171346._M_impl.D.170691._M_start;
  std::vector<symbolicinfoPatharray>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<symbolicinfoPatharray>::_M_erase_at_end (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=10282, decl_uid=171204, cgraph_uid=6914, symbol_order=7708)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<symbolicinfoPatharray>::_M_erase_at_end (struct vector * const this, struct symbolicinfoPatharray * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.171346._M_impl.D.170691._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 16;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.171346;
  _5 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_4);
  _6 = this->D.171346._M_impl.D.170691._M_finish;
  std::_Destroy<symbolicinfoPatharray*, symbolicinfoPatharray> (__pos, _6, _5);
  this->D.171346._M_impl.D.170691._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<symbolicinfoPatharray> > (_ZSt15__alloc_on_copyISaI21symbolicinfoPatharrayEEvRT_RKS2_, funcdef_no=9698, decl_uid=230431, cgraph_uid=6330, symbol_order=7120)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<symbolicinfoPatharray> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<symbolicinfoPatharray>::capacity (_ZNKSt6vectorI21symbolicinfoPatharraySaIS0_EE8capacityEv, funcdef_no=9699, decl_uid=170992, cgraph_uid=6331, symbol_order=7121)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<symbolicinfoPatharray>::capacity (const struct vector * const this)
{
  size_type D.258573;

  <bb 2> :
  _1 = this->D.171346._M_impl.D.170691._M_end_of_storage;
  _2 = this->D.171346._M_impl.D.170691._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.258573 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.258573;

}



;; Function std::vector<symbolicinfoPatharray>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=9700, decl_uid=230438, cgraph_uid=6332, symbol_order=7122)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct symbolicinfoPatharray * std::vector<symbolicinfoPatharray>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct symbolicinfoPatharray * D.258577;
  struct symbolicinfoPatharray * __result;
  struct symbolicinfoPatharray * D.258575;

  <bb 2> :
  _1 = &this->D.171346;
  D.258577 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_allocate (_1, __n);
  __result = D.258577;
  _2 = &this->D.171346;
  _3 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*, symbolicinfoPatharray> (__first, __last, __result, _3);

  <bb 3> :
  D.258575 = __result;

  <bb 4> :
<L0>:
  return D.258575;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.171346;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<symbolicinfoPatharray>::end (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EE3endEv, funcdef_no=9703, decl_uid=170959, cgraph_uid=6335, symbol_order=7125)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<symbolicinfoPatharray>::end (struct vector * const this)
{
  struct iterator D.238807;
  struct iterator D.258581;

  <bb 2> :
  _1 = &this->D.171346._M_impl.D.170691._M_finish;
  __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (&D.238807, _1);
  D.258581 = D.238807;
  D.238807 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.258581;

}



;; Function __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=10285, decl_uid=230520, cgraph_uid=6917, symbol_order=7711)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (struct __normal_iterator * const this, struct symbolicinfoPatharray * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<symbolicinfoPatharray>::begin (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EE5beginEv, funcdef_no=9701, decl_uid=170955, cgraph_uid=6333, symbol_order=7123)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<symbolicinfoPatharray>::begin (struct vector * const this)
{
  struct iterator D.238761;
  struct iterator D.258584;

  <bb 2> :
  _1 = &this->D.171346._M_impl.D.170691._M_start;
  __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (&D.238761, _1);
  D.258584 = D.238761;
  D.238761 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.258584;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=9702, decl_uid=230539, cgraph_uid=6334, symbol_order=7124)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.258589;
  struct __normal_iterator D.258588;
  struct __normal_iterator D.258587;

  <bb 2> :
  D.258588 = std::__miter_base<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (__last);
  D.258589 = std::__miter_base<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (__first);
  D.258587 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (D.258589, D.258588, __result);

  <bb 3> :
<L0>:
  return D.258587;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=10287, decl_uid=238773, cgraph_uid=6919, symbol_order=7713)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.258591;

  <bb 2> :
  D.258591 = __it;

  <bb 3> :
<L0>:
  return D.258591;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=10288, decl_uid=238779, cgraph_uid=6922, symbol_order=7716)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct symbolicinfoPatharray * D.258595;
  struct __normal_iterator D.258593;

  <bb 2> :
  _1 = std::__niter_base<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (__result);
  _2 = std::__niter_base<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (__last);
  _3 = std::__niter_base<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (__first);
  D.258595 = std::__copy_move_a1<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (_3, _2, _1);
  _4 = D.258595;
  D.258593 = std::__niter_wrap<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (__result, _4);

  <bb 3> :
<L0>:
  return D.258593;

}



;; Function std::__niter_base<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (_ZSt12__niter_baseIP21symbolicinfoPatharraySt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10730, decl_uid=243592, cgraph_uid=7362, symbol_order=8156)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__niter_base<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (struct __normal_iterator __it)
{
  struct symbolicinfoPatharray * D.258596;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (&__it);
  D.258596 = *_1;

  <bb 3> :
<L0>:
  return D.258596;

}



;; Function __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10921, decl_uid=230507, cgraph_uid=7553, symbol_order=8349)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * const & __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (const struct __normal_iterator * const this)
{
  struct symbolicinfoPatharray * const & D.258598;

  <bb 2> :
  D.258598 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.258598;

}



;; Function std::__niter_base<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (_ZSt12__niter_baseIPK21symbolicinfoPatharraySt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10729, decl_uid=243441, cgraph_uid=7361, symbol_order=8155)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct symbolicinfoPatharray * std::__niter_base<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (struct __normal_iterator __it)
{
  const struct symbolicinfoPatharray * D.258600;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (&__it);
  D.258600 = *_1;

  <bb 3> :
<L0>:
  return D.258600;

}



;; Function std::__copy_move_a1<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt14__copy_move_a1ILb0EPK21symbolicinfoPatharrayPS0_ET1_T0_S5_S4_, funcdef_no=10731, decl_uid=243740, cgraph_uid=7363, symbol_order=8157)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move_a1<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (const struct symbolicinfoPatharray * __first, const struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.258604;
  struct symbolicinfoPatharray * D.258602;

  <bb 2> :
  D.258604 = std::__copy_move_a2<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (__first, __last, __result);
  D.258602 = D.258604;

  <bb 3> :
<L0>:
  return D.258602;

}



;; Function std::__copy_move_a2<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt14__copy_move_a2ILb0EPK21symbolicinfoPatharrayPS0_ET1_T0_S5_S4_, funcdef_no=10922, decl_uid=246209, cgraph_uid=7554, symbol_order=8350)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move_a2<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (const struct symbolicinfoPatharray * __first, const struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.258605;

  <bb 2> :
  D.258605 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<symbolicinfoPatharray> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.258605;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<symbolicinfoPatharray> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI21symbolicinfoPatharrayEEPT_PKS4_S7_S5_, funcdef_no=11001, decl_uid=247174, cgraph_uid=7633, symbol_order=8429)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<symbolicinfoPatharray> (const struct symbolicinfoPatharray * __first, const struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  const ptrdiff_t _Num;
  struct symbolicinfoPatharray * D.258610;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 16;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.1977_2 = (long unsigned int) _Num;
  _3 = _Num.1977_2 * 16;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.1978_4 = (long unsigned int) _Num;
  _5 = _Num.1978_4 * 16;
  D.258610 = __result + _5;

  <bb 5> :
<L3>:
  return D.258610;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10732, decl_uid=243744, cgraph_uid=7364, symbol_order=8158)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (struct __normal_iterator __from, struct symbolicinfoPatharray * __res)
{
  struct __normal_iterator D.258612;

  <bb 2> :
  _1 = std::__niter_base<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 16;
  D.258612 = __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.258612;

}



;; Function __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10923, decl_uid=230498, cgraph_uid=7555, symbol_order=8351)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct symbolicinfoPatharray * const D.247180;
  struct __normal_iterator D.247181;
  struct __normal_iterator D.258614;

  <bb 2> :
  _1 = this->_M_current;
  __n.1979_2 = (long unsigned int) __n;
  _3 = __n.1979_2 * 16;
  _4 = _1 + _3;
  D.247180 = _4;
  __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (&D.247181, &D.247180);
  D.258614 = D.247181;
  D.247181 = {CLOBBER};
  D.247180 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.258614;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=9704, decl_uid=230545, cgraph_uid=6336, symbol_order=7126)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.238810)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=10291, decl_uid=238812, cgraph_uid=6923, symbol_order=7717)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10733, decl_uid=243768, cgraph_uid=7365, symbol_order=8159)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct __normal_iterator D.246219, struct __normal_iterator D.246220)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt4copyIP21symbolicinfoPatharrayS1_ET0_T_S3_S2_, funcdef_no=9705, decl_uid=230553, cgraph_uid=6337, symbol_order=7127)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.258620;
  struct symbolicinfoPatharray * D.258618;

  <bb 2> :
  _1 = std::__miter_base<symbolicinfoPatharray*> (__last);
  _2 = std::__miter_base<symbolicinfoPatharray*> (__first);
  D.258620 = std::__copy_move_a<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (_2, _1, __result);
  D.258618 = D.258620;

  <bb 3> :
<L0>:
  return D.258618;

}



;; Function std::__miter_base<symbolicinfoPatharray*> (_ZSt12__miter_baseIP21symbolicinfoPatharrayET_S2_, funcdef_no=10292, decl_uid=238828, cgraph_uid=6924, symbol_order=7718)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__miter_base<symbolicinfoPatharray*> (struct symbolicinfoPatharray * __it)
{
  struct symbolicinfoPatharray * D.258621;

  <bb 2> :
  D.258621 = __it;

  <bb 3> :
<L0>:
  return D.258621;

}



;; Function std::__copy_move_a<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt13__copy_move_aILb0EP21symbolicinfoPatharrayS1_ET1_T0_S3_S2_, funcdef_no=10293, decl_uid=238830, cgraph_uid=6925, symbol_order=7719)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move_a<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.258625;
  struct symbolicinfoPatharray * D.258623;

  <bb 2> :
  __result.1980_1 = __result;
  _2 = std::__niter_base<symbolicinfoPatharray*> (__result.1980_1);
  _3 = std::__niter_base<symbolicinfoPatharray*> (__last);
  _4 = std::__niter_base<symbolicinfoPatharray*> (__first);
  D.258625 = std::__copy_move_a1<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (_4, _3, _2);
  _5 = D.258625;
  D.258623 = std::__niter_wrap<symbolicinfoPatharray*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.258623;

}



;; Function std::__niter_base<symbolicinfoPatharray*> (_ZSt12__niter_baseIP21symbolicinfoPatharrayET_S2_, funcdef_no=10734, decl_uid=243779, cgraph_uid=7366, symbol_order=8160)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__niter_base<symbolicinfoPatharray*> (struct symbolicinfoPatharray * __it)
{
  struct symbolicinfoPatharray * D.258626;

  <bb 2> :
  D.258626 = __it;

  <bb 3> :
<L0>:
  return D.258626;

}



;; Function std::__copy_move_a1<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt14__copy_move_a1ILb0EP21symbolicinfoPatharrayS1_ET1_T0_S3_S2_, funcdef_no=10735, decl_uid=243781, cgraph_uid=7367, symbol_order=8161)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move_a1<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.258630;
  struct symbolicinfoPatharray * D.258628;

  <bb 2> :
  D.258630 = std::__copy_move_a2<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (__first, __last, __result);
  D.258628 = D.258630;

  <bb 3> :
<L0>:
  return D.258628;

}



;; Function std::__copy_move_a2<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt14__copy_move_a2ILb0EP21symbolicinfoPatharrayS1_ET1_T0_S3_S2_, funcdef_no=10924, decl_uid=246228, cgraph_uid=7556, symbol_order=8352)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move_a2<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.258631;

  <bb 2> :
  D.258631 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<symbolicinfoPatharray> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.258631;

}



;; Function std::__niter_wrap<symbolicinfoPatharray*> (_ZSt12__niter_wrapIP21symbolicinfoPatharrayET_RKS2_S2_, funcdef_no=10736, decl_uid=243785, cgraph_uid=7368, symbol_order=8162)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__niter_wrap<symbolicinfoPatharray*> (struct symbolicinfoPatharray * const & D.246232, struct symbolicinfoPatharray * __res)
{
  struct symbolicinfoPatharray * D.258633;

  <bb 2> :
  D.258633 = __res;

  <bb 3> :
<L0>:
  return D.258633;

}



;; Function std::__uninitialized_copy_a<symbolicinfoPatharray*, symbolicinfoPatharray*, symbolicinfoPatharray> (_ZSt22__uninitialized_copy_aIP21symbolicinfoPatharrayS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=9706, decl_uid=230557, cgraph_uid=6338, symbol_order=7128)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__uninitialized_copy_a<symbolicinfoPatharray*, symbolicinfoPatharray*, symbolicinfoPatharray> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result, struct allocator & D.238837)
{
  struct symbolicinfoPatharray * D.258637;
  struct symbolicinfoPatharray * D.258635;

  <bb 2> :
  D.258637 = std::uninitialized_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (__first, __last, __result);
  D.258635 = D.258637;

  <bb 3> :
<L0>:
  return D.258635;

}



;; Function std::uninitialized_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt18uninitialized_copyIP21symbolicinfoPatharrayS1_ET0_T_S3_S2_, funcdef_no=10294, decl_uid=238839, cgraph_uid=6926, symbol_order=7720)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::uninitialized_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.258640;
  const bool __assignable;
  struct symbolicinfoPatharray * D.258638;

  <bb 2> :
  __assignable = 1;
  D.258640 = std::__uninitialized_copy<false>::__uninit_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (__first, __last, __result);
  D.258638 = D.258640;

  <bb 3> :
<L0>:
  return D.258638;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP21symbolicinfoPatharrayS3_EET0_T_S5_S4_, funcdef_no=10737, decl_uid=243819, cgraph_uid=7369, symbol_order=8163)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct symbolicinfoPatharray * std::__uninitialized_copy<false>::__uninit_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * __cur;
  struct symbolicinfoPatharray * D.258641;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<symbolicinfoPatharray> (__cur);
  std::_Construct<symbolicinfoPatharray, symbolicinfoPatharray&> (_1, __first);
  __first = __first + 16;
  __cur = __cur + 16;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.258641 = __cur;

  <bb 6> :
<L3>:
  return D.258641;

}



;; Function std::_Construct<symbolicinfoPatharray, symbolicinfoPatharray&> (_ZSt10_ConstructI21symbolicinfoPatharrayJRS0_EEvPT_DpOT0_, funcdef_no=10925, decl_uid=246240, cgraph_uid=7557, symbol_order=8353)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<symbolicinfoPatharray, symbolicinfoPatharray&> (struct symbolicinfoPatharray * __p, struct symbolicinfoPatharray & __args#0)
{
  void * D.247205;
  void * D.247204;
  const struct symbolicinfoPatharray * D.247206;

  <bb 2> :
  D.247206 = std::forward<symbolicinfoPatharray&> (__args#0);
  D.247204 = __p;
  D.247205 = operator new (16, D.247204);
  MEM[(struct symbolicinfoPatharray *)D.247205] = *D.247206;
  return;

}



;; Function std::forward<symbolicinfoPatharray&> (_ZSt7forwardIR21symbolicinfoPatharrayEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=11002, decl_uid=247202, cgraph_uid=7634, symbol_order=8430)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct symbolicinfoPatharray & std::forward<symbolicinfoPatharray&> (struct type & __t)
{
  struct symbolicinfoPatharray & D.258643;

  <bb 2> :
  D.258643 = __t;

  <bb 3> :
<L0>:
  return D.258643;

}



;; Function hash_map<tree_node*, function_path_array>::put (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7858, decl_uid=191959, cgraph_uid=4491, symbol_order=5277)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_path_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_path_array & v)
{
  bool D.258652;
  struct hash_entry * D.258651;
  unsigned int D.258650;
  bool ins;
  struct hash_entry * e;
  bool D.258648;
  void * D.216527;
  void * D.216526;

  <bb 2> :
  _1 = &this->m_table;
  D.258650 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::hash (k);
  _2 = D.258650;
  D.258651 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.258651;
  D.258652 = hash_map<tree_node*, function_path_array>::hash_entry::is_empty (e);
  ins = D.258652;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.216526 = &e->m_value;
  D.216527 = operator new (32, D.216526);
  function_path_array::function_path_array (D.216527, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_path_array::operator= (_4, v);

  <bb 5> :
  D.258648 = ~ins;

  <bb 6> :
<L3>:
  return D.258648;

  <bb 7> :
<L4>:
  operator delete (D.216527, D.216526);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8840, decl_uid=192117, cgraph_uid=5472, symbol_order=6262)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.258703;
  bool D.258702;
  bool D.258701;
  bool D.258700;
  bool D.258699;
  bool D.258698;
  struct value_type * D.258697;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.1986;
  bool retval.1985;
  bool retval.1984;
  bool retval.1983;
  bool retval.1982;
  bool retval.1981;
  struct value_type * D.258659;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 40;
  entry = _11 + _13;
  size = this->m_size;
  D.258698 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1981 = D.258698;
  if (retval.1981 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.258699 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1982 = D.258699;
  if (retval.1982 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 40;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.258700 = hash_map<tree_node*, function_path_array>::hash_entry::equal (entry, comparable);
  retval.1983 = D.258700;
  if (retval.1983 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  D.258659 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 40;
  entry = _24 + _26;
  D.258701 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1984 = D.258701;
  if (retval.1984 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.258702 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1985 = D.258702;
  if (retval.1985 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 40;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.258703 = hash_map<tree_node*, function_path_array>::hash_entry::equal (entry, comparable);
  retval.1986 = D.258703;
  if (retval.1986 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 40;
  D.258659 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.258659 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.258659 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 40;
  D.258659 = _37 + _39;

  <bb 27> :
<L37>:
  return D.258659;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9707, decl_uid=192198, cgraph_uid=6351, symbol_order=7141)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.258734;
  unsigned int D.258733;
  bool D.258732;
  bool D.258731;
  struct mem_alloc_description & D.258730;
  struct value_type * D.258729;
  unsigned int D.258728;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.238863;
  void * D.238862;
  struct hash_entry & D.238900;
  bool iftmp.1990;
  bool retval.1989;
  bool iftmp.1988;
  bool retval.1987;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 40;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1988 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1988 = 0;

  <bb 6> :
  retval.1987 = iftmp.1988;
  if (retval.1987 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.258728 = hash_table_higher_prime_index (_5);
  nindex = D.258728;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.258729 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.258729;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.258731 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.258731;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.258732 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.258732;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.1990 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.1990 = 0;

  <bb 15> :
  retval.1989 = iftmp.1990;
  if (retval.1989 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.258733 = hash_map<tree_node*, function_path_array>::hash_entry::hash (x);
  _16 = D.258733;
  D.258734 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.258734;
  D.238900 = std::move<hash_map<tree_node*, function_path_array>::hash_entry&> (x);
  D.238862 = q;
  D.238863 = operator new (40, D.238862);
  hash_map<tree_node*, function_path_array>::hash_entry::hash_entry (D.238863, D.238900);

  <bb 17> :
  p = p + 40;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10295, decl_uid=192093, cgraph_uid=6927, symbol_order=7721)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.258735;

  <bb 2> :
  D.258735 = this->m_size;

  <bb 3> :
<L0>:
  return D.258735;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10296, decl_uid=192095, cgraph_uid=6928, symbol_order=7722)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.258737;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.258737 = _1 - _2;

  <bb 3> :
<L0>:
  return D.258737;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10297, decl_uid=192195, cgraph_uid=6929, symbol_order=7723)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.1991;
  bool D.258739;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1991 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1991 = 0;

  <bb 6> :
  D.258739 = iftmp.1991;

  <bb 7> :
<L4>:
  return D.258739;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9339, decl_uid=192185, cgraph_uid=5971, symbol_order=6761)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.258761;
  struct value_type * D.258760;
  struct mem_alloc_description & D.258759;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.258757;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.258760 = xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_alloc (n);
  nentries = D.258760;
  goto <bb 6>; [INV]

  <bb 5> :
  D.258761 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_path_array>::hash_entry> (n);
  nentries = D.258761;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.258757 = nentries;

  <bb 9> :
<L14>:
  return D.258757;

}



;; Function xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10045, decl_uid=218465, cgraph_uid=6677, symbol_order=7471)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.258764;
  struct hash_entry * D.258762;

  <bb 2> :
  D.258764 = xcalloc (count, 40);
  D.258762 = D.258764;

  <bb 3> :
<L0>:
  return D.258762;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_path_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10046, decl_uid=235290, cgraph_uid=6678, symbol_order=7472)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_path_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.258771;
  struct hash_entry * D.258770;
  struct hash_entry * D.258768;
  bool retval.1992;

  <bb 2> :
  retval.1992 = need_finalization_p<hash_map<tree_node*, function_path_array>::hash_entry> ();
  if (retval.1992 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 40;
  D.258770 = ggc_internal_cleared_alloc (_1, finalize, 40, c);
  D.258768 = D.258770;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 40;
  D.258771 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.258768 = D.258771;

  <bb 5> :
<L2>:
  return D.258768;

}



;; Function finalize<hash_map<tree_node*, function_path_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10563, decl_uid=242033, cgraph_uid=7198, symbol_order=7992)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_path_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_path_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10565, decl_uid=245482, cgraph_uid=7196, symbol_order=7990)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_path_array::~function_path_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_path_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10562, decl_uid=242032, cgraph_uid=7194, symbol_order=7988)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_path_array>::hash_entry> ()
{
  bool D.258772;

  <bb 2> :
  D.258772 = 1;

  <bb 3> :
<L0>:
  return D.258772;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10299, decl_uid=192018, cgraph_uid=6931, symbol_order=7725)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_path_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.258776;
  hashval_t D.258774;

  <bb 2> :
  _1 = &e->m_key;
  D.258776 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::hash (_1);
  D.258774 = D.258776;

  <bb 3> :
<L0>:
  return D.258774;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10298, decl_uid=192188, cgraph_uid=6930, symbol_order=7724)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.258789;
  bool D.258788;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.1994;
  struct value_type * D.258780;
  bool retval.1993;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 40;
  slot = _2 + _4;
  D.258788 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1993 = D.258788;
  if (retval.1993 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.258780 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 40;
  slot = _8 + _10;
  D.258789 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1994 = D.258789;
  if (retval.1994 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.258780 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.258780;

}



;; Function std::move<hash_map<tree_node*, function_path_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10300, decl_uid=238860, cgraph_uid=6932, symbol_order=7726)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_path_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.258790;

  <bb 2> :
  D.258790 = __t;

  <bb 3> :
<L0>:
  return D.258790;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9718, decl_uid=238885, cgraph_uid=6349, symbol_order=7139)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.238887)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.238887->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.238887->m_value;
  function_path_array::function_path_array (_2, _3);
  return;

}



;; Function function_path_array::function_path_array (_ZN19function_path_arrayC2EOS_, funcdef_no=9716, decl_uid=192310, cgraph_uid=6346, symbol_order=7136)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_path_array::function_path_array (struct function_path_array * const this, struct function_path_array & D.192312)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.192312->funtion_type_num;
  this->funtion_type_num = _1;
  _2 = &this->function_path_array;
  _3 = &D.192312->function_path_array;
  std::vector<function_path>::vector (_2, _3);
  return;

}



;; Function std::vector<function_path>::vector (_ZNSt6vectorI13function_pathSaIS0_EEC2EOS2_, funcdef_no=9714, decl_uid=175564, cgraph_uid=6343, symbol_order=7133)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<function_path>::vector (struct vector * const this, struct vector & D.175566)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.175607;
  _2 = &D.175566->D.175607;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_ZNSt12_Vector_baseI13function_pathSaIS0_EEC2EOS2_, funcdef_no=9712, decl_uid=175032, cgraph_uid=6340, symbol_order=7130)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.175034)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.175034->_M_impl;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI13function_pathSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10302, decl_uid=174938, cgraph_uid=6934, symbol_order=7728)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl&> (__x);
  std::allocator<function_path>::allocator (this, _1);
  _2 = &this->D.174952;
  _3 = std::move<std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl&> (__x);
  _4 = &_3->D.174952;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI13function_pathSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10738, decl_uid=243849, cgraph_uid=7370, symbol_order=8164)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.258792;

  <bb 2> :
  D.258792 = __t;

  <bb 3> :
<L0>:
  return D.258792;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI13function_pathSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10740, decl_uid=174894, cgraph_uid=7372, symbol_order=8166)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8975, decl_uid=218467, cgraph_uid=5607, symbol_order=6397)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9720, decl_uid=192206, cgraph_uid=6352, symbol_order=7142)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_path_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10304, decl_uid=192030, cgraph_uid=6936, symbol_order=7730)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::mark_empty<hash_map<tree_node*, function_path_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::mark_empty<hash_map<tree_node*, function_path_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10742, decl_uid=243864, cgraph_uid=7374, symbol_order=8168)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::mark_empty<hash_map<tree_node*, function_path_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function function_path_array::operator= (_ZN19function_path_arrayaSERKS_, funcdef_no=7859, decl_uid=216528, cgraph_uid=4490, symbol_order=5276)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path_array & function_path_array::operator= (struct function_path_array * const this, const struct function_path_array & D.216529)
{
  struct function_path_array & D.258795;

  <bb 2> :
  _1 = D.216529->funtion_type_num;
  this->funtion_type_num = _1;
  _2 = &D.216529->function_path_array;
  _3 = &this->function_path_array;
  std::vector<function_path>::operator= (_3, _2);
  D.258795 = this;

  <bb 3> :
<L0>:
  return D.258795;

}



;; Function symbolicinfo::~symbolicinfo (_ZN12symbolicinfoD2Ev, funcdef_no=6841, decl_uid=203528, cgraph_uid=3472, symbol_order=4250)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void symbolicinfo::~symbolicinfo (struct symbolicinfo * const this)
{
  <bb 2> :
  _1 = &this->symbolicExecutionPathConstraintarrayFalse;
  std::vector<symbolicinfoPatharray>::~vector (_1);
  _2 = &this->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::~vector (_2);
  _3 = &this->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::~vector (_3);
  _4 = &this->switchs;
  std::vector<basic_block_def*>::~vector (_4);
  *this = {CLOBBER};
  return;

}



;; Function PointerConstraint (_Z17PointerConstraintP3ptbS0_, funcdef_no=6843, decl_uid=203569, cgraph_uid=3475, symbol_order=4253)

Removing basic block 23
Removing basic block 33
Removing basic block 50
Removing basic block 51
Removing basic block 52
Removing basic block 53
Removing basic block 54
Removing basic block 55
Removing basic block 56
Removing basic block 57
Merging blocks 80 and 83
Removing basic block 85
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120
;;
;; Loop 1
;;  header 73, multiple latches: 71 72
;;  depth 1, outer 0
;;  nodes: 73 71 72 12 53 62 61 60 59 57 58 56 54 55 52 51 50 49 33 48 18 47 34 42 46 45 35 32 23 31 30 28 29 25 27 26 24 19 22 21 20 44 43 40 41 37 39 38 36 16 17 15 14 13 11 69 68 67 66 65 64 63
;;
;; Loop 3
;;  header 59, latch 58
;;  depth 2, outer 1
;;  nodes: 59 58
;;
;; Loop 2
;;  header 56, latch 55
;;  depth 2, outer 1
;;  nodes: 56 55
;; 2 succs { 120 3 }
;; 3 succs { 120 4 }
;; 4 succs { 120 5 }
;; 5 succs { 120 6 }
;; 6 succs { 120 7 }
;; 7 succs { 9 8 }
;; 8 succs { 9 95 }
;; 9 succs { 10 74 }
;; 10 succs { 73 }
;; 11 succs { 12 13 }
;; 12 succs { 72 }
;; 13 succs { 14 48 }
;; 14 succs { 16 15 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 49 }
;; 19 succs { 20 23 }
;; 20 succs { 119 21 }
;; 21 succs { 22 23 }
;; 22 succs { 23 }
;; 23 succs { 24 32 }
;; 24 succs { 119 25 }
;; 25 succs { 26 29 }
;; 26 succs { 119 27 }
;; 27 succs { 28 29 }
;; 28 succs { 30 }
;; 29 succs { 30 }
;; 30 succs { 31 32 }
;; 31 succs { 32 }
;; 32 succs { 33 49 }
;; 33 succs { 34 49 }
;; 34 succs { 35 49 }
;; 35 succs { 36 49 }
;; 36 succs { 119 37 }
;; 37 succs { 38 41 }
;; 38 succs { 119 39 }
;; 39 succs { 40 41 }
;; 40 succs { 42 }
;; 41 succs { 42 }
;; 42 succs { 43 49 }
;; 43 succs { 119 44 }
;; 44 succs { 119 45 }
;; 45 succs { 46 49 }
;; 46 succs { 47 49 }
;; 47 succs { 119 49 }
;; 48 succs { 119 49 }
;; 49 succs { 119 50 }
;; 50 succs { 119 51 }
;; 51 succs { 119 52 }
;; 52 succs { 53 54 }
;; 53 succs { 72 }
;; 54 succs { 56 }
;; 55 succs { 56 }
;; 56 succs { 55 57 }
;; 57 succs { 59 }
;; 58 succs { 59 }
;; 59 succs { 58 60 }
;; 60 succs { 119 61 }
;; 61 succs { 62 63 }
;; 62 succs { 72 }
;; 63 succs { 119 64 }
;; 64 succs { 119 65 }
;; 65 succs { 119 66 }
;; 66 succs { 119 67 }
;; 67 succs { 119 68 }
;; 68 succs { 119 69 }
;; 69 succs { 70 71 }
;; 70 succs { 74 }
;; 71 succs { 73 }
;; 72 succs { 73 }
;; 73 succs { 11 74 }
;; 74 succs { 120 75 }
;; 75 succs { 120 76 }
;; 76 succs { 120 77 }
;; 77 succs { 120 78 }
;; 78 succs { 120 79 }
;; 79 succs { 120 80 }
;; 80 succs { 120 81 }
;; 81 succs { 120 82 }
;; 82 succs { 120 83 }
;; 83 succs { 120 84 }
;; 84 succs { 120 85 }
;; 85 succs { 120 86 }
;; 86 succs { 120 87 }
;; 87 succs { 120 88 }
;; 88 succs { 120 89 }
;; 89 succs { 120 90 }
;; 90 succs { 120 91 }
;; 91 succs { 120 92 }
;; 92 succs { 120 93 }
;; 93 succs { 120 94 }
;; 94 succs { 96 }
;; 95 succs { 120 96 }
;; 96 succs { 120 97 }
;; 97 succs { 120 98 }
;; 98 succs { 120 99 }
;; 99 succs { 120 100 }
;; 100 succs { 120 101 }
;; 101 succs { 120 102 }
;; 102 succs { 120 103 }
;; 103 succs { 120 104 }
;; 104 succs { 120 105 }
;; 105 succs { 120 106 }
;; 106 succs { 120 107 }
;; 107 succs { 120 108 }
;; 108 succs { 120 109 }
;; 109 succs { 120 110 }
;; 110 succs { 120 111 }
;; 111 succs { 120 112 }
;; 112 succs { 120 113 }
;; 113 succs { 120 114 }
;; 114 succs { 120 115 }
;; 115 succs { 120 116 }
;; 116 succs { 120 117 }
;; 117 succs { 120 118 }
;; 118 succs { 1 }
;; 119 succs { 120 }
;; 120 succs { }
void PointerConstraint (struct ptb * ptable, struct ptb * ftable)
{
  struct gimple_array * D.258884;
  const char * D.258883;
  const char * D.258882;
  union tree_node * D.258881;
  union tree_node * D.258880;
  union tree_node * D.258879;
  union tree_node * D.258878;
  union tree_node * D.258877;
  union tree_node * D.258876;
  int pass;
  struct gimple * def_stmt;
  const char * name;
  struct gimple_array start;
  int colectCount;
  int count;
  struct tm * timeinfo;
  time_t rawtime;
  int allcolectCount;
  struct ptb * processtable;
  int Entrypoint;
  double time_used2;
  double time_used;
  struct timespec temp;
  struct cgraph_node * node;
  struct gimple_array start;
  struct gimple_array * used_stmt;
  struct timespec aend;
  struct timespec astart;
  bool retval.2015;
  bool retval.2014;
  bool retval.2013;
  bool retval.2012;
  bool iftmp.2011;
  bool retval.2010;
  bool retval.2009;
  bool iftmp.2008;
  bool retval.2007;
  bool retval.2006;
  bool retval.2005;
  bool retval.2004;
  bool iftmp.2003;
  bool retval.2002;

  <bb 2> :
  used_stmt = 0B;
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  clock_gettime (1, &astart);
  Entrypoint = 0;
  stderr.1995_1 = stderr;
  __builtin_fwrite ("start PointerConstraint\n", 1, 24, stderr.1995_1);

  <bb 3> :
  pointtablecount.1996_2 = pointtablecount;
  stderr.1997_3 = stderr;
  fprintf (stderr.1997_3, "ptable point %d \n", pointtablecount.1996_2);

  <bb 4> :
  stderr.1998_4 = stderr;
  __builtin_fwrite ("===============The second stage : Mapping stmt=================\n", 1, 64, stderr.1998_4);

  <bb 5> :
  FunctionStmtMappingAssign (ptable, used_stmt);

  <bb 6> :
  processtable = ptable;
  stderr.1999_5 = stderr;
  __builtin_fwrite ("===============The second stage : Program slicing=================\n", 1, 67, stderr.1999_5);

  <bb 7> :
  allcolectCount = 0;
  GIMPLE_FREE_COUNT.2000_6 = GIMPLE_FREE_COUNT;
  if (GIMPLE_FREE_COUNT.2000_6 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  freeanysis.2001_7 = freeanysis;
  if (freeanysis.2001_7 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 95>; [INV]

  <bb 9> :
  _8 = processtable->size;
  if (_8 > 0)
    goto <bb 10>; [INV]
  else
    goto <bb 74>; [INV]

  <bb 10> :
  count = 0;
  goto <bb 73>; [INV]

  <bb 11> :
  _9 = processtable->target;
  _10 = _9->base.code;
  if (_10 == 26)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  processtable = processtable->next;
  // predicted unlikely by continue predictor.
  goto <bb 72>; [INV]

  <bb 13> :
  colectCount = 0;
  used_stmt = 0B;
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  _11 = processtable->target;
  _12 = _11->base.code;
  if (_12 == 153)
    goto <bb 14>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 14> :
  _13 = processtable->target;
  def_stmt = _13->ssa_name.def_stmt;
  levelsize = 0;
  _14 = gimple_code (def_stmt);
  if (_14 != 20)
    goto <bb 16>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  _15 = gimple_code (def_stmt);
  if (_15 != 131)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.2003 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.2003 = 0;

  <bb 18> :
  retval.2002 = iftmp.2003;
  if (retval.2002 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 19> :
  pass = 0;
  _16 = gimple_code (def_stmt);
  retval.2004 = _16 == 8;
  if (retval.2004 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 20> :
  D.258876 = gimple_call_fn (def_stmt);

  <bb 21> :
  _17 = D.258876;
  _18 = _17->base.code;
  retval.2005 = _18 != 165;
  if (retval.2005 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  pass = 1;

  <bb 23> :
  _19 = gimple_code (def_stmt);
  retval.2006 = _19 == 6;
  if (retval.2006 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 24> :
  D.258877 = gimple_assign_rhs1 (def_stmt);

  <bb 25> :
  _20 = D.258877;
  _21 = _20->base.code;
  if (_21 != 165)
    goto <bb 26>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 26> :
  D.258878 = gimple_assign_rhs1 (def_stmt);

  <bb 27> :
  _22 = D.258878;
  _23 = _22->base.code;
  if (_23 != 36)
    goto <bb 28>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 28> :
  iftmp.2008 = 1;
  goto <bb 30>; [INV]

  <bb 29> :
  iftmp.2008 = 0;

  <bb 30> :
  retval.2007 = iftmp.2008;
  if (retval.2007 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  pass = 1;

  <bb 32> :
  _24 = processtable->target;
  _25 = _24->base.code;
  if (_25 != 131)
    goto <bb 33>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 33> :
  if (pass == 1)
    goto <bb 34>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 34> :
  if (def_stmt != 0B)
    goto <bb 35>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 35> :
  _26 = gimple_code (def_stmt);
  retval.2009 = _26 == 8;
  if (retval.2009 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 36> :
  D.258879 = gimple_call_fn (def_stmt);

  <bb 37> :
  _27 = D.258879;
  if (_27 != 0B)
    goto <bb 38>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 38> :
  D.258880 = gimple_call_fndecl (def_stmt);

  <bb 39> :
  _28 = D.258880;
  if (_28 != 0B)
    goto <bb 40>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 40> :
  iftmp.2011 = 1;
  goto <bb 42>; [INV]

  <bb 41> :
  iftmp.2011 = 0;

  <bb 42> :
  retval.2010 = iftmp.2011;
  if (retval.2010 != 0)
    goto <bb 43>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 43> :
  D.258881 = gimple_call_fn (def_stmt);

  <bb 44> :
  _29 = D.258881;
  D.258882 = get_name (_29);

  <bb 45> :
  name = D.258882;
  if (name != 0B)
    goto <bb 46>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 46> :
  _30 = strcmp (name, "malloc");
  if (_30 != 0)
    goto <bb 47>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 47> :
  _31 = processtable->target;
  _32 = processtable->target;
  Prenew_search_imm_use (used_stmt, _32, _31);
  goto <bb 49>; [INV]

  <bb 48> :
  _33 = processtable->target;
  _34 = processtable->target;
  _35 = processtable->last_stmt;
  Varnew_search_imm_use (used_stmt, _35, _34, _33);

  <bb 49> :
  _36 = processtable->target;
  now_tree = _36;
  _37 = processtable->target;
  _38 = processtable->target;
  new_search_imm_use (used_stmt, _38, _37);

  <bb 50> :
  _39 = processtable->target;
  _40 = processtable->target;
  _41 = processtable->last_stmt;
  set_gimple_array (used_stmt, _41, _40, _39, 0B);

  <bb 51> :
  _42 = used_stmt->target;
  _43 = _42->base.code;
  _44 = (tree_code) _43;
  D.258883 = get_tree_code_name (_44);

  <bb 52> :
  _45 = D.258883;
  _46 = strcmp (_45, "<invalid tree code>");
  retval.2012 = _46 == 0;
  if (retval.2012 != 0)
    goto <bb 53>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 53> :
  processtable = processtable->next;
  // predicted unlikely by continue predictor.
  goto <bb 72>; [INV]

  <bb 54> :
  goto <bb 56>; [INV]

  <bb 55> :
  colectCount = colectCount + 1;
  std::vector<gimple*>::pop_back (&new_gimple_array);

  <bb 56> :
  _47 = std::vector<gimple*>::size (&new_gimple_array);
  retval.2013 = _47 != 0;
  if (retval.2013 != 0)
    goto <bb 55>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 57> :
  goto <bb 59>; [INV]

  <bb 58> :
  std::vector<tree_node*>::pop_back (&new_gimpletree_array);

  <bb 59> :
  _48 = std::vector<tree_node*>::size (&new_gimpletree_array);
  retval.2014 = _48 != 0;
  if (retval.2014 != 0)
    goto <bb 58>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 60> :
  treeGimpleArray.2016_49 = treeGimpleArray;
  _50 = &processtable->target;
  D.258884 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.2016_49, _50);

  <bb 61> :
  _51 = D.258884;
  retval.2015 = _51 != 0B;
  if (retval.2015 != 0)
    goto <bb 62>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 62> :
  processtable = processtable->next;
  // predicted unlikely by continue predictor.
  goto <bb 72>; [INV]

  <bb 63> :
  treeGimpleArray.2017_52 = treeGimpleArray;
  _53 = &processtable->target;
  hash_map<tree_node*, gimple_array>::put (treeGimpleArray.2017_52, _53, used_stmt);

  <bb 64> :
  Entrypoint = Entrypoint + 1;
  stderr.2018_54 = stderr;
  __builtin_fwrite ("=============== *this point analyzable =================\n", 1, 57, stderr.2018_54);

  <bb 65> :
  _55 = processtable->last_stmt;
  debug (_55);

  <bb 66> :
  stderr.2019_56 = stderr;
  fprintf (stderr.2019_56, "=============== program slcing stmt count:%d=================\n", colectCount);

  <bb 67> :
  allcolectCount = allcolectCount + colectCount;
  _57 = processtable->last_stmt;
  _58 = gimple_location_safe (_57);
  warning_at (_58, 0, "use location");

  <bb 68> :
  stderr.2020_59 = stderr;
  __builtin_fwrite ("========================================================\n", 1, 57, stderr.2020_59);

  <bb 69> :
  _60 = processtable->next;
  _61 = _60->target;
  if (_61 == 0B)
    goto <bb 70>; [INV]
  else
    goto <bb 71>; [INV]

  <bb 70> :
  start = {CLOBBER};
  goto <bb 74>; [INV]

  <bb 71> :
  processtable = processtable->next;
  start = {CLOBBER};
  goto <bb 73>; [INV]

  <bb 72> :
  start = {CLOBBER};

  <bb 73> :
  _62 = processtable->next;
  if (_62 != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 74>; [INV]

  <bb 74> :
  FunctionStmtMappingRet (ptable, ftable, used_stmt);

  <bb 75> :
  stderr.2021_63 = stderr;
  __builtin_fwrite ("===============The second stage : build fucntion type=================\n", 1, 71, stderr.2021_63);

  <bb 76> :
  stderr.2022_64 = stderr;
  __builtin_fwrite ("\x1b[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.2022_64);

  <bb 77> :
  stderr.2023_65 = stderr;
  __builtin_fwrite ("\x1b[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.2023_65);

  <bb 78> :
  stderr.2024_66 = stderr;
  __builtin_fwrite ("    =()=\n", 1, 9, stderr.2024_66);

  <bb 79> :
  stderr.2025_67 = stderr;
  __builtin_fwrite (" ,/\'_||_\n", 1, 9, stderr.2025_67);

  <bb 80> :
  stderr.2026_68 = stderr;
  __builtin_fwrite ("  (___  `.\n", 1, 11, stderr.2026_68);

  <bb 81> :
  stderr.2027_69 = stderr;
  __builtin_fwrite (" ./  `==\'\n", 1, 10, stderr.2027_69);

  <bb 82> :
  stderr.2028_70 = stderr;
  __builtin_fwrite ("      |||\n", 1, 10, stderr.2028_70);

  <bb 83> :
  stderr.2029_71 = stderr;
  __builtin_fwrite ("      |||\n", 1, 10, stderr.2029_71);

  <bb 84> :
  stderr.2030_72 = stderr;
  __builtin_fwrite ("      |||\n", 1, 10, stderr.2030_72);

  <bb 85> :
  stderr.2031_73 = stderr;
  __builtin_fwrite ("      |||\n", 1, 10, stderr.2031_73);

  <bb 86> :
  stderr.2032_74 = stderr;
  __builtin_fwrite ("\x1b[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.2032_74);

  <bb 87> :
  stderr.2033_75 = stderr;
  __builtin_fwrite ("\x1b[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.2033_75);

  <bb 88> :
  clock_gettime (1, &aend);
  temp = diff (astart, aend);

  <bb 89> :
  _76 = temp.tv_sec;
  _77 = (double) _76;
  _78 = temp.tv_nsec;
  _79 = (double) _78;
  _80 = _79 / 1.0e+9;
  time_used = _77 + _80;
  stderr.2034_81 = stderr;
  __builtin_fwrite ("\n=============== The third stage : Start detection  =================\n", 1, 70, stderr.2034_81);

  <bb 90> :
  dump_fucntion (node, ptable, used_stmt);

  <bb 91> :
  stderr.2035_82 = stderr;
  __builtin_fwrite ("\n=============== The third stage : detection  End=================\n", 1, 67, stderr.2035_82);

  <bb 92> :
  clock_gettime (1, &aend);
  temp = diff (astart, aend);

  <bb 93> :
  _83 = temp.tv_sec;
  _84 = (double) _83;
  _85 = temp.tv_nsec;
  _86 = (double) _85;
  _87 = _86 / 1.0e+9;
  time_used2 = _84 + _87;
  printfBasicblock ();

  <bb 94> :
  goto <bb 96>; [INV]

  <bb 95> :
  stderr.2036_88 = stderr;
  __builtin_fwrite ("\x1b[40;41m GIMPLE STMT NO FREE STMT\x1b[0m\n", 1, 38, stderr.2036_88);

  <bb 96> :
  time (&rawtime);
  timeinfo = localtime (&rawtime);
  stderr.2037_89 = stderr;
  __builtin_fwrite ("\x1b[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.2037_89);

  <bb 97> :
  stderr.2038_90 = stderr;
  __builtin_fwrite ("\x1b[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.2038_90);

  <bb 98> :
  stderr.2039_91 = stderr;
  __builtin_fwrite ("    =()=\n", 1, 9, stderr.2039_91);

  <bb 99> :
  stderr.2040_92 = stderr;
  __builtin_fwrite (" ,/\'_||_\n", 1, 9, stderr.2040_92);

  <bb 100> :
  stderr.2041_93 = stderr;
  __builtin_fwrite ("  (___  `.\n", 1, 11, stderr.2041_93);

  <bb 101> :
  stderr.2042_94 = stderr;
  __builtin_fwrite (" ./  `==\'\n", 1, 10, stderr.2042_94);

  <bb 102> :
  stderr.2043_95 = stderr;
  __builtin_fwrite ("                   \n", 1, 20, stderr.2043_95);

  <bb 103> :
  stderr.2044_96 = stderr;
  __builtin_fwrite ("    ~~~~~~~~~~~  \n", 1, 18, stderr.2044_96);

  <bb 104> :
  stderr.2045_97 = stderr;
  __builtin_fwrite (" ~~~~~~\n", 1, 8, stderr.2045_97);

  <bb 105> :
  stderr.2046_98 = stderr;
  __builtin_fwrite ("           ~~~~~~~\n", 1, 19, stderr.2046_98);

  <bb 106> :
  GIMPLE_MALLOC_COUNT.2047_99 = GIMPLE_MALLOC_COUNT;
  stderr.2048_100 = stderr;
  fprintf (stderr.2048_100, "\x1b[40;34m    gimple malloc count : %d \x1b[0m\n", GIMPLE_MALLOC_COUNT.2047_99);

  <bb 107> :
  GIMPLE_FREE_COUNT.2049_101 = GIMPLE_FREE_COUNT;
  stderr.2050_102 = stderr;
  fprintf (stderr.2050_102, "\x1b[40;34m    gimple free   count : %d \x1b[0m\n", GIMPLE_FREE_COUNT.2049_101);

  <bb 108> :
  pointtablecount.2051_103 = pointtablecount;
  stderr.2052_104 = stderr;
  fprintf (stderr.2052_104, "\x1b[40;34m    all ptable point : %d \x1b[0m\n", pointtablecount.2051_103);

  <bb 109> :
  stderr.2053_105 = stderr;
  fprintf (stderr.2053_105, "\x1b[40;34m    analyzable ptable point : %d \x1b[0m\n", Entrypoint);

  <bb 110> :
  stderr.2054_106 = stderr;
  fprintf (stderr.2054_106, "\x1b[40;34m    analyzable ptable all point stmt : %d \x1b[0m\n", allcolectCount);

  <bb 111> :
  totalsize.2055_107 = totalsize;
  _108 = (double) totalsize.2055_107;
  _109 = _108 * 9.99999999999999954748111825886258685613938723690807819366e-7;
  stderr.2056_110 = stderr;
  fprintf (stderr.2056_110, "\x1b[40;34m    used_stmt array stack totalsize of : %f mb\x1b[0m\n", _109);

  <bb 112> :
  stderr.2057_111 = stderr;
  fprintf (stderr.2057_111, "\x1b[40;34m    collect time: : %f s \x1b[0m\n", time_used);

  <bb 113> :
  stderr.2058_112 = stderr;
  fprintf (stderr.2058_112, "\x1b[40;34m    algorithm time: %f s \x1b[0m\n", time_used2);

  <bb 114> :
  gimplestmt_count.2059_113 = gimplestmt_count;
  stderr.2060_114 = stderr;
  fprintf (stderr.2060_114, "\x1b[40;34m    gimple stmt count : : %d \x1b[0m\n", gimplestmt_count.2059_113);

  <bb 115> :
  _115 = asctime (timeinfo);
  stderr.2061_116 = stderr;
  fprintf (stderr.2061_116, "\x1b[40;34m    this report analysis in %s \x1b[0m\n", _115);

  <bb 116> :
  stderr.2062_117 = stderr;
  __builtin_fwrite ("\x1b[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.2062_117);

  <bb 117> :
  stderr.2063_118 = stderr;
  __builtin_fwrite ("\x1b[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.2063_118);

  <bb 118> :
  astart = {CLOBBER};
  aend = {CLOBBER};
  start = {CLOBBER};
  temp = {CLOBBER};
  rawtime = {CLOBBER};
  return;

  <bb 119> :
<L77>:
  start = {CLOBBER};
  resx 2

  <bb 120> :
<L78>:
  astart = {CLOBBER};
  aend = {CLOBBER};
  start = {CLOBBER};
  temp = {CLOBBER};
  rawtime = {CLOBBER};
  resx 1

}



;; Function std::vector<gimple*>::pop_back (_ZNSt6vectorIP6gimpleSaIS1_EE8pop_backEv, funcdef_no=7860, decl_uid=183673, cgraph_uid=4492, symbol_order=5278)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<gimple*>::pop_back (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.183983._M_impl.D.183339._M_finish;
  _2 = _1 + 18446744073709551608;
  this->D.183983._M_impl.D.183339._M_finish = _2;
  _3 = this->D.183983._M_impl.D.183339._M_finish;
  _4 = &this->D.183983._M_impl;
  std::allocator_traits<std::allocator<gimple*> >::destroy<gimple*> (_4, _3);
  return;

}



;; Function std::allocator_traits<std::allocator<gimple*> >::destroy<gimple*> (_ZNSt16allocator_traitsISaIP6gimpleEE7destroyIS1_EEvRS2_PT_, funcdef_no=8842, decl_uid=216536, cgraph_uid=5474, symbol_order=6264)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<gimple*> >::destroy<gimple*> (struct allocator_type & __a, struct gimple * * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple*>::destroy<gimple*> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple*>::destroy<gimple*> (_ZN9__gnu_cxx13new_allocatorIP6gimpleE7destroyIS2_EEvPT_, funcdef_no=9721, decl_uid=230585, cgraph_uid=6353, symbol_order=7143)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple*>::destroy<gimple*> (struct new_allocator * const this, struct gimple * * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, gimple_array>::put (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7861, decl_uid=190129, cgraph_uid=4493, symbol_order=5279)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
bool hash_map<tree_node*, gimple_array>::put (struct hash_map * const this, union tree_node * const & k, const struct gimple_array & v)
{
  bool D.258897;
  struct hash_entry * D.258896;
  unsigned int D.258895;
  bool ins;
  struct hash_entry * e;
  bool D.258893;
  void * D.216676;
  void * D.216675;

  <bb 2> :
  _1 = &this->m_table;
  D.258895 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::hash (k);
  _2 = D.258895;
  D.258896 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.258896;
  D.258897 = hash_map<tree_node*, gimple_array>::hash_entry::is_empty (e);
  ins = D.258897;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.216675 = &e->m_value;
  D.216676 = operator new (48, D.216675);
  MEM[(struct gimple_array *)D.216676] = *v;
  goto <bb 5>; [INV]

  <bb 4> :
  e->m_value = *v;

  <bb 5> :
  D.258893 = ~ins;

  <bb 6> :
<L3>:
  return D.258893;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8843, decl_uid=190284, cgraph_uid=5475, symbol_order=6265)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.258947;
  bool D.258946;
  bool D.258945;
  bool D.258944;
  bool D.258943;
  bool D.258942;
  struct value_type * D.258941;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.2069;
  bool retval.2068;
  bool retval.2067;
  bool retval.2066;
  bool retval.2065;
  bool retval.2064;
  struct value_type * D.258903;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 56;
  entry = _11 + _13;
  size = this->m_size;
  D.258942 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.2064 = D.258942;
  if (retval.2064 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.258943 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.2065 = D.258943;
  if (retval.2065 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 56;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.258944 = hash_map<tree_node*, gimple_array>::hash_entry::equal (entry, comparable);
  retval.2066 = D.258944;
  if (retval.2066 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 56;
  D.258903 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 56;
  entry = _24 + _26;
  D.258945 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.2067 = D.258945;
  if (retval.2067 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.258946 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.2068 = D.258946;
  if (retval.2068 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 56;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.258947 = hash_map<tree_node*, gimple_array>::hash_entry::equal (entry, comparable);
  retval.2069 = D.258947;
  if (retval.2069 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 56;
  D.258903 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.258903 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.258903 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 56;
  D.258903 = _37 + _39;

  <bb 27> :
<L37>:
  return D.258903;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9722, decl_uid=190365, cgraph_uid=6354, symbol_order=7144)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.258978;
  unsigned int D.258977;
  bool D.258976;
  bool D.258975;
  struct mem_alloc_description & D.258974;
  struct value_type * D.258973;
  unsigned int D.258972;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.238928;
  void * D.238927;
  struct hash_entry * D.238953;
  bool iftmp.2073;
  bool retval.2072;
  bool iftmp.2071;
  bool retval.2070;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 56;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2071 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2071 = 0;

  <bb 6> :
  retval.2070 = iftmp.2071;
  if (retval.2070 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.258972 = hash_table_higher_prime_index (_5);
  nindex = D.258972;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.258973 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.258973;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.258975 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.258975;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.258976 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.258976;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.2073 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.2073 = 0;

  <bb 15> :
  retval.2072 = iftmp.2073;
  if (retval.2072 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.258977 = hash_map<tree_node*, gimple_array>::hash_entry::hash (x);
  _16 = D.258977;
  D.258978 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.258978;
  D.238953 = std::move<hash_map<tree_node*, gimple_array>::hash_entry&> (x);
  D.238927 = q;
  D.238928 = operator new (56, D.238927);
  MEM[(struct value_type *)D.238928] = *D.238953;

  <bb 17> :
  p = p + 56;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10305, decl_uid=190260, cgraph_uid=6937, symbol_order=7731)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.258979;

  <bb 2> :
  D.258979 = this->m_size;

  <bb 3> :
<L0>:
  return D.258979;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10306, decl_uid=190262, cgraph_uid=6938, symbol_order=7732)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.258981;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.258981 = _1 - _2;

  <bb 3> :
<L0>:
  return D.258981;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10307, decl_uid=190362, cgraph_uid=6939, symbol_order=7733)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.2074;
  bool D.258983;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2074 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2074 = 0;

  <bb 6> :
  D.258983 = iftmp.2074;

  <bb 7> :
<L4>:
  return D.258983;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9255, decl_uid=190352, cgraph_uid=5887, symbol_order=6677)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.259005;
  struct value_type * D.259004;
  struct mem_alloc_description & D.259003;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.259001;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.259004 = xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_alloc (n);
  nentries = D.259004;
  goto <bb 6>; [INV]

  <bb 5> :
  D.259005 = ggc_cleared_vec_alloc<hash_map<tree_node*, gimple_array>::hash_entry> (n);
  nentries = D.259005;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.259001 = nentries;

  <bb 9> :
<L14>:
  return D.259001;

}



;; Function xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=9985, decl_uid=218273, cgraph_uid=6617, symbol_order=7411)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.259008;
  struct hash_entry * D.259006;

  <bb 2> :
  D.259008 = xcalloc (count, 56);
  D.259006 = D.259008;

  <bb 3> :
<L0>:
  return D.259006;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, gimple_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=9986, decl_uid=234307, cgraph_uid=6618, symbol_order=7412)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, gimple_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.259015;
  struct hash_entry * D.259014;
  struct hash_entry * D.259012;
  bool retval.2075;

  <bb 2> :
  retval.2075 = need_finalization_p<hash_map<tree_node*, gimple_array>::hash_entry> ();
  if (retval.2075 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 56;
  D.259014 = ggc_internal_cleared_alloc (_1, finalize, 56, c);
  D.259012 = D.259014;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 56;
  D.259015 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.259012 = D.259015;

  <bb 5> :
<L2>:
  return D.259012;

}



;; Function finalize<hash_map<tree_node*, gimple_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10524, decl_uid=241760, cgraph_uid=7156, symbol_order=7950)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, gimple_array>::hash_entry> (void * p)
{
  <bb 2> :
  MEM[(struct hash_entry *)p] = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, gimple_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10523, decl_uid=241759, cgraph_uid=7155, symbol_order=7949)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, gimple_array>::hash_entry> ()
{
  bool D.259016;

  <bb 2> :
  D.259016 = 0;

  <bb 3> :
<L0>:
  return D.259016;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10309, decl_uid=190188, cgraph_uid=6941, symbol_order=7735)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, gimple_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.259020;
  hashval_t D.259018;

  <bb 2> :
  _1 = &e->m_key;
  D.259020 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::hash (_1);
  D.259018 = D.259020;

  <bb 3> :
<L0>:
  return D.259018;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10308, decl_uid=190355, cgraph_uid=6940, symbol_order=7734)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.259033;
  bool D.259032;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.2077;
  struct value_type * D.259024;
  bool retval.2076;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 56;
  slot = _2 + _4;
  D.259032 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.2076 = D.259032;
  if (retval.2076 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.259024 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 56;
  slot = _8 + _10;
  D.259033 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.2077 = D.259033;
  if (retval.2077 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.259024 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.259024;

}



;; Function std::move<hash_map<tree_node*, gimple_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10310, decl_uid=238925, cgraph_uid=6942, symbol_order=7736)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, gimple_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.259034;

  <bb 2> :
  D.259034 = __t;

  <bb 3> :
<L0>:
  return D.259034;

}



;; Function xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8943, decl_uid=218275, cgraph_uid=5575, symbol_order=6365)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9723, decl_uid=190373, cgraph_uid=6355, symbol_order=7145)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, gimple_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10311, decl_uid=190200, cgraph_uid=6943, symbol_order=7737)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, gimple_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::mark_empty<hash_map<tree_node*, gimple_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::mark_empty<hash_map<tree_node*, gimple_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10743, decl_uid=243887, cgraph_uid=7375, symbol_order=8169)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::mark_empty<hash_map<tree_node*, gimple_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function detect (_Z6detectv, funcdef_no=6844, decl_uid=203611, cgraph_uid=3551, symbol_order=4329)

Removing basic block 48
Merging blocks 49 and 51
Removing basic block 84
Removing basic block 87
Removing basic block 90
Removing basic block 105
Removing basic block 143
Merging blocks 147 and 149
Removing basic block 152
;; 6 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 2
;;  header 95, latch 94
;;  depth 1, outer 0
;;  nodes: 95 94 93 91 92 59 65 64 63 62 61 60 58 57 56 55 90 89 68 88 87 79 86 84 85 82 83 80 81 78 69 77 76 75 71 74 73 72 70 67 66
;;
;; Loop 3
;;  header 89, latch 88
;;  depth 2, outer 2
;;  nodes: 89 88 87 79 86 84 85 82 83 80 81 78 69 77 76 75 71 74 73 72 70
;;
;; Loop 5
;;  header 87, latch 86
;;  depth 3, outer 3
;;  nodes: 87 86 84 85 82 83 80 81
;;
;; Loop 4
;;  header 75, latch 74
;;  depth 3, outer 3
;;  nodes: 75 74 73 72 76
;;
;; Loop 1
;;  header 39, latch 38
;;  depth 1, outer 0
;;  nodes: 39 38 37 36 42 41 40
;; 2 succs { 169 3 }
;; 3 succs { 147 4 }
;; 4 succs { 169 5 }
;; 5 succs { 148 6 }
;; 6 succs { 169 7 }
;; 7 succs { 149 8 }
;; 8 succs { 169 9 }
;; 9 succs { 150 10 }
;; 10 succs { 169 11 }
;; 11 succs { 151 12 }
;; 12 succs { 169 13 }
;; 13 succs { 152 14 }
;; 14 succs { 169 15 }
;; 15 succs { 153 16 }
;; 16 succs { 169 17 }
;; 17 succs { 154 18 }
;; 18 succs { 169 19 }
;; 19 succs { 155 20 }
;; 20 succs { 169 21 }
;; 21 succs { 156 22 }
;; 22 succs { 169 23 }
;; 23 succs { 157 24 }
;; 24 succs { 169 25 }
;; 25 succs { 158 26 }
;; 26 succs { 169 27 }
;; 27 succs { 159 28 }
;; 28 succs { 29 50 }
;; 29 succs { 163 30 }
;; 30 succs { 162 31 }
;; 31 succs { 162 32 }
;; 32 succs { 33 35 }
;; 33 succs { 162 34 }
;; 34 succs { 46 }
;; 35 succs { 39 }
;; 36 succs { 160 37 }
;; 37 succs { 160 38 }
;; 38 succs { 160 39 }
;; 39 succs { 160 40 }
;; 40 succs { 160 41 }
;; 41 succs { 160 42 }
;; 42 succs { 36 43 }
;; 43 succs { 160 44 }
;; 44 succs { 162 45 }
;; 45 succs { 46 }
;; 46 succs { 49 47 }
;; 47 succs { 48 }
;; 48 succs { 50 }
;; 49 succs { 139 }
;; 50 succs { 169 51 }
;; 51 succs { 169 52 }
;; 52 succs { 169 53 }
;; 53 succs { 169 54 }
;; 54 succs { 95 }
;; 55 succs { 167 56 }
;; 56 succs { 167 57 }
;; 57 succs { 167 58 }
;; 58 succs { 59 60 }
;; 59 succs { 92 }
;; 60 succs { 167 61 }
;; 61 succs { 167 62 }
;; 62 succs { 63 66 }
;; 63 succs { 167 64 }
;; 64 succs { 167 65 }
;; 65 succs { 92 }
;; 66 succs { 167 67 }
;; 67 succs { 166 68 }
;; 68 succs { 89 }
;; 69 succs { 70 78 }
;; 70 succs { 164 71 }
;; 71 succs { 75 }
;; 72 succs { 164 73 }
;; 73 succs { 164 74 }
;; 74 succs { 164 75 }
;; 75 succs { 164 76 }
;; 76 succs { 72 77 }
;; 77 succs { 78 }
;; 78 succs { 166 79 }
;; 79 succs { 87 }
;; 80 succs { 81 82 }
;; 81 succs { 165 82 }
;; 82 succs { 83 84 }
;; 83 succs { 165 84 }
;; 84 succs { 85 86 }
;; 85 succs { 165 86 }
;; 86 succs { 87 }
;; 87 succs { 80 88 }
;; 88 succs { 89 }
;; 89 succs { 69 90 }
;; 90 succs { 166 91 }
;; 91 succs { 93 }
;; 92 succs { 93 }
;; 93 succs { 169 94 }
;; 94 succs { 95 }
;; 95 succs { 55 96 }
;; 96 succs { 169 97 }
;; 97 succs { 169 98 }
;; 98 succs { 99 100 }
;; 99 succs { 169 100 }
;; 100 succs { 101 102 }
;; 101 succs { 102 }
;; 102 succs { 103 104 }
;; 103 succs { 104 }
;; 104 succs { 105 106 }
;; 105 succs { 106 }
;; 106 succs { 107 108 }
;; 107 succs { 108 }
;; 108 succs { 109 110 }
;; 109 succs { 110 }
;; 110 succs { 111 112 }
;; 111 succs { 112 }
;; 112 succs { 113 114 }
;; 113 succs { 114 }
;; 114 succs { 115 116 }
;; 115 succs { 116 }
;; 116 succs { 117 118 }
;; 117 succs { 118 }
;; 118 succs { 119 120 }
;; 119 succs { 120 }
;; 120 succs { 121 122 }
;; 121 succs { 122 }
;; 122 succs { 123 124 }
;; 123 succs { 124 }
;; 124 succs { 125 126 }
;; 125 succs { 126 }
;; 126 succs { 169 127 }
;; 127 succs { 169 128 }
;; 128 succs { 168 129 }
;; 129 succs { 130 137 }
;; 130 succs { 168 131 }
;; 131 succs { 168 132 }
;; 132 succs { 168 133 }
;; 133 succs { 168 134 }
;; 134 succs { 168 135 }
;; 135 succs { 168 136 }
;; 136 succs { 168 138 }
;; 137 succs { 168 138 }
;; 138 succs { 139 }
;; 139 succs { 141 140 }
;; 140 succs { 142 }
;; 141 succs { 142 }
;; 142 succs { 145 143 }
;; 143 succs { 144 }
;; 144 succs { 146 }
;; 145 succs { 146 }
;; 146 succs { 1 }
;; 147 succs { 169 }
;; 148 succs { 169 }
;; 149 succs { 169 }
;; 150 succs { 169 }
;; 151 succs { 169 }
;; 152 succs { 169 }
;; 153 succs { 169 }
;; 154 succs { 169 }
;; 155 succs { 169 }
;; 156 succs { 169 }
;; 157 succs { 169 }
;; 158 succs { 169 }
;; 159 succs { 169 }
;; 160 succs { 161 }
;; 161 succs { 162 }
;; 162 succs { 163 }
;; 163 succs { 169 }
;; 164 succs { 166 }
;; 165 succs { 166 }
;; 166 succs { 167 }
;; 167 succs { 169 }
;; 168 succs { 169 }
;; 169 succs { 170 }
;; 170 succs { 171 }
;; 171 succs { }
void detect ()
{
  int finally_tmp.2134;
  int finally_tmp.2133;
  struct __ostream_type & D.259184;
  struct basic_ostream & D.259183;
  struct __ostream_type & D.259182;
  struct basic_ostream & D.259181;
  bool D.259180;
  struct cgraph_node * D.259179;
  bool D.259172;
  struct function * D.259171;
  bool D.259170;
  const char * D.259169;
  struct cgraph_node * D.259168;
  int finally_tmp.2132;
  bool D.259156;
  struct __istream_type & D.259155;
  struct basic_istream & D.259154;
  bool D.259153;
  void * D.259151;
  void * D.259149;
  void * D.259147;
  void * D.259145;
  void * D.259143;
  void * D.259141;
  void * D.259139;
  void * D.259137;
  void * D.259135;
  void * D.259133;
  void * D.259131;
  void * D.259129;
  void * D.259127;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct edge_iterator ei;
  struct edge_def * e;
  struct Graph DFS;
  int score;
  struct string name;
  struct ifstream ifs;
  struct ofstream myfile;
  struct timevar_time_def now;
  double time_used;
  struct timespec temp;
  struct timespec end;
  struct timespec start;
  double s;
  struct cgraph_edge * e;
  struct basic_block_def * bb;
  struct function * fn;
  struct function * ofun;
  union tree_node * attr;
  union tree_node * ptr;
  struct breakpoint getbp;
  unsigned int i;
  const int N;
  struct var_points_to vpt;
  struct cgraph_node * node;
  struct timeval stime;
  struct timeval utime;
  struct rusage ru;
  bool retval.2131;
  struct hash_map * function_relate_collect.2130;
  struct hash_map * function_graph_collect.2129;
  struct hash_map * function_free_collect.2128;
  struct hash_map * function_path_collect.2127;
  struct hash_map * function_pthread_exit_collect.2126;
  struct hash_map * function_pthread_detched_collect.2125;
  struct hash_map * pthread_attr_setdetachstates.2124;
  struct hash_map * function_assign_collect.2123;
  struct hash_map * function_return_collect.2122;
  struct hash_map * fDFS.2121;
  struct hash_map * syminfo.2120;
  struct hash_map * treeGimpleArray.2119;
  struct hash_map * tvpt.2118;
  bool retval.2108;
  bool retval.2106;
  bool retval.2104;
  bool retval.2102;
  bool retval.2100;
  bool retval.2089;
  struct __istream_type & D.259043;
  bool retval.2083;
  bool retval.2080;
  void * D.205233;
  void * D.205232;
  void * D.204861;
  void * D.204860;
  void * D.204859;
  void * D.204858;
  void * D.204857;
  void * D.204856;
  void * D.204855;
  void * D.204854;
  void * D.204433;
  void * D.204432;
  void * D.204431;

  <bb 2> :
  var_points_to::var_points_to (&vpt);
  N = 100;
  breakpoint::breakpoint (&getbp);
  ipa = 1;
  D.259127 = operator new (48);

  <bb 3> :
  D.204431 = D.259127;
  hash_map<tree_node*, var_points_to>::hash_map (D.204431, 13, 0, 1, 0);

  <bb 4> :
  tvpt = D.204431;
  D.259129 = operator new (48);

  <bb 5> :
  D.204432 = D.259129;
  hash_map<tree_node*, gimple_array>::hash_map (D.204432, 13, 0, 1, 0);

  <bb 6> :
  treeGimpleArray = D.204432;
  D.259131 = operator new (48);

  <bb 7> :
  D.204433 = D.259131;
  hash_map<basic_block_def*, symbolicinfo>::hash_map (D.204433, 13, 0, 1, 0);

  <bb 8> :
  syminfo = D.204433;
  D.259133 = operator new (48);

  <bb 9> :
  D.204854 = D.259133;
  hash_map<cgraph_node*, Graph>::hash_map (D.204854, 13, 0, 1, 0);

  <bb 10> :
  fDFS = D.204854;
  D.259135 = operator new (48);

  <bb 11> :
  D.204855 = D.259135;
  hash_map<tree_node*, function_return_array>::hash_map (D.204855, 13, 0, 1, 0);

  <bb 12> :
  function_return_collect = D.204855;
  D.259137 = operator new (48);

  <bb 13> :
  D.204856 = D.259137;
  hash_map<tree_node*, function_assign_array>::hash_map (D.204856, 13, 0, 1, 0);

  <bb 14> :
  function_assign_collect = D.204856;
  D.259139 = operator new (48);

  <bb 15> :
  D.204857 = D.259139;
  hash_map<tree_node*, pthread_attr_array>::hash_map (D.204857, 13, 0, 1, 0);

  <bb 16> :
  pthread_attr_setdetachstates = D.204857;
  D.259141 = operator new (48);

  <bb 17> :
  D.204858 = D.259141;
  hash_map<tree_node*, function_pthread_detched_array>::hash_map (D.204858, 13, 0, 1, 0);

  <bb 18> :
  function_pthread_detched_collect = D.204858;
  D.259143 = operator new (48);

  <bb 19> :
  D.204859 = D.259143;
  hash_map<tree_node*, function_pthread_exit_array>::hash_map (D.204859, 13, 0, 1, 0);

  <bb 20> :
  function_pthread_exit_collect = D.204859;
  D.259145 = operator new (48);

  <bb 21> :
  D.204860 = D.259145;
  hash_map<tree_node*, function_path_array>::hash_map (D.204860, 13, 0, 1, 0);

  <bb 22> :
  function_path_collect = D.204860;
  D.259147 = operator new (48);

  <bb 23> :
  D.204861 = D.259147;
  hash_map<tree_node*, function_free_array>::hash_map (D.204861, 13, 0, 1, 0);

  <bb 24> :
  function_free_collect = D.204861;
  D.259149 = operator new (48);

  <bb 25> :
  D.205232 = D.259149;
  hash_map<tree_node*, function_graph_array>::hash_map (D.205232, 13, 0, 1, 0);

  <bb 26> :
  function_graph_collect = D.205232;
  D.259151 = operator new (48);

  <bb 27> :
  D.205233 = D.259151;
  hash_map<tree_node*, function_relate_array>::hash_map (D.205233, 13, 0, 1, 0);

  <bb 28> :
  function_relate_collect = D.205233;
  vscode_extensionmod.2078_1 = vscode_extensionmod;
  if (vscode_extensionmod.2078_1 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 29> :
  std::basic_ifstream<char>::basic_ifstream (&ifs, "/root/.vscode-server/data/User/globalStorage/vscode-samples.helloworld-sample/breakpoint.txt", 8);

  <bb 30> :
  stderr.2079_2 = stderr;
  __builtin_fwrite ("==============breakpoint=========\n", 1, 34, stderr.2079_2);

  <bb 31> :
  D.259153 = std::basic_ifstream<char>::is_open (&ifs);

  <bb 32> :
  _3 = D.259153;
  retval.2080 = ~_3;
  if (retval.2080 != 0)
    goto <bb 33>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 33> :
  std::operator<< <std::char_traits<char> > (&cout, "Failed to open file.\n");

  <bb 34> :
  // predicted unlikely by early return (on trees) predictor.
  finally_tmp.2132 = 0;
  goto <bb 46>; [INV]

  <bb 35> :
  std::__cxx11::basic_string<char>::basic_string (&name);
  goto <bb 39>; [INV]

  <bb 36> :
  std::__cxx11::basic_string<char>::operator= (&getbp.name, &name);

  <bb 37> :
  score.2081_4 = score;
  getbp.line = score.2081_4;
  _5 = getbp.line;
  _6 = std::__cxx11::basic_string<char>::c_str (&getbp.name);
  stderr.2082_7 = stderr;
  fprintf (stderr.2082_7, "%s %d\n", _6, _5);

  <bb 38> :
  std::vector<breakpoint>::push_back (&vbreakpoint, &getbp);

  <bb 39> :
  D.259154 = std::operator>><char, std::char_traits<char>, std::allocator<char> > (&ifs.D.155214, &name);

  <bb 40> :
  _8 = D.259154;
  D.259155 = std::basic_istream<char>::operator>> (_8, &score);

  <bb 41> :
  D.259043 = D.259155;
  _9 = D.259043->_vptr.basic_istream;
  _10 = _9 + 18446744073709551592;
  _11 = MEM[(long int *)_10];
  _12 = (sizetype) _11;
  _13 = D.259043 + _12;
  D.259156 = std::basic_ios<char>::operator bool (_13);

  <bb 42> :
  retval.2083 = D.259156;
  if (retval.2083 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 43> :
  std::basic_ifstream<char>::close (&ifs);

  <bb 44> :
  std::__cxx11::basic_string<char>::~basic_string (&name);
  name = {CLOBBER};
  score = {CLOBBER};
  std::basic_ifstream<char>::close (&ifs);

  <bb 45> :
  finally_tmp.2132 = 1;

  <bb 46> :
  std::basic_ifstream<char>::~basic_ifstream (&ifs);
  if (finally_tmp.2132 == 1)
    goto <bb 47>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 47> :
<L7>:

  <bb 48> :
  ifs = {CLOBBER};
  goto <bb 50>; [INV]

  <bb 49> :
  ifs = {CLOBBER};
  finally_tmp.2133 = 0;
  goto <bb 139>; [INV]

  <bb 50> :
  _14 = time (0B);
  _15 = (unsigned int) _14;
  _16 = getpid ();
  _17 = (unsigned int) _16;
  _18 = _15 + _17;
  srand (_18);
  stderr.2084_19 = stderr;
  __builtin_fwrite ("=======ipa_pta=========\n", 1, 24, stderr.2084_19);

  <bb 51> :
  init_table ();

  <bb 52> :
  s = 0.0;
  clock_gettime (1, &start);
  getrusage (0, &ru);
  utime = ru.ru_utime;
  stime = ru.ru_stime;
  stderr.2085_20 = stderr;
  __builtin_fwrite ("=============== The first stage : Point of interest stmt collect =================\n", 1, 83, stderr.2085_20);

  <bb 53> :
  symtab.2086_21 = symtab;
  D.259168 = symbol_table::first_defined_function (symtab.2086_21);

  <bb 54> :
  _22 = D.259168;
  node = _22;
  goto <bb 95>; [INV]

  <bb 55> :
  node.2087_23 = node;
  _24 = node.2087_23->D.97512.decl;
  D.259169 = get_name (_24);

  <bb 56> :
  _25 = D.259169;
  stderr.2088_26 = stderr;
  fprintf (stderr.2088_26, "=======node_fun:%s=========\n", _25);

  <bb 57> :
  node.2090_27 = node;
  _28 = node.2090_27->D.97512.decl;
  D.259170 = gimple_has_body_p (_28);

  <bb 58> :
  _29 = D.259170;
  retval.2089 = ~_29;
  if (retval.2089 != 0)
    goto <bb 59>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 59> :
  // predicted unlikely by continue predictor.
  goto <bb 92>; [INV]

  <bb 60> :
  node.2091_30 = node;
  D.259171 = cgraph_node::get_fun (node.2091_30);

  <bb 61> :
  _31 = D.259171;
  push_cfun (_31);

  <bb 62> :
  cfun.2092_32 = cfun;
  if (cfun.2092_32 == 0B)
    goto <bb 63>; [INV]
  else
    goto <bb 66>; [INV]

  <bb 63> :
  pop_cfun ();

  <bb 64> :
  free_dominance_info (1);

  <bb 65> :
  // predicted unlikely by continue predictor.
  goto <bb 92>; [INV]

  <bb 66> :
  calculate_dominance_info (1);

  <bb 67> :
  Graph::Graph (&DFS);
  cfun.2093_33 = cfun;
  _34 = cfun.2093_33->cfg;
  _35 = _34->x_last_basic_block;
  Graph::init_Graph (&DFS, _35);

  <bb 68> :
  cfun.2094_36 = cfun;
  _37 = cfun.2094_36->cfg;
  _38 = _37->x_entry_block_ptr;
  bb = _38->next_bb;
  goto <bb 89>; [INV]

  <bb 69> :
  cfun.2095_39 = cfun;
  _40 = cfun.2095_39->cfg;
  _41 = _40->x_exit_block_ptr;
  _42 = _41->prev_bb;
  if (bb != _42)
    goto <bb 70>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 70> :
  _43 = bb->index;
  stderr.2096_44 = stderr;
  fprintf (stderr.2096_44, "node:= %d \n ", _43);

  <bb 71> :
  _45 = &bb->succs;
  ei = ei_start_1 (_45);
  goto <bb 75>; [INV]

  <bb 72> :
  e.2097_46 = e;
  _47 = e.2097_46->dest;
  _48 = _47->index;
  _49 = bb->index;
  Graph::addEdge (&DFS, _49, _48);

  <bb 73> :
  e.2098_50 = e;
  _51 = e.2098_50->dest;
  _52 = _51->index;
  stderr.2099_53 = stderr;
  fprintf (stderr.2099_53, "\tnext_branch :=%d\n", _52);

  <bb 74> :
  ei_next (&ei);

  <bb 75> :
  D.259172 = ei_cond (ei, &e);

  <bb 76> :
  retval.2100 = D.259172;
  if (retval.2100 != 0)
    goto <bb 72>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 77> :
  e = {CLOBBER};
  ei = {CLOBBER};

  <bb 78> :
  fDFS.2101_54 = fDFS;
  hash_map<cgraph_node*, Graph>::put (fDFS.2101_54, &node, &DFS);

  <bb 79> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 87>; [INV]

  <bb 80> :
  gc = gsi_stmt (gsi);
  retval.2102 = is_gimple_call (gc);
  if (retval.2102 != 0)
    goto <bb 81>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 81> :
  node.2103_55 = node;
  collect_function_call (gc, node.2103_55, bb);

  <bb 82> :
  retval.2104 = is_gimple_assign (gc);
  if (retval.2104 != 0)
    goto <bb 83>; [INV]
  else
    goto <bb 84>; [INV]

  <bb 83> :
  node.2105_56 = node;
  collect_function_call (gc, node.2105_56, bb);

  <bb 84> :
  _57 = gimple_code (gc);
  retval.2106 = _57 == 10;
  if (retval.2106 != 0)
    goto <bb 85>; [INV]
  else
    goto <bb 86>; [INV]

  <bb 85> :
  node.2107_58 = node;
  collect_function_return (gc, node.2107_58, bb);

  <bb 86> :
  gsi_next (&gsi);

  <bb 87> :
  _59 = gsi_end_p (gsi);
  retval.2108 = ~_59;
  if (retval.2108 != 0)
    goto <bb 80>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 88> :
  gsi = {CLOBBER};
  bb = bb->next_bb;

  <bb 89> :
  cfun.2109_60 = cfun;
  _61 = cfun.2109_60->cfg;
  _62 = _61->x_exit_block_ptr;
  if (bb != _62)
    goto <bb 69>; [INV]
  else
    goto <bb 90>; [INV]

  <bb 90> :
  pop_cfun ();

  <bb 91> :
  Graph::~Graph (&DFS);
  DFS = {CLOBBER};
  goto <bb 93>; [INV]

  <bb 92> :
  DFS = {CLOBBER};

  <bb 93> :
  symtab.2110_63 = symtab;
  node.2111_64 = node;
  D.259179 = symbol_table::next_defined_function (symtab.2110_63, node.2111_64);

  <bb 94> :
  _65 = D.259179;
  node = _65;

  <bb 95> :
  node.2112_66 = node;
  if (node.2112_66 != 0B)
    goto <bb 55>; [INV]
  else
    goto <bb 96>; [INV]

  <bb 96> :
  stderr.2113_67 = stderr;
  __builtin_fwrite ("=============== The first stage :  record fucntion =================\n", 1, 69, stderr.2113_67);

  <bb 97> :
  node.2114_68 = node;
  record_fucntion (node.2114_68);

  <bb 98> :
  ipa.2115_69 = ipa;
  if (ipa.2115_69 != 0)
    goto <bb 99>; [INV]
  else
    goto <bb 100>; [INV]

  <bb 99> :
  ftable.2116_70 = ftable;
  ptable.2117_71 = ptable;
  PointerConstraint (ptable.2117_71, ftable.2116_70);

  <bb 100> :
  tvpt.2118 = tvpt;
  if (tvpt.2118 != 0B)
    goto <bb 101>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 101> :
  hash_map<tree_node*, var_points_to>::~hash_map (tvpt.2118);
  operator delete (tvpt.2118, 48);

  <bb 102> :
  treeGimpleArray.2119 = treeGimpleArray;
  if (treeGimpleArray.2119 != 0B)
    goto <bb 103>; [INV]
  else
    goto <bb 104>; [INV]

  <bb 103> :
  hash_map<tree_node*, gimple_array>::~hash_map (treeGimpleArray.2119);
  operator delete (treeGimpleArray.2119, 48);

  <bb 104> :
  syminfo.2120 = syminfo;
  if (syminfo.2120 != 0B)
    goto <bb 105>; [INV]
  else
    goto <bb 106>; [INV]

  <bb 105> :
  hash_map<basic_block_def*, symbolicinfo>::~hash_map (syminfo.2120);
  operator delete (syminfo.2120, 48);

  <bb 106> :
  fDFS.2121 = fDFS;
  if (fDFS.2121 != 0B)
    goto <bb 107>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 107> :
  hash_map<cgraph_node*, Graph>::~hash_map (fDFS.2121);
  operator delete (fDFS.2121, 48);

  <bb 108> :
  function_return_collect.2122 = function_return_collect;
  if (function_return_collect.2122 != 0B)
    goto <bb 109>; [INV]
  else
    goto <bb 110>; [INV]

  <bb 109> :
  hash_map<tree_node*, function_return_array>::~hash_map (function_return_collect.2122);
  operator delete (function_return_collect.2122, 48);

  <bb 110> :
  function_assign_collect.2123 = function_assign_collect;
  if (function_assign_collect.2123 != 0B)
    goto <bb 111>; [INV]
  else
    goto <bb 112>; [INV]

  <bb 111> :
  hash_map<tree_node*, function_assign_array>::~hash_map (function_assign_collect.2123);
  operator delete (function_assign_collect.2123, 48);

  <bb 112> :
  pthread_attr_setdetachstates.2124 = pthread_attr_setdetachstates;
  if (pthread_attr_setdetachstates.2124 != 0B)
    goto <bb 113>; [INV]
  else
    goto <bb 114>; [INV]

  <bb 113> :
  hash_map<tree_node*, pthread_attr_array>::~hash_map (pthread_attr_setdetachstates.2124);
  operator delete (pthread_attr_setdetachstates.2124, 48);

  <bb 114> :
  function_pthread_detched_collect.2125 = function_pthread_detched_collect;
  if (function_pthread_detched_collect.2125 != 0B)
    goto <bb 115>; [INV]
  else
    goto <bb 116>; [INV]

  <bb 115> :
  hash_map<tree_node*, function_pthread_detched_array>::~hash_map (function_pthread_detched_collect.2125);
  operator delete (function_pthread_detched_collect.2125, 48);

  <bb 116> :
  function_pthread_exit_collect.2126 = function_pthread_exit_collect;
  if (function_pthread_exit_collect.2126 != 0B)
    goto <bb 117>; [INV]
  else
    goto <bb 118>; [INV]

  <bb 117> :
  hash_map<tree_node*, function_pthread_exit_array>::~hash_map (function_pthread_exit_collect.2126);
  operator delete (function_pthread_exit_collect.2126, 48);

  <bb 118> :
  function_path_collect.2127 = function_path_collect;
  if (function_path_collect.2127 != 0B)
    goto <bb 119>; [INV]
  else
    goto <bb 120>; [INV]

  <bb 119> :
  hash_map<tree_node*, function_path_array>::~hash_map (function_path_collect.2127);
  operator delete (function_path_collect.2127, 48);

  <bb 120> :
  function_free_collect.2128 = function_free_collect;
  if (function_free_collect.2128 != 0B)
    goto <bb 121>; [INV]
  else
    goto <bb 122>; [INV]

  <bb 121> :
  hash_map<tree_node*, function_free_array>::~hash_map (function_free_collect.2128);
  operator delete (function_free_collect.2128, 48);

  <bb 122> :
  function_graph_collect.2129 = function_graph_collect;
  if (function_graph_collect.2129 != 0B)
    goto <bb 123>; [INV]
  else
    goto <bb 124>; [INV]

  <bb 123> :
  hash_map<tree_node*, function_graph_array>::~hash_map (function_graph_collect.2129);
  operator delete (function_graph_collect.2129, 48);

  <bb 124> :
  function_relate_collect.2130 = function_relate_collect;
  if (function_relate_collect.2130 != 0B)
    goto <bb 125>; [INV]
  else
    goto <bb 126>; [INV]

  <bb 125> :
  hash_map<tree_node*, function_relate_array>::~hash_map (function_relate_collect.2130);
  operator delete (function_relate_collect.2130, 48);

  <bb 126> :
  clock_gettime (1, &end);
  temp = diff (start, end);

  <bb 127> :
  _72 = temp.tv_sec;
  _73 = (double) _72;
  _74 = temp.tv_nsec;
  _75 = (double) _74;
  _76 = _75 / 1.0e+9;
  time_used = _73 + _76;
  std::basic_ofstream<char>::basic_ofstream (&myfile, "time.txt", 16);

  <bb 128> :
  D.259180 = std::basic_ofstream<char>::is_open (&myfile);

  <bb 129> :
  retval.2131 = D.259180;
  if (retval.2131 != 0)
    goto <bb 130>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 130> :
  D.259181 = std::operator<< <std::char_traits<char> > (&myfile.D.155383, "utime_used: ");

  <bb 131> :
  _77 = D.259181;
  D.259182 = std::basic_ostream<char>::operator<< (_77, time_used);

  <bb 132> :
  _78 = D.259182;
  std::operator<< <std::char_traits<char> > (_78, " s;\n");

  <bb 133> :
  D.259183 = std::operator<< <std::char_traits<char> > (&myfile.D.155383, "stime_used: ");

  <bb 134> :
  _79 = D.259183;
  D.259184 = std::basic_ostream<char>::operator<< (_79, time_used);

  <bb 135> :
  _80 = D.259184;
  std::operator<< <std::char_traits<char> > (_80, " s;\n");

  <bb 136> :
  std::basic_ofstream<char>::close (&myfile);
  goto <bb 138>; [INV]

  <bb 137> :
  std::operator<< <std::char_traits<char> > (&cout, "Unable to open file");

  <bb 138> :
  std::basic_ofstream<char>::~basic_ofstream (&myfile);
  finally_tmp.2133 = 1;

  <bb 139> :
  breakpoint::~breakpoint (&getbp);
  if (finally_tmp.2133 == 1)
    goto <bb 140>; [INV]
  else
    goto <bb 141>; [INV]

  <bb 140> :
<L91>:
  finally_tmp.2134 = 1;
  goto <bb 142>; [INV]

  <bb 141> :
<L92>:
  finally_tmp.2134 = 0;

  <bb 142> :
  var_points_to::~var_points_to (&vpt);
  if (finally_tmp.2134 == 1)
    goto <bb 143>; [INV]
  else
    goto <bb 145>; [INV]

  <bb 143> :
<L95>:

  <bb 144> :
  ru = {CLOBBER};
  utime = {CLOBBER};
  stime = {CLOBBER};
  node = {CLOBBER};
  vpt = {CLOBBER};
  getbp = {CLOBBER};
  start = {CLOBBER};
  end = {CLOBBER};
  temp = {CLOBBER};
  now = {CLOBBER};
  myfile = {CLOBBER};
  goto <bb 146>; [INV]

  <bb 145> :
  ru = {CLOBBER};
  utime = {CLOBBER};
  stime = {CLOBBER};
  node = {CLOBBER};
  vpt = {CLOBBER};
  getbp = {CLOBBER};
  start = {CLOBBER};
  end = {CLOBBER};
  temp = {CLOBBER};
  now = {CLOBBER};
  myfile = {CLOBBER};

  <bb 146> :
<L100>:
  return;

  <bb 147> :
<L101>:
  operator delete (D.204431, 48);
  resx 4

  <bb 148> :
<L102>:
  operator delete (D.204432, 48);
  resx 6

  <bb 149> :
<L103>:
  operator delete (D.204433, 48);
  resx 8

  <bb 150> :
<L104>:
  operator delete (D.204854, 48);
  resx 10

  <bb 151> :
<L105>:
  operator delete (D.204855, 48);
  resx 12

  <bb 152> :
<L106>:
  operator delete (D.204856, 48);
  resx 14

  <bb 153> :
<L107>:
  operator delete (D.204857, 48);
  resx 16

  <bb 154> :
<L108>:
  operator delete (D.204858, 48);
  resx 18

  <bb 155> :
<L109>:
  operator delete (D.204859, 48);
  resx 20

  <bb 156> :
<L110>:
  operator delete (D.204860, 48);
  resx 22

  <bb 157> :
<L111>:
  operator delete (D.204861, 48);
  resx 24

  <bb 158> :
<L112>:
  operator delete (D.205232, 48);
  resx 26

  <bb 159> :
<L113>:
  operator delete (D.205233, 48);
  resx 28

  <bb 160> :
<L114>:
  std::__cxx11::basic_string<char>::~basic_string (&name);
  resx 33

  <bb 161> :
<L115>:
  name = {CLOBBER};
  score = {CLOBBER};
  resx 32

  <bb 162> :
<L116>:
  std::basic_ifstream<char>::~basic_ifstream (&ifs);
  resx 31

  <bb 163> :
<L117>:
  ifs = {CLOBBER};
  resx 30

  <bb 164> :
<L118>:
  e = {CLOBBER};
  ei = {CLOBBER};
  resx 40

  <bb 165> :
<L119>:
  gsi = {CLOBBER};
  resx 42

  <bb 166> :
<L120>:
  Graph::~Graph (&DFS);
  resx 39

  <bb 167> :
<L121>:
  DFS = {CLOBBER};
  resx 38

  <bb 168> :
<L122>:
  std::basic_ofstream<char>::~basic_ofstream (&myfile);
  resx 59

  <bb 169> :
<L123>:
  breakpoint::~breakpoint (&getbp);
  resx 3

  <bb 170> :
<L124>:
  var_points_to::~var_points_to (&vpt);
  resx 2

  <bb 171> :
<L125>:
  ru = {CLOBBER};
  utime = {CLOBBER};
  stime = {CLOBBER};
  node = {CLOBBER};
  vpt = {CLOBBER};
  getbp = {CLOBBER};
  start = {CLOBBER};
  end = {CLOBBER};
  temp = {CLOBBER};
  now = {CLOBBER};
  myfile = {CLOBBER};
  resx 1

}



;; Function var_points_to::var_points_to (_ZN13var_points_toC2Ev, funcdef_no=6856, decl_uid=203688, cgraph_uid=3487, symbol_order=4265)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void var_points_to::var_points_to (struct var_points_to * const this)
{
  <bb 2> :
  _1 = &this->may_malloc_path;
  std::vector<std::vector<std::pair<fdecl, unsigned int> > >::vector (_1);
  return;

}



;; Function std::vector<std::vector<std::pair<fdecl, unsigned int> > >::vector (_ZNSt6vectorIS_ISt4pairI5fdecljESaIS2_EESaIS4_EEC2Ev, funcdef_no=6854, decl_uid=172412, cgraph_uid=3484, symbol_order=4262)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<std::vector<std::pair<fdecl, unsigned int> > >::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.172420;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_base (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EEC2Ev, funcdef_no=6852, decl_uid=171870, cgraph_uid=3481, symbol_order=4259)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EE12_Vector_implC2Ev, funcdef_no=7863, decl_uid=171762, cgraph_uid=4495, symbol_order=5281)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::allocator (this);
  _1 = &this->D.171765;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::allocator (_ZNSaISt6vectorISt4pairI5fdecljESaIS2_EEEC2Ev, funcdef_no=8846, decl_uid=171540, cgraph_uid=5478, symbol_order=6268)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::new_allocator (_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairI5fdecljESaIS4_EEEC2Ev, funcdef_no=9725, decl_uid=171469, cgraph_uid=6357, symbol_order=7147)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EE17_Vector_impl_dataC2Ev, funcdef_no=8849, decl_uid=171712, cgraph_uid=5481, symbol_order=6271)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function breakpoint::breakpoint (_ZN10breakpointC2Ev, funcdef_no=6863, decl_uid=203880, cgraph_uid=3494, symbol_order=4272)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void breakpoint::breakpoint (struct breakpoint * const this)
{
  <bb 2> :
  _1 = &this->name;
  std::__cxx11::basic_string<char>::basic_string (_1);
  return;

}



;; Function hash_map<tree_node*, var_points_to>::hash_map (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7878, decl_uid=204423, cgraph_uid=4510, symbol_order=5296)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, var_points_to>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8860, decl_uid=204382, cgraph_uid=5492, symbol_order=6282)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259202;
  unsigned int D.259201;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259201 = hash_table_higher_prime_index (size);
  size_prime_index = D.259201;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259202 = hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259202;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9730, decl_uid=204328, cgraph_uid=6362, symbol_order=7152)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.259218;
  struct value_type * D.259217;
  struct mem_alloc_description & D.259216;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.259214;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.259217 = xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_alloc (n);
  nentries = D.259217;
  goto <bb 6>; [INV]

  <bb 5> :
  D.259218 = ggc_cleared_vec_alloc<hash_map<tree_node*, var_points_to>::hash_entry> (n);
  nentries = D.259218;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.259214 = nentries;

  <bb 9> :
<L14>:
  return D.259214;

}



;; Function xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10314, decl_uid=218249, cgraph_uid=6946, symbol_order=7740)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.259221;
  struct hash_entry * D.259219;

  <bb 2> :
  D.259221 = xcalloc (count, 40);
  D.259219 = D.259221;

  <bb 3> :
<L0>:
  return D.259219;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, var_points_to>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10315, decl_uid=239283, cgraph_uid=6947, symbol_order=7741)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, var_points_to>::hash_entry> (size_t c)
{
  struct hash_entry * D.259228;
  struct hash_entry * D.259227;
  struct hash_entry * D.259225;
  bool retval.2135;

  <bb 2> :
  retval.2135 = need_finalization_p<hash_map<tree_node*, var_points_to>::hash_entry> ();
  if (retval.2135 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 40;
  D.259227 = ggc_internal_cleared_alloc (_1, finalize, 40, c);
  D.259225 = D.259227;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 40;
  D.259228 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.259225 = D.259228;

  <bb 5> :
<L2>:
  return D.259225;

}



;; Function finalize<hash_map<tree_node*, var_points_to>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10747, decl_uid=243908, cgraph_uid=7382, symbol_order=8176)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, var_points_to>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, var_points_to>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, var_points_to>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10749, decl_uid=246276, cgraph_uid=7380, symbol_order=8174)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, var_points_to>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  var_points_to::~var_points_to (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, var_points_to>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10746, decl_uid=243907, cgraph_uid=7378, symbol_order=8172)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, var_points_to>::hash_entry> ()
{
  bool D.259229;

  <bb 2> :
  D.259229 = 1;

  <bb 3> :
<L0>:
  return D.259229;

}



;; Function hash_map<tree_node*, gimple_array>::hash_map (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7881, decl_uid=190447, cgraph_uid=4513, symbol_order=5299)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, gimple_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8863, decl_uid=190406, cgraph_uid=5495, symbol_order=6285)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259232;
  unsigned int D.259231;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259231 = hash_table_higher_prime_index (size);
  size_prime_index = D.259231;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259232 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259232;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_map (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7884, decl_uid=196905, cgraph_uid=4516, symbol_order=5302)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8866, decl_uid=196864, cgraph_uid=5498, symbol_order=6288)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259234;
  unsigned int D.259233;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259233 = hash_table_higher_prime_index (size);
  size_prime_index = D.259233;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259234 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259234;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<cgraph_node*, Graph>::hash_map (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7887, decl_uid=204846, cgraph_uid=4519, symbol_order=5305)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8869, decl_uid=204805, cgraph_uid=5501, symbol_order=6291)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259236;
  unsigned int D.259235;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259235 = hash_table_higher_prime_index (size);
  size_prime_index = D.259235;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259236 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259236;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9731, decl_uid=204751, cgraph_uid=6363, symbol_order=7153)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.259252;
  struct value_type * D.259251;
  struct mem_alloc_description & D.259250;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.259248;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.259251 = xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_alloc (n);
  nentries = D.259251;
  goto <bb 6>; [INV]

  <bb 5> :
  D.259252 = ggc_cleared_vec_alloc<hash_map<cgraph_node*, Graph>::hash_entry> (n);
  nentries = D.259252;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.259248 = nentries;

  <bb 9> :
<L14>:
  return D.259248;

}



;; Function xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10317, decl_uid=218321, cgraph_uid=6949, symbol_order=7743)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.259255;
  struct hash_entry * D.259253;

  <bb 2> :
  D.259255 = xcalloc (count, 56);
  D.259253 = D.259255;

  <bb 3> :
<L0>:
  return D.259253;

}



;; Function ggc_cleared_vec_alloc<hash_map<cgraph_node*, Graph>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10318, decl_uid=239294, cgraph_uid=6950, symbol_order=7744)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<cgraph_node*, Graph>::hash_entry> (size_t c)
{
  struct hash_entry * D.259262;
  struct hash_entry * D.259261;
  struct hash_entry * D.259259;
  bool retval.2136;

  <bb 2> :
  retval.2136 = need_finalization_p<hash_map<cgraph_node*, Graph>::hash_entry> ();
  if (retval.2136 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 56;
  D.259261 = ggc_internal_cleared_alloc (_1, finalize, 56, c);
  D.259259 = D.259261;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 56;
  D.259262 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.259259 = D.259262;

  <bb 5> :
<L2>:
  return D.259259;

}



;; Function finalize<hash_map<cgraph_node*, Graph>::hash_entry> (_Z8finalizeIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10753, decl_uid=243917, cgraph_uid=7388, symbol_order=8182)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<cgraph_node*, Graph>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<cgraph_node*, Graph>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::~hash_entry (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10755, decl_uid=246299, cgraph_uid=7386, symbol_order=8180)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  Graph::~Graph (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<cgraph_node*, Graph>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10752, decl_uid=243916, cgraph_uid=7384, symbol_order=8178)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<cgraph_node*, Graph>::hash_entry> ()
{
  bool D.259263;

  <bb 2> :
  D.259263 = 1;

  <bb 3> :
<L0>:
  return D.259263;

}



;; Function hash_map<tree_node*, function_return_array>::hash_map (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7890, decl_uid=189918, cgraph_uid=4522, symbol_order=5308)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8872, decl_uid=189877, cgraph_uid=5504, symbol_order=6294)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259266;
  unsigned int D.259265;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259265 = hash_table_higher_prime_index (size);
  size_prime_index = D.259265;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259266 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259266;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_map (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7893, decl_uid=191079, cgraph_uid=4525, symbol_order=5311)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8875, decl_uid=191038, cgraph_uid=5507, symbol_order=6297)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259268;
  unsigned int D.259267;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259267 = hash_table_higher_prime_index (size);
  size_prime_index = D.259267;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259268 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259268;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_map (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7896, decl_uid=195005, cgraph_uid=4528, symbol_order=5314)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, pthread_attr_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8878, decl_uid=194964, cgraph_uid=5510, symbol_order=6300)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259270;
  unsigned int D.259269;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259269 = hash_table_higher_prime_index (size);
  size_prime_index = D.259269;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259270 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259270;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_map (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7899, decl_uid=193634, cgraph_uid=4531, symbol_order=5317)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8881, decl_uid=193593, cgraph_uid=5513, symbol_order=6303)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259272;
  unsigned int D.259271;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259271 = hash_table_higher_prime_index (size);
  size_prime_index = D.259271;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259272 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259272;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_map (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7902, decl_uid=194110, cgraph_uid=4534, symbol_order=5320)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8884, decl_uid=194069, cgraph_uid=5516, symbol_order=6306)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259274;
  unsigned int D.259273;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259273 = hash_table_higher_prime_index (size);
  size_prime_index = D.259273;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259274 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259274;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_path_array>::hash_map (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7905, decl_uid=192280, cgraph_uid=4537, symbol_order=5323)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8887, decl_uid=192239, cgraph_uid=5519, symbol_order=6309)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259276;
  unsigned int D.259275;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259275 = hash_table_higher_prime_index (size);
  size_prime_index = D.259275;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259276 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259276;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_free_array>::hash_map (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7908, decl_uid=192762, cgraph_uid=4540, symbol_order=5326)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8890, decl_uid=192721, cgraph_uid=5522, symbol_order=6312)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259278;
  unsigned int D.259277;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259277 = hash_table_higher_prime_index (size);
  size_prime_index = D.259277;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259278 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259278;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_graph_array>::hash_map (_ZN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7911, decl_uid=205224, cgraph_uid=4543, symbol_order=5329)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_graph_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8893, decl_uid=205183, cgraph_uid=5525, symbol_order=6315)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259280;
  unsigned int D.259279;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259279 = hash_table_higher_prime_index (size);
  size_prime_index = D.259279;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259280 = hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259280;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9732, decl_uid=205129, cgraph_uid=6364, symbol_order=7154)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.259296;
  struct value_type * D.259295;
  struct mem_alloc_description & D.259294;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.259292;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.259295 = xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_alloc (n);
  nentries = D.259295;
  goto <bb 6>; [INV]

  <bb 5> :
  D.259296 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_graph_array>::hash_entry> (n);
  nentries = D.259296;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.259292 = nentries;

  <bb 9> :
<L14>:
  return D.259292;

}



;; Function xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10319, decl_uid=218513, cgraph_uid=6951, symbol_order=7745)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.259299;
  struct hash_entry * D.259297;

  <bb 2> :
  D.259299 = xcalloc (count, 16);
  D.259297 = D.259299;

  <bb 3> :
<L0>:
  return D.259297;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_graph_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10320, decl_uid=239305, cgraph_uid=6952, symbol_order=7746)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_graph_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.259306;
  struct hash_entry * D.259305;
  struct hash_entry * D.259303;
  bool retval.2137;

  <bb 2> :
  retval.2137 = need_finalization_p<hash_map<tree_node*, function_graph_array>::hash_entry> ();
  if (retval.2137 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 16;
  D.259305 = ggc_internal_cleared_alloc (_1, finalize, 16, c);
  D.259303 = D.259305;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 16;
  D.259306 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.259303 = D.259306;

  <bb 5> :
<L2>:
  return D.259303;

}



;; Function finalize<hash_map<tree_node*, function_graph_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10758, decl_uid=243924, cgraph_uid=7390, symbol_order=8184)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_graph_array>::hash_entry> (void * p)
{
  <bb 2> :
  MEM[(struct hash_entry *)p] = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_graph_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10757, decl_uid=243923, cgraph_uid=7389, symbol_order=8183)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_graph_array>::hash_entry> ()
{
  bool D.259307;

  <bb 2> :
  D.259307 = 0;

  <bb 3> :
<L0>:
  return D.259307;

}



;; Function std::__cxx11::basic_string<char>::basic_string (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev, funcdef_no=7875, decl_uid=126276, cgraph_uid=4507, symbol_order=5293)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::basic_string<char>::basic_string (struct basic_string * const this)
{
  char * D.259309;
  struct allocator D.217757;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_dataplus;
  std::allocator<char>::allocator (&D.217757);
  D.259309 = std::__cxx11::basic_string<char>::_M_local_data (this);
  _2 = D.259309;
  std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (_1, _2, &D.217757);
  std::allocator<char>::~allocator (&D.217757);
  D.217757 = {CLOBBER};
  std::__cxx11::basic_string<char>::_M_set_length (this, 0);
  return;

}



;; Function std::allocator<char>::allocator (_ZNSaIcEC2Ev, funcdef_no=7282, decl_uid=117129, cgraph_uid=3914, symbol_order=4697)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<char>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<char>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<char>::new_allocator (_ZN9__gnu_cxx13new_allocatorIcEC2Ev, funcdef_no=8200, decl_uid=117056, cgraph_uid=4832, symbol_order=5618)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<char>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcOS3_, funcdef_no=8213, decl_uid=125172, cgraph_uid=4845, symbol_order=5631)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (struct _Alloc_hider * const this, char * __dat, struct allocator & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::allocator<char>&> (__a);
  std::allocator<char>::allocator (this, _1);
  this->_M_p = __dat;
  return;

}



;; Function std::move<std::allocator<char>&> (_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=8211, decl_uid=208875, cgraph_uid=4843, symbol_order=5629)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::allocator<char>&> (struct allocator & __t)
{
  struct type & D.259310;

  <bb 2> :
  D.259310 = __t;

  <bb 3> :
<L0>:
  return D.259310;

}



;; Function std::allocator<char>::~allocator (_ZNSaIcED2Ev, funcdef_no=7285, decl_uid=117134, cgraph_uid=3917, symbol_order=4700)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<char>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<char>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<char>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIcED2Ev, funcdef_no=8203, decl_uid=117061, cgraph_uid=4835, symbol_order=5621)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<char>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<breakpoint>::push_back (_ZNSt6vectorI10breakpointSaIS0_EE9push_backERKS0_, funcdef_no=7924, decl_uid=185915, cgraph_uid=4557, symbol_order=5343)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<breakpoint>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.259315;

  <bb 2> :
  _1 = this->D.186235._M_impl.D.185580._M_finish;
  _2 = this->D.186235._M_impl.D.185580._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.186235._M_impl.D.185580._M_finish;
  _4 = &this->D.186235._M_impl;
  std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, const breakpoint&> (_4, _3, __x);
  _5 = this->D.186235._M_impl.D.185580._M_finish;
  _6 = _5 + 40;
  this->D.186235._M_impl.D.185580._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.259315 = std::vector<breakpoint>::end (this);
  std::vector<breakpoint>::_M_realloc_insert<const breakpoint&> (this, D.259315, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, const breakpoint&> (_ZNSt16allocator_traitsISaI10breakpointEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8909, decl_uid=217870, cgraph_uid=5541, symbol_order=6331)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, const breakpoint&> (struct allocator_type & __a, struct breakpoint * __p, const struct breakpoint & __args#0)
{
  <bb 2> :
  _1 = std::forward<const breakpoint&> (__args#0);
  __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, const breakpoint&> (__a, __p, _1);
  return;

}



;; Function std::forward<const breakpoint&> (_ZSt7forwardIRK10breakpointEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9737, decl_uid=231706, cgraph_uid=6369, symbol_order=7159)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct breakpoint & std::forward<const breakpoint&> (const struct type & __t)
{
  const struct breakpoint & D.259316;

  <bb 2> :
  D.259316 = __t;

  <bb 3> :
<L0>:
  return D.259316;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, const breakpoint&> (_ZN9__gnu_cxx13new_allocatorI10breakpointE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9738, decl_uid=231708, cgraph_uid=6373, symbol_order=7163)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, const breakpoint&> (struct new_allocator * const this, struct breakpoint * __p, const struct breakpoint & __args#0)
{
  void * D.239337;
  void * D.239336;
  const struct breakpoint & D.239341;

  <bb 2> :
  D.239341 = std::forward<const breakpoint&> (__args#0);
  D.239336 = __p;
  D.239337 = operator new (40, D.239336);
  breakpoint::breakpoint (D.239337, D.239341);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  operator delete (D.239337, D.239336);
  resx 1

}



;; Function breakpoint::breakpoint (_ZN10breakpointC2ERKS_, funcdef_no=9740, decl_uid=203888, cgraph_uid=6371, symbol_order=7161)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void breakpoint::breakpoint (struct breakpoint * const this, const struct breakpoint & D.203890)
{
  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  _1 = &this->name;
  _2 = &D.203890->name;
  std::__cxx11::basic_string<char>::basic_string (_1, _2);
  _3 = D.203890->line;
  this->line = _3;
  return;

}



;; Function std::__cxx11::basic_string<char>::basic_string (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_, funcdef_no=8267, decl_uid=126265, cgraph_uid=4899, symbol_order=5685)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 8 3 }
;; 3 succs { 8 4 }
;; 4 succs { 10 5 }
;; 5 succs { 10 6 }
;; 6 succs { 10 7 }
;; 7 succs { 1 }
;; 8 succs { 9 }
;; 9 succs { }
;; 10 succs { }
void std::__cxx11::basic_string<char>::basic_string (struct basic_string * const this, const struct basic_string & __str)
{
  char * D.259324;
  char * D.259323;
  char * D.259320;
  const struct allocator_type & D.259319;
  struct allocator D.220342;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_dataplus;
  D.259319 = std::__cxx11::basic_string<char>::_M_get_allocator (__str);
  _2 = D.259319;
  D.220342 = __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy (_2); [return slot optimization]
  D.259320 = std::__cxx11::basic_string<char>::_M_local_data (this);

  <bb 3> :
  _3 = D.259320;
  std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (_1, _3, &D.220342);

  <bb 4> :
  std::allocator<char>::~allocator (&D.220342);
  D.220342 = {CLOBBER};
  D.259323 = std::__cxx11::basic_string<char>::_M_data (__str);

  <bb 5> :
  _4 = D.259323;
  _5 = std::__cxx11::basic_string<char>::length (__str);
  _6 = _4 + _5;
  D.259324 = std::__cxx11::basic_string<char>::_M_data (__str);

  <bb 6> :
  _7 = D.259324;
  std::__cxx11::basic_string<char>::_M_construct<char*> (this, _7, _6);

  <bb 7> :
  return;

  <bb 8> :
<L0>:
  std::allocator<char>::~allocator (&D.220342);
  resx 2

  <bb 9> :
<L1>:
  D.220342 = {CLOBBER};
  resx 1

  <bb 10> :
<L2>:
  _8 = &this->_M_dataplus;
  std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider (_8);
  resx 5

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_, funcdef_no=9133, decl_uid=125092, cgraph_uid=5765, symbol_order=6555)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_, funcdef_no=9909, decl_uid=125052, cgraph_uid=6541, symbol_order=7331)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<char>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<char>::allocator (_ZNSaIcEC2ERKS_, funcdef_no=9105, decl_uid=117124, cgraph_uid=5737, symbol_order=6527)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<char>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<char>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<char>::new_allocator (_ZN9__gnu_cxx13new_allocatorIcEC2ERKS1_, funcdef_no=9874, decl_uid=117051, cgraph_uid=6506, symbol_order=7296)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<char>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.117053)
{
  <bb 2> :
  return;

}



;; Function std::__cxx11::basic_string<char>::_M_construct<char*> (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_, funcdef_no=9109, decl_uid=220092, cgraph_uid=5741, symbol_order=6531)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::basic_string<char>::_M_construct<char*> (struct basic_string * const this, char * __beg, char * __end)
{
  struct __false_type D.259330;

  <bb 2> :
  std::__cxx11::basic_string<char>::_M_construct_aux<char*> (this, __beg, __end, D.259330);
  return;

}



;; Function std::__cxx11::basic_string<char>::_M_construct_aux<char*> (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type, funcdef_no=9878, decl_uid=233060, cgraph_uid=6510, symbol_order=7300)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::__cxx11::basic_string<char>::_M_construct_aux<char*> (struct basic_string * const this, char * __beg, char * __end, struct __false_type D.240399)
{
  struct forward_iterator_tag D.259331;
  struct _Tag D.240402;

  <bb 2> :
  _1 = &D.240402;
  std::__cxx11::basic_string<char>::_M_construct<char*> (this, __beg, __end, D.259331);

  <bb 3> :
  D.240402 = {CLOBBER};
  return;

  <bb 4> :
<L0>:
  D.240402 = {CLOBBER};
  resx 1

}



;; Function std::__cxx11::basic_string<char>::_M_construct<char*> (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag, funcdef_no=10428, decl_uid=240403, cgraph_uid=7061, symbol_order=7855)

Removing basic block 18
Removing basic block 13
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 20 }
;; 8 succs { 20 9 }
;; 9 succs { 10 13 }
;; 10 succs { 20 11 }
;; 11 succs { 20 12 }
;; 12 succs { 20 13 }
;; 13 succs { 16 14 }
;; 14 succs { 20 15 }
;; 15 succs { 1 }
;; 16 succs { 17 }
;; 17 succs { 19 18 }
;; 18 succs { 19 }
;; 19 succs { 20 }
;; 20 succs { }
void std::__cxx11::basic_string<char>::_M_construct<char*> (struct basic_string * const this, char * __beg, char * __end, struct forward_iterator_tag D.244911)
{
  char * D.259346;
  char * D.259345;
  long int D.259344;
  size_type __dnew;
  bool iftmp.2139;
  bool retval.2138;

  <bb 2> :
  _1 = __gnu_cxx::__is_null_pointer<char> (__beg);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  if (__beg != __end)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2139 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2139 = 0;

  <bb 6> :
  retval.2138 = iftmp.2139;
  if (retval.2138 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

  <bb 8> :
  D.259344 = std::distance<char*> (__beg, __end);

  <bb 9> :
  _2 = D.259344;
  _3 = (long unsigned int) _2;
  __dnew = _3;
  __dnew.2140_4 = __dnew;
  if (__dnew.2140_4 > 15)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  D.259345 = std::__cxx11::basic_string<char>::_M_create (this, &__dnew, 0);

  <bb 11> :
  _5 = D.259345;
  std::__cxx11::basic_string<char>::_M_data (this, _5);

  <bb 12> :
  __dnew.2141_6 = __dnew;
  std::__cxx11::basic_string<char>::_M_capacity (this, __dnew.2141_6);

  <bb 13> :
  D.259346 = std::__cxx11::basic_string<char>::_M_data (this);

  <bb 14> :
  _7 = D.259346;
  std::__cxx11::basic_string<char>::_S_copy_chars (_7, __beg, __end);
  __dnew.2142_9 = __dnew;
  std::__cxx11::basic_string<char>::_M_set_length (this, __dnew.2142_9);

  <bb 15> :
  __dnew = {CLOBBER};
  return;

  <bb 16> :
<L9>:
  eh_dispatch 2

  <bb 17> :
<L10>:
  _8 = __builtin_eh_pointer (2);
  __cxa_begin_catch (_8);
  std::__cxx11::basic_string<char>::_M_dispose (this);

  <bb 18> :
  __cxa_rethrow ();

  <bb 19> :
<L11>:
  __cxa_end_catch ();
  resx 3

  <bb 20> :
<L12>:
  __dnew = {CLOBBER};
  resx 1

}



;; Function __gnu_cxx::__is_null_pointer<char> (_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_, funcdef_no=10814, decl_uid=244915, cgraph_uid=7446, symbol_order=8240)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__is_null_pointer<char> (char * __ptr)
{
  bool D.259351;

  <bb 2> :
  D.259351 = __ptr == 0B;

  <bb 3> :
<L0>:
  return D.259351;

}



;; Function std::distance<char*> (_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_, funcdef_no=10429, decl_uid=244918, cgraph_uid=7060, symbol_order=7854)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type std::distance<char*> (char * __first, char * __last)
{
  struct random_access_iterator_tag D.259354;
  difference_type D.259353;

  <bb 2> :
  std::__iterator_category<char*> (&__first);
  __first.2143_1 = __first;
  D.259353 = std::__distance<char*> (__first.2143_1, __last, D.259354);

  <bb 3> :
<L0>:
  return D.259353;

}



;; Function std::__iterator_category<char*> (_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_, funcdef_no=10815, decl_uid=244924, cgraph_uid=7447, symbol_order=8241)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator_category std::__iterator_category<char*> (char * const & D.246567)
{
  struct iterator_category D.259356;

  <bb 2> :

  <bb 3> :
<L0>:
  return D.259356;

}



;; Function std::__distance<char*> (_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag, funcdef_no=10816, decl_uid=244927, cgraph_uid=7448, symbol_order=8242)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type std::__distance<char*> (char * __first, char * __last, struct random_access_iterator_tag D.246575)
{
  difference_type D.259358;

  <bb 2> :
  D.259358 = __last - __first;

  <bb 3> :
<L0>:
  return D.259358;

}



;; Function std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev, funcdef_no=7289, decl_uid=126589, cgraph_uid=3920, symbol_order=4703)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider (struct _Alloc_hider * const this)
{
  <bb 2> :
  std::allocator<char>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<breakpoint>::end (_ZNSt6vectorI10breakpointSaIS0_EE3endEv, funcdef_no=8910, decl_uid=185848, cgraph_uid=5542, symbol_order=6332)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<breakpoint>::end (struct vector * const this)
{
  struct iterator D.231731;
  struct iterator D.259360;

  <bb 2> :
  _1 = &this->D.186235._M_impl.D.185580._M_finish;
  __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::__normal_iterator (&D.231731, _1);
  D.259360 = D.231731;
  D.231731 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.259360;

}



;; Function __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP10breakpointSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9743, decl_uid=218117, cgraph_uid=6375, symbol_order=7165)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::__normal_iterator (struct __normal_iterator * const this, struct breakpoint * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<breakpoint>::_M_realloc_insert<const breakpoint&> (_ZNSt6vectorI10breakpointSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8911, decl_uid=218136, cgraph_uid=5546, symbol_order=6336)

Removing basic block 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 10 8 }
;; 8 succs { 10 9 }
;; 9 succs { 10 }
;; 10 succs { }
void std::vector<breakpoint>::_M_realloc_insert<const breakpoint&> (struct vector * const this, struct iterator __position, const struct breakpoint & __args#0)
{
  struct breakpoint * D.259367;
  const size_type D.259366;
  struct breakpoint * __new_finish;
  struct breakpoint * __new_start;
  const size_type __elems_before;
  struct breakpoint * __old_finish;
  struct breakpoint * __old_start;
  const size_type __len;
  struct iterator D.231739;

  <bb 2> :
  D.259366 = std::vector<breakpoint>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.259366;
  __old_start = this->D.186235._M_impl.D.185580._M_start;
  __old_finish = this->D.186235._M_impl.D.185580._M_finish;
  D.231739 = std::vector<breakpoint>::begin (this);
  _1 = __gnu_cxx::operator-<breakpoint*, std::vector<breakpoint> > (&__position, &D.231739);
  __elems_before = (const size_type) _1;
  D.231739 = {CLOBBER};
  _2 = &this->D.186235;
  D.259367 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_allocate (_2, __len);
  __new_start = D.259367;
  __new_finish = __new_start;
  _3 = std::forward<const breakpoint&> (__args#0);
  _4 = __elems_before * 40;
  _5 = __new_start + _4;
  _6 = &this->D.186235._M_impl;
  std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, const breakpoint&> (_6, _5, _3);

  <bb 3> :
  __new_finish = 0B;
  _7 = &this->D.186235;
  _8 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<breakpoint>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 40;
  _11 = &this->D.186235;
  _12 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<breakpoint>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.186235;
  _23 = this->D.186235._M_impl.D.185580._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 40;
  _26 = (long unsigned int) _25;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_deallocate (_22, __old_start, _26);
  this->D.186235._M_impl.D.185580._M_start = __new_start;
  this->D.186235._M_impl.D.185580._M_finish = __new_finish;
  _27 = __len * 40;
  _28 = __new_start + _27;
  this->D.186235._M_impl.D.185580._M_end_of_storage = _28;
  return;

  <bb 4> :
<L0>:
  eh_dispatch 2

  <bb 5> :
<L1>:
  _15 = __builtin_eh_pointer (2);
  __cxa_begin_catch (_15);
  if (__new_finish == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _16 = __elems_before * 40;
  _17 = __new_start + _16;
  _18 = &this->D.186235._M_impl;
  std::allocator_traits<std::allocator<breakpoint> >::destroy<breakpoint> (_18, _17);
  goto <bb 8>; [INV]

  <bb 7> :
  _19 = &this->D.186235;
  _20 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_19);
  std::_Destroy<breakpoint*, breakpoint> (__new_start, __new_finish, _20);

  <bb 8> :
  _21 = &this->D.186235;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_deallocate (_21, __new_start, __len);

  <bb 9> :
  __cxa_rethrow ();

  <bb 10> :
<L5>:
  __cxa_end_catch ();
  resx 3

}



;; Function std::vector<breakpoint>::_M_check_len (_ZNKSt6vectorI10breakpointSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9745, decl_uid=186084, cgraph_uid=6377, symbol_order=7167)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<breakpoint>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.2146;
  size_type D.259374;
  const long unsigned int D.239350;
  bool retval.2144;

  <bb 2> :
  _1 = std::vector<breakpoint>::max_size (this);
  _2 = std::vector<breakpoint>::size (this);
  _3 = _1 - _2;
  __n.2145_4 = __n;
  retval.2144 = _3 < __n.2145_4;
  if (retval.2144 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<breakpoint>::size (this);
  _6 = std::vector<breakpoint>::size (this);
  D.239350 = _6;
  _7 = std::max<long unsigned int> (&D.239350, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.239350 = {CLOBBER};
  _9 = std::vector<breakpoint>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<breakpoint>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2146 = std::vector<breakpoint>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.2146 = __len;

  <bb 8> :
  D.259374 = iftmp.2146;

  <bb 9> :
<L6>:
  return D.259374;

}



;; Function std::vector<breakpoint>::max_size (_ZNKSt6vectorI10breakpointSaIS0_EE8max_sizeEv, funcdef_no=10324, decl_uid=185870, cgraph_uid=6956, symbol_order=7750)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<breakpoint>::max_size (const struct vector * const this)
{
  size_type D.259381;

  <bb 2> :
  _1 = &this->D.186235;
  _2 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_1);
  D.259381 = std::vector<breakpoint>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.259381;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI10breakpointSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=10761, decl_uid=185470, cgraph_uid=7393, symbol_order=8187)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.259383;

  <bb 2> :
  D.259383 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.259383;

}



;; Function std::vector<breakpoint>::_S_max_size (_ZNSt6vectorI10breakpointSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10760, decl_uid=186091, cgraph_uid=7392, symbol_order=8186)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<breakpoint>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.259385;

  <bb 2> :
  __diffmax = 230584300921369395;
  _1 = std::allocator_traits<std::allocator<breakpoint> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.259385 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.259385;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::max_size (_ZNSt16allocator_traitsISaI10breakpointEE8max_sizeERKS1_, funcdef_no=10931, decl_uid=185405, cgraph_uid=7563, symbol_order=8359)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<breakpoint> >::max_size (const struct allocator_type & __a)
{
  size_type D.259388;

  <bb 2> :
  D.259388 = __gnu_cxx::new_allocator<breakpoint>::max_size (__a);

  <bb 3> :
<L0>:
  return D.259388;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::max_size (_ZNK9__gnu_cxx13new_allocatorI10breakpointE8max_sizeEv, funcdef_no=11011, decl_uid=185247, cgraph_uid=7643, symbol_order=8439)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<breakpoint>::max_size (const struct new_allocator * const this)
{
  size_type D.259390;

  <bb 2> :
  D.259390 = __gnu_cxx::new_allocator<breakpoint>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.259390;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI10breakpointE11_M_max_sizeEv, funcdef_no=10763, decl_uid=185266, cgraph_uid=7394, symbol_order=8188)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<breakpoint>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.259392;

  <bb 2> :
  D.259392 = 230584300921369395;

  <bb 3> :
<L0>:
  return D.259392;

}



;; Function std::vector<breakpoint>::begin (_ZNSt6vectorI10breakpointSaIS0_EE5beginEv, funcdef_no=9746, decl_uid=185844, cgraph_uid=6378, symbol_order=7168)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<breakpoint>::begin (struct vector * const this)
{
  struct iterator D.239352;
  struct iterator D.259394;

  <bb 2> :
  _1 = &this->D.186235._M_impl.D.185580._M_start;
  __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::__normal_iterator (&D.239352, _1);
  D.259394 = D.239352;
  D.239352 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.259394;

}



;; Function __gnu_cxx::operator-<breakpoint*, std::vector<breakpoint> > (_ZN9__gnu_cxxmiIP10breakpointSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9747, decl_uid=231740, cgraph_uid=6379, symbol_order=7169)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<breakpoint*, std::vector<breakpoint> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.259397;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.259397 = _5 /[ex] 40;

  <bb 3> :
<L0>:
  return D.259397;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_allocate (_ZNSt12_Vector_baseI10breakpointSaIS0_EE11_M_allocateEm, funcdef_no=9748, decl_uid=185584, cgraph_uid=6380, symbol_order=7170)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct breakpoint * std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct breakpoint * D.259405;
  struct breakpoint * iftmp.2147;
  struct breakpoint * D.259399;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.259405 = std::allocator_traits<std::allocator<breakpoint> >::allocate (_1, __n);
  iftmp.2147 = D.259405;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2147 = 0B;

  <bb 5> :
  D.259399 = iftmp.2147;

  <bb 6> :
<L3>:
  return D.259399;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::allocate (_ZNSt16allocator_traitsISaI10breakpointEE8allocateERS1_m, funcdef_no=10325, decl_uid=185385, cgraph_uid=6957, symbol_order=7751)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct breakpoint * std::allocator_traits<std::allocator<breakpoint> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct breakpoint * D.259408;
  struct breakpoint * D.259406;

  <bb 2> :
  D.259408 = __gnu_cxx::new_allocator<breakpoint>::allocate (__a, __n, 0B);
  D.259406 = D.259408;

  <bb 3> :
<L0>:
  return D.259406;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::allocate (_ZN9__gnu_cxx13new_allocatorI10breakpointE8allocateEmPKv, funcdef_no=10762, decl_uid=185239, cgraph_uid=7395, symbol_order=8189)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct breakpoint * __gnu_cxx::new_allocator<breakpoint>::allocate (struct new_allocator * const this, size_type __n, const void * D.246331)
{
  struct breakpoint * D.259419;
  struct breakpoint * D.259418;
  align_val_t __al;
  struct breakpoint * D.259416;
  bool retval.2148;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<breakpoint>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.2148 = _4 != 0;
  if (retval.2148 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 461168601842738790)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 40;
  D.259419 = operator new (_6);
  D.259416 = D.259419;

  <bb 7> :
<L6>:
  return D.259416;

}



;; Function __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP10breakpointSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9750, decl_uid=218104, cgraph_uid=6382, symbol_order=7172)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * const & __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (const struct __normal_iterator * const this)
{
  struct breakpoint * const & D.259420;

  <bb 2> :
  D.259420 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.259420;

}



;; Function std::vector<breakpoint>::_S_relocate (_ZNSt6vectorI10breakpointSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9749, decl_uid=185742, cgraph_uid=6381, symbol_order=7171)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * std::vector<breakpoint>::_S_relocate (struct breakpoint * __first, struct breakpoint * __last, struct breakpoint * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.259423;
  struct breakpoint * D.259422;

  <bb 2> :
  D.259422 = std::vector<breakpoint>::_S_do_relocate (__first, __last, __result, __alloc, D.259423);

  <bb 3> :
<L0>:
  return D.259422;

}



;; Function std::vector<breakpoint>::_S_do_relocate (_ZNSt6vectorI10breakpointSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10326, decl_uid=185730, cgraph_uid=6958, symbol_order=7752)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * std::vector<breakpoint>::_S_do_relocate (struct breakpoint * __first, struct breakpoint * __last, struct breakpoint * __result, struct _Tp_alloc_type & __alloc, struct true_type D.243943)
{
  struct breakpoint * D.259425;

  <bb 2> :
  D.259425 = std::__relocate_a<breakpoint*, breakpoint*, std::allocator<breakpoint> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.259425;

}



;; Function std::__relocate_a<breakpoint*, breakpoint*, std::allocator<breakpoint> > (_ZSt12__relocate_aIP10breakpointS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10764, decl_uid=231905, cgraph_uid=7396, symbol_order=8190)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * std::__relocate_a<breakpoint*, breakpoint*, std::allocator<breakpoint> > (struct breakpoint * __first, struct breakpoint * __last, struct breakpoint * __result, struct allocator & __alloc)
{
  struct breakpoint * D.259427;

  <bb 2> :
  _1 = std::__niter_base<breakpoint*> (__result);
  _2 = std::__niter_base<breakpoint*> (__last);
  _3 = std::__niter_base<breakpoint*> (__first);
  D.259427 = std::__relocate_a_1<breakpoint*, breakpoint*, std::allocator<breakpoint> > (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.259427;

}



;; Function std::__niter_base<breakpoint*> (_ZSt12__niter_baseIP10breakpointET_S2_, funcdef_no=10932, decl_uid=231911, cgraph_uid=7564, symbol_order=8360)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * std::__niter_base<breakpoint*> (struct breakpoint * __it)
{
  struct breakpoint * D.259429;

  <bb 2> :
  D.259429 = __it;

  <bb 3> :
<L0>:
  return D.259429;

}



;; Function std::__relocate_a_1<breakpoint*, breakpoint*, std::allocator<breakpoint> > (_ZSt14__relocate_a_1IP10breakpointS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10933, decl_uid=232056, cgraph_uid=7565, symbol_order=8361)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct breakpoint * std::__relocate_a_1<breakpoint*, breakpoint*, std::allocator<breakpoint> > (struct breakpoint * __first, struct breakpoint * __last, struct breakpoint * __result, struct allocator & __alloc)
{
  struct breakpoint * __cur;
  struct breakpoint * D.259431;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<breakpoint> (__first);
  _2 = std::__addressof<breakpoint> (__cur);
  std::__relocate_object_a<breakpoint, breakpoint, std::allocator<breakpoint> > (_2, _1, __alloc);
  __first = __first + 40;
  __cur = __cur + 40;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.259431 = __cur;

  <bb 6> :
<L3>:
  return D.259431;

}



;; Function std::__addressof<breakpoint> (_ZSt11__addressofI10breakpointEPT_RS1_, funcdef_no=10934, decl_uid=232112, cgraph_uid=7566, symbol_order=8362)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * std::__addressof<breakpoint> (struct breakpoint & __r)
{
  struct breakpoint * D.259433;

  <bb 2> :
  D.259433 = __r;

  <bb 3> :
<L0>:
  return D.259433;

}



;; Function std::__relocate_object_a<breakpoint, breakpoint, std::allocator<breakpoint> > (_ZSt19__relocate_object_aI10breakpointS0_SaIS0_EEvPT_PT0_RT1_, funcdef_no=11012, decl_uid=232085, cgraph_uid=7644, symbol_order=8440)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__relocate_object_a<breakpoint, breakpoint, std::allocator<breakpoint> > (struct breakpoint * restrict __dest, struct breakpoint * restrict __orig, struct allocator & __alloc)
{
  <bb 2> :
  _1 = std::move<breakpoint&> (__orig);
  std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, breakpoint> (__alloc, __dest, _1);
  _2 = std::__addressof<breakpoint> (__orig);
  std::allocator_traits<std::allocator<breakpoint> >::destroy<breakpoint> (__alloc, _2);
  return;

}



;; Function std::move<breakpoint&> (_ZSt4moveIR10breakpointEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=11048, decl_uid=232097, cgraph_uid=7680, symbol_order=8476)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<breakpoint&> (struct breakpoint & __t)
{
  struct type & D.259435;

  <bb 2> :
  D.259435 = __t;

  <bb 3> :
<L0>:
  return D.259435;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, breakpoint> (_ZNSt16allocator_traitsISaI10breakpointEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_, funcdef_no=11049, decl_uid=232099, cgraph_uid=7681, symbol_order=8477)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, breakpoint> (struct allocator_type & __a, struct breakpoint * __p, struct breakpoint & __args#0)
{
  <bb 2> :
  _1 = std::forward<breakpoint> (__args#0);
  __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, breakpoint> (__a, __p, _1);
  return;

}



;; Function std::forward<breakpoint> (_ZSt7forwardI10breakpointEOT_RNSt16remove_referenceIS1_E4typeE, funcdef_no=11072, decl_uid=248119, cgraph_uid=7704, symbol_order=8500)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct breakpoint & std::forward<breakpoint> (struct type & __t)
{
  struct breakpoint & D.259437;

  <bb 2> :
  D.259437 = __t;

  <bb 3> :
<L0>:
  return D.259437;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, breakpoint> (_ZN9__gnu_cxx13new_allocatorI10breakpointE9constructIS1_JS1_EEEvPT_DpOT0_, funcdef_no=11073, decl_uid=248121, cgraph_uid=7708, symbol_order=8504)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, breakpoint> (struct new_allocator * const this, struct breakpoint * __p, struct breakpoint & __args#0)
{
  void * D.248211;
  void * D.248210;
  struct breakpoint & D.248215;

  <bb 2> :
  D.248215 = std::forward<breakpoint> (__args#0);
  D.248210 = __p;
  D.248211 = operator new (40, D.248210);
  breakpoint::breakpoint (D.248211, D.248215);
  return;

}



;; Function breakpoint::breakpoint (_ZN10breakpointC2EOS_, funcdef_no=11075, decl_uid=203897, cgraph_uid=7706, symbol_order=8502)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void breakpoint::breakpoint (struct breakpoint * const this, struct breakpoint & D.203899)
{
  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  _1 = &this->name;
  _2 = &D.203899->name;
  std::__cxx11::basic_string<char>::basic_string (_1, _2);
  _3 = D.203899->line;
  this->line = _3;
  return;

}



;; Function std::__cxx11::basic_string<char>::basic_string (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_, funcdef_no=7299, decl_uid=126195, cgraph_uid=3931, symbol_order=4715)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::__cxx11::basic_string<char>::basic_string (struct basic_string * const this, struct basic_string & __str)
{
  char * D.259447;
  char * D.259446;
  bool D.259445;
  char * D.259444;
  struct allocator_type & D.259443;
  bool retval.2149;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_dataplus;
  D.259443 = std::__cxx11::basic_string<char>::_M_get_allocator (__str);
  _2 = D.259443;
  _3 = std::move<std::allocator<char>&> (_2);
  D.259444 = std::__cxx11::basic_string<char>::_M_local_data (this);
  _4 = D.259444;
  std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (_1, _4, _3);
  D.259445 = std::__cxx11::basic_string<char>::_M_is_local (__str);
  retval.2149 = D.259445;
  if (retval.2149 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = &__str->D.125192._M_local_buf;
  _6 = &this->D.125192._M_local_buf;
  std::char_traits<char>::copy (_6, _5, 16);
  goto <bb 5>; [INV]

  <bb 4> :
  D.259446 = std::__cxx11::basic_string<char>::_M_data (__str);
  _7 = D.259446;
  std::__cxx11::basic_string<char>::_M_data (this, _7);
  _8 = __str->D.125192._M_allocated_capacity;
  std::__cxx11::basic_string<char>::_M_capacity (this, _8);

  <bb 5> :
  _9 = std::__cxx11::basic_string<char>::length (__str);
  std::__cxx11::basic_string<char>::_M_length (this, _9);
  D.259447 = std::__cxx11::basic_string<char>::_M_local_data (__str);
  _10 = D.259447;
  std::__cxx11::basic_string<char>::_M_data (__str, _10);
  std::__cxx11::basic_string<char>::_M_set_length (__str, 0);
  return;

}



;; Function std::char_traits<char>::copy (_ZNSt11char_traitsIcE4copyEPcPKcm, funcdef_no=3400, decl_uid=115117, cgraph_uid=2218, symbol_order=2386)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
char_type * std::char_traits<char>::copy (char_type * __s1, const char_type * __s2, size_t __n)
{
  char_type * D.259450;

  <bb 2> :
  if (__n == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.259450 = __s1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.259450 = __builtin_memcpy (__s1, __s2, __n);

  <bb 5> :
<L2>:
  return D.259450;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::destroy<breakpoint> (_ZNSt16allocator_traitsISaI10breakpointEE7destroyIS0_EEvRS1_PT_, funcdef_no=9752, decl_uid=232114, cgraph_uid=6384, symbol_order=7174)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<breakpoint> >::destroy<breakpoint> (struct allocator_type & __a, struct breakpoint * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<breakpoint>::destroy<breakpoint> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::destroy<breakpoint> (_ZN9__gnu_cxx13new_allocatorI10breakpointE7destroyIS1_EEvPT_, funcdef_no=10327, decl_uid=239371, cgraph_uid=6959, symbol_order=7753)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<breakpoint>::destroy<breakpoint> (struct new_allocator * const this, struct breakpoint * __p)
{
  <bb 2> :
  breakpoint::~breakpoint (__p);
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI10breakpointSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=9751, decl_uid=185468, cgraph_uid=6383, symbol_order=7173)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.259452;

  <bb 2> :
  D.259452 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.259452;

}



;; Function std::_Destroy<breakpoint*, breakpoint> (_ZSt8_DestroyIP10breakpointS0_EvT_S2_RSaIT0_E, funcdef_no=9753, decl_uid=232296, cgraph_uid=6385, symbol_order=7175)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<breakpoint*, breakpoint> (struct breakpoint * __first, struct breakpoint * __last, struct allocator & D.239376)
{
  <bb 2> :
  std::_Destroy<breakpoint*> (__first, __last);
  return;

}



;; Function std::_Destroy<breakpoint*> (_ZSt8_DestroyIP10breakpointEvT_S2_, funcdef_no=10328, decl_uid=239378, cgraph_uid=6960, symbol_order=7754)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<breakpoint*> (struct breakpoint * __first, struct breakpoint * __last)
{
  <bb 2> :
  std::_Destroy_aux<false>::__destroy<breakpoint*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<false>::__destroy<breakpoint*> (_ZNSt12_Destroy_auxILb0EE9__destroyIP10breakpointEEvT_S4_, funcdef_no=10765, decl_uid=243972, cgraph_uid=7397, symbol_order=8191)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void std::_Destroy_aux<false>::__destroy<breakpoint*> (struct breakpoint * __first, struct breakpoint * __last)
{
  <bb 2> :
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<breakpoint> (__first);
  std::_Destroy<breakpoint> (_1);
  __first = __first + 40;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



;; Function std::_Destroy<breakpoint> (_ZSt8_DestroyI10breakpointEvPT_, funcdef_no=10935, decl_uid=246346, cgraph_uid=7567, symbol_order=8363)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<breakpoint> (struct breakpoint * __pointer)
{
  <bb 2> :
  breakpoint::~breakpoint (__pointer);
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_deallocate (_ZNSt12_Vector_baseI10breakpointSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8416, decl_uid=185587, cgraph_uid=5048, symbol_order=5838)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_deallocate (struct _Vector_base * const this, struct breakpoint * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<breakpoint> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::deallocate (_ZNSt16allocator_traitsISaI10breakpointEE10deallocateERS1_PS0_m, funcdef_no=9215, decl_uid=185392, cgraph_uid=5847, symbol_order=6637)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<breakpoint> >::deallocate (struct allocator_type & __a, struct breakpoint * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<breakpoint>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::deallocate (_ZN9__gnu_cxx13new_allocatorI10breakpointE10deallocateEPS1_m, funcdef_no=9949, decl_uid=185243, cgraph_uid=6581, symbol_order=7375)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<breakpoint>::deallocate (struct new_allocator * const this, struct breakpoint * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 40;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function Graph::Graph (_ZN5GraphC2Ev, funcdef_no=6879, decl_uid=205497, cgraph_uid=3510, symbol_order=4288)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void Graph::Graph (struct Graph * const this)
{
  <bb 2> :
  _1 = &this->stack;
  std::vector<int>::vector (_1);
  return;

}



;; Function std::vector<int>::vector (_ZNSt6vectorIiSaIiEEC2Ev, funcdef_no=6877, decl_uid=167760, cgraph_uid=3507, symbol_order=4285)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.167768;
  std::_Vector_base<int, std::allocator<int> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_base (_ZNSt12_Vector_baseIiSaIiEEC2Ev, funcdef_no=6875, decl_uid=167186, cgraph_uid=3504, symbol_order=4282)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev, funcdef_no=7928, decl_uid=167078, cgraph_uid=4560, symbol_order=5346)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<int>::allocator (this);
  _1 = &this->D.167081;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<int>::allocator (_ZNSaIiEC2Ev, funcdef_no=8916, decl_uid=166856, cgraph_uid=5548, symbol_order=6338)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<int>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::new_allocator (_ZN9__gnu_cxx13new_allocatorIiEC2Ev, funcdef_no=9755, decl_uid=166785, cgraph_uid=6387, symbol_order=7177)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev, funcdef_no=8919, decl_uid=167028, cgraph_uid=5551, symbol_order=6341)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function hash_map<cgraph_node*, Graph>::put (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7939, decl_uid=204525, cgraph_uid=4575, symbol_order=5361)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<cgraph_node*, Graph>::put (struct hash_map * const this, struct cgraph_node * const & k, const struct Graph & v)
{
  bool D.259467;
  struct hash_entry * D.259466;
  unsigned int D.259465;
  bool ins;
  struct hash_entry * e;
  bool D.259463;
  void * D.218179;
  void * D.218178;

  <bb 2> :
  _1 = &this->m_table;
  D.259465 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::hash (k);
  _2 = D.259465;
  D.259466 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.259466;
  D.259467 = hash_map<cgraph_node*, Graph>::hash_entry::is_empty (e);
  ins = D.259467;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.218178 = &e->m_value;
  D.218179 = operator new (48, D.218178);
  Graph::Graph (D.218179, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  Graph::operator= (_4, v);

  <bb 5> :
  D.259463 = ~ins;

  <bb 6> :
<L3>:
  return D.259463;

  <bb 7> :
<L4>:
  operator delete (D.218179, D.218178);
  resx 1

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE4hashERKS2_, funcdef_no=8927, decl_uid=204485, cgraph_uid=5559, symbol_order=6349)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::hash (struct cgraph_node * const & h)
{
  hashval_t D.259469;

  <bb 2> :
  D.259469 = pointer_hash<cgraph_node>::hash (h);

  <bb 3> :
<L0>:
  return D.259469;

}



;; Function pointer_hash<cgraph_node>::hash (_ZN12pointer_hashI11cgraph_nodeE4hashERKPS0_, funcdef_no=9759, decl_uid=204442, cgraph_uid=6391, symbol_order=7181)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t pointer_hash<cgraph_node>::hash (struct cgraph_node * const & candidate)
{
  hashval_t D.259471;

  <bb 2> :
  _1 = *candidate;
  _2 = (long int) _1;
  _3 = _2 >> 3;
  D.259471 = (hashval_t) _3;

  <bb 3> :
<L0>:
  return D.259471;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8928, decl_uid=204683, cgraph_uid=5560, symbol_order=6350)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, struct cgraph_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.259522;
  bool D.259521;
  bool D.259520;
  bool D.259519;
  bool D.259518;
  bool D.259517;
  struct value_type * D.259516;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.2155;
  bool retval.2154;
  bool retval.2153;
  bool retval.2152;
  bool retval.2151;
  bool retval.2150;
  struct value_type * D.259478;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 56;
  entry = _11 + _13;
  size = this->m_size;
  D.259517 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.2150 = D.259517;
  if (retval.2150 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.259518 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.2151 = D.259518;
  if (retval.2151 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 56;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.259519 = hash_map<cgraph_node*, Graph>::hash_entry::equal (entry, comparable);
  retval.2152 = D.259519;
  if (retval.2152 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 56;
  D.259478 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 56;
  entry = _24 + _26;
  D.259520 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.2153 = D.259520;
  if (retval.2153 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.259521 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.2154 = D.259521;
  if (retval.2154 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 56;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.259522 = hash_map<cgraph_node*, Graph>::hash_entry::equal (entry, comparable);
  retval.2155 = D.259522;
  if (retval.2155 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 56;
  D.259478 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.259478 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.259478 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 56;
  D.259478 = _37 + _39;

  <bb 27> :
<L37>:
  return D.259478;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9760, decl_uid=204764, cgraph_uid=6404, symbol_order=7194)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.259553;
  unsigned int D.259552;
  bool D.259551;
  bool D.259550;
  struct mem_alloc_description & D.259549;
  struct value_type * D.259548;
  unsigned int D.259547;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.239429;
  void * D.239428;
  struct hash_entry & D.239466;
  bool iftmp.2159;
  bool retval.2158;
  bool iftmp.2157;
  bool retval.2156;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 56;
  olimit = oentries + _1;
  elts = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2157 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2157 = 0;

  <bb 6> :
  retval.2156 = iftmp.2157;
  if (retval.2156 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.259547 = hash_table_higher_prime_index (_5);
  nindex = D.259547;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.259548 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.259548;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.259550 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.259550;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.259551 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.259551;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.2159 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.2159 = 0;

  <bb 15> :
  retval.2158 = iftmp.2159;
  if (retval.2158 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.259552 = hash_map<cgraph_node*, Graph>::hash_entry::hash (x);
  _16 = D.259552;
  D.259553 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.259553;
  D.239466 = std::move<hash_map<cgraph_node*, Graph>::hash_entry&> (x);
  D.239428 = q;
  D.239429 = operator new (56, D.239428);
  hash_map<cgraph_node*, Graph>::hash_entry::hash_entry (D.239429, D.239466);

  <bb 17> :
  p = p + 56;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10331, decl_uid=204659, cgraph_uid=6963, symbol_order=7757)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.259554;

  <bb 2> :
  D.259554 = this->m_size;

  <bb 3> :
<L0>:
  return D.259554;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10332, decl_uid=204661, cgraph_uid=6964, symbol_order=7758)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.259556;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.259556 = _1 - _2;

  <bb 3> :
<L0>:
  return D.259556;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10333, decl_uid=204761, cgraph_uid=6965, symbol_order=7759)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.2160;
  bool D.259558;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2160 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2160 = 0;

  <bb 6> :
  D.259558 = iftmp.2160;

  <bb 7> :
<L4>:
  return D.259558;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::hash (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10335, decl_uid=204584, cgraph_uid=6967, symbol_order=7761)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<cgraph_node*, Graph>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.259567;
  hashval_t D.259565;

  <bb 2> :
  _1 = &e->m_key;
  D.259567 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::hash (_1);
  D.259565 = D.259567;

  <bb 3> :
<L0>:
  return D.259565;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10334, decl_uid=204754, cgraph_uid=6966, symbol_order=7760)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.259580;
  bool D.259579;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.2162;
  struct value_type * D.259571;
  bool retval.2161;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 56;
  slot = _2 + _4;
  D.259579 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.2161 = D.259579;
  if (retval.2161 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.259571 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 56;
  slot = _8 + _10;
  D.259580 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.2162 = D.259580;
  if (retval.2162 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.259571 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.259571;

}



;; Function std::move<hash_map<cgraph_node*, Graph>::hash_entry&> (_ZSt4moveIRN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10336, decl_uid=239426, cgraph_uid=6968, symbol_order=7762)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<cgraph_node*, Graph>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.259581;

  <bb 2> :
  D.259581 = __t;

  <bb 3> :
<L0>:
  return D.259581;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::hash_entry (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9771, decl_uid=239451, cgraph_uid=6402, symbol_order=7192)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.239453)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.239453->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.239453->m_value;
  Graph::Graph (_2, _3);
  return;

}



;; Function Graph::Graph (_ZN5GraphC2EOS_, funcdef_no=9769, decl_uid=205514, cgraph_uid=6399, symbol_order=7189)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void Graph::Graph (struct Graph * const this, struct Graph & D.205516)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.205516->V;
  this->V = _1;
  _2 = D.205516->end;
  this->end = _2;
  _3 = D.205516->succ;
  this->succ = _3;
  _4 = D.205516->adj;
  this->adj = _4;
  _5 = &this->stack;
  _6 = &D.205516->stack;
  std::vector<int>::vector (_5, _6);
  return;

}



;; Function std::vector<int>::vector (_ZNSt6vectorIiSaIiEEC2EOS1_, funcdef_no=9767, decl_uid=167725, cgraph_uid=6396, symbol_order=7186)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::vector (struct vector * const this, struct vector & D.167727)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.167768;
  _2 = &D.167727->D.167768;
  std::_Vector_base<int, std::allocator<int> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_base (_ZNSt12_Vector_baseIiSaIiEEC2EOS1_, funcdef_no=9765, decl_uid=167161, cgraph_uid=6393, symbol_order=7183)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.167163)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.167163->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2EOS2_, funcdef_no=10338, decl_uid=167067, cgraph_uid=6970, symbol_order=7764)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<int, std::allocator<int> >::_Vector_impl&> (__x);
  std::allocator<int>::allocator (this, _1);
  _2 = &this->D.167081;
  _3 = std::move<std::_Vector_base<int, std::allocator<int> >::_Vector_impl&> (__x);
  _4 = &_3->D.167081;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::allocator<int>::allocator (_ZNSaIiEC2ERKS_, funcdef_no=10768, decl_uid=166851, cgraph_uid=7400, symbol_order=8194)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<int>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::new_allocator (_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_, funcdef_no=10937, decl_uid=166780, cgraph_uid=7569, symbol_order=8365)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.166782)
{
  <bb 2> :
  return;

}



;; Function std::move<std::_Vector_base<int, std::allocator<int> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseIiSaIiEE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS6_, funcdef_no=10766, decl_uid=244007, cgraph_uid=7398, symbol_order=8192)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<int, std::allocator<int> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.259583;

  <bb 2> :
  D.259583 = __t;

  <bb 3> :
<L0>:
  return D.259583;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2EOS2_, funcdef_no=10771, decl_uid=167023, cgraph_uid=7403, symbol_order=8197)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8951, decl_uid=218323, cgraph_uid=5583, symbol_order=6373)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8948, decl_uid=204768, cgraph_uid=5580, symbol_order=6370)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.259588;
  bool D.259586;

  <bb 2> :
  D.259588 = hash_map<cgraph_node*, Graph>::hash_entry::is_empty (v);
  D.259586 = D.259588;

  <bb 3> :
<L0>:
  return D.259586;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8949, decl_uid=204766, cgraph_uid=5581, symbol_order=6371)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.259591;
  bool D.259589;

  <bb 2> :
  D.259591 = hash_map<cgraph_node*, Graph>::hash_entry::is_deleted (v);
  D.259589 = D.259591;

  <bb 3> :
<L0>:
  return D.259589;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::is_deleted (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9799, decl_uid=204593, cgraph_uid=6431, symbol_order=7221)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<cgraph_node*, Graph>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.259594;
  bool D.259592;

  <bb 2> :
  D.259594 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_deleted<hash_map<cgraph_node*, Graph>::hash_entry> (e);
  D.259592 = D.259594;

  <bb 3> :
<L0>:
  return D.259592;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_deleted<hash_map<cgraph_node*, Graph>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10365, decl_uid=239654, cgraph_uid=6997, symbol_order=7791)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_deleted<hash_map<cgraph_node*, Graph>::hash_entry> (const struct hash_entry & entry)
{
  bool D.259595;

  <bb 2> :
  _1 = entry->m_key;
  D.259595 = pointer_hash<cgraph_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.259595;

}



;; Function pointer_hash<cgraph_node>::is_deleted (_ZN12pointer_hashI11cgraph_nodeE10is_deletedEPS0_, funcdef_no=10786, decl_uid=204452, cgraph_uid=7418, symbol_order=8212)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<cgraph_node>::is_deleted (struct cgraph_node * e)
{
  bool D.259597;

  <bb 2> :
  D.259597 = e == 1B;

  <bb 3> :
<L0>:
  return D.259597;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::equal (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9773, decl_uid=204586, cgraph_uid=6405, symbol_order=7195)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<cgraph_node*, Graph>::hash_entry::equal (const struct hash_entry & a, struct cgraph_node * const & b)
{
  bool D.259601;
  bool D.259599;

  <bb 2> :
  _1 = &a->m_key;
  D.259601 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::equal_keys (_1, b);
  D.259599 = D.259601;

  <bb 3> :
<L0>:
  return D.259599;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE10equal_keysERKS2_S7_, funcdef_no=10340, decl_uid=204487, cgraph_uid=6972, symbol_order=7766)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::equal_keys (struct cgraph_node * const & k1, struct cgraph_node * const & k2)
{
  bool D.259602;

  <bb 2> :
  D.259602 = pointer_hash<cgraph_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.259602;

}



;; Function pointer_hash<cgraph_node>::equal (_ZN12pointer_hashI11cgraph_nodeE5equalERKPS0_S4_, funcdef_no=10773, decl_uid=204444, cgraph_uid=7405, symbol_order=8199)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<cgraph_node>::equal (struct cgraph_node * const & existing, struct cgraph_node * const & candidate)
{
  bool D.259604;

  <bb 2> :
  _1 = *existing;
  _2 = *candidate;
  D.259604 = _1 == _2;

  <bb 3> :
<L0>:
  return D.259604;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9774, decl_uid=204772, cgraph_uid=6406, symbol_order=7196)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<cgraph_node*, Graph>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::mark_empty (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10341, decl_uid=204596, cgraph_uid=6973, symbol_order=7767)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::mark_empty<hash_map<cgraph_node*, Graph>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::mark_empty<hash_map<cgraph_node*, Graph>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10774, decl_uid=244025, cgraph_uid=7406, symbol_order=8200)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::mark_empty<hash_map<cgraph_node*, Graph>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<cgraph_node>::mark_empty (_1);
  return;

}



;; Function pointer_hash<cgraph_node>::mark_empty (_ZN12pointer_hashI11cgraph_nodeE10mark_emptyERPS0_, funcdef_no=10939, decl_uid=204450, cgraph_uid=7571, symbol_order=8367)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void pointer_hash<cgraph_node>::mark_empty (struct cgraph_node * & e)
{
  <bb 2> :
  *e = 0B;
  return;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::is_empty (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8929, decl_uid=204598, cgraph_uid=5561, symbol_order=6351)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<cgraph_node*, Graph>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.259608;
  bool D.259606;

  <bb 2> :
  D.259608 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_empty<hash_map<cgraph_node*, Graph>::hash_entry> (e);
  D.259606 = D.259608;

  <bb 3> :
<L0>:
  return D.259606;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_empty<hash_map<cgraph_node*, Graph>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=9775, decl_uid=232346, cgraph_uid=6407, symbol_order=7197)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_empty<hash_map<cgraph_node*, Graph>::hash_entry> (const struct hash_entry & entry)
{
  bool D.259609;

  <bb 2> :
  _1 = entry->m_key;
  D.259609 = pointer_hash<cgraph_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.259609;

}



;; Function pointer_hash<cgraph_node>::is_empty (_ZN12pointer_hashI11cgraph_nodeE8is_emptyEPS0_, funcdef_no=10342, decl_uid=204454, cgraph_uid=6974, symbol_order=7768)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<cgraph_node>::is_empty (struct cgraph_node * e)
{
  bool D.259611;

  <bb 2> :
  D.259611 = e == 0B;

  <bb 3> :
<L0>:
  return D.259611;

}



;; Function Graph::Graph (_ZN5GraphC2ERKS_, funcdef_no=7941, decl_uid=205505, cgraph_uid=4572, symbol_order=5358)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void Graph::Graph (struct Graph * const this, const struct Graph & D.205507)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.205507->V;
  this->V = _1;
  _2 = D.205507->end;
  this->end = _2;
  _3 = D.205507->succ;
  this->succ = _3;
  _4 = D.205507->adj;
  this->adj = _4;
  _5 = &this->stack;
  _6 = &D.205507->stack;
  std::vector<int>::vector (_5, _6);
  return;

}



;; Function std::vector<int>::vector (_ZNSt6vectorIiSaIiEEC2ERKS1_, funcdef_no=8931, decl_uid=167731, cgraph_uid=5563, symbol_order=6353)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<int>::vector (struct vector * const this, const struct vector & __x)
{
  int * D.259617;
  struct __normal_iterator D.259614;
  struct __normal_iterator D.259613;
  struct allocator D.232457;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.167768;
  _2 = &__x->D.167768;
  _3 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_2);
  D.232457 = __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<int>::size (__x);
  std::_Vector_base<int, std::allocator<int> >::_Vector_base (_1, _4, &D.232457);

  <bb 3> :
  std::allocator<int>::~allocator (&D.232457);
  D.232457 = {CLOBBER};
  _5 = &this->D.167768;
  _6 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_5);
  _7 = this->D.167768._M_impl.D.167081._M_start;
  D.259613 = std::vector<int>::end (__x);
  D.259614 = std::vector<int>::begin (__x);
  D.259617 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*, int> (D.259614, D.259613, _7, _6);

  <bb 4> :
  _8 = D.259617;
  this->D.167768._M_impl.D.167081._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<int>::~allocator (&D.232457);
  resx 2

  <bb 6> :
<L1>:
  D.232457 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.167768;
  std::_Vector_base<int, std::allocator<int> >::~_Vector_base (_9);
  resx 5

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaIiEiE17_S_select_on_copyERKS1_, funcdef_no=9776, decl_uid=166943, cgraph_uid=6408, symbol_order=7198)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_, funcdef_no=10343, decl_uid=166908, cgraph_uid=6975, symbol_order=7769)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<int>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_base (_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_, funcdef_no=9779, decl_uid=167168, cgraph_uid=6411, symbol_order=7201)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<int, std::allocator<int> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<int, std::allocator<int> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_, funcdef_no=10345, decl_uid=167073, cgraph_uid=6977, symbol_order=7771)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<int>::allocator (this, __a);
  _1 = &this->D.167081;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_M_create_storage (_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm, funcdef_no=10347, decl_uid=167092, cgraph_uid=6979, symbol_order=7773)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  int * D.259624;

  <bb 2> :
  D.259624 = std::_Vector_base<int, std::allocator<int> >::_M_allocate (this, __n);
  _1 = D.259624;
  this->_M_impl.D.167081._M_start = _1;
  _2 = this->_M_impl.D.167081._M_start;
  this->_M_impl.D.167081._M_finish = _2;
  _3 = this->_M_impl.D.167081._M_start;
  _4 = __n * 4;
  _5 = _3 + _4;
  this->_M_impl.D.167081._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev, funcdef_no=6873, decl_uid=167128, cgraph_uid=3501, symbol_order=4279)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<int>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<int>::~allocator (_ZNSaIiED2Ev, funcdef_no=7931, decl_uid=166861, cgraph_uid=4563, symbol_order=5349)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<int>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIiED2Ev, funcdef_no=8922, decl_uid=166790, cgraph_uid=5554, symbol_order=6344)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<int>::end (_ZNKSt6vectorIiSaIiEE3endEv, funcdef_no=9782, decl_uid=167355, cgraph_uid=6414, symbol_order=7204)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<int>::end (const struct vector * const this)
{
  struct const_iterator D.239507;
  struct const_iterator D.259625;

  <bb 2> :
  _1 = &this->D.167768._M_impl.D.167081._M_finish;
  __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::__normal_iterator (&D.239507, _1);
  D.259625 = D.239507;
  D.239507 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.259625;

}



;; Function __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_, funcdef_no=10349, decl_uid=232426, cgraph_uid=6981, symbol_order=7775)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::__normal_iterator (struct __normal_iterator * const this, const int * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<int>::begin (_ZNKSt6vectorIiSaIiEE5beginEv, funcdef_no=9781, decl_uid=167351, cgraph_uid=6413, symbol_order=7203)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<int>::begin (const struct vector * const this)
{
  struct const_iterator D.239505;
  struct const_iterator D.259628;

  <bb 2> :
  _1 = &this->D.167768._M_impl.D.167081._M_start;
  __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::__normal_iterator (&D.239505, _1);
  D.259628 = D.239505;
  D.239505 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.259628;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*, int> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E, funcdef_no=9783, decl_uid=232446, cgraph_uid=6415, symbol_order=7205)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*, int> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result, struct allocator & D.239511)
{
  int * D.259633;
  int * D.259631;

  <bb 2> :
  D.259633 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (__first, __last, __result);
  D.259631 = D.259633;

  <bb 3> :
<L0>:
  return D.259631;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_, funcdef_no=10351, decl_uid=239513, cgraph_uid=6984, symbol_order=7778)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result)
{
  int * D.259636;
  const bool __assignable;
  int * D.259634;

  <bb 2> :
  __assignable = 1;
  D.259636 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (__first, __last, __result);
  D.259634 = D.259636;

  <bb 3> :
<L0>:
  return D.259634;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_, funcdef_no=10775, decl_uid=244144, cgraph_uid=7407, symbol_order=8201)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result)
{
  int * D.259639;
  int * D.259637;

  <bb 2> :
  D.259639 = std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (__first, __last, __result);
  D.259637 = D.259639;

  <bb 3> :
<L0>:
  return D.259637;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_, funcdef_no=10940, decl_uid=246382, cgraph_uid=7572, symbol_order=8368)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result)
{
  int * D.259644;
  struct __normal_iterator D.259642;
  struct __normal_iterator D.259641;
  int * D.259640;

  <bb 2> :
  D.259641 = std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (__last);
  D.259642 = std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (__first);
  D.259644 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (D.259642, D.259641, __result);
  D.259640 = D.259644;

  <bb 3> :
<L0>:
  return D.259640;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_, funcdef_no=10353, decl_uid=239562, cgraph_uid=6985, symbol_order=7779)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.259645;

  <bb 2> :
  D.259645 = __it;

  <bb 3> :
<L0>:
  return D.259645;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_, funcdef_no=11013, decl_uid=247264, cgraph_uid=7645, symbol_order=8441)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result)
{
  int * D.259649;
  int * D.259647;

  <bb 2> :
  __result.2163_1 = __result;
  _2 = std::__niter_base<int*> (__result.2163_1);
  _3 = std::__niter_base<const int*, std::vector<int> > (__last);
  _4 = std::__niter_base<const int*, std::vector<int> > (__first);
  D.259649 = std::__copy_move_a1<false, const int*, int*> (_4, _3, _2);
  _5 = D.259649;
  D.259647 = std::__niter_wrap<int*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.259647;

}



;; Function std::__niter_base<const int*, std::vector<int> > (_ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10776, decl_uid=244159, cgraph_uid=7408, symbol_order=8202)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const int * std::__niter_base<const int*, std::vector<int> > (struct __normal_iterator __it)
{
  const int * D.259650;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::base (&__it);
  D.259650 = *_1;

  <bb 3> :
<L0>:
  return D.259650;

}



;; Function __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv, funcdef_no=10941, decl_uid=232413, cgraph_uid=7573, symbol_order=8369)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const int * const & __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::base (const struct __normal_iterator * const this)
{
  const int * const & D.259652;

  <bb 2> :
  D.259652 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.259652;

}



;; Function std::__copy_move_a1<false, const int*, int*> (_ZSt14__copy_move_a1ILb0EPKiPiET1_T0_S4_S3_, funcdef_no=10778, decl_uid=244313, cgraph_uid=7410, symbol_order=8204)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a1<false, const int*, int*> (const int * __first, const int * __last, int * __result)
{
  int * D.259656;
  int * D.259654;

  <bb 2> :
  D.259656 = std::__copy_move_a2<false, const int*, int*> (__first, __last, __result);
  D.259654 = D.259656;

  <bb 3> :
<L0>:
  return D.259654;

}



;; Function std::__copy_move_a2<false, const int*, int*> (_ZSt14__copy_move_a2ILb0EPKiPiET1_T0_S4_S3_, funcdef_no=10942, decl_uid=246396, cgraph_uid=7574, symbol_order=8370)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a2<false, const int*, int*> (const int * __first, const int * __last, int * __result)
{
  int * D.259657;

  <bb 2> :
  D.259657 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.259657;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_, funcdef_no=11014, decl_uid=247285, cgraph_uid=7646, symbol_order=8442)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
int * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int> (const int * __first, const int * __last, int * __result)
{
  const ptrdiff_t _Num;
  int * D.259662;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 4;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.2164_2 = (long unsigned int) _Num;
  _3 = _Num.2164_2 * 4;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.2165_4 = (long unsigned int) _Num;
  _5 = _Num.2165_4 * 4;
  D.259662 = __result + _5;

  <bb 5> :
<L3>:
  return D.259662;

}



;; Function std::__niter_wrap<int*> (_ZSt12__niter_wrapIPiET_RKS1_S1_, funcdef_no=10783, decl_uid=244356, cgraph_uid=7415, symbol_order=8209)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__niter_wrap<int*> (int * const & D.246418, int * __res)
{
  int * D.259664;

  <bb 2> :
  D.259664 = __res;

  <bb 3> :
<L0>:
  return D.259664;

}



;; Function std::_Vector_base<int, std::allocator<int> >::~_Vector_base (_ZNSt12_Vector_baseIiSaIiEED2Ev, funcdef_no=7934, decl_uid=167191, cgraph_uid=4566, symbol_order=5352)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.167081._M_end_of_storage;
  _2 = this->_M_impl.D.167081._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 4;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.167081._M_start;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function Graph::operator= (_ZN5GraphaSERKS_, funcdef_no=7943, decl_uid=218183, cgraph_uid=4574, symbol_order=5360)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct Graph & Graph::operator= (struct Graph * const this, const struct Graph & D.218184)
{
  struct Graph & D.259666;

  <bb 2> :
  _1 = D.218184->V;
  this->V = _1;
  _2 = D.218184->end;
  this->end = _2;
  _3 = D.218184->succ;
  this->succ = _3;
  _4 = D.218184->adj;
  this->adj = _4;
  _5 = &D.218184->stack;
  _6 = &this->stack;
  std::vector<int>::operator= (_6, _5);
  D.259666 = this;

  <bb 3> :
<L0>:
  return D.259666;

}



;; Function std::vector<int>::operator= (_ZNSt6vectorIiSaIiEEaSERKS1_, funcdef_no=8933, decl_uid=167316, cgraph_uid=5567, symbol_order=6357)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<int>::operator= (struct vector * const this, const struct vector & __x)
{
  int * D.259701;
  int * __tmp;
  const size_type __xlen;
  struct vector & D.259699;
  struct __normal_iterator D.259696;
  struct __normal_iterator D.259695;
  struct __normal_iterator D.259694;
  struct __normal_iterator D.259693;
  struct __normal_iterator D.259692;
  bool retval.2170;
  struct __normal_iterator D.259687;
  struct __normal_iterator D.259686;
  bool retval.2169;
  bool iftmp.2168;
  bool retval.2167;
  bool retval.2166;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.2166 = __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_propagate_on_copy_assign ();
  if (retval.2166 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.167768;
  _4 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.167768;
  _6 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2168 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.2168 = 0;

  <bb 8> :
  retval.2167 = iftmp.2168;
  if (retval.2167 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<int>::clear (this);
  _8 = &this->D.167768;
  _9 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  _10 = this->D.167768._M_impl.D.167081._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 4;
  _13 = (long unsigned int) _12;
  _14 = this->D.167768._M_impl.D.167081._M_start;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_8, _14, _13);
  this->D.167768._M_impl.D.167081._M_start = 0B;
  this->D.167768._M_impl.D.167081._M_finish = 0B;
  this->D.167768._M_impl.D.167081._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.167768;
  _16 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.167768;
  _18 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<int> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<int>::size (__x);
  _19 = std::vector<int>::capacity (this);
  retval.2169 = __xlen > _19;
  if (retval.2169 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.259686 = std::vector<int>::end (__x);
  D.259687 = std::vector<int>::begin (__x);
  D.259701 = std::vector<int>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (this, __xlen, D.259687, D.259686);
  __tmp = D.259701;
  _20 = &this->D.167768;
  _21 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_20);
  _22 = this->D.167768._M_impl.D.167081._M_finish;
  _23 = this->D.167768._M_impl.D.167081._M_start;
  std::_Destroy<int*, int> (_23, _22, _21);
  _24 = &this->D.167768;
  _25 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  _26 = this->D.167768._M_impl.D.167081._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 4;
  _29 = (long unsigned int) _28;
  _30 = this->D.167768._M_impl.D.167081._M_start;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_24, _30, _29);
  this->D.167768._M_impl.D.167081._M_start = __tmp;
  _31 = this->D.167768._M_impl.D.167081._M_start;
  _32 = __xlen * 4;
  _33 = _31 + _32;
  this->D.167768._M_impl.D.167081._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<int>::size (this);
  retval.2170 = __xlen <= _34;
  if (retval.2170 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.167768;
  _36 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_35);
  D.259692 = std::vector<int>::end (this);
  D.259693 = std::vector<int>::begin (this);
  D.259694 = std::vector<int>::end (__x);
  D.259695 = std::vector<int>::begin (__x);
  D.259696 = std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (D.259695, D.259694, D.259693);
  std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int> (D.259696, D.259692, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.167768._M_impl.D.167081._M_start;
  _38 = __x->D.167768._M_impl.D.167081._M_start;
  _39 = std::vector<int>::size (this);
  _40 = _39 * 4;
  _41 = _38 + _40;
  _42 = __x->D.167768._M_impl.D.167081._M_start;
  std::copy<int*, int*> (_42, _41, _37);
  _43 = &this->D.167768;
  _44 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_43);
  _45 = this->D.167768._M_impl.D.167081._M_finish;
  _46 = __x->D.167768._M_impl.D.167081._M_finish;
  _47 = __x->D.167768._M_impl.D.167081._M_start;
  _48 = std::vector<int>::size (this);
  _49 = _48 * 4;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<int*, int*, int> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.167768._M_impl.D.167081._M_start;
  _52 = __xlen * 4;
  _53 = _51 + _52;
  this->D.167768._M_impl.D.167081._M_finish = _53;

  <bb 17> :
  D.259699 = this;

  <bb 18> :
<L19>:
  return D.259699;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaIiEiE27_S_propagate_on_copy_assignEv, funcdef_no=8934, decl_uid=166948, cgraph_uid=5565, symbol_order=6355)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_propagate_on_copy_assign ()
{
  bool D.259702;

  <bb 2> :
  D.259702 = 0;

  <bb 3> :
<L0>:
  return D.259702;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaIiEiE15_S_always_equalEv, funcdef_no=8935, decl_uid=166951, cgraph_uid=5566, symbol_order=6356)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_always_equal ()
{
  bool D.259704;

  <bb 2> :
  D.259704 = 1;

  <bb 3> :
<L0>:
  return D.259704;

}



;; Function std::operator!= (_ZStneRKSaIiES1_, funcdef_no=9784, decl_uid=166834, cgraph_uid=6416, symbol_order=7206)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.239530, const struct allocator & D.239531)
{
  bool D.259706;

  <bb 2> :
  D.259706 = 0;

  <bb 3> :
<L0>:
  return D.259706;

}



;; Function std::__alloc_on_copy<std::allocator<int> > (_ZSt15__alloc_on_copyISaIiEEvRT_RKS1_, funcdef_no=9785, decl_uid=232483, cgraph_uid=6417, symbol_order=7207)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<int> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<int>::capacity (_ZNKSt6vectorIiSaIiEE8capacityEv, funcdef_no=9786, decl_uid=167386, cgraph_uid=6418, symbol_order=7208)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<int>::capacity (const struct vector * const this)
{
  size_type D.259708;

  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  _2 = this->D.167768._M_impl.D.167081._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 4;
  D.259708 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.259708;

}



;; Function std::vector<int>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (_ZNSt6vectorIiSaIiEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKiS1_EEEEPimT_S9_, funcdef_no=9787, decl_uid=232490, cgraph_uid=6419, symbol_order=7209)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
int * std::vector<int>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  int * D.259712;
  int * __result;
  int * D.259710;

  <bb 2> :
  _1 = &this->D.167768;
  D.259712 = std::_Vector_base<int, std::allocator<int> >::_M_allocate (_1, __n);
  __result = D.259712;
  _2 = &this->D.167768;
  _3 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*, int> (__first, __last, __result, _3);

  <bb 3> :
  D.259710 = __result;

  <bb 4> :
<L0>:
  return D.259710;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.167768;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET0_T_SB_SA_, funcdef_no=9788, decl_uid=232498, cgraph_uid=6420, symbol_order=7210)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.259718;
  struct __normal_iterator D.259717;
  struct __normal_iterator D.259716;

  <bb 2> :
  D.259717 = std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (__last);
  D.259718 = std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (__first);
  D.259716 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (D.259718, D.259717, __result);

  <bb 3> :
<L0>:
  return D.259716;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET1_T0_SB_SA_, funcdef_no=10354, decl_uid=239568, cgraph_uid=6987, symbol_order=7781)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  int * D.259722;
  struct __normal_iterator D.259720;

  <bb 2> :
  _1 = std::__niter_base<int*, std::vector<int> > (__result);
  _2 = std::__niter_base<const int*, std::vector<int> > (__last);
  _3 = std::__niter_base<const int*, std::vector<int> > (__first);
  D.259722 = std::__copy_move_a1<false, const int*, int*> (_3, _2, _1);
  _4 = D.259722;
  D.259720 = std::__niter_wrap<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int*> (__result, _4);

  <bb 3> :
<L0>:
  return D.259720;

}



;; Function std::__niter_base<int*, std::vector<int> > (_ZSt12__niter_baseIPiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE, funcdef_no=10777, decl_uid=244310, cgraph_uid=7409, symbol_order=8203)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__niter_base<int*, std::vector<int> > (struct __normal_iterator __it)
{
  int * D.259723;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (&__it);
  D.259723 = *_1;

  <bb 3> :
<L0>:
  return D.259723;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES2_ET_S7_T0_, funcdef_no=10779, decl_uid=244317, cgraph_uid=7411, symbol_order=8205)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int*> (struct __normal_iterator __from, int * __res)
{
  struct __normal_iterator D.259725;

  <bb 2> :
  _1 = std::__niter_base<int*, std::vector<int> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 4;
  D.259725 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.259725;

}



;; Function __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl, funcdef_no=10943, decl_uid=211398, cgraph_uid=7575, symbol_order=8371)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  int * const D.247291;
  struct __normal_iterator D.247292;
  struct __normal_iterator D.259727;

  <bb 2> :
  _1 = this->_M_current;
  __n.2171_2 = (long unsigned int) __n;
  _3 = __n.2171_2 * 4;
  _4 = _1 + _3;
  D.247291 = _4;
  __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (&D.247292, &D.247291);
  D.259727 = D.247292;
  D.247292 = {CLOBBER};
  D.247291 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.259727;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RSaIT0_E, funcdef_no=9789, decl_uid=232504, cgraph_uid=6421, symbol_order=7211)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.239597)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_, funcdef_no=10356, decl_uid=239599, cgraph_uid=6988, symbol_order=7782)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEEvT_S9_, funcdef_no=10780, decl_uid=244341, cgraph_uid=7412, symbol_order=8206)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (struct __normal_iterator D.246405, struct __normal_iterator D.246406)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<int*, int*> (_ZSt4copyIPiS0_ET0_T_S2_S1_, funcdef_no=9790, decl_uid=232512, cgraph_uid=6422, symbol_order=7212)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::copy<int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.259733;
  int * D.259731;

  <bb 2> :
  _1 = std::__miter_base<int*> (__last);
  _2 = std::__miter_base<int*> (__first);
  D.259733 = std::__copy_move_a<false, int*, int*> (_2, _1, __result);
  D.259731 = D.259733;

  <bb 3> :
<L0>:
  return D.259731;

}



;; Function std::__miter_base<int*> (_ZSt12__miter_baseIPiET_S1_, funcdef_no=10357, decl_uid=239615, cgraph_uid=6989, symbol_order=7783)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__miter_base<int*> (int * __it)
{
  int * D.259734;

  <bb 2> :
  D.259734 = __it;

  <bb 3> :
<L0>:
  return D.259734;

}



;; Function std::__copy_move_a<false, int*, int*> (_ZSt13__copy_move_aILb0EPiS0_ET1_T0_S2_S1_, funcdef_no=10358, decl_uid=239617, cgraph_uid=6990, symbol_order=7784)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a<false, int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.259738;
  int * D.259736;

  <bb 2> :
  __result.2172_1 = __result;
  _2 = std::__niter_base<int*> (__result.2172_1);
  _3 = std::__niter_base<int*> (__last);
  _4 = std::__niter_base<int*> (__first);
  D.259738 = std::__copy_move_a1<false, int*, int*> (_4, _3, _2);
  _5 = D.259738;
  D.259736 = std::__niter_wrap<int*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.259736;

}



;; Function std::__copy_move_a1<false, int*, int*> (_ZSt14__copy_move_a1ILb0EPiS0_ET1_T0_S2_S1_, funcdef_no=10782, decl_uid=244352, cgraph_uid=7414, symbol_order=8208)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a1<false, int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.259741;
  int * D.259739;

  <bb 2> :
  D.259741 = std::__copy_move_a2<false, int*, int*> (__first, __last, __result);
  D.259739 = D.259741;

  <bb 3> :
<L0>:
  return D.259739;

}



;; Function std::__copy_move_a2<false, int*, int*> (_ZSt14__copy_move_a2ILb0EPiS0_ET1_T0_S2_S1_, funcdef_no=10944, decl_uid=246414, cgraph_uid=7576, symbol_order=8372)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a2<false, int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.259742;

  <bb 2> :
  D.259742 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.259742;

}



;; Function std::__uninitialized_copy_a<int*, int*, int> (_ZSt22__uninitialized_copy_aIPiS0_iET0_T_S2_S1_RSaIT1_E, funcdef_no=9791, decl_uid=232516, cgraph_uid=6423, symbol_order=7213)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__uninitialized_copy_a<int*, int*, int> (int * __first, int * __last, int * __result, struct allocator & D.239624)
{
  int * D.259746;
  int * D.259744;

  <bb 2> :
  D.259746 = std::uninitialized_copy<int*, int*> (__first, __last, __result);
  D.259744 = D.259746;

  <bb 3> :
<L0>:
  return D.259744;

}



;; Function std::uninitialized_copy<int*, int*> (_ZSt18uninitialized_copyIPiS0_ET0_T_S2_S1_, funcdef_no=10359, decl_uid=239626, cgraph_uid=6991, symbol_order=7785)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::uninitialized_copy<int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.259749;
  const bool __assignable;
  int * D.259747;

  <bb 2> :
  __assignable = 1;
  D.259749 = std::__uninitialized_copy<true>::__uninit_copy<int*, int*> (__first, __last, __result);
  D.259747 = D.259749;

  <bb 3> :
<L0>:
  return D.259747;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<int*, int*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPiS2_EET0_T_S4_S3_, funcdef_no=10784, decl_uid=244390, cgraph_uid=7416, symbol_order=8210)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__uninitialized_copy<true>::__uninit_copy<int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.259752;
  int * D.259750;

  <bb 2> :
  D.259752 = std::copy<int*, int*> (__first, __last, __result);
  D.259750 = D.259752;

  <bb 3> :
<L0>:
  return D.259750;

}



;; Function hash_map<tree_node*, var_points_to>::~hash_map (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6885, decl_uid=205697, cgraph_uid=3516, symbol_order=4294)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, var_points_to>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7945, decl_uid=204392, cgraph_uid=4577, symbol_order=5363)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259766;
  bool D.259765;
  size_t i;
  bool iftmp.2174;
  bool retval.2173;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 40;
  _4 = _2 + _3;
  D.259765 = hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259765;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 40;
  _9 = _7 + _8;
  D.259766 = hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259766;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2174 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2174 = 0;

  <bb 7> :
  retval.2173 = iftmp.2174;
  if (retval.2173 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 40;
  _14 = _12 + _13;
  hash_map<tree_node*, var_points_to>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8936, decl_uid=204345, cgraph_uid=5568, symbol_order=6358)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.259769;
  bool D.259767;

  <bb 2> :
  D.259769 = hash_map<tree_node*, var_points_to>::hash_entry::is_empty (v);
  D.259767 = D.259769;

  <bb 3> :
<L0>:
  return D.259767;

}



;; Function hash_map<tree_node*, var_points_to>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=9792, decl_uid=204175, cgraph_uid=6424, symbol_order=7214)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, var_points_to>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.259770;

  <bb 2> :
  D.259770 = simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_empty<hash_map<tree_node*, var_points_to>::hash_entry> (e);

  <bb 3> :
<L0>:
  return D.259770;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_empty<hash_map<tree_node*, var_points_to>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE13var_points_toE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10360, decl_uid=239632, cgraph_uid=6992, symbol_order=7786)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_empty<hash_map<tree_node*, var_points_to>::hash_entry> (const struct hash_entry & entry)
{
  bool D.259772;

  <bb 2> :
  _1 = entry->m_key;
  D.259772 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.259772;

}



;; Function hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8937, decl_uid=204343, cgraph_uid=5569, symbol_order=6359)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.259776;
  bool D.259774;

  <bb 2> :
  D.259776 = hash_map<tree_node*, var_points_to>::hash_entry::is_deleted (v);
  D.259774 = D.259776;

  <bb 3> :
<L0>:
  return D.259774;

}



;; Function hash_map<tree_node*, var_points_to>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9793, decl_uid=204170, cgraph_uid=6425, symbol_order=7215)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, var_points_to>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.259779;
  bool D.259777;

  <bb 2> :
  D.259779 = simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_deleted<hash_map<tree_node*, var_points_to>::hash_entry> (e);
  D.259777 = D.259779;

  <bb 3> :
<L0>:
  return D.259777;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_deleted<hash_map<tree_node*, var_points_to>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE13var_points_toE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10361, decl_uid=239636, cgraph_uid=6993, symbol_order=7787)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_deleted<hash_map<tree_node*, var_points_to>::hash_entry> (const struct hash_entry & entry)
{
  bool D.259780;

  <bb 2> :
  _1 = entry->m_key;
  D.259780 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.259780;

}



;; Function hash_map<tree_node*, var_points_to>::hash_entry::remove (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8938, decl_uid=204166, cgraph_uid=5570, symbol_order=6360)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, var_points_to>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::remove<hash_map<tree_node*, var_points_to>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::remove<hash_map<tree_node*, var_points_to>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE13var_points_toE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9794, decl_uid=232532, cgraph_uid=6426, symbol_order=7216)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::remove<hash_map<tree_node*, var_points_to>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  var_points_to::~var_points_to (_2);
  return;

}



;; Function xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8939, decl_uid=218251, cgraph_uid=5571, symbol_order=6361)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_map<tree_node*, gimple_array>::~hash_map (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6888, decl_uid=205713, cgraph_uid=3519, symbol_order=4297)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, gimple_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7948, decl_uid=190416, cgraph_uid=4580, symbol_order=5366)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259796;
  bool D.259795;
  size_t i;
  bool iftmp.2176;
  bool retval.2175;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 56;
  _4 = _2 + _3;
  D.259795 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259795;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 56;
  _9 = _7 + _8;
  D.259796 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259796;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2176 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2176 = 0;

  <bb 7> :
  retval.2175 = iftmp.2176;
  if (retval.2175 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 56;
  _14 = _12 + _13;
  hash_map<tree_node*, gimple_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8942, decl_uid=190193, cgraph_uid=5574, symbol_order=6364)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, gimple_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::remove<hash_map<tree_node*, gimple_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::remove<hash_map<tree_node*, gimple_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9796, decl_uid=232542, cgraph_uid=6428, symbol_order=7218)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::remove<hash_map<tree_node*, gimple_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  *_2 = {CLOBBER};
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::~hash_map (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6891, decl_uid=205729, cgraph_uid=3522, symbol_order=4300)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7951, decl_uid=196874, cgraph_uid=4583, symbol_order=5369)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259810;
  bool D.259809;
  size_t i;
  bool iftmp.2178;
  bool retval.2177;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 168;
  _4 = _2 + _3;
  D.259809 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259809;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 168;
  _9 = _7 + _8;
  D.259810 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259810;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2178 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2178 = 0;

  <bb 7> :
  retval.2177 = iftmp.2178;
  if (retval.2177 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 168;
  _14 = _12 + _13;
  hash_map<basic_block_def*, symbolicinfo>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::remove (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8946, decl_uid=196648, cgraph_uid=5578, symbol_order=6368)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::remove<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::remove<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9798, decl_uid=232552, cgraph_uid=6430, symbol_order=7220)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::remove<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<basic_block_def*>::remove (_1);
  _2 = &entry->m_value;
  symbolicinfo::~symbolicinfo (_2);
  return;

}



;; Function ggc_remove<basic_block_def*>::remove (_ZN10ggc_removeIP15basic_block_defE6removeERS1_, funcdef_no=10364, decl_uid=196518, cgraph_uid=6996, symbol_order=7790)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ggc_remove<basic_block_def*>::remove (struct basic_block_def * & D.244402)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function hash_map<cgraph_node*, Graph>::~hash_map (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6894, decl_uid=205745, cgraph_uid=3525, symbol_order=4303)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7954, decl_uid=204815, cgraph_uid=4586, symbol_order=5372)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259824;
  bool D.259823;
  size_t i;
  bool iftmp.2180;
  bool retval.2179;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 56;
  _4 = _2 + _3;
  D.259823 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259823;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 56;
  _9 = _7 + _8;
  D.259824 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259824;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2180 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2180 = 0;

  <bb 7> :
  retval.2179 = iftmp.2180;
  if (retval.2179 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 56;
  _14 = _12 + _13;
  hash_map<cgraph_node*, Graph>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::remove (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8950, decl_uid=204589, cgraph_uid=5582, symbol_order=6372)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::remove<hash_map<cgraph_node*, Graph>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::remove<hash_map<cgraph_node*, Graph>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9800, decl_uid=232562, cgraph_uid=6432, symbol_order=7222)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::remove<hash_map<cgraph_node*, Graph>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<cgraph_node*>::remove (_1);
  _2 = &entry->m_value;
  Graph::~Graph (_2);
  return;

}



;; Function ggc_remove<cgraph_node*>::remove (_ZN10ggc_removeIP11cgraph_nodeE6removeERS1_, funcdef_no=10366, decl_uid=204459, cgraph_uid=6998, symbol_order=7792)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ggc_remove<cgraph_node*>::remove (struct cgraph_node * & D.244406)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function hash_map<tree_node*, function_return_array>::~hash_map (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6897, decl_uid=205761, cgraph_uid=3528, symbol_order=4306)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7957, decl_uid=189887, cgraph_uid=4589, symbol_order=5375)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259838;
  bool D.259837;
  size_t i;
  bool iftmp.2182;
  bool retval.2181;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 40;
  _4 = _2 + _3;
  D.259837 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259837;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 40;
  _9 = _7 + _8;
  D.259838 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259838;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2182 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2182 = 0;

  <bb 7> :
  retval.2181 = iftmp.2182;
  if (retval.2181 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 40;
  _14 = _12 + _13;
  hash_map<tree_node*, function_return_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8954, decl_uid=189661, cgraph_uid=5586, symbol_order=6376)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::remove<hash_map<tree_node*, function_return_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::remove<hash_map<tree_node*, function_return_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9802, decl_uid=232572, cgraph_uid=6434, symbol_order=7224)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::remove<hash_map<tree_node*, function_return_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_return_array::~function_return_array (_2);
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::~hash_map (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6900, decl_uid=205777, cgraph_uid=3531, symbol_order=4309)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7960, decl_uid=191048, cgraph_uid=4592, symbol_order=5378)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259852;
  bool D.259851;
  size_t i;
  bool iftmp.2184;
  bool retval.2183;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 40;
  _4 = _2 + _3;
  D.259851 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259851;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 40;
  _9 = _7 + _8;
  D.259852 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259852;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2184 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2184 = 0;

  <bb 7> :
  retval.2183 = iftmp.2184;
  if (retval.2183 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 40;
  _14 = _12 + _13;
  hash_map<tree_node*, function_assign_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8958, decl_uid=190822, cgraph_uid=5590, symbol_order=6380)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::remove<hash_map<tree_node*, function_assign_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::remove<hash_map<tree_node*, function_assign_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9804, decl_uid=232582, cgraph_uid=6436, symbol_order=7226)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::remove<hash_map<tree_node*, function_assign_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_assign_array::~function_assign_array (_2);
  return;

}



;; Function hash_map<tree_node*, pthread_attr_array>::~hash_map (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6903, decl_uid=205793, cgraph_uid=3534, symbol_order=4312)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, pthread_attr_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7963, decl_uid=194974, cgraph_uid=4595, symbol_order=5381)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259866;
  bool D.259865;
  size_t i;
  bool iftmp.2186;
  bool retval.2185;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 32;
  _4 = _2 + _3;
  D.259865 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259865;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 32;
  _9 = _7 + _8;
  D.259866 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259866;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2186 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2186 = 0;

  <bb 7> :
  retval.2185 = iftmp.2186;
  if (retval.2185 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 32;
  _14 = _12 + _13;
  hash_map<tree_node*, pthread_attr_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8962, decl_uid=194751, cgraph_uid=5594, symbol_order=6384)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, pthread_attr_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::remove<hash_map<tree_node*, pthread_attr_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::remove<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9806, decl_uid=232592, cgraph_uid=6438, symbol_order=7228)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::remove<hash_map<tree_node*, pthread_attr_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  *_2 = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::~hash_map (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6906, decl_uid=205809, cgraph_uid=3537, symbol_order=4315)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7966, decl_uid=193603, cgraph_uid=4598, symbol_order=5384)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259880;
  bool D.259879;
  size_t i;
  bool iftmp.2188;
  bool retval.2187;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 32;
  _4 = _2 + _3;
  D.259879 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259879;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 32;
  _9 = _7 + _8;
  D.259880 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259880;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2188 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2188 = 0;

  <bb 7> :
  retval.2187 = iftmp.2188;
  if (retval.2187 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 32;
  _14 = _12 + _13;
  hash_map<tree_node*, function_pthread_detched_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8966, decl_uid=193377, cgraph_uid=5598, symbol_order=6388)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::remove<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::remove<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9808, decl_uid=232602, cgraph_uid=6440, symbol_order=7230)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::remove<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_pthread_detched_array::~function_pthread_detched_array (_2);
  return;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::~hash_map (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6909, decl_uid=205825, cgraph_uid=3540, symbol_order=4318)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7969, decl_uid=194079, cgraph_uid=4601, symbol_order=5387)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259894;
  bool D.259893;
  size_t i;
  bool iftmp.2190;
  bool retval.2189;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 32;
  _4 = _2 + _3;
  D.259893 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259893;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 32;
  _9 = _7 + _8;
  D.259894 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259894;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2190 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2190 = 0;

  <bb 7> :
  retval.2189 = iftmp.2190;
  if (retval.2189 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 32;
  _14 = _12 + _13;
  hash_map<tree_node*, function_pthread_exit_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8970, decl_uid=193853, cgraph_uid=5602, symbol_order=6392)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::remove<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::remove<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9810, decl_uid=232612, cgraph_uid=6442, symbol_order=7232)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::remove<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_pthread_exit_array::~function_pthread_exit_array (_2);
  return;

}



;; Function hash_map<tree_node*, function_path_array>::~hash_map (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6912, decl_uid=205841, cgraph_uid=3543, symbol_order=4321)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7972, decl_uid=192249, cgraph_uid=4604, symbol_order=5390)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259908;
  bool D.259907;
  size_t i;
  bool iftmp.2192;
  bool retval.2191;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 40;
  _4 = _2 + _3;
  D.259907 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259907;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 40;
  _9 = _7 + _8;
  D.259908 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259908;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2192 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2192 = 0;

  <bb 7> :
  retval.2191 = iftmp.2192;
  if (retval.2191 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 40;
  _14 = _12 + _13;
  hash_map<tree_node*, function_path_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8974, decl_uid=192023, cgraph_uid=5606, symbol_order=6396)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::remove<hash_map<tree_node*, function_path_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::remove<hash_map<tree_node*, function_path_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9812, decl_uid=232622, cgraph_uid=6444, symbol_order=7234)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::remove<hash_map<tree_node*, function_path_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_path_array::~function_path_array (_2);
  return;

}



;; Function hash_map<tree_node*, function_free_array>::~hash_map (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6915, decl_uid=205857, cgraph_uid=3546, symbol_order=4324)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7975, decl_uid=192731, cgraph_uid=4607, symbol_order=5393)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259922;
  bool D.259921;
  size_t i;
  bool iftmp.2194;
  bool retval.2193;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 32;
  _4 = _2 + _3;
  D.259921 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259921;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 32;
  _9 = _7 + _8;
  D.259922 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259922;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2194 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2194 = 0;

  <bb 7> :
  retval.2193 = iftmp.2194;
  if (retval.2193 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 32;
  _14 = _12 + _13;
  hash_map<tree_node*, function_free_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8978, decl_uid=192505, cgraph_uid=5610, symbol_order=6400)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::remove<hash_map<tree_node*, function_free_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::remove<hash_map<tree_node*, function_free_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9814, decl_uid=232632, cgraph_uid=6446, symbol_order=7236)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::remove<hash_map<tree_node*, function_free_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_free_array::~function_free_array (_2);
  return;

}



;; Function hash_map<tree_node*, function_graph_array>::~hash_map (_ZN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6918, decl_uid=205873, cgraph_uid=3549, symbol_order=4327)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_graph_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7978, decl_uid=205193, cgraph_uid=4610, symbol_order=5396)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259936;
  bool D.259935;
  size_t i;
  bool iftmp.2196;
  bool retval.2195;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 16;
  _4 = _2 + _3;
  D.259935 = hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259935;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 16;
  _9 = _7 + _8;
  D.259936 = hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259936;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2196 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2196 = 0;

  <bb 7> :
  retval.2195 = iftmp.2196;
  if (retval.2195 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 16;
  _14 = _12 + _13;
  hash_map<tree_node*, function_graph_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8980, decl_uid=205146, cgraph_uid=5612, symbol_order=6402)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.259939;
  bool D.259937;

  <bb 2> :
  D.259939 = hash_map<tree_node*, function_graph_array>::hash_entry::is_empty (v);
  D.259937 = D.259939;

  <bb 3> :
<L0>:
  return D.259937;

}



;; Function hash_map<tree_node*, function_graph_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=9815, decl_uid=204979, cgraph_uid=6447, symbol_order=7237)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_graph_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.259940;

  <bb 2> :
  D.259940 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_empty<hash_map<tree_node*, function_graph_array>::hash_entry> (e);

  <bb 3> :
<L0>:
  return D.259940;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_empty<hash_map<tree_node*, function_graph_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE20function_graph_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10374, decl_uid=239702, cgraph_uid=7006, symbol_order=7800)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_empty<hash_map<tree_node*, function_graph_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.259942;

  <bb 2> :
  _1 = entry->m_key;
  D.259942 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.259942;

}



;; Function hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8981, decl_uid=205144, cgraph_uid=5613, symbol_order=6403)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.259946;
  bool D.259944;

  <bb 2> :
  D.259946 = hash_map<tree_node*, function_graph_array>::hash_entry::is_deleted (v);
  D.259944 = D.259946;

  <bb 3> :
<L0>:
  return D.259944;

}



;; Function hash_map<tree_node*, function_graph_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9816, decl_uid=204974, cgraph_uid=6448, symbol_order=7238)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_graph_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.259949;
  bool D.259947;

  <bb 2> :
  D.259949 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_deleted<hash_map<tree_node*, function_graph_array>::hash_entry> (e);
  D.259947 = D.259949;

  <bb 3> :
<L0>:
  return D.259947;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_deleted<hash_map<tree_node*, function_graph_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE20function_graph_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10375, decl_uid=239706, cgraph_uid=7007, symbol_order=7801)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_deleted<hash_map<tree_node*, function_graph_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.259950;

  <bb 2> :
  _1 = entry->m_key;
  D.259950 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.259950;

}



;; Function hash_map<tree_node*, function_graph_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8982, decl_uid=204970, cgraph_uid=5614, symbol_order=6404)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_graph_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::remove<hash_map<tree_node*, function_graph_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::remove<hash_map<tree_node*, function_graph_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE20function_graph_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9817, decl_uid=232642, cgraph_uid=6449, symbol_order=7239)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::remove<hash_map<tree_node*, function_graph_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  *_2 = {CLOBBER};
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8983, decl_uid=218515, cgraph_uid=5615, symbol_order=6405)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function std::__cxx11::basic_string<char>::~basic_string (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev, funcdef_no=7294, decl_uid=126289, cgraph_uid=3926, symbol_order=4709)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::basic_string<char>::~basic_string (struct basic_string * const this)
{
  <bb 2> :
  std::__cxx11::basic_string<char>::_M_dispose (this);
  _1 = &this->_M_dataplus;
  std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider (_1);
  *this = {CLOBBER};
  return;

}



;; Function Graph::~Graph (_ZN5GraphD2Ev, funcdef_no=6882, decl_uid=205672, cgraph_uid=3513, symbol_order=4291)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void Graph::~Graph (struct Graph * const this)
{
  <bb 2> :
  _1 = &this->stack;
  std::vector<int>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<int>::~vector (_ZNSt6vectorIiSaIiEED2Ev, funcdef_no=7937, decl_uid=167765, cgraph_uid=4569, symbol_order=5355)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.167768;
  _2 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_1);
  _3 = this->D.167768._M_impl.D.167081._M_finish;
  _4 = this->D.167768._M_impl.D.167081._M_start;
  std::_Destroy<int*, int> (_4, _3, _2);
  _5 = &this->D.167768;
  std::_Vector_base<int, std::allocator<int> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function breakpoint::~breakpoint (_ZN10breakpointD2Ev, funcdef_no=6866, decl_uid=204042, cgraph_uid=3497, symbol_order=4275)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void breakpoint::~breakpoint (struct breakpoint * const this)
{
  <bb 2> :
  _1 = &this->name;
  std::__cxx11::basic_string<char>::~basic_string (_1);
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function var_points_to::~var_points_to (_ZN13var_points_toD2Ev, funcdef_no=6859, decl_uid=203863, cgraph_uid=3490, symbol_order=4268)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void var_points_to::~var_points_to (struct var_points_to * const this)
{
  <bb 2> :
  _1 = &this->may_malloc_path;
  std::vector<std::vector<std::pair<fdecl, unsigned int> > >::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<std::vector<std::pair<fdecl, unsigned int> > >::~vector (_ZNSt6vectorIS_ISt4pairI5fdecljESaIS2_EESaIS4_EED2Ev, funcdef_no=7872, decl_uid=172417, cgraph_uid=4504, symbol_order=5290)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<std::vector<std::pair<fdecl, unsigned int> > >::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.172420;
  _2 = std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_get_Tp_allocator (_1);
  _3 = this->D.172420._M_impl.D.171765._M_finish;
  _4 = this->D.172420._M_impl.D.171765._M_start;
  std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*, std::vector<std::pair<fdecl, unsigned int> > > (_4, _3, _2);
  _5 = &this->D.172420;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_get_Tp_allocator (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv, funcdef_no=8855, decl_uid=171653, cgraph_uid=5487, symbol_order=6277)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.259953;

  <bb 2> :
  D.259953 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.259953;

}



;; Function std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*, std::vector<std::pair<fdecl, unsigned int> > > (_ZSt8_DestroyIPSt6vectorISt4pairI5fdecljESaIS3_EES5_EvT_S7_RSaIT0_E, funcdef_no=8856, decl_uid=217740, cgraph_uid=5490, symbol_order=6280)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*, std::vector<std::pair<fdecl, unsigned int> > > (struct vector * __first, struct vector * __last, struct allocator & D.230623)
{
  <bb 2> :
  std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*> (__first, __last);
  return;

}



;; Function std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*> (_ZSt8_DestroyIPSt6vectorISt4pairI5fdecljESaIS3_EEEvT_S7_, funcdef_no=9728, decl_uid=231520, cgraph_uid=6361, symbol_order=7151)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*> (struct vector * __first, struct vector * __last)
{
  <bb 2> :
  std::_Destroy_aux<false>::__destroy<std::vector<std::pair<fdecl, unsigned int> >*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<false>::__destroy<std::vector<std::pair<fdecl, unsigned int> >*> (_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorISt4pairI5fdecljESaIS5_EEEEvT_S9_, funcdef_no=10313, decl_uid=239276, cgraph_uid=6945, symbol_order=7739)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void std::_Destroy_aux<false>::__destroy<std::vector<std::pair<fdecl, unsigned int> >*> (struct vector * __first, struct vector * __last)
{
  <bb 2> :
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<std::vector<std::pair<fdecl, unsigned int> > > (__first);
  std::_Destroy<std::vector<std::pair<fdecl, unsigned int> > > (_1);
  __first = __first + 24;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



;; Function std::__addressof<std::vector<std::pair<fdecl, unsigned int> > > (_ZSt11__addressofISt6vectorISt4pairI5fdecljESaIS3_EEEPT_RS6_, funcdef_no=10744, decl_uid=243895, cgraph_uid=7376, symbol_order=8170)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct vector * std::__addressof<std::vector<std::pair<fdecl, unsigned int> > > (struct vector & __r)
{
  struct vector * D.259955;

  <bb 2> :
  D.259955 = __r;

  <bb 3> :
<L0>:
  return D.259955;

}



;; Function std::_Destroy<std::vector<std::pair<fdecl, unsigned int> > > (_ZSt8_DestroyISt6vectorISt4pairI5fdecljESaIS3_EEEvPT_, funcdef_no=10745, decl_uid=243897, cgraph_uid=7377, symbol_order=8171)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<std::vector<std::pair<fdecl, unsigned int> > > (struct vector * __pointer)
{
  <bb 2> :
  std::vector<std::pair<fdecl, unsigned int> >::~vector (__pointer);
  return;

}



;; Function std::vector<std::pair<fdecl, unsigned int> >::~vector (_ZNSt6vectorISt4pairI5fdecljESaIS2_EED2Ev, funcdef_no=10927, decl_uid=217727, cgraph_uid=7559, symbol_order=8355)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<std::pair<fdecl, unsigned int> >::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.217730;
  _2 = std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_get_Tp_allocator (_1);
  _3 = this->D.217730._M_impl.D.217075._M_finish;
  _4 = this->D.217730._M_impl.D.217075._M_start;
  std::_Destroy<std::pair<fdecl, unsigned int>*, std::pair<fdecl, unsigned int> > (_4, _3, _2);
  _5 = &this->D.217730;
  std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_get_Tp_allocator (_ZNSt12_Vector_baseISt4pairI5fdecljESaIS2_EE19_M_get_Tp_allocatorEv, funcdef_no=11009, decl_uid=216963, cgraph_uid=7641, symbol_order=8437)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.259957;

  <bb 2> :
  D.259957 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.259957;

}



;; Function std::_Destroy<std::pair<fdecl, unsigned int>*, std::pair<fdecl, unsigned int> > (_ZSt8_DestroyIPSt4pairI5fdecljES2_EvT_S4_RSaIT0_E, funcdef_no=11010, decl_uid=247209, cgraph_uid=7642, symbol_order=8438)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<std::pair<fdecl, unsigned int>*, std::pair<fdecl, unsigned int> > (struct pair * __first, struct pair * __last, struct allocator & D.247595)
{
  <bb 2> :
  std::_Destroy<std::pair<fdecl, unsigned int>*> (__first, __last);
  return;

}



;; Function std::_Destroy<std::pair<fdecl, unsigned int>*> (_ZSt8_DestroyIPSt4pairI5fdecljEEvT_S4_, funcdef_no=11046, decl_uid=247597, cgraph_uid=7679, symbol_order=8475)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<std::pair<fdecl, unsigned int>*> (struct pair * __first, struct pair * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<std::pair<fdecl, unsigned int>*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<std::pair<fdecl, unsigned int>*> (_ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairI5fdecljEEEvT_S6_, funcdef_no=11071, decl_uid=248101, cgraph_uid=7703, symbol_order=8499)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<std::pair<fdecl, unsigned int>*> (struct pair * D.248200, struct pair * D.248201)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::~_Vector_base (_ZNSt12_Vector_baseISt4pairI5fdecljESaIS2_EED2Ev, funcdef_no=11007, decl_uid=217185, cgraph_uid=7639, symbol_order=8435)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.217075._M_end_of_storage;
  _2 = this->_M_impl.D.217075._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.217075._M_start;
  std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_deallocate (_ZNSt12_Vector_baseISt4pairI5fdecljESaIS2_EE13_M_deallocateEPS2_m, funcdef_no=11045, decl_uid=217082, cgraph_uid=7677, symbol_order=8473)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_deallocate (struct _Vector_base * const this, struct pair * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<std::pair<fdecl, unsigned int> > >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<std::pair<fdecl, unsigned int> > >::deallocate (_ZNSt16allocator_traitsISaISt4pairI5fdecljEEE10deallocateERS3_PS2_m, funcdef_no=11070, decl_uid=216887, cgraph_uid=7702, symbol_order=8498)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<std::pair<fdecl, unsigned int> > >::deallocate (struct allocator_type & __a, struct pair * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::deallocate (_ZN9__gnu_cxx13new_allocatorISt4pairI5fdecljEE10deallocateEPS3_m, funcdef_no=11079, decl_uid=216738, cgraph_uid=7711, symbol_order=8507)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::deallocate (struct new_allocator * const this, struct pair * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseISt4pairI5fdecljESaIS2_EE12_Vector_implD2Ev, funcdef_no=11005, decl_uid=217122, cgraph_uid=7636, symbol_order=8432)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<std::pair<fdecl, unsigned int> >::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<std::pair<fdecl, unsigned int> >::~allocator (_ZNSaISt4pairI5fdecljEED2Ev, funcdef_no=11043, decl_uid=216855, cgraph_uid=7675, symbol_order=8471)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<std::pair<fdecl, unsigned int> >::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::~new_allocator (_ZN9__gnu_cxx13new_allocatorISt4pairI5fdecljEED2Ev, funcdef_no=11068, decl_uid=216784, cgraph_uid=7700, symbol_order=8496)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::~_Vector_base (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EED2Ev, funcdef_no=7869, decl_uid=171875, cgraph_uid=4501, symbol_order=5287)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.171765._M_end_of_storage;
  _2 = this->_M_impl.D.171765._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.171765._M_start;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_deallocate (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EE13_M_deallocateEPS5_m, funcdef_no=8854, decl_uid=171772, cgraph_uid=5486, symbol_order=6276)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_deallocate (struct _Vector_base * const this, struct vector * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::deallocate (_ZNSt16allocator_traitsISaISt6vectorISt4pairI5fdecljESaIS3_EEEE10deallocateERS6_PS5_m, funcdef_no=9727, decl_uid=171577, cgraph_uid=6359, symbol_order=7149)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::deallocate (struct allocator_type & __a, struct vector * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::deallocate (_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairI5fdecljESaIS4_EEE10deallocateEPS6_m, funcdef_no=10312, decl_uid=171428, cgraph_uid=6944, symbol_order=7738)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::deallocate (struct new_allocator * const this, struct vector * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EE12_Vector_implD2Ev, funcdef_no=6850, decl_uid=171812, cgraph_uid=3478, symbol_order=4256)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::~allocator (_ZNSaISt6vectorISt4pairI5fdecljESaIS2_EEED2Ev, funcdef_no=7866, decl_uid=171545, cgraph_uid=4498, symbol_order=5284)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::~new_allocator (_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairI5fdecljESaIS4_EEED2Ev, funcdef_no=8852, decl_uid=171474, cgraph_uid=5484, symbol_order=6274)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function insert_always_inline (_Z20insert_always_inlinev, funcdef_no=6920, decl_uid=205999, cgraph_uid=3552, symbol_order=4330)

Merging blocks 5 and 33
Removing basic block 24
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
;;
;; Loop 1
;;  header 33, latch 32
;;  depth 1, outer 0
;;  nodes: 33 32 31 5 4 3 30 29 28 6 27 23 26 25 24 18 17 14 16 15 12 13 11 10 8 9 7 22 21 20 19
;;
;; Loop 2
;;  header 28, latch 27
;;  depth 2, outer 1
;;  nodes: 28 27 23 26 25 24 18 17 14 16 15 12 13 11 10 8 9 7 22 21 20 19
;; 2 succs { 33 }
;; 3 succs { 35 4 }
;; 4 succs { 5 6 }
;; 5 succs { 32 }
;; 6 succs { 28 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 35 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 15 17 }
;; 15 succs { 35 16 }
;; 16 succs { 17 }
;; 17 succs { 35 18 }
;; 18 succs { 19 24 }
;; 19 succs { 35 20 }
;; 20 succs { 35 21 }
;; 21 succs { 35 22 }
;; 22 succs { 35 23 }
;; 23 succs { 35 27 }
;; 24 succs { 35 25 }
;; 25 succs { 35 26 }
;; 26 succs { 35 27 }
;; 27 succs { 28 }
;; 28 succs { 7 29 }
;; 29 succs { 35 30 }
;; 30 succs { 35 31 }
;; 31 succs { 32 }
;; 32 succs { 33 }
;; 33 succs { 3 34 }
;; 34 succs { 1 }
;; 35 succs { }
void insert_always_inline ()
{
  struct cgraph_node * D.260001;
  const char * D.259997;
  union tree_node * D.259996;
  union tree_node * D.259995;
  const char * D.259994;
  union tree_node * D.259993;
  union tree_node * D.259992;
  struct cgraph_node * D.259991;
  bool D.259990;
  struct cgraph_node * D.259989;
  union tree_node * callee_tree;
  struct cgraph_node * callee;
  struct cgraph_node * caller;
  availability avail;
  union tree_node * attr;
  struct cgraph_edge * e;
  struct basic_block_def * bb;
  bool always_inline;
  const char * name;
  struct cgraph_node * node;
  bool retval.2201;
  union tree_node * iftmp.2200;
  struct cgraph_node * iftmp.2199;
  bool retval.2198;

  <bb 2> :
  symtab.2197_1 = symtab;
  D.259989 = symbol_table::first_defined_function (symtab.2197_1);
  node = D.259989;
  goto <bb 33>; [INV]

  <bb 3> :
  _2 = node->D.97512.decl;
  D.259990 = gimple_has_body_p (_2);

  <bb 4> :
  _3 = D.259990;
  retval.2198 = ~_3;
  if (retval.2198 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  // predicted unlikely by continue predictor.
  avail = {CLOBBER};
  goto <bb 32>; [INV]

  <bb 6> :
  e = node->callees;
  goto <bb 28>; [INV]

  <bb 7> :
  _4 = e->caller;
  _5 = _4->inlined_to;
  if (_5 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _6 = e->caller;
  iftmp.2199 = _6->inlined_to;
  goto <bb 10>; [INV]

  <bb 9> :
  iftmp.2199 = e->caller;

  <bb 10> :
  caller = iftmp.2199;
  _7 = e->callee;
  D.259991 = cgraph_node::ultimate_alias_target (_7, &avail, caller);

  <bb 11> :
  callee = D.259991;
  if (callee != 0B)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _8 = callee->D.97512.decl;
  iftmp.2200 = _8->function_decl.function_specific_optimization;
  goto <bb 14>; [INV]

  <bb 13> :
  iftmp.2200 = 0B;

  <bb 14> :
  callee_tree = iftmp.2200;
  _9 = callee->D.97512.decl;
  _10 = _9->decl_common.attributes;
  if (_10 != 0B)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  _11 = callee->D.97512.decl;
  _12 = _11->decl_common.attributes;
  D.259992 = get_attribute_name (_12);

  <bb 16> :
  attr = D.259992;

  <bb 17> :
  _13 = callee->D.97512.decl;
  _14 = _13->decl_common.attributes;
  D.259993 = lookup_attribute ("noinline", _14);

  <bb 18> :
  _15 = D.259993;
  retval.2201 = _15 == 0B;
  if (retval.2201 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 19> :
  _16 = callee->D.97512.decl;
  D.259994 = get_name (_16);

  <bb 20> :
  _17 = D.259994;
  stderr.2202_18 = stderr;
  fprintf (stderr.2202_18, "=======node_fun:%s=========\n", _17);

  <bb 21> :
  _19 = callee->D.97512.decl;
  _20 = _19->decl_common.attributes;
  D.259995 = get_identifier_with_length ("noinline", 8);

  <bb 22> :
  _21 = D.259995;
  _22 = callee->D.97512.decl;
  D.259996 = tree_cons (_21, 0B, _20);

  <bb 23> :
  _23 = D.259996;
  _22->decl_common.attributes = _23;
  _24 = callee->D.97512.decl;
  _24->function_decl.disregard_inline_limits = 1;
  _25 = callee->D.97512.decl;
  _26 = _25->decl_common.attributes;
  debug_tree (_26);
  goto <bb 27>; [INV]

  <bb 24> :
  _27 = callee->D.97512.decl;
  D.259997 = get_name (_27);

  <bb 25> :
  _28 = D.259997;
  stderr.2203_29 = stderr;
  fprintf (stderr.2203_29, "=======node_fun:%s=========\n", _28);

  <bb 26> :
  _30 = callee->D.97512.decl;
  _31 = _30->decl_common.attributes;
  debug_tree (_31);

  <bb 27> :
  e = e->next_callee;

  <bb 28> :
  if (e != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 29> :
  _32 = node->D.97512.decl;
  _33 = _32->function_decl.f;
  push_cfun (_33);

  <bb 30> :
  pop_cfun ();

  <bb 31> :
  avail = {CLOBBER};

  <bb 32> :
  symtab.2204_34 = symtab;
  D.260001 = symbol_table::next_defined_function (symtab.2204_34, node);
  node = D.260001;

  <bb 33> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 34> :
  return;

  <bb 35> :
<L23>:
  avail = {CLOBBER};
  resx 1

}



;; Function lookup_attribute (_ZL16lookup_attributePKcP9tree_node, funcdef_no=3026, decl_uid=110094, cgraph_uid=2128, symbol_order=2293)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
union tree_node * lookup_attribute (const char * attr_name, union tree_node * list)
{
  union tree_node * D.260006;
  size_t attr_len;
  union tree_node * D.260004;

  <bb 2> :
  if (list == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.260004 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  attr_len = strlen (attr_name);
  D.260006 = private_lookup_attribute (attr_name, attr_len, list);
  D.260004 = D.260006;

  <bb 5> :
<L2>:
  return D.260004;

}



;; Function test_always (_ZL11test_alwaysv, funcdef_no=6921, decl_uid=206057, cgraph_uid=3553, symbol_order=4336)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int test_always ()
{
  int D.260007;

  <bb 2> :
  insert_always_inline ();
  D.260007 = 0;

  <bb 3> :
<L0>:
  return D.260007;

}



;; Function make_pass_ipa_always (_Z20make_pass_ipa_alwaysPN3gcc7contextE, funcdef_no=6931, decl_uid=206128, cgraph_uid=3563, symbol_order=4346)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { }
struct ipa_opt_pass_d * make_pass_ipa_always (struct context * ctxt)
{
  void * D.260011;
  void * D.206130;
  struct ipa_opt_pass_d * D.260009;

  <bb 2> :
  D.260011 = operator new (160);
  D.206130 = D.260011;
  {anonymous}::pass_ipa_always::pass_ipa_always (D.206130, ctxt);

  <bb 3> :
  D.260009 = D.206130;

  <bb 4> :
<L0>:
  return D.260009;

  <bb 5> :
<L1>:
  operator delete (D.206130, 160);
  resx 1

}



;; Function {anonymous}::pass_ipa_always::pass_ipa_always (_ZN12_GLOBAL__N_115pass_ipa_alwaysC2EPN3gcc7contextE, funcdef_no=6927, decl_uid=206088, cgraph_uid=3559, symbol_order=4342)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_always::pass_ipa_always (struct pass_ipa_always * const this, struct context * ctxt)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.206091;
  ipa_opt_pass_d::ipa_opt_pass_d (_1, &inline_pass_data, ctxt, 0B, 0B, 0B, 0B, 0B, 0B, 0, 0B, 0B);
  _2 = &_ZTVN12_GLOBAL__N_115pass_ipa_alwaysE + 16;
  this->D.206091.D.88937._vptr.opt_pass = _2;
  return;

}



;; Function {anonymous}::pass_ipa_always::execute (_ZN12_GLOBAL__N_115pass_ipa_always7executeEP8function, funcdef_no=6929, decl_uid=206068, cgraph_uid=3561, symbol_order=4344)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int {anonymous}::pass_ipa_always::execute (struct pass_ipa_always * const this, struct function * D.206066)
{
  int D.260015;
  unsigned int D.260013;

  <bb 2> :
  D.260015 = test_always ();
  _1 = D.260015;
  D.260013 = (unsigned int) _1;

  <bb 3> :
<L0>:
  return D.260013;

}



;; Function {anonymous}::pass_ipa_always::clone (_ZN12_GLOBAL__N_115pass_ipa_always5cloneEv, funcdef_no=6930, decl_uid=206071, cgraph_uid=3562, symbol_order=4345)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pass_ipa_always * {anonymous}::pass_ipa_always::clone (struct pass_ipa_always * const this)
{
  struct pass_ipa_always * D.260016;

  <bb 2> :
  D.260016 = this;

  <bb 3> :
<L0>:
  return D.260016;

}



;; Function {anonymous}::pass_ipa_always::~pass_ipa_always (_ZN12_GLOBAL__N_115pass_ipa_alwaysD0Ev, funcdef_no=11087, decl_uid=206076, cgraph_uid=7719, symbol_order=8517)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_always::~pass_ipa_always (struct pass_ipa_always * const this)
{
  <bb 2> :
  {anonymous}::pass_ipa_always::~pass_ipa_always (this);
  operator delete (this, 160);
  return;

}



;; Function {anonymous}::pass_ipa_always::~pass_ipa_always (_ZN12_GLOBAL__N_115pass_ipa_alwaysD2Ev, funcdef_no=11085, decl_uid=206082, cgraph_uid=7717, symbol_order=8515)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_always::~pass_ipa_always (struct pass_ipa_always * const this)
{
  <bb 2> :
  _1 = &_ZTVN12_GLOBAL__N_115pass_ipa_alwaysE + 16;
  this->D.206091.D.88937._vptr.opt_pass = _1;
  _2 = &this->D.206091;
  ipa_opt_pass_d::~ipa_opt_pass_d (_2);
  *this = {CLOBBER};
  return;

}



;; Function ipa_opt_pass_d::~ipa_opt_pass_d (_ZN14ipa_opt_pass_dD2Ev, funcdef_no=6924, decl_uid=88908, cgraph_uid=3555, symbol_order=4338)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ipa_opt_pass_d::~ipa_opt_pass_d (struct ipa_opt_pass_d * const this)
{
  <bb 2> :
  _1 = &_ZTV14ipa_opt_pass_d + 16;
  this->D.88937._vptr.opt_pass = _1;
  _2 = &this->D.88937;
  opt_pass::~opt_pass (_2);
  *this = {CLOBBER};
  return;

}



;; Function ipa_opt_pass_d::~ipa_opt_pass_d (_ZN14ipa_opt_pass_dD0Ev, funcdef_no=6926, decl_uid=88902, cgraph_uid=3557, symbol_order=4340)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ipa_opt_pass_d::~ipa_opt_pass_d (struct ipa_opt_pass_d * const this)
{
  <bb 2> :
  ipa_opt_pass_d::~ipa_opt_pass_d (this);
  operator delete (this, 160);
  return;

}



;; Function opt_pass::~opt_pass (_ZN8opt_passD2Ev, funcdef_no=1884, decl_uid=88726, cgraph_uid=1023, symbol_order=1183)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void opt_pass::~opt_pass (struct opt_pass * const this)
{
  <bb 2> :
  _1 = &_ZTV8opt_pass + 16;
  this->_vptr.opt_pass = _1;
  *this = {CLOBBER};
  return;

}



;; Function opt_pass::~opt_pass (_ZN8opt_passD0Ev, funcdef_no=1886, decl_uid=88720, cgraph_uid=1025, symbol_order=1185)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void opt_pass::~opt_pass (struct opt_pass * const this)
{
  <bb 2> :
  opt_pass::~opt_pass (this);
  operator delete (this, 88);
  return;

}



;; Function ipa_opt_pass_d::ipa_opt_pass_d (_ZN14ipa_opt_pass_dC2ERK9pass_dataPN3gcc7contextEPFvvES7_S7_S7_S7_PFvP11cgraph_nodePP6gimpleEjPFjS9_EPFvP12varpool_nodeE, funcdef_no=1894, decl_uid=88924, cgraph_uid=1033, symbol_order=1193)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ipa_opt_pass_d::ipa_opt_pass_d (struct ipa_opt_pass_d * const this, const struct pass_data & data, struct context * ctxt, void (*<T6a3>) (void) generate_summary, void (*<T6a3>) (void) write_summary, void (*<T6a3>) (void) read_summary, void (*<T6a3>) (void) write_optimization_summary, void (*<T6a3>) (void) read_optimization_summary, void (*<T57cc>) (struct cgraph_node *, struct gimple * *) stmt_fixup, unsigned int function_transform_todo_flags_start, unsigned int (*<T57ce>) (struct cgraph_node *) function_transform, void (*<T57d1>) (struct varpool_node *) variable_transform)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.88937;
  opt_pass::opt_pass (_1, data, ctxt);
  _2 = &_ZTV14ipa_opt_pass_d + 16;
  this->D.88937._vptr.opt_pass = _2;
  this->generate_summary = generate_summary;
  this->write_summary = write_summary;
  this->read_summary = read_summary;
  this->write_optimization_summary = write_optimization_summary;
  this->read_optimization_summary = read_optimization_summary;
  this->stmt_fixup = stmt_fixup;
  this->function_transform_todo_flags_start = function_transform_todo_flags_start;
  this->function_transform = function_transform;
  this->variable_transform = variable_transform;
  return;

}



;; Function execute_detect (_ZL14execute_detectv, funcdef_no=6932, decl_uid=206149, cgraph_uid=3564, symbol_order=4347)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int execute_detect ()
{
  int D.260018;

  <bb 2> :
  detect ();
  D.260018 = 0;

  <bb 3> :
<L0>:
  return D.260018;

}



;; Function make_pass_detect (_Z16make_pass_detectPN3gcc7contextE, funcdef_no=6938, decl_uid=89596, cgraph_uid=3570, symbol_order=4353)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { }
struct ipa_opt_pass_d * make_pass_detect (struct context * ctxt)
{
  void * D.260022;
  void * D.206194;
  struct ipa_opt_pass_d * D.260020;

  <bb 2> :
  D.260022 = operator new (160);
  D.206194 = D.260022;
  {anonymous}::pass_ipa_detect::pass_ipa_detect (D.206194, ctxt);

  <bb 3> :
  D.260020 = D.206194;

  <bb 4> :
<L0>:
  return D.260020;

  <bb 5> :
<L1>:
  operator delete (D.206194, 160);
  resx 1

}



;; Function {anonymous}::pass_ipa_detect::pass_ipa_detect (_ZN12_GLOBAL__N_115pass_ipa_detectC2EPN3gcc7contextE, funcdef_no=6934, decl_uid=206179, cgraph_uid=3566, symbol_order=4349)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_detect::pass_ipa_detect (struct pass_ipa_detect * const this, struct context * ctxt)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.206182;
  ipa_opt_pass_d::ipa_opt_pass_d (_1, &detect_pass_data, ctxt, 0B, 0B, 0B, 0B, 0B, 0B, 0, 0B, 0B);
  _2 = &_ZTVN12_GLOBAL__N_115pass_ipa_detectE + 16;
  this->D.206182.D.88937._vptr.opt_pass = _2;
  return;

}



;; Function {anonymous}::pass_ipa_detect::execute (_ZN12_GLOBAL__N_115pass_ipa_detect7executeEP8function, funcdef_no=6936, decl_uid=206159, cgraph_uid=3568, symbol_order=4351)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int {anonymous}::pass_ipa_detect::execute (struct pass_ipa_detect * const this, struct function * D.206157)
{
  int D.260026;
  unsigned int D.260024;

  <bb 2> :
  D.260026 = execute_detect ();
  _1 = D.260026;
  D.260024 = (unsigned int) _1;

  <bb 3> :
<L0>:
  return D.260024;

}



;; Function {anonymous}::pass_ipa_detect::clone (_ZN12_GLOBAL__N_115pass_ipa_detect5cloneEv, funcdef_no=6937, decl_uid=206162, cgraph_uid=3569, symbol_order=4352)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pass_ipa_detect * {anonymous}::pass_ipa_detect::clone (struct pass_ipa_detect * const this)
{
  struct pass_ipa_detect * D.260027;

  <bb 2> :
  D.260027 = this;

  <bb 3> :
<L0>:
  return D.260027;

}



;; Function {anonymous}::pass_ipa_detect::~pass_ipa_detect (_ZN12_GLOBAL__N_115pass_ipa_detectD0Ev, funcdef_no=11083, decl_uid=206167, cgraph_uid=7715, symbol_order=8512)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_detect::~pass_ipa_detect (struct pass_ipa_detect * const this)
{
  <bb 2> :
  {anonymous}::pass_ipa_detect::~pass_ipa_detect (this);
  operator delete (this, 160);
  return;

}



;; Function {anonymous}::pass_ipa_detect::~pass_ipa_detect (_ZN12_GLOBAL__N_115pass_ipa_detectD2Ev, funcdef_no=11081, decl_uid=206173, cgraph_uid=7713, symbol_order=8510)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_detect::~pass_ipa_detect (struct pass_ipa_detect * const this)
{
  <bb 2> :
  _1 = &_ZTVN12_GLOBAL__N_115pass_ipa_detectE + 16;
  this->D.206182.D.88937._vptr.opt_pass = _1;
  _2 = &this->D.206182;
  ipa_opt_pass_d::~ipa_opt_pass_d (_2);
  *this = {CLOBBER};
  return;

}



;; Function plugin_init (plugin_init, funcdef_no=6939, decl_uid=83835, cgraph_uid=3571, symbol_order=4354)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
int plugin_init (struct plugin_name_args * plugin_info, struct plugin_gcc_version * version)
{
  struct ipa_opt_pass_d * D.260036;
  struct ipa_opt_pass_d * D.260035;
  bool D.260034;
  int D.260032;
  bool retval.2205;

  <bb 2> :
  D.260034 = plugin_default_version_check (version, &gcc_version);
  _1 = D.260034;
  retval.2205 = ~_1;
  if (retval.2205 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __builtin_puts (&"incompatible gcc/plugin versions"[0]);
  D.260032 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = version->devphase;
  _3 = version->basever;
  _4 = plugin_info->full_name;
  stderr.2206_5 = stderr;
  fprintf (stderr.2206_5, "%s %s %s\n", _4, _3, _2);
  g.2207_6 = g;
  D.260035 = make_pass_ipa_always (g.2207_6);
  _7 = D.260035;
  inline_passinfo.pass = _7;
  inline_passinfo.reference_pass_name = "einline";
  inline_passinfo.ref_pass_instance_number = 0;
  inline_passinfo.pos_op = 1;
  g.2208_8 = g;
  D.260036 = make_pass_detect (g.2208_8);
  _9 = D.260036;
  detect_passinfo.pass = _9;
  detect_passinfo.reference_pass_name = "pta";
  detect_passinfo.ref_pass_instance_number = 0;
  detect_passinfo.pos_op = 0;
  register_callback ("static_analyzer", 2, 0B, &detect_passinfo);
  D.260032 = 0;

  <bb 5> :
<L2>:
  return D.260032;

}



;; Function __static_initialization_and_destruction_0 (_Z41__static_initialization_and_destruction_0ii, funcdef_no=11100, decl_uid=248268, cgraph_uid=7738, symbol_order=8581)

Removing basic block 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void __static_initialization_and_destruction_0 (int __initialize_p, int __priority)
{
  <bb 2> :
  if (__initialize_p == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  if (__priority == 65535)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::ios_base::Init::Init (&__ioinit);
  __cxxabiv1::__cxa_atexit (__dt_comp , &__ioinit, &__dso_handle);
  std::basic_ofstream<char>::basic_ofstream (&cfginfo, "cfginfo.txt", 16);
  __cxxabiv1::__cxa_atexit (__dt_comp , &cfginfo, &__dso_handle);
  ptb::ptb (&start1);
  ptb::ptb (&start2);
  ptb::ptb (&start3);
  ptb::ptb (&start4);
  ptb::ptb (&start5);
  ptb::ptb (&start6);
  ptb::ptb (&start7);
  ptb::ptb (&start8);
  ptb::ptb (&start9);
  std::vector<gimple*>::vector (&new_gimple_array);
  __cxxabiv1::__cxa_atexit (__dt_comp , &new_gimple_array, &__dso_handle);
  std::vector<tree_node*>::vector (&new_gimpletree_array);
  __cxxabiv1::__cxa_atexit (__dt_comp , &new_gimpletree_array, &__dso_handle);
  std::vector<basic_block_def*>::vector (&new_path_array);
  __cxxabiv1::__cxa_atexit (__dt_comp , &new_path_array, &__dso_handle);
  std::vector<tree_node*>::vector (&traceStack);
  __cxxabiv1::__cxa_atexit (__dt_comp , &traceStack, &__dso_handle);
  std::vector<tree_node*>::vector (&pathStack);
  __cxxabiv1::__cxa_atexit (__dt_comp , &pathStack, &__dso_handle);
  std::vector<basic_block_def*>::vector (&symbolicExecution);
  __cxxabiv1::__cxa_atexit (__dt_comp , &symbolicExecution, &__dso_handle);
  std::vector<basic_block_def*>::vector (&symbolicExecutionswitch);
  __cxxabiv1::__cxa_atexit (__dt_comp , &symbolicExecutionswitch, &__dso_handle);
  std::vector<breakpoint>::vector (&vbreakpoint);
  __cxxabiv1::__cxa_atexit (__dt_comp , &vbreakpoint, &__dso_handle);
  std::vector<return_type>::vector (&global_ret_type_array);
  __cxxabiv1::__cxa_atexit (__dt_comp , &global_ret_type_array, &__dso_handle);
  CStack::CStack (&stmtStack);
  __cxxabiv1::__cxa_atexit (__dt_comp , &stmtStack, &__dso_handle);
  CstmtStack::CstmtStack (&stmtStack2);
  __cxxabiv1::__cxa_atexit (__dt_comp , &stmtStack2, &__dso_handle);

  <bb 5> :
  return;

}



;; Function CstmtStack::~CstmtStack (_ZN10CstmtStackD2Ev, funcdef_no=11105, decl_uid=248296, cgraph_uid=7736, symbol_order=8579)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void CstmtStack::~CstmtStack (struct CstmtStack * const this)
{
  <bb 2> :
  _1 = &this->D.183215;
  std::stack<gimple*>::~stack (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::stack<gimple*>::~stack (_ZNSt5stackIP6gimpleSt5dequeIS1_SaIS1_EEED2Ev, funcdef_no=6233, decl_uid=186906, cgraph_uid=3208, symbol_order=3970)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::stack<gimple*>::~stack (struct stack * const this)
{
  <bb 2> :
  _1 = &this->c;
  std::deque<gimple*, std::allocator<gimple*> >::~deque (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::deque<gimple*, std::allocator<gimple*> >::~deque (_ZNSt5dequeIP6gimpleSaIS1_EED2Ev, funcdef_no=7612, decl_uid=183035, cgraph_uid=4244, symbol_order=5030)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::deque<gimple*, std::allocator<gimple*> >::~deque (struct deque * const this)
{
  struct iterator D.211683;
  struct iterator D.211684;

  <bb 2> :
  _1 = &this->D.183038;
  _2 = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_1);
  D.211684 = std::deque<gimple*, std::allocator<gimple*> >::end (this); [return slot optimization]
  D.211683 = std::deque<gimple*, std::allocator<gimple*> >::begin (this); [return slot optimization]
  std::deque<gimple*, std::allocator<gimple*> >::_M_destroy_data (this, &D.211683, &D.211684, _2);
  D.211683 = {CLOBBER};
  D.211684 = {CLOBBER};
  _3 = &this->D.183038;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::~_Deque_base (_3);
  *this = {CLOBBER};
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=8451, decl_uid=182277, cgraph_uid=5083, symbol_order=5873)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (struct _Deque_base * const this)
{
  struct _Tp_alloc_type & D.260043;

  <bb 2> :
  D.260043 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.260043;

}



;; Function std::deque<gimple*, std::allocator<gimple*> >::end (_ZNSt5dequeIP6gimpleSaIS1_EE3endEv, funcdef_no=8450, decl_uid=182621, cgraph_uid=5082, symbol_order=5872)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::deque<gimple*, std::allocator<gimple*> >::end (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.183038._M_impl.D.182432._M_finish;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (_ZNSt15_Deque_iteratorIP6gimpleRS1_PS1_EC2ERKS4_, funcdef_no=9237, decl_uid=182246, cgraph_uid=5869, symbol_order=6659)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (struct _Deque_iterator * const this, const struct _Deque_iterator & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_cur;
  this->_M_cur = _1;
  _2 = __x->_M_first;
  this->_M_first = _2;
  _3 = __x->_M_last;
  this->_M_last = _3;
  _4 = __x->_M_node;
  this->_M_node = _4;
  return;

}



;; Function std::deque<gimple*, std::allocator<gimple*> >::begin (_ZNSt5dequeIP6gimpleSaIS1_EE5beginEv, funcdef_no=8449, decl_uid=182617, cgraph_uid=5081, symbol_order=5871)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::deque<gimple*, std::allocator<gimple*> >::begin (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.183038._M_impl.D.182432._M_start;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::deque<gimple*, std::allocator<gimple*> >::_M_destroy_data (_ZNSt5dequeIP6gimpleSaIS1_EE15_M_destroy_dataESt15_Deque_iteratorIS1_RS1_PS1_ES7_RKS2_, funcdef_no=8452, decl_uid=182839, cgraph_uid=5084, symbol_order=5874)

Removing basic block 3
Removing basic block 4
Removing basic block 6
Removing basic block 7
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void std::deque<gimple*, std::allocator<gimple*> >::_M_destroy_data (struct deque * const this, struct iterator & __first, struct iterator & __last, const struct allocator & D.222426)
{
  struct iterator D.222430;
  struct iterator D.222433;

  <bb 2> :

  <bb 3> :
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::~_Deque_base (_ZNSt11_Deque_baseIP6gimpleSaIS1_EED2Ev, funcdef_no=8447, decl_uid=182487, cgraph_uid=5079, symbol_order=5869)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::~_Deque_base (struct _Deque_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.182432._M_map;
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = this->_M_impl.D.182432._M_finish._M_node;
  _3 = _2 + 8;
  _4 = this->_M_impl.D.182432._M_start._M_node;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_destroy_nodes (this, _4, _3);
  _5 = this->_M_impl.D.182432._M_map_size;
  _6 = this->_M_impl.D.182432._M_map;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_map (this, _6, _5);

  <bb 4> :
  _7 = &this->_M_impl;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::~_Deque_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_destroy_nodes (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE16_M_destroy_nodesEPPS1_S5_, funcdef_no=9234, decl_uid=182302, cgraph_uid=5866, symbol_order=6656)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_destroy_nodes (struct _Deque_base * const this, struct gimple * * * __nstart, struct gimple * * * __nfinish)
{
  struct gimple * * * __n;

  <bb 2> :
  __n = __nstart;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = *__n;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_node (this, _1);
  __n = __n + 8;

  <bb 4> :
  if (__n < __nfinish)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_node (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE18_M_deallocate_nodeEPS1_, funcdef_no=9970, decl_uid=182285, cgraph_uid=6602, symbol_order=7396)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_node (struct _Deque_base * const this, struct gimple * * __p)
{
  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = &this->_M_impl;
  std::allocator_traits<std::allocator<gimple*> >::deallocate (_2, __p, _1);
  return;

}



;; Function std::__deque_buf_size (_ZSt16__deque_buf_sizem, funcdef_no=5338, decl_uid=156256, cgraph_uid=2732, symbol_order=2922)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
size_t std::__deque_buf_size (size_t __size)
{
  size_t iftmp.2209;
  size_t D.260057;

  <bb 2> :
  if (__size <= 511)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.2209 = 512 / __size;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2209 = 1;

  <bb 5> :
  D.260057 = iftmp.2209;

  <bb 6> :
<L3>:
  return D.260057;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_map (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE17_M_deallocate_mapEPPS1_m, funcdef_no=9235, decl_uid=182291, cgraph_uid=5867, symbol_order=6657)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_map (struct _Deque_base * const this, struct gimple * * * __p, size_t __n)
{
  struct _Map_alloc_type __map_alloc;

  <bb 2> :
  __map_alloc = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_map_allocator (this); [return slot optimization]
  std::allocator_traits<std::allocator<gimple**> >::deallocate (&__map_alloc, __p, __n);
  std::allocator<gimple**>::~allocator (&__map_alloc);
  __map_alloc = {CLOBBER};
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_map_allocator (_ZNKSt11_Deque_baseIP6gimpleSaIS1_EE20_M_get_map_allocatorEv, funcdef_no=9971, decl_uid=182281, cgraph_uid=6603, symbol_order=7397)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Map_alloc_type std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_map_allocator (const struct _Deque_base * const this)
{
  <bb 2> :
  _1 = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (this);
  std::allocator<gimple**>::allocator<gimple*> (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_ZNKSt11_Deque_baseIP6gimpleSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=10501, decl_uid=182279, cgraph_uid=7133, symbol_order=7927)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (const struct _Deque_base * const this)
{
  const struct _Tp_alloc_type & D.260065;

  <bb 2> :
  D.260065 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.260065;

}



;; Function std::allocator<gimple**>::allocator<gimple*> (_ZNSaIPP6gimpleEC2IS0_EERKSaIT_E, funcdef_no=10503, decl_uid=241684, cgraph_uid=7135, symbol_order=7929)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<gimple**>::allocator<gimple*> (struct allocator * const this, const struct allocator & D.241686)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple**>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple**>::new_allocator (_ZN9__gnu_cxx13new_allocatorIPP6gimpleEC2Ev, funcdef_no=10852, decl_uid=181947, cgraph_uid=7484, symbol_order=8280)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple**>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::allocator_traits<std::allocator<gimple**> >::deallocate (_ZNSt16allocator_traitsISaIPP6gimpleEE10deallocateERS3_PS2_m, funcdef_no=9975, decl_uid=234042, cgraph_uid=6607, symbol_order=7401)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<gimple**> >::deallocate (struct allocator_type & __a, struct gimple * * * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple**>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple**>::deallocate (_ZN9__gnu_cxx13new_allocatorIPP6gimpleE10deallocateEPS3_m, funcdef_no=10508, decl_uid=181906, cgraph_uid=7140, symbol_order=7934)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<gimple**>::deallocate (struct new_allocator * const this, struct gimple * * * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 8;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::allocator<gimple**>::~allocator (_ZNSaIPP6gimpleED2Ev, funcdef_no=9973, decl_uid=182023, cgraph_uid=6605, symbol_order=7399)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<gimple**>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple**>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple**>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIPP6gimpleED2Ev, funcdef_no=10506, decl_uid=181952, cgraph_uid=7138, symbol_order=7932)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple**>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::~_Deque_impl (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE11_Deque_implD2Ev, funcdef_no=8442, decl_uid=182919, cgraph_uid=5073, symbol_order=5863)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::~_Deque_impl (struct _Deque_impl * const this)
{
  <bb 2> :
  std::allocator<gimple*>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<gimple*>::~allocator (_ZNSaIP6gimpleED2Ev, funcdef_no=7555, decl_uid=181750, cgraph_uid=4187, symbol_order=4973)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<gimple*>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple*>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple*>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIP6gimpleED2Ev, funcdef_no=8384, decl_uid=181679, cgraph_uid=5016, symbol_order=5806)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple*>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function CStack::~CStack (_ZN6CStackD2Ev, funcdef_no=11102, decl_uid=248280, cgraph_uid=7733, symbol_order=8576)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void CStack::~CStack (struct CStack * const this)
{
  <bb 2> :
  _1 = &this->D.181569;
  std::stack<tree_node*>::~stack (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::stack<tree_node*>::~stack (_ZNSt5stackIP9tree_nodeSt5dequeIS1_SaIS1_EEED2Ev, funcdef_no=6226, decl_uid=186700, cgraph_uid=3201, symbol_order=3962)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::stack<tree_node*>::~stack (struct stack * const this)
{
  <bb 2> :
  _1 = &this->c;
  std::deque<tree_node*, std::allocator<tree_node*> >::~deque (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::deque<tree_node*, std::allocator<tree_node*> >::~deque (_ZNSt5dequeIP9tree_nodeSaIS1_EED2Ev, funcdef_no=7603, decl_uid=181373, cgraph_uid=4235, symbol_order=5021)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::deque<tree_node*, std::allocator<tree_node*> >::~deque (struct deque * const this)
{
  struct iterator D.211659;
  struct iterator D.211660;

  <bb 2> :
  _1 = &this->D.181376;
  _2 = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_1);
  D.211660 = std::deque<tree_node*, std::allocator<tree_node*> >::end (this); [return slot optimization]
  D.211659 = std::deque<tree_node*, std::allocator<tree_node*> >::begin (this); [return slot optimization]
  std::deque<tree_node*, std::allocator<tree_node*> >::_M_destroy_data (this, &D.211659, &D.211660, _2);
  D.211659 = {CLOBBER};
  D.211660 = {CLOBBER};
  _3 = &this->D.181376;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::~_Deque_base (_3);
  *this = {CLOBBER};
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=8438, decl_uid=180582, cgraph_uid=5070, symbol_order=5860)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (struct _Deque_base * const this)
{
  struct _Tp_alloc_type & D.260070;

  <bb 2> :
  D.260070 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.260070;

}



;; Function std::deque<tree_node*, std::allocator<tree_node*> >::end (_ZNSt5dequeIP9tree_nodeSaIS1_EE3endEv, funcdef_no=8437, decl_uid=180930, cgraph_uid=5069, symbol_order=5859)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::deque<tree_node*, std::allocator<tree_node*> >::end (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.181376._M_impl.D.180737._M_finish;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (_ZNSt15_Deque_iteratorIP9tree_nodeRS1_PS1_EC2ERKS4_, funcdef_no=9227, decl_uid=180551, cgraph_uid=5859, symbol_order=6649)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (struct _Deque_iterator * const this, const struct _Deque_iterator & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_cur;
  this->_M_cur = _1;
  _2 = __x->_M_first;
  this->_M_first = _2;
  _3 = __x->_M_last;
  this->_M_last = _3;
  _4 = __x->_M_node;
  this->_M_node = _4;
  return;

}



;; Function std::deque<tree_node*, std::allocator<tree_node*> >::begin (_ZNSt5dequeIP9tree_nodeSaIS1_EE5beginEv, funcdef_no=8436, decl_uid=180926, cgraph_uid=5068, symbol_order=5858)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::deque<tree_node*, std::allocator<tree_node*> >::begin (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.181376._M_impl.D.180737._M_start;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::deque<tree_node*, std::allocator<tree_node*> >::_M_destroy_data (_ZNSt5dequeIP9tree_nodeSaIS1_EE15_M_destroy_dataESt15_Deque_iteratorIS1_RS1_PS1_ES7_RKS2_, funcdef_no=8439, decl_uid=181176, cgraph_uid=5071, symbol_order=5861)

Removing basic block 3
Removing basic block 4
Removing basic block 6
Removing basic block 7
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void std::deque<tree_node*, std::allocator<tree_node*> >::_M_destroy_data (struct deque * const this, struct iterator & __first, struct iterator & __last, const struct allocator & D.222373)
{
  struct iterator D.222377;
  struct iterator D.222380;

  <bb 2> :

  <bb 3> :
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::~_Deque_base (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EED2Ev, funcdef_no=8434, decl_uid=180792, cgraph_uid=5066, symbol_order=5856)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::~_Deque_base (struct _Deque_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.180737._M_map;
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = this->_M_impl.D.180737._M_finish._M_node;
  _3 = _2 + 8;
  _4 = this->_M_impl.D.180737._M_start._M_node;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_destroy_nodes (this, _4, _3);
  _5 = this->_M_impl.D.180737._M_map_size;
  _6 = this->_M_impl.D.180737._M_map;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_map (this, _6, _5);

  <bb 4> :
  _7 = &this->_M_impl;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::~_Deque_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_destroy_nodes (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE16_M_destroy_nodesEPPS1_S5_, funcdef_no=9224, decl_uid=180607, cgraph_uid=5856, symbol_order=6646)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_destroy_nodes (struct _Deque_base * const this, union tree_node * * * __nstart, union tree_node * * * __nfinish)
{
  union tree_node * * * __n;

  <bb 2> :
  __n = __nstart;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = *__n;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_node (this, _1);
  __n = __n + 8;

  <bb 4> :
  if (__n < __nfinish)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_node (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE18_M_deallocate_nodeEPS1_, funcdef_no=9957, decl_uid=180590, cgraph_uid=6589, symbol_order=7383)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_node (struct _Deque_base * const this, union tree_node * * __p)
{
  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = &this->_M_impl;
  std::allocator_traits<std::allocator<tree_node*> >::deallocate (_2, __p, _1);
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_map (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE17_M_deallocate_mapEPPS1_m, funcdef_no=9225, decl_uid=180596, cgraph_uid=5857, symbol_order=6647)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_map (struct _Deque_base * const this, union tree_node * * * __p, size_t __n)
{
  struct _Map_alloc_type __map_alloc;

  <bb 2> :
  __map_alloc = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_map_allocator (this); [return slot optimization]
  std::allocator_traits<std::allocator<tree_node**> >::deallocate (&__map_alloc, __p, __n);
  std::allocator<tree_node**>::~allocator (&__map_alloc);
  __map_alloc = {CLOBBER};
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_map_allocator (_ZNKSt11_Deque_baseIP9tree_nodeSaIS1_EE20_M_get_map_allocatorEv, funcdef_no=9958, decl_uid=180586, cgraph_uid=6590, symbol_order=7384)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Map_alloc_type std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_map_allocator (const struct _Deque_base * const this)
{
  <bb 2> :
  _1 = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (this);
  std::allocator<tree_node**>::allocator<tree_node*> (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_ZNKSt11_Deque_baseIP9tree_nodeSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=10487, decl_uid=180584, cgraph_uid=7119, symbol_order=7913)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (const struct _Deque_base * const this)
{
  const struct _Tp_alloc_type & D.260086;

  <bb 2> :
  D.260086 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.260086;

}



;; Function std::allocator<tree_node**>::allocator<tree_node*> (_ZNSaIPP9tree_nodeEC2IS0_EERKSaIT_E, funcdef_no=10489, decl_uid=241637, cgraph_uid=7121, symbol_order=7915)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<tree_node**>::allocator<tree_node*> (struct allocator * const this, const struct allocator & D.241639)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node**>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node**>::new_allocator (_ZN9__gnu_cxx13new_allocatorIPP9tree_nodeEC2Ev, funcdef_no=10847, decl_uid=180234, cgraph_uid=7479, symbol_order=8275)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node**>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::allocator_traits<std::allocator<tree_node**> >::deallocate (_ZNSt16allocator_traitsISaIPP9tree_nodeEE10deallocateERS3_PS2_m, funcdef_no=9962, decl_uid=233917, cgraph_uid=6594, symbol_order=7388)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<tree_node**> >::deallocate (struct allocator_type & __a, union tree_node * * * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node**>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node**>::deallocate (_ZN9__gnu_cxx13new_allocatorIPP9tree_nodeE10deallocateEPS3_m, funcdef_no=10494, decl_uid=180193, cgraph_uid=7126, symbol_order=7920)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<tree_node**>::deallocate (struct new_allocator * const this, union tree_node * * * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 8;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::allocator<tree_node**>::~allocator (_ZNSaIPP9tree_nodeED2Ev, funcdef_no=9960, decl_uid=180310, cgraph_uid=6592, symbol_order=7386)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<tree_node**>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node**>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node**>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIPP9tree_nodeED2Ev, funcdef_no=10492, decl_uid=180239, cgraph_uid=7124, symbol_order=7918)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node**>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::~_Deque_impl (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE11_Deque_implD2Ev, funcdef_no=8429, decl_uid=181257, cgraph_uid=5060, symbol_order=5850)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::~_Deque_impl (struct _Deque_impl * const this)
{
  <bb 2> :
  std::allocator<tree_node*>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<tree_node*>::~allocator (_ZNSaIP9tree_nodeED2Ev, funcdef_no=7564, decl_uid=180037, cgraph_uid=4196, symbol_order=4982)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<tree_node*>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node*>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeED2Ev, funcdef_no=8394, decl_uid=179966, cgraph_uid=5026, symbol_order=5816)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node*>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<breakpoint>::~vector (_ZNSt6vectorI10breakpointSaIS0_EED2Ev, funcdef_no=11114, decl_uid=186232, cgraph_uid=7746, symbol_order=8947)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<breakpoint>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.186235;
  _2 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_1);
  _3 = this->D.186235._M_impl.D.185580._M_finish;
  _4 = this->D.186235._M_impl.D.185580._M_start;
  std::_Destroy<breakpoint*, breakpoint> (_4, _3, _2);
  _5 = &this->D.186235;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::~_Vector_base (_ZNSt12_Vector_baseI10breakpointSaIS0_EED2Ev, funcdef_no=7585, decl_uid=185690, cgraph_uid=4217, symbol_order=5003)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.185580._M_end_of_storage;
  _2 = this->_M_impl.D.185580._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 40;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.185580._M_start;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI10breakpointSaIS0_EE12_Vector_implD2Ev, funcdef_no=6207, decl_uid=185627, cgraph_uid=3181, symbol_order=3940)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<breakpoint>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<breakpoint>::~allocator (_ZNSaI10breakpointED2Ev, funcdef_no=7582, decl_uid=185360, cgraph_uid=4214, symbol_order=5000)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<breakpoint>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<breakpoint>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI10breakpointED2Ev, funcdef_no=8414, decl_uid=185289, cgraph_uid=5046, symbol_order=5836)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<breakpoint>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<tree_node*>::~vector (_ZNSt6vectorIP9tree_nodeSaIS1_EED2Ev, funcdef_no=11111, decl_uid=184894, cgraph_uid=7743, symbol_order=8944)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<tree_node*>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.184897;
  _2 = std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_1);
  _3 = this->D.184897._M_impl.D.184253._M_finish;
  _4 = this->D.184897._M_impl.D.184253._M_start;
  std::_Destroy<tree_node**, tree_node*> (_4, _3, _2);
  _5 = &this->D.184897;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<tree_node**, tree_node*> (_ZSt8_DestroyIPP9tree_nodeS1_EvT_S3_RSaIT0_E, funcdef_no=9421, decl_uid=224437, cgraph_uid=6053, symbol_order=6843)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<tree_node**, tree_node*> (union tree_node * * __first, union tree_node * * __last, struct allocator & D.236325)
{
  <bb 2> :
  std::_Destroy<tree_node**> (__first, __last);
  return;

}



;; Function std::_Destroy<tree_node**> (_ZSt8_DestroyIPP9tree_nodeEvT_S3_, funcdef_no=10102, decl_uid=236327, cgraph_uid=6734, symbol_order=7528)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<tree_node**> (union tree_node * * __first, union tree_node * * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<tree_node**> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<tree_node**> (_ZNSt12_Destroy_auxILb1EE9__destroyIPP9tree_nodeEEvT_S5_, funcdef_no=10618, decl_uid=242302, cgraph_uid=7250, symbol_order=8044)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<tree_node**> (union tree_node * * D.245701, union tree_node * * D.245702)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::~_Vector_base (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EED2Ev, funcdef_no=7567, decl_uid=184363, cgraph_uid=4199, symbol_order=4985)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.184253._M_end_of_storage;
  _2 = this->_M_impl.D.184253._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.184253._M_start;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE12_Vector_implD2Ev, funcdef_no=6187, decl_uid=184300, cgraph_uid=3161, symbol_order=3914)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<tree_node*>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<gimple*>::~vector (_ZNSt6vectorIP6gimpleSaIS1_EED2Ev, funcdef_no=11108, decl_uid=183980, cgraph_uid=7740, symbol_order=8941)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<gimple*>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.183983;
  _2 = std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_1);
  _3 = this->D.183983._M_impl.D.183339._M_finish;
  _4 = this->D.183983._M_impl.D.183339._M_start;
  std::_Destroy<gimple**, gimple*> (_4, _3, _2);
  _5 = &this->D.183983;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<gimple**, gimple*> (_ZSt8_DestroyIPP6gimpleS1_EvT_S3_RSaIT0_E, funcdef_no=9597, decl_uid=228712, cgraph_uid=6229, symbol_order=7019)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<gimple**, gimple*> (struct gimple * * __first, struct gimple * * __last, struct allocator & D.237699)
{
  <bb 2> :
  std::_Destroy<gimple**> (__first, __last);
  return;

}



;; Function std::_Destroy<gimple**> (_ZSt8_DestroyIPP6gimpleEvT_S3_, funcdef_no=10213, decl_uid=237701, cgraph_uid=6845, symbol_order=7639)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<gimple**> (struct gimple * * __first, struct gimple * * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<gimple**> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<gimple**> (_ZNSt12_Destroy_auxILb1EE9__destroyIPP6gimpleEEvT_S5_, funcdef_no=10680, decl_uid=242740, cgraph_uid=7312, symbol_order=8106)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<gimple**> (struct gimple * * D.245974, struct gimple * * D.245975)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::~_Vector_base (_ZNSt12_Vector_baseIP6gimpleSaIS1_EED2Ev, funcdef_no=7558, decl_uid=183449, cgraph_uid=4190, symbol_order=4976)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.183339._M_end_of_storage;
  _2 = this->_M_impl.D.183339._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.183339._M_start;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE12_Vector_implD2Ev, funcdef_no=6177, decl_uid=183386, cgraph_uid=3151, symbol_order=3903)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<gimple*>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<gimple*>::vector (_ZNSt6vectorIP6gimpleSaIS1_EEC2Ev, funcdef_no=6181, decl_uid=183975, cgraph_uid=3157, symbol_order=3909)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<gimple*>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.183983;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_base (_ZNSt12_Vector_baseIP6gimpleSaIS1_EEC2Ev, funcdef_no=6179, decl_uid=183444, cgraph_uid=3154, symbol_order=3906)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE12_Vector_implC2Ev, funcdef_no=7552, decl_uid=183336, cgraph_uid=4184, symbol_order=4970)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<gimple*>::allocator (this);
  _1 = &this->D.183339;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<gimple*>::allocator (_ZNSaIP6gimpleEC2Ev, funcdef_no=8378, decl_uid=181745, cgraph_uid=5010, symbol_order=5800)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<gimple*>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple*>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple*>::new_allocator (_ZN9__gnu_cxx13new_allocatorIP6gimpleEC2Ev, funcdef_no=9201, decl_uid=181674, cgraph_uid=5833, symbol_order=6623)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple*>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE17_Vector_impl_dataC2Ev, funcdef_no=8381, decl_uid=183286, cgraph_uid=5013, symbol_order=5803)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::vector<tree_node*>::vector (_ZNSt6vectorIP9tree_nodeSaIS1_EEC2Ev, funcdef_no=6191, decl_uid=184889, cgraph_uid=3167, symbol_order=3920)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<tree_node*>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.184897;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_base (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EEC2Ev, funcdef_no=6189, decl_uid=184358, cgraph_uid=3164, symbol_order=3917)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE12_Vector_implC2Ev, funcdef_no=7561, decl_uid=184250, cgraph_uid=4193, symbol_order=4979)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<tree_node*>::allocator (this);
  _1 = &this->D.184253;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<tree_node*>::allocator (_ZNSaIP9tree_nodeEC2Ev, funcdef_no=8388, decl_uid=180032, cgraph_uid=5020, symbol_order=5810)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<tree_node*>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node*>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::new_allocator (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeEC2Ev, funcdef_no=9205, decl_uid=179961, cgraph_uid=5837, symbol_order=6627)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node*>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE17_Vector_impl_dataC2Ev, funcdef_no=8391, decl_uid=184200, cgraph_uid=5023, symbol_order=5813)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::vector<breakpoint>::vector (_ZNSt6vectorI10breakpointSaIS0_EEC2Ev, funcdef_no=6211, decl_uid=186227, cgraph_uid=3187, symbol_order=3946)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<breakpoint>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.186235;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_base (_ZNSt12_Vector_baseI10breakpointSaIS0_EEC2Ev, funcdef_no=6209, decl_uid=185685, cgraph_uid=3184, symbol_order=3943)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI10breakpointSaIS0_EE12_Vector_implC2Ev, funcdef_no=7579, decl_uid=185577, cgraph_uid=4211, symbol_order=4997)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<breakpoint>::allocator (this);
  _1 = &this->D.185580;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<breakpoint>::allocator (_ZNSaI10breakpointEC2Ev, funcdef_no=8408, decl_uid=185355, cgraph_uid=5040, symbol_order=5830)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<breakpoint>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<breakpoint>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::new_allocator (_ZN9__gnu_cxx13new_allocatorI10breakpointEC2Ev, funcdef_no=9213, decl_uid=185284, cgraph_uid=5845, symbol_order=6635)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<breakpoint>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI10breakpointSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8411, decl_uid=185527, cgraph_uid=5043, symbol_order=5833)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function CStack::CStack (_ZN6CStackC2Ev, funcdef_no=6228, decl_uid=186707, cgraph_uid=3204, symbol_order=3965)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void CStack::CStack (struct CStack * const this)
{
  <bb 2> :
  _1 = &this->D.181569;
  std::stack<tree_node*>::stack<> (_1);
  return;

}



;; Function std::stack<tree_node*>::stack<> (_ZNSt5stackIP9tree_nodeSt5dequeIS1_SaIS1_EEEC2IS4_vEEv, funcdef_no=7600, decl_uid=186692, cgraph_uid=4232, symbol_order=5018)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::stack<tree_node*>::stack<> (struct stack * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->c = {};
  _1 = &this->c;
  std::deque<tree_node*, std::allocator<tree_node*> >::deque (_1);
  return;

}



;; Function std::deque<tree_node*, std::allocator<tree_node*> >::deque (_ZNSt5dequeIP9tree_nodeSaIS1_EEC2Ev, funcdef_no=7598, decl_uid=181368, cgraph_uid=4229, symbol_order=5015)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::deque<tree_node*, std::allocator<tree_node*> >::deque (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.181376;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_base (_1);
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_base (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EEC2Ev, funcdef_no=8431, decl_uid=180787, cgraph_uid=5063, symbol_order=5853)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_base (struct _Deque_base * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::_Deque_impl (_1);
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_initialize_map (this, 0);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::~_Deque_impl (_2);
  resx 1

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::_Deque_impl (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE11_Deque_implC2Ev, funcdef_no=9221, decl_uid=180734, cgraph_uid=5853, symbol_order=6643)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::_Deque_impl (struct _Deque_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<tree_node*>::allocator (this);
  _1 = &this->D.180737;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl_data::_Deque_impl_data (_1);
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl_data::_Deque_impl_data (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE16_Deque_impl_dataC2Ev, funcdef_no=9952, decl_uid=180662, cgraph_uid=6584, symbol_order=7378)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl_data::_Deque_impl_data (struct _Deque_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_map = 0B;
  this->_M_map_size = 0;
  _1 = &this->_M_start;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (_1);
  _2 = &this->_M_finish;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (_2);
  return;

}



;; Function std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (_ZNSt15_Deque_iteratorIP9tree_nodeRS1_PS1_EC2Ev, funcdef_no=10482, decl_uid=180564, cgraph_uid=7114, symbol_order=7908)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (struct _Deque_iterator * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_cur = 0B;
  this->_M_first = 0B;
  this->_M_last = 0B;
  this->_M_node = 0B;
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_initialize_map (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE17_M_initialize_mapEm, funcdef_no=9223, decl_uid=180600, cgraph_uid=5855, symbol_order=6645)

Removing basic block 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_initialize_map (struct _Deque_base * const this, size_t __num_elements)
{
  union tree_node * * * D.260092;
  union tree_node * * * __nfinish;
  union tree_node * * * __nstart;
  const size_t __num_nodes;
  const long unsigned int D.233875;
  const long unsigned int D.233876;

  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = __num_elements / _1;
  __num_nodes = _2 + 1;
  _3 = __num_nodes + 2;
  D.233876 = _3;
  D.233875 = 8;
  _4 = std::max<long unsigned int> (&D.233875, &D.233876);
  _5 = *_4;
  this->_M_impl.D.180737._M_map_size = _5;
  D.233875 = {CLOBBER};
  D.233876 = {CLOBBER};
  _6 = this->_M_impl.D.180737._M_map_size;
  D.260092 = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_map (this, _6);
  _7 = D.260092;
  this->_M_impl.D.180737._M_map = _7;
  _8 = this->_M_impl.D.180737._M_map;
  _9 = this->_M_impl.D.180737._M_map_size;
  _10 = _9 - __num_nodes;
  _11 = _10 / 2;
  _12 = _11 * 8;
  __nstart = _8 + _12;
  _13 = __num_nodes * 8;
  __nfinish = __nstart + _13;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_create_nodes (this, __nstart, __nfinish);

  <bb 3> :
  _17 = &this->_M_impl.D.180737._M_start;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_M_set_node (_17, __nstart);
  _18 = &this->_M_impl.D.180737._M_finish;
  _19 = __nfinish + 18446744073709551608;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_M_set_node (_18, _19);
  _20 = this->_M_impl.D.180737._M_start._M_first;
  this->_M_impl.D.180737._M_start._M_cur = _20;
  _21 = this->_M_impl.D.180737._M_finish._M_first;
  _22 = std::__deque_buf_size (8);
  _23 = __num_elements % _22;
  _24 = _23 * 8;
  _25 = _21 + _24;
  this->_M_impl.D.180737._M_finish._M_cur = _25;
  return;

  <bb 4> :
<L0>:
  eh_dispatch 3

  <bb 5> :
<L1>:
  _14 = __builtin_eh_pointer (3);
  __cxa_begin_catch (_14);
  _15 = this->_M_impl.D.180737._M_map_size;
  _16 = this->_M_impl.D.180737._M_map;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_map (this, _16, _15);
  this->_M_impl.D.180737._M_map = 0B;
  this->_M_impl.D.180737._M_map_size = 0;
  __cxa_rethrow ();

  <bb 6> :
<L2>:
  __cxa_end_catch ();
  resx 4

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_map (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE15_M_allocate_mapEm, funcdef_no=9954, decl_uid=180593, cgraph_uid=6586, symbol_order=7380)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 6 3 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
;; 6 succs { 7 }
;; 7 succs { }
union tree_node * * * std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_map (struct _Deque_base * const this, size_t __n)
{
  union tree_node * * * D.260098;
  struct _Map_alloc_type __map_alloc;
  union tree_node * * * D.260096;

  <bb 2> :
  __map_alloc = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_map_allocator (this); [return slot optimization]
  D.260098 = std::allocator_traits<std::allocator<tree_node**> >::allocate (&__map_alloc, __n);

  <bb 3> :
  D.260096 = D.260098;

  <bb 4> :
  std::allocator<tree_node**>::~allocator (&__map_alloc);
  __map_alloc = {CLOBBER};

  <bb 5> :
<L2>:
  return D.260096;

  <bb 6> :
<L3>:
  std::allocator<tree_node**>::~allocator (&__map_alloc);
  resx 2

  <bb 7> :
<L4>:
  __map_alloc = {CLOBBER};
  resx 1

}



;; Function std::allocator_traits<std::allocator<tree_node**> >::allocate (_ZNSt16allocator_traitsISaIPP9tree_nodeEE8allocateERS3_m, funcdef_no=10484, decl_uid=233910, cgraph_uid=7116, symbol_order=7910)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
union tree_node * * * std::allocator_traits<std::allocator<tree_node**> >::allocate (struct allocator_type & __a, size_type __n)
{
  union tree_node * * * D.260105;
  union tree_node * * * D.260103;

  <bb 2> :
  D.260105 = __gnu_cxx::new_allocator<tree_node**>::allocate (__a, __n, 0B);
  D.260103 = D.260105;

  <bb 3> :
<L0>:
  return D.260103;

}



;; Function __gnu_cxx::new_allocator<tree_node**>::allocate (_ZN9__gnu_cxx13new_allocatorIPP9tree_nodeE8allocateEmPKv, funcdef_no=10844, decl_uid=180189, cgraph_uid=7477, symbol_order=8273)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
union tree_node * * * __gnu_cxx::new_allocator<tree_node**>::allocate (struct new_allocator * const this, size_type __n, const void * D.246710)
{
  union tree_node * * * D.260116;
  union tree_node * * * D.260115;
  align_val_t __al;
  union tree_node * * * D.260113;
  bool retval.2210;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<tree_node**>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.2210 = _4 != 0;
  if (retval.2210 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 2305843009213693951)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 8;
  D.260116 = operator new (_6);
  D.260113 = D.260116;

  <bb 7> :
<L6>:
  return D.260113;

}



;; Function __gnu_cxx::new_allocator<tree_node**>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIPP9tree_nodeE11_M_max_sizeEv, funcdef_no=10845, decl_uid=180216, cgraph_uid=7476, symbol_order=8272)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<tree_node**>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.260117;

  <bb 2> :
  D.260117 = 1152921504606846975;

  <bb 3> :
<L0>:
  return D.260117;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_create_nodes (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE15_M_create_nodesEPPS1_S5_, funcdef_no=9955, decl_uid=180603, cgraph_uid=6587, symbol_order=7381)

Removing basic block 8
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 5, latch 4
;;  depth 1, outer 0
;;  nodes: 5 4 3
;; 2 succs { 5 }
;; 3 succs { 7 4 }
;; 4 succs { 5 }
;; 5 succs { 3 6 }
;; 6 succs { 1 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_create_nodes (struct _Deque_base * const this, union tree_node * * * __nstart, union tree_node * * * __nfinish)
{
  union tree_node * * D.260119;
  union tree_node * * * __cur;

  <bb 2> :
  __cur = __nstart;
  goto <bb 5>; [INV]

  <bb 3> :
  D.260119 = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_node (this);

  <bb 4> :
  _1 = D.260119;
  *__cur = _1;
  __cur = __cur + 8;

  <bb 5> :
  if (__cur < __nfinish)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  return;

  <bb 7> :
<L3>:
  eh_dispatch 1

  <bb 8> :
<L4>:
  _2 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_2);
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_destroy_nodes (this, __nstart, __cur);
  __cxa_rethrow ();

  <bb 9> :
<L5>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_node (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE16_M_allocate_nodeEv, funcdef_no=10485, decl_uid=180588, cgraph_uid=7117, symbol_order=7911)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_node (struct _Deque_base * const this)
{
  union tree_node * * D.260125;
  union tree_node * * D.260123;

  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = &this->_M_impl;
  D.260125 = std::allocator_traits<std::allocator<tree_node*> >::allocate (_2, _1);
  D.260123 = D.260125;

  <bb 3> :
<L0>:
  return D.260123;

}



;; Function std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_M_set_node (_ZNSt15_Deque_iteratorIP9tree_nodeRS1_PS1_E11_M_set_nodeEPS3_, funcdef_no=9956, decl_uid=180469, cgraph_uid=6588, symbol_order=7382)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_M_set_node (struct _Deque_iterator * const this, union tree_node * * * __new_node)
{
  <bb 2> :
  this->_M_node = __new_node;
  _1 = *__new_node;
  this->_M_first = _1;
  _2 = this->_M_first;
  _3 = std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_S_buffer_size ();
  _4 = _3 * 8;
  _5 = _2 + _4;
  this->_M_last = _5;
  return;

}



;; Function std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_S_buffer_size (_ZNSt15_Deque_iteratorIP9tree_nodeRS1_PS1_E14_S_buffer_sizeEv, funcdef_no=10486, decl_uid=180401, cgraph_uid=7118, symbol_order=7912)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_S_buffer_size ()
{
  size_t D.260126;

  <bb 2> :
  D.260126 = std::__deque_buf_size (8);

  <bb 3> :
<L0>:
  return D.260126;

}



;; Function CstmtStack::CstmtStack (_ZN10CstmtStackC2Ev, funcdef_no=6235, decl_uid=186913, cgraph_uid=3211, symbol_order=3973)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void CstmtStack::CstmtStack (struct CstmtStack * const this)
{
  <bb 2> :
  _1 = &this->D.183215;
  std::stack<gimple*>::stack<> (_1);
  return;

}



;; Function std::stack<gimple*>::stack<> (_ZNSt5stackIP6gimpleSt5dequeIS1_SaIS1_EEEC2IS4_vEEv, funcdef_no=7609, decl_uid=186898, cgraph_uid=4241, symbol_order=5027)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::stack<gimple*>::stack<> (struct stack * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->c = {};
  _1 = &this->c;
  std::deque<gimple*, std::allocator<gimple*> >::deque (_1);
  return;

}



;; Function std::deque<gimple*, std::allocator<gimple*> >::deque (_ZNSt5dequeIP6gimpleSaIS1_EEC2Ev, funcdef_no=7607, decl_uid=183030, cgraph_uid=4238, symbol_order=5024)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::deque<gimple*, std::allocator<gimple*> >::deque (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.183038;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_base (_1);
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_base (_ZNSt11_Deque_baseIP6gimpleSaIS1_EEC2Ev, funcdef_no=8444, decl_uid=182482, cgraph_uid=5076, symbol_order=5866)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_base (struct _Deque_base * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::_Deque_impl (_1);
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_initialize_map (this, 0);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::~_Deque_impl (_2);
  resx 1

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::_Deque_impl (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE11_Deque_implC2Ev, funcdef_no=9231, decl_uid=182429, cgraph_uid=5863, symbol_order=6653)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::_Deque_impl (struct _Deque_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<gimple*>::allocator (this);
  _1 = &this->D.182432;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl_data::_Deque_impl_data (_1);
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl_data::_Deque_impl_data (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE16_Deque_impl_dataC2Ev, funcdef_no=9965, decl_uid=182357, cgraph_uid=6597, symbol_order=7391)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl_data::_Deque_impl_data (struct _Deque_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_map = 0B;
  this->_M_map_size = 0;
  _1 = &this->_M_start;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (_1);
  _2 = &this->_M_finish;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (_2);
  return;

}



;; Function std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (_ZNSt15_Deque_iteratorIP6gimpleRS1_PS1_EC2Ev, funcdef_no=10496, decl_uid=182259, cgraph_uid=7128, symbol_order=7922)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (struct _Deque_iterator * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_cur = 0B;
  this->_M_first = 0B;
  this->_M_last = 0B;
  this->_M_node = 0B;
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_initialize_map (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE17_M_initialize_mapEm, funcdef_no=9233, decl_uid=182295, cgraph_uid=5865, symbol_order=6655)

Removing basic block 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_initialize_map (struct _Deque_base * const this, size_t __num_elements)
{
  struct gimple * * * D.260129;
  struct gimple * * * __nfinish;
  struct gimple * * * __nstart;
  const size_t __num_nodes;
  const long unsigned int D.234000;
  const long unsigned int D.234001;

  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = __num_elements / _1;
  __num_nodes = _2 + 1;
  _3 = __num_nodes + 2;
  D.234001 = _3;
  D.234000 = 8;
  _4 = std::max<long unsigned int> (&D.234000, &D.234001);
  _5 = *_4;
  this->_M_impl.D.182432._M_map_size = _5;
  D.234000 = {CLOBBER};
  D.234001 = {CLOBBER};
  _6 = this->_M_impl.D.182432._M_map_size;
  D.260129 = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_map (this, _6);
  _7 = D.260129;
  this->_M_impl.D.182432._M_map = _7;
  _8 = this->_M_impl.D.182432._M_map;
  _9 = this->_M_impl.D.182432._M_map_size;
  _10 = _9 - __num_nodes;
  _11 = _10 / 2;
  _12 = _11 * 8;
  __nstart = _8 + _12;
  _13 = __num_nodes * 8;
  __nfinish = __nstart + _13;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_create_nodes (this, __nstart, __nfinish);

  <bb 3> :
  _17 = &this->_M_impl.D.182432._M_start;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_M_set_node (_17, __nstart);
  _18 = &this->_M_impl.D.182432._M_finish;
  _19 = __nfinish + 18446744073709551608;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_M_set_node (_18, _19);
  _20 = this->_M_impl.D.182432._M_start._M_first;
  this->_M_impl.D.182432._M_start._M_cur = _20;
  _21 = this->_M_impl.D.182432._M_finish._M_first;
  _22 = std::__deque_buf_size (8);
  _23 = __num_elements % _22;
  _24 = _23 * 8;
  _25 = _21 + _24;
  this->_M_impl.D.182432._M_finish._M_cur = _25;
  return;

  <bb 4> :
<L0>:
  eh_dispatch 3

  <bb 5> :
<L1>:
  _14 = __builtin_eh_pointer (3);
  __cxa_begin_catch (_14);
  _15 = this->_M_impl.D.182432._M_map_size;
  _16 = this->_M_impl.D.182432._M_map;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_map (this, _16, _15);
  this->_M_impl.D.182432._M_map = 0B;
  this->_M_impl.D.182432._M_map_size = 0;
  __cxa_rethrow ();

  <bb 6> :
<L2>:
  __cxa_end_catch ();
  resx 4

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_map (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE15_M_allocate_mapEm, funcdef_no=9967, decl_uid=182288, cgraph_uid=6599, symbol_order=7393)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 6 3 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
;; 6 succs { 7 }
;; 7 succs { }
struct gimple * * * std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_map (struct _Deque_base * const this, size_t __n)
{
  struct gimple * * * D.260135;
  struct _Map_alloc_type __map_alloc;
  struct gimple * * * D.260133;

  <bb 2> :
  __map_alloc = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_map_allocator (this); [return slot optimization]
  D.260135 = std::allocator_traits<std::allocator<gimple**> >::allocate (&__map_alloc, __n);

  <bb 3> :
  D.260133 = D.260135;

  <bb 4> :
  std::allocator<gimple**>::~allocator (&__map_alloc);
  __map_alloc = {CLOBBER};

  <bb 5> :
<L2>:
  return D.260133;

  <bb 6> :
<L3>:
  std::allocator<gimple**>::~allocator (&__map_alloc);
  resx 2

  <bb 7> :
<L4>:
  __map_alloc = {CLOBBER};
  resx 1

}



;; Function std::allocator_traits<std::allocator<gimple**> >::allocate (_ZNSt16allocator_traitsISaIPP6gimpleEE8allocateERS3_m, funcdef_no=10498, decl_uid=234035, cgraph_uid=7130, symbol_order=7924)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct gimple * * * std::allocator_traits<std::allocator<gimple**> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct gimple * * * D.260142;
  struct gimple * * * D.260140;

  <bb 2> :
  D.260142 = __gnu_cxx::new_allocator<gimple**>::allocate (__a, __n, 0B);
  D.260140 = D.260142;

  <bb 3> :
<L0>:
  return D.260140;

}



;; Function __gnu_cxx::new_allocator<gimple**>::allocate (_ZN9__gnu_cxx13new_allocatorIPP6gimpleE8allocateEmPKv, funcdef_no=10849, decl_uid=181902, cgraph_uid=7482, symbol_order=8278)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct gimple * * * __gnu_cxx::new_allocator<gimple**>::allocate (struct new_allocator * const this, size_type __n, const void * D.246720)
{
  struct gimple * * * D.260153;
  struct gimple * * * D.260152;
  align_val_t __al;
  struct gimple * * * D.260150;
  bool retval.2211;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<gimple**>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.2211 = _4 != 0;
  if (retval.2211 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 2305843009213693951)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 8;
  D.260153 = operator new (_6);
  D.260150 = D.260153;

  <bb 7> :
<L6>:
  return D.260150;

}



;; Function __gnu_cxx::new_allocator<gimple**>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIPP6gimpleE11_M_max_sizeEv, funcdef_no=10850, decl_uid=181929, cgraph_uid=7481, symbol_order=8277)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<gimple**>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.260154;

  <bb 2> :
  D.260154 = 1152921504606846975;

  <bb 3> :
<L0>:
  return D.260154;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_create_nodes (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE15_M_create_nodesEPPS1_S5_, funcdef_no=9968, decl_uid=182298, cgraph_uid=6600, symbol_order=7394)

Removing basic block 8
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 5, latch 4
;;  depth 1, outer 0
;;  nodes: 5 4 3
;; 2 succs { 5 }
;; 3 succs { 7 4 }
;; 4 succs { 5 }
;; 5 succs { 3 6 }
;; 6 succs { 1 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_create_nodes (struct _Deque_base * const this, struct gimple * * * __nstart, struct gimple * * * __nfinish)
{
  struct gimple * * D.260156;
  struct gimple * * * __cur;

  <bb 2> :
  __cur = __nstart;
  goto <bb 5>; [INV]

  <bb 3> :
  D.260156 = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_node (this);

  <bb 4> :
  _1 = D.260156;
  *__cur = _1;
  __cur = __cur + 8;

  <bb 5> :
  if (__cur < __nfinish)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  return;

  <bb 7> :
<L3>:
  eh_dispatch 1

  <bb 8> :
<L4>:
  _2 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_2);
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_destroy_nodes (this, __nstart, __cur);
  __cxa_rethrow ();

  <bb 9> :
<L5>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_node (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE16_M_allocate_nodeEv, funcdef_no=10499, decl_uid=182283, cgraph_uid=7131, symbol_order=7925)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_node (struct _Deque_base * const this)
{
  struct gimple * * D.260162;
  struct gimple * * D.260160;

  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = &this->_M_impl;
  D.260162 = std::allocator_traits<std::allocator<gimple*> >::allocate (_2, _1);
  D.260160 = D.260162;

  <bb 3> :
<L0>:
  return D.260160;

}



;; Function std::_Deque_iterator<gimple*, gimple*&, gimple**>::_M_set_node (_ZNSt15_Deque_iteratorIP6gimpleRS1_PS1_E11_M_set_nodeEPS3_, funcdef_no=9969, decl_uid=182178, cgraph_uid=6601, symbol_order=7395)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<gimple*, gimple*&, gimple**>::_M_set_node (struct _Deque_iterator * const this, struct gimple * * * __new_node)
{
  <bb 2> :
  this->_M_node = __new_node;
  _1 = *__new_node;
  this->_M_first = _1;
  _2 = this->_M_first;
  _3 = std::_Deque_iterator<gimple*, gimple*&, gimple**>::_S_buffer_size ();
  _4 = _3 * 8;
  _5 = _2 + _4;
  this->_M_last = _5;
  return;

}



;; Function std::_Deque_iterator<gimple*, gimple*&, gimple**>::_S_buffer_size (_ZNSt15_Deque_iteratorIP6gimpleRS1_PS1_E14_S_buffer_sizeEv, funcdef_no=10500, decl_uid=182112, cgraph_uid=7132, symbol_order=7926)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t std::_Deque_iterator<gimple*, gimple*&, gimple**>::_S_buffer_size ()
{
  size_t D.260163;

  <bb 2> :
  D.260163 = std::__deque_buf_size (8);

  <bb 3> :
<L0>:
  return D.260163;

}



;; Function _GLOBAL__sub_I_gcc_plugin.c (_GLOBAL__sub_I_gcc_plugin.c, funcdef_no=11116, decl_uid=248327, cgraph_uid=7748, symbol_order=8949)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void _GLOBAL__sub_I_gcc_plugin.c ()
{
  <bb 2> :
  __static_initialization_and_destruction_0 (1, 65535);
  return;

}


