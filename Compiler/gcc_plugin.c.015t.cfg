
;; Function Graph::init_Graph (_ZN5Graph10init_GraphEi, funcdef_no=6151, decl_uid=167779, cgraph_uid=3140, symbol_order=3814)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 6 8 }
;; 8 succs { 1 }
void Graph::init_Graph (struct Graph * const this, int V)
{
  void * D.248359;
  struct list * D.168967;
  size_t iftmp.2;
  long int D.168820;
  struct list * D.168819;
  struct list * D.168818;
  struct list * retval.1;
  sizetype D.248344;
  size_t iftmp.0;
  void * D.168817;

  <bb 2> :
  this->V = V;
  D.248344 = (sizetype) V;
  if (D.248344 <= 384307168202282325)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = D.248344 * 24;
  iftmp.0 = _1 + 8;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.0 = 18446744073709551615;

  <bb 5> :
  D.248359 = operator new [] (iftmp.0);
  D.168817 = D.248359;
  MEM[(sizetype *)D.168817] = D.248344;
  D.168818 = D.168817 + 8;
  D.168819 = D.168818;
  _2 = D.248344 + 18446744073709551615;
  D.168820 = (long int) _2;
  goto <bb 7>; [INV]

  <bb 6> :
  std::__cxx11::list<int>::list (D.168819);
  D.168819 = D.168819 + 24;
  D.168820 = D.168820 + -1;

  <bb 7> :
  if (D.168820 >= 0)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  retval.1 = D.168818;
  _8 = D.168817 + 8;
  this->adj = _8;
  return;

}



;; Function std::__cxx11::list<int>::list (_ZNSt7__cxx114listIiSaIiEEC2Ev, funcdef_no=6160, decl_uid=168806, cgraph_uid=3135, symbol_order=3809)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::list<int>::list (struct list * const this)
{
  <bb 2> :
  _1 = &this->D.168814;
  std::__cxx11::_List_base<int, std::allocator<int> >::_List_base (_1);
  return;

}



;; Function std::__cxx11::_List_base<int, std::allocator<int> >::_List_base (_ZNSt7__cxx1110_List_baseIiSaIiEEC2Ev, funcdef_no=6158, decl_uid=168280, cgraph_uid=3132, symbol_order=3806)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::_List_base<int, std::allocator<int> >::_List_base (struct _List_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::_List_impl (_1);
  return;

}



;; Function std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::_List_impl (_ZNSt7__cxx1110_List_baseIiSaIiEE10_List_implC2Ev, funcdef_no=7524, decl_uid=168069, cgraph_uid=4156, symbol_order=4945)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl::_List_impl (struct _List_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<std::_List_node<int> >::allocator (this);
  _1 = &this->_M_node;
  std::__detail::_List_node_header::_List_node_header (_1);
  return;

}



;; Function std::allocator<std::_List_node<int> >::allocator (_ZNSaISt10_List_nodeIiEEC2Ev, funcdef_no=8337, decl_uid=167976, cgraph_uid=4969, symbol_order=5762)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<std::_List_node<int> >::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator (_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEEC2Ev, funcdef_no=9172, decl_uid=167905, cgraph_uid=5804, symbol_order=6597)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::__detail::_List_node_header::_List_node_header (_ZNSt8__detail17_List_node_headerC2Ev, funcdef_no=4671, decl_uid=144698, cgraph_uid=2594, symbol_order=2784)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__detail::_List_node_header::_List_node_header (struct _List_node_header * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::__detail::_List_node_header::_M_init (this);
  return;

}



;; Function std::__detail::_List_node_header::_M_init (_ZNSt8__detail17_List_node_header7_M_initEv, funcdef_no=4677, decl_uid=144685, cgraph_uid=2600, symbol_order=2790)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__detail::_List_node_header::_M_init (struct _List_node_header * const this)
{
  <bb 2> :
  _1 = &this->D.144700;
  this->D.144700._M_prev = _1;
  _2 = this->D.144700._M_prev;
  this->D.144700._M_next = _2;
  this->_M_size = 0;
  return;

}



;; Function Graph::addEdge (_ZN5Graph7addEdgeEii, funcdef_no=6165, decl_uid=167784, cgraph_uid=3141, symbol_order=3815)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void Graph::addEdge (struct Graph * const this, int v, int w)
{
  <bb 2> :
  _1 = this->adj;
  _2 = (long unsigned int) v;
  _3 = _2 * 24;
  _4 = _1 + _3;
  std::__cxx11::list<int>::push_back (_4, &w);
  return;

}



;; Function std::__cxx11::list<int>::push_back (_ZNSt7__cxx114listIiSaIiEE9push_backERKi, funcdef_no=7532, decl_uid=168488, cgraph_uid=4164, symbol_order=4953)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::list<int>::push_back (struct list * const this, const value_type & __x)
{
  struct _List_iterator D.248361;

  <bb 2> :
  D.248361 = std::__cxx11::list<int>::end (this);
  std::__cxx11::list<int>::_M_insert<const int&> (this, D.248361, __x);
  return;

}



;; Function std::__cxx11::list<int>::end (_ZNSt7__cxx114listIiSaIiEE3endEv, funcdef_no=7537, decl_uid=168434, cgraph_uid=4169, symbol_order=4958)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::__cxx11::list<int>::end (struct list * const this)
{
  struct iterator D.211136;
  struct iterator D.248362;

  <bb 2> :
  _1 = &this->D.168814._M_impl._M_node.D.144700;
  std::_List_iterator<int>::_List_iterator (&D.211136, _1);
  D.248362 = D.211136;
  D.211136 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248362;

}



;; Function std::_List_iterator<int>::_List_iterator (_ZNSt14_List_iteratorIiEC2EPNSt8__detail15_List_node_baseE, funcdef_no=8345, decl_uid=169031, cgraph_uid=4977, symbol_order=5770)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_List_iterator<int>::_List_iterator (struct _List_iterator * const this, struct _List_node_base * __x)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_node = __x;
  return;

}



;; Function std::__cxx11::list<int>::_M_insert<const int&> (_ZNSt7__cxx114listIiSaIiEE9_M_insertIJRKiEEEvSt14_List_iteratorIiEDpOT_, funcdef_no=8343, decl_uid=211126, cgraph_uid=4975, symbol_order=5768)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::list<int>::_M_insert<const int&> (struct list * const this, struct iterator __position, const int & __args#0)
{
  struct _Node * D.248365;
  struct _Node * __tmp;

  <bb 2> :
  _1 = std::forward<const int&> (__args#0);
  D.248365 = std::__cxx11::list<int>::_M_create_node<const int&> (this, _1);
  __tmp = D.248365;
  _2 = &__tmp->D.211181;
  _3 = __position._M_node;
  std::__detail::_List_node_base::_M_hook (_2, _3);
  _4 = &this->D.168814;
  std::__cxx11::_List_base<int, std::allocator<int> >::_M_inc_size (_4, 1);
  return;

}



;; Function std::forward<const int&> (_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=9177, decl_uid=221786, cgraph_uid=5809, symbol_order=6602)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const int & std::forward<const int&> (const type & __t)
{
  const int & D.248366;

  <bb 2> :
  D.248366 = __t;

  <bb 3> :
<L0>:
  return D.248366;

}



;; Function std::__cxx11::list<int>::_M_create_node<const int&> (_ZNSt7__cxx114listIiSaIiEE14_M_create_nodeIJRKiEEEPSt10_List_nodeIiEDpOT_, funcdef_no=9178, decl_uid=221788, cgraph_uid=5810, symbol_order=6603)

Merging blocks 3 and 4
Merging blocks 3 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { }
struct _Node * std::__cxx11::list<int>::_M_create_node<const int&> (struct list * const this, const int & __args#0)
{
  struct _List_node * D.248370;
  struct __allocated_ptr __guard;
  struct allocator & __alloc;
  struct _List_node * __p;
  struct _Node * D.248368;

  <bb 2> :
  _1 = &this->D.168814;
  D.248370 = std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_node (_1);

  <bb 3> :
  __p = D.248370;
  _2 = &this->D.168814;
  __alloc = std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_Node_allocator (_2);
  std::__allocated_ptr<std::allocator<std::_List_node<int> > >::__allocated_ptr (&__guard, __alloc, __p);
  _3 = std::forward<const int&> (__args#0);
  _4 = std::_List_node<int>::_M_valptr (__p);
  std::allocator_traits<std::allocator<std::_List_node<int> > >::construct<int, const int&> (__alloc, _4, _3);
  std::__allocated_ptr<std::allocator<std::_List_node<int> > >::operator= (&__guard, 0);
  D.248368 = __p;
  std::__allocated_ptr<std::allocator<std::_List_node<int> > >::~__allocated_ptr (&__guard);
  __guard = {CLOBBER};

  <bb 4> :
<L2>:
  return D.248368;

  <bb 5> :
<L3>:
  __guard = {CLOBBER};
  resx 1

}



;; Function std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_node (_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_get_nodeEv, funcdef_no=9929, decl_uid=168182, cgraph_uid=6561, symbol_order=7358)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _List_node * std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_node (struct _List_base * const this)
{
  struct _List_node * D.248376;
  struct _List_node * D.248374;

  <bb 2> :
  _1 = &this->_M_impl;
  D.248376 = std::allocator_traits<std::allocator<std::_List_node<int> > >::allocate (_1, 1);
  D.248374 = D.248376;

  <bb 3> :
<L0>:
  return D.248374;

}



;; Function std::allocator_traits<std::allocator<std::_List_node<int> > >::allocate (_ZNSt16allocator_traitsISaISt10_List_nodeIiEEE8allocateERS2_m, funcdef_no=10474, decl_uid=168110, cgraph_uid=7106, symbol_order=7903)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct _List_node * std::allocator_traits<std::allocator<std::_List_node<int> > >::allocate (struct allocator_type & __a, size_type __n)
{
  struct _List_node * D.248379;
  struct _List_node * D.248377;

  <bb 2> :
  D.248379 = __gnu_cxx::new_allocator<std::_List_node<int> >::allocate (__a, __n, 0B);
  D.248377 = D.248379;

  <bb 3> :
<L0>:
  return D.248377;

}



;; Function __gnu_cxx::new_allocator<std::_List_node<int> >::allocate (_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE8allocateEmPKv, funcdef_no=10839, decl_uid=167860, cgraph_uid=7472, symbol_order=8271)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct _List_node * __gnu_cxx::new_allocator<std::_List_node<int> >::allocate (struct new_allocator * const this, size_type __n, const void * D.246703)
{
  struct _List_node * D.248390;
  struct _List_node * D.248389;
  align_val_t __al;
  struct _List_node * D.248387;
  bool retval.3;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<std::_List_node<int> >::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.3 = _4 != 0;
  if (retval.3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 768614336404564650)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 24;
  D.248390 = operator new (_6);
  D.248387 = D.248390;

  <bb 7> :
<L6>:
  return D.248387;

}



;; Function __gnu_cxx::new_allocator<std::_List_node<int> >::_M_max_size (_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIiEE11_M_max_sizeEv, funcdef_no=10840, decl_uid=167887, cgraph_uid=7471, symbol_order=8270)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<std::_List_node<int> >::_M_max_size (const struct new_allocator * const this)
{
  size_type D.248391;

  <bb 2> :
  D.248391 = 384307168202282325;

  <bb 3> :
<L0>:
  return D.248391;

}



;; Function std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_Node_allocator (_ZNSt7__cxx1110_List_baseIiSaIiEE21_M_get_Node_allocatorEv, funcdef_no=9174, decl_uid=168188, cgraph_uid=5806, symbol_order=6599)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Node_alloc_type & std::__cxx11::_List_base<int, std::allocator<int> >::_M_get_Node_allocator (struct _List_base * const this)
{
  struct _Node_alloc_type & D.248393;

  <bb 2> :
  D.248393 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248393;

}



;; Function std::__allocated_ptr<std::allocator<std::_List_node<int> > >::__allocated_ptr (_ZNSt15__allocated_ptrISaISt10_List_nodeIiEEEC2ERS2_PS1_, funcdef_no=9931, decl_uid=233746, cgraph_uid=6563, symbol_order=7360)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__allocated_ptr<std::allocator<std::_List_node<int> > >::__allocated_ptr (struct __allocated_ptr * const this, struct allocator & __a, struct _List_node * __ptr)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::__addressof<std::allocator<std::_List_node<int> > > (__a);
  this->_M_alloc = _1;
  this->_M_ptr = __ptr;
  return;

}



;; Function std::__addressof<std::allocator<std::_List_node<int> > > (_ZSt11__addressofISaISt10_List_nodeIiEEEPT_RS3_, funcdef_no=10475, decl_uid=241556, cgraph_uid=7107, symbol_order=7904)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator * std::__addressof<std::allocator<std::_List_node<int> > > (struct allocator & __r)
{
  struct allocator * D.248395;

  <bb 2> :
  D.248395 = __r;

  <bb 3> :
<L0>:
  return D.248395;

}



;; Function std::_List_node<int>::_M_valptr (_ZNSt10_List_nodeIiE9_M_valptrEv, funcdef_no=8347, decl_uid=211177, cgraph_uid=4979, symbol_order=5772)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::_List_node<int>::_M_valptr (struct _List_node * const this)
{
  int * D.248397;

  <bb 2> :
  _1 = &this->_M_storage;
  D.248397 = __gnu_cxx::__aligned_membuf<int>::_M_ptr (_1);

  <bb 3> :
<L0>:
  return D.248397;

}



;; Function __gnu_cxx::__aligned_membuf<int>::_M_ptr (_ZN9__gnu_cxx16__aligned_membufIiE6_M_ptrEv, funcdef_no=9180, decl_uid=211159, cgraph_uid=5812, symbol_order=6605)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * __gnu_cxx::__aligned_membuf<int>::_M_ptr (struct __aligned_membuf * const this)
{
  int * D.248399;

  <bb 2> :
  D.248399 = __gnu_cxx::__aligned_membuf<int>::_M_addr (this);

  <bb 3> :
<L0>:
  return D.248399;

}



;; Function __gnu_cxx::__aligned_membuf<int>::_M_addr (_ZN9__gnu_cxx16__aligned_membufIiE7_M_addrEv, funcdef_no=9938, decl_uid=211155, cgraph_uid=6570, symbol_order=7367)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void * __gnu_cxx::__aligned_membuf<int>::_M_addr (struct __aligned_membuf * const this)
{
  void * D.248401;

  <bb 2> :
  D.248401 = &this->_M_storage;

  <bb 3> :
<L0>:
  return D.248401;

}



;; Function std::allocator_traits<std::allocator<std::_List_node<int> > >::construct<int, const int&> (_ZNSt16allocator_traitsISaISt10_List_nodeIiEEE9constructIiJRKiEEEvRS2_PT_DpOT0_, funcdef_no=9936, decl_uid=233768, cgraph_uid=6568, symbol_order=7365)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<std::_List_node<int> > >::construct<int, const int&> (struct allocator_type & __a, int * __p, const int & __args#0)
{
  <bb 2> :
  _1 = std::forward<const int&> (__args#0);
  __gnu_cxx::new_allocator<std::_List_node<int> >::construct<int, const int&> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<std::_List_node<int> >::construct<int, const int&> (_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE9constructIiJRKiEEEvPT_DpOT0_, funcdef_no=10476, decl_uid=241571, cgraph_uid=7108, symbol_order=7905)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<std::_List_node<int> >::construct<int, const int&> (struct new_allocator * const this, int * __p, const int & __args#0)
{
  void * D.245147;
  void * D.245146;
  int D.245148;

  <bb 2> :
  _1 = std::forward<const int&> (__args#0);
  D.245148 = *_1;
  D.245146 = __p;
  D.245147 = operator new (4, D.245146);
  MEM[(int *)D.245147] = D.245148;
  return;

}



;; Function operator new (_ZnwmPv, funcdef_no=15, decl_uid=3700, cgraph_uid=16, symbol_order=15)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
void * operator new (size_t D.3698, void * __p)
{
  void * D.248403;

  <bb 2> :
  D.248403 = __p;

  <bb 3> :
<L0>:
  return D.248403;

}



;; Function std::__allocated_ptr<std::allocator<std::_List_node<int> > >::operator= (_ZNSt15__allocated_ptrISaISt10_List_nodeIiEEEaSEDn, funcdef_no=9937, decl_uid=233719, cgraph_uid=6569, symbol_order=7366)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __allocated_ptr & std::__allocated_ptr<std::allocator<std::_List_node<int> > >::operator= (struct __allocated_ptr * const this, <<< Unknown tree: nullptr_type >>> D.241575)
{
  struct __allocated_ptr & D.248405;

  <bb 2> :
  this->_M_ptr = 0B;
  D.248405 = this;

  <bb 3> :
<L0>:
  return D.248405;

}



;; Function std::__allocated_ptr<std::allocator<std::_List_node<int> > >::~__allocated_ptr (_ZNSt15__allocated_ptrISaISt10_List_nodeIiEEED2Ev, funcdef_no=9934, decl_uid=233753, cgraph_uid=6566, symbol_order=7363)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::__allocated_ptr<std::allocator<std::_List_node<int> > >::~__allocated_ptr (struct __allocated_ptr * const this)
{
  <bb 2> :
  _1 = this->_M_ptr;
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = this->_M_ptr;
  _3 = this->_M_alloc;
  std::allocator_traits<std::allocator<std::_List_node<int> > >::deallocate (_3, _2, 1);

  <bb 4> :
  *this = {CLOBBER};
  return;

}



;; Function std::allocator_traits<std::allocator<std::_List_node<int> > >::deallocate (_ZNSt16allocator_traitsISaISt10_List_nodeIiEEE10deallocateERS2_PS1_m, funcdef_no=9928, decl_uid=168117, cgraph_uid=6560, symbol_order=7357)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<std::_List_node<int> > >::deallocate (struct allocator_type & __a, struct _List_node * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate (_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE10deallocateEPS2_m, funcdef_no=10473, decl_uid=167864, cgraph_uid=7105, symbol_order=7902)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate (struct new_allocator * const this, struct _List_node * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::__cxx11::_List_base<int, std::allocator<int> >::_M_inc_size (_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_inc_sizeEm, funcdef_no=9179, decl_uid=168080, cgraph_uid=5811, symbol_order=6604)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::_List_base<int, std::allocator<int> >::_M_inc_size (struct _List_base * const this, size_t __n)
{
  <bb 2> :
  _1 = this->_M_impl._M_node._M_size;
  _2 = __n + _1;
  this->_M_impl._M_node._M_size = _2;
  return;

}



;; Function Graph::DFSUtil (_ZN5Graph7DFSUtilEiPb, funcdef_no=6166, decl_uid=167775, cgraph_uid=3142, symbol_order=3816)

Removing basic block 13
Removing basic block 15
Removing basic block 18
Removing basic block 20
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;;
;; Loop 1
;;  header 18, latch 17
;;  depth 1, outer 0
;;  nodes: 18 17 5 16 15 9 14 10 13 12 11 8 7 6 3 4
;;
;; Loop 2
;;  header 15, latch 14
;;  depth 2, outer 1
;;  nodes: 15 14 10 13 12 11
;; 2 succs { 18 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 17 }
;; 6 succs { 20 7 }
;; 7 succs { 20 8 }
;; 8 succs { 9 16 }
;; 9 succs { 15 }
;; 10 succs { 11 14 }
;; 11 succs { 12 13 }
;; 12 succs { 20 14 }
;; 13 succs { 20 14 }
;; 14 succs { 15 }
;; 15 succs { 10 17 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 3 19 }
;; 19 succs { 1 }
;; 20 succs { }
void Graph::DFSUtil (struct Graph * const this, int v, bool * visited)
{
  struct iterator i;
  struct iterator D.169074;
  bool retval.12;
  bool retval.11;
  bool retval.8;
  bool retval.7;
  bool * visited.6;
  bool retval.5;
  bool retval.4;

  <bb 2> :
  _1 = (sizetype) v;
  _2 = visited + _1;
  *_2 = 1;
  std::_List_iterator<int>::_List_iterator (&i);
  _3 = this->adj;
  _4 = (long unsigned int) v;
  _5 = _4 * 24;
  _6 = _3 + _5;
  i = std::__cxx11::list<int>::begin (_6);
  goto <bb 18>; [INV]

  <bb 3> :
  _7 = std::_List_iterator<int>::operator* (&i);
  _8 = *_7;
  _9 = this->end;
  retval.4 = _8 == _9;
  if (retval.4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  this->succ = 1;

  <bb 5> :
  visited.6 = visited;
  _10 = std::_List_iterator<int>::operator* (&i);
  _11 = *_10;
  _12 = (sizetype) _11;
  _13 = visited.6 + _12;
  _14 = *_13;
  retval.5 = ~_14;
  if (retval.5 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 6> :
  _15 = &this->stack;
  _16 = std::_List_iterator<int>::operator* (&i);
  std::vector<int>::push_back (_15, _16);

  <bb 7> :
  _17 = std::_List_iterator<int>::operator* (&i);
  _18 = *_17;
  Graph::DFSUtil (this, _18, visited);

  <bb 8> :
  _19 = this->succ;
  _20 = (int) _19;
  if (_20 == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 9> :
  goto <bb 15>; [INV]

  <bb 10> :
  _21 = &this->stack;
  _22 = std::vector<int>::operator[] (_21, 0);
  _23 = *_22;
  retval.7 = _23 == 2;
  if (retval.7 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 11> :
  _24 = &this->stack;
  _25 = &this->stack;
  _26 = std::vector<int>::size (_25);
  _27 = _26 + 18446744073709551615;
  _28 = std::vector<int>::operator[] (_24, _27);
  _29 = *_28;
  _30 = this->end;
  retval.8 = _29 != _30;
  if (retval.8 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _31 = &this->stack;
  _32 = &this->stack;
  _33 = std::vector<int>::size (_32);
  _34 = _33 + 18446744073709551615;
  _35 = std::vector<int>::operator[] (_31, _34);
  _36 = *_35;
  stderr.9_37 = stderr;
  fprintf (stderr.9_37, "now stack %d\n", _36);
  goto <bb 14>; [INV]

  <bb 13> :
  _38 = &this->stack;
  _39 = &this->stack;
  _40 = std::vector<int>::size (_39);
  _41 = _40 + 18446744073709551615;
  _42 = std::vector<int>::operator[] (_38, _41);
  _43 = *_42;
  stderr.10_44 = stderr;
  fprintf (stderr.10_44, "find stack %d\n", _43);

  <bb 14> :
  _45 = &this->stack;
  std::vector<int>::pop_back (_45);

  <bb 15> :
  _46 = &this->stack;
  _47 = std::vector<int>::size (_46);
  retval.11 = _47 != 0;
  if (retval.11 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  _48 = &this->stack;
  std::vector<int>::pop_back (_48);

  <bb 17> :
  std::_List_iterator<int>::operator++ (&i);

  <bb 18> :
  _49 = this->adj;
  _50 = (long unsigned int) v;
  _51 = _50 * 24;
  _52 = _49 + _51;
  D.169074 = std::__cxx11::list<int>::end (_52);
  retval.12 = std::operator!= (&i, &D.169074);
  D.169074 = {CLOBBER};
  if (retval.12 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  i = {CLOBBER};
  return;

  <bb 20> :
<L21>:
  i = {CLOBBER};
  resx 1

}



;; Function std::_List_iterator<int>::_List_iterator (_ZNSt14_List_iteratorIiEC2Ev, funcdef_no=7534, decl_uid=169036, cgraph_uid=4166, symbol_order=4955)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_List_iterator<int>::_List_iterator (struct _List_iterator * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_node = 0B;
  return;

}



;; Function std::__cxx11::list<int>::begin (_ZNSt7__cxx114listIiSaIiEE5beginEv, funcdef_no=7536, decl_uid=168430, cgraph_uid=4168, symbol_order=4957)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::__cxx11::list<int>::begin (struct list * const this)
{
  struct iterator D.211134;
  struct iterator D.248436;

  <bb 2> :
  _1 = this->D.168814._M_impl._M_node.D.144700._M_next;
  std::_List_iterator<int>::_List_iterator (&D.211134, _1);
  D.248436 = D.211134;
  D.211134 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248436;

}



;; Function std::vector<int>::push_back (_ZNSt6vectorIiSaIiEE9push_backERKi, funcdef_no=7541, decl_uid=167420, cgraph_uid=4174, symbol_order=4963)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<int>::push_back (struct vector * const this, const value_type & __x)
{
  struct __normal_iterator D.248442;

  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_finish;
  _2 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.167768._M_impl.D.167081._M_finish;
  _4 = &this->D.167768._M_impl;
  std::allocator_traits<std::allocator<int> >::construct<int, const int&> (_4, _3, __x);
  _5 = this->D.167768._M_impl.D.167081._M_finish;
  _6 = _5 + 4;
  this->D.167768._M_impl.D.167081._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.248442 = std::vector<int>::end (this);
  std::vector<int>::_M_realloc_insert<const int&> (this, D.248442, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<int> >::construct<int, const int&> (_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_, funcdef_no=8348, decl_uid=211187, cgraph_uid=4980, symbol_order=5773)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<int> >::construct<int, const int&> (struct allocator_type & __a, int * __p, const int & __args#0)
{
  <bb 2> :
  _1 = std::forward<const int&> (__args#0);
  __gnu_cxx::new_allocator<int>::construct<int, const int&> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::construct<int, const int&> (_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_, funcdef_no=9181, decl_uid=221800, cgraph_uid=5813, symbol_order=6606)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::construct<int, const int&> (struct new_allocator * const this, int * __p, const int & __args#0)
{
  void * D.233783;
  void * D.233782;
  int D.233784;

  <bb 2> :
  _1 = std::forward<const int&> (__args#0);
  D.233784 = *_1;
  D.233782 = __p;
  D.233783 = operator new (4, D.233782);
  MEM[(int *)D.233783] = D.233784;
  return;

}



;; Function std::vector<int>::end (_ZNSt6vectorIiSaIiEE3endEv, funcdef_no=8349, decl_uid=167353, cgraph_uid=4981, symbol_order=5774)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<int>::end (struct vector * const this)
{
  struct iterator D.221823;
  struct iterator D.248443;

  <bb 2> :
  _1 = &this->D.167768._M_impl.D.167081._M_finish;
  __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (&D.221823, _1);
  D.248443 = D.221823;
  D.221823 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248443;

}



;; Function __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_, funcdef_no=9183, decl_uid=211434, cgraph_uid=5815, symbol_order=6608)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (struct __normal_iterator * const this, int * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<int>::_M_realloc_insert<const int&> (_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_, funcdef_no=8350, decl_uid=211453, cgraph_uid=4985, symbol_order=5778)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::_M_realloc_insert<const int&> (struct vector * const this, struct iterator __position, const int & __args#0)
{
  int * D.248450;
  const size_type D.248449;
  int * __new_finish;
  int * __new_start;
  const size_type __elems_before;
  int * __old_finish;
  int * __old_start;
  const size_type __len;
  struct iterator D.221831;

  <bb 2> :
  D.248449 = std::vector<int>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.248449;
  __old_start = this->D.167768._M_impl.D.167081._M_start;
  __old_finish = this->D.167768._M_impl.D.167081._M_finish;
  D.221831 = std::vector<int>::begin (this);
  _1 = __gnu_cxx::operator-<int*, std::vector<int> > (&__position, &D.221831);
  __elems_before = (const size_type) _1;
  D.221831 = {CLOBBER};
  _2 = &this->D.167768;
  D.248450 = std::_Vector_base<int, std::allocator<int> >::_M_allocate (_2, __len);
  __new_start = D.248450;
  __new_finish = __new_start;
  _3 = std::forward<const int&> (__args#0);
  _4 = __elems_before * 4;
  _5 = __new_start + _4;
  _6 = &this->D.167768._M_impl;
  std::allocator_traits<std::allocator<int> >::construct<int, const int&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.167768;
  _8 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<int>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 4;
  _11 = &this->D.167768;
  _12 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<int>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.167768;
  _23 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 4;
  _26 = (long unsigned int) _25;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_22, __old_start, _26);
  this->D.167768._M_impl.D.167081._M_start = __new_start;
  this->D.167768._M_impl.D.167081._M_finish = __new_finish;
  _27 = __len * 4;
  _28 = __new_start + _27;
  this->D.167768._M_impl.D.167081._M_end_of_storage = _28;
  return;

}



;; Function std::vector<int>::_M_check_len (_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc, funcdef_no=9185, decl_uid=167615, cgraph_uid=5817, symbol_order=6610)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<int>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.15;
  size_type D.248454;
  const long unsigned int D.233793;
  bool retval.13;

  <bb 2> :
  _1 = std::vector<int>::max_size (this);
  _2 = std::vector<int>::size (this);
  _3 = _1 - _2;
  __n.14_4 = __n;
  retval.13 = _3 < __n.14_4;
  if (retval.13 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<int>::size (this);
  _6 = std::vector<int>::size (this);
  D.233793 = _6;
  _7 = std::max<long unsigned int> (&D.233793, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.233793 = {CLOBBER};
  _9 = std::vector<int>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<int>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.15 = std::vector<int>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.15 = __len;

  <bb 8> :
  D.248454 = iftmp.15;

  <bb 9> :
<L6>:
  return D.248454;

}



;; Function std::max<long unsigned int> (_ZSt3maxImERKT_S2_S2_, funcdef_no=9940, decl_uid=156763, cgraph_uid=6572, symbol_order=7369)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
const long unsigned int & std::max<long unsigned int> (const long unsigned int & __a, const long unsigned int & __b)
{
  const long unsigned int & D.248463;

  <bb 2> :
  _1 = *__a;
  _2 = *__b;
  if (_1 < _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.248463 = __b;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.248463 = __a;

  <bb 5> :
<L2>:
  return D.248463;

}



;; Function std::vector<int>::max_size (_ZNKSt6vectorIiSaIiEE8max_sizeEv, funcdef_no=9939, decl_uid=167375, cgraph_uid=6571, symbol_order=7368)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<int>::max_size (const struct vector * const this)
{
  size_type D.248465;

  <bb 2> :
  _1 = &this->D.167768;
  _2 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_1);
  D.248465 = std::vector<int>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.248465;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv, funcdef_no=9777, decl_uid=166971, cgraph_uid=6409, symbol_order=7202)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.248467;

  <bb 2> :
  D.248467 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248467;

}



;; Function std::vector<int>::_S_max_size (_ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_, funcdef_no=10477, decl_uid=167622, cgraph_uid=7109, symbol_order=7906)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<int>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.248469;

  <bb 2> :
  __diffmax = 2305843009213693951;
  _1 = std::allocator_traits<std::allocator<int> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.248469 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248469;

}



;; Function std::allocator_traits<std::allocator<int> >::max_size (_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_, funcdef_no=10841, decl_uid=166906, cgraph_uid=7473, symbol_order=8272)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<int> >::max_size (const struct allocator_type & __a)
{
  size_type D.248472;

  <bb 2> :
  D.248472 = __gnu_cxx::new_allocator<int>::max_size (__a);

  <bb 3> :
<L0>:
  return D.248472;

}



;; Function __gnu_cxx::new_allocator<int>::max_size (_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv, funcdef_no=10982, decl_uid=166748, cgraph_uid=7614, symbol_order=8413)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<int>::max_size (const struct new_allocator * const this)
{
  size_type D.248474;

  <bb 2> :
  D.248474 = __gnu_cxx::new_allocator<int>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.248474;

}



;; Function __gnu_cxx::new_allocator<int>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIiE11_M_max_sizeEv, funcdef_no=10479, decl_uid=166767, cgraph_uid=7110, symbol_order=7907)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<int>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.248476;

  <bb 2> :
  D.248476 = 2305843009213693951;

  <bb 3> :
<L0>:
  return D.248476;

}



;; Function std::min<long unsigned int> (_ZSt3minImERKT_S2_S2_, funcdef_no=10842, decl_uid=114557, cgraph_uid=7474, symbol_order=8273)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
const long unsigned int & std::min<long unsigned int> (const long unsigned int & __a, const long unsigned int & __b)
{
  const long unsigned int & D.248480;

  <bb 2> :
  _1 = *__b;
  _2 = *__a;
  if (_1 < _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.248480 = __b;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.248480 = __a;

  <bb 5> :
<L2>:
  return D.248480;

}



;; Function std::vector<int>::begin (_ZNSt6vectorIiSaIiEE5beginEv, funcdef_no=9186, decl_uid=167349, cgraph_uid=5818, symbol_order=6611)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<int>::begin (struct vector * const this)
{
  struct iterator D.233795;
  struct iterator D.248482;

  <bb 2> :
  _1 = &this->D.167768._M_impl.D.167081._M_start;
  __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (&D.233795, _1);
  D.248482 = D.233795;
  D.233795 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248482;

}



;; Function __gnu_cxx::operator-<int*, std::vector<int> > (_ZN9__gnu_cxxmiIPiSt6vectorIiSaIiEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_, funcdef_no=9187, decl_uid=221832, cgraph_uid=5819, symbol_order=6612)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<int*, std::vector<int> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.248485;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.248485 = _5 /[ex] 4;

  <bb 3> :
<L0>:
  return D.248485;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_M_allocate (_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm, funcdef_no=9188, decl_uid=167085, cgraph_uid=5820, symbol_order=6613)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
int * std::_Vector_base<int, std::allocator<int> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  int * D.248493;
  int * iftmp.16;
  int * D.248487;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.248493 = std::allocator_traits<std::allocator<int> >::allocate (_1, __n);
  iftmp.16 = D.248493;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.16 = 0B;

  <bb 5> :
  D.248487 = iftmp.16;

  <bb 6> :
<L3>:
  return D.248487;

}



;; Function std::allocator_traits<std::allocator<int> >::allocate (_ZNSt16allocator_traitsISaIiEE8allocateERS0_m, funcdef_no=9941, decl_uid=166886, cgraph_uid=6573, symbol_order=7370)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
int * std::allocator_traits<std::allocator<int> >::allocate (struct allocator_type & __a, size_type __n)
{
  int * D.248496;
  int * D.248494;

  <bb 2> :
  D.248496 = __gnu_cxx::new_allocator<int>::allocate (__a, __n, 0B);
  D.248494 = D.248496;

  <bb 3> :
<L0>:
  return D.248494;

}



;; Function __gnu_cxx::new_allocator<int>::allocate (_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv, funcdef_no=10478, decl_uid=166740, cgraph_uid=7111, symbol_order=7908)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
int * __gnu_cxx::new_allocator<int>::allocate (struct new_allocator * const this, size_type __n, const void * D.245154)
{
  int * D.248507;
  int * D.248506;
  align_val_t __al;
  int * D.248504;
  bool retval.17;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<int>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.17 = _4 != 0;
  if (retval.17 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 4611686018427387903)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 4;
  D.248507 = operator new (_6);
  D.248504 = D.248507;

  <bb 7> :
<L6>:
  return D.248504;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv, funcdef_no=8925, decl_uid=166969, cgraph_uid=5557, symbol_order=6350)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.248508;

  <bb 2> :
  D.248508 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248508;

}



;; Function __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv, funcdef_no=9190, decl_uid=211421, cgraph_uid=5822, symbol_order=6615)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * const & __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (const struct __normal_iterator * const this)
{
  int * const & D.248510;

  <bb 2> :
  D.248510 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.248510;

}



;; Function std::vector<int>::_S_relocate (_ZNSt6vectorIiSaIiEE11_S_relocateEPiS2_S2_RS0_, funcdef_no=9189, decl_uid=167243, cgraph_uid=5821, symbol_order=6614)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::vector<int>::_S_relocate (int * __first, int * __last, int * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.248513;
  int * D.248512;

  <bb 2> :
  D.248512 = std::vector<int>::_S_do_relocate (__first, __last, __result, __alloc, D.248513);

  <bb 3> :
<L0>:
  return D.248512;

}



;; Function std::vector<int>::_S_do_relocate (_ZNSt6vectorIiSaIiEE14_S_do_relocateEPiS2_S2_RS0_St17integral_constantIbLb1EE, funcdef_no=9942, decl_uid=167231, cgraph_uid=6574, symbol_order=7371)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::vector<int>::_S_do_relocate (int * __first, int * __last, int * __result, struct _Tp_alloc_type & __alloc, struct true_type D.241592)
{
  int * D.248515;

  <bb 2> :
  D.248515 = std::__relocate_a<int*, int*, std::allocator<int> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.248515;

}



;; Function std::__relocate_a<int*, int*, std::allocator<int> > (_ZSt12__relocate_aIPiS0_SaIiEET0_T_S3_S2_RT1_, funcdef_no=10480, decl_uid=221996, cgraph_uid=7112, symbol_order=7909)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__relocate_a<int*, int*, std::allocator<int> > (int * __first, int * __last, int * __result, struct allocator & __alloc)
{
  int * D.248517;

  <bb 2> :
  _1 = std::__niter_base<int*> (__result);
  _2 = std::__niter_base<int*> (__last);
  _3 = std::__niter_base<int*> (__first);
  D.248517 = std::__relocate_a_1<int, int> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.248517;

}



;; Function std::__niter_base<int*> (_ZSt12__niter_baseIPiET_S1_, funcdef_no=10781, decl_uid=222002, cgraph_uid=7413, symbol_order=8210)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__niter_base<int*> (int * __it)
{
  int * D.248519;

  <bb 2> :
  D.248519 = __it;

  <bb 3> :
<L0>:
  return D.248519;

}



;; Function std::__relocate_a_1<int, int> (_ZSt14__relocate_a_1IiiENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS2_E4typeES4_S4_S4_RSaIT0_E, funcdef_no=10843, decl_uid=222170, cgraph_uid=7475, symbol_order=8274)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
int * std::__relocate_a_1<int, int> (int * __first, int * __last, int * __result, struct allocator & D.246720)
{
  ptrdiff_t __count;
  int * D.248524;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 4;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.18_2 = (long unsigned int) __count;
  _3 = __count.18_2 * 4;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.19_4 = (long unsigned int) __count;
  _5 = __count.19_4 * 4;
  D.248524 = __result + _5;

  <bb 5> :
<L3>:
  return D.248524;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim, funcdef_no=8924, decl_uid=167088, cgraph_uid=5556, symbol_order=6349)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_M_deallocate (struct _Vector_base * const this, int * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<int> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<int> >::deallocate (_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim, funcdef_no=9757, decl_uid=166893, cgraph_uid=6389, symbol_order=7182)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<int> >::deallocate (struct allocator_type & __a, int * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::deallocate (_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim, funcdef_no=10329, decl_uid=166744, cgraph_uid=6961, symbol_order=7758)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<int>::deallocate (struct new_allocator * const this, int * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 4;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::_List_iterator<int>::operator* (_ZNKSt14_List_iteratorIiEdeEv, funcdef_no=7540, decl_uid=169007, cgraph_uid=4172, symbol_order=4961)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int & std::_List_iterator<int>::operator* (const struct _List_iterator * const this)
{
  int & D.248532;

  <bb 2> :
  _1 = this->_M_node;
  D.248532 = std::_List_node<int>::_M_valptr (_1);

  <bb 3> :
<L0>:
  return D.248532;

}



;; Function std::vector<int>::operator[] (_ZNSt6vectorIiSaIiEEixEm, funcdef_no=7544, decl_uid=167393, cgraph_uid=4176, symbol_order=4965)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
value_type & std::vector<int>::operator[] (struct vector * const this, size_type __n)
{
  value_type & D.248534;

  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_start;
  _2 = __n * 4;
  D.248534 = _1 + _2;

  <bb 3> :
<L0>:
  return D.248534;

}



;; Function std::vector<int>::size (_ZNKSt6vectorIiSaIiEE4sizeEv, funcdef_no=7543, decl_uid=167373, cgraph_uid=4175, symbol_order=4964)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<int>::size (const struct vector * const this)
{
  size_type D.248536;

  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_finish;
  _2 = this->D.167768._M_impl.D.167081._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 4;
  D.248536 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.248536;

}



;; Function std::vector<int>::pop_back (_ZNSt6vectorIiSaIiEE8pop_backEv, funcdef_no=7545, decl_uid=167432, cgraph_uid=4177, symbol_order=4966)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::pop_back (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_finish;
  _2 = _1 + 18446744073709551612;
  this->D.167768._M_impl.D.167081._M_finish = _2;
  _3 = this->D.167768._M_impl.D.167081._M_finish;
  _4 = &this->D.167768._M_impl;
  std::allocator_traits<std::allocator<int> >::destroy<int> (_4, _3);
  return;

}



;; Function std::allocator_traits<std::allocator<int> >::destroy<int> (_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_, funcdef_no=8354, decl_uid=211461, cgraph_uid=4986, symbol_order=5779)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<int> >::destroy<int> (struct allocator_type & __a, int * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::destroy<int> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::destroy<int> (_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_, funcdef_no=9191, decl_uid=222182, cgraph_uid=5823, symbol_order=6616)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::destroy<int> (struct new_allocator * const this, int * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function std::_List_iterator<int>::operator++ (_ZNSt14_List_iteratorIiEppEv, funcdef_no=7539, decl_uid=169011, cgraph_uid=4171, symbol_order=4960)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Self & std::_List_iterator<int>::operator++ (struct _List_iterator * const this)
{
  struct _Self & D.248538;

  <bb 2> :
  _1 = this->_M_node;
  _2 = _1->_M_next;
  this->_M_node = _2;
  D.248538 = this;

  <bb 3> :
<L0>:
  return D.248538;

}



;; Function std::operator!= (_ZStneRKSt14_List_iteratorIiES2_, funcdef_no=7538, decl_uid=169024, cgraph_uid=4170, symbol_order=4959)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct _Self & __x, const struct _Self & __y)
{
  bool D.248540;

  <bb 2> :
  _1 = __x->_M_node;
  _2 = __y->_M_node;
  D.248540 = _1 != _2;

  <bb 3> :
<L0>:
  return D.248540;

}



;; Function Graph::DFS (_ZN5Graph3DFSEi, funcdef_no=6167, decl_uid=167797, cgraph_uid=3143, symbol_order=3817)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void Graph::DFS (struct Graph * const this, int v)
{
  bool * D.248543;
  int i;
  bool * visited;
  sizetype D.248542;

  <bb 2> :
  _1 = this->V;
  D.248542 = (sizetype) _1;
  D.248543 = operator new [] (D.248542);
  visited = D.248543;
  i = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _2 = (sizetype) i;
  _3 = visited + _2;
  *_3 = 0;
  i = i + 1;

  <bb 4> :
  _4 = this->V;
  if (i < _4)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  Graph::DFSUtil (this, v, visited);
  return;

}



;; Function Graph::is_succ (_ZN5Graph7is_succEP15basic_block_defS1_, funcdef_no=6168, decl_uid=167793, cgraph_uid=3144, symbol_order=3818)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { }
bool Graph::is_succ (struct Graph * const this, struct basic_block_def * bb1, struct basic_block_def * bb2)
{
  bool D.248544;
  value_type D.169110;

  <bb 2> :
  _1 = &this->stack;
  std::vector<int>::clear (_1);
  _2 = bb2->index;
  this->end = _2;
  this->succ = 0;
  _3 = &this->stack;
  D.169110 = 2;
  std::vector<int>::push_back (_3, &D.169110);

  <bb 3> :
  D.169110 = {CLOBBER};
  Graph::DFS (this, 2);
  D.248544 = this->succ;

  <bb 4> :
<L0>:
  return D.248544;

  <bb 5> :
<L1>:
  D.169110 = {CLOBBER};
  resx 1

}



;; Function std::vector<int>::clear (_ZNSt6vectorIiSaIiEE5clearEv, funcdef_no=7546, decl_uid=167475, cgraph_uid=4178, symbol_order=4967)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_start;
  std::vector<int>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<int>::_M_erase_at_end (_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi, funcdef_no=8355, decl_uid=167624, cgraph_uid=4987, symbol_order=5780)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<int>::_M_erase_at_end (struct vector * const this, int * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 4;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.167768;
  _5 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_4);
  _6 = this->D.167768._M_impl.D.167081._M_finish;
  std::_Destroy<int*, int> (__pos, _6, _5);
  this->D.167768._M_impl.D.167081._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::_Destroy<int*, int> (_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E, funcdef_no=8926, decl_uid=218171, cgraph_uid=5558, symbol_order=6351)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<int*, int> (int * __first, int * __last, struct allocator & D.232338)
{
  <bb 2> :
  std::_Destroy<int*> (__first, __last);
  return;

}



;; Function std::_Destroy<int*> (_ZSt8_DestroyIPiEvT_S1_, funcdef_no=9758, decl_uid=232340, cgraph_uid=6390, symbol_order=7183)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<int*> (int * __first, int * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<int*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<int*> (_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_, funcdef_no=10330, decl_uid=239418, cgraph_uid=6962, symbol_order=7759)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<int*> (int * D.243992, int * D.243993)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::vector<int>::push_back (_ZNSt6vectorIiSaIiEE9push_backEOi, funcdef_no=7547, decl_uid=167423, cgraph_uid=4179, symbol_order=4968)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::push_back (struct vector * const this, value_type & __x)
{
  <bb 2> :
  _1 = std::move<int&> (__x);
  std::vector<int>::emplace_back<int> (this, _1);
  return;

}



;; Function std::move<int&> (_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_, funcdef_no=8356, decl_uid=211556, cgraph_uid=4988, symbol_order=5781)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
type & std::move<int&> (int & __t)
{
  type & D.248550;

  <bb 2> :
  D.248550 = __t;

  <bb 3> :
<L0>:
  return D.248550;

}



;; Function std::vector<int>::emplace_back<int> (_ZNSt6vectorIiSaIiEE12emplace_backIJiEEERiDpOT_, funcdef_no=8357, decl_uid=211558, cgraph_uid=4989, symbol_order=5782)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
value_type & std::vector<int>::emplace_back<int> (struct vector * const this, int & __args#0)
{
  value_type & D.248556;
  struct __normal_iterator D.248555;

  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_finish;
  _2 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = std::forward<int> (__args#0);
  _4 = this->D.167768._M_impl.D.167081._M_finish;
  _5 = &this->D.167768._M_impl;
  std::allocator_traits<std::allocator<int> >::construct<int, int> (_5, _4, _3);
  _6 = this->D.167768._M_impl.D.167081._M_finish;
  _7 = _6 + 4;
  this->D.167768._M_impl.D.167081._M_finish = _7;
  goto <bb 5>; [INV]

  <bb 4> :
  _8 = std::forward<int> (__args#0);
  D.248555 = std::vector<int>::end (this);
  std::vector<int>::_M_realloc_insert<int> (this, D.248555, _8);

  <bb 5> :
  D.248556 = std::vector<int>::back (this);

  <bb 6> :
<L3>:
  return D.248556;

}



;; Function std::allocator_traits<std::allocator<int> >::construct<int, int> (_ZNSt16allocator_traitsISaIiEE9constructIiJiEEEvRS0_PT_DpOT0_, funcdef_no=9193, decl_uid=222203, cgraph_uid=5825, symbol_order=6618)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<int> >::construct<int, int> (struct allocator_type & __a, int * __p, int & __args#0)
{
  <bb 2> :
  _1 = std::forward<int> (__args#0);
  __gnu_cxx::new_allocator<int>::construct<int, int> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::construct<int, int> (_ZN9__gnu_cxx13new_allocatorIiE9constructIiJiEEEvPT_DpOT0_, funcdef_no=9943, decl_uid=233820, cgraph_uid=6575, symbol_order=7372)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::construct<int, int> (struct new_allocator * const this, int * __p, int & __args#0)
{
  void * D.241598;
  void * D.241597;
  int D.241599;

  <bb 2> :
  _1 = std::forward<int> (__args#0);
  D.241599 = *_1;
  D.241597 = __p;
  D.241598 = operator new (4, D.241597);
  MEM[(int *)D.241598] = D.241599;
  return;

}



;; Function std::forward<int> (_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE, funcdef_no=9192, decl_uid=222201, cgraph_uid=5824, symbol_order=6617)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
int & std::forward<int> (type & __t)
{
  int & D.248558;

  <bb 2> :
  D.248558 = __t;

  <bb 3> :
<L0>:
  return D.248558;

}



;; Function std::vector<int>::_M_realloc_insert<int> (_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_, funcdef_no=9194, decl_uid=222216, cgraph_uid=5826, symbol_order=6619)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::_M_realloc_insert<int> (struct vector * const this, struct iterator __position, int & __args#0)
{
  int * D.248564;
  const size_type D.248563;
  int * __new_finish;
  int * __new_start;
  const size_type __elems_before;
  int * __old_finish;
  int * __old_start;
  const size_type __len;
  struct iterator D.233831;

  <bb 2> :
  D.248563 = std::vector<int>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.248563;
  __old_start = this->D.167768._M_impl.D.167081._M_start;
  __old_finish = this->D.167768._M_impl.D.167081._M_finish;
  D.233831 = std::vector<int>::begin (this);
  _1 = __gnu_cxx::operator-<int*, std::vector<int> > (&__position, &D.233831);
  __elems_before = (const size_type) _1;
  D.233831 = {CLOBBER};
  _2 = &this->D.167768;
  D.248564 = std::_Vector_base<int, std::allocator<int> >::_M_allocate (_2, __len);
  __new_start = D.248564;
  __new_finish = __new_start;
  _3 = std::forward<int> (__args#0);
  _4 = __elems_before * 4;
  _5 = __new_start + _4;
  _6 = &this->D.167768._M_impl;
  std::allocator_traits<std::allocator<int> >::construct<int, int> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.167768;
  _8 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<int>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 4;
  _11 = &this->D.167768;
  _12 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<int>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.167768;
  _23 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 4;
  _26 = (long unsigned int) _25;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_22, __old_start, _26);
  this->D.167768._M_impl.D.167081._M_start = __new_start;
  this->D.167768._M_impl.D.167081._M_finish = __new_finish;
  _27 = __len * 4;
  _28 = __new_start + _27;
  this->D.167768._M_impl.D.167081._M_end_of_storage = _28;
  return;

}



;; Function std::vector<int>::back (_ZNSt6vectorIiSaIiEE4backEv, funcdef_no=9195, decl_uid=167412, cgraph_uid=5827, symbol_order=6620)

Merging blocks 3 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
value_type & std::vector<int>::back (struct vector * const this)
{
  struct iterator D.233837;
  struct __normal_iterator D.233838;
  value_type & D.248565;

  <bb 2> :
  D.233837 = std::vector<int>::end (this);
  D.233838 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator- (&D.233837, 1);
  D.248565 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator* (&D.233838);

  <bb 3> :
  D.233838 = {CLOBBER};
  D.233837 = {CLOBBER};

  <bb 4> :
<L2>:
  return D.248565;

}



;; Function __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator- (_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEmiEl, funcdef_no=9944, decl_uid=211418, cgraph_uid=6576, symbol_order=7373)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator- (const struct __normal_iterator * const this, difference_type __n)
{
  int * const D.241602;
  struct __normal_iterator D.241603;
  struct __normal_iterator D.248569;

  <bb 2> :
  _1 = this->_M_current;
  __n.20_2 = (long unsigned int) __n;
  _3 = __n.20_2 * 4;
  _4 = -_3;
  _5 = _1 + _4;
  D.241602 = _5;
  __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (&D.241603, &D.241602);
  D.248569 = D.241603;
  D.241603 = {CLOBBER};
  D.241602 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.248569;

}



;; Function __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv, funcdef_no=9945, decl_uid=211392, cgraph_uid=6577, symbol_order=7374)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int & __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator* (const struct __normal_iterator * const this)
{
  int & D.248573;

  <bb 2> :
  D.248573 = this->_M_current;

  <bb 3> :
<L0>:
  return D.248573;

}



;; Function Graph::exist_succ (_ZN5Graph10exist_succEP15basic_block_def, funcdef_no=6169, decl_uid=167788, cgraph_uid=3145, symbol_order=3819)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 4 }
;; 3 succs { 6 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool Graph::exist_succ (struct Graph * const this, struct basic_block_def * bb)
{
  struct iterator i;
  struct iterator D.169118;
  bool retval.21;
  bool D.248575;

  <bb 2> :
  std::_List_iterator<int>::_List_iterator (&i);
  _1 = this->adj;
  _2 = bb->index;
  _3 = (long unsigned int) _2;
  _4 = _3 * 24;
  _5 = _1 + _4;
  i = std::__cxx11::list<int>::begin (_5);
  goto <bb 4>; [INV]

  <bb 3> :
  D.248575 = 1;
  goto <bb 6>; [INV]

  <bb 4> :
  _6 = this->adj;
  _7 = bb->index;
  _8 = (long unsigned int) _7;
  _9 = _8 * 24;
  _10 = _6 + _9;
  D.169118 = std::__cxx11::list<int>::end (_10);
  retval.21 = std::operator!= (&i, &D.169118);
  D.169118 = {CLOBBER};
  if (retval.21 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.248575 = 0;

  <bb 6> :
  i = {CLOBBER};

  <bb 7> :
<L4>:
  return D.248575;

}



;; Function analyze_type (_Z12analyze_typeP9tree_node, funcdef_no=6237, decl_uid=186956, cgraph_uid=3213, symbol_order=3984)

Removing basic block 19
Removing basic block 20
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 6 11
;; 2 succs { 25 19 23 13 3 24 }
;; 3 succs { 4 5 }
;; 4 succs { 12 }
;; 5 succs { 10 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 6 12 }
;; 12 succs { 26 }
;; 13 succs { 14 15 }
;; 14 succs { 18 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 26 }
;; 19 succs { 20 21 }
;; 20 succs { 22 }
;; 21 succs { 22 }
;; 22 succs { 26 }
;; 23 succs { 26 }
;; 24 succs { 26 }
;; 25 succs { 26 }
;; 26 succs { 1 }
void analyze_type (union tree_node * tree_typed)
{
  unsigned int precision;
  union tree_node * type_name;
  union tree_node * args;
  const char * iftmp.22;

  <bb 2> :
  _1 = tree_typed->base.code;
  _2 = (int) _1;
  switch (_2) <default: <L27> [INV], case 8: <L19> [INV], case 16: <L25> [INV], case 17: <L11> [INV], case 21: <L0> [INV], case 36: <L26> [INV]>

  <bb 3> :
<L0>:
  printf ("receives ");
  args = tree_typed->type_non_common.values;
  if (args == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  printf ("nothing ");
  goto <bb 12>; [INV]

  <bb 5> :
  goto <bb 10>; [INV]

  <bb 6> :
  _3 = args->list.value;
  analyze_type (_3);
  _4 = args->common.chain;
  if (_4 != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  printf ("and ");
  goto <bb 9>; [INV]

  <bb 8> :
  printf ("... ");

  <bb 9> :
  args = args->common.chain;

  <bb 10> :
  if (args != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _5 = args->list.value;
  _6 = global_trees[61];
  if (_5 != _6)
    goto <bb 6>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  printf ("then returns ");
  _7 = tree_typed->typed.type;
  analyze_type (_7);
  goto <bb 26>; [INV]

  <bb 13> :
<L11>:
  printf ("named ");
  type_name = tree_typed->type_common.name;
  _8 = type_name->base.code;
  if (_8 == 1)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _9 = type_name->identifier.id.str;
  printf ("%s ", _9);
  goto <bb 18>; [INV]

  <bb 15> :
  _10 = type_name->base.code;
  if (_10 == 39)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  _11 = type_name->decl_minimal.name;
  _12 = _11->identifier.id.str;
  printf ("%s ", _12);
  goto <bb 18>; [INV]

  <bb 17> :
  printf ("**** UNRECOGNIZED TYPE NODE ****");

  <bb 18> :
  goto <bb 26>; [INV]

  <bb 19> :
<L19>:
  _16 = tree_typed->type_common.precision;
  precision = (unsigned int) _16;
  _17 = BIT_FIELD_REF <tree_typed->base.u.bits, 8, 8>;
  _18 = _17 & 1;
  if (_18 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  iftmp.22 = "unsigned";
  goto <bb 22>; [INV]

  <bb 21> :
  iftmp.22 = "signed";

  <bb 22> :
  printf ("%s integer of %d bits ", iftmp.22, precision);
  goto <bb 26>; [INV]

  <bb 23> :
<L25>:
  printf ("of ");
  _19 = tree_typed->typed.type;
  analyze_type (_19);
  goto <bb 26>; [INV]

  <bb 24> :
<L26>:
  printf ("oSDAAAAAf ");
  _20 = tree_typed->typed.type;
  analyze_type (_20);
  goto <bb 26>; [INV]

  <bb 25> :
<L27>:

  <bb 26> :
  return;

}



;; Function bb_in_loop_p (_Z12bb_in_loop_pP15basic_block_def, funcdef_no=6238, decl_uid=187095, cgraph_uid=3214, symbol_order=3985)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool bb_in_loop_p (struct basic_block_def * bb)
{
  bool D.248597;

  <bb 2> :
  _1 = bb->loop_father;
  _2 = _1->header;
  _3 = _2->index;
  D.248597 = _3 != 0;

  <bb 3> :
<L0>:
  return D.248597;

}



;; Function bb_in_branch_p (_Z14bb_in_branch_pP6gimple, funcdef_no=6239, decl_uid=187098, cgraph_uid=3215, symbol_order=3986)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool bb_in_branch_p (struct gimple * stmt)
{
  bool D.248601;
  bool D.248599;

  <bb 2> :
  cfun.23_1 = cfun;
  _2 = cfun.23_1->cfg;
  _3 = _2->x_exit_block_ptr;
  _4 = _3->prev_bb;
  _5 = stmt->bb;
  D.248601 = dominated_by_p (1, _5, _4);
  _6 = D.248601;
  D.248599 = ~_6;

  <bb 3> :
<L0>:
  return D.248599;

}



;; Function init_table (_Z10init_tablev, funcdef_no=6240, decl_uid=187100, cgraph_uid=3216, symbol_order=3987)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void init_table ()
{
  <bb 2> :
  start1.target = 0B;
  start1.next = 0B;
  POINTER_NOT_EXIST.24_1 = POINTER_NOT_EXIST;
  POINTER_NOT_EXIST.25_2 = (int) POINTER_NOT_EXIST.24_1;
  start1.state = POINTER_NOT_EXIST.25_2;
  ptable = &start1;
  start2.target = 0B;
  start2.next = 0B;
  POINTER_NOT_EXIST.26_3 = POINTER_NOT_EXIST;
  POINTER_NOT_EXIST.27_4 = (int) POINTER_NOT_EXIST.26_3;
  start2.state = POINTER_NOT_EXIST.27_4;
  ftable = &start2;
  return;

}



;; Function Location_b (_Z10Location_bP6gimpleS0_P15basic_block_def, funcdef_no=6241, decl_uid=187105, cgraph_uid=3217, symbol_order=3988)

Merging blocks 9 and 11
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 5 3
;; 2 succs { 8 }
;; 3 succs { 4 5 }
;; 4 succs { 10 }
;; 5 succs { 6 7 }
;; 6 succs { 10 }
;; 7 succs { 8 }
;; 8 succs { 3 9 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 1 }
bool Location_b (struct gimple * a, struct gimple * b, struct basic_block_def * bb)
{
  struct gimple_stmt_iterator gsi;
  struct gimple * gc;
  bool retval.28;
  bool D.248604;

  <bb 2> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 8>; [INV]

  <bb 3> :
  gc = gsi_stmt (gsi);
  if (gc == a)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.248604 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 5> :
  if (gc == b)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  D.248604 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 7> :
  gsi_next (&gsi);

  <bb 8> :
  _1 = gsi_end_p (gsi);
  retval.28 = ~_1;
  if (retval.28 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  gsi = {CLOBBER};
  D.248604 = 0;
  goto <bb 11>; [INV]

  <bb 10> :
  gsi = {CLOBBER};

  <bb 11> :
<L9>:
  return D.248604;

}



;; Function gsi_start_bb (_ZL12gsi_start_bbP15basic_block_def, funcdef_no=2478, decl_uid=94526, cgraph_uid=1615, symbol_order=1775)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple_stmt_iterator gsi_start_bb (struct basic_block_def * bb)
{
  struct gimple * * seq;
  struct gimple_stmt_iterator i [value-expr: <retval>];

  <bb 2> :
  seq = bb_seq_addr (bb);
  _1 = *seq;
  _2 = gimple_seq_first (_1);
  <retval>.ptr = _2;
  <retval>.seq = seq;
  <retval>.bb = bb;

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function bb_seq_addr (_ZL11bb_seq_addrP15basic_block_def, funcdef_no=1994, decl_uid=92233, cgraph_uid=1131, symbol_order=1291)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct gimple * * bb_seq_addr (struct basic_block_def * bb)
{
  struct gimple * * iftmp.29;
  struct gimple * * D.248613;

  <bb 2> :
  _1 = bb->flags;
  _2 = _1 & 512;
  if (_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.29 = &bb->il.gimple.seq;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.29 = 0B;

  <bb 5> :
  D.248613 = iftmp.29;

  <bb 6> :
<L3>:
  return D.248613;

}



;; Function gimple_seq_first (_ZL16gimple_seq_firstP6gimple, funcdef_no=1984, decl_uid=92193, cgraph_uid=1121, symbol_order=1281)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * gimple_seq_first (struct gimple * s)
{
  struct gimple * D.248619;

  <bb 2> :
  D.248619 = s;

  <bb 3> :
<L0>:
  return D.248619;

}



;; Function gsi_stmt (_ZL8gsi_stmt20gimple_stmt_iterator, funcdef_no=2485, decl_uid=94558, cgraph_uid=1622, symbol_order=1782)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * gsi_stmt (struct gimple_stmt_iterator i)
{
  struct gimple * D.248621;

  <bb 2> :
  D.248621 = i.ptr;

  <bb 3> :
<L0>:
  return D.248621;

}



;; Function gsi_next (_ZL8gsi_nextP20gimple_stmt_iterator, funcdef_no=2483, decl_uid=94551, cgraph_uid=1620, symbol_order=1780)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void gsi_next (struct gimple_stmt_iterator * i)
{
  <bb 2> :
  _1 = i->ptr;
  _2 = _1->next;
  i->ptr = _2;
  return;

}



;; Function gsi_end_p (_ZL9gsi_end_p20gimple_stmt_iterator, funcdef_no=2481, decl_uid=94545, cgraph_uid=1618, symbol_order=1778)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool gsi_end_p (struct gimple_stmt_iterator i)
{
  bool D.248623;

  <bb 2> :
  _1 = i.ptr;
  D.248623 = _1 == 0B;

  <bb 3> :
<L0>:
  return D.248623;

}



;; Function Location_b2 (_Z11Location_b2P6gimpleS0_P9tree_node, funcdef_no=6242, decl_uid=187119, cgraph_uid=3218, symbol_order=3989)

Merging blocks 18 and 20
Removing basic block 22
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
;;
;; Loop 1
;;  header 23, latch 22
;;  depth 1, outer 0
;;  nodes: 23 22 4 6 21 7 20 8 18 17 9 16 13 10 5 3
;;
;; Loop 2
;;  header 20, latch 18
;;  depth 2, outer 1
;;  nodes: 20 18 17 9 16 13 10
;;
;; Loop 3
;;  header 17, latch 16
;;  depth 3, outer 2
;;  nodes: 17 16 13 10
;; 2 succs { 23 }
;; 3 succs { 4 5 }
;; 4 succs { 22 }
;; 5 succs { 6 7 }
;; 6 succs { 22 }
;; 7 succs { 8 21 }
;; 8 succs { 20 }
;; 9 succs { 17 }
;; 10 succs { 11 13 }
;; 11 succs { 26 12 }
;; 12 succs { 19 }
;; 13 succs { 14 16 }
;; 14 succs { 26 15 }
;; 15 succs { 19 }
;; 16 succs { 17 }
;; 17 succs { 10 18 }
;; 18 succs { 20 }
;; 19 succs { 25 }
;; 20 succs { 9 21 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 3 24 }
;; 24 succs { 25 }
;; 25 succs { 1 }
;; 26 succs { }
bool Location_b2 (struct gimple * a, struct gimple * b, union tree_node * function_tree)
{
  struct cgraph_node * D.248645;
  bool D.248641;
  struct cgraph_node * D.248640;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct basic_block_def * bb;
  struct cgraph_node * node;
  bool retval.35;
  bool D.248634;
  bool retval.31;

  <bb 2> :
  symtab.30_1 = symtab;
  D.248640 = symbol_table::first_defined_function (symtab.30_1);
  node = D.248640;
  goto <bb 23>; [INV]

  <bb 3> :
  _2 = node->D.97512.decl;
  D.248641 = gimple_has_body_p (_2);
  _3 = D.248641;
  retval.31 = ~_3;
  if (retval.31 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by continue predictor.
  goto <bb 22>; [INV]

  <bb 5> :
  _4 = node->D.97512.decl;
  _5 = _4->function_decl.f;
  push_cfun (_5);
  cfun.32_6 = cfun;
  if (cfun.32_6 == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  pop_cfun ();
  // predicted unlikely by continue predictor.
  goto <bb 22>; [INV]

  <bb 7> :
  cfun.33_7 = cfun;
  _8 = cfun.33_7->decl;
  if (function_tree == _8)
    goto <bb 8>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 8> :
  calculate_dominance_info (1);
  cfun.34_9 = cfun;
  _10 = cfun.34_9->cfg;
  _11 = _10->x_entry_block_ptr;
  bb = _11->next_bb;
  goto <bb 20>; [INV]

  <bb 9> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 17>; [INV]

  <bb 10> :
  gc = gsi_stmt (gsi);
  if (gc == a)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  pop_cfun ();

  <bb 12> :
  D.248634 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 13> :
  if (gc == b)
    goto <bb 14>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 14> :
  pop_cfun ();

  <bb 15> :
  D.248634 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 16> :
  gsi_next (&gsi);

  <bb 17> :
  _12 = gsi_end_p (gsi);
  retval.35 = ~_12;
  if (retval.35 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  gsi = {CLOBBER};
  bb = bb->next_bb;
  goto <bb 20>; [INV]

  <bb 19> :
  gsi = {CLOBBER};
  goto <bb 25>; [INV]

  <bb 20> :
  cfun.36_13 = cfun;
  _14 = cfun.36_13->cfg;
  _15 = _14->x_exit_block_ptr;
  if (bb != _15)
    goto <bb 9>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 21> :
  pop_cfun ();

  <bb 22> :
  symtab.37_16 = symtab;
  D.248645 = symbol_table::next_defined_function (symtab.37_16, node);
  node = D.248645;

  <bb 23> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  D.248634 = 0;

  <bb 25> :
<L23>:
  return D.248634;

  <bb 26> :
<L24>:
  gsi = {CLOBBER};
  resx 1

}



;; Function symbol_table::first_defined_function (_ZN12symbol_table22first_defined_functionEv, funcdef_no=2571, decl_uid=98657, cgraph_uid=1708, symbol_order=1868)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 3 4
;; 2 succs { 7 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 9 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct cgraph_node * symbol_table::first_defined_function (struct symbol_table * const this)
{
  struct cgraph_node * D.248652;
  struct cgraph_node * cn;
  struct symtab_node * node;
  struct cgraph_node * D.248650;

  <bb 2> :
  node = this->nodes;
  goto <bb 7>; [INV]

  <bb 3> :
  D.248652 = dyn_cast<cgraph_node*, symtab_node> (node);
  cn = D.248652;
  if (cn != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _1 = BIT_FIELD_REF <cn->D.97512, 8, 16>;
  _2 = _1 & 1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.248650 = cn;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  node = node->next;

  <bb 7> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  D.248650 = 0B;

  <bb 9> :
<L7>:
  return D.248650;

}



;; Function dyn_cast<cgraph_node*, symtab_node> (_Z8dyn_castIP11cgraph_node11symtab_nodeET_PT0_, funcdef_no=7092, decl_uid=97635, cgraph_uid=3724, symbol_order=4510)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct cgraph_node * dyn_cast<cgraph_node*, symtab_node> (struct symtab_node * p)
{
  struct cgraph_node * D.248656;
  bool retval.38;

  <bb 2> :
  retval.38 = is_a<cgraph_node*, symtab_node> (p);
  if (retval.38 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.248656 = reinterpret_is_a_helper<cgraph_node*>::cast<symtab_node> (p);
  goto <bb 5>; [INV]

  <bb 4> :
  D.248656 = 0B;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
<L2>:
  return D.248656;

}



;; Function is_a<cgraph_node*, symtab_node> (_Z4is_aIP11cgraph_node11symtab_nodeEbPT0_, funcdef_no=7101, decl_uid=99519, cgraph_uid=3733, symbol_order=4519)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool is_a<cgraph_node*, symtab_node> (struct symtab_node * p)
{
  bool D.248658;

  <bb 2> :
  D.248658 = is_a_helper<cgraph_node*>::test<symtab_node> (p);

  <bb 3> :
<L0>:
  return D.248658;

}



;; Function is_a_helper<cgraph_node*>::test<symtab_node> (_ZN11is_a_helperIP11cgraph_nodeE4testI11symtab_nodeEEbPT_, funcdef_no=2532, decl_uid=98449, cgraph_uid=1669, symbol_order=1829)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool is_a_helper<cgraph_node*>::test<symtab_node> (struct symtab_node * p)
{
  bool iftmp.39;
  bool D.248660;

  <bb 2> :
  if (p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _1 = p->type;
  if (_1 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.39 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.39 = 0;

  <bb 6> :
  D.248660 = iftmp.39;

  <bb 7> :
<L4>:
  return D.248660;

}



;; Function reinterpret_is_a_helper<cgraph_node*>::cast<symtab_node> (_ZN23reinterpret_is_a_helperIP11cgraph_nodeE4castI11symtab_nodeEES1_PT_, funcdef_no=8118, decl_uid=207402, cgraph_uid=4750, symbol_order=5539)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct cgraph_node * reinterpret_is_a_helper<cgraph_node*>::cast<symtab_node> (struct symtab_node * p)
{
  struct cgraph_node * D.248667;

  <bb 2> :
  D.248667 = p;

  <bb 3> :
<L0>:
  return D.248667;

}



;; Function symbol_table::next_defined_function (_ZN12symbol_table21next_defined_functionEP11cgraph_node, funcdef_no=2572, decl_uid=98661, cgraph_uid=1709, symbol_order=1869)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 3 4
;; 2 succs { 7 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 9 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct cgraph_node * symbol_table::next_defined_function (struct symbol_table * const this, struct cgraph_node * node)
{
  struct cgraph_node * D.248675;
  struct cgraph_node * cn1;
  struct symtab_node * node1;
  struct cgraph_node * D.248673;

  <bb 2> :
  node1 = node->D.97512.next;
  goto <bb 7>; [INV]

  <bb 3> :
  D.248675 = dyn_cast<cgraph_node*, symtab_node> (node1);
  cn1 = D.248675;
  if (cn1 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _1 = BIT_FIELD_REF <cn1->D.97512, 8, 16>;
  _2 = _1 & 1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.248673 = cn1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  node1 = node1->next;

  <bb 7> :
  if (node1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  D.248673 = 0B;

  <bb 9> :
<L7>:
  return D.248673;

}



;; Function Location_b3 (_Z11Location_b3P6gimpleS0_P9tree_node, funcdef_no=6243, decl_uid=187143, cgraph_uid=3219, symbol_order=3990)

Removing basic block 16
Merging blocks 18 and 20
Removing basic block 22
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
;;
;; Loop 1
;;  header 22, latch 21
;;  depth 1, outer 0
;;  nodes: 22 21 4 6 20 7 19 8 17 16 9 5 3
;;
;; Loop 2
;;  header 19, latch 17
;;  depth 2, outer 1
;;  nodes: 19 17 16 9
;; 2 succs { 22 }
;; 3 succs { 4 5 }
;; 4 succs { 21 }
;; 5 succs { 6 7 }
;; 6 succs { 21 }
;; 7 succs { 8 20 }
;; 8 succs { 19 }
;; 9 succs { 16 }
;; 10 succs { 25 11 }
;; 11 succs { 12 14 }
;; 12 succs { 25 13 }
;; 13 succs { 18 }
;; 14 succs { 25 15 }
;; 15 succs { 18 }
;; 16 succs { 10 17 }
;; 17 succs { 19 }
;; 18 succs { 24 }
;; 19 succs { 9 20 }
;; 20 succs { 21 }
;; 21 succs { 22 }
;; 22 succs { 3 23 }
;; 23 succs { 24 }
;; 24 succs { 1 }
;; 25 succs { }
bool Location_b3 (struct gimple * a, struct gimple * b, union tree_node * function_tree)
{
  struct cgraph_node * D.248696;
  bool D.248692;
  bool D.248691;
  struct cgraph_node * D.248690;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct basic_block_def * bb;
  struct cgraph_node * node;
  bool retval.46;
  bool D.248686;
  bool retval.45;
  bool retval.41;

  <bb 2> :
  symtab.40_1 = symtab;
  D.248690 = symbol_table::first_defined_function (symtab.40_1);
  node = D.248690;
  goto <bb 22>; [INV]

  <bb 3> :
  _2 = node->D.97512.decl;
  D.248691 = gimple_has_body_p (_2);
  _3 = D.248691;
  retval.41 = ~_3;
  if (retval.41 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by continue predictor.
  goto <bb 21>; [INV]

  <bb 5> :
  _4 = node->D.97512.decl;
  _5 = _4->function_decl.f;
  push_cfun (_5);
  cfun.42_6 = cfun;
  if (cfun.42_6 == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  pop_cfun ();
  // predicted unlikely by continue predictor.
  goto <bb 21>; [INV]

  <bb 7> :
  cfun.43_7 = cfun;
  _8 = cfun.43_7->decl;
  if (function_tree == _8)
    goto <bb 8>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 8> :
  calculate_dominance_info (1);
  cfun.44_9 = cfun;
  _10 = cfun.44_9->cfg;
  _11 = _10->x_entry_block_ptr;
  bb = _11->next_bb;
  goto <bb 19>; [INV]

  <bb 9> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 16>; [INV]

  <bb 10> :
  gc = gsi_stmt (gsi);
  _12 = b->bb;
  _13 = a->bb;
  D.248692 = dominated_by_p (1, _13, _12);

  <bb 11> :
  retval.45 = D.248692;
  if (retval.45 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  pop_cfun ();

  <bb 13> :
  D.248686 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 18>; [INV]

  <bb 14> :
  pop_cfun ();

  <bb 15> :
  D.248686 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 18>; [INV]

  <bb 16> :
  _14 = gsi_end_p (gsi);
  retval.46 = ~_14;
  if (retval.46 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  gsi = {CLOBBER};
  bb = bb->next_bb;
  goto <bb 19>; [INV]

  <bb 18> :
  gsi = {CLOBBER};
  goto <bb 24>; [INV]

  <bb 19> :
  cfun.47_15 = cfun;
  _16 = cfun.47_15->cfg;
  _17 = _16->x_exit_block_ptr;
  if (bb != _17)
    goto <bb 9>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 20> :
  pop_cfun ();

  <bb 21> :
  symtab.48_18 = symtab;
  D.248696 = symbol_table::next_defined_function (symtab.48_18, node);
  node = D.248696;

  <bb 22> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 23> :
  D.248686 = 0;

  <bb 24> :
<L21>:
  return D.248686;

  <bb 25> :
<L22>:
  gsi = {CLOBBER};
  resx 1

}



;; Function SDBMHash (_Z8SDBMHashPc, funcdef_no=6244, decl_uid=186952, cgraph_uid=3220, symbol_order=3991)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
unsigned int SDBMHash (char * str)
{
  unsigned int hash;
  unsigned int D.248697;

  <bb 2> :
  _1 = rand ();
  _2 = _1 % 10;
  hash = (unsigned int) _2;
  goto <bb 4>; [INV]

  <bb 3> :
  str.49_3 = str;
  str = str.49_3 + 1;
  _4 = *str.49_3;
  _5 = (unsigned int) _4;
  _6 = hash << 6;
  _7 = _5 + _6;
  _8 = hash << 16;
  _9 = _7 + _8;
  hash = _9 - hash;

  <bb 4> :
  _10 = *str;
  if (_10 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.248697 = hash & 2147483647;

  <bb 6> :
<L3>:
  return D.248697;

}



;; Function dump_points_to_solution2 (_Z24dump_points_to_solution2P8_IO_FILEP11pt_solution, funcdef_no=6245, decl_uid=186959, cgraph_uid=3221, symbol_order=3993)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 1 }
int dump_points_to_solution2 (struct FILE * file, struct pt_solution * pt)
{
  int D.248717;

  <bb 2> :
  _1 = BIT_FIELD_REF <*pt, 8, 0>;
  _2 = _1 & 1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __builtin_fwrite (", points-to anything", 1, 20, file);

  <bb 4> :
  _3 = BIT_FIELD_REF <*pt, 8, 0>;
  _4 = _3 & 2;
  if (_4 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  __builtin_fwrite (", points-to non-local", 1, 21, file);

  <bb 6> :
  _5 = BIT_FIELD_REF <*pt, 8, 0>;
  _6 = _5 & 4;
  if (_6 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  __builtin_fwrite (", points-to escaped", 1, 19, file);

  <bb 8> :
  _7 = BIT_FIELD_REF <*pt, 8, 0>;
  _8 = _7 & 8;
  if (_8 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  __builtin_fwrite (", points-to unit escaped", 1, 24, file);

  <bb 10> :
  _9 = BIT_FIELD_REF <*pt, 8, 0>;
  _10 = _9 & 16;
  if (_10 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  __builtin_fwrite (", points-to NULL", 1, 16, file);

  <bb 12> :
  _11 = pt->vars;
  if (_11 != 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  __builtin_fwrite (", points-to vars: ", 1, 18, file);

  <bb 14> :
  D.248717 = 1;

  <bb 15> :
<L18>:
  return D.248717;

}



;; Function printfBasicblock (_Z16printfBasicblockv, funcdef_no=6246, decl_uid=187042, cgraph_uid=3225, symbol_order=3997)

Removing basic block 16
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
;;
;; Loop 1
;;  header 30, latch 29
;;  depth 1, outer 0
;;  nodes: 30 29 28 7 12 27 26 17 25 24 22 23 21 20 19 18 16 14 15 13 10 9 8 6 5 11
;;
;; Loop 2
;;  header 26, latch 25
;;  depth 2, outer 1
;;  nodes: 26 25 24 22 23 21 20 19 18
;;
;; Loop 3
;;  header 24, latch 23
;;  depth 3, outer 2
;;  nodes: 24 23
;; 2 succs { 33 3 }
;; 3 succs { 33 4 }
;; 4 succs { 30 }
;; 5 succs { 33 6 }
;; 6 succs { 7 8 }
;; 7 succs { 28 }
;; 8 succs { 33 9 }
;; 9 succs { 33 10 }
;; 10 succs { 11 13 }
;; 11 succs { 33 12 }
;; 12 succs { 28 }
;; 13 succs { 33 14 }
;; 14 succs { 15 16 }
;; 15 succs { 33 16 }
;; 16 succs { 33 17 }
;; 17 succs { 26 }
;; 18 succs { 33 19 }
;; 19 succs { 33 20 }
;; 20 succs { 33 21 }
;; 21 succs { 33 22 }
;; 22 succs { 24 }
;; 23 succs { 24 }
;; 24 succs { 23 25 }
;; 25 succs { 26 }
;; 26 succs { 18 27 }
;; 27 succs { 33 28 }
;; 28 succs { 33 29 }
;; 29 succs { 30 }
;; 30 succs { 5 31 }
;; 31 succs { 33 32 }
;; 32 succs { 1 }
;; 33 succs { }
void printfBasicblock ()
{
  struct cgraph_node * D.248733;
  bool D.248732;
  const char * D.248731;
  struct function * D.248730;
  bool D.248729;
  struct cgraph_node * D.248728;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  const char * name;
  struct cgraph_node * node;
  struct basic_block_def * bb;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;
  bool retval.60;
  bool retval.52;

  <bb 2> :
  stderr.50_1 = stderr;
  __builtin_fwrite ("\n===============Print ALL GIMPLE IR=================\n", 1, 53, stderr.50_1);

  <bb 3> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  symtab.51_2 = symtab;
  D.248728 = symbol_table::first_function (symtab.51_2);

  <bb 4> :
  node = D.248728;
  goto <bb 30>; [INV]

  <bb 5> :
  _3 = node->D.97512.decl;
  D.248729 = gimple_has_body_p (_3);

  <bb 6> :
  _4 = D.248729;
  retval.52 = ~_4;
  if (retval.52 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by continue predictor.
  goto <bb 28>; [INV]

  <bb 8> :
  D.248730 = cgraph_node::get_fun (node);

  <bb 9> :
  _5 = D.248730;
  push_cfun (_5);

  <bb 10> :
  cfun.53_6 = cfun;
  if (cfun.53_6 == 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  pop_cfun ();

  <bb 12> :
  // predicted unlikely by continue predictor.
  goto <bb 28>; [INV]

  <bb 13> :
  cfun.54_7 = cfun;
  _8 = cfun.54_7->decl;
  D.248731 = get_name (_8);

  <bb 14> :
  name = D.248731;
  if (name != 0B)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  stderr.55_9 = stderr;
  fprintf (stderr.55_9, "=======Mapping node_fun:%s=========\n", name);

  <bb 16> :
  calculate_dominance_info (1);

  <bb 17> :
  cfun.56_10 = cfun;
  _11 = cfun.56_10->cfg;
  _12 = _11->x_entry_block_ptr;
  bb = _12->next_bb;
  goto <bb 26>; [INV]

  <bb 18> :
  D.248732 = bb_in_loop_p (bb);

  <bb 19> :
  _13 = D.248732;
  _14 = (int) _13;
  stderr.57_15 = stderr;
  fprintf (stderr.57_15, "=======is loop:%d=========\n", _14);

  <bb 20> :
  _16 = bb->index;
  stderr.58_17 = stderr;
  fprintf (stderr.58_17, "\n bb index %d \n", _16);

  <bb 21> :
  debug_bb (bb);

  <bb 22> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 24>; [INV]

  <bb 23> :
  gc = gsi_stmt (gsi);
  gimplestmt_count.59_18 = gimplestmt_count;
  _19 = gimplestmt_count.59_18 + 1;
  gimplestmt_count = _19;
  gsi_next (&gsi);

  <bb 24> :
  _20 = gsi_end_p (gsi);
  retval.60 = ~_20;
  if (retval.60 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 25> :
  gsi = {CLOBBER};
  bb = bb->next_bb;

  <bb 26> :
  cfun.61_21 = cfun;
  _22 = cfun.61_21->cfg;
  _23 = _22->x_exit_block_ptr;
  if (bb != _23)
    goto <bb 18>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 27> :
  pop_cfun ();

  <bb 28> :
  symtab.62_24 = symtab;
  D.248733 = symbol_table::next_function (symtab.62_24, node);

  <bb 29> :
  node = D.248733;

  <bb 30> :
  if (node != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 31> :
  stderr.63_25 = stderr;
  __builtin_fwrite ("\n===============Print ALL GIMPLE IR=================\n", 1, 53, stderr.63_25);

  <bb 32> :
  start = {CLOBBER};
  return;

  <bb 33> :
<L17>:
  start = {CLOBBER};
  resx 1

}



;; Function gimple_array::gimple_array (_ZN12gimple_arrayC2Ev, funcdef_no=6248, decl_uid=187184, cgraph_uid=3223, symbol_order=3995)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void gimple_array::gimple_array (struct gimple_array * const this)
{
  <bb 2> :
  this->size = 0;
  return;

}



;; Function symbol_table::first_function (_ZN12symbol_table14first_functionEv, funcdef_no=2573, decl_uid=98664, cgraph_uid=1710, symbol_order=1870)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
struct cgraph_node * symbol_table::first_function (struct symbol_table * const this)
{
  struct cgraph_node * D.248739;
  struct cgraph_node * cn;
  struct symtab_node * node;
  struct cgraph_node * D.248737;

  <bb 2> :
  node = this->nodes;
  goto <bb 6>; [INV]

  <bb 3> :
  D.248739 = dyn_cast<cgraph_node*, symtab_node> (node);
  cn = D.248739;
  if (cn != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.248737 = cn;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  node = node->next;

  <bb 6> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  D.248737 = 0B;

  <bb 8> :
<L5>:
  return D.248737;

}



;; Function symbol_table::next_function (_ZN12symbol_table13next_functionEP11cgraph_node, funcdef_no=2574, decl_uid=98668, cgraph_uid=1711, symbol_order=1871)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
struct cgraph_node * symbol_table::next_function (struct symbol_table * const this, struct cgraph_node * node)
{
  struct cgraph_node * D.248744;
  struct cgraph_node * cn1;
  struct symtab_node * node1;
  struct cgraph_node * D.248742;

  <bb 2> :
  node1 = node->D.97512.next;
  goto <bb 6>; [INV]

  <bb 3> :
  D.248744 = dyn_cast<cgraph_node*, symtab_node> (node1);
  cn1 = D.248744;
  if (cn1 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.248742 = cn1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  node1 = node1->next;

  <bb 6> :
  if (node1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  D.248742 = 0B;

  <bb 8> :
<L5>:
  return D.248742;

}



;; Function print_function_path (_Z19print_function_pathPSt6vectorI11return_typeSaIS0_EE, funcdef_no=6250, decl_uid=187240, cgraph_uid=3226, symbol_order=3998)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void print_function_path (struct vector * path)
{
  int i;
  bool retval.66;

  <bb 2> :
  stderr.64_1 = stderr;
  __builtin_fwrite ("[\n", 1, 2, stderr.64_1);
  i = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _2 = (long unsigned int) i;
  _3 = std::vector<return_type>::operator[] (path, _2);
  _4 = _3->stmt;
  debug (_4);
  stderr.65_5 = stderr;
  __builtin_fwrite (",\n", 1, 2, stderr.65_5);
  i = i + 1;

  <bb 4> :
  _6 = (long unsigned int) i;
  _7 = std::vector<return_type>::size (path);
  retval.66 = _6 < _7;
  if (retval.66 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  stderr.67_8 = stderr;
  __builtin_fwrite ("]\n", 1, 2, stderr.67_8);
  return;

}



;; Function std::vector<return_type>::operator[] (_ZNSt6vectorI11return_typeSaIS0_EEixEm, funcdef_no=7615, decl_uid=174212, cgraph_uid=4247, symbol_order=5036)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<return_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.248746;

  <bb 2> :
  _1 = this->D.174559._M_impl.D.173904._M_start;
  _2 = __n * 24;
  D.248746 = _1 + _2;

  <bb 3> :
<L0>:
  return D.248746;

}



;; Function std::vector<return_type>::size (_ZNKSt6vectorI11return_typeSaIS0_EE4sizeEv, funcdef_no=7614, decl_uid=174192, cgraph_uid=4246, symbol_order=5035)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<return_type>::size (const struct vector * const this)
{
  size_type D.248748;

  <bb 2> :
  _1 = this->D.174559._M_impl.D.173904._M_finish;
  _2 = this->D.174559._M_impl.D.173904._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.248748 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.248748;

}



;; Function print_function_return2 (_Z22print_function_return2P9tree_node, funcdef_no=6251, decl_uid=187061, cgraph_uid=3233, symbol_order=4005)

Merging blocks 4 and 17
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 12 11
;; 2 succs { 20 3 }
;; 3 succs { 4 5 }
;; 4 succs { 17 }
;; 5 succs { 20 6 }
;; 6 succs { 20 7 }
;; 7 succs { 19 8 }
;; 8 succs { 18 9 }
;; 9 succs { 18 10 }
;; 10 succs { 14 }
;; 11 succs { 18 12 }
;; 12 succs { 18 13 }
;; 13 succs { 14 }
;; 14 succs { 11 15 }
;; 15 succs { 18 16 }
;; 16 succs { 17 }
;; 17 succs { 1 }
;; 18 succs { 19 }
;; 19 succs { 20 }
;; 20 succs { }
void print_function_return2 (union tree_node * function_tree)
{
  struct function_return_array * D.248756;
  struct function_return_array * D.248755;
  int i;
  struct vector ret_type_array;
  struct function_return_array fun_array;
  bool retval.75;
  bool retval.68;

  <bb 2> :
  function_return_collect.69_1 = function_return_collect;
  D.248755 = hash_map<tree_node*, function_return_array>::get (function_return_collect.69_1, &function_tree);

  <bb 3> :
  _2 = D.248755;
  retval.68 = _2 == 0B;
  if (retval.68 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  goto <bb 17>; [INV]

  <bb 5> :
  function_return_collect.70_3 = function_return_collect;
  D.248756 = hash_map<tree_node*, function_return_array>::get (function_return_collect.70_3, &function_tree);

  <bb 6> :
  _4 = D.248756;
  function_return_array::function_return_array (&fun_array, _4);

  <bb 7> :
  std::vector<return_type>::vector (&ret_type_array, &fun_array.return_type_array);

  <bb 8> :
  _5 = std::vector<return_type>::size (&ret_type_array);
  function_tree.71_6 = function_tree;
  stderr.72_7 = stderr;
  fprintf (stderr.72_7, "=======print_function_return %d   %d========\n", function_tree.71_6, _5);

  <bb 9> :
  stderr.73_8 = stderr;
  __builtin_fwrite ("[\n", 1, 2, stderr.73_8);

  <bb 10> :
  i = 0;
  goto <bb 14>; [INV]

  <bb 11> :
  _9 = (long unsigned int) i;
  _10 = std::vector<return_type>::operator[] (&ret_type_array, _9);
  _11 = _10->stmt;
  debug (_11);

  <bb 12> :
  stderr.74_12 = stderr;
  __builtin_fwrite (",\n", 1, 2, stderr.74_12);

  <bb 13> :
  i = i + 1;

  <bb 14> :
  _13 = (long unsigned int) i;
  _14 = std::vector<return_type>::size (&ret_type_array);
  retval.75 = _13 < _14;
  if (retval.75 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  stderr.76_15 = stderr;
  __builtin_fwrite ("]\n", 1, 2, stderr.76_15);

  <bb 16> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};

  <bb 17> :
<L7>:
  return;

  <bb 18> :
<L8>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 3

  <bb 19> :
<L9>:
  function_return_array::~function_return_array (&fun_array);
  resx 2

  <bb 20> :
<L10>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  resx 1

}



;; Function hash_map<tree_node*, function_return_array>::get (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7616, decl_uid=189602, cgraph_uid=4248, symbol_order=5037)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_return_array * hash_map<tree_node*, function_return_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.248770;
  struct hash_entry & D.248769;
  unsigned int D.248768;
  struct hash_entry & e;
  struct function_return_array * iftmp.77;
  struct function_return_array * D.248762;

  <bb 2> :
  _1 = &this->m_table;
  D.248768 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::hash (k);
  _2 = D.248768;
  D.248769 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.248769;
  D.248770 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_empty<hash_map<tree_node*, function_return_array>::hash_entry> (e);
  _3 = D.248770;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.77 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.77 = &e->m_value;

  <bb 5> :
  D.248762 = iftmp.77;

  <bb 6> :
<L3>:
  return D.248762;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE4hashERKS2_, funcdef_no=8453, decl_uid=189558, cgraph_uid=5085, symbol_order=5878)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::hash (union tree_node * const & h)
{
  hashval_t D.248771;

  <bb 2> :
  D.248771 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.248771;

}



;; Function pointer_hash<tree_node>::hash (_ZN12pointer_hashI9tree_nodeE4hashERKPS0_, funcdef_no=9240, decl_uid=85298, cgraph_uid=5872, symbol_order=6665)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t pointer_hash<tree_node>::hash (union tree_node * const & candidate)
{
  hashval_t D.248773;

  <bb 2> :
  _1 = *candidate;
  _2 = (long int) _1;
  _3 = _2 >> 3;
  D.248773 = (hashval_t) _3;

  <bb 3> :
<L0>:
  return D.248773;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8454, decl_uid=189745, cgraph_uid=5086, symbol_order=5879)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.248807;
  bool D.248806;
  bool D.248805;
  bool D.248804;
  bool D.248803;
  bool D.248802;
  struct value_type * D.248801;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.81;
  bool retval.80;
  struct value_type & D.248787;
  bool iftmp.79;
  bool retval.78;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 40;
  entry = _5 + _7;
  D.248802 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.248802;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.248803 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.248803;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.248804 = hash_map<tree_node*, function_return_array>::hash_entry::equal (entry, comparable);
  _11 = D.248804;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.79 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.79 = 0;

  <bb 8> :
  retval.78 = iftmp.79;
  if (retval.78 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.248787 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  entry = _17 + _19;
  D.248805 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.248805;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.248806 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.248806;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.248807 = hash_map<tree_node*, function_return_array>::hash_entry::equal (entry, comparable);
  _23 = D.248807;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.81 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.81 = 0;

  <bb 18> :
  retval.80 = iftmp.81;
  if (retval.80 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.248787 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.248787;

}



;; Function hash_table_mod1 (_Z15hash_table_mod1jj, funcdef_no=982, decl_uid=32188, cgraph_uid=280, symbol_order=291)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_table_mod1 (hashval_t hash, unsigned int index)
{
  const struct prime_ent * p;
  hashval_t D.248808;

  <bb 2> :
  p = &prime_tab[index];
  _1 = p->shift;
  _2 = (int) _1;
  _3 = p->inv;
  _4 = p->prime;
  D.248808 = mul_mod (hash, _4, _3, _2);

  <bb 3> :
<L0>:
  return D.248808;

}



;; Function mul_mod (_Z7mul_modjjji, funcdef_no=981, decl_uid=32178, cgraph_uid=279, symbol_order=290)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t mul_mod (hashval_t x, hashval_t y, hashval_t inv, int shift)
{
  hashval_t r;
  hashval_t q;
  hashval_t t4;
  hashval_t t3;
  hashval_t t2;
  hashval_t t1;
  hashval_t D.248810;

  <bb 2> :
  _1 = (long unsigned int) x;
  _2 = (long unsigned int) inv;
  _3 = _1 * _2;
  _4 = _3 >> 32;
  t1 = (hashval_t) _4;
  t2 = x - t1;
  t3 = t2 >> 1;
  t4 = t1 + t3;
  q = t4 >> shift;
  _5 = q * y;
  r = x - _5;
  D.248810 = r;

  <bb 3> :
<L0>:
  return D.248810;

}



;; Function hash_table_mod2 (_Z15hash_table_mod2jj, funcdef_no=983, decl_uid=32193, cgraph_uid=281, symbol_order=292)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_table_mod2 (hashval_t hash, unsigned int index)
{
  const struct prime_ent * p;
  hashval_t D.248812;

  <bb 2> :
  p = &prime_tab[index];
  _1 = p->shift;
  _2 = (int) _1;
  _3 = p->inv_m2;
  _4 = p->prime;
  _5 = _4 + 4294967294;
  _6 = mul_mod (hash, _5, _3, _2);
  D.248812 = _6 + 1;

  <bb 3> :
<L0>:
  return D.248812;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8952, decl_uid=189841, cgraph_uid=5584, symbol_order=6377)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.248816;
  bool D.248814;

  <bb 2> :
  D.248816 = hash_map<tree_node*, function_return_array>::hash_entry::is_empty (v);
  D.248814 = D.248816;

  <bb 3> :
<L0>:
  return D.248814;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8637, decl_uid=189671, cgraph_uid=5269, symbol_order=6062)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_return_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.248819;
  bool D.248817;

  <bb 2> :
  D.248819 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_empty<hash_map<tree_node*, function_return_array>::hash_entry> (e);
  D.248817 = D.248819;

  <bb 3> :
<L0>:
  return D.248817;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8953, decl_uid=189839, cgraph_uid=5585, symbol_order=6378)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.248822;
  bool D.248820;

  <bb 2> :
  D.248822 = hash_map<tree_node*, function_return_array>::hash_entry::is_deleted (v);
  D.248820 = D.248822;

  <bb 3> :
<L0>:
  return D.248820;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9801, decl_uid=189666, cgraph_uid=6433, symbol_order=7226)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_return_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.248825;
  bool D.248823;

  <bb 2> :
  D.248825 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_deleted<hash_map<tree_node*, function_return_array>::hash_entry> (e);
  D.248823 = D.248825;

  <bb 3> :
<L0>:
  return D.248823;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_deleted<hash_map<tree_node*, function_return_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10367, decl_uid=239674, cgraph_uid=6999, symbol_order=7796)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_deleted<hash_map<tree_node*, function_return_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248826;

  <bb 2> :
  _1 = entry->m_key;
  D.248826 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.248826;

}



;; Function pointer_hash<tree_node>::is_deleted (_ZN12pointer_hashI9tree_nodeE10is_deletedEPS0_, funcdef_no=10587, decl_uid=85308, cgraph_uid=7219, symbol_order=8016)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<tree_node>::is_deleted (union tree_node * e)
{
  bool D.248828;

  <bb 2> :
  D.248828 = e == 1B;

  <bb 3> :
<L0>:
  return D.248828;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9242, decl_uid=189659, cgraph_uid=5874, symbol_order=6667)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_return_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.248832;
  bool D.248830;

  <bb 2> :
  _1 = &a->m_key;
  D.248832 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::equal_keys (_1, b);
  D.248830 = D.248832;

  <bb 3> :
<L0>:
  return D.248830;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE10equal_keysERKS2_S7_, funcdef_no=9979, decl_uid=189560, cgraph_uid=6611, symbol_order=7408)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.248833;

  <bb 2> :
  D.248833 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.248833;

}



;; Function pointer_hash<tree_node>::equal (_ZN12pointer_hashI9tree_nodeE5equalERKPS0_S4_, funcdef_no=10514, decl_uid=85300, cgraph_uid=7146, symbol_order=7943)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<tree_node>::equal (union tree_node * const & existing, union tree_node * const & candidate)
{
  bool D.248835;

  <bb 2> :
  _1 = *existing;
  _2 = *candidate;
  D.248835 = _1 == _2;

  <bb 3> :
<L0>:
  return D.248835;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_empty<hash_map<tree_node*, function_return_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8455, decl_uid=211708, cgraph_uid=5087, symbol_order=5880)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::is_empty<hash_map<tree_node*, function_return_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.248837;

  <bb 2> :
  _1 = entry->m_key;
  D.248837 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.248837;

}



;; Function pointer_hash<tree_node>::is_empty (_ZN12pointer_hashI9tree_nodeE8is_emptyEPS0_, funcdef_no=9243, decl_uid=85310, cgraph_uid=5875, symbol_order=6668)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<tree_node>::is_empty (union tree_node * e)
{
  bool D.248839;

  <bb 2> :
  D.248839 = e == 0B;

  <bb 3> :
<L0>:
  return D.248839;

}



;; Function function_return_array::function_return_array (_ZN21function_return_arrayC2ERKS_, funcdef_no=6253, decl_uid=189940, cgraph_uid=3228, symbol_order=4000)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_return_array::function_return_array (struct function_return_array * const this, const struct function_return_array & D.189942)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.189942->return_type_num;
  this->return_type_num = _1;
  _2 = D.189942->pthread_type_num;
  this->pthread_type_num = _2;
  _3 = &this->return_type_array;
  _4 = &D.189942->return_type_array;
  std::vector<return_type>::vector (_3, _4);
  return;

}



;; Function std::vector<return_type>::vector (_ZNSt6vectorI11return_typeSaIS0_EEC2ERKS2_, funcdef_no=7618, decl_uid=174522, cgraph_uid=4250, symbol_order=5039)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<return_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct return_type * D.248845;
  struct __normal_iterator D.248842;
  struct __normal_iterator D.248841;
  struct allocator D.211823;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.174559;
  _2 = &__x->D.174559;
  _3 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_2);
  D.211823 = __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<return_type>::size (__x);
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_1, _4, &D.211823);

  <bb 3> :
  std::allocator<return_type>::~allocator (&D.211823);
  D.211823 = {CLOBBER};
  _5 = &this->D.174559;
  _6 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.174559._M_impl.D.173904._M_start;
  D.248841 = std::vector<return_type>::end (__x);
  D.248842 = std::vector<return_type>::begin (__x);
  D.248845 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*, return_type> (D.248842, D.248841, _7, _6);

  <bb 4> :
  _8 = D.248845;
  this->D.174559._M_impl.D.173904._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<return_type>::~allocator (&D.211823);
  resx 2

  <bb 6> :
<L1>:
  D.211823 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.174559;
  std::_Vector_base<return_type, std::allocator<return_type> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI11return_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8457, decl_uid=173794, cgraph_uid=5089, symbol_order=5882)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.248847;

  <bb 2> :
  D.248847 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248847;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI11return_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=8456, decl_uid=173766, cgraph_uid=5088, symbol_order=5881)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<return_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<return_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI11return_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9244, decl_uid=173731, cgraph_uid=5876, symbol_order=6669)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<return_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<return_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<return_type>::allocator (_ZNSaI11return_typeEC2ERKS0_, funcdef_no=9981, decl_uid=173674, cgraph_uid=6613, symbol_order=7410)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<return_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<return_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11return_typeEC2ERKS2_, funcdef_no=10516, decl_uid=173603, cgraph_uid=7148, symbol_order=7945)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.173605)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_ZNSt12_Vector_baseI11return_typeSaIS0_EEC2EmRKS1_, funcdef_no=8459, decl_uid=173991, cgraph_uid=5091, symbol_order=5884)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11return_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9246, decl_uid=173896, cgraph_uid=5878, symbol_order=6671)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<return_type>::allocator (this, __a);
  _1 = &this->D.173904;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11return_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8421, decl_uid=173851, cgraph_uid=5053, symbol_order=5846)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_M_create_storage (_ZNSt12_Vector_baseI11return_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9248, decl_uid=173915, cgraph_uid=5880, symbol_order=6673)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct return_type * D.248854;

  <bb 2> :
  D.248854 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_allocate (this, __n);
  _1 = D.248854;
  this->_M_impl.D.173904._M_start = _1;
  _2 = this->_M_impl.D.173904._M_start;
  this->_M_impl.D.173904._M_finish = _2;
  _3 = this->_M_impl.D.173904._M_start;
  _4 = __n * 24;
  _5 = _3 + _4;
  this->_M_impl.D.173904._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_M_allocate (_ZNSt12_Vector_baseI11return_typeSaIS0_EE11_M_allocateEm, funcdef_no=9398, decl_uid=173908, cgraph_uid=6030, symbol_order=6823)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct return_type * std::_Vector_base<return_type, std::allocator<return_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct return_type * D.248861;
  struct return_type * iftmp.82;
  struct return_type * D.248855;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.248861 = std::allocator_traits<std::allocator<return_type> >::allocate (_1, __n);
  iftmp.82 = D.248861;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.82 = 0B;

  <bb 5> :
  D.248855 = iftmp.82;

  <bb 6> :
<L3>:
  return D.248855;

}



;; Function std::allocator_traits<std::allocator<return_type> >::allocate (_ZNSt16allocator_traitsISaI11return_typeEE8allocateERS1_m, funcdef_no=10089, decl_uid=173709, cgraph_uid=6721, symbol_order=7518)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct return_type * std::allocator_traits<std::allocator<return_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct return_type * D.248864;
  struct return_type * D.248862;

  <bb 2> :
  D.248864 = __gnu_cxx::new_allocator<return_type>::allocate (__a, __n, 0B);
  D.248862 = D.248864;

  <bb 3> :
<L0>:
  return D.248862;

}



;; Function __gnu_cxx::new_allocator<return_type>::allocate (_ZN9__gnu_cxx13new_allocatorI11return_typeE8allocateEmPKv, funcdef_no=10606, decl_uid=173563, cgraph_uid=7239, symbol_order=8036)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct return_type * __gnu_cxx::new_allocator<return_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.245647)
{
  struct return_type * D.248875;
  struct return_type * D.248874;
  align_val_t __al;
  struct return_type * D.248872;
  bool retval.83;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<return_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.83 = _4 != 0;
  if (retval.83 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 768614336404564650)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 24;
  D.248875 = operator new (_6);
  D.248872 = D.248875;

  <bb 7> :
<L6>:
  return D.248872;

}



;; Function __gnu_cxx::new_allocator<return_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI11return_typeE11_M_max_sizeEv, funcdef_no=10607, decl_uid=173590, cgraph_uid=7238, symbol_order=8035)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<return_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.248876;

  <bb 2> :
  D.248876 = 384307168202282325;

  <bb 3> :
<L0>:
  return D.248876;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI11return_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6217, decl_uid=173951, cgraph_uid=3191, symbol_order=3952)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<return_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<return_type>::~allocator (_ZNSaI11return_typeED2Ev, funcdef_no=7591, decl_uid=173684, cgraph_uid=4223, symbol_order=5012)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<return_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<return_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI11return_typeED2Ev, funcdef_no=8424, decl_uid=173613, cgraph_uid=5056, symbol_order=5849)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI11return_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8463, decl_uid=173792, cgraph_uid=5095, symbol_order=5888)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.248878;

  <bb 2> :
  D.248878 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.248878;

}



;; Function std::vector<return_type>::end (_ZNKSt6vectorI11return_typeSaIS0_EE3endEv, funcdef_no=8462, decl_uid=174174, cgraph_uid=5094, symbol_order=5887)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<return_type>::end (const struct vector * const this)
{
  struct const_iterator D.222492;
  struct const_iterator D.248880;

  <bb 2> :
  _1 = &this->D.174559._M_impl.D.173904._M_finish;
  __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::__normal_iterator (&D.222492, _1);
  D.248880 = D.222492;
  D.222492 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248880;

}



;; Function __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9250, decl_uid=211792, cgraph_uid=5882, symbol_order=6675)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::__normal_iterator (struct __normal_iterator * const this, const struct return_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<return_type>::begin (_ZNKSt6vectorI11return_typeSaIS0_EE5beginEv, funcdef_no=8461, decl_uid=174170, cgraph_uid=5093, symbol_order=5886)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<return_type>::begin (const struct vector * const this)
{
  struct const_iterator D.222490;
  struct const_iterator D.248883;

  <bb 2> :
  _1 = &this->D.174559._M_impl.D.173904._M_start;
  __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::__normal_iterator (&D.222490, _1);
  D.248883 = D.222490;
  D.222490 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.248883;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*, return_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8464, decl_uid=211812, cgraph_uid=5096, symbol_order=5889)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*, return_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct return_type * __result, struct allocator & D.222497)
{
  struct return_type * D.248888;
  struct return_type * D.248886;

  <bb 2> :
  D.248888 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (__first, __last, __result);
  D.248886 = D.248888;

  <bb 3> :
<L0>:
  return D.248886;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9252, decl_uid=222499, cgraph_uid=5885, symbol_order=6678)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct return_type * __result)
{
  struct return_type * D.248891;
  const bool __assignable;
  struct return_type * D.248889;

  <bb 2> :
  __assignable = 1;
  D.248891 = std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (__first, __last, __result);
  D.248889 = D.248891;

  <bb 3> :
<L0>:
  return D.248889;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=9983, decl_uid=234283, cgraph_uid=6615, symbol_order=7412)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct return_type * std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct return_type * __result)
{
  struct return_type * __cur;
  struct return_type * D.248893;
  bool retval.84;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator* (&__first);
  _2 = std::__addressof<return_type> (__cur);
  std::_Construct<return_type, const return_type&> (_2, _1);
  __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator++ (&__first);
  __cur = __cur + 24;

  <bb 4> :
  retval.84 = __gnu_cxx::operator!=<const return_type*, std::vector<return_type> > (&__first, &__last);
  if (retval.84 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.248893 = __cur;

  <bb 6> :
<L3>:
  return D.248893;

}



;; Function __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS1_SaIS1_EEEdeEv, funcdef_no=10521, decl_uid=211750, cgraph_uid=7153, symbol_order=7950)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct return_type & __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator* (const struct __normal_iterator * const this)
{
  const struct return_type & D.248895;

  <bb 2> :
  D.248895 = this->_M_current;

  <bb 3> :
<L0>:
  return D.248895;

}



;; Function std::__addressof<return_type> (_ZSt11__addressofI11return_typeEPT_RS1_, funcdef_no=10520, decl_uid=224862, cgraph_uid=7152, symbol_order=7949)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__addressof<return_type> (struct return_type & __r)
{
  struct return_type * D.248897;

  <bb 2> :
  D.248897 = __r;

  <bb 3> :
<L0>:
  return D.248897;

}



;; Function std::_Construct<return_type, const return_type&> (_ZSt10_ConstructI11return_typeJRKS0_EEvPT_DpOT0_, funcdef_no=10522, decl_uid=241759, cgraph_uid=7154, symbol_order=7951)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<return_type, const return_type&> (struct return_type * __p, const struct return_type & __args#0)
{
  void * D.245252;
  void * D.245251;
  const struct return_type * D.245253;

  <bb 2> :
  D.245253 = std::forward<const return_type&> (__args#0);
  D.245251 = __p;
  D.245252 = operator new (24, D.245251);
  MEM[(struct return_type *)D.245252] = *D.245253;
  return;

}



;; Function std::forward<const return_type&> (_ZSt7forwardIRK11return_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9423, decl_uid=224476, cgraph_uid=6055, symbol_order=6848)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct return_type & std::forward<const return_type&> (const struct type & __t)
{
  const struct return_type & D.248899;

  <bb 2> :
  D.248899 = __t;

  <bb 3> :
<L0>:
  return D.248899;

}



;; Function __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS1_SaIS1_EEEppEv, funcdef_no=10519, decl_uid=211754, cgraph_uid=7151, symbol_order=7948)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.248901;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 24;
  this->_M_current = _2;
  D.248901 = this;

  <bb 3> :
<L0>:
  return D.248901;

}



;; Function __gnu_cxx::operator!=<const return_type*, std::vector<return_type> > (_ZN9__gnu_cxxneIPK11return_typeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_, funcdef_no=10518, decl_uid=241752, cgraph_uid=7150, symbol_order=7947)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<const return_type*, std::vector<return_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.248903;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::base (__rhs);
  _4 = *_3;
  D.248903 = _2 != _4;

  <bb 3> :
<L0>:
  return D.248903;

}



;; Function __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10608, decl_uid=211779, cgraph_uid=7240, symbol_order=8037)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct return_type * const & __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::base (const struct __normal_iterator * const this)
{
  const struct return_type * const & D.248905;

  <bb 2> :
  D.248905 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.248905;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::~_Vector_base (_ZNSt12_Vector_baseI11return_typeSaIS0_EED2Ev, funcdef_no=7594, decl_uid=174014, cgraph_uid=4226, symbol_order=5015)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.173904._M_end_of_storage;
  _2 = this->_M_impl.D.173904._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.173904._M_start;
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (_ZNSt12_Vector_baseI11return_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8426, decl_uid=173911, cgraph_uid=5058, symbol_order=5851)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (struct _Vector_base * const this, struct return_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<return_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<return_type> >::deallocate (_ZNSt16allocator_traitsISaI11return_typeEE10deallocateERS1_PS0_m, funcdef_no=9219, decl_uid=173716, cgraph_uid=5851, symbol_order=6644)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<return_type> >::deallocate (struct allocator_type & __a, struct return_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<return_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI11return_typeE10deallocateEPS1_m, funcdef_no=9950, decl_uid=173567, cgraph_uid=6582, symbol_order=7379)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::deallocate (struct new_allocator * const this, struct return_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<return_type>::~vector (_ZNSt6vectorI11return_typeSaIS0_EED2Ev, funcdef_no=7621, decl_uid=174556, cgraph_uid=4253, symbol_order=5042)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<return_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.174559;
  _2 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.174559._M_impl.D.173904._M_finish;
  _4 = this->D.174559._M_impl.D.173904._M_start;
  std::_Destroy<return_type*, return_type> (_4, _3, _2);
  _5 = &this->D.174559;
  std::_Vector_base<return_type, std::allocator<return_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<return_type*, return_type> (_ZSt8_DestroyIP11return_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8465, decl_uid=211829, cgraph_uid=5097, symbol_order=5890)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<return_type*, return_type> (struct return_type * __first, struct return_type * __last, struct allocator & D.222518)
{
  <bb 2> :
  std::_Destroy<return_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<return_type*> (_ZSt8_DestroyIP11return_typeEvT_S2_, funcdef_no=9254, decl_uid=222520, cgraph_uid=5886, symbol_order=6679)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<return_type*> (struct return_type * __first, struct return_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<return_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<return_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP11return_typeEEvT_S4_, funcdef_no=9984, decl_uid=234314, cgraph_uid=6616, symbol_order=7413)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<return_type*> (struct return_type * D.241766, struct return_type * D.241767)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function function_return_array::~function_return_array (_ZN21function_return_arrayD2Ev, funcdef_no=6256, decl_uid=189962, cgraph_uid=3231, symbol_order=4003)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_return_array::~function_return_array (struct function_return_array * const this)
{
  <bb 2> :
  _1 = &this->return_type_array;
  std::vector<return_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function print_function_return (_Z21print_function_returnP9tree_node, funcdef_no=6258, decl_uid=187059, cgraph_uid=3234, symbol_order=4006)

Merging blocks 4 and 17
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 12 11
;; 2 succs { 20 3 }
;; 3 succs { 4 5 }
;; 4 succs { 17 }
;; 5 succs { 20 6 }
;; 6 succs { 20 7 }
;; 7 succs { 19 8 }
;; 8 succs { 18 9 }
;; 9 succs { 18 10 }
;; 10 succs { 14 }
;; 11 succs { 18 12 }
;; 12 succs { 18 13 }
;; 13 succs { 14 }
;; 14 succs { 11 15 }
;; 15 succs { 18 16 }
;; 16 succs { 17 }
;; 17 succs { 1 }
;; 18 succs { 19 }
;; 19 succs { 20 }
;; 20 succs { }
void print_function_return (union tree_node * function_tree)
{
  struct function_return_array * D.248919;
  struct function_return_array * D.248918;
  int i;
  struct vector ret_type_array;
  struct function_return_array fun_array;
  bool retval.92;
  bool retval.85;

  <bb 2> :
  function_return_collect.86_1 = function_return_collect;
  D.248918 = hash_map<tree_node*, function_return_array>::get (function_return_collect.86_1, &function_tree);

  <bb 3> :
  _2 = D.248918;
  retval.85 = _2 == 0B;
  if (retval.85 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  goto <bb 17>; [INV]

  <bb 5> :
  function_return_collect.87_3 = function_return_collect;
  D.248919 = hash_map<tree_node*, function_return_array>::get (function_return_collect.87_3, &function_tree);

  <bb 6> :
  _4 = D.248919;
  function_return_array::function_return_array (&fun_array, _4);

  <bb 7> :
  std::vector<return_type>::vector (&ret_type_array, &fun_array.return_type_array);

  <bb 8> :
  _5 = std::vector<return_type>::size (&ret_type_array);
  function_tree.88_6 = function_tree;
  stderr.89_7 = stderr;
  fprintf (stderr.89_7, "=======print_function_return %d   %d========\n", function_tree.88_6, _5);

  <bb 9> :
  stderr.90_8 = stderr;
  __builtin_fwrite ("[\n", 1, 2, stderr.90_8);

  <bb 10> :
  i = 0;
  goto <bb 14>; [INV]

  <bb 11> :
  _9 = (long unsigned int) i;
  _10 = std::vector<return_type>::operator[] (&ret_type_array, _9);
  _11 = _10->stmt;
  debug (_11);

  <bb 12> :
  stderr.91_12 = stderr;
  __builtin_fwrite (",\n", 1, 2, stderr.91_12);

  <bb 13> :
  i = i + 1;

  <bb 14> :
  _13 = (long unsigned int) i;
  _14 = std::vector<return_type>::size (&ret_type_array);
  retval.92 = _13 < _14;
  if (retval.92 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  stderr.93_15 = stderr;
  __builtin_fwrite ("]\n", 1, 2, stderr.93_15);

  <bb 16> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};

  <bb 17> :
<L7>:
  return;

  <bb 18> :
<L8>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 3

  <bb 19> :
<L9>:
  function_return_array::~function_return_array (&fun_array);
  resx 2

  <bb 20> :
<L10>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  resx 1

}



;; Function printfunctionCollect2 (_Z21printfunctionCollect2P3ptbP12gimple_array, funcdef_no=6259, decl_uid=190047, cgraph_uid=3235, symbol_order=4007)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;;
;; Loop 1
;;  header 13, latch 12
;;  depth 1, outer 0
;;  nodes: 13 12 11 7 10 9 8 6 5 4
;; 2 succs { 15 3 }
;; 3 succs { 13 }
;; 4 succs { 15 5 }
;; 5 succs { 15 6 }
;; 6 succs { 7 8 }
;; 7 succs { 11 }
;; 8 succs { 15 9 }
;; 9 succs { 15 10 }
;; 10 succs { 15 11 }
;; 11 succs { 15 12 }
;; 12 succs { 13 }
;; 13 succs { 4 14 }
;; 14 succs { 1 }
;; 15 succs { }
void printfunctionCollect2 (struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct cgraph_node * D.248930;
  struct function * D.248929;
  struct function * D.248928;
  struct cgraph_node * D.248927;
  struct cgraph_node * node;
  struct basic_block_def * bb;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  symtab.94_1 = symtab;
  D.248927 = symbol_table::first_defined_function (symtab.94_1);

  <bb 3> :
  node = D.248927;
  goto <bb 13>; [INV]

  <bb 4> :
  D.248928 = cgraph_node::get_fun (node);

  <bb 5> :
  _2 = D.248928;
  push_cfun (_2);

  <bb 6> :
  cfun.95_3 = cfun;
  if (cfun.95_3 == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by continue predictor.
  goto <bb 11>; [INV]

  <bb 8> :
  D.248929 = cgraph_node::get_fun (node);

  <bb 9> :
  _4 = D.248929;
  _5 = _4->decl;
  print_function_return2 (_5);

  <bb 10> :
  pop_cfun ();

  <bb 11> :
  symtab.96_6 = symtab;
  D.248930 = symbol_table::next_defined_function (symtab.96_6, node);

  <bb 12> :
  node = D.248930;

  <bb 13> :
  if (node != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  start = {CLOBBER};
  return;

  <bb 15> :
<L6>:
  start = {CLOBBER};
  resx 1

}



;; Function printfunctionCollect (_Z20printfunctionCollectP3ptbP12gimple_array, funcdef_no=6260, decl_uid=190062, cgraph_uid=3236, symbol_order=4008)

Removing basic block 13
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;;
;; Loop 1
;;  header 18, latch 17
;;  depth 1, outer 0
;;  nodes: 18 17 16 8 15 14 13 10 12 11 9 6 5 4 7
;; 2 succs { 20 3 }
;; 3 succs { 18 }
;; 4 succs { 20 5 }
;; 5 succs { 20 6 }
;; 6 succs { 7 9 }
;; 7 succs { 20 8 }
;; 8 succs { 16 }
;; 9 succs { 20 10 }
;; 10 succs { 11 13 }
;; 11 succs { 20 12 }
;; 12 succs { 20 13 }
;; 13 succs { 20 14 }
;; 14 succs { 20 15 }
;; 15 succs { 20 16 }
;; 16 succs { 20 17 }
;; 17 succs { 18 }
;; 18 succs { 4 19 }
;; 19 succs { 1 }
;; 20 succs { }
void printfunctionCollect (struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct cgraph_node * D.248942;
  struct function * D.248941;
  const char * D.248940;
  const char * D.248939;
  struct function * D.248938;
  struct cgraph_node * D.248937;
  const char * name;
  struct cgraph_node * node;
  struct basic_block_def * bb;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  symtab.97_1 = symtab;
  D.248937 = symbol_table::first_defined_function (symtab.97_1);

  <bb 3> :
  node = D.248937;
  goto <bb 18>; [INV]

  <bb 4> :
  D.248938 = cgraph_node::get_fun (node);

  <bb 5> :
  _2 = D.248938;
  push_cfun (_2);

  <bb 6> :
  cfun.98_3 = cfun;
  if (cfun.98_3 == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  pop_cfun ();

  <bb 8> :
  // predicted unlikely by continue predictor.
  goto <bb 16>; [INV]

  <bb 9> :
  cfun.99_4 = cfun;
  _5 = cfun.99_4->decl;
  D.248939 = get_name (_5);

  <bb 10> :
  name = D.248939;
  if (name != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  cfun.100_6 = cfun;
  _7 = cfun.100_6->decl;
  D.248940 = get_name (_7);

  <bb 12> :
  _8 = D.248940;
  stderr.101_9 = stderr;
  fprintf (stderr.101_9, "=======Mapping node_fun:%s=========\n", _8);

  <bb 13> :
  D.248941 = cgraph_node::get_fun (node);

  <bb 14> :
  _10 = D.248941;
  _11 = _10->decl;
  print_function_return (_11);

  <bb 15> :
  pop_cfun ();

  <bb 16> :
  symtab.102_12 = symtab;
  D.248942 = symbol_table::next_defined_function (symtab.102_12, node);

  <bb 17> :
  node = D.248942;

  <bb 18> :
  if (node != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  start = {CLOBBER};
  return;

  <bb 20> :
<L9>:
  start = {CLOBBER};
  resx 1

}



;; Function printfPointerConstraint (_Z23printfPointerConstraintP3ptbP12gimple_array, funcdef_no=6261, decl_uid=187057, cgraph_uid=3237, symbol_order=4009)

Removing basic block 22
Removing basic block 29
Removing basic block 30
Removing basic block 33
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
;;
;; Loop 1
;;  header 34, latch 33
;;  depth 1, outer 0
;;  nodes: 34 33 31 32 30 7 29 27 28 15 14 13 12 11 10 9 8 19 26 24 25 23 21 22 20 17 18 16 6
;;
;; Loop 2
;;  header 27, latch 26
;;  depth 2, outer 1
;;  nodes: 27 26 24 25 23 21 22 20
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 34 }
;; 6 succs { 36 7 }
;; 7 succs { 8 30 }
;; 8 succs { 36 9 }
;; 9 succs { 36 10 }
;; 10 succs { 36 11 }
;; 11 succs { 36 12 }
;; 12 succs { 36 13 }
;; 13 succs { 14 28 }
;; 14 succs { 36 15 }
;; 15 succs { 16 29 }
;; 16 succs { 17 18 }
;; 17 succs { 19 }
;; 18 succs { 19 }
;; 19 succs { 27 }
;; 20 succs { 21 22 }
;; 21 succs { 36 23 }
;; 22 succs { 36 23 }
;; 23 succs { 24 25 }
;; 24 succs { 26 }
;; 25 succs { 26 }
;; 26 succs { 27 }
;; 27 succs { 20 29 }
;; 28 succs { 36 29 }
;; 29 succs { 36 30 }
;; 30 succs { 31 32 }
;; 31 succs { 33 }
;; 32 succs { 33 }
;; 33 succs { 34 }
;; 34 succs { 6 35 }
;; 35 succs { 1 }
;; 36 succs { }
void printfPointerConstraint (struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct gimple_array * D.248972;
  location_t loc;
  location_t loc;
  location_t loc;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;
  union tree_node * iftmp.113;
  struct gimple * iftmp.110;
  struct gimple * iftmp.109;
  union tree_node * iftmp.103;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  if (table_temp != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.103 = table_temp->target;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.103 = 0B;

  <bb 5> :
  t = iftmp.103;
  goto <bb 34>; [INV]

  <bb 6> :
  stderr.104_1 = stderr;
  __builtin_fwrite ("------------------- stmt -----------------------\n", 1, 49, stderr.104_1);

  <bb 7> :
  _2 = table_temp->target;
  if (_2 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 8> :
  _3 = table_temp->last_stmt;
  loc = gimple_location_safe (_3);
  stderr.105_4 = stderr;
  __builtin_fwrite ("------------------------------------------\n", 1, 43, stderr.105_4);

  <bb 9> :
  warning_at (loc, 0, "loc");

  <bb 10> :
  _5 = table_temp->target;
  debug_tree (_5);

  <bb 11> :
  stderr.106_6 = stderr;
  __builtin_fwrite ("------------------------------------------\n", 1, 43, stderr.106_6);

  <bb 12> :
  treeGimpleArray.107_7 = treeGimpleArray;
  _8 = &table_temp->target;
  D.248972 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.107_7, _8);

  <bb 13> :
  user_tmp = D.248972;
  start.stmt = 0B;
  used_stmt = &start;
  if (user_tmp != 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 14> :
  _9 = user_tmp->size;
  stderr.108_10 = stderr;
  fprintf (stderr.108_10, " \n Pointer to set  is size %d :[ \n", _9);

  <bb 15> :
  _11 = user_tmp->size;
  if (_11 > 0)
    goto <bb 16>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 16> :
  if (user_tmp != 0B)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  iftmp.109 = user_tmp->stmt;
  goto <bb 19>; [INV]

  <bb 18> :
  iftmp.109 = 0B;

  <bb 19> :
  u_stmt = iftmp.109;
  goto <bb 27>; [INV]

  <bb 20> :
  _12 = user_tmp->ret_stmt;
  if (_12 != 0B)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  _13 = user_tmp->ret_stmt;
  loc = gimple_location_safe (_13);
  warning_at (loc, 0, "loc");
  goto <bb 23>; [INV]

  <bb 22> :
  loc = gimple_location_safe (u_stmt);
  warning_at (loc, 0, "loc");

  <bb 23> :
  user_tmp = user_tmp->next;
  if (user_tmp != 0B)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  iftmp.110 = user_tmp->stmt;
  goto <bb 26>; [INV]

  <bb 25> :
  iftmp.110 = 0B;

  <bb 26> :
  u_stmt = iftmp.110;

  <bb 27> :
  if (user_tmp != 0B)
    goto <bb 20>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 28> :
  stderr.111_14 = stderr;
  __builtin_fwrite (" \n Pointer to set  is size 0 :[ \n", 1, 33, stderr.111_14);

  <bb 29> :
  stderr.112_15 = stderr;
  __builtin_fwrite ("] \n", 1, 3, stderr.112_15);

  <bb 30> :
  table_temp = table_temp->next;
  if (table_temp != 0B)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  iftmp.113 = table_temp->target;
  goto <bb 33>; [INV]

  <bb 32> :
  iftmp.113 = 0B;

  <bb 33> :
  t = iftmp.113;

  <bb 34> :
  _16 = table_temp->next;
  if (_16 != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 35> :
  start = {CLOBBER};
  return;

  <bb 36> :
<L30>:
  start = {CLOBBER};
  resx 1

}



;; Function hash_map<tree_node*, gimple_array>::get (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7623, decl_uid=190134, cgraph_uid=4255, symbol_order=5044)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct gimple_array * hash_map<tree_node*, gimple_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.248982;
  struct hash_entry & D.248981;
  unsigned int D.248980;
  struct hash_entry & e;
  struct gimple_array * iftmp.114;
  struct gimple_array * D.248974;

  <bb 2> :
  _1 = &this->m_table;
  D.248980 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::hash (k);
  _2 = D.248980;
  D.248981 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.248981;
  D.248982 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_empty<hash_map<tree_node*, gimple_array>::hash_entry> (e);
  _3 = D.248982;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.114 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.114 = &e->m_value;

  <bb 5> :
  D.248974 = iftmp.114;

  <bb 6> :
<L3>:
  return D.248974;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE4hashERKS2_, funcdef_no=8466, decl_uid=190090, cgraph_uid=5098, symbol_order=5891)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::hash (union tree_node * const & h)
{
  hashval_t D.248983;

  <bb 2> :
  D.248983 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.248983;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8467, decl_uid=190274, cgraph_uid=5099, symbol_order=5892)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.249017;
  bool D.249016;
  bool D.249015;
  bool D.249014;
  bool D.249013;
  bool D.249012;
  struct value_type * D.249011;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.118;
  bool retval.117;
  struct value_type & D.248997;
  bool iftmp.116;
  bool retval.115;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 56;
  entry = _5 + _7;
  D.249012 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.249012;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.249013 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.249013;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.249014 = hash_map<tree_node*, gimple_array>::hash_entry::equal (entry, comparable);
  _11 = D.249014;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.116 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.116 = 0;

  <bb 8> :
  retval.115 = iftmp.116;
  if (retval.115 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.248997 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 56;
  entry = _17 + _19;
  D.249015 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.249015;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.249016 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.249016;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.249017 = hash_map<tree_node*, gimple_array>::hash_entry::equal (entry, comparable);
  _23 = D.249017;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.118 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.118 = 0;

  <bb 18> :
  retval.117 = iftmp.118;
  if (retval.117 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.248997 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.248997;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8940, decl_uid=190370, cgraph_uid=5572, symbol_order=6365)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.249020;
  bool D.249018;

  <bb 2> :
  D.249020 = hash_map<tree_node*, gimple_array>::hash_entry::is_empty (v);
  D.249018 = D.249020;

  <bb 3> :
<L0>:
  return D.249018;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8844, decl_uid=190203, cgraph_uid=5476, symbol_order=6269)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, gimple_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.249023;
  bool D.249021;

  <bb 2> :
  D.249023 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_empty<hash_map<tree_node*, gimple_array>::hash_entry> (e);
  D.249021 = D.249023;

  <bb 3> :
<L0>:
  return D.249021;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8941, decl_uid=190368, cgraph_uid=5573, symbol_order=6366)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.249026;
  bool D.249024;

  <bb 2> :
  D.249026 = hash_map<tree_node*, gimple_array>::hash_entry::is_deleted (v);
  D.249024 = D.249026;

  <bb 3> :
<L0>:
  return D.249024;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9795, decl_uid=190198, cgraph_uid=6427, symbol_order=7220)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, gimple_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.249029;
  bool D.249027;

  <bb 2> :
  D.249029 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_deleted<hash_map<tree_node*, gimple_array>::hash_entry> (e);
  D.249027 = D.249029;

  <bb 3> :
<L0>:
  return D.249027;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_deleted<hash_map<tree_node*, gimple_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10362, decl_uid=239656, cgraph_uid=6994, symbol_order=7791)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_deleted<hash_map<tree_node*, gimple_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.249030;

  <bb 2> :
  _1 = entry->m_key;
  D.249030 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.249030;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9256, decl_uid=190191, cgraph_uid=5888, symbol_order=6681)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, gimple_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.249034;
  bool D.249032;

  <bb 2> :
  _1 = &a->m_key;
  D.249034 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::equal_keys (_1, b);
  D.249032 = D.249034;

  <bb 3> :
<L0>:
  return D.249032;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE10equal_keysERKS2_S7_, funcdef_no=9987, decl_uid=190092, cgraph_uid=6619, symbol_order=7416)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.249035;

  <bb 2> :
  D.249035 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.249035;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_empty<hash_map<tree_node*, gimple_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8468, decl_uid=211845, cgraph_uid=5100, symbol_order=5893)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::is_empty<hash_map<tree_node*, gimple_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.249037;

  <bb 2> :
  _1 = entry->m_key;
  D.249037 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.249037;

}



;; Function gimple_location_safe (_ZL20gimple_location_safePK6gimple, funcdef_no=2004, decl_uid=92286, cgraph_uid=1141, symbol_order=1301)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
location_t gimple_location_safe (const struct gimple * g)
{
  location_t iftmp.119;
  location_t D.249039;

  <bb 2> :
  if (g != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.119 = gimple_location (g);
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.119 = 0;

  <bb 5> :
  D.249039 = iftmp.119;

  <bb 6> :
<L3>:
  return D.249039;

}



;; Function gimple_location (_ZL15gimple_locationPK6gimple, funcdef_no=2003, decl_uid=92283, cgraph_uid=1140, symbol_order=1300)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
location_t gimple_location (const struct gimple * g)
{
  location_t D.249045;

  <bb 2> :
  D.249045 = g->location;

  <bb 3> :
<L0>:
  return D.249045;

}



;; Function printfPointerConstraint2 (_Z24printfPointerConstraint2P3ptbP12gimple_array, funcdef_no=6262, decl_uid=190468, cgraph_uid=3238, symbol_order=4010)

Removing basic block 19
Removing basic block 26
Removing basic block 28
Removing basic block 31
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
;;
;; Loop 1
;;  header 32, latch 31
;;  depth 1, outer 0
;;  nodes: 32 31 29 30 28 7 27 25 12 24 16 23 21 22 20 18 19 17 14 15 13 11 10 9 8 26 6
;;
;; Loop 2
;;  header 24, latch 23
;;  depth 2, outer 1
;;  nodes: 24 23 21 22 20 18 19 17
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 32 }
;; 6 succs { 34 7 }
;; 7 succs { 8 28 }
;; 8 succs { 34 9 }
;; 9 succs { 34 10 }
;; 10 succs { 11 26 }
;; 11 succs { 34 12 }
;; 12 succs { 13 25 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 24 }
;; 17 succs { 18 19 }
;; 18 succs { 34 20 }
;; 19 succs { 34 20 }
;; 20 succs { 21 22 }
;; 21 succs { 23 }
;; 22 succs { 23 }
;; 23 succs { 24 }
;; 24 succs { 17 25 }
;; 25 succs { 34 28 }
;; 26 succs { 34 27 }
;; 27 succs { 34 28 }
;; 28 succs { 29 30 }
;; 29 succs { 31 }
;; 30 succs { 31 }
;; 31 succs { 32 }
;; 32 succs { 6 33 }
;; 33 succs { 1 }
;; 34 succs { }
void printfPointerConstraint2 (struct ptb * ftable, struct gimple_array * user_tmp)
{
  struct gimple_array * D.249075;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;
  union tree_node * iftmp.129;
  struct gimple * iftmp.125;
  struct gimple * iftmp.124;
  union tree_node * iftmp.120;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  if (table_temp != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.120 = table_temp->target;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.120 = 0B;

  <bb 5> :
  t = iftmp.120;
  goto <bb 32>; [INV]

  <bb 6> :
  stderr.121_1 = stderr;
  __builtin_fwrite ("\n ------------------------------------------\n", 1, 45, stderr.121_1);

  <bb 7> :
  _2 = table_temp->target;
  if (_2 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 8> :
  _3 = table_temp->target;
  debug_tree (_3);

  <bb 9> :
  treeGimpleArray.122_4 = treeGimpleArray;
  _5 = &table_temp->target;
  D.249075 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.122_4, _5);

  <bb 10> :
  user_tmp = D.249075;
  start.stmt = 0B;
  used_stmt = &start;
  if (user_tmp != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 11> :
  _6 = user_tmp->size;
  stderr.123_7 = stderr;
  fprintf (stderr.123_7, " \n Pointer to set  is size %d :[ \n", _6);

  <bb 12> :
  _8 = user_tmp->size;
  if (_8 > 0)
    goto <bb 13>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 13> :
  if (user_tmp != 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  iftmp.124 = user_tmp->stmt;
  goto <bb 16>; [INV]

  <bb 15> :
  iftmp.124 = 0B;

  <bb 16> :
  u_stmt = iftmp.124;
  goto <bb 24>; [INV]

  <bb 17> :
  _9 = user_tmp->ret_stmt;
  if (_9 != 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  _10 = user_tmp->ret_stmt;
  debug (_10);
  goto <bb 20>; [INV]

  <bb 19> :
  debug (u_stmt);

  <bb 20> :
  user_tmp = user_tmp->next;
  if (user_tmp != 0B)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  iftmp.125 = user_tmp->stmt;
  goto <bb 23>; [INV]

  <bb 22> :
  iftmp.125 = 0B;

  <bb 23> :
  u_stmt = iftmp.125;

  <bb 24> :
  if (user_tmp != 0B)
    goto <bb 17>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 25> :
  stderr.126_11 = stderr;
  __builtin_fwrite ("] \n", 1, 3, stderr.126_11);
  goto <bb 28>; [INV]

  <bb 26> :
  stderr.127_12 = stderr;
  __builtin_fwrite (" \n Pointer to set  is size 0 :[ \n", 1, 33, stderr.127_12);

  <bb 27> :
  stderr.128_13 = stderr;
  __builtin_fwrite ("] \n", 1, 3, stderr.128_13);

  <bb 28> :
  table_temp = table_temp->next;
  if (table_temp != 0B)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  iftmp.129 = table_temp->target;
  goto <bb 31>; [INV]

  <bb 30> :
  iftmp.129 = 0B;

  <bb 31> :
  t = iftmp.129;

  <bb 32> :
  _14 = table_temp->next;
  if (_14 != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 33> :
  start = {CLOBBER};
  return;

  <bb 34> :
<L30>:
  start = {CLOBBER};
  resx 1

}



;; Function set_ptb (_Z7set_ptbP15basic_block_defP3ptbP9tree_nodejiP6gimpleP11cgraph_node, funcdef_no=6263, decl_uid=190490, cgraph_uid=3239, symbol_order=4011)

Removing basic block 4
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;;
;; Loop 1
;;  header 9, latch 8
;;  depth 1, outer 0
;;  nodes: 9 8 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 }
;; 4 succs { 15 }
;; 5 succs { 9 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 6 10 }
;; 10 succs { 11 15 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 1 }
void set_ptb (struct basic_block_def * b, struct ptb * table, union tree_node * t, location_t l, int s, struct gimple * stmt, struct cgraph_node * node)
{
  struct function * D.249098;
  bool D.249097;
  void * D.249096;
  struct function * D.249095;
  bool D.249094;
  bool same;
  bool retval.133;
  void * D.190503;
  bool retval.131;

  <bb 2> :
  _1 = table->target;
  if (_1 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  pointtablecount.130_2 = pointtablecount;
  _3 = pointtablecount.130_2 + 1;
  pointtablecount = _3;
  table->bb = b;
  table->target = t;
  table->next = 0B;
  table->loc = l;
  table->state = s;
  table->may_realloc = 0;
  table->last_stmt = stmt;
  table->node = node;
  D.249094 = bb_in_branch_p (stmt);
  _4 = D.249094;
  table->inbranch = _4;
  D.249095 = cgraph_node::get_fun (node);
  _5 = D.249095;
  table->fun = _5;
  _6 = gimple_code (stmt);
  retval.131 = _6 == 18;

  <bb 4> :
  table->removed = 0;
  _7 = table->size;
  _8 = _7 + 1;
  table->size = _8;
  goto <bb 15>; [INV]

  <bb 5> :
  same = 0;
  goto <bb 9>; [INV]

  <bb 6> :
  _9 = table->target;
  if (t == _9)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  same = 1;

  <bb 8> :
  table = table->next;

  <bb 9> :
  _10 = table->next;
  if (_10 != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  _11 = ~same;
  if (_11 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 11> :
  pointtablecount.132_12 = pointtablecount;
  _13 = pointtablecount.132_12 + 1;
  pointtablecount = _13;
  D.249096 = operator new (120);
  D.190503 = D.249096;
  MEM[(struct ptb *)D.190503] = {};
  ptb::ptb (D.190503);
  table->next = D.190503;
  table = table->next;
  table->bb = b;
  table->target = t;
  table->next = 0B;
  table->loc = l;
  table->state = s;
  table->may_realloc = 0;
  table->last_stmt = stmt;
  table->node = node;
  D.249097 = bb_in_branch_p (stmt);
  _14 = D.249097;
  table->inbranch = _14;
  D.249098 = cgraph_node::get_fun (node);
  _15 = D.249098;
  table->fun = _15;
  _16 = gimple_code (stmt);
  retval.133 = _16 == 18;
  if (retval.133 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  table->is_phi_stmt = 1;
  goto <bb 14>; [INV]

  <bb 13> :
  table->is_phi_stmt = 0;

  <bb 14> :
  table->removed = 0;
  _17 = table->size;
  _18 = _17 + 1;
  table->size = _18;

  <bb 15> :
  return;

}



;; Function ptb::ptb (_ZN3ptbC2Ev, funcdef_no=6171, decl_uid=169197, cgraph_uid=3147, symbol_order=3868)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ptb::ptb (struct ptb * const this)
{
  <bb 2> :
  this->swap_target = 0B;
  this->swap_type = 0;
  this->pthread_type = 0;
  this->size = 0;
  return;

}



;; Function gimple_code (_ZL11gimple_codePK6gimple, funcdef_no=1996, decl_uid=92240, cgraph_uid=1133, symbol_order=1293)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
gimple_code gimple_code (const struct gimple * g)
{
  gimple_code D.249099;

  <bb 2> :
  _1 = g->code;
  D.249099 = (gimple_code) _1;

  <bb 3> :
<L0>:
  return D.249099;

}



;; Function set_gimple_array (_Z16set_gimple_arrayP12gimple_arrayP6gimpleP9tree_nodeS4_S2_, funcdef_no=6264, decl_uid=190513, cgraph_uid=3240, symbol_order=4012)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 5 6
;; 2 succs { 3 4 }
;; 3 succs { 11 }
;; 4 succs { 8 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 5 9 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 1 }
void set_gimple_array (struct gimple_array * table, struct gimple * used_stmt, union tree_node * fucntion, union tree_node * target, struct gimple * ret_stmt)
{
  void * D.249110;
  int size_tmp;
  bool same;
  void * D.190517;

  <bb 2> :
  _1 = table->stmt;
  if (_1 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  table->stmt = used_stmt;
  table->ret_stmt = ret_stmt;
  table->aptr = fucntion;
  table->target = target;
  table->size = 1;
  table->next = 0B;
  goto <bb 11>; [INV]

  <bb 4> :
  same = 0;
  size_tmp = 0;
  goto <bb 8>; [INV]

  <bb 5> :
  _2 = table->stmt;
  if (used_stmt == _2)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  same = 1;

  <bb 7> :
  size_tmp = size_tmp + 1;
  table = table->next;

  <bb 8> :
  _3 = table->next;
  if (_3 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _4 = ~same;
  if (_4 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  D.249110 = operator new (48);
  D.190517 = D.249110;
  MEM[(struct gimple_array *)D.190517].stmt = 0B;
  MEM[(struct gimple_array *)D.190517].ret_stmt = 0B;
  MEM[(struct gimple_array *)D.190517].aptr = 0B;
  MEM[(struct gimple_array *)D.190517].target = 0B;
  MEM[(struct gimple_array *)D.190517].next = 0B;
  MEM[(struct gimple_array *)D.190517].size = 0;
  gimple_array::gimple_array (D.190517);
  table->next = D.190517;
  table = table->next;
  table->stmt = used_stmt;
  table->ret_stmt = ret_stmt;
  table->target = target;
  table->size = size_tmp;
  table->aptr = fucntion;
  table->next = 0B;

  <bb 11> :
  return;

}



;; Function ret_function_varstmt (_Z20ret_function_varstmtP9tree_node, funcdef_no=6265, decl_uid=187027, cgraph_uid=3267, symbol_order=4039)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13
;; 2 succs { 13 3 }
;; 3 succs { 4 9 }
;; 4 succs { 12 5 }
;; 5 succs { 12 6 }
;; 6 succs { 12 7 }
;; 7 succs { 11 8 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 1 }
;; 11 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { }
struct function_assign_array ret_function_varstmt (union tree_node * function_tree)
{
  struct function_assign_array * D.249118;
  struct function_assign_array * D.249117;
  struct vector assign_type_array;
  struct function_assign_array assign_array [value-expr: *<retval>];
  bool retval.134;

  <bb 2> :
  function_assign_array::function_assign_array (<retval>);
  function_assign_collect.135_1 = function_assign_collect;
  D.249117 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.135_1, &function_tree);

  <bb 3> :
  _2 = D.249117;
  retval.134 = _2 != 0B;
  if (retval.134 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 4> :
  function_assign_collect.136_3 = function_assign_collect;
  D.249118 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.136_3, &function_tree);

  <bb 5> :
  _4 = D.249118;
  function_assign_array::operator= (<retval>, _4);

  <bb 6> :
  _5 = &<retval>->assign_type_array;
  std::vector<assign_type>::vector (&assign_type_array, _5);

  <bb 7> :
  <retval>->pass = 1;
  function_assign_collect.137_6 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.137_6, &function_tree, <retval>);

  <bb 8> :
  std::vector<assign_type>::~vector (&assign_type_array);
  assign_type_array = {CLOBBER};

  <bb 9> :

  <bb 10> :
<L3>:
  return <retval>;

  <bb 11> :
<L4>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 3

  <bb 12> :
<L5>:
  assign_type_array = {CLOBBER};
  resx 2

  <bb 13> :
<L6>:
  function_assign_array::~function_assign_array (<retval>);
  resx 1

}



;; Function function_assign_array::function_assign_array (_ZN21function_assign_arrayC2Ev, funcdef_no=6277, decl_uid=190530, cgraph_uid=3252, symbol_order=4024)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_assign_array::function_assign_array (struct function_assign_array * const this)
{
  <bb 2> :
  this->pass = 0;
  _1 = &this->assign_type_array;
  std::vector<assign_type>::vector (_1);
  return;

}



;; Function std::vector<assign_type>::vector (_ZNSt6vectorI11assign_typeSaIS0_EEC2Ev, funcdef_no=6275, decl_uid=176648, cgraph_uid=3249, symbol_order=4021)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.176656;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_ZNSt12_Vector_baseI11assign_typeSaIS0_EEC2Ev, funcdef_no=6273, decl_uid=176106, cgraph_uid=3246, symbol_order=4018)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7625, decl_uid=175998, cgraph_uid=4257, symbol_order=5046)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<assign_type>::allocator (this);
  _1 = &this->D.176001;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<assign_type>::allocator (_ZNSaI11assign_typeEC2Ev, funcdef_no=8470, decl_uid=175776, cgraph_uid=5102, symbol_order=5895)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<assign_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<assign_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<assign_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11assign_typeEC2Ev, funcdef_no=9258, decl_uid=175705, cgraph_uid=5890, symbol_order=6683)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<assign_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8473, decl_uid=175948, cgraph_uid=5105, symbol_order=5898)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::get (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7636, decl_uid=190763, cgraph_uid=4268, symbol_order=5057)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_assign_array * hash_map<tree_node*, function_assign_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.249130;
  struct hash_entry & D.249129;
  unsigned int D.249128;
  struct hash_entry & e;
  struct function_assign_array * iftmp.138;
  struct function_assign_array * D.249122;

  <bb 2> :
  _1 = &this->m_table;
  D.249128 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::hash (k);
  _2 = D.249128;
  D.249129 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.249129;
  D.249130 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (e);
  _3 = D.249130;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.138 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.138 = &e->m_value;

  <bb 5> :
  D.249122 = iftmp.138;

  <bb 6> :
<L3>:
  return D.249122;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE4hashERKS2_, funcdef_no=8481, decl_uid=190719, cgraph_uid=5113, symbol_order=5906)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::hash (union tree_node * const & h)
{
  hashval_t D.249131;

  <bb 2> :
  D.249131 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.249131;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8482, decl_uid=190906, cgraph_uid=5114, symbol_order=5907)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.249165;
  bool D.249164;
  bool D.249163;
  bool D.249162;
  bool D.249161;
  bool D.249160;
  struct value_type * D.249159;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.142;
  bool retval.141;
  struct value_type & D.249145;
  bool iftmp.140;
  bool retval.139;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 40;
  entry = _5 + _7;
  D.249160 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.249160;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.249161 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.249161;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.249162 = hash_map<tree_node*, function_assign_array>::hash_entry::equal (entry, comparable);
  _11 = D.249162;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.140 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.140 = 0;

  <bb 8> :
  retval.139 = iftmp.140;
  if (retval.139 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.249145 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  entry = _17 + _19;
  D.249163 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.249163;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.249164 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.249164;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.249165 = hash_map<tree_node*, function_assign_array>::hash_entry::equal (entry, comparable);
  _23 = D.249165;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.142 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.142 = 0;

  <bb 18> :
  retval.141 = iftmp.142;
  if (retval.141 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.249145 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.249145;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8956, decl_uid=191002, cgraph_uid=5588, symbol_order=6381)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.249168;
  bool D.249166;

  <bb 2> :
  D.249168 = hash_map<tree_node*, function_assign_array>::hash_entry::is_empty (v);
  D.249166 = D.249168;

  <bb 3> :
<L0>:
  return D.249166;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8504, decl_uid=190832, cgraph_uid=5136, symbol_order=5929)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_assign_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.249171;
  bool D.249169;

  <bb 2> :
  D.249171 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (e);
  D.249169 = D.249171;

  <bb 3> :
<L0>:
  return D.249169;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8957, decl_uid=191000, cgraph_uid=5589, symbol_order=6382)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.249174;
  bool D.249172;

  <bb 2> :
  D.249174 = hash_map<tree_node*, function_assign_array>::hash_entry::is_deleted (v);
  D.249172 = D.249174;

  <bb 3> :
<L0>:
  return D.249172;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9803, decl_uid=190827, cgraph_uid=6435, symbol_order=7228)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_assign_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.249177;
  bool D.249175;

  <bb 2> :
  D.249177 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_deleted<hash_map<tree_node*, function_assign_array>::hash_entry> (e);
  D.249175 = D.249177;

  <bb 3> :
<L0>:
  return D.249175;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_deleted<hash_map<tree_node*, function_assign_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10368, decl_uid=239680, cgraph_uid=7000, symbol_order=7797)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_deleted<hash_map<tree_node*, function_assign_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.249178;

  <bb 2> :
  _1 = entry->m_key;
  D.249178 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.249178;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9263, decl_uid=190820, cgraph_uid=5895, symbol_order=6688)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_assign_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.249182;
  bool D.249180;

  <bb 2> :
  _1 = &a->m_key;
  D.249182 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::equal_keys (_1, b);
  D.249180 = D.249182;

  <bb 3> :
<L0>:
  return D.249180;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE10equal_keysERKS2_S7_, funcdef_no=9992, decl_uid=190721, cgraph_uid=6624, symbol_order=7421)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.249183;

  <bb 2> :
  D.249183 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.249183;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8483, decl_uid=211882, cgraph_uid=5115, symbol_order=5908)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::is_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.249185;

  <bb 2> :
  _1 = entry->m_key;
  D.249185 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.249185;

}



;; Function function_assign_array::operator= (_ZN21function_assign_arrayaSERKS_, funcdef_no=6282, decl_uid=191088, cgraph_uid=3257, symbol_order=4029)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_assign_array & function_assign_array::operator= (struct function_assign_array * const this, const struct function_assign_array & D.191089)
{
  struct function_assign_array & D.249187;

  <bb 2> :
  _1 = D.191089->pass;
  this->pass = _1;
  _2 = &D.191089->assign_type_array;
  _3 = &this->assign_type_array;
  std::vector<assign_type>::operator= (_3, _2);
  D.249187 = this;

  <bb 3> :
<L0>:
  return D.249187;

}



;; Function std::vector<assign_type>::operator= (_ZNSt6vectorI11assign_typeSaIS0_EEaSERKS2_, funcdef_no=7637, decl_uid=176234, cgraph_uid=4270, symbol_order=5059)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<assign_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct assign_type * D.249222;
  struct assign_type * __tmp;
  const size_type __xlen;
  struct vector & D.249220;
  struct __normal_iterator D.249217;
  struct __normal_iterator D.249216;
  struct __normal_iterator D.249215;
  struct __normal_iterator D.249214;
  struct __normal_iterator D.249213;
  bool retval.147;
  struct __normal_iterator D.249208;
  struct __normal_iterator D.249207;
  bool retval.146;
  bool iftmp.145;
  bool retval.144;
  bool retval.143;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.143 = __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_propagate_on_copy_assign ();
  if (retval.143 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.176656;
  _4 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.176656;
  _6 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.145 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.145 = 0;

  <bb 8> :
  retval.144 = iftmp.145;
  if (retval.144 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<assign_type>::clear (this);
  _8 = &this->D.176656;
  _9 = this->D.176656._M_impl.D.176001._M_end_of_storage;
  _10 = this->D.176656._M_impl.D.176001._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 24;
  _13 = (long unsigned int) _12;
  _14 = this->D.176656._M_impl.D.176001._M_start;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (_8, _14, _13);
  this->D.176656._M_impl.D.176001._M_start = 0B;
  this->D.176656._M_impl.D.176001._M_finish = 0B;
  this->D.176656._M_impl.D.176001._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.176656;
  _16 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.176656;
  _18 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<assign_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<assign_type>::size (__x);
  _19 = std::vector<assign_type>::capacity (this);
  retval.146 = __xlen > _19;
  if (retval.146 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.249207 = std::vector<assign_type>::end (__x);
  D.249208 = std::vector<assign_type>::begin (__x);
  D.249222 = std::vector<assign_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (this, __xlen, D.249208, D.249207);
  __tmp = D.249222;
  _20 = &this->D.176656;
  _21 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.176656._M_impl.D.176001._M_finish;
  _23 = this->D.176656._M_impl.D.176001._M_start;
  std::_Destroy<assign_type*, assign_type> (_23, _22, _21);
  _24 = &this->D.176656;
  _25 = this->D.176656._M_impl.D.176001._M_end_of_storage;
  _26 = this->D.176656._M_impl.D.176001._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 24;
  _29 = (long unsigned int) _28;
  _30 = this->D.176656._M_impl.D.176001._M_start;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (_24, _30, _29);
  this->D.176656._M_impl.D.176001._M_start = __tmp;
  _31 = this->D.176656._M_impl.D.176001._M_start;
  _32 = __xlen * 24;
  _33 = _31 + _32;
  this->D.176656._M_impl.D.176001._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<assign_type>::size (this);
  retval.147 = __xlen <= _34;
  if (retval.147 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.176656;
  _36 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_35);
  D.249213 = std::vector<assign_type>::end (this);
  D.249214 = std::vector<assign_type>::begin (this);
  D.249215 = std::vector<assign_type>::end (__x);
  D.249216 = std::vector<assign_type>::begin (__x);
  D.249217 = std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (D.249216, D.249215, D.249214);
  std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type> (D.249217, D.249213, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.176656._M_impl.D.176001._M_start;
  _38 = __x->D.176656._M_impl.D.176001._M_start;
  _39 = std::vector<assign_type>::size (this);
  _40 = _39 * 24;
  _41 = _38 + _40;
  _42 = __x->D.176656._M_impl.D.176001._M_start;
  std::copy<assign_type*, assign_type*> (_42, _41, _37);
  _43 = &this->D.176656;
  _44 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.176656._M_impl.D.176001._M_finish;
  _46 = __x->D.176656._M_impl.D.176001._M_finish;
  _47 = __x->D.176656._M_impl.D.176001._M_start;
  _48 = std::vector<assign_type>::size (this);
  _49 = _48 * 24;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<assign_type*, assign_type*, assign_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.176656._M_impl.D.176001._M_start;
  _52 = __xlen * 24;
  _53 = _51 + _52;
  this->D.176656._M_impl.D.176001._M_finish = _53;

  <bb 17> :
  D.249220 = this;

  <bb 18> :
<L19>:
  return D.249220;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI11assign_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7638, decl_uid=175868, cgraph_uid=4269, symbol_order=5058)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_propagate_on_copy_assign ()
{
  bool D.249223;

  <bb 2> :
  D.249223 = 0;

  <bb 3> :
<L0>:
  return D.249223;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI11assign_typeES1_E15_S_always_equalEv, funcdef_no=6417, decl_uid=175871, cgraph_uid=3391, symbol_order=4169)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_always_equal ()
{
  bool D.249225;

  <bb 2> :
  D.249225 = 1;

  <bb 3> :
<L0>:
  return D.249225;

}



;; Function std::operator!= (_ZStneRKSaI11assign_typeES2_, funcdef_no=8485, decl_uid=175754, cgraph_uid=5117, symbol_order=5910)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.222577, const struct allocator & D.222578)
{
  bool D.249227;

  <bb 2> :
  D.249227 = 0;

  <bb 3> :
<L0>:
  return D.249227;

}



;; Function std::vector<assign_type>::clear (_ZNSt6vectorI11assign_typeSaIS0_EE5clearEv, funcdef_no=8486, decl_uid=176386, cgraph_uid=5118, symbol_order=5911)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.176656._M_impl.D.176001._M_start;
  std::vector<assign_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<assign_type>::_M_erase_at_end (_ZNSt6vectorI11assign_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9264, decl_uid=176514, cgraph_uid=5896, symbol_order=6689)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<assign_type>::_M_erase_at_end (struct vector * const this, struct assign_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.176656._M_impl.D.176001._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 24;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.176656;
  _5 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.176656._M_impl.D.176001._M_finish;
  std::_Destroy<assign_type*, assign_type> (__pos, _6, _5);
  this->D.176656._M_impl.D.176001._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI11assign_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8484, decl_uid=175891, cgraph_uid=5116, symbol_order=5909)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.249232;

  <bb 2> :
  D.249232 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.249232;

}



;; Function std::__alloc_on_copy<std::allocator<assign_type> > (_ZSt15__alloc_on_copyISaI11assign_typeEEvRT_RKS2_, funcdef_no=8487, decl_uid=211905, cgraph_uid=5119, symbol_order=5912)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<assign_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<assign_type>::capacity (_ZNKSt6vectorI11assign_typeSaIS0_EE8capacityEv, funcdef_no=8488, decl_uid=176302, cgraph_uid=5120, symbol_order=5913)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<assign_type>::capacity (const struct vector * const this)
{
  size_type D.249234;

  <bb 2> :
  _1 = this->D.176656._M_impl.D.176001._M_end_of_storage;
  _2 = this->D.176656._M_impl.D.176001._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.249234 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.249234;

}



;; Function std::vector<assign_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (_ZNSt6vectorI11assign_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8491, decl_uid=212009, cgraph_uid=5123, symbol_order=5916)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct assign_type * std::vector<assign_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct assign_type * D.249238;
  struct assign_type * __result;
  struct assign_type * D.249236;

  <bb 2> :
  _1 = &this->D.176656;
  D.249238 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_allocate (_1, __n);
  __result = D.249238;
  _2 = &this->D.176656;
  _3 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*, assign_type> (__first, __last, __result, _3);

  <bb 3> :
  D.249236 = __result;

  <bb 4> :
<L0>:
  return D.249236;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.176656;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_allocate (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE11_M_allocateEm, funcdef_no=9268, decl_uid=176005, cgraph_uid=5900, symbol_order=6693)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct assign_type * std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct assign_type * D.249248;
  struct assign_type * iftmp.148;
  struct assign_type * D.249242;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.249248 = std::allocator_traits<std::allocator<assign_type> >::allocate (_1, __n);
  iftmp.148 = D.249248;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.148 = 0B;

  <bb 5> :
  D.249242 = iftmp.148;

  <bb 6> :
<L3>:
  return D.249242;

}



;; Function std::allocator_traits<std::allocator<assign_type> >::allocate (_ZNSt16allocator_traitsISaI11assign_typeEE8allocateERS1_m, funcdef_no=9993, decl_uid=175806, cgraph_uid=6625, symbol_order=7422)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct assign_type * std::allocator_traits<std::allocator<assign_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct assign_type * D.249251;
  struct assign_type * D.249249;

  <bb 2> :
  D.249251 = __gnu_cxx::new_allocator<assign_type>::allocate (__a, __n, 0B);
  D.249249 = D.249251;

  <bb 3> :
<L0>:
  return D.249249;

}



;; Function __gnu_cxx::new_allocator<assign_type>::allocate (_ZN9__gnu_cxx13new_allocatorI11assign_typeE8allocateEmPKv, funcdef_no=10530, decl_uid=175660, cgraph_uid=7163, symbol_order=7960)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct assign_type * __gnu_cxx::new_allocator<assign_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.245286)
{
  struct assign_type * D.249262;
  struct assign_type * D.249261;
  align_val_t __al;
  struct assign_type * D.249259;
  bool retval.149;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<assign_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.149 = _4 != 0;
  if (retval.149 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 768614336404564650)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 24;
  D.249262 = operator new (_6);
  D.249259 = D.249262;

  <bb 7> :
<L6>:
  return D.249259;

}



;; Function __gnu_cxx::new_allocator<assign_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI11assign_typeE11_M_max_sizeEv, funcdef_no=10531, decl_uid=175687, cgraph_uid=7162, symbol_order=7959)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<assign_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.249263;

  <bb 2> :
  D.249263 = 384307168202282325;

  <bb 3> :
<L0>:
  return D.249263;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*, assign_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8502, decl_uid=212143, cgraph_uid=5134, symbol_order=5927)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*, assign_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct assign_type * __result, struct allocator & D.222744)
{
  struct assign_type * D.249267;
  struct assign_type * D.249265;

  <bb 2> :
  D.249267 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (__first, __last, __result);
  D.249265 = D.249267;

  <bb 3> :
<L0>:
  return D.249265;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9285, decl_uid=222746, cgraph_uid=5917, symbol_order=6710)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct assign_type * __result)
{
  struct assign_type * D.249270;
  const bool __assignable;
  struct assign_type * D.249268;

  <bb 2> :
  __assignable = 1;
  D.249270 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (__first, __last, __result);
  D.249268 = D.249270;

  <bb 3> :
<L0>:
  return D.249268;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10003, decl_uid=234755, cgraph_uid=6635, symbol_order=7432)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct assign_type * __result)
{
  struct assign_type * D.249273;
  struct assign_type * D.249271;

  <bb 2> :
  D.249273 = std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (__first, __last, __result);
  D.249271 = D.249273;

  <bb 3> :
<L0>:
  return D.249271;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10536, decl_uid=241839, cgraph_uid=7168, symbol_order=7965)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct assign_type * __result)
{
  struct assign_type * D.249278;
  struct __normal_iterator D.249276;
  struct __normal_iterator D.249275;
  struct assign_type * D.249274;

  <bb 2> :
  D.249275 = std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (__last);
  D.249276 = std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (__first);
  D.249278 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (D.249276, D.249275, __result);
  D.249274 = D.249278;

  <bb 3> :
<L0>:
  return D.249274;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9272, decl_uid=222663, cgraph_uid=5904, symbol_order=6697)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.249279;

  <bb 2> :
  D.249279 = __it;

  <bb 3> :
<L0>:
  return D.249279;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEEPS2_ET1_T0_SB_SA_, funcdef_no=10855, decl_uid=245344, cgraph_uid=7487, symbol_order=8286)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct assign_type * __result)
{
  struct assign_type * D.249283;
  struct assign_type * D.249281;

  <bb 2> :
  __result.150_1 = __result;
  _2 = std::__niter_base<assign_type*> (__result.150_1);
  _3 = std::__niter_base<const assign_type*, std::vector<assign_type> > (__last);
  _4 = std::__niter_base<const assign_type*, std::vector<assign_type> > (__first);
  D.249283 = std::__copy_move_a1<false, const assign_type*, assign_type*> (_4, _3, _2);
  _5 = D.249283;
  D.249281 = std::__niter_wrap<assign_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.249281;

}



;; Function std::__niter_base<assign_type*> (_ZSt12__niter_baseIP11assign_typeET_S2_, funcdef_no=9999, decl_uid=225286, cgraph_uid=6631, symbol_order=7428)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__niter_base<assign_type*> (struct assign_type * __it)
{
  struct assign_type * D.249284;

  <bb 2> :
  D.249284 = __it;

  <bb 3> :
<L0>:
  return D.249284;

}



;; Function std::__niter_base<const assign_type*, std::vector<assign_type> > (_ZSt12__niter_baseIPK11assign_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=9994, decl_uid=234403, cgraph_uid=6626, symbol_order=7423)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct assign_type * std::__niter_base<const assign_type*, std::vector<assign_type> > (struct __normal_iterator __it)
{
  const struct assign_type * D.249286;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::base (&__it);
  D.249286 = *_1;

  <bb 3> :
<L0>:
  return D.249286;

}



;; Function __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10532, decl_uid=211976, cgraph_uid=7164, symbol_order=7961)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct assign_type * const & __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::base (const struct __normal_iterator * const this)
{
  const struct assign_type * const & D.249288;

  <bb 2> :
  D.249288 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.249288;

}



;; Function std::__copy_move_a1<false, const assign_type*, assign_type*> (_ZSt14__copy_move_a1ILb0EPK11assign_typePS0_ET1_T0_S5_S4_, funcdef_no=9996, decl_uid=234557, cgraph_uid=6628, symbol_order=7425)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a1<false, const assign_type*, assign_type*> (const struct assign_type * __first, const struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.249292;
  struct assign_type * D.249290;

  <bb 2> :
  D.249292 = std::__copy_move_a2<false, const assign_type*, assign_type*> (__first, __last, __result);
  D.249290 = D.249292;

  <bb 3> :
<L0>:
  return D.249290;

}



;; Function std::__copy_move_a2<false, const assign_type*, assign_type*> (_ZSt14__copy_move_a2ILb0EPK11assign_typePS0_ET1_T0_S5_S4_, funcdef_no=10533, decl_uid=241806, cgraph_uid=7165, symbol_order=7962)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a2<false, const assign_type*, assign_type*> (const struct assign_type * __first, const struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.249293;

  <bb 2> :
  D.249293 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<assign_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.249293;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<assign_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI11assign_typeEEPT_PKS4_S7_S5_, funcdef_no=10854, decl_uid=245318, cgraph_uid=7486, symbol_order=8285)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct assign_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<assign_type> (const struct assign_type * __first, const struct assign_type * __last, struct assign_type * __result)
{
  const ptrdiff_t _Num;
  struct assign_type * D.249298;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 24;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.151_2 = (long unsigned int) _Num;
  _3 = _Num.151_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.152_4 = (long unsigned int) _Num;
  _5 = _Num.152_4 * 24;
  D.249298 = __result + _5;

  <bb 5> :
<L3>:
  return D.249298;

}



;; Function std::__niter_wrap<assign_type*> (_ZSt12__niter_wrapIP11assign_typeET_RKS2_S2_, funcdef_no=10001, decl_uid=234600, cgraph_uid=6633, symbol_order=7430)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__niter_wrap<assign_type*> (struct assign_type * const & D.241828, struct assign_type * __res)
{
  struct assign_type * D.249300;

  <bb 2> :
  D.249300 = __res;

  <bb 3> :
<L0>:
  return D.249300;

}



;; Function std::_Destroy<assign_type*, assign_type> (_ZSt8_DestroyIP11assign_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8480, decl_uid=211866, cgraph_uid=5112, symbol_order=5905)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<assign_type*, assign_type> (struct assign_type * __first, struct assign_type * __last, struct allocator & D.222557)
{
  <bb 2> :
  std::_Destroy<assign_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<assign_type*> (_ZSt8_DestroyIP11assign_typeEvT_S2_, funcdef_no=9261, decl_uid=222559, cgraph_uid=5893, symbol_order=6686)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<assign_type*> (struct assign_type * __first, struct assign_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<assign_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<assign_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP11assign_typeEEvT_S4_, funcdef_no=9989, decl_uid=234363, cgraph_uid=6621, symbol_order=7418)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<assign_type*> (struct assign_type * D.241782, struct assign_type * D.241783)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8478, decl_uid=176008, cgraph_uid=5110, symbol_order=5903)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (struct _Vector_base * const this, struct assign_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<assign_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<assign_type> >::deallocate (_ZNSt16allocator_traitsISaI11assign_typeEE10deallocateERS1_PS0_m, funcdef_no=9260, decl_uid=175813, cgraph_uid=5892, symbol_order=6685)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<assign_type> >::deallocate (struct allocator_type & __a, struct assign_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<assign_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<assign_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI11assign_typeE10deallocateEPS1_m, funcdef_no=9988, decl_uid=175664, cgraph_uid=6620, symbol_order=7417)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<assign_type>::deallocate (struct new_allocator * const this, struct assign_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<assign_type>::end (_ZNSt6vectorI11assign_typeSaIS0_EE3endEv, funcdef_no=8494, decl_uid=176269, cgraph_uid=5126, symbol_order=5919)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<assign_type>::end (struct vector * const this)
{
  struct iterator D.222697;
  struct iterator D.249308;

  <bb 2> :
  _1 = &this->D.176656._M_impl.D.176001._M_finish;
  __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::__normal_iterator (&D.222697, _1);
  D.249308 = D.222697;
  D.222697 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249308;

}



;; Function __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9270, decl_uid=212091, cgraph_uid=5902, symbol_order=6695)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::__normal_iterator (struct __normal_iterator * const this, struct assign_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<assign_type>::begin (_ZNSt6vectorI11assign_typeSaIS0_EE5beginEv, funcdef_no=8492, decl_uid=176265, cgraph_uid=5124, symbol_order=5917)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<assign_type>::begin (struct vector * const this)
{
  struct iterator D.222651;
  struct iterator D.249311;

  <bb 2> :
  _1 = &this->D.176656._M_impl.D.176001._M_start;
  __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::__normal_iterator (&D.222651, _1);
  D.249311 = D.222651;
  D.222651 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249311;

}



;; Function std::vector<assign_type>::end (_ZNKSt6vectorI11assign_typeSaIS0_EE3endEv, funcdef_no=8490, decl_uid=176271, cgraph_uid=5122, symbol_order=5915)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<assign_type>::end (const struct vector * const this)
{
  struct const_iterator D.222613;
  struct const_iterator D.249314;

  <bb 2> :
  _1 = &this->D.176656._M_impl.D.176001._M_finish;
  __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::__normal_iterator (&D.222613, _1);
  D.249314 = D.222613;
  D.222613 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249314;

}



;; Function __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9266, decl_uid=211989, cgraph_uid=5898, symbol_order=6691)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::__normal_iterator (struct __normal_iterator * const this, const struct assign_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<assign_type>::begin (_ZNKSt6vectorI11assign_typeSaIS0_EE5beginEv, funcdef_no=8489, decl_uid=176267, cgraph_uid=5121, symbol_order=5914)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<assign_type>::begin (const struct vector * const this)
{
  struct const_iterator D.222611;
  struct const_iterator D.249317;

  <bb 2> :
  _1 = &this->D.176656._M_impl.D.176001._M_start;
  __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >::__normal_iterator (&D.222611, _1);
  D.249317 = D.222611;
  D.222611 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.249317;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8493, decl_uid=212110, cgraph_uid=5125, symbol_order=5918)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.249322;
  struct __normal_iterator D.249321;
  struct __normal_iterator D.249320;

  <bb 2> :
  D.249321 = std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (__last);
  D.249322 = std::__miter_base<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> > > (__first);
  D.249320 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (D.249322, D.249321, __result);

  <bb 3> :
<L0>:
  return D.249320;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK11assign_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9273, decl_uid=222669, cgraph_uid=5906, symbol_order=6699)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct assign_type * D.249326;
  struct __normal_iterator D.249324;

  <bb 2> :
  _1 = std::__niter_base<assign_type*, std::vector<assign_type> > (__result);
  _2 = std::__niter_base<const assign_type*, std::vector<assign_type> > (__last);
  _3 = std::__niter_base<const assign_type*, std::vector<assign_type> > (__first);
  D.249326 = std::__copy_move_a1<false, const assign_type*, assign_type*> (_3, _2, _1);
  _4 = D.249326;
  D.249324 = std::__niter_wrap<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.249324;

}



;; Function std::__niter_base<assign_type*, std::vector<assign_type> > (_ZSt12__niter_baseIP11assign_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=9995, decl_uid=234554, cgraph_uid=6627, symbol_order=7424)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__niter_base<assign_type*, std::vector<assign_type> > (struct __normal_iterator __it)
{
  struct assign_type * D.249327;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (&__it);
  D.249327 = *_1;

  <bb 3> :
<L0>:
  return D.249327;

}



;; Function __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9453, decl_uid=212078, cgraph_uid=6085, symbol_order=6878)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * const & __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (const struct __normal_iterator * const this)
{
  struct assign_type * const & D.249329;

  <bb 2> :
  D.249329 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.249329;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=9997, decl_uid=234561, cgraph_uid=6629, symbol_order=7426)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type*> (struct __normal_iterator __from, struct assign_type * __res)
{
  struct __normal_iterator D.249331;

  <bb 2> :
  _1 = std::__niter_base<assign_type*, std::vector<assign_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 24;
  D.249331 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.249331;

}



;; Function __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10534, decl_uid=212069, cgraph_uid=7166, symbol_order=7963)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct assign_type * const D.245324;
  struct __normal_iterator D.245325;
  struct __normal_iterator D.249333;

  <bb 2> :
  _1 = this->_M_current;
  __n.153_2 = (long unsigned int) __n;
  _3 = __n.153_2 * 24;
  _4 = _1 + _3;
  D.245324 = _4;
  __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::__normal_iterator (&D.245325, &D.245324);
  D.249333 = D.245325;
  D.245325 = {CLOBBER};
  D.245324 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.249333;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8495, decl_uid=212116, cgraph_uid=5127, symbol_order=5920)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >, assign_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.222700)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9275, decl_uid=222702, cgraph_uid=5907, symbol_order=6700)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP11assign_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=9998, decl_uid=234585, cgraph_uid=6630, symbol_order=7427)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> > > (struct __normal_iterator D.241815, struct __normal_iterator D.241816)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<assign_type*, assign_type*> (_ZSt4copyIP11assign_typeS1_ET0_T_S3_S2_, funcdef_no=8496, decl_uid=212124, cgraph_uid=5128, symbol_order=5921)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::copy<assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.249339;
  struct assign_type * D.249337;

  <bb 2> :
  _1 = std::__miter_base<assign_type*> (__last);
  _2 = std::__miter_base<assign_type*> (__first);
  D.249339 = std::__copy_move_a<false, assign_type*, assign_type*> (_2, _1, __result);
  D.249337 = D.249339;

  <bb 3> :
<L0>:
  return D.249337;

}



;; Function std::__miter_base<assign_type*> (_ZSt12__miter_baseIP11assign_typeET_S2_, funcdef_no=9276, decl_uid=222718, cgraph_uid=5908, symbol_order=6701)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__miter_base<assign_type*> (struct assign_type * __it)
{
  struct assign_type * D.249340;

  <bb 2> :
  D.249340 = __it;

  <bb 3> :
<L0>:
  return D.249340;

}



;; Function std::__copy_move_a<false, assign_type*, assign_type*> (_ZSt13__copy_move_aILb0EP11assign_typeS1_ET1_T0_S3_S2_, funcdef_no=9277, decl_uid=222720, cgraph_uid=5909, symbol_order=6702)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a<false, assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.249344;
  struct assign_type * D.249342;

  <bb 2> :
  __result.154_1 = __result;
  _2 = std::__niter_base<assign_type*> (__result.154_1);
  _3 = std::__niter_base<assign_type*> (__last);
  _4 = std::__niter_base<assign_type*> (__first);
  D.249344 = std::__copy_move_a1<false, assign_type*, assign_type*> (_4, _3, _2);
  _5 = D.249344;
  D.249342 = std::__niter_wrap<assign_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.249342;

}



;; Function std::__copy_move_a1<false, assign_type*, assign_type*> (_ZSt14__copy_move_a1ILb0EP11assign_typeS1_ET1_T0_S3_S2_, funcdef_no=10000, decl_uid=234596, cgraph_uid=6632, symbol_order=7429)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a1<false, assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.249347;
  struct assign_type * D.249345;

  <bb 2> :
  D.249347 = std::__copy_move_a2<false, assign_type*, assign_type*> (__first, __last, __result);
  D.249345 = D.249347;

  <bb 3> :
<L0>:
  return D.249345;

}



;; Function std::__copy_move_a2<false, assign_type*, assign_type*> (_ZSt14__copy_move_a2ILb0EP11assign_typeS1_ET1_T0_S3_S2_, funcdef_no=10535, decl_uid=241824, cgraph_uid=7167, symbol_order=7964)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__copy_move_a2<false, assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.249348;

  <bb 2> :
  D.249348 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<assign_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.249348;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8479, decl_uid=175889, cgraph_uid=5111, symbol_order=5904)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.249350;

  <bb 2> :
  D.249350 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.249350;

}



;; Function std::vector<assign_type>::size (_ZNKSt6vectorI11assign_typeSaIS0_EE4sizeEv, funcdef_no=7646, decl_uid=176289, cgraph_uid=4278, symbol_order=5067)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<assign_type>::size (const struct vector * const this)
{
  size_type D.249352;

  <bb 2> :
  _1 = this->D.176656._M_impl.D.176001._M_finish;
  _2 = this->D.176656._M_impl.D.176001._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.249352 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.249352;

}



;; Function std::__uninitialized_copy_a<assign_type*, assign_type*, assign_type> (_ZSt22__uninitialized_copy_aIP11assign_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8497, decl_uid=212128, cgraph_uid=5129, symbol_order=5922)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__uninitialized_copy_a<assign_type*, assign_type*, assign_type> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result, struct allocator & D.222727)
{
  struct assign_type * D.249356;
  struct assign_type * D.249354;

  <bb 2> :
  D.249356 = std::uninitialized_copy<assign_type*, assign_type*> (__first, __last, __result);
  D.249354 = D.249356;

  <bb 3> :
<L0>:
  return D.249354;

}



;; Function std::uninitialized_copy<assign_type*, assign_type*> (_ZSt18uninitialized_copyIP11assign_typeS1_ET0_T_S3_S2_, funcdef_no=9278, decl_uid=222729, cgraph_uid=5911, symbol_order=6704)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::uninitialized_copy<assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.249359;
  const bool __assignable;
  struct assign_type * D.249357;

  <bb 2> :
  __assignable = 1;
  D.249359 = std::__uninitialized_copy<true>::__uninit_copy<assign_type*, assign_type*> (__first, __last, __result);
  D.249357 = D.249359;

  <bb 3> :
<L0>:
  return D.249357;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<assign_type*, assign_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIP11assign_typeS3_EET0_T_S5_S4_, funcdef_no=10002, decl_uid=234699, cgraph_uid=6634, symbol_order=7431)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__uninitialized_copy<true>::__uninit_copy<assign_type*, assign_type*> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result)
{
  struct assign_type * D.249362;
  struct assign_type * D.249360;

  <bb 2> :
  D.249362 = std::copy<assign_type*, assign_type*> (__first, __last, __result);
  D.249360 = D.249362;

  <bb 3> :
<L0>:
  return D.249360;

}



;; Function std::vector<assign_type>::vector (_ZNSt6vectorI11assign_typeSaIS0_EEC2ERKS2_, funcdef_no=7640, decl_uid=176619, cgraph_uid=4272, symbol_order=5061)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<assign_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct assign_type * D.249367;
  struct __normal_iterator D.249364;
  struct __normal_iterator D.249363;
  struct allocator D.212154;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.176656;
  _2 = &__x->D.176656;
  _3 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_2);
  D.212154 = __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<assign_type>::size (__x);
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_1, _4, &D.212154);

  <bb 3> :
  std::allocator<assign_type>::~allocator (&D.212154);
  D.212154 = {CLOBBER};
  _5 = &this->D.176656;
  _6 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.176656._M_impl.D.176001._M_start;
  D.249363 = std::vector<assign_type>::end (__x);
  D.249364 = std::vector<assign_type>::begin (__x);
  D.249367 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const assign_type*, std::vector<assign_type> >, assign_type*, assign_type> (D.249364, D.249363, _7, _6);

  <bb 4> :
  _8 = D.249367;
  this->D.176656._M_impl.D.176001._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<assign_type>::~allocator (&D.212154);
  resx 2

  <bb 6> :
<L1>:
  D.212154 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.176656;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::~_Vector_base (_9);
  resx 5

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI11assign_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=8498, decl_uid=175863, cgraph_uid=5130, symbol_order=5923)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<assign_type>, assign_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<assign_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<assign_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI11assign_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9280, decl_uid=175828, cgraph_uid=5912, symbol_order=6705)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<assign_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<assign_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<assign_type>::allocator (_ZNSaI11assign_typeEC2ERKS0_, funcdef_no=8507, decl_uid=175771, cgraph_uid=5139, symbol_order=5932)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<assign_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<assign_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<assign_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11assign_typeEC2ERKS2_, funcdef_no=9292, decl_uid=175700, cgraph_uid=5924, symbol_order=6717)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<assign_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.175702)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_ZNSt12_Vector_baseI11assign_typeSaIS0_EEC2EmRKS1_, funcdef_no=8500, decl_uid=176088, cgraph_uid=5132, symbol_order=5925)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9282, decl_uid=175993, cgraph_uid=5914, symbol_order=6707)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<assign_type>::allocator (this, __a);
  _1 = &this->D.176001;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_create_storage (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9284, decl_uid=176012, cgraph_uid=5916, symbol_order=6709)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct assign_type * D.249374;

  <bb 2> :
  D.249374 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_allocate (this, __n);
  _1 = D.249374;
  this->_M_impl.D.176001._M_start = _1;
  _2 = this->_M_impl.D.176001._M_start;
  this->_M_impl.D.176001._M_finish = _2;
  _3 = this->_M_impl.D.176001._M_start;
  _4 = __n * 24;
  _5 = _3 + _4;
  this->_M_impl.D.176001._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6271, decl_uid=176048, cgraph_uid=3243, symbol_order=4015)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<assign_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<assign_type>::~allocator (_ZNSaI11assign_typeED2Ev, funcdef_no=7628, decl_uid=175781, cgraph_uid=4260, symbol_order=5049)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<assign_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<assign_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<assign_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI11assign_typeED2Ev, funcdef_no=8476, decl_uid=175710, cgraph_uid=5108, symbol_order=5901)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<assign_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::~_Vector_base (_ZNSt12_Vector_baseI11assign_typeSaIS0_EED2Ev, funcdef_no=7631, decl_uid=176111, cgraph_uid=4263, symbol_order=5052)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.176001._M_end_of_storage;
  _2 = this->_M_impl.D.176001._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.176001._M_start;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::put (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7642, decl_uid=190759, cgraph_uid=4274, symbol_order=5063)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_assign_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_assign_array & v)
{
  bool D.249382;
  struct hash_entry * D.249381;
  unsigned int D.249380;
  bool ins;
  struct hash_entry * e;
  bool D.249378;
  void * D.212164;
  void * D.212163;

  <bb 2> :
  _1 = &this->m_table;
  D.249380 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::hash (k);
  _2 = D.249380;
  D.249381 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.249381;
  D.249382 = hash_map<tree_node*, function_assign_array>::hash_entry::is_empty (e);
  ins = D.249382;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.212163 = &e->m_value;
  D.212164 = operator new (32, D.212163);
  function_assign_array::function_assign_array (D.212164, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_assign_array::operator= (_4, v);

  <bb 5> :
  D.249378 = ~ins;

  <bb 6> :
<L3>:
  return D.249378;

  <bb 7> :
<L4>:
  operator delete (D.212164, D.212163);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8503, decl_uid=190917, cgraph_uid=5135, symbol_order=5928)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.249433;
  bool D.249432;
  bool D.249431;
  bool D.249430;
  bool D.249429;
  bool D.249428;
  struct value_type * D.249427;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.160;
  bool retval.159;
  bool retval.158;
  bool retval.157;
  bool retval.156;
  bool retval.155;
  struct value_type * D.249389;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 40;
  entry = _11 + _13;
  size = this->m_size;
  D.249428 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.155 = D.249428;
  if (retval.155 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.249429 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.156 = D.249429;
  if (retval.156 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 40;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.249430 = hash_map<tree_node*, function_assign_array>::hash_entry::equal (entry, comparable);
  retval.157 = D.249430;
  if (retval.157 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  D.249389 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 40;
  entry = _24 + _26;
  D.249431 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.158 = D.249431;
  if (retval.158 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.249432 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.159 = D.249432;
  if (retval.159 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 40;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.249433 = hash_map<tree_node*, function_assign_array>::hash_entry::equal (entry, comparable);
  retval.160 = D.249433;
  if (retval.160 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 40;
  D.249389 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.249389 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.249389 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 40;
  D.249389 = _37 + _39;

  <bb 27> :
<L37>:
  return D.249389;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9286, decl_uid=190998, cgraph_uid=5921, symbol_order=6714)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.249464;
  unsigned int D.249463;
  bool D.249462;
  bool D.249461;
  struct mem_alloc_description & D.249460;
  struct value_type * D.249459;
  unsigned int D.249458;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.234781;
  void * D.234780;
  struct hash_entry & D.234809;
  bool iftmp.164;
  bool retval.163;
  bool iftmp.162;
  bool retval.161;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 40;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.162 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.162 = 0;

  <bb 6> :
  retval.161 = iftmp.162;
  if (retval.161 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.249458 = hash_table_higher_prime_index (_5);
  nindex = D.249458;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.249459 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.249459;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.249461 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.249461;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.249462 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.249462;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.164 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.164 = 0;

  <bb 15> :
  retval.163 = iftmp.164;
  if (retval.163 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.249463 = hash_map<tree_node*, function_assign_array>::hash_entry::hash (x);
  _16 = D.249463;
  D.249464 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.249464;
  D.234809 = std::move<hash_map<tree_node*, function_assign_array>::hash_entry&> (x);
  D.234780 = q;
  D.234781 = operator new (40, D.234780);
  hash_map<tree_node*, function_assign_array>::hash_entry::hash_entry (D.234781, D.234809);

  <bb 17> :
  p = p + 40;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10004, decl_uid=190893, cgraph_uid=6636, symbol_order=7433)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.249465;

  <bb 2> :
  D.249465 = this->m_size;

  <bb 3> :
<L0>:
  return D.249465;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10005, decl_uid=190895, cgraph_uid=6637, symbol_order=7434)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.249467;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.249467 = _1 - _2;

  <bb 3> :
<L0>:
  return D.249467;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10006, decl_uid=190995, cgraph_uid=6638, symbol_order=7435)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.165;
  bool D.249469;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.165 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.165 = 0;

  <bb 6> :
  D.249469 = iftmp.165;

  <bb 7> :
<L4>:
  return D.249469;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9262, decl_uid=190985, cgraph_uid=5894, symbol_order=6687)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.249491;
  struct value_type * D.249490;
  struct mem_alloc_description & D.249489;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.249487;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.249490 = xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_alloc (n);
  nentries = D.249490;
  goto <bb 6>; [INV]

  <bb 5> :
  D.249491 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_assign_array>::hash_entry> (n);
  nentries = D.249491;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.249487 = nentries;

  <bb 9> :
<L14>:
  return D.249487;

}



;; Function xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=9990, decl_uid=218380, cgraph_uid=6622, symbol_order=7419)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.249494;
  struct hash_entry * D.249492;

  <bb 2> :
  D.249494 = xcalloc (count, 40);
  D.249492 = D.249494;

  <bb 3> :
<L0>:
  return D.249492;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_assign_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=9991, decl_uid=234370, cgraph_uid=6623, symbol_order=7420)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_assign_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.249501;
  struct hash_entry * D.249500;
  struct hash_entry * D.249498;
  bool retval.166;

  <bb 2> :
  retval.166 = need_finalization_p<hash_map<tree_node*, function_assign_array>::hash_entry> ();
  if (retval.166 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 40;
  D.249500 = ggc_internal_cleared_alloc (_1, finalize, 40, c);
  D.249498 = D.249500;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 40;
  D.249501 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.249498 = D.249501;

  <bb 5> :
<L2>:
  return D.249498;

}



;; Function finalize<hash_map<tree_node*, function_assign_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10526, decl_uid=241790, cgraph_uid=7161, symbol_order=7958)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_assign_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_assign_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10528, decl_uid=245275, cgraph_uid=7159, symbol_order=7956)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_assign_array::~function_assign_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_assign_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10525, decl_uid=241789, cgraph_uid=7157, symbol_order=7954)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_assign_array>::hash_entry> ()
{
  bool D.249502;

  <bb 2> :
  D.249502 = 1;

  <bb 3> :
<L0>:
  return D.249502;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10008, decl_uid=190818, cgraph_uid=6640, symbol_order=7437)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_assign_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.249506;
  hashval_t D.249504;

  <bb 2> :
  _1 = &e->m_key;
  D.249506 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::hash (_1);
  D.249504 = D.249506;

  <bb 3> :
<L0>:
  return D.249504;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10007, decl_uid=190988, cgraph_uid=6639, symbol_order=7436)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.249519;
  bool D.249518;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.168;
  struct value_type * D.249510;
  bool retval.167;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 40;
  slot = _2 + _4;
  D.249518 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.167 = D.249518;
  if (retval.167 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.249510 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 40;
  slot = _8 + _10;
  D.249519 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.168 = D.249519;
  if (retval.168 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.249510 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.249510;

}



;; Function std::move<hash_map<tree_node*, function_assign_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10009, decl_uid=234778, cgraph_uid=6641, symbol_order=7438)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_assign_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.249520;

  <bb 2> :
  D.249520 = __t;

  <bb 3> :
<L0>:
  return D.249520;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9288, decl_uid=234803, cgraph_uid=5919, symbol_order=6712)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.234805)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.234805->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.234805->m_value;
  function_assign_array::function_assign_array (_2, _3);
  return;

}



;; Function function_assign_array::function_assign_array (_ZN21function_assign_arrayC2EOS_, funcdef_no=6290, decl_uid=190547, cgraph_uid=3265, symbol_order=4037)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_assign_array::function_assign_array (struct function_assign_array * const this, struct function_assign_array & D.190549)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.190549->pass;
  this->pass = _1;
  _2 = &this->assign_type_array;
  _3 = &D.190549->assign_type_array;
  std::vector<assign_type>::vector (_2, _3);
  return;

}



;; Function std::vector<assign_type>::vector (_ZNSt6vectorI11assign_typeSaIS0_EEC2EOS2_, funcdef_no=6288, decl_uid=176613, cgraph_uid=3262, symbol_order=4034)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::vector (struct vector * const this, struct vector & D.176615)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.176656;
  _2 = &D.176615->D.176656;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_ZNSt12_Vector_baseI11assign_typeSaIS0_EEC2EOS2_, funcdef_no=6286, decl_uid=176081, cgraph_uid=3259, symbol_order=4031)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.176083)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.176083->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=7644, decl_uid=175987, cgraph_uid=4276, symbol_order=5065)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl&> (__x);
  std::allocator<assign_type>::allocator (this, _1);
  _2 = &this->D.176001;
  _3 = std::move<std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.176001;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI11assign_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=8505, decl_uid=212172, cgraph_uid=5137, symbol_order=5930)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.249522;

  <bb 2> :
  D.249522 = __t;

  <bb 3> :
<L0>:
  return D.249522;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=8510, decl_uid=175943, cgraph_uid=5142, symbol_order=5935)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8959, decl_uid=218382, cgraph_uid=5591, symbol_order=6384)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9290, decl_uid=191006, cgraph_uid=5922, symbol_order=6715)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_assign_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10010, decl_uid=190830, cgraph_uid=6642, symbol_order=7439)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::mark_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::mark_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10537, decl_uid=241866, cgraph_uid=7169, symbol_order=7966)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::mark_empty<hash_map<tree_node*, function_assign_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function pointer_hash<tree_node>::mark_empty (_ZN12pointer_hashI9tree_nodeE10mark_emptyERPS0_, funcdef_no=10856, decl_uid=85306, cgraph_uid=7488, symbol_order=8287)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void pointer_hash<tree_node>::mark_empty (union tree_node * & e)
{
  <bb 2> :
  *e = 0B;
  return;

}



;; Function function_assign_array::function_assign_array (_ZN21function_assign_arrayC2ERKS_, funcdef_no=6294, decl_uid=190538, cgraph_uid=3269, symbol_order=4041)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_assign_array::function_assign_array (struct function_assign_array * const this, const struct function_assign_array & D.190540)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.190540->pass;
  this->pass = _1;
  _2 = &this->assign_type_array;
  _3 = &D.190540->assign_type_array;
  std::vector<assign_type>::vector (_2, _3);
  return;

}



;; Function operator delete (_ZdlPvS_, funcdef_no=17, decl_uid=3708, cgraph_uid=18, symbol_order=17)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void operator delete (void * D.3706, void * D.3707)
{
  <bb 2> :
  return;

}



;; Function std::vector<assign_type>::~vector (_ZNSt6vectorI11assign_typeSaIS0_EED2Ev, funcdef_no=7634, decl_uid=176653, cgraph_uid=4266, symbol_order=5055)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.176656;
  _2 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.176656._M_impl.D.176001._M_finish;
  _4 = this->D.176656._M_impl.D.176001._M_start;
  std::_Destroy<assign_type*, assign_type> (_4, _3, _2);
  _5 = &this->D.176656;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function function_assign_array::~function_assign_array (_ZN21function_assign_arrayD2Ev, funcdef_no=6280, decl_uid=190705, cgraph_uid=3255, symbol_order=4027)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_assign_array::~function_assign_array (struct function_assign_array * const this)
{
  <bb 2> :
  _1 = &this->assign_type_array;
  std::vector<assign_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function get_function_varstmt (_Z20get_function_varstmtP9tree_nodeS0_, funcdef_no=6292, decl_uid=191163, cgraph_uid=3271, symbol_order=4043)

Merging blocks 4 and 18
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 12 11
;; 2 succs { 21 3 }
;; 3 succs { 4 5 }
;; 4 succs { 18 }
;; 5 succs { 21 6 }
;; 6 succs { 21 7 }
;; 7 succs { 20 8 }
;; 8 succs { 19 9 }
;; 9 succs { 19 10 }
;; 10 succs { 14 }
;; 11 succs { 19 12 }
;; 12 succs { 19 13 }
;; 13 succs { 14 }
;; 14 succs { 11 15 }
;; 15 succs { 19 16 }
;; 16 succs { 19 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { }
void get_function_varstmt (union tree_node * function_tree, union tree_node * vartree)
{
  struct function_assign_array * D.249531;
  struct function_assign_array * D.249530;
  int i;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  bool retval.176;
  bool retval.169;

  <bb 2> :
  function_assign_collect.170_1 = function_assign_collect;
  D.249530 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.170_1, &function_tree);

  <bb 3> :
  _2 = D.249530;
  retval.169 = _2 == 0B;
  if (retval.169 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  goto <bb 18>; [INV]

  <bb 5> :
  function_assign_collect.171_3 = function_assign_collect;
  D.249531 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.171_3, &function_tree);

  <bb 6> :
  _4 = D.249531;
  function_assign_array::function_assign_array (&assign_array, _4);

  <bb 7> :
  std::vector<assign_type>::vector (&assign_type_array, &assign_array.assign_type_array);

  <bb 8> :
  _5 = std::vector<assign_type>::size (&assign_type_array);
  function_tree.172_6 = function_tree;
  stderr.173_7 = stderr;
  fprintf (stderr.173_7, "=======print_function_var %d   %d========\n", function_tree.172_6, _5);

  <bb 9> :
  stderr.174_8 = stderr;
  __builtin_fwrite ("[\n", 1, 2, stderr.174_8);

  <bb 10> :
  i = 0;
  goto <bb 14>; [INV]

  <bb 11> :
  _9 = (long unsigned int) i;
  _10 = std::vector<assign_type>::operator[] (&assign_type_array, _9);
  _11 = _10->stmt;
  debug (_11);

  <bb 12> :
  stderr.175_12 = stderr;
  __builtin_fwrite (",\n", 1, 2, stderr.175_12);

  <bb 13> :
  i = i + 1;

  <bb 14> :
  _13 = (long unsigned int) i;
  _14 = std::vector<assign_type>::size (&assign_type_array);
  retval.176 = _13 < _14;
  if (retval.176 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  stderr.177_15 = stderr;
  __builtin_fwrite ("GIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGN CALLLLLLLLLLLLLLLLLLLLLLL\n", 1, 196, stderr.177_15);

  <bb 16> :
  stderr.178_16 = stderr;
  __builtin_fwrite ("]\n", 1, 2, stderr.178_16);

  <bb 17> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};

  <bb 18> :
<L7>:
  return;

  <bb 19> :
<L8>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 3

  <bb 20> :
<L9>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 2

  <bb 21> :
<L10>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  resx 1

}



;; Function std::vector<assign_type>::operator[] (_ZNSt6vectorI11assign_typeSaIS0_EEixEm, funcdef_no=7647, decl_uid=176309, cgraph_uid=4279, symbol_order=5068)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<assign_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.249537;

  <bb 2> :
  _1 = this->D.176656._M_impl.D.176001._M_start;
  _2 = __n * 24;
  D.249537 = _1 + _2;

  <bb 3> :
<L0>:
  return D.249537;

}



;; Function get_function_specialstmt (_Z24get_function_specialstmtP9tree_nodeS0_, funcdef_no=6296, decl_uid=191179, cgraph_uid=3272, symbol_order=4044)

Merging blocks 4 and 18
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 12 11
;; 2 succs { 21 3 }
;; 3 succs { 4 5 }
;; 4 succs { 18 }
;; 5 succs { 21 6 }
;; 6 succs { 21 7 }
;; 7 succs { 20 8 }
;; 8 succs { 19 9 }
;; 9 succs { 19 10 }
;; 10 succs { 14 }
;; 11 succs { 19 12 }
;; 12 succs { 19 13 }
;; 13 succs { 14 }
;; 14 succs { 11 15 }
;; 15 succs { 19 16 }
;; 16 succs { 19 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { }
void get_function_specialstmt (union tree_node * function_tree, union tree_node * vartree)
{
  struct function_return_array * D.249545;
  struct function_return_array * D.249544;
  int i;
  struct vector ret_type_array;
  struct function_return_array fun_array;
  bool retval.186;
  bool retval.179;

  <bb 2> :
  function_return_collect.180_1 = function_return_collect;
  D.249544 = hash_map<tree_node*, function_return_array>::get (function_return_collect.180_1, &function_tree);

  <bb 3> :
  _2 = D.249544;
  retval.179 = _2 == 0B;
  if (retval.179 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  goto <bb 18>; [INV]

  <bb 5> :
  function_return_collect.181_3 = function_return_collect;
  D.249545 = hash_map<tree_node*, function_return_array>::get (function_return_collect.181_3, &function_tree);

  <bb 6> :
  _4 = D.249545;
  function_return_array::function_return_array (&fun_array, _4);

  <bb 7> :
  std::vector<return_type>::vector (&ret_type_array, &fun_array.return_type_array);

  <bb 8> :
  _5 = std::vector<return_type>::size (&ret_type_array);
  function_tree.182_6 = function_tree;
  stderr.183_7 = stderr;
  fprintf (stderr.183_7, "=======print_function_return %d   %d========\n", function_tree.182_6, _5);

  <bb 9> :
  stderr.184_8 = stderr;
  __builtin_fwrite ("[\n", 1, 2, stderr.184_8);

  <bb 10> :
  i = 0;
  goto <bb 14>; [INV]

  <bb 11> :
  _9 = (long unsigned int) i;
  _10 = std::vector<return_type>::operator[] (&ret_type_array, _9);
  _11 = _10->stmt;
  debug (_11);

  <bb 12> :
  stderr.185_12 = stderr;
  __builtin_fwrite (",\n", 1, 2, stderr.185_12);

  <bb 13> :
  i = i + 1;

  <bb 14> :
  _13 = (long unsigned int) i;
  _14 = std::vector<return_type>::size (&ret_type_array);
  retval.186 = _13 < _14;
  if (retval.186 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  stderr.187_15 = stderr;
  __builtin_fwrite ("GIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGNGIMPLE_ASSIGN CALLLLLLLLLLLLLLLLLLLLLLL\n", 1, 196, stderr.187_15);

  <bb 16> :
  stderr.188_16 = stderr;
  __builtin_fwrite ("]\n", 1, 2, stderr.188_16);

  <bb 17> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};

  <bb 18> :
<L7>:
  return;

  <bb 19> :
<L8>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 3

  <bb 20> :
<L9>:
  function_return_array::~function_return_array (&fun_array);
  resx 2

  <bb 21> :
<L10>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  resx 1

}



;; Function trace_fucntion_relate_stmt (_Z26trace_fucntion_relate_stmtP11cgraph_nodeP9tree_nodeS2_, funcdef_no=6297, decl_uid=187065, cgraph_uid=3293, symbol_order=4071)

Removing basic block 24
Removing basic block 25
Removing basic block 26
Removing basic block 62
Removing basic block 63
Removing basic block 64
Removing basic block 113
Removing basic block 114
Removing basic block 115
Removing basic block 116
Removing basic block 118
Removing basic block 122
Removing basic block 123
Removing basic block 124
Removing basic block 125
Removing basic block 126
Removing basic block 127
Removing basic block 136
Removing basic block 137
Removing basic block 149
Removing basic block 150
Removing basic block 160
Removing basic block 165
Removing basic block 168
Removing basic block 190
Removing basic block 200
Removing basic block 201
Removing basic block 202
Removing basic block 203
Removing basic block 204
Removing basic block 230
Removing basic block 231
Removing basic block 232
Removing basic block 259
Removing basic block 260
Removing basic block 261
Removing basic block 262
Removing basic block 263
Removing basic block 264
Removing basic block 299
Removing basic block 304
Removing basic block 307
Removing basic block 328
Removing basic block 334
Removing basic block 335
Removing basic block 336
Removing basic block 337
Removing basic block 338
Removing basic block 339
Removing basic block 340
Removing basic block 349
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 1
;;  header 308, latch 307
;;  depth 1, outer 0
;;  nodes
;;
;; Loop 2
;;  header 294, latch 293
;;  depth 2, outer 1
;;  nodes
;;
;; Loop 3
;;  header 292, latch 291
;;  depth 3, outer 2
;;  nodes: 292 291 66 81 106 107 109 118 125 129 201 226 250 228 180 225 203 215 205 200 227 235 246 255 252 245 231 290 229 285 289 288 287 286 256 284 283 282 281 280 279 278 277 276 265 268 275 269 274 273 272 271 270 266 257 267 259 264 260 263 262 261 258 230 243 244 242 241 240 239 238 237 236 251 249 248 247 254 253 234 233 232 186 188 187 189 199 198 197 196 195 194 193 192 191 190 183 185 184 182 181 204 213 214 206 209 212 211 210 208 207 202 224 223 222 221 220 219 218 217 216 178 179 177 176 175 25 26 30 28 39 42 37 174 173 172 171 165 170 169 168 167 166 135 134 133 132 131 130 44 117 78 115 76 110 86 92 89 77 75 128 120 119 112 111 73 71 72 68 70 69 67 65 63 64 60 62 61 59 47 58 49 52 51 50 48 57 56 55 54 53 46 45 127 126 124 123 122 121 74 88 87 91 90 84 85 82 83 80 79 108 96 99 105 101 103 102 100 104 98 97 95 94 93 114 113 116 43 164 163 162 161 160 159 158 157 156 155 144 147 154 148 153 152 151 150 149 145 136 146 138 143 139 142 141 140 137 35 36 34 33 32 31 41 40 38 27 29 24 18 23 21 22 20 19
;; 2 succs { 3 4 }
;; 3 succs { 310 }
;; 4 succs { 308 }
;; 5 succs { 6 7 }
;; 6 succs { 307 }
;; 7 succs { 8 306 }
;; 8 succs { 315 9 }
;; 9 succs { 315 10 }
;; 10 succs { 315 11 }
;; 11 succs { 315 12 }
;; 12 succs { 315 13 }
;; 13 succs { 294 }
;; 14 succs { 16 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 292 }
;; 18 succs { 19 24 }
;; 19 succs { 311 20 }
;; 20 succs { 311 21 }
;; 21 succs { 22 24 }
;; 22 succs { 23 24 }
;; 23 succs { 311 24 }
;; 24 succs { 25 226 }
;; 25 succs { 26 175 }
;; 26 succs { 27 175 }
;; 27 succs { 29 28 }
;; 28 succs { 29 175 }
;; 29 succs { 311 30 }
;; 30 succs { 31 175 }
;; 31 succs { 311 32 }
;; 32 succs { 35 33 }
;; 33 succs { 311 34 }
;; 34 succs { 35 36 }
;; 35 succs { 37 }
;; 36 succs { 37 }
;; 37 succs { 38 175 }
;; 38 succs { 311 39 }
;; 39 succs { 40 175 }
;; 40 succs { 311 41 }
;; 41 succs { 311 42 }
;; 42 succs { 43 175 }
;; 43 succs { 311 44 }
;; 44 succs { 45 130 }
;; 45 succs { 311 46 }
;; 46 succs { 311 47 }
;; 47 succs { 48 59 }
;; 48 succs { 311 49 }
;; 49 succs { 50 59 }
;; 50 succs { 311 51 }
;; 51 succs { 311 52 }
;; 52 succs { 53 59 }
;; 53 succs { 311 54 }
;; 54 succs { 311 55 }
;; 55 succs { 311 56 }
;; 56 succs { 311 57 }
;; 57 succs { 311 58 }
;; 58 succs { 311 59 }
;; 59 succs { 311 60 }
;; 60 succs { 61 64 }
;; 61 succs { 311 62 }
;; 62 succs { 63 64 }
;; 63 succs { 65 }
;; 64 succs { 65 }
;; 65 succs { 66 67 }
;; 66 succs { 291 }
;; 67 succs { 311 68 }
;; 68 succs { 69 72 }
;; 69 succs { 311 70 }
;; 70 succs { 71 72 }
;; 71 succs { 73 }
;; 72 succs { 73 }
;; 73 succs { 74 111 }
;; 74 succs { 311 75 }
;; 75 succs { 76 130 }
;; 76 succs { 77 130 }
;; 77 succs { 78 130 }
;; 78 succs { 79 130 }
;; 79 succs { 81 80 }
;; 80 succs { 81 82 }
;; 81 succs { 291 }
;; 82 succs { 83 85 }
;; 83 succs { 84 85 }
;; 84 succs { 86 }
;; 85 succs { 86 }
;; 86 succs { 87 130 }
;; 87 succs { 311 88 }
;; 88 succs { 311 89 }
;; 89 succs { 90 130 }
;; 90 succs { 311 91 }
;; 91 succs { 311 92 }
;; 92 succs { 93 130 }
;; 93 succs { 94 109 }
;; 94 succs { 95 109 }
;; 95 succs { 311 96 }
;; 96 succs { 97 108 }
;; 97 succs { 311 98 }
;; 98 succs { 99 107 }
;; 99 succs { 100 108 }
;; 100 succs { 311 101 }
;; 101 succs { 102 108 }
;; 102 succs { 311 103 }
;; 103 succs { 104 108 }
;; 104 succs { 311 105 }
;; 105 succs { 106 108 }
;; 106 succs { 291 }
;; 107 succs { 291 }
;; 108 succs { 110 }
;; 109 succs { 291 }
;; 110 succs { 130 }
;; 111 succs { 311 112 }
;; 112 succs { 113 119 }
;; 113 succs { 311 114 }
;; 114 succs { 311 115 }
;; 115 succs { 116 130 }
;; 116 succs { 311 117 }
;; 117 succs { 118 130 }
;; 118 succs { 291 }
;; 119 succs { 311 120 }
;; 120 succs { 121 130 }
;; 121 succs { 311 122 }
;; 122 succs { 311 123 }
;; 123 succs { 125 124 }
;; 124 succs { 125 126 }
;; 125 succs { 291 }
;; 126 succs { 311 127 }
;; 127 succs { 311 128 }
;; 128 succs { 129 130 }
;; 129 succs { 291 }
;; 130 succs { 311 131 }
;; 131 succs { 311 132 }
;; 132 succs { 311 133 }
;; 133 succs { 311 134 }
;; 134 succs { 311 135 }
;; 135 succs { 136 166 }
;; 136 succs { 137 145 }
;; 137 succs { 138 139 }
;; 138 succs { 311 144 }
;; 139 succs { 140 143 }
;; 140 succs { 311 141 }
;; 141 succs { 311 142 }
;; 142 succs { 311 143 }
;; 143 succs { 311 144 }
;; 144 succs { 311 155 }
;; 145 succs { 146 148 }
;; 146 succs { 311 147 }
;; 147 succs { 155 }
;; 148 succs { 149 154 }
;; 149 succs { 311 150 }
;; 150 succs { 311 151 }
;; 151 succs { 311 152 }
;; 152 succs { 311 153 }
;; 153 succs { 154 }
;; 154 succs { 311 155 }
;; 155 succs { 311 156 }
;; 156 succs { 311 157 }
;; 157 succs { 311 158 }
;; 158 succs { 311 159 }
;; 159 succs { 311 160 }
;; 160 succs { 311 161 }
;; 161 succs { 311 162 }
;; 162 succs { 311 163 }
;; 163 succs { 311 164 }
;; 164 succs { 311 165 }
;; 165 succs { 311 171 }
;; 166 succs { 311 167 }
;; 167 succs { 311 168 }
;; 168 succs { 311 169 }
;; 169 succs { 311 170 }
;; 170 succs { 311 171 }
;; 171 succs { 311 172 }
;; 172 succs { 311 173 }
;; 173 succs { 311 174 }
;; 174 succs { 311 175 }
;; 175 succs { 311 176 }
;; 176 succs { 178 177 }
;; 177 succs { 178 179 }
;; 178 succs { 180 }
;; 179 succs { 180 }
;; 180 succs { 181 291 }
;; 181 succs { 311 182 }
;; 182 succs { 311 183 }
;; 183 succs { 184 186 }
;; 184 succs { 311 185 }
;; 185 succs { 186 }
;; 186 succs { 187 200 }
;; 187 succs { 188 200 }
;; 188 succs { 189 200 }
;; 189 succs { 190 200 }
;; 190 succs { 311 191 }
;; 191 succs { 311 192 }
;; 192 succs { 311 193 }
;; 193 succs { 311 194 }
;; 194 succs { 311 195 }
;; 195 succs { 311 196 }
;; 196 succs { 311 197 }
;; 197 succs { 311 198 }
;; 198 succs { 311 199 }
;; 199 succs { 311 200 }
;; 200 succs { 201 291 }
;; 201 succs { 202 291 }
;; 202 succs { 311 203 }
;; 203 succs { 204 291 }
;; 204 succs { 311 205 }
;; 205 succs { 206 291 }
;; 206 succs { 207 214 }
;; 207 succs { 311 208 }
;; 208 succs { 311 209 }
;; 209 succs { 210 214 }
;; 210 succs { 311 211 }
;; 211 succs { 311 212 }
;; 212 succs { 213 214 }
;; 213 succs { 215 }
;; 214 succs { 215 }
;; 215 succs { 216 291 }
;; 216 succs { 311 217 }
;; 217 succs { 311 218 }
;; 218 succs { 311 219 }
;; 219 succs { 311 220 }
;; 220 succs { 311 221 }
;; 221 succs { 311 222 }
;; 222 succs { 311 223 }
;; 223 succs { 311 224 }
;; 224 succs { 311 225 }
;; 225 succs { 311 291 }
;; 226 succs { 227 291 }
;; 227 succs { 228 291 }
;; 228 succs { 229 291 }
;; 229 succs { 230 291 }
;; 230 succs { 311 231 }
;; 231 succs { 232 291 }
;; 232 succs { 311 233 }
;; 233 succs { 311 234 }
;; 234 succs { 311 235 }
;; 235 succs { 236 291 }
;; 236 succs { 311 237 }
;; 237 succs { 243 238 }
;; 238 succs { 311 239 }
;; 239 succs { 243 240 }
;; 240 succs { 311 241 }
;; 241 succs { 311 242 }
;; 242 succs { 243 244 }
;; 243 succs { 245 }
;; 244 succs { 245 }
;; 245 succs { 246 291 }
;; 246 succs { 247 291 }
;; 247 succs { 250 248 }
;; 248 succs { 250 249 }
;; 249 succs { 250 251 }
;; 250 succs { 291 }
;; 251 succs { 311 252 }
;; 252 succs { 253 291 }
;; 253 succs { 311 254 }
;; 254 succs { 311 255 }
;; 255 succs { 256 291 }
;; 256 succs { 257 286 }
;; 257 succs { 258 266 }
;; 258 succs { 259 260 }
;; 259 succs { 311 265 }
;; 260 succs { 261 264 }
;; 261 succs { 311 262 }
;; 262 succs { 311 263 }
;; 263 succs { 311 264 }
;; 264 succs { 311 265 }
;; 265 succs { 311 276 }
;; 266 succs { 267 269 }
;; 267 succs { 311 268 }
;; 268 succs { 276 }
;; 269 succs { 270 275 }
;; 270 succs { 311 271 }
;; 271 succs { 311 272 }
;; 272 succs { 311 273 }
;; 273 succs { 311 274 }
;; 274 succs { 275 }
;; 275 succs { 311 276 }
;; 276 succs { 311 277 }
;; 277 succs { 311 278 }
;; 278 succs { 311 279 }
;; 279 succs { 311 280 }
;; 280 succs { 311 281 }
;; 281 succs { 311 282 }
;; 282 succs { 311 283 }
;; 283 succs { 311 284 }
;; 284 succs { 311 285 }
;; 285 succs { 311 290 }
;; 286 succs { 311 287 }
;; 287 succs { 311 288 }
;; 288 succs { 311 289 }
;; 289 succs { 311 290 }
;; 290 succs { 291 }
;; 291 succs { 292 }
;; 292 succs { 18 293 }
;; 293 succs { 294 }
;; 294 succs { 14 295 }
;; 295 succs { 296 305 }
;; 296 succs { 312 297 }
;; 297 succs { 298 299 }
;; 298 succs { 312 302 }
;; 299 succs { 312 300 }
;; 300 succs { 312 301 }
;; 301 succs { 312 302 }
;; 302 succs { 312 303 }
;; 303 succs { 312 304 }
;; 304 succs { 305 }
;; 305 succs { 306 }
;; 306 succs { 307 }
;; 307 succs { 308 }
;; 308 succs { 5 309 }
;; 309 succs { 310 }
;; 310 succs { 1 }
;; 311 succs { 315 }
;; 312 succs { 313 }
;; 313 succs { 314 }
;; 314 succs { 315 }
;; 315 succs { }
void trace_fucntion_relate_stmt (struct cgraph_node * node, union tree_node * function_tree, union tree_node * mallocStmt_tree)
{
  struct cgraph_node * D.249931;
  struct function_relate_array * D.249926;
  struct function_relate_array * D.249925;
  union tree_node * D.249923;
  union tree_node * D.249922;
  const char * D.249921;
  bool D.249920;
  union tree_node * D.249919;
  union tree_node * D.249918;
  const char * D.249917;
  union tree_node * D.249916;
  union tree_node * D.249915;
  union tree_node * D.249914;
  union tree_node * D.249913;
  const char * D.249912;
  union tree_node * D.249911;
  unsigned int D.249910;
  union tree_node * D.249909;
  const char * D.249908;
  bool D.249907;
  union tree_node * D.249906;
  bool D.249905;
  union tree_node * D.249904;
  union tree_node * D.249903;
  union tree_node * D.249902;
  union tree_node * D.249901;
  const char * D.249900;
  union tree_node * D.249899;
  union tree_node * D.249898;
  union tree_node * D.249897;
  union tree_node * D.249896;
  union tree_node * D.249895;
  union tree_node * D.249894;
  const char * D.249893;
  const char * D.249892;
  union tree_node * D.249891;
  const char * D.249890;
  bool D.249889;
  union tree_node * D.249888;
  union tree_node * D.249887;
  union tree_node * D.249886;
  union tree_node * D.249885;
  union tree_node * D.249884;
  bool D.249883;
  union tree_node * D.249882;
  union tree_node * D.249881;
  bool D.249880;
  union tree_node * D.249879;
  union tree_node * D.249878;
  union tree_node * D.249877;
  union tree_node * D.249876;
  const char * D.249875;
  union tree_node * D.249874;
  const char * D.249873;
  union tree_node * D.249872;
  union tree_node * D.249871;
  union tree_node * D.249870;
  union tree_node * D.249869;
  union tree_node * D.249868;
  union tree_node * D.249867;
  union tree_node * D.249866;
  bool D.249865;
  union tree_node * D.249864;
  union tree_node * D.249863;
  bool D.249862;
  union tree_node * D.249861;
  union tree_node * D.249860;
  bool D.249859;
  union tree_node * D.249858;
  union tree_node * D.249857;
  union tree_node * D.249856;
  union tree_node * D.249855;
  union tree_node * D.249854;
  const char * D.249853;
  union tree_node * D.249852;
  const char * D.249851;
  const char * D.249850;
  struct function * D.249849;
  struct cgraph_node * D.249848;
  struct relate_type relate_type;
  long unsigned int x;
  struct pt_solution * pt2;
  const char * name;
  struct pt_solution * pt1;
  struct ptr_info_def * pi4;
  struct ptr_info_def * pi3;
  struct ptr_info_def * pi2;
  struct ptr_info_def * pi1;
  struct gimple * def_stmt;
  union tree_node * second;
  struct pt_solution * pt4;
  struct pt_solution * pt3;
  struct pt_solution * pt2;
  struct pt_solution * pt1;
  struct gimple * def_stmt2;
  struct gimple * def_stmt;
  union tree_node * first;
  long unsigned int x;
  struct pt_solution * pt2;
  struct pt_solution * pt1;
  struct ptr_info_def * pi4;
  struct ptr_info_def * pi3;
  struct ptr_info_def * pi2;
  struct ptr_info_def * pi1;
  const char * name;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct function_relate_array fun_array;
  struct vector relate_type_array;
  int seccount;
  int fucntion_level;
  union tree_node * t;
  struct basic_block_def * bb;
  struct cgraph_edge * e;
  bool retval.340;
  bool retval.337;
  bool retval.308;
  bool iftmp.307;
  bool retval.306;
  bool retval.305;
  bool retval.304;
  bool retval.300;
  bool iftmp.291;
  bool retval.290;
  bool retval.289;
  bool retval.279;
  bool iftmp.277;
  bool retval.276;
  bool retval.240;
  bool retval.239;
  bool retval.238;
  bool retval.236;
  bool retval.235;
  bool retval.233;
  bool retval.232;
  bool retval.231;
  bool retval.230;
  bool retval.229;
  bool retval.228;
  bool retval.227;
  bool iftmp.226;
  bool retval.225;
  bool iftmp.222;
  bool retval.221;
  bool iftmp.220;
  bool retval.219;
  bool retval.213;
  bool retval.212;
  bool retval.210;
  bool retval.209;
  bool retval.207;
  bool iftmp.206;
  bool retval.205;
  bool retval.204;
  bool retval.199;
  bool retval.198;

  <bb 2> :
  if (node == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 310>; [INV]

  <bb 4> :
  symtab.189_1 = symtab;
  D.249848 = symbol_table::first_defined_function (symtab.189_1);
  node = D.249848;
  goto <bb 308>; [INV]

  <bb 5> :
  fucntion_level = 0;
  D.249849 = cgraph_node::get_fun (node);
  _2 = D.249849;
  push_cfun (_2);
  cfun.190_3 = cfun;
  if (cfun.190_3 == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  pop_cfun ();
  // predicted unlikely by continue predictor.
  goto <bb 307>; [INV]

  <bb 7> :
  cfun.191_4 = cfun;
  _5 = cfun.191_4->decl;
  if (function_tree == _5)
    goto <bb 8>; [INV]
  else
    goto <bb 306>; [INV]

  <bb 8> :
  now_relatelaststmt = 0B;
  calculate_dominance_info (1);

  <bb 9> :
  D.249850 = get_name (function_tree);

  <bb 10> :
  _6 = D.249850;
  stderr.192_7 = stderr;
  fprintf (stderr.192_7, "\x1b[40;36m ======= node_fun:%s========= \x1b[0m\n", _6);

  <bb 11> :
  mallocStmt_tree.193_8 = mallocStmt_tree;
  D.249851 = get_name (mallocStmt_tree.193_8);

  <bb 12> :
  _9 = D.249851;
  stderr.194_10 = stderr;
  fprintf (stderr.194_10, "\x1b[40;36m ======= find relate stmt with %s ========= \x1b[0m\n", _9);

  <bb 13> :
  seccount = 0;
  cfun.195_11 = cfun;
  _12 = cfun.195_11->cfg;
  _13 = _12->x_entry_block_ptr;
  bb = _13->next_bb;
  goto <bb 294>; [INV]

  <bb 14> :
  tracerelatestmt.196_14 = tracerelatestmt;
  _15 = ~tracerelatestmt.196_14;
  if (_15 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  freemod.197_16 = freemod;
  _17 = ~freemod.197_16;
  if (_17 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  fistconunt = 0;

  <bb 17> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 292>; [INV]

  <bb 18> :
  gc = gsi_stmt (gsi);
  retval.198 = is_gimple_call (gc);
  if (retval.198 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 19> :
  D.249852 = gimple_call_fn (gc);

  <bb 20> :
  _18 = D.249852;
  D.249853 = get_name (_18);

  <bb 21> :
  name = D.249853;
  if (name != 0B)
    goto <bb 22>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 22> :
  _19 = strcmp (name, "pthread_exit");
  if (_19 == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  debug_gimple_stmt (gc);

  <bb 24> :
  retval.199 = is_gimple_assign (gc);
  if (retval.199 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 226>; [INV]

  <bb 25> :
  mallocStmt_tree.200_20 = mallocStmt_tree;
  pi1 = mallocStmt_tree.200_20->ssa_name.info.ptr_info;
  pt1 = &pi1->pt;
  if (pt1 != 0B)
    goto <bb 26>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 26> :
  relatemod.201_21 = relatemod;
  if (relatemod.201_21 != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 27> :
  mallocStmt_tree.202_22 = mallocStmt_tree;
  _23 = mallocStmt_tree.202_22->base.code;
  if (_23 == 153)
    goto <bb 29>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 28> :
  mallocStmt_tree.203_24 = mallocStmt_tree;
  _25 = mallocStmt_tree.203_24->base.code;
  if (_25 == 36)
    goto <bb 29>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 29> :
  D.249854 = gimple_assign_lhs (gc);

  <bb 30> :
  _26 = D.249854;
  retval.204 = _26 != 0B;
  if (retval.204 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 31> :
  D.249855 = gimple_assign_lhs (gc);

  <bb 32> :
  _27 = D.249855;
  _28 = _27->base.code;
  if (_28 == 153)
    goto <bb 35>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 33> :
  D.249856 = gimple_assign_lhs (gc);

  <bb 34> :
  _29 = D.249856;
  _30 = _29->base.code;
  if (_30 == 165)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  iftmp.206 = 1;
  goto <bb 37>; [INV]

  <bb 36> :
  iftmp.206 = 0;

  <bb 37> :
  retval.205 = iftmp.206;
  if (retval.205 != 0)
    goto <bb 38>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 38> :
  D.249857 = gimple_assign_lhs (gc);

  <bb 39> :
  _31 = D.249857;
  pi2 = _31->ssa_name.info.ptr_info;
  pt2 = &pi2->pt;
  if (pt2 != 0B)
    goto <bb 40>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 40> :
  D.249858 = gimple_assign_lhs (gc);

  <bb 41> :
  _32 = D.249858;
  mallocStmt_tree.208_33 = mallocStmt_tree;
  D.249859 = ptr_derefs_may_alias_p (mallocStmt_tree.208_33, _32);

  <bb 42> :
  retval.207 = D.249859;
  if (retval.207 != 0)
    goto <bb 43>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 43> :
  D.249860 = gimple_assign_rhs1 (gc);

  <bb 44> :
  _34 = D.249860;
  retval.209 = _34 != 0B;
  if (retval.209 != 0)
    goto <bb 45>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 45> :
  D.249861 = gimple_assign_lhs (gc);

  <bb 46> :
  _35 = D.249861;
  mallocStmt_tree.211_36 = mallocStmt_tree;
  D.249862 = ptr_derefs_may_alias_p (mallocStmt_tree.211_36, _35);

  <bb 47> :
  retval.210 = D.249862;
  if (retval.210 != 0)
    goto <bb 48>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 48> :
  D.249863 = gimple_assign_lhs (gc);

  <bb 49> :
  _37 = D.249863;
  _38 = _37->base.code;
  retval.212 = _38 == 131;
  if (retval.212 != 0)
    goto <bb 50>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 50> :
  D.249864 = gimple_assign_rhs1 (gc);

  <bb 51> :
  _39 = D.249864;
  mallocStmt_tree.214_40 = mallocStmt_tree;
  D.249865 = ptr_derefs_may_alias_p (mallocStmt_tree.214_40, _39);

  <bb 52> :
  retval.213 = D.249865;
  if (retval.213 != 0)
    goto <bb 53>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 53> :
  D.249866 = gimple_assign_rhs1 (gc);

  <bb 54> :
  _41 = D.249866;
  debug_tree (_41);

  <bb 55> :
  stderr.215_42 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.215_42);

  <bb 56> :
  stderr.216_43 = stderr;
  __builtin_fwrite ("\x1b[40;35m this pointer possible  reference other address (rhs)\x1b[0m\n", 1, 66, stderr.216_43);

  <bb 57> :
  stderr.217_44 = stderr;
  __builtin_fwrite ("\x1b[40;35m or assign other value \x1b[0m\n", 1, 36, stderr.217_44);

  <bb 58> :
  stderr.218_45 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.218_45);

  <bb 59> :
  D.249867 = gimple_assign_lhs (gc);

  <bb 60> :
  _46 = D.249867;
  _47 = _46->base.code;
  if (_47 == 153)
    goto <bb 61>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 61> :
  D.249868 = gimple_assign_rhs1 (gc);

  <bb 62> :
  _48 = D.249868;
  _49 = _48->base.code;
  if (_49 == 26)
    goto <bb 63>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 63> :
  iftmp.220 = 1;
  goto <bb 65>; [INV]

  <bb 64> :
  iftmp.220 = 0;

  <bb 65> :
  retval.219 = iftmp.220;
  if (retval.219 != 0)
    goto <bb 66>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 66> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 67> :
  D.249869 = gimple_assign_lhs (gc);

  <bb 68> :
  _50 = D.249869;
  _51 = _50->base.code;
  if (_51 == 165)
    goto <bb 69>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 69> :
  D.249870 = gimple_assign_rhs1 (gc);

  <bb 70> :
  _52 = D.249870;
  _53 = _52->base.code;
  if (_53 == 26)
    goto <bb 71>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 71> :
  iftmp.222 = 1;
  goto <bb 73>; [INV]

  <bb 72> :
  iftmp.222 = 0;

  <bb 73> :
  retval.221 = iftmp.222;
  if (retval.221 != 0)
    goto <bb 74>; [INV]
  else
    goto <bb 111>; [INV]

  <bb 74> :
  D.249871 = gimple_assign_lhs (gc);

  <bb 75> :
  _54 = D.249871;
  first = _54->exp.operands[0];
  def_stmt = first->ssa_name.def_stmt;
  mallocStmt_tree.223_55 = mallocStmt_tree;
  def_stmt2 = mallocStmt_tree.223_55->ssa_name.def_stmt;
  _56 = first->base.code;
  if (_56 != 36)
    goto <bb 76>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 76> :
  mallocStmt_tree.224_57 = mallocStmt_tree;
  _58 = mallocStmt_tree.224_57->base.code;
  if (_58 != 36)
    goto <bb 77>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 77> :
  if (def_stmt != 0B)
    goto <bb 78>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 78> :
  if (def_stmt2 != 0B)
    goto <bb 79>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 79> :
  pi4 = first->ssa_name.info.ptr_info;
  pt1 = &pi4->pt;
  pt2 = &pi1->pt;
  if (pt1 == 0B)
    goto <bb 81>; [INV]
  else
    goto <bb 80>; [INV]

  <bb 80> :
  _59 = BIT_FIELD_REF <*pt1, 8, 0>;
  _60 = _59 & 1;
  if (_60 != 0)
    goto <bb 81>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 81> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 82> :
  _61 = is_gimple_assign (def_stmt);
  if (_61 != 0)
    goto <bb 83>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 83> :
  _62 = is_gimple_assign (def_stmt2);
  if (_62 != 0)
    goto <bb 84>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 84> :
  iftmp.226 = 1;
  goto <bb 86>; [INV]

  <bb 85> :
  iftmp.226 = 0;

  <bb 86> :
  retval.225 = iftmp.226;
  if (retval.225 != 0)
    goto <bb 87>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 87> :
  D.249872 = gimple_assign_rhs1 (def_stmt);

  <bb 88> :
  _63 = D.249872;
  _64 = _63->base.code;
  _65 = (tree_code) _64;
  D.249873 = get_tree_code_name (_65);

  <bb 89> :
  _66 = D.249873;
  _67 = strcmp (_66, "<invalid tree code>");
  retval.227 = _67 == 0;
  if (retval.227 != 0)
    goto <bb 90>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 90> :
  D.249874 = gimple_assign_rhs1 (def_stmt2);

  <bb 91> :
  _68 = D.249874;
  _69 = _68->base.code;
  _70 = (tree_code) _69;
  D.249875 = get_tree_code_name (_70);

  <bb 92> :
  _71 = D.249875;
  _72 = strcmp (_71, "<invalid tree code>");
  retval.228 = _72 == 0;
  if (retval.228 != 0)
    goto <bb 93>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 93> :
  _73 = BIT_FIELD_REF <*pt1, 8, 0>;
  _74 = _73 & 2;
  if (_74 == 0)
    goto <bb 94>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 94> :
  _75 = BIT_FIELD_REF <*pt2, 8, 0>;
  _76 = _75 & 2;
  if (_76 == 0)
    goto <bb 95>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 95> :
  D.249876 = gimple_assign_rhs1 (def_stmt2);

  <bb 96> :
  _77 = D.249876;
  retval.229 = _77 != 0B;
  if (retval.229 != 0)
    goto <bb 97>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 97> :
  D.249877 = gimple_assign_rhs1 (def_stmt2);

  <bb 98> :
  _78 = D.249877;
  _79 = is_global_var (_78);
  retval.230 = ~_79;
  if (retval.230 != 0)
    goto <bb 99>; [INV]
  else
    goto <bb 107>; [INV]

  <bb 99> :
  if (pt1 != 0B)
    goto <bb 100>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 100> :
  D.249878 = gimple_assign_rhs1 (def_stmt);

  <bb 101> :
  _80 = D.249878;
  retval.231 = _80 != 0B;
  if (retval.231 != 0)
    goto <bb 102>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 102> :
  D.249879 = gimple_assign_rhs1 (def_stmt);

  <bb 103> :
  _81 = D.249879;
  retval.232 = is_global_var (_81);
  if (retval.232 != 0)
    goto <bb 104>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 104> :
  mallocStmt_tree.234_82 = mallocStmt_tree;
  D.249880 = ptr_derefs_may_alias_p (mallocStmt_tree.234_82, first);

  <bb 105> :
  _83 = D.249880;
  retval.233 = ~_83;
  if (retval.233 != 0)
    goto <bb 106>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 106> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 107> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 108> :
  goto <bb 110>; [INV]

  <bb 109> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 110> :
  goto <bb 130>; [INV]

  <bb 111> :
  D.249881 = gimple_assign_rhs1 (gc);

  <bb 112> :
  _84 = D.249881;
  _85 = _84->base.code;
  retval.235 = _85 == 36;
  if (retval.235 != 0)
    goto <bb 113>; [INV]
  else
    goto <bb 119>; [INV]

  <bb 113> :
  D.249882 = gimple_assign_lhs (gc);

  <bb 114> :
  _86 = D.249882;
  mallocStmt_tree.237_87 = mallocStmt_tree;
  D.249883 = ptr_derefs_may_alias_p (mallocStmt_tree.237_87, _86);

  <bb 115> :
  retval.236 = D.249883;
  if (retval.236 != 0)
    goto <bb 116>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 116> :
  D.249884 = gimple_assign_rhs1 (gc);

  <bb 117> :
  _88 = D.249884;
  retval.238 = is_global_var (_88);
  if (retval.238 != 0)
    goto <bb 118>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 118> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 119> :
  D.249885 = gimple_assign_rhs1 (gc);

  <bb 120> :
  _89 = D.249885;
  _90 = _89->base.code;
  retval.239 = _90 == 153;
  if (retval.239 != 0)
    goto <bb 121>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 121> :
  D.249886 = gimple_assign_lhs (gc);

  <bb 122> :
  _91 = D.249886;
  pi3 = _91->ssa_name.info.ptr_info;
  D.249887 = gimple_assign_rhs1 (gc);

  <bb 123> :
  _92 = D.249887;
  pi4 = _92->ssa_name.info.ptr_info;
  pt3 = &pi3->pt;
  pt4 = &pi4->pt;
  if (pt3 == 0B)
    goto <bb 125>; [INV]
  else
    goto <bb 124>; [INV]

  <bb 124> :
  if (pt4 == 0B)
    goto <bb 125>; [INV]
  else
    goto <bb 126>; [INV]

  <bb 125> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 126> :
  D.249888 = gimple_assign_rhs1 (gc);

  <bb 127> :
  _93 = D.249888;
  mallocStmt_tree.241_94 = mallocStmt_tree;
  D.249889 = ptr_derefs_may_alias_p (mallocStmt_tree.241_94, _93);

  <bb 128> :
  _95 = D.249889;
  retval.240 = ~_95;
  if (retval.240 != 0)
    goto <bb 129>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 129> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 130> :
  mallocStmt_tree.242_96 = mallocStmt_tree;
  D.249890 = get_name (mallocStmt_tree.242_96);

  <bb 131> :
  _97 = D.249890;
  stderr.243_98 = stderr;
  fprintf (stderr.243_98, "\x1b[40;36m ======= relate node_fun argument:%s========= \x1b[0m\n", _97);

  <bb 132> :
  D.249891 = gimple_assign_lhs (gc);

  <bb 133> :
  _99 = D.249891;
  D.249892 = get_name (_99);

  <bb 134> :
  _100 = D.249892;
  stderr.244_101 = stderr;
  fprintf (stderr.244_101, "\x1b[40;36m ======= relate gimple_assign_lhs:%s========= \x1b[0m\n", _100);

  <bb 135> :
  _102 = rand ();
  x = (long unsigned int) _102;
  debugmod.245_103 = debugmod;
  if (debugmod.245_103 != 0)
    goto <bb 136>; [INV]
  else
    goto <bb 166>; [INV]

  <bb 136> :
  freemod.246_104 = freemod;
  if (freemod.246_104 != 0)
    goto <bb 137>; [INV]
  else
    goto <bb 145>; [INV]

  <bb 137> :
  if (seccount == 0)
    goto <bb 138>; [INV]
  else
    goto <bb 139>; [INV]

  <bb 138> :
  stderr.247_105 = stderr;
  __builtin_fwrite ("dot graph arrow", 1, 15, stderr.247_105);
  goto <bb 144>; [INV]

  <bb 139> :
  now_laststmt.248_106 = now_laststmt;
  if (now_laststmt.248_106 != 0B)
    goto <bb 140>; [INV]
  else
    goto <bb 143>; [INV]

  <bb 140> :
  now_laststmtid.249_107 = now_laststmtid;
  stderr.250_108 = stderr;
  fprintf (stderr.250_108, "dot graph relate stm2 start ID : %lu stmt(free) :", now_laststmtid.249_107);

  <bb 141> :
  now_laststmt.251_109 = now_laststmt;
  debug (now_laststmt.251_109);

  <bb 142> :
  now_laststmt.252_110 = now_laststmt;
  _111 = gimple_location_safe (now_laststmt.252_110);
  warning_at (_111, 0, "use location");

  <bb 143> :
  stderr.253_112 = stderr;
  __builtin_fwrite ("dot graph relate en1\n\n", 1, 22, stderr.253_112);

  <bb 144> :
  stderr.254_113 = stderr;
  __builtin_fwrite ("dot graph start relate for1", 1, 27, stderr.254_113);
  goto <bb 155>; [INV]

  <bb 145> :
  fistconunt.255_114 = fistconunt;
  if (fistconunt.255_114 == 0)
    goto <bb 146>; [INV]
  else
    goto <bb 148>; [INV]

  <bb 146> :
  stderr.256_115 = stderr;
  __builtin_fwrite ("dot graph start relate form", 1, 27, stderr.256_115);

  <bb 147> :
  fistconunt.257_116 = fistconunt;
  _117 = fistconunt.257_116 + 1;
  fistconunt = _117;
  goto <bb 155>; [INV]

  <bb 148> :
  now_laststmt.258_118 = now_laststmt;
  if (now_laststmt.258_118 != 0B)
    goto <bb 149>; [INV]
  else
    goto <bb 154>; [INV]

  <bb 149> :
  now_laststmtid.259_119 = now_laststmtid;
  stderr.260_120 = stderr;
  fprintf (stderr.260_120, "dot graph relate stm2 start ID : %lu stmt(free) :", now_laststmtid.259_119);

  <bb 150> :
  now_laststmt.261_121 = now_laststmt;
  debug (now_laststmt.261_121);

  <bb 151> :
  now_laststmt.262_122 = now_laststmt;
  _123 = gimple_location_safe (now_laststmt.262_122);
  warning_at (_123, 0, "use location");

  <bb 152> :
  stderr.263_124 = stderr;
  __builtin_fwrite ("dot graph relate en1\n\n", 1, 22, stderr.263_124);

  <bb 153> :
  now_laststmt = gc;
  now_laststmtid = x;

  <bb 154> :
  stderr.264_125 = stderr;
  __builtin_fwrite ("dot graph start relate for1", 1, 27, stderr.264_125);

  <bb 155> :
  fistconunt.265_126 = fistconunt;
  _127 = fistconunt.265_126 + 1;
  fistconunt = _127;
  now_fucntion.266_128 = now_fucntion;
  stderr.267_129 = stderr;
  fprintf (stderr.267_129, "ID : %lu\n", now_fucntion.266_128);

  <bb 156> :
  _130 = gimple_bb (gc);
  _131 = _130->index;
  D.249893 = get_name (function_tree);

  <bb 157> :
  _132 = D.249893;
  stderr.268_133 = stderr;
  fprintf (stderr.268_133, "from %s basic block %d", _132, _131);

  <bb 158> :
  stderr.269_134 = stderr;
  __builtin_fwrite ("dot graph end relate end\n\n", 1, 26, stderr.269_134);

  <bb 159> :
  _135 = gimple_location_safe (gc);
  warning_at (_135, 0, "use location");

  <bb 160> :
  debug (gc);

  <bb 161> :
  stderr.270_136 = stderr;
  fprintf (stderr.270_136, "dot graph relate stmt start ID : %lu stmt(LHS) :", x);

  <bb 162> :
  _137 = gimple_location_safe (gc);
  warning_at (_137, 0, "use location");

  <bb 163> :
  D.249894 = gimple_assign_lhs (gc);

  <bb 164> :
  _138 = D.249894;
  debug (_138);

  <bb 165> :
  stderr.271_139 = stderr;
  __builtin_fwrite ("dot graph relate end\n\n", 1, 22, stderr.271_139);
  goto <bb 171>; [INV]

  <bb 166> :
  _140 = gimple_location_safe (gc);
  warning_at (_140, 0, "use location");

  <bb 167> :
  debug (gc);

  <bb 168> :
  _141 = gimple_location_safe (gc);
  warning_at (_141, 0, "use location");

  <bb 169> :
  D.249895 = gimple_assign_lhs (gc);

  <bb 170> :
  _142 = D.249895;
  debug (_142);

  <bb 171> :
  now_relatelaststmt = gc;
  now_relatelaststmtid = x;
  now_laststmtid = x;
  stderr.272_143 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.272_143);

  <bb 172> :
  stderr.273_144 = stderr;
  __builtin_fwrite ("\x1b[40;35m this pointer possible reference other address \x1b[0m\n", 1, 60, stderr.273_144);

  <bb 173> :
  stderr.274_145 = stderr;
  __builtin_fwrite ("\x1b[40;35m or assign other value \x1b[0m\n", 1, 36, stderr.274_145);

  <bb 174> :
  stderr.275_146 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.275_146);

  <bb 175> :
  D.249896 = gimple_assign_lhs (gc);

  <bb 176> :
  _147 = D.249896;
  _148 = _147->base.code;
  if (_148 == 49)
    goto <bb 178>; [INV]
  else
    goto <bb 177>; [INV]

  <bb 177> :
  mallocStmt_tree.278_149 = mallocStmt_tree;
  _150 = mallocStmt_tree.278_149->base.code;
  if (_150 == 153)
    goto <bb 178>; [INV]
  else
    goto <bb 179>; [INV]

  <bb 178> :
  iftmp.277 = 1;
  goto <bb 180>; [INV]

  <bb 179> :
  iftmp.277 = 0;

  <bb 180> :
  retval.276 = iftmp.277;
  if (retval.276 != 0)
    goto <bb 181>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 181> :
  second = 0B;
  D.249897 = gimple_assign_lhs (gc);

  <bb 182> :
  _151 = D.249897;
  second = _151->exp.operands[0];
  D.249898 = gimple_assign_lhs (gc);

  <bb 183> :
  _152 = D.249898;
  _153 = _152->base.code;
  retval.279 = _153 == 49;
  if (retval.279 != 0)
    goto <bb 184>; [INV]
  else
    goto <bb 186>; [INV]

  <bb 184> :
  D.249899 = gimple_assign_lhs (gc);

  <bb 185> :
  _154 = D.249899;
  second = _154->exp.operands[0];

  <bb 186> :
  if (second != 0B)
    goto <bb 187>; [INV]
  else
    goto <bb 200>; [INV]

  <bb 187> :
  mallocStmt_tree.280_155 = mallocStmt_tree;
  _156 = mallocStmt_tree.280_155->base.code;
  if (_156 == 36)
    goto <bb 188>; [INV]
  else
    goto <bb 200>; [INV]

  <bb 188> :
  _157 = second->base.code;
  if (_157 == 36)
    goto <bb 189>; [INV]
  else
    goto <bb 200>; [INV]

  <bb 189> :
  mallocStmt_tree.281_158 = mallocStmt_tree;
  if (second == mallocStmt_tree.281_158)
    goto <bb 190>; [INV]
  else
    goto <bb 200>; [INV]

  <bb 190> :
  D.249900 = get_name (function_tree);

  <bb 191> :
  _159 = D.249900;
  stderr.282_160 = stderr;
  fprintf (stderr.282_160, "\x1b[40;36m ======= relate node_fun argument:%s========= \x1b[0m\n", _159);

  <bb 192> :
  D.249901 = gimple_assign_lhs (gc);

  <bb 193> :
  _161 = D.249901;
  stderr.283_162 = stderr;
  fprintf (stderr.283_162, "\x1b[40;36m ======= relate gimple_assign_lhs:%s========= \x1b[0m\n", _161);

  <bb 194> :
  debug_gimple_stmt (gc);

  <bb 195> :
  _163 = gimple_location_safe (gc);
  warning_at (_163, 0, "use location");

  <bb 196> :
  stderr.284_164 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.284_164);

  <bb 197> :
  stderr.285_165 = stderr;
  __builtin_fwrite ("\x1b[40;35m this pointer possible  reference other address \x1b[0m\n", 1, 61, stderr.285_165);

  <bb 198> :
  stderr.286_166 = stderr;
  __builtin_fwrite ("\x1b[40;35m or assign other value \x1b[0m\n", 1, 36, stderr.286_166);

  <bb 199> :
  stderr.287_167 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.287_167);

  <bb 200> :
  if (second == 0B)
    goto <bb 201>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 201> :
  mallocStmt_tree.288_168 = mallocStmt_tree;
  _169 = mallocStmt_tree.288_168->base.code;
  if (_169 == 153)
    goto <bb 202>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 202> :
  D.249902 = gimple_assign_rhs1 (gc);

  <bb 203> :
  _170 = D.249902;
  _171 = _170->base.code;
  retval.289 = _171 == 153;
  if (retval.289 != 0)
    goto <bb 204>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 204> :
  D.249903 = gimple_assign_rhs1 (gc);

  <bb 205> :
  _172 = D.249903;
  def_stmt = _172->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 206>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 206> :
  _173 = gimple_code (def_stmt);
  if (_173 != 18)
    goto <bb 207>; [INV]
  else
    goto <bb 214>; [INV]

  <bb 207> :
  D.249904 = gimple_assign_lhs (gc);

  <bb 208> :
  _174 = D.249904;
  mallocStmt_tree.292_175 = mallocStmt_tree;
  D.249905 = ptr_derefs_may_alias_p (mallocStmt_tree.292_175, _174);

  <bb 209> :
  _176 = D.249905;
  if (_176 != 0)
    goto <bb 210>; [INV]
  else
    goto <bb 214>; [INV]

  <bb 210> :
  D.249906 = gimple_assign_rhs1 (gc);

  <bb 211> :
  _177 = D.249906;
  mallocStmt_tree.293_178 = mallocStmt_tree;
  D.249907 = ptr_derefs_may_alias_p (mallocStmt_tree.293_178, _177);

  <bb 212> :
  _179 = D.249907;
  if (_179 != 0)
    goto <bb 213>; [INV]
  else
    goto <bb 214>; [INV]

  <bb 213> :
  iftmp.291 = 1;
  goto <bb 215>; [INV]

  <bb 214> :
  iftmp.291 = 0;

  <bb 215> :
  retval.290 = iftmp.291;
  if (retval.290 != 0)
    goto <bb 216>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 216> :
  D.249908 = get_name (function_tree);

  <bb 217> :
  _180 = D.249908;
  stderr.294_181 = stderr;
  fprintf (stderr.294_181, "\x1b[40;36m ======= relate node_fun argument:%s========= \x1b[0m\n", _180);

  <bb 218> :
  D.249909 = gimple_assign_lhs (gc);

  <bb 219> :
  _182 = D.249909;
  stderr.295_183 = stderr;
  fprintf (stderr.295_183, "\x1b[40;36m ======= relate gimple_assign_lhs:%s========= \x1b[0m\n", _182);

  <bb 220> :
  debug_gimple_stmt (gc);

  <bb 221> :
  _184 = gimple_location_safe (gc);
  warning_at (_184, 0, "use location");

  <bb 222> :
  stderr.296_185 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.296_185);

  <bb 223> :
  stderr.297_186 = stderr;
  __builtin_fwrite ("\x1b[40;35m this pointer possible  reference other address \x1b[0m\n", 1, 61, stderr.297_186);

  <bb 224> :
  stderr.298_187 = stderr;
  __builtin_fwrite ("\x1b[40;35m or assign other value \x1b[0m\n", 1, 36, stderr.298_187);

  <bb 225> :
  stderr.299_188 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.299_188);
  goto <bb 291>; [INV]

  <bb 226> :
  _189 = is_gimple_call (gc);
  _190 = (long int) _189;
  retval.300 = _190 != 0;
  if (retval.300 != 0)
    goto <bb 227>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 227> :
  mallocStmt_tree.301_191 = mallocStmt_tree;
  pi1 = mallocStmt_tree.301_191->ssa_name.info.ptr_info;
  pt1 = &pi1->pt;
  if (pt1 != 0B)
    goto <bb 228>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 228> :
  relatemod.302_192 = relatemod;
  if (relatemod.302_192 != 0)
    goto <bb 229>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 229> :
  debugmod.303_193 = debugmod;
  if (debugmod.303_193 != 0)
    goto <bb 230>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 230> :
  D.249910 = gimple_call_num_args (gc);

  <bb 231> :
  _194 = D.249910;
  retval.304 = _194 != 0;
  if (retval.304 != 0)
    goto <bb 232>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 232> :
  D.249911 = gimple_call_fn (gc);

  <bb 233> :
  _195 = D.249911;
  D.249912 = get_name (_195);

  <bb 234> :
  name = D.249912;
  D.249913 = gimple_call_lhs (gc);

  <bb 235> :
  _196 = D.249913;
  retval.305 = _196 != 0B;
  if (retval.305 != 0)
    goto <bb 236>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 236> :
  D.249914 = gimple_call_lhs (gc);

  <bb 237> :
  _197 = D.249914;
  _198 = _197->base.code;
  if (_198 == 153)
    goto <bb 243>; [INV]
  else
    goto <bb 238>; [INV]

  <bb 238> :
  D.249915 = gimple_call_arg (gc, 0);

  <bb 239> :
  _199 = D.249915;
  _200 = _199->base.code;
  if (_200 == 153)
    goto <bb 243>; [INV]
  else
    goto <bb 240>; [INV]

  <bb 240> :
  D.249916 = gimple_call_arg (gc, 0);

  <bb 241> :
  _201 = D.249916;
  _202 = _201->base.code;
  _203 = (tree_code) _202;
  D.249917 = get_tree_code_name (_203);

  <bb 242> :
  _204 = D.249917;
  _205 = strcmp (_204, "addr_expr");
  if (_205 == 0)
    goto <bb 243>; [INV]
  else
    goto <bb 244>; [INV]

  <bb 243> :
  iftmp.307 = 1;
  goto <bb 245>; [INV]

  <bb 244> :
  iftmp.307 = 0;

  <bb 245> :
  retval.306 = iftmp.307;
  if (retval.306 != 0)
    goto <bb 246>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 246> :
  if (name != 0B)
    goto <bb 247>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 247> :
  _206 = strcmp (name, "pthread_mutex_lock");
  if (_206 == 0)
    goto <bb 250>; [INV]
  else
    goto <bb 248>; [INV]

  <bb 248> :
  _207 = strcmp (name, "pthread_mutex_unlock");
  if (_207 == 0)
    goto <bb 250>; [INV]
  else
    goto <bb 249>; [INV]

  <bb 249> :
  _208 = strcmp (name, "pthread_exit");
  if (_208 == 0)
    goto <bb 250>; [INV]
  else
    goto <bb 251>; [INV]

  <bb 250> :
  // predicted unlikely by continue predictor.
  goto <bb 291>; [INV]

  <bb 251> :
  D.249918 = gimple_call_arg (gc, 0);

  <bb 252> :
  _209 = D.249918;
  pi2 = _209->ssa_name.info.ptr_info;
  pt2 = &pi2->pt;
  if (pt2 != 0B)
    goto <bb 253>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 253> :
  D.249919 = gimple_call_arg (gc, 0);

  <bb 254> :
  _210 = D.249919;
  mallocStmt_tree.309_211 = mallocStmt_tree;
  D.249920 = ptr_derefs_may_alias_p (mallocStmt_tree.309_211, _210);

  <bb 255> :
  retval.308 = D.249920;
  if (retval.308 != 0)
    goto <bb 256>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 256> :
  _212 = rand ();
  x = (long unsigned int) _212;
  debugmod.310_213 = debugmod;
  if (debugmod.310_213 != 0)
    goto <bb 257>; [INV]
  else
    goto <bb 286>; [INV]

  <bb 257> :
  freemod.311_214 = freemod;
  if (freemod.311_214 != 0)
    goto <bb 258>; [INV]
  else
    goto <bb 266>; [INV]

  <bb 258> :
  if (seccount == 0)
    goto <bb 259>; [INV]
  else
    goto <bb 260>; [INV]

  <bb 259> :
  stderr.312_215 = stderr;
  __builtin_fwrite ("dot graph arrow", 1, 15, stderr.312_215);
  goto <bb 265>; [INV]

  <bb 260> :
  now_laststmt.313_216 = now_laststmt;
  if (now_laststmt.313_216 != 0B)
    goto <bb 261>; [INV]
  else
    goto <bb 264>; [INV]

  <bb 261> :
  now_laststmtid.314_217 = now_laststmtid;
  stderr.315_218 = stderr;
  fprintf (stderr.315_218, "dot graph relate stm2 start ID : %lu stmt(free) :", now_laststmtid.314_217);

  <bb 262> :
  now_laststmt.316_219 = now_laststmt;
  debug (now_laststmt.316_219);

  <bb 263> :
  now_laststmt.317_220 = now_laststmt;
  _221 = gimple_location_safe (now_laststmt.317_220);
  warning_at (_221, 0, "use location");

  <bb 264> :
  stderr.318_222 = stderr;
  __builtin_fwrite ("dot graph relate en1\n\n", 1, 22, stderr.318_222);

  <bb 265> :
  stderr.319_223 = stderr;
  __builtin_fwrite ("dot graph start relate for1", 1, 27, stderr.319_223);
  goto <bb 276>; [INV]

  <bb 266> :
  fistconunt.320_224 = fistconunt;
  if (fistconunt.320_224 == 0)
    goto <bb 267>; [INV]
  else
    goto <bb 269>; [INV]

  <bb 267> :
  stderr.321_225 = stderr;
  __builtin_fwrite ("dot graph start relate form", 1, 27, stderr.321_225);

  <bb 268> :
  fistconunt.322_226 = fistconunt;
  _227 = fistconunt.322_226 + 1;
  fistconunt = _227;
  goto <bb 276>; [INV]

  <bb 269> :
  now_laststmt.323_228 = now_laststmt;
  if (now_laststmt.323_228 != 0B)
    goto <bb 270>; [INV]
  else
    goto <bb 275>; [INV]

  <bb 270> :
  now_laststmtid.324_229 = now_laststmtid;
  stderr.325_230 = stderr;
  fprintf (stderr.325_230, "dot graph relate stm2 start ID : %lu stmt(free) :", now_laststmtid.324_229);

  <bb 271> :
  now_laststmt.326_231 = now_laststmt;
  debug (now_laststmt.326_231);

  <bb 272> :
  now_laststmt.327_232 = now_laststmt;
  _233 = gimple_location_safe (now_laststmt.327_232);
  warning_at (_233, 0, "use location");

  <bb 273> :
  stderr.328_234 = stderr;
  __builtin_fwrite ("dot graph relate en1\n\n", 1, 22, stderr.328_234);

  <bb 274> :
  now_laststmt = gc;
  now_laststmtid = x;

  <bb 275> :
  stderr.329_235 = stderr;
  __builtin_fwrite ("dot graph start relate for1", 1, 27, stderr.329_235);

  <bb 276> :
  fistconunt.330_236 = fistconunt;
  _237 = fistconunt.330_236 + 1;
  fistconunt = _237;
  now_fucntion.331_238 = now_fucntion;
  stderr.332_239 = stderr;
  fprintf (stderr.332_239, "ID : %lu\n", now_fucntion.331_238);

  <bb 277> :
  _240 = gimple_bb (gc);
  _241 = _240->index;
  D.249921 = get_name (function_tree);

  <bb 278> :
  _242 = D.249921;
  stderr.333_243 = stderr;
  fprintf (stderr.333_243, "from %s basic block %d", _242, _241);

  <bb 279> :
  stderr.334_244 = stderr;
  __builtin_fwrite ("dot graph end relate end\n\n", 1, 26, stderr.334_244);

  <bb 280> :
  debug (gc);

  <bb 281> :
  stderr.335_245 = stderr;
  fprintf (stderr.335_245, "dot graph relate stmt start ID : %lu stmt(call) :", x);

  <bb 282> :
  _246 = gimple_location_safe (gc);
  warning_at (_246, 0, "use location");

  <bb 283> :
  D.249922 = gimple_call_arg (gc, 0);

  <bb 284> :
  _247 = D.249922;
  debug (_247);

  <bb 285> :
  stderr.336_248 = stderr;
  __builtin_fwrite ("dot graph relate end\n\n", 1, 22, stderr.336_248);
  goto <bb 290>; [INV]

  <bb 286> :
  debug (gc);

  <bb 287> :
  _249 = gimple_location_safe (gc);
  warning_at (_249, 0, "use location");

  <bb 288> :
  D.249923 = gimple_call_arg (gc, 0);

  <bb 289> :
  _250 = D.249923;
  debug (_250);

  <bb 290> :
  now_relatelaststmt = gc;
  now_relatelaststmtid = x;
  now_laststmtid = x;

  <bb 291> :
  gsi_next (&gsi);

  <bb 292> :
  _251 = gsi_end_p (gsi);
  retval.337 = ~_251;
  if (retval.337 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 293>; [INV]

  <bb 293> :
  gsi = {CLOBBER};
  bb = bb->next_bb;

  <bb 294> :
  cfun.338_252 = cfun;
  _253 = cfun.338_252->cfg;
  _254 = _253->x_exit_block_ptr;
  if (bb != _254)
    goto <bb 14>; [INV]
  else
    goto <bb 295>; [INV]

  <bb 295> :
  std::vector<relate_type>::vector (&relate_type_array);
  function_relate_array::function_relate_array (&fun_array);
  now_relatelaststmt.339_255 = now_relatelaststmt;
  if (now_relatelaststmt.339_255 != 0B)
    goto <bb 296>; [INV]
  else
    goto <bb 305>; [INV]

  <bb 296> :
  function_relate_collect.341_256 = function_relate_collect;
  D.249925 = hash_map<tree_node*, function_relate_array>::get (function_relate_collect.341_256, &mallocStmt_tree);

  <bb 297> :
  _257 = D.249925;
  retval.340 = _257 == 0B;
  if (retval.340 != 0)
    goto <bb 298>; [INV]
  else
    goto <bb 299>; [INV]

  <bb 298> :
  std::vector<relate_type>::operator= (&fun_array.relate_type_array, &relate_type_array);
  goto <bb 302>; [INV]

  <bb 299> :
  function_relate_collect.342_258 = function_relate_collect;
  D.249926 = hash_map<tree_node*, function_relate_array>::get (function_relate_collect.342_258, &mallocStmt_tree);

  <bb 300> :
  _259 = D.249926;
  function_relate_array::operator= (&fun_array, _259);

  <bb 301> :
  std::vector<relate_type>::operator= (&relate_type_array, &fun_array.relate_type_array);

  <bb 302> :
  relate_type::relate_type (&relate_type);
  now_relatelaststmt.343_260 = now_relatelaststmt;
  relate_type.stmt = now_relatelaststmt.343_260;
  mallocStmt_tree.344_261 = mallocStmt_tree;
  relate_type.relate_tree = mallocStmt_tree.344_261;
  relate_type.relate_funtree = function_tree;
  now_fucntion.345_262 = now_fucntion;
  _263 = (unsigned int) now_fucntion.345_262;
  relate_type.now_fucntion = _263;
  now_laststmtid.346_264 = now_laststmtid;
  _265 = (unsigned int) now_laststmtid.346_264;
  relate_type.now_stmt = _265;
  std::vector<relate_type>::push_back (&fun_array.relate_type_array, &relate_type);

  <bb 303> :
  function_relate_collect.347_266 = function_relate_collect;
  hash_map<tree_node*, function_relate_array>::put (function_relate_collect.347_266, &mallocStmt_tree, &fun_array);

  <bb 304> :
  relate_type = {CLOBBER};

  <bb 305> :
  function_relate_array::~function_relate_array (&fun_array);
  std::vector<relate_type>::~vector (&relate_type_array);
  relate_type_array = {CLOBBER};
  fun_array = {CLOBBER};

  <bb 306> :
  pop_cfun ();

  <bb 307> :
  symtab.348_267 = symtab;
  D.249931 = symbol_table::next_defined_function (symtab.348_267, node);
  node = D.249931;

  <bb 308> :
  if (node != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 309>; [INV]

  <bb 309> :
  stderr.349_268 = stderr;
  __builtin_fwrite ("fucntion collect path finsh\n", 1, 28, stderr.349_268);

  <bb 310> :
<L265>:
  return;

  <bb 311> :
<L266>:
  gsi = {CLOBBER};
  resx 2

  <bb 312> :
<L267>:
  relate_type = {CLOBBER};
  resx 6

  <bb 313> :
<L268>:
  function_relate_array::~function_relate_array (&fun_array);
  resx 5

  <bb 314> :
<L269>:
  std::vector<relate_type>::~vector (&relate_type_array);
  resx 4

  <bb 315> :
<L270>:
  relate_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  resx 1

}



;; Function is_gimple_assign (_ZL16is_gimple_assignPK6gimple, funcdef_no=2062, decl_uid=92605, cgraph_uid=1199, symbol_order=1359)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool is_gimple_assign (const struct gimple * gs)
{
  bool D.249932;

  <bb 2> :
  _1 = gimple_code (gs);
  D.249932 = _1 == 6;

  <bb 3> :
<L0>:
  return D.249932;

}



;; Function is_global_var (_ZL13is_global_varPK9tree_node, funcdef_no=1820, decl_uid=85582, cgraph_uid=968, symbol_order=1128)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool is_global_var (const union tree_node * t)
{
  bool iftmp.350;
  bool D.249934;

  <bb 2> :
  _1 = BIT_FIELD_REF <t->base, 8, 24>;
  _2 = _1 & 4;
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = BIT_FIELD_REF <t->decl_common, 8, 472>;
  _4 = _3 & 2;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.350 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.350 = 0;

  <bb 6> :
  D.249934 = iftmp.350;

  <bb 7> :
<L4>:
  return D.249934;

}



;; Function gimple_assign_rhs1 (_ZL18gimple_assign_rhs1PK6gimple, funcdef_no=2071, decl_uid=92645, cgraph_uid=1208, symbol_order=1368)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_assign_rhs1 (const struct gimple * gs)
{
  const struct gassign * D.249943;
  const struct gassign * ass;
  union tree_node * D.249941;

  <bb 2> :
  D.249943 = GIMPLE_CHECK2<const gassign*> (gs);
  ass = D.249943;
  D.249941 = gimple_assign_rhs1 (ass);

  <bb 3> :
<L0>:
  return D.249941;

}



;; Function GIMPLE_CHECK2<const gassign*> (_Z13GIMPLE_CHECK2IPK7gassignET_PK6gimple, funcdef_no=7061, decl_uid=92617, cgraph_uid=3693, symbol_order=4479)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gassign * GIMPLE_CHECK2<const gassign*> (const struct gimple * gs)
{
  const struct gassign * D.249946;
  const struct gassign * D.249944;

  <bb 2> :
  D.249946 = as_a<const gassign*, const gimple> (gs);
  D.249944 = D.249946;

  <bb 3> :
<L0>:
  return D.249944;

}



;; Function as_a<const gassign*, const gimple> (_Z4as_aIPK7gassignK6gimpleET_PT0_, funcdef_no=8066, decl_uid=207177, cgraph_uid=4698, symbol_order=5487)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gassign * as_a<const gassign*, const gimple> (const struct gimple * p)
{
  const struct gassign * D.249949;
  const struct gassign * D.249947;

  <bb 2> :
  D.249949 = is_a_helper<const gassign*>::cast<gimple> (p);
  D.249947 = D.249949;

  <bb 3> :
<L0>:
  return D.249947;

}



;; Function is_a_helper<const gassign*>::cast<gimple> (_ZN11is_a_helperIPK7gassignE4castI6gimpleEES2_PKT_, funcdef_no=8073, decl_uid=207215, cgraph_uid=4705, symbol_order=5494)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gassign * is_a_helper<const gassign*>::cast<gimple> (const struct gimple * p)
{
  const struct gassign * D.249950;

  <bb 2> :
  D.249950 = reinterpret_is_a_helper<gassign*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.249950;

}



;; Function reinterpret_is_a_helper<gassign*>::cast<gimple> (_ZN23reinterpret_is_a_helperIP7gassignE4castI6gimpleEES1_PT_, funcdef_no=9045, decl_uid=219640, cgraph_uid=5677, symbol_order=6470)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gassign * reinterpret_is_a_helper<gassign*>::cast<gimple> (struct gimple * p)
{
  struct gassign * D.249952;

  <bb 2> :
  D.249952 = p;

  <bb 3> :
<L0>:
  return D.249952;

}



;; Function gimple_assign_rhs1 (_ZL18gimple_assign_rhs1PK7gassign, funcdef_no=2070, decl_uid=92642, cgraph_uid=1207, symbol_order=1367)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_assign_rhs1 (const struct gassign * gs)
{
  union tree_node * D.249954;

  <bb 2> :
  D.249954 = gs->D.90479.op[1];

  <bb 3> :
<L0>:
  return D.249954;

}



;; Function gimple_assign_lhs (_ZL17gimple_assign_lhsPK6gimple, funcdef_no=2065, decl_uid=92614, cgraph_uid=1202, symbol_order=1362)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_assign_lhs (const struct gimple * gs)
{
  const struct gassign * D.249958;
  const struct gassign * ass;
  union tree_node * D.249956;

  <bb 2> :
  D.249958 = GIMPLE_CHECK2<const gassign*> (gs);
  ass = D.249958;
  D.249956 = gimple_assign_lhs (ass);

  <bb 3> :
<L0>:
  return D.249956;

}



;; Function gimple_assign_lhs (_ZL17gimple_assign_lhsPK7gassign, funcdef_no=2064, decl_uid=92611, cgraph_uid=1201, symbol_order=1361)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_assign_lhs (const struct gassign * gs)
{
  union tree_node * D.249959;

  <bb 2> :
  D.249959 = gs->D.90479.op[0];

  <bb 3> :
<L0>:
  return D.249959;

}



;; Function is_gimple_call (_ZL14is_gimple_callPK6gimple, funcdef_no=2100, decl_uid=92760, cgraph_uid=1237, symbol_order=1397)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool is_gimple_call (const struct gimple * gs)
{
  bool D.249961;

  <bb 2> :
  _1 = gimple_code (gs);
  D.249961 = _1 == 8;

  <bb 3> :
<L0>:
  return D.249961;

}



;; Function gimple_call_num_args (_ZL20gimple_call_num_argsPK6gimple, funcdef_no=2139, decl_uid=92913, cgraph_uid=1276, symbol_order=1436)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int gimple_call_num_args (const struct gimple * gs)
{
  const struct gcall * D.249965;
  const struct gcall * gc;
  unsigned int D.249963;

  <bb 2> :
  D.249965 = GIMPLE_CHECK2<const gcall*> (gs);
  gc = D.249965;
  D.249963 = gimple_call_num_args (gc);

  <bb 3> :
<L0>:
  return D.249963;

}



;; Function GIMPLE_CHECK2<const gcall*> (_Z13GIMPLE_CHECK2IPK5gcallET_PK6gimple, funcdef_no=7063, decl_uid=92769, cgraph_uid=3695, symbol_order=4481)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcall * GIMPLE_CHECK2<const gcall*> (const struct gimple * gs)
{
  const struct gcall * D.249968;
  const struct gcall * D.249966;

  <bb 2> :
  D.249968 = as_a<const gcall*, const gimple> (gs);
  D.249966 = D.249968;

  <bb 3> :
<L0>:
  return D.249966;

}



;; Function as_a<const gcall*, const gimple> (_Z4as_aIPK5gcallK6gimpleET_PT0_, funcdef_no=7090, decl_uid=94348, cgraph_uid=3722, symbol_order=4508)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcall * as_a<const gcall*, const gimple> (const struct gimple * p)
{
  const struct gcall * D.249971;
  const struct gcall * D.249969;

  <bb 2> :
  D.249971 = is_a_helper<const gcall*>::cast<gimple> (p);
  D.249969 = D.249971;

  <bb 3> :
<L0>:
  return D.249969;

}



;; Function is_a_helper<const gcall*>::cast<gimple> (_ZN11is_a_helperIPK5gcallE4castI6gimpleEES2_PKT_, funcdef_no=8070, decl_uid=207201, cgraph_uid=4702, symbol_order=5491)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcall * is_a_helper<const gcall*>::cast<gimple> (const struct gimple * p)
{
  const struct gcall * D.249972;

  <bb 2> :
  D.249972 = reinterpret_is_a_helper<gcall*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.249972;

}



;; Function reinterpret_is_a_helper<gcall*>::cast<gimple> (_ZN23reinterpret_is_a_helperIP5gcallE4castI6gimpleEES1_PT_, funcdef_no=9047, decl_uid=219648, cgraph_uid=5679, symbol_order=6472)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gcall * reinterpret_is_a_helper<gcall*>::cast<gimple> (struct gimple * p)
{
  struct gcall * D.249974;

  <bb 2> :
  D.249974 = p;

  <bb 3> :
<L0>:
  return D.249974;

}



;; Function gimple_call_num_args (_ZL20gimple_call_num_argsPK5gcall, funcdef_no=2138, decl_uid=92910, cgraph_uid=1275, symbol_order=1435)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int gimple_call_num_args (const struct gcall * gs)
{
  unsigned int D.249976;

  <bb 2> :
  _1 = gimple_num_ops (gs);
  D.249976 = _1 + 4294967293;

  <bb 3> :
<L0>:
  return D.249976;

}



;; Function gimple_num_ops (_ZL14gimple_num_opsPK6gimple, funcdef_no=2056, decl_uid=92581, cgraph_uid=1193, symbol_order=1353)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int gimple_num_ops (const struct gimple * gs)
{
  unsigned int D.249978;

  <bb 2> :
  D.249978 = gs->num_ops;

  <bb 3> :
<L0>:
  return D.249978;

}



;; Function gimple_call_fn (_ZL14gimple_call_fnPK6gimple, funcdef_no=2124, decl_uid=92857, cgraph_uid=1261, symbol_order=1421)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_fn (const struct gimple * gs)
{
  const struct gcall * D.249982;
  const struct gcall * gc;
  union tree_node * D.249980;

  <bb 2> :
  D.249982 = GIMPLE_CHECK2<const gcall*> (gs);
  gc = D.249982;
  D.249980 = gimple_call_fn (gc);

  <bb 3> :
<L0>:
  return D.249980;

}



;; Function gimple_call_fn (_ZL14gimple_call_fnPK5gcall, funcdef_no=2123, decl_uid=92854, cgraph_uid=1260, symbol_order=1420)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_fn (const struct gcall * gs)
{
  union tree_node * D.249983;

  <bb 2> :
  D.249983 = gs->op[1];

  <bb 3> :
<L0>:
  return D.249983;

}



;; Function gimple_call_lhs (_ZL15gimple_call_lhsPK6gimple, funcdef_no=2102, decl_uid=92766, cgraph_uid=1239, symbol_order=1399)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_lhs (const struct gimple * gs)
{
  const struct gcall * D.249987;
  const struct gcall * gc;
  union tree_node * D.249985;

  <bb 2> :
  D.249987 = GIMPLE_CHECK2<const gcall*> (gs);
  gc = D.249987;
  D.249985 = gimple_call_lhs (gc);

  <bb 3> :
<L0>:
  return D.249985;

}



;; Function gimple_call_lhs (_ZL15gimple_call_lhsPK5gcall, funcdef_no=2101, decl_uid=92763, cgraph_uid=1238, symbol_order=1398)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_lhs (const struct gcall * gs)
{
  union tree_node * D.249988;

  <bb 2> :
  D.249988 = gs->op[0];

  <bb 3> :
<L0>:
  return D.249988;

}



;; Function gimple_bb (_ZL9gimple_bbPK6gimple, funcdef_no=2000, decl_uid=92273, cgraph_uid=1137, symbol_order=1297)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * gimple_bb (const struct gimple * g)
{
  struct basic_block_def * D.249990;

  <bb 2> :
  D.249990 = g->bb;

  <bb 3> :
<L0>:
  return D.249990;

}



;; Function gimple_call_arg (_ZL15gimple_call_argPK6gimplej, funcdef_no=2141, decl_uid=92922, cgraph_uid=1278, symbol_order=1438)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_arg (const struct gimple * gs, unsigned int index)
{
  const struct gcall * D.249994;
  const struct gcall * gc;
  union tree_node * D.249992;

  <bb 2> :
  D.249994 = GIMPLE_CHECK2<const gcall*> (gs);
  gc = D.249994;
  D.249992 = gimple_call_arg (gc, index);

  <bb 3> :
<L0>:
  return D.249992;

}



;; Function gimple_call_arg (_ZL15gimple_call_argPK5gcallj, funcdef_no=2140, decl_uid=92918, cgraph_uid=1277, symbol_order=1437)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_arg (const struct gcall * gs, unsigned int index)
{
  union tree_node * D.249995;

  <bb 2> :
  _1 = index + 3;
  D.249995 = gs->op[_1];

  <bb 3> :
<L0>:
  return D.249995;

}



;; Function std::vector<relate_type>::vector (_ZNSt6vectorI11relate_typeSaIS0_EEC2Ev, funcdef_no=6306, decl_uid=179799, cgraph_uid=3281, symbol_order=4059)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<relate_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.179807;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_ZNSt12_Vector_baseI11relate_typeSaIS0_EEC2Ev, funcdef_no=6304, decl_uid=179257, cgraph_uid=3278, symbol_order=4056)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7649, decl_uid=179149, cgraph_uid=4281, symbol_order=5070)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<relate_type>::allocator (this);
  _1 = &this->D.179152;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<relate_type>::allocator (_ZNSaI11relate_typeEC2Ev, funcdef_no=8513, decl_uid=178927, cgraph_uid=5145, symbol_order=5938)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<relate_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<relate_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11relate_typeEC2Ev, funcdef_no=9295, decl_uid=178856, cgraph_uid=5927, symbol_order=6720)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8516, decl_uid=179099, cgraph_uid=5148, symbol_order=5941)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function function_relate_array::function_relate_array (_ZN21function_relate_arrayC2Ev, funcdef_no=6309, decl_uid=191388, cgraph_uid=3284, symbol_order=4062)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_relate_array::function_relate_array (struct function_relate_array * const this)
{
  <bb 2> :
  _1 = &this->relate_type_array;
  std::vector<relate_type>::vector (_1);
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::get (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7660, decl_uid=191475, cgraph_uid=4292, symbol_order=5081)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_relate_array * hash_map<tree_node*, function_relate_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.250005;
  struct hash_entry & D.250004;
  unsigned int D.250003;
  struct hash_entry & e;
  struct function_relate_array * iftmp.351;
  struct function_relate_array * D.249997;

  <bb 2> :
  _1 = &this->m_table;
  D.250003 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::hash (k);
  _2 = D.250003;
  D.250004 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.250004;
  D.250005 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (e);
  _3 = D.250005;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.351 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.351 = &e->m_value;

  <bb 5> :
  D.249997 = iftmp.351;

  <bb 6> :
<L3>:
  return D.249997;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE4hashERKS2_, funcdef_no=8524, decl_uid=191431, cgraph_uid=5156, symbol_order=5949)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::hash (union tree_node * const & h)
{
  hashval_t D.250006;

  <bb 2> :
  D.250006 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.250006;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8525, decl_uid=191618, cgraph_uid=5157, symbol_order=5950)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.250040;
  bool D.250039;
  bool D.250038;
  bool D.250037;
  bool D.250036;
  bool D.250035;
  struct value_type * D.250034;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.355;
  bool retval.354;
  struct value_type & D.250020;
  bool iftmp.353;
  bool retval.352;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 32;
  entry = _5 + _7;
  D.250035 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.250035;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.250036 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.250036;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.250037 = hash_map<tree_node*, function_relate_array>::hash_entry::equal (entry, comparable);
  _11 = D.250037;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.353 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.353 = 0;

  <bb 8> :
  retval.352 = iftmp.353;
  if (retval.352 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.250020 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  entry = _17 + _19;
  D.250038 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.250038;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.250039 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.250039;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.250040 = hash_map<tree_node*, function_relate_array>::hash_entry::equal (entry, comparable);
  _23 = D.250040;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.355 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.355 = 0;

  <bb 18> :
  retval.354 = iftmp.355;
  if (retval.354 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.250020 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.250020;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8773, decl_uid=191714, cgraph_uid=5405, symbol_order=6198)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.250043;
  bool D.250041;

  <bb 2> :
  D.250043 = hash_map<tree_node*, function_relate_array>::hash_entry::is_empty (v);
  D.250041 = D.250043;

  <bb 3> :
<L0>:
  return D.250041;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8545, decl_uid=191544, cgraph_uid=5177, symbol_order=5970)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_relate_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.250046;
  bool D.250044;

  <bb 2> :
  D.250046 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (e);
  D.250044 = D.250046;

  <bb 3> :
<L0>:
  return D.250044;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8774, decl_uid=191712, cgraph_uid=5406, symbol_order=6199)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.250049;
  bool D.250047;

  <bb 2> :
  D.250049 = hash_map<tree_node*, function_relate_array>::hash_entry::is_deleted (v);
  D.250047 = D.250049;

  <bb 3> :
<L0>:
  return D.250047;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9608, decl_uid=191539, cgraph_uid=6240, symbol_order=7033)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_relate_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.250052;
  bool D.250050;

  <bb 2> :
  D.250052 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_deleted<hash_map<tree_node*, function_relate_array>::hash_entry> (e);
  D.250050 = D.250052;

  <bb 3> :
<L0>:
  return D.250050;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_deleted<hash_map<tree_node*, function_relate_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10220, decl_uid=237801, cgraph_uid=6852, symbol_order=7649)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_deleted<hash_map<tree_node*, function_relate_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.250053;

  <bb 2> :
  _1 = entry->m_key;
  D.250053 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.250053;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9300, decl_uid=191532, cgraph_uid=5932, symbol_order=6725)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_relate_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.250057;
  bool D.250055;

  <bb 2> :
  _1 = &a->m_key;
  D.250057 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::equal_keys (_1, b);
  D.250055 = D.250057;

  <bb 3> :
<L0>:
  return D.250055;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE10equal_keysERKS2_S7_, funcdef_no=10015, decl_uid=191433, cgraph_uid=6647, symbol_order=7444)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.250058;

  <bb 2> :
  D.250058 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.250058;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8526, decl_uid=212223, cgraph_uid=5158, symbol_order=5951)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::is_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.250060;

  <bb 2> :
  _1 = entry->m_key;
  D.250060 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.250060;

}



;; Function function_relate_array::operator= (_ZN21function_relate_arrayaSERKS_, funcdef_no=6314, decl_uid=191854, cgraph_uid=3289, symbol_order=4067)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_relate_array & function_relate_array::operator= (struct function_relate_array * const this, const struct function_relate_array & D.191855)
{
  struct function_relate_array & D.250062;

  <bb 2> :
  _1 = &D.191855->relate_type_array;
  _2 = &this->relate_type_array;
  std::vector<relate_type>::operator= (_2, _1);
  D.250062 = this;

  <bb 3> :
<L0>:
  return D.250062;

}



;; Function std::vector<relate_type>::operator= (_ZNSt6vectorI11relate_typeSaIS0_EEaSERKS2_, funcdef_no=7661, decl_uid=179385, cgraph_uid=4295, symbol_order=5084)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<relate_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct relate_type * D.250097;
  struct relate_type * __tmp;
  const size_type __xlen;
  struct vector & D.250095;
  struct __normal_iterator D.250092;
  struct __normal_iterator D.250091;
  struct __normal_iterator D.250090;
  struct __normal_iterator D.250089;
  struct __normal_iterator D.250088;
  bool retval.360;
  struct __normal_iterator D.250083;
  struct __normal_iterator D.250082;
  bool retval.359;
  bool iftmp.358;
  bool retval.357;
  bool retval.356;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.356 = __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_propagate_on_copy_assign ();
  if (retval.356 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.179807;
  _4 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.179807;
  _6 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.358 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.358 = 0;

  <bb 8> :
  retval.357 = iftmp.358;
  if (retval.357 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<relate_type>::clear (this);
  _8 = &this->D.179807;
  _9 = this->D.179807._M_impl.D.179152._M_end_of_storage;
  _10 = this->D.179807._M_impl.D.179152._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 48;
  _13 = (long unsigned int) _12;
  _14 = this->D.179807._M_impl.D.179152._M_start;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (_8, _14, _13);
  this->D.179807._M_impl.D.179152._M_start = 0B;
  this->D.179807._M_impl.D.179152._M_finish = 0B;
  this->D.179807._M_impl.D.179152._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.179807;
  _16 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.179807;
  _18 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<relate_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<relate_type>::size (__x);
  _19 = std::vector<relate_type>::capacity (this);
  retval.359 = __xlen > _19;
  if (retval.359 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.250082 = std::vector<relate_type>::end (__x);
  D.250083 = std::vector<relate_type>::begin (__x);
  D.250097 = std::vector<relate_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (this, __xlen, D.250083, D.250082);
  __tmp = D.250097;
  _20 = &this->D.179807;
  _21 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.179807._M_impl.D.179152._M_finish;
  _23 = this->D.179807._M_impl.D.179152._M_start;
  std::_Destroy<relate_type*, relate_type> (_23, _22, _21);
  _24 = &this->D.179807;
  _25 = this->D.179807._M_impl.D.179152._M_end_of_storage;
  _26 = this->D.179807._M_impl.D.179152._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 48;
  _29 = (long unsigned int) _28;
  _30 = this->D.179807._M_impl.D.179152._M_start;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (_24, _30, _29);
  this->D.179807._M_impl.D.179152._M_start = __tmp;
  _31 = this->D.179807._M_impl.D.179152._M_start;
  _32 = __xlen * 48;
  _33 = _31 + _32;
  this->D.179807._M_impl.D.179152._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<relate_type>::size (this);
  retval.360 = __xlen <= _34;
  if (retval.360 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.179807;
  _36 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_35);
  D.250088 = std::vector<relate_type>::end (this);
  D.250089 = std::vector<relate_type>::begin (this);
  D.250090 = std::vector<relate_type>::end (__x);
  D.250091 = std::vector<relate_type>::begin (__x);
  D.250092 = std::copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (D.250091, D.250090, D.250089);
  std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type> (D.250092, D.250088, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.179807._M_impl.D.179152._M_start;
  _38 = __x->D.179807._M_impl.D.179152._M_start;
  _39 = std::vector<relate_type>::size (this);
  _40 = _39 * 48;
  _41 = _38 + _40;
  _42 = __x->D.179807._M_impl.D.179152._M_start;
  std::copy<relate_type*, relate_type*> (_42, _41, _37);
  _43 = &this->D.179807;
  _44 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.179807._M_impl.D.179152._M_finish;
  _46 = __x->D.179807._M_impl.D.179152._M_finish;
  _47 = __x->D.179807._M_impl.D.179152._M_start;
  _48 = std::vector<relate_type>::size (this);
  _49 = _48 * 48;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<relate_type*, relate_type*, relate_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.179807._M_impl.D.179152._M_start;
  _52 = __xlen * 48;
  _53 = _51 + _52;
  this->D.179807._M_impl.D.179152._M_finish = _53;

  <bb 17> :
  D.250095 = this;

  <bb 18> :
<L19>:
  return D.250095;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI11relate_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7662, decl_uid=179019, cgraph_uid=4293, symbol_order=5082)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_propagate_on_copy_assign ()
{
  bool D.250098;

  <bb 2> :
  D.250098 = 0;

  <bb 3> :
<L0>:
  return D.250098;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI11relate_typeES1_E15_S_always_equalEv, funcdef_no=7663, decl_uid=179022, cgraph_uid=4294, symbol_order=5083)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_always_equal ()
{
  bool D.250100;

  <bb 2> :
  D.250100 = 1;

  <bb 3> :
<L0>:
  return D.250100;

}



;; Function std::operator!= (_ZStneRKSaI11relate_typeES2_, funcdef_no=8528, decl_uid=178905, cgraph_uid=5160, symbol_order=5953)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.222838, const struct allocator & D.222839)
{
  bool D.250102;

  <bb 2> :
  D.250102 = 0;

  <bb 3> :
<L0>:
  return D.250102;

}



;; Function std::vector<relate_type>::clear (_ZNSt6vectorI11relate_typeSaIS0_EE5clearEv, funcdef_no=8529, decl_uid=179537, cgraph_uid=5161, symbol_order=5954)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<relate_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.179807._M_impl.D.179152._M_start;
  std::vector<relate_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<relate_type>::_M_erase_at_end (_ZNSt6vectorI11relate_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9301, decl_uid=179665, cgraph_uid=5933, symbol_order=6726)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<relate_type>::_M_erase_at_end (struct vector * const this, struct relate_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.179807._M_impl.D.179152._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 48;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.179807;
  _5 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.179807._M_impl.D.179152._M_finish;
  std::_Destroy<relate_type*, relate_type> (__pos, _6, _5);
  this->D.179807._M_impl.D.179152._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI11relate_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8527, decl_uid=179042, cgraph_uid=5159, symbol_order=5952)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.250107;

  <bb 2> :
  D.250107 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.250107;

}



;; Function std::__alloc_on_copy<std::allocator<relate_type> > (_ZSt15__alloc_on_copyISaI11relate_typeEEvRT_RKS2_, funcdef_no=8530, decl_uid=212248, cgraph_uid=5162, symbol_order=5955)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<relate_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<relate_type>::capacity (_ZNKSt6vectorI11relate_typeSaIS0_EE8capacityEv, funcdef_no=8531, decl_uid=179453, cgraph_uid=5163, symbol_order=5956)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<relate_type>::capacity (const struct vector * const this)
{
  size_type D.250109;

  <bb 2> :
  _1 = this->D.179807._M_impl.D.179152._M_end_of_storage;
  _2 = this->D.179807._M_impl.D.179152._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 48;
  D.250109 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.250109;

}



;; Function std::vector<relate_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (_ZNSt6vectorI11relate_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8534, decl_uid=212348, cgraph_uid=5166, symbol_order=5959)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct relate_type * std::vector<relate_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct relate_type * D.250113;
  struct relate_type * __result;
  struct relate_type * D.250111;

  <bb 2> :
  _1 = &this->D.179807;
  D.250113 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_allocate (_1, __n);
  __result = D.250113;
  _2 = &this->D.179807;
  _3 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*, relate_type> (__first, __last, __result, _3);

  <bb 3> :
  D.250111 = __result;

  <bb 4> :
<L0>:
  return D.250111;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.179807;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_allocate (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE11_M_allocateEm, funcdef_no=9305, decl_uid=179156, cgraph_uid=5937, symbol_order=6730)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct relate_type * std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct relate_type * D.250123;
  struct relate_type * iftmp.361;
  struct relate_type * D.250117;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.250123 = std::allocator_traits<std::allocator<relate_type> >::allocate (_1, __n);
  iftmp.361 = D.250123;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.361 = 0B;

  <bb 5> :
  D.250117 = iftmp.361;

  <bb 6> :
<L3>:
  return D.250117;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::allocate (_ZNSt16allocator_traitsISaI11relate_typeEE8allocateERS1_m, funcdef_no=10016, decl_uid=178957, cgraph_uid=6648, symbol_order=7445)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct relate_type * std::allocator_traits<std::allocator<relate_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct relate_type * D.250126;
  struct relate_type * D.250124;

  <bb 2> :
  D.250126 = __gnu_cxx::new_allocator<relate_type>::allocate (__a, __n, 0B);
  D.250124 = D.250126;

  <bb 3> :
<L0>:
  return D.250124;

}



;; Function __gnu_cxx::new_allocator<relate_type>::allocate (_ZN9__gnu_cxx13new_allocatorI11relate_typeE8allocateEmPKv, funcdef_no=10543, decl_uid=178811, cgraph_uid=7176, symbol_order=7973)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct relate_type * __gnu_cxx::new_allocator<relate_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.245370)
{
  struct relate_type * D.250137;
  struct relate_type * D.250136;
  align_val_t __al;
  struct relate_type * D.250134;
  bool retval.362;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<relate_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.362 = _4 != 0;
  if (retval.362 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 384307168202282325)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 48;
  D.250137 = operator new (_6);
  D.250134 = D.250137;

  <bb 7> :
<L6>:
  return D.250134;

}



;; Function __gnu_cxx::new_allocator<relate_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI11relate_typeE11_M_max_sizeEv, funcdef_no=10544, decl_uid=178838, cgraph_uid=7175, symbol_order=7972)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<relate_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.250138;

  <bb 2> :
  D.250138 = 192153584101141162;

  <bb 3> :
<L0>:
  return D.250138;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*, relate_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=9306, decl_uid=222880, cgraph_uid=5938, symbol_order=6731)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*, relate_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct relate_type * __result, struct allocator & D.234881)
{
  struct relate_type * D.250142;
  struct relate_type * D.250140;

  <bb 2> :
  D.250142 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (__first, __last, __result);
  D.250140 = D.250142;

  <bb 3> :
<L0>:
  return D.250140;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10017, decl_uid=234883, cgraph_uid=6649, symbol_order=7446)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct relate_type * __result)
{
  struct relate_type * D.250145;
  const bool __assignable;
  struct relate_type * D.250143;

  <bb 2> :
  __assignable = 1;
  D.250145 = std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (__first, __last, __result);
  D.250143 = D.250145;

  <bb 3> :
<L0>:
  return D.250143;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10545, decl_uid=241930, cgraph_uid=7177, symbol_order=7974)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct relate_type * std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct relate_type * __result)
{
  struct relate_type * __cur;
  struct relate_type * D.250147;
  bool retval.363;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator* (&__first);
  _2 = std::__addressof<relate_type> (__cur);
  std::_Construct<relate_type, const relate_type&> (_2, _1);
  __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator++ (&__first);
  __cur = __cur + 48;

  <bb 4> :
  retval.363 = __gnu_cxx::operator!=<const relate_type*, std::vector<relate_type> > (&__first, &__last);
  if (retval.363 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.250147 = __cur;

  <bb 6> :
<L3>:
  return D.250147;

}



;; Function __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS1_SaIS1_EEEdeEv, funcdef_no=10859, decl_uid=212286, cgraph_uid=7491, symbol_order=8290)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct relate_type & __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator* (const struct __normal_iterator * const this)
{
  const struct relate_type & D.250149;

  <bb 2> :
  D.250149 = this->_M_current;

  <bb 3> :
<L0>:
  return D.250149;

}



;; Function std::__addressof<relate_type> (_ZSt11__addressofI11relate_typeEPT_RS1_, funcdef_no=10550, decl_uid=223378, cgraph_uid=7182, symbol_order=7979)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__addressof<relate_type> (struct relate_type & __r)
{
  struct relate_type * D.250151;

  <bb 2> :
  D.250151 = __r;

  <bb 3> :
<L0>:
  return D.250151;

}



;; Function std::_Construct<relate_type, const relate_type&> (_ZSt10_ConstructI11relate_typeJRKS0_EEvPT_DpOT0_, funcdef_no=10860, decl_uid=245398, cgraph_uid=7492, symbol_order=8291)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<relate_type, const relate_type&> (struct relate_type * __p, const struct relate_type & __args#0)
{
  void * D.246784;
  void * D.246783;
  const struct relate_type * D.246785;

  <bb 2> :
  D.246785 = std::forward<const relate_type&> (__args#0);
  D.246783 = __p;
  D.246784 = operator new (48, D.246783);
  MEM[(struct relate_type *)D.246784] = *D.246785;
  return;

}



;; Function std::forward<const relate_type&> (_ZSt7forwardIRK11relate_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9315, decl_uid=222993, cgraph_uid=5947, symbol_order=6740)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct relate_type & std::forward<const relate_type&> (const struct type & __t)
{
  const struct relate_type & D.250153;

  <bb 2> :
  D.250153 = __t;

  <bb 3> :
<L0>:
  return D.250153;

}



;; Function __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS1_SaIS1_EEEppEv, funcdef_no=10858, decl_uid=212290, cgraph_uid=7490, symbol_order=8289)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.250155;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 48;
  this->_M_current = _2;
  D.250155 = this;

  <bb 3> :
<L0>:
  return D.250155;

}



;; Function __gnu_cxx::operator!=<const relate_type*, std::vector<relate_type> > (_ZN9__gnu_cxxneIPK11relate_typeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_, funcdef_no=10857, decl_uid=245391, cgraph_uid=7489, symbol_order=8288)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<const relate_type*, std::vector<relate_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.250157;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::base (__rhs);
  _4 = *_3;
  D.250157 = _2 != _4;

  <bb 3> :
<L0>:
  return D.250157;

}



;; Function __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10546, decl_uid=212315, cgraph_uid=7178, symbol_order=7975)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct relate_type * const & __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::base (const struct __normal_iterator * const this)
{
  const struct relate_type * const & D.250159;

  <bb 2> :
  D.250159 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.250159;

}



;; Function std::_Destroy<relate_type*, relate_type> (_ZSt8_DestroyIP11relate_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8523, decl_uid=212207, cgraph_uid=5155, symbol_order=5948)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<relate_type*, relate_type> (struct relate_type * __first, struct relate_type * __last, struct allocator & D.222818)
{
  <bb 2> :
  std::_Destroy<relate_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<relate_type*> (_ZSt8_DestroyIP11relate_typeEvT_S2_, funcdef_no=9298, decl_uid=222820, cgraph_uid=5930, symbol_order=6723)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<relate_type*> (struct relate_type * __first, struct relate_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<relate_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<relate_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP11relate_typeEEvT_S4_, funcdef_no=10012, decl_uid=234851, cgraph_uid=6644, symbol_order=7441)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<relate_type*> (struct relate_type * D.241871, struct relate_type * D.241872)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8521, decl_uid=179159, cgraph_uid=5153, symbol_order=5946)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (struct _Vector_base * const this, struct relate_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<relate_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::deallocate (_ZNSt16allocator_traitsISaI11relate_typeEE10deallocateERS1_PS0_m, funcdef_no=9297, decl_uid=178964, cgraph_uid=5929, symbol_order=6722)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<relate_type> >::deallocate (struct allocator_type & __a, struct relate_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<relate_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI11relate_typeE10deallocateEPS1_m, funcdef_no=10011, decl_uid=178815, cgraph_uid=6643, symbol_order=7440)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::deallocate (struct new_allocator * const this, struct relate_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 48;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<relate_type>::end (_ZNSt6vectorI11relate_typeSaIS0_EE3endEv, funcdef_no=7810, decl_uid=179420, cgraph_uid=4442, symbol_order=5231)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<relate_type>::end (struct vector * const this)
{
  struct iterator D.215804;
  struct iterator D.250167;

  <bb 2> :
  _1 = &this->D.179807._M_impl.D.179152._M_finish;
  __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::__normal_iterator (&D.215804, _1);
  D.250167 = D.215804;
  D.215804 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250167;

}



;; Function __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=8770, decl_uid=202776, cgraph_uid=5402, symbol_order=6195)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::__normal_iterator (struct __normal_iterator * const this, struct relate_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<relate_type>::begin (_ZNSt6vectorI11relate_typeSaIS0_EE5beginEv, funcdef_no=7809, decl_uid=179416, cgraph_uid=4441, symbol_order=5230)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<relate_type>::begin (struct vector * const this)
{
  struct iterator D.215802;
  struct iterator D.250170;

  <bb 2> :
  _1 = &this->D.179807._M_impl.D.179152._M_start;
  __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::__normal_iterator (&D.215802, _1);
  D.250170 = D.215802;
  D.215802 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250170;

}



;; Function std::vector<relate_type>::end (_ZNKSt6vectorI11relate_typeSaIS0_EE3endEv, funcdef_no=8533, decl_uid=179422, cgraph_uid=5165, symbol_order=5958)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<relate_type>::end (const struct vector * const this)
{
  struct const_iterator D.222874;
  struct const_iterator D.250173;

  <bb 2> :
  _1 = &this->D.179807._M_impl.D.179152._M_finish;
  __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::__normal_iterator (&D.222874, _1);
  D.250173 = D.222874;
  D.222874 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250173;

}



;; Function __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9303, decl_uid=212328, cgraph_uid=5935, symbol_order=6728)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::__normal_iterator (struct __normal_iterator * const this, const struct relate_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<relate_type>::begin (_ZNKSt6vectorI11relate_typeSaIS0_EE5beginEv, funcdef_no=8532, decl_uid=179418, cgraph_uid=5164, symbol_order=5957)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<relate_type>::begin (const struct vector * const this)
{
  struct const_iterator D.222872;
  struct const_iterator D.250176;

  <bb 2> :
  _1 = &this->D.179807._M_impl.D.179152._M_start;
  __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::__normal_iterator (&D.222872, _1);
  D.250176 = D.222872;
  D.222872 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250176;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8535, decl_uid=212356, cgraph_uid=5167, symbol_order=5960)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.250181;
  struct __normal_iterator D.250180;
  struct __normal_iterator D.250179;

  <bb 2> :
  D.250180 = std::__miter_base<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (__last);
  D.250181 = std::__miter_base<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (__first);
  D.250179 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (D.250181, D.250180, __result);

  <bb 3> :
<L0>:
  return D.250179;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9307, decl_uid=222914, cgraph_uid=5939, symbol_order=6732)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.250183;

  <bb 2> :
  D.250183 = __it;

  <bb 3> :
<L0>:
  return D.250183;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK11relate_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9308, decl_uid=222920, cgraph_uid=5941, symbol_order=6734)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct relate_type * D.250187;
  struct __normal_iterator D.250185;

  <bb 2> :
  _1 = std::__niter_base<relate_type*, std::vector<relate_type> > (__result);
  _2 = std::__niter_base<const relate_type*, std::vector<relate_type> > (__last);
  _3 = std::__niter_base<const relate_type*, std::vector<relate_type> > (__first);
  D.250187 = std::__copy_move_a1<false, const relate_type*, relate_type*> (_3, _2, _1);
  _4 = D.250187;
  D.250185 = std::__niter_wrap<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.250185;

}



;; Function std::__niter_base<relate_type*, std::vector<relate_type> > (_ZSt12__niter_baseIP11relate_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10019, decl_uid=235049, cgraph_uid=6651, symbol_order=7448)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__niter_base<relate_type*, std::vector<relate_type> > (struct __normal_iterator __it)
{
  struct relate_type * D.250188;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (&__it);
  D.250188 = *_1;

  <bb 3> :
<L0>:
  return D.250188;

}



;; Function __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=8772, decl_uid=202763, cgraph_uid=5404, symbol_order=6197)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * const & __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (const struct __normal_iterator * const this)
{
  struct relate_type * const & D.250190;

  <bb 2> :
  D.250190 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.250190;

}



;; Function std::__niter_base<const relate_type*, std::vector<relate_type> > (_ZSt12__niter_baseIPK11relate_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10018, decl_uid=234898, cgraph_uid=6650, symbol_order=7447)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct relate_type * std::__niter_base<const relate_type*, std::vector<relate_type> > (struct __normal_iterator __it)
{
  const struct relate_type * D.250192;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >::base (&__it);
  D.250192 = *_1;

  <bb 3> :
<L0>:
  return D.250192;

}



;; Function std::__copy_move_a1<false, const relate_type*, relate_type*> (_ZSt14__copy_move_a1ILb0EPK11relate_typePS0_ET1_T0_S5_S4_, funcdef_no=10020, decl_uid=235052, cgraph_uid=6652, symbol_order=7449)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__copy_move_a1<false, const relate_type*, relate_type*> (const struct relate_type * __first, const struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.250196;
  struct relate_type * D.250194;

  <bb 2> :
  D.250196 = std::__copy_move_a2<false, const relate_type*, relate_type*> (__first, __last, __result);
  D.250194 = D.250196;

  <bb 3> :
<L0>:
  return D.250194;

}



;; Function std::__copy_move_a2<false, const relate_type*, relate_type*> (_ZSt14__copy_move_a2ILb0EPK11relate_typePS0_ET1_T0_S5_S4_, funcdef_no=10547, decl_uid=241944, cgraph_uid=7179, symbol_order=7976)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__copy_move_a2<false, const relate_type*, relate_type*> (const struct relate_type * __first, const struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.250197;

  <bb 2> :
  D.250197 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<relate_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.250197;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<relate_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI11relate_typeEEPT_PKS4_S7_S5_, funcdef_no=10861, decl_uid=245422, cgraph_uid=7493, symbol_order=8292)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct relate_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<relate_type> (const struct relate_type * __first, const struct relate_type * __last, struct relate_type * __result)
{
  const ptrdiff_t _Num;
  struct relate_type * D.250202;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 48;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.364_2 = (long unsigned int) _Num;
  _3 = _Num.364_2 * 48;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.365_4 = (long unsigned int) _Num;
  _5 = _Num.365_4 * 48;
  D.250202 = __result + _5;

  <bb 5> :
<L3>:
  return D.250202;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10021, decl_uid=235056, cgraph_uid=6653, symbol_order=7450)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type*> (struct __normal_iterator __from, struct relate_type * __res)
{
  struct __normal_iterator D.250204;

  <bb 2> :
  _1 = std::__niter_base<relate_type*, std::vector<relate_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 48;
  D.250204 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.250204;

}



;; Function __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10548, decl_uid=202754, cgraph_uid=7180, symbol_order=7977)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct relate_type * const D.245428;
  struct __normal_iterator D.245429;
  struct __normal_iterator D.250206;

  <bb 2> :
  _1 = this->_M_current;
  __n.366_2 = (long unsigned int) __n;
  _3 = __n.366_2 * 48;
  _4 = _1 + _3;
  D.245428 = _4;
  __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::__normal_iterator (&D.245429, &D.245428);
  D.250206 = D.245429;
  D.245429 = {CLOBBER};
  D.245428 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.250206;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8536, decl_uid=212362, cgraph_uid=5168, symbol_order=5961)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >, relate_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.222949)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9310, decl_uid=222951, cgraph_uid=5942, symbol_order=6735)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10022, decl_uid=235080, cgraph_uid=6654, symbol_order=7451)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> > > (struct __normal_iterator D.241953, struct __normal_iterator D.241954)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<relate_type*, relate_type*> (_ZSt4copyIP11relate_typeS1_ET0_T_S3_S2_, funcdef_no=8537, decl_uid=212370, cgraph_uid=5169, symbol_order=5962)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::copy<relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.250212;
  struct relate_type * D.250210;

  <bb 2> :
  _1 = std::__miter_base<relate_type*> (__last);
  _2 = std::__miter_base<relate_type*> (__first);
  D.250212 = std::__copy_move_a<false, relate_type*, relate_type*> (_2, _1, __result);
  D.250210 = D.250212;

  <bb 3> :
<L0>:
  return D.250210;

}



;; Function std::__miter_base<relate_type*> (_ZSt12__miter_baseIP11relate_typeET_S2_, funcdef_no=9311, decl_uid=222967, cgraph_uid=5943, symbol_order=6736)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__miter_base<relate_type*> (struct relate_type * __it)
{
  struct relate_type * D.250213;

  <bb 2> :
  D.250213 = __it;

  <bb 3> :
<L0>:
  return D.250213;

}



;; Function std::__copy_move_a<false, relate_type*, relate_type*> (_ZSt13__copy_move_aILb0EP11relate_typeS1_ET1_T0_S3_S2_, funcdef_no=9312, decl_uid=222969, cgraph_uid=5944, symbol_order=6737)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__copy_move_a<false, relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.250217;
  struct relate_type * D.250215;

  <bb 2> :
  __result.367_1 = __result;
  _2 = std::__niter_base<relate_type*> (__result.367_1);
  _3 = std::__niter_base<relate_type*> (__last);
  _4 = std::__niter_base<relate_type*> (__first);
  D.250217 = std::__copy_move_a1<false, relate_type*, relate_type*> (_4, _3, _2);
  _5 = D.250217;
  D.250215 = std::__niter_wrap<relate_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.250215;

}



;; Function std::__niter_base<relate_type*> (_ZSt12__niter_baseIP11relate_typeET_S2_, funcdef_no=10023, decl_uid=223177, cgraph_uid=6655, symbol_order=7452)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__niter_base<relate_type*> (struct relate_type * __it)
{
  struct relate_type * D.250218;

  <bb 2> :
  D.250218 = __it;

  <bb 3> :
<L0>:
  return D.250218;

}



;; Function std::__copy_move_a1<false, relate_type*, relate_type*> (_ZSt14__copy_move_a1ILb0EP11relate_typeS1_ET1_T0_S3_S2_, funcdef_no=10024, decl_uid=235091, cgraph_uid=6656, symbol_order=7453)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__copy_move_a1<false, relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.250222;
  struct relate_type * D.250220;

  <bb 2> :
  D.250222 = std::__copy_move_a2<false, relate_type*, relate_type*> (__first, __last, __result);
  D.250220 = D.250222;

  <bb 3> :
<L0>:
  return D.250220;

}



;; Function std::__copy_move_a2<false, relate_type*, relate_type*> (_ZSt14__copy_move_a2ILb0EP11relate_typeS1_ET1_T0_S3_S2_, funcdef_no=10549, decl_uid=241962, cgraph_uid=7181, symbol_order=7978)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__copy_move_a2<false, relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.250223;

  <bb 2> :
  D.250223 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<relate_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.250223;

}



;; Function std::__niter_wrap<relate_type*> (_ZSt12__niter_wrapIP11relate_typeET_RKS2_S2_, funcdef_no=10025, decl_uid=235095, cgraph_uid=6657, symbol_order=7454)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__niter_wrap<relate_type*> (struct relate_type * const & D.241966, struct relate_type * __res)
{
  struct relate_type * D.250225;

  <bb 2> :
  D.250225 = __res;

  <bb 3> :
<L0>:
  return D.250225;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8522, decl_uid=179040, cgraph_uid=5154, symbol_order=5947)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.250227;

  <bb 2> :
  D.250227 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.250227;

}



;; Function std::vector<relate_type>::size (_ZNKSt6vectorI11relate_typeSaIS0_EE4sizeEv, funcdef_no=7807, decl_uid=179440, cgraph_uid=4439, symbol_order=5228)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<relate_type>::size (const struct vector * const this)
{
  size_type D.250229;

  <bb 2> :
  _1 = this->D.179807._M_impl.D.179152._M_finish;
  _2 = this->D.179807._M_impl.D.179152._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 48;
  D.250229 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.250229;

}



;; Function std::__uninitialized_copy_a<relate_type*, relate_type*, relate_type> (_ZSt22__uninitialized_copy_aIP11relate_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8538, decl_uid=212374, cgraph_uid=5170, symbol_order=5963)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__uninitialized_copy_a<relate_type*, relate_type*, relate_type> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result, struct allocator & D.222976)
{
  struct relate_type * D.250233;
  struct relate_type * D.250231;

  <bb 2> :
  D.250233 = std::uninitialized_copy<relate_type*, relate_type*> (__first, __last, __result);
  D.250231 = D.250233;

  <bb 3> :
<L0>:
  return D.250231;

}



;; Function std::uninitialized_copy<relate_type*, relate_type*> (_ZSt18uninitialized_copyIP11relate_typeS1_ET0_T_S3_S2_, funcdef_no=9313, decl_uid=222978, cgraph_uid=5946, symbol_order=6739)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::uninitialized_copy<relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * D.250236;
  const bool __assignable;
  struct relate_type * D.250234;

  <bb 2> :
  __assignable = 1;
  D.250236 = std::__uninitialized_copy<false>::__uninit_copy<relate_type*, relate_type*> (__first, __last, __result);
  D.250234 = D.250236;

  <bb 3> :
<L0>:
  return D.250234;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<relate_type*, relate_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP11relate_typeS3_EET0_T_S5_S4_, funcdef_no=10026, decl_uid=235194, cgraph_uid=6658, symbol_order=7455)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct relate_type * std::__uninitialized_copy<false>::__uninit_copy<relate_type*, relate_type*> (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result)
{
  struct relate_type * __cur;
  struct relate_type * D.250237;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<relate_type> (__cur);
  std::_Construct<relate_type, relate_type&> (_1, __first);
  __first = __first + 48;
  __cur = __cur + 48;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.250237 = __cur;

  <bb 6> :
<L3>:
  return D.250237;

}



;; Function std::_Construct<relate_type, relate_type&> (_ZSt10_ConstructI11relate_typeJRS0_EEvPT_DpOT0_, funcdef_no=10551, decl_uid=241974, cgraph_uid=7183, symbol_order=7980)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<relate_type, relate_type&> (struct relate_type * __p, struct relate_type & __args#0)
{
  void * D.245452;
  void * D.245451;
  const struct relate_type * D.245453;

  <bb 2> :
  D.245453 = std::forward<relate_type&> (__args#0);
  D.245451 = __p;
  D.245452 = operator new (48, D.245451);
  MEM[(struct relate_type *)D.245452] = *D.245453;
  return;

}



;; Function std::forward<relate_type&> (_ZSt7forwardIR11relate_typeEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=10862, decl_uid=245449, cgraph_uid=7494, symbol_order=8293)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct relate_type & std::forward<relate_type&> (struct type & __t)
{
  struct relate_type & D.250239;

  <bb 2> :
  D.250239 = __t;

  <bb 3> :
<L0>:
  return D.250239;

}



;; Function relate_type::relate_type (_ZN11relate_typeC2Ev, funcdef_no=6316, decl_uid=191866, cgraph_uid=3291, symbol_order=4069)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void relate_type::relate_type (struct relate_type * const this)
{
  <bb 2> :
  this->now_fucntion = 0;
  this->now_stmt = 0;
  this->now_basicblock = 0;
  return;

}



;; Function std::vector<relate_type>::push_back (_ZNSt6vectorI11relate_typeSaIS0_EE9push_backERKS0_, funcdef_no=7664, decl_uid=179487, cgraph_uid=4297, symbol_order=5086)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<relate_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.250244;

  <bb 2> :
  _1 = this->D.179807._M_impl.D.179152._M_finish;
  _2 = this->D.179807._M_impl.D.179152._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.179807._M_impl.D.179152._M_finish;
  _4 = &this->D.179807._M_impl;
  std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, const relate_type&> (_4, _3, __x);
  _5 = this->D.179807._M_impl.D.179152._M_finish;
  _6 = _5 + 48;
  this->D.179807._M_impl.D.179152._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.250244 = std::vector<relate_type>::end (this);
  std::vector<relate_type>::_M_realloc_insert<const relate_type&> (this, D.250244, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, const relate_type&> (_ZNSt16allocator_traitsISaI11relate_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8539, decl_uid=212386, cgraph_uid=5171, symbol_order=5964)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, const relate_type&> (struct allocator_type & __a, struct relate_type * __p, const struct relate_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const relate_type&> (__args#0);
  __gnu_cxx::new_allocator<relate_type>::construct<relate_type, const relate_type&> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::construct<relate_type, const relate_type&> (_ZN9__gnu_cxx13new_allocatorI11relate_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9316, decl_uid=222995, cgraph_uid=5948, symbol_order=6741)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::construct<relate_type, const relate_type&> (struct new_allocator * const this, struct relate_type * __p, const struct relate_type & __args#0)
{
  void * D.235206;
  void * D.235205;
  const struct relate_type * D.235207;

  <bb 2> :
  D.235207 = std::forward<const relate_type&> (__args#0);
  D.235205 = __p;
  D.235206 = operator new (48, D.235205);
  MEM[(struct relate_type *)D.235206] = *D.235207;
  return;

}



;; Function std::vector<relate_type>::_M_realloc_insert<const relate_type&> (_ZNSt6vectorI11relate_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8540, decl_uid=212555, cgraph_uid=5175, symbol_order=5968)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<relate_type>::_M_realloc_insert<const relate_type&> (struct vector * const this, struct iterator __position, const struct relate_type & __args#0)
{
  struct relate_type * D.250249;
  const size_type D.250248;
  struct relate_type * __new_finish;
  struct relate_type * __new_start;
  const size_type __elems_before;
  struct relate_type * __old_finish;
  struct relate_type * __old_start;
  const size_type __len;
  struct iterator D.223006;

  <bb 2> :
  D.250248 = std::vector<relate_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.250248;
  __old_start = this->D.179807._M_impl.D.179152._M_start;
  __old_finish = this->D.179807._M_impl.D.179152._M_finish;
  D.223006 = std::vector<relate_type>::begin (this);
  _1 = __gnu_cxx::operator-<relate_type*, std::vector<relate_type> > (&__position, &D.223006);
  __elems_before = (const size_type) _1;
  D.223006 = {CLOBBER};
  _2 = &this->D.179807;
  D.250249 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_allocate (_2, __len);
  __new_start = D.250249;
  __new_finish = __new_start;
  _3 = std::forward<const relate_type&> (__args#0);
  _4 = __elems_before * 48;
  _5 = __new_start + _4;
  _6 = &this->D.179807._M_impl;
  std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, const relate_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.179807;
  _8 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<relate_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 48;
  _11 = &this->D.179807;
  _12 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<relate_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.179807;
  _23 = this->D.179807._M_impl.D.179152._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 48;
  _26 = (long unsigned int) _25;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.179807._M_impl.D.179152._M_start = __new_start;
  this->D.179807._M_impl.D.179152._M_finish = __new_finish;
  _27 = __len * 48;
  _28 = __new_start + _27;
  this->D.179807._M_impl.D.179152._M_end_of_storage = _28;
  return;

}



;; Function std::vector<relate_type>::_M_check_len (_ZNKSt6vectorI11relate_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9317, decl_uid=179656, cgraph_uid=5949, symbol_order=6742)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<relate_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.370;
  size_type D.250253;
  const long unsigned int D.235212;
  bool retval.368;

  <bb 2> :
  _1 = std::vector<relate_type>::max_size (this);
  _2 = std::vector<relate_type>::size (this);
  _3 = _1 - _2;
  __n.369_4 = __n;
  retval.368 = _3 < __n.369_4;
  if (retval.368 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<relate_type>::size (this);
  _6 = std::vector<relate_type>::size (this);
  D.235212 = _6;
  _7 = std::max<long unsigned int> (&D.235212, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.235212 = {CLOBBER};
  _9 = std::vector<relate_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<relate_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.370 = std::vector<relate_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.370 = __len;

  <bb 8> :
  D.250253 = iftmp.370;

  <bb 9> :
<L6>:
  return D.250253;

}



;; Function std::vector<relate_type>::max_size (_ZNKSt6vectorI11relate_typeSaIS0_EE8max_sizeEv, funcdef_no=10027, decl_uid=179442, cgraph_uid=6659, symbol_order=7456)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<relate_type>::max_size (const struct vector * const this)
{
  size_type D.250260;

  <bb 2> :
  _1 = &this->D.179807;
  _2 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_1);
  D.250260 = std::vector<relate_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.250260;

}



;; Function std::vector<relate_type>::_S_max_size (_ZNSt6vectorI11relate_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10552, decl_uid=179663, cgraph_uid=7184, symbol_order=7981)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<relate_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.250262;

  <bb 2> :
  __diffmax = 192153584101141162;
  _1 = std::allocator_traits<std::allocator<relate_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.250262 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250262;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::max_size (_ZNSt16allocator_traitsISaI11relate_typeEE8max_sizeERKS1_, funcdef_no=10863, decl_uid=178977, cgraph_uid=7495, symbol_order=8294)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<relate_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.250265;

  <bb 2> :
  D.250265 = __gnu_cxx::new_allocator<relate_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.250265;

}



;; Function __gnu_cxx::new_allocator<relate_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI11relate_typeE8max_sizeEv, funcdef_no=10983, decl_uid=178819, cgraph_uid=7615, symbol_order=8414)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<relate_type>::max_size (const struct new_allocator * const this)
{
  size_type D.250267;

  <bb 2> :
  D.250267 = __gnu_cxx::new_allocator<relate_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.250267;

}



;; Function __gnu_cxx::operator-<relate_type*, std::vector<relate_type> > (_ZN9__gnu_cxxmiIP11relate_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9318, decl_uid=223007, cgraph_uid=5950, symbol_order=6743)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<relate_type*, std::vector<relate_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.250269;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.250269 = _5 /[ex] 48;

  <bb 3> :
<L0>:
  return D.250269;

}



;; Function std::vector<relate_type>::_S_relocate (_ZNSt6vectorI11relate_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9319, decl_uid=179314, cgraph_uid=5951, symbol_order=6744)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::vector<relate_type>::_S_relocate (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.250272;
  struct relate_type * D.250271;

  <bb 2> :
  D.250271 = std::vector<relate_type>::_S_do_relocate (__first, __last, __result, __alloc, D.250272);

  <bb 3> :
<L0>:
  return D.250271;

}



;; Function std::vector<relate_type>::_S_do_relocate (_ZNSt6vectorI11relate_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10028, decl_uid=179302, cgraph_uid=6660, symbol_order=7457)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::vector<relate_type>::_S_do_relocate (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.241986)
{
  struct relate_type * D.250274;

  <bb 2> :
  D.250274 = std::__relocate_a<relate_type*, relate_type*, std::allocator<relate_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.250274;

}



;; Function std::__relocate_a<relate_type*, relate_type*, std::allocator<relate_type> > (_ZSt12__relocate_aIP11relate_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10553, decl_uid=223171, cgraph_uid=7185, symbol_order=7982)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * std::__relocate_a<relate_type*, relate_type*, std::allocator<relate_type> > (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result, struct allocator & __alloc)
{
  struct relate_type * D.250276;

  <bb 2> :
  _1 = std::__niter_base<relate_type*> (__result);
  _2 = std::__niter_base<relate_type*> (__last);
  _3 = std::__niter_base<relate_type*> (__first);
  D.250276 = std::__relocate_a_1<relate_type*, relate_type*, std::allocator<relate_type> > (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.250276;

}



;; Function std::__relocate_a_1<relate_type*, relate_type*, std::allocator<relate_type> > (_ZSt14__relocate_a_1IP11relate_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10864, decl_uid=223322, cgraph_uid=7496, symbol_order=8295)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct relate_type * std::__relocate_a_1<relate_type*, relate_type*, std::allocator<relate_type> > (struct relate_type * __first, struct relate_type * __last, struct relate_type * __result, struct allocator & __alloc)
{
  struct relate_type * __cur;
  struct relate_type * D.250278;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<relate_type> (__first);
  _2 = std::__addressof<relate_type> (__cur);
  std::__relocate_object_a<relate_type, relate_type, std::allocator<relate_type> > (_2, _1, __alloc);
  __first = __first + 48;
  __cur = __cur + 48;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.250278 = __cur;

  <bb 6> :
<L3>:
  return D.250278;

}



;; Function std::__relocate_object_a<relate_type, relate_type, std::allocator<relate_type> > (_ZSt19__relocate_object_aI11relate_typeS0_SaIS0_EEvPT_PT0_RT1_, funcdef_no=10984, decl_uid=223351, cgraph_uid=7616, symbol_order=8415)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__relocate_object_a<relate_type, relate_type, std::allocator<relate_type> > (struct relate_type * restrict __dest, struct relate_type * restrict __orig, struct allocator & __alloc)
{
  <bb 2> :
  _1 = std::move<relate_type&> (__orig);
  std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, relate_type> (__alloc, __dest, _1);
  _2 = std::__addressof<relate_type> (__orig);
  std::allocator_traits<std::allocator<relate_type> >::destroy<relate_type> (__alloc, _2);
  return;

}



;; Function std::move<relate_type&> (_ZSt4moveIR11relate_typeEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=11034, decl_uid=223363, cgraph_uid=7666, symbol_order=8465)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<relate_type&> (struct relate_type & __t)
{
  struct type & D.250280;

  <bb 2> :
  D.250280 = __t;

  <bb 3> :
<L0>:
  return D.250280;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, relate_type> (_ZNSt16allocator_traitsISaI11relate_typeEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_, funcdef_no=11035, decl_uid=223365, cgraph_uid=7667, symbol_order=8466)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<relate_type> >::construct<relate_type, relate_type> (struct allocator_type & __a, struct relate_type * __p, struct relate_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<relate_type> (__args#0);
  __gnu_cxx::new_allocator<relate_type>::construct<relate_type, relate_type> (__a, __p, _1);
  return;

}



;; Function std::forward<relate_type> (_ZSt7forwardI11relate_typeEOT_RNSt16remove_referenceIS1_E4typeE, funcdef_no=11056, decl_uid=247716, cgraph_uid=7688, symbol_order=8487)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct relate_type & std::forward<relate_type> (struct type & __t)
{
  struct relate_type & D.250282;

  <bb 2> :
  D.250282 = __t;

  <bb 3> :
<L0>:
  return D.250282;

}



;; Function __gnu_cxx::new_allocator<relate_type>::construct<relate_type, relate_type> (_ZN9__gnu_cxx13new_allocatorI11relate_typeE9constructIS1_JS1_EEEvPT_DpOT0_, funcdef_no=11057, decl_uid=247718, cgraph_uid=7689, symbol_order=8488)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::construct<relate_type, relate_type> (struct new_allocator * const this, struct relate_type * __p, struct relate_type & __args#0)
{
  void * D.248168;
  void * D.248167;
  struct relate_type * D.248169;

  <bb 2> :
  D.248169 = std::forward<relate_type> (__args#0);
  D.248167 = __p;
  D.248168 = operator new (48, D.248167);
  MEM[(struct relate_type *)D.248168] = *D.248169;
  return;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::destroy<relate_type> (_ZNSt16allocator_traitsISaI11relate_typeEE7destroyIS0_EEvRS1_PT_, funcdef_no=9320, decl_uid=223380, cgraph_uid=5952, symbol_order=6745)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<relate_type> >::destroy<relate_type> (struct allocator_type & __a, struct relate_type * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<relate_type>::destroy<relate_type> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::destroy<relate_type> (_ZN9__gnu_cxx13new_allocatorI11relate_typeE7destroyIS1_EEvPT_, funcdef_no=10029, decl_uid=235226, cgraph_uid=6661, symbol_order=7458)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::destroy<relate_type> (struct new_allocator * const this, struct relate_type * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::put (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7666, decl_uid=191471, cgraph_uid=4301, symbol_order=5090)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_relate_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_relate_array & v)
{
  bool D.250291;
  struct hash_entry * D.250290;
  unsigned int D.250289;
  bool ins;
  struct hash_entry * e;
  bool D.250287;
  void * D.212565;
  void * D.212564;

  <bb 2> :
  _1 = &this->m_table;
  D.250289 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::hash (k);
  _2 = D.250289;
  D.250290 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.250290;
  D.250291 = hash_map<tree_node*, function_relate_array>::hash_entry::is_empty (e);
  ins = D.250291;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.212564 = &e->m_value;
  D.212565 = operator new (24, D.212564);
  function_relate_array::function_relate_array (D.212565, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_relate_array::operator= (_4, v);

  <bb 5> :
  D.250287 = ~ins;

  <bb 6> :
<L3>:
  return D.250287;

  <bb 7> :
<L4>:
  operator delete (D.212565, D.212564);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8544, decl_uid=191629, cgraph_uid=5176, symbol_order=5969)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.250342;
  bool D.250341;
  bool D.250340;
  bool D.250339;
  bool D.250338;
  bool D.250337;
  struct value_type * D.250336;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.376;
  bool retval.375;
  bool retval.374;
  bool retval.373;
  bool retval.372;
  bool retval.371;
  struct value_type * D.250298;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 32;
  entry = _11 + _13;
  size = this->m_size;
  D.250337 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.371 = D.250337;
  if (retval.371 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.250338 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.372 = D.250338;
  if (retval.372 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 32;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.250339 = hash_map<tree_node*, function_relate_array>::hash_entry::equal (entry, comparable);
  retval.373 = D.250339;
  if (retval.373 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  D.250298 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 32;
  entry = _24 + _26;
  D.250340 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.374 = D.250340;
  if (retval.374 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.250341 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.375 = D.250341;
  if (retval.375 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 32;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.250342 = hash_map<tree_node*, function_relate_array>::hash_entry::equal (entry, comparable);
  retval.376 = D.250342;
  if (retval.376 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 32;
  D.250298 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.250298 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.250298 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 32;
  D.250298 = _37 + _39;

  <bb 27> :
<L37>:
  return D.250298;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9321, decl_uid=191710, cgraph_uid=5965, symbol_order=6758)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.250373;
  unsigned int D.250372;
  bool D.250371;
  bool D.250370;
  struct mem_alloc_description & D.250369;
  struct value_type * D.250368;
  unsigned int D.250367;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.235249;
  void * D.235248;
  struct hash_entry & D.235286;
  bool iftmp.380;
  bool retval.379;
  bool iftmp.378;
  bool retval.377;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 32;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.378 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.378 = 0;

  <bb 6> :
  retval.377 = iftmp.378;
  if (retval.377 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.250367 = hash_table_higher_prime_index (_5);
  nindex = D.250367;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.250368 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.250368;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.250370 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.250370;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.250371 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.250371;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.380 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.380 = 0;

  <bb 15> :
  retval.379 = iftmp.380;
  if (retval.379 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.250372 = hash_map<tree_node*, function_relate_array>::hash_entry::hash (x);
  _16 = D.250372;
  D.250373 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.250373;
  D.235286 = std::move<hash_map<tree_node*, function_relate_array>::hash_entry&> (x);
  D.235248 = q;
  D.235249 = operator new (32, D.235248);
  hash_map<tree_node*, function_relate_array>::hash_entry::hash_entry (D.235249, D.235286);

  <bb 17> :
  p = p + 32;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10030, decl_uid=191605, cgraph_uid=6662, symbol_order=7459)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.250374;

  <bb 2> :
  D.250374 = this->m_size;

  <bb 3> :
<L0>:
  return D.250374;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10031, decl_uid=191607, cgraph_uid=6663, symbol_order=7460)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.250376;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.250376 = _1 - _2;

  <bb 3> :
<L0>:
  return D.250376;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10032, decl_uid=191707, cgraph_uid=6664, symbol_order=7461)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.381;
  bool D.250378;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.381 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.381 = 0;

  <bb 6> :
  D.250378 = iftmp.381;

  <bb 7> :
<L4>:
  return D.250378;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9299, decl_uid=191697, cgraph_uid=5931, symbol_order=6724)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.250400;
  struct value_type * D.250399;
  struct mem_alloc_description & D.250398;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.250396;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.250399 = xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_alloc (n);
  nentries = D.250399;
  goto <bb 6>; [INV]

  <bb 5> :
  D.250400 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_relate_array>::hash_entry> (n);
  nentries = D.250400;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.250396 = nentries;

  <bb 9> :
<L14>:
  return D.250396;

}



;; Function xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10013, decl_uid=215815, cgraph_uid=6645, symbol_order=7442)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.250403;
  struct hash_entry * D.250401;

  <bb 2> :
  D.250403 = xcalloc (count, 32);
  D.250401 = D.250403;

  <bb 3> :
<L0>:
  return D.250401;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_relate_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10014, decl_uid=234858, cgraph_uid=6646, symbol_order=7443)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_relate_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.250410;
  struct hash_entry * D.250409;
  struct hash_entry * D.250407;
  bool retval.382;

  <bb 2> :
  retval.382 = need_finalization_p<hash_map<tree_node*, function_relate_array>::hash_entry> ();
  if (retval.382 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 32;
  D.250409 = ggc_internal_cleared_alloc (_1, finalize, 32, c);
  D.250407 = D.250409;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 32;
  D.250410 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.250407 = D.250410;

  <bb 5> :
<L2>:
  return D.250407;

}



;; Function finalize<hash_map<tree_node*, function_relate_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10539, decl_uid=241879, cgraph_uid=7174, symbol_order=7971)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_relate_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_relate_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10541, decl_uid=245359, cgraph_uid=7172, symbol_order=7969)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_relate_array::~function_relate_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_relate_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10538, decl_uid=241878, cgraph_uid=7170, symbol_order=7967)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_relate_array>::hash_entry> ()
{
  bool D.250411;

  <bb 2> :
  D.250411 = 1;

  <bb 3> :
<L0>:
  return D.250411;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10034, decl_uid=191530, cgraph_uid=6666, symbol_order=7463)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_relate_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.250415;
  hashval_t D.250413;

  <bb 2> :
  _1 = &e->m_key;
  D.250415 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::hash (_1);
  D.250413 = D.250415;

  <bb 3> :
<L0>:
  return D.250413;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10033, decl_uid=191700, cgraph_uid=6665, symbol_order=7462)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.250428;
  bool D.250427;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.384;
  struct value_type * D.250419;
  bool retval.383;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 32;
  slot = _2 + _4;
  D.250427 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.383 = D.250427;
  if (retval.383 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.250419 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 32;
  slot = _8 + _10;
  D.250428 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.384 = D.250428;
  if (retval.384 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.250419 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.250419;

}



;; Function std::move<hash_map<tree_node*, function_relate_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10035, decl_uid=235246, cgraph_uid=6667, symbol_order=7464)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_relate_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.250429;

  <bb 2> :
  D.250429 = __t;

  <bb 3> :
<L0>:
  return D.250429;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9332, decl_uid=235271, cgraph_uid=5963, symbol_order=6756)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.235273)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.235273->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.235273->m_value;
  function_relate_array::function_relate_array (_2, _3);
  return;

}



;; Function function_relate_array::function_relate_array (_ZN21function_relate_arrayC2EOS_, funcdef_no=9330, decl_uid=191405, cgraph_uid=5960, symbol_order=6753)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_relate_array::function_relate_array (struct function_relate_array * const this, struct function_relate_array & D.191407)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->relate_type_array;
  _2 = &D.191407->relate_type_array;
  std::vector<relate_type>::vector (_1, _2);
  return;

}



;; Function std::vector<relate_type>::vector (_ZNSt6vectorI11relate_typeSaIS0_EEC2EOS2_, funcdef_no=9328, decl_uid=179764, cgraph_uid=5957, symbol_order=6750)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<relate_type>::vector (struct vector * const this, struct vector & D.179766)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.179807;
  _2 = &D.179766->D.179807;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_ZNSt12_Vector_baseI11relate_typeSaIS0_EEC2EOS2_, funcdef_no=9326, decl_uid=179232, cgraph_uid=5954, symbol_order=6747)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.179234)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.179234->_M_impl;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10037, decl_uid=179138, cgraph_uid=6669, symbol_order=7466)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl&> (__x);
  std::allocator<relate_type>::allocator (this, _1);
  _2 = &this->D.179152;
  _3 = std::move<std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.179152;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::allocator<relate_type>::allocator (_ZNSaI11relate_typeEC2ERKS0_, funcdef_no=10556, decl_uid=178922, cgraph_uid=7188, symbol_order=7985)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<relate_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<relate_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11relate_typeEC2ERKS2_, funcdef_no=10866, decl_uid=178851, cgraph_uid=7498, symbol_order=8297)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.178853)
{
  <bb 2> :
  return;

}



;; Function std::move<std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI11relate_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10554, decl_uid=242016, cgraph_uid=7186, symbol_order=7983)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.250431;

  <bb 2> :
  D.250431 = __t;

  <bb 3> :
<L0>:
  return D.250431;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10559, decl_uid=179094, cgraph_uid=7191, symbol_order=7988)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8776, decl_uid=215817, cgraph_uid=5408, symbol_order=6201)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9334, decl_uid=191718, cgraph_uid=5966, symbol_order=6759)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_relate_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10039, decl_uid=191542, cgraph_uid=6671, symbol_order=7468)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::mark_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::mark_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10561, decl_uid=242031, cgraph_uid=7193, symbol_order=7990)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::mark_empty<hash_map<tree_node*, function_relate_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function function_relate_array::function_relate_array (_ZN21function_relate_arrayC2ERKS_, funcdef_no=7668, decl_uid=191396, cgraph_uid=4299, symbol_order=5088)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_relate_array::function_relate_array (struct function_relate_array * const this, const struct function_relate_array & D.191398)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->relate_type_array;
  _2 = &D.191398->relate_type_array;
  std::vector<relate_type>::vector (_1, _2);
  return;

}



;; Function std::vector<relate_type>::vector (_ZNSt6vectorI11relate_typeSaIS0_EEC2ERKS2_, funcdef_no=8547, decl_uid=179770, cgraph_uid=5179, symbol_order=5972)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<relate_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct relate_type * D.250438;
  struct __normal_iterator D.250435;
  struct __normal_iterator D.250434;
  struct allocator D.223583;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.179807;
  _2 = &__x->D.179807;
  _3 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_2);
  D.223583 = __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<relate_type>::size (__x);
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_1, _4, &D.223583);

  <bb 3> :
  std::allocator<relate_type>::~allocator (&D.223583);
  D.223583 = {CLOBBER};
  _5 = &this->D.179807;
  _6 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.179807._M_impl.D.179152._M_start;
  D.250434 = std::vector<relate_type>::end (__x);
  D.250435 = std::vector<relate_type>::begin (__x);
  D.250438 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const relate_type*, std::vector<relate_type> >, relate_type*, relate_type> (D.250435, D.250434, _7, _6);

  <bb 4> :
  _8 = D.250438;
  this->D.179807._M_impl.D.179152._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<relate_type>::~allocator (&D.223583);
  resx 2

  <bb 6> :
<L1>:
  D.223583 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.179807;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::~_Vector_base (_9);
  resx 5

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI11relate_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=9335, decl_uid=179014, cgraph_uid=5967, symbol_order=6760)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<relate_type>, relate_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<relate_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<relate_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI11relate_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=10040, decl_uid=178979, cgraph_uid=6672, symbol_order=7469)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<relate_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<relate_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (_ZNSt12_Vector_baseI11relate_typeSaIS0_EEC2EmRKS1_, funcdef_no=9337, decl_uid=179239, cgraph_uid=5969, symbol_order=6762)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=10042, decl_uid=179144, cgraph_uid=6674, symbol_order=7471)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<relate_type>::allocator (this, __a);
  _1 = &this->D.179152;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_create_storage (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE17_M_create_storageEm, funcdef_no=10044, decl_uid=179163, cgraph_uid=6676, symbol_order=7473)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct relate_type * D.250445;

  <bb 2> :
  D.250445 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_allocate (this, __n);
  _1 = D.250445;
  this->_M_impl.D.179152._M_start = _1;
  _2 = this->_M_impl.D.179152._M_start;
  this->_M_impl.D.179152._M_finish = _2;
  _3 = this->_M_impl.D.179152._M_start;
  _4 = __n * 48;
  _5 = _3 + _4;
  this->_M_impl.D.179152._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI11relate_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6302, decl_uid=179199, cgraph_uid=3275, symbol_order=4053)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<relate_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<relate_type>::~allocator (_ZNSaI11relate_typeED2Ev, funcdef_no=7652, decl_uid=178932, cgraph_uid=4284, symbol_order=5073)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<relate_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<relate_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<relate_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI11relate_typeED2Ev, funcdef_no=8519, decl_uid=178861, cgraph_uid=5151, symbol_order=5944)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<relate_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<relate_type, std::allocator<relate_type> >::~_Vector_base (_ZNSt12_Vector_baseI11relate_typeSaIS0_EED2Ev, funcdef_no=7655, decl_uid=179262, cgraph_uid=4287, symbol_order=5076)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<relate_type, std::allocator<relate_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.179152._M_end_of_storage;
  _2 = this->_M_impl.D.179152._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 48;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.179152._M_start;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function function_relate_array::~function_relate_array (_ZN21function_relate_arrayD2Ev, funcdef_no=6312, decl_uid=191417, cgraph_uid=3287, symbol_order=4065)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_relate_array::~function_relate_array (struct function_relate_array * const this)
{
  <bb 2> :
  _1 = &this->relate_type_array;
  std::vector<relate_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<relate_type>::~vector (_ZNSt6vectorI11relate_typeSaIS0_EED2Ev, funcdef_no=7658, decl_uid=179804, cgraph_uid=4290, symbol_order=5079)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<relate_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.179807;
  _2 = std::_Vector_base<relate_type, std::allocator<relate_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.179807._M_impl.D.179152._M_finish;
  _4 = this->D.179807._M_impl.D.179152._M_start;
  std::_Destroy<relate_type*, relate_type> (_4, _3, _2);
  _5 = &this->D.179807;
  std::_Vector_base<relate_type, std::allocator<relate_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function trace_function_path (_Z19trace_function_pathP9tree_nodeiS0_Pi, funcdef_no=6318, decl_uid=187012, cgraph_uid=3325, symbol_order=4103)

Removing basic block 38
Removing basic block 39
Removing basic block 40
Removing basic block 41
Removing basic block 42
Removing basic block 46
Removing basic block 76
Removing basic block 93
Removing basic block 94
Removing basic block 100
Removing basic block 125
Removing basic block 153
Removing basic block 166
Removing basic block 167
Removing basic block 168
Removing basic block 185
Removing basic block 187
Removing basic block 209
Removing basic block 222
Removing basic block 223
Removing basic block 227
Removing basic block 236
Merging blocks 237 and 239
;; 9 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245
;;
;; Loop 6
;;  header 214, latch 213
;;  depth 1, outer 0
;;  nodes: 214 213 207 212 211 210 209 208 183 206 185 184 205 194 204 195 203 196 202 201 200 199 198 197 191 193 192 190 189 188 187 186 180 182 176 181 177 175 174 179 178
;;
;; Loop 8
;;  header 205, latch 204
;;  depth 2, outer 6
;;  nodes: 205 204 195 203 196 202 201 200 199 198 197
;;
;; Loop 7
;;  header 182, latch 181
;;  depth 2, outer 6
;;  nodes: 182 181 177
;;
;; Loop 5
;;  header 143, latch 142
;;  depth 1, outer 0
;;  nodes: 143 142 132 141 140 139 138 137 136 135 134 133 131 130 129
;;
;; Loop 4
;;  header 116, latch 115
;;  depth 1, outer 0
;;  nodes: 116 115 105 114 113 112 111 110 109 108 107 106 104 103 102
;;
;; Loop 3
;;  header 87, latch 86
;;  depth 1, outer 0
;;  nodes: 87 86 58 63 62 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 69 70 66 65 64 68 67 61 60 59 57 56
;;
;; Loop 2
;;  header 54, latch 53
;;  depth 1, outer 0
;;  nodes: 54 53 52 51
;;
;; Loop 1
;;  header 39, latch 38
;;  depth 1, outer 0
;;  nodes: 39 38 23 37 29 31 33 30 32 27 28 24 25 26 36 35 34
;; 2 succs { 3 4 }
;; 3 succs { 216 }
;; 4 succs { 245 5 }
;; 5 succs { 6 7 }
;; 6 succs { 216 }
;; 7 succs { 245 8 }
;; 8 succs { 245 9 }
;; 9 succs { 244 10 }
;; 10 succs { 243 11 }
;; 11 succs { 243 12 }
;; 12 succs { 13 41 }
;; 13 succs { 243 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 41 }
;; 19 succs { 220 20 }
;; 20 succs { 220 21 }
;; 21 succs { 219 22 }
;; 22 succs { 39 }
;; 23 succs { 24 38 }
;; 24 succs { 25 28 }
;; 25 succs { 26 28 }
;; 26 succs { 27 28 }
;; 27 succs { 29 }
;; 28 succs { 29 }
;; 29 succs { 30 38 }
;; 30 succs { 31 38 }
;; 31 succs { 32 38 }
;; 32 succs { 218 33 }
;; 33 succs { 34 38 }
;; 34 succs { 218 35 }
;; 35 succs { 218 36 }
;; 36 succs { 218 37 }
;; 37 succs { 218 38 }
;; 38 succs { 39 }
;; 39 succs { 23 40 }
;; 40 succs { 41 }
;; 41 succs { 42 91 }
;; 42 succs { 43 91 }
;; 43 succs { 243 44 }
;; 44 succs { 45 91 }
;; 45 succs { 229 46 }
;; 46 succs { 229 47 }
;; 47 succs { 228 48 }
;; 48 succs { 227 49 }
;; 49 succs { 221 50 }
;; 50 succs { 54 }
;; 51 succs { 223 52 }
;; 52 succs { 222 53 }
;; 53 succs { 54 }
;; 54 succs { 51 55 }
;; 55 succs { 87 }
;; 56 succs { 227 57 }
;; 57 succs { 227 58 }
;; 58 succs { 59 86 }
;; 59 succs { 227 60 }
;; 60 succs { 227 61 }
;; 61 succs { 227 62 }
;; 62 succs { 63 86 }
;; 63 succs { 64 86 }
;; 64 succs { 227 65 }
;; 65 succs { 224 66 }
;; 66 succs { 67 70 }
;; 67 succs { 226 68 }
;; 68 succs { 225 69 }
;; 69 succs { 227 71 }
;; 70 succs { 227 71 }
;; 71 succs { 227 72 }
;; 72 succs { 227 73 }
;; 73 succs { 227 74 }
;; 74 succs { 227 75 }
;; 75 succs { 227 76 }
;; 76 succs { 227 77 }
;; 77 succs { 227 78 }
;; 78 succs { 227 79 }
;; 79 succs { 227 80 }
;; 80 succs { 227 81 }
;; 81 succs { 227 82 }
;; 82 succs { 227 83 }
;; 83 succs { 227 84 }
;; 84 succs { 227 85 }
;; 85 succs { 227 86 }
;; 86 succs { 87 }
;; 87 succs { 56 88 }
;; 88 succs { 89 90 }
;; 89 succs { 90 }
;; 90 succs { 91 }
;; 91 succs { 243 92 }
;; 92 succs { 93 96 }
;; 93 succs { 94 96 }
;; 94 succs { 95 96 }
;; 95 succs { 97 }
;; 96 succs { 97 }
;; 97 succs { 98 118 }
;; 98 succs { 232 99 }
;; 99 succs { 232 100 }
;; 100 succs { 231 101 }
;; 101 succs { 116 }
;; 102 succs { 230 103 }
;; 103 succs { 230 104 }
;; 104 succs { 230 105 }
;; 105 succs { 106 115 }
;; 106 succs { 230 107 }
;; 107 succs { 230 108 }
;; 108 succs { 230 109 }
;; 109 succs { 230 110 }
;; 110 succs { 230 111 }
;; 111 succs { 230 112 }
;; 112 succs { 230 113 }
;; 113 succs { 230 114 }
;; 114 succs { 230 115 }
;; 115 succs { 116 }
;; 116 succs { 102 117 }
;; 117 succs { 118 }
;; 118 succs { 243 119 }
;; 119 succs { 120 123 }
;; 120 succs { 121 123 }
;; 121 succs { 122 123 }
;; 122 succs { 124 }
;; 123 succs { 124 }
;; 124 succs { 125 145 }
;; 125 succs { 235 126 }
;; 126 succs { 235 127 }
;; 127 succs { 234 128 }
;; 128 succs { 143 }
;; 129 succs { 233 130 }
;; 130 succs { 233 131 }
;; 131 succs { 233 132 }
;; 132 succs { 133 142 }
;; 133 succs { 233 134 }
;; 134 succs { 233 135 }
;; 135 succs { 233 136 }
;; 136 succs { 233 137 }
;; 137 succs { 233 138 }
;; 138 succs { 233 139 }
;; 139 succs { 233 140 }
;; 140 succs { 233 141 }
;; 141 succs { 233 142 }
;; 142 succs { 143 }
;; 143 succs { 129 144 }
;; 144 succs { 145 }
;; 145 succs { 146 154 }
;; 146 succs { 147 154 }
;; 147 succs { 148 154 }
;; 148 succs { 149 154 }
;; 149 succs { 150 154 }
;; 150 succs { 243 151 }
;; 151 succs { 152 154 }
;; 152 succs { 153 154 }
;; 153 succs { 243 154 }
;; 154 succs { 155 157 }
;; 155 succs { 156 157 }
;; 156 succs { 157 }
;; 157 succs { 158 171 }
;; 158 succs { 243 159 }
;; 159 succs { 160 171 }
;; 160 succs { 237 161 }
;; 161 succs { 237 162 }
;; 162 succs { 236 163 }
;; 163 succs { 164 166 }
;; 164 succs { 165 166 }
;; 165 succs { 167 }
;; 166 succs { 167 }
;; 167 succs { 168 170 }
;; 168 succs { 236 169 }
;; 169 succs { 236 170 }
;; 170 succs { 171 }
;; 171 succs { 243 172 }
;; 172 succs { 173 215 }
;; 173 succs { 214 }
;; 174 succs { 241 175 }
;; 175 succs { 241 176 }
;; 176 succs { 182 }
;; 177 succs { 178 181 }
;; 178 succs { 241 179 }
;; 179 succs { 241 180 }
;; 180 succs { 183 }
;; 181 succs { 182 }
;; 182 succs { 177 183 }
;; 183 succs { 184 207 }
;; 184 succs { 241 185 }
;; 185 succs { 186 207 }
;; 186 succs { 240 187 }
;; 187 succs { 240 188 }
;; 188 succs { 240 189 }
;; 189 succs { 238 190 }
;; 190 succs { 191 192 }
;; 191 succs { 238 194 }
;; 192 succs { 238 193 }
;; 193 succs { 238 194 }
;; 194 succs { 205 }
;; 195 succs { 196 204 }
;; 196 succs { 197 204 }
;; 197 succs { 238 198 }
;; 198 succs { 238 199 }
;; 199 succs { 238 200 }
;; 200 succs { 238 201 }
;; 201 succs { 238 202 }
;; 202 succs { 203 204 }
;; 203 succs { 204 }
;; 204 succs { 205 }
;; 205 succs { 195 206 }
;; 206 succs { 207 }
;; 207 succs { 208 213 }
;; 208 succs { 241 209 }
;; 209 succs { 241 210 }
;; 210 succs { 241 211 }
;; 211 succs { 241 212 }
;; 212 succs { 213 }
;; 213 succs { 214 }
;; 214 succs { 174 215 }
;; 215 succs { 1 }
;; 216 succs { 217 }
;; 217 succs { 1 }
;; 218 succs { 219 }
;; 219 succs { 220 }
;; 220 succs { 243 }
;; 221 succs { 227 }
;; 222 succs { 223 }
;; 223 succs { 227 }
;; 224 succs { 227 }
;; 225 succs { 226 }
;; 226 succs { 227 }
;; 227 succs { 228 }
;; 228 succs { 229 }
;; 229 succs { 243 }
;; 230 succs { 231 }
;; 231 succs { 232 }
;; 232 succs { 243 }
;; 233 succs { 234 }
;; 234 succs { 235 }
;; 235 succs { 243 }
;; 236 succs { 237 }
;; 237 succs { 243 }
;; 238 succs { 239 }
;; 239 succs { 240 }
;; 240 succs { 241 }
;; 241 succs { 242 }
;; 242 succs { 243 }
;; 243 succs { 244 }
;; 244 succs { 245 }
;; 245 succs { }
int trace_function_path (union tree_node * function_tree, int fucntion_level, union tree_node * mallocStmt_tree, int * freecount)
{
  const char * D.250678;
  const char * D.250674;
  const char * D.250673;
  const char * D.250672;
  struct function_return_array * D.250671;
  struct function_return_array * D.250670;
  struct function_return_array * D.250669;
  struct function_return_array * D.250668;
  const char * D.250667;
  const char * D.250666;
  struct function_return_array * D.250665;
  const char * D.250662;
  struct function_return_array * D.250661;
  struct function_return_array * D.250660;
  struct function_return_array * D.250659;
  const char * D.250655;
  struct function_pthread_exit_array * D.250654;
  struct function_pthread_exit_array * D.250653;
  const char * D.250649;
  struct function_pthread_detched_array * D.250648;
  struct function_pthread_detched_array * D.250647;
  const char * D.250643;
  union tree_node * D.250640;
  int * D.250638;
  union tree_node * D.250637;
  bool D.250636;
  union tree_node * D.250633;
  void * D.250631;
  struct function_free_array * D.250630;
  struct function_free_array * D.250629;
  bool D.250625;
  struct function_return_array * D.250624;
  struct function_return_array * D.250623;
  const char * D.250622;
  struct function_path_array * D.250621;
  struct function_path_array * D.250620;
  int k;
  union tree_node * getFucntionDecl;
  struct vector ret_type_find_fun_array;
  struct function_return_array find_fun_array;
  int o;
  int find;
  int i;
  struct function_return_array callerFunArray;
  struct pt_solution * pt1;
  struct ptr_info_def * pi3;
  struct ptr_info_def * pi2;
  struct ptr_info_def * pi1;
  struct cgraph_node * node;
  long unsigned int x;
  int k;
  struct vector callerRetTypearray;
  struct function_pthread_exit_array callerFunArray;
  long unsigned int x;
  int k;
  struct vector callerRetTypearray;
  struct function_pthread_detched_array callerFunArray;
  long unsigned int x;
  int k;
  int k;
  struct hash_map * function_basicblock_collect;
  struct vector callerRetTypearray;
  struct function_free_array callerFunArray;
  struct pt_solution * pt;
  struct ptr_info_def * pi;
  int k;
  struct vector callerRetTypearray;
  struct function_return_array callerFunArray;
  struct function_return_array calleeFunArray;
  struct vector callerRetTypearray;
  struct function_return_array * callerFunArray;
  const char * name;
  struct vector function_path_array;
  struct function_path_array fun_array;
  bool retval.506;
  bool retval.504;
  bool retval.496;
  bool retval.493;
  bool retval.490;
  bool retval.489;
  bool retval.488;
  bool retval.486;
  bool iftmp.480;
  bool retval.479;
  bool retval.476;
  bool retval.475;
  bool retval.466;
  bool iftmp.451;
  bool retval.450;
  bool retval.449;
  bool iftmp.434;
  bool retval.433;
  struct hash_map * function_basicblock_collect.432;
  bool retval.431;
  union tree_node * const D.193251;
  const int D.193252;
  union tree_node * const D.193250;
  bool retval.416;
  bool retval.412;
  bool retval.411;
  union tree_node * const D.193247;
  const int D.193248;
  void * D.193245;
  bool retval.408;
  bool retval.405;
  bool retval.402;
  bool retval.401;
  bool iftmp.400;
  bool retval.399;
  bool retval.398;
  bool iftmp.393;
  bool retval.392;
  bool retval.386;
  int D.250448;

  <bb 2> :
  contextsentive.385_1 = contextsentive;
  _2 = (int) contextsentive.385_1;
  if (_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.250448 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 216>; [INV]

  <bb 4> :
  function_path_collect.387_3 = function_path_collect;
  D.250620 = hash_map<tree_node*, function_path_array>::get (function_path_collect.387_3, &function_tree);

  <bb 5> :
  _4 = D.250620;
  retval.386 = _4 == 0B;
  if (retval.386 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  D.250448 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 216>; [INV]

  <bb 7> :
  _5 = rand ();
  _6 = (long unsigned int) _5;
  now_fucntion = _6;
  function_path_collect.388_7 = function_path_collect;
  D.250621 = hash_map<tree_node*, function_path_array>::get (function_path_collect.388_7, &function_tree);

  <bb 8> :
  _8 = D.250621;
  function_path_array::function_path_array (&fun_array, _8);

  <bb 9> :
  std::vector<function_path>::vector (&function_path_array, &fun_array.function_path_array);

  <bb 10> :
  fistconunt = 0;
  _9 = std::vector<function_path>::size (&function_path_array);
  function_tree.389_10 = function_tree;
  D.250622 = get_name (function_tree.389_10);

  <bb 11> :
  _11 = D.250622;
  stderr.390_12 = stderr;
  fprintf (stderr.390_12, "\x1b[40;44m =======trace_function_path %s  function_call count: %d level :%d========  \x1b[0m\n", _11, _9, fucntion_level);

  <bb 12> :
  retmod.391_13 = retmod;
  if (retmod.391_13 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 13> :
  function_return_collect.394_14 = function_return_collect;
  D.250623 = hash_map<tree_node*, function_return_array>::get (function_return_collect.394_14, &function_tree);

  <bb 14> :
  _15 = D.250623;
  if (_15 != 0B)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  fucntion_level.395_16 = (unsigned int) fucntion_level;
  RET_HEAP_OBJECT.396_17 = RET_HEAP_OBJECT;
  if (fucntion_level.395_16 == RET_HEAP_OBJECT.396_17)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.393 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.393 = 0;

  <bb 18> :
  retval.392 = iftmp.393;
  if (retval.392 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 19> :
  function_return_collect.397_18 = function_return_collect;
  D.250624 = hash_map<tree_node*, function_return_array>::get (function_return_collect.397_18, &function_tree);

  <bb 20> :
  _19 = D.250624;
  function_return_array::function_return_array (&callerFunArray, _19);

  <bb 21> :
  std::vector<return_type>::vector (&callerRetTypearray, &callerFunArray.return_type_array);

  <bb 22> :
  k = 0;
  goto <bb 39>; [INV]

  <bb 23> :
  _20 = (long unsigned int) k;
  _21 = std::vector<return_type>::operator[] (&callerRetTypearray, _20);
  _22 = _21->return_tree;
  retval.398 = _22 != 0B;
  if (retval.398 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 24> :
  _23 = mallocStmt_tree->base.code;
  if (_23 != 26)
    goto <bb 25>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 25> :
  _24 = mallocStmt_tree->base.code;
  if (_24 != 33)
    goto <bb 26>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 26> :
  _25 = (long unsigned int) k;
  _26 = std::vector<return_type>::operator[] (&callerRetTypearray, _25);
  _27 = _26->return_tree;
  _28 = _27->base.code;
  if (_28 != 33)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  iftmp.400 = 1;
  goto <bb 29>; [INV]

  <bb 28> :
  iftmp.400 = 0;

  <bb 29> :
  retval.399 = iftmp.400;
  if (retval.399 != 0)
    goto <bb 30>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 30> :
  _29 = (long unsigned int) k;
  _30 = std::vector<return_type>::operator[] (&callerRetTypearray, _29);
  _31 = _30->return_tree;
  _32 = _31->base.code;
  retval.401 = _32 != 26;
  if (retval.401 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 31> :
  pi = mallocStmt_tree->ssa_name.info.ptr_info;
  pt = &pi->pt;
  if (pi != 0B)
    goto <bb 32>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 32> :
  _33 = (long unsigned int) k;
  _34 = std::vector<return_type>::operator[] (&callerRetTypearray, _33);
  _35 = _34->return_tree;
  D.250625 = ptr_derefs_may_alias_p (_35, mallocStmt_tree);

  <bb 33> :
  retval.402 = D.250625;
  if (retval.402 != 0)
    goto <bb 34>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 34> :
  stderr.403_36 = stderr;
  __builtin_fwrite ("\x1b[40;31m  find return stmt  \x1b[0m\n", 1, 33, stderr.403_36);

  <bb 35> :
  stderr.404_37 = stderr;
  __builtin_fwrite ("\x1b[40;31m  this fucntion return heap-object  \x1b[0m\n", 1, 49, stderr.404_37);

  <bb 36> :
  _38 = (long unsigned int) k;
  _39 = std::vector<return_type>::operator[] (&callerRetTypearray, _38);
  _40 = _39->stmt;
  debug_gimple_stmt (_40);

  <bb 37> :
  _41 = (long unsigned int) k;
  _42 = std::vector<return_type>::operator[] (&callerRetTypearray, _41);
  _43 = _42->stmt;
  _44 = gimple_location_safe (_43);
  warning_at (_44, 0, "use location");

  <bb 38> :
  k = k + 1;

  <bb 39> :
  _45 = (long unsigned int) k;
  _46 = std::vector<return_type>::size (&callerRetTypearray);
  retval.405 = _45 < _46;
  if (retval.405 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 40> :
  std::vector<return_type>::~vector (&callerRetTypearray);
  function_return_array::~function_return_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 41> :
  if (mallocStmt_tree != 0B)
    goto <bb 42>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 42> :
  fucntion_level.406_47 = (unsigned int) fucntion_level;
  DISABLE_TREACE.407_48 = DISABLE_TREACE;
  if (fucntion_level.406_47 != DISABLE_TREACE.407_48)
    goto <bb 43>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 43> :
  function_free_collect.409_49 = function_free_collect;
  D.250629 = hash_map<tree_node*, function_free_array>::get (function_free_collect.409_49, &function_tree);

  <bb 44> :
  _50 = D.250629;
  retval.408 = _50 != 0B;
  if (retval.408 != 0)
    goto <bb 45>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 45> :
  function_free_collect.410_51 = function_free_collect;
  D.250630 = hash_map<tree_node*, function_free_array>::get (function_free_collect.410_51, &function_tree);

  <bb 46> :
  _52 = D.250630;
  function_free_array::function_free_array (&callerFunArray, _52);

  <bb 47> :
  std::vector<free_type>::vector (&callerRetTypearray, &callerFunArray.free_type_array);

  <bb 48> :
  D.250631 = operator new (48);

  <bb 49> :
  D.193245 = D.250631;
  hash_map<tree_node*, int>::hash_map (D.193245, 13, 0, 1, 0);

  <bb 50> :
  function_basicblock_collect = D.193245;
  k = 0;
  goto <bb 54>; [INV]

  <bb 51> :
  D.193248 = 0;
  _53 = (long unsigned int) k;
  _54 = std::vector<free_type>::operator[] (&callerRetTypearray, _53);
  _55 = _54->stmt;
  D.250633 = gimple_block (_55);

  <bb 52> :
  _56 = D.250633;
  D.193247 = _56;
  hash_map<tree_node*, int>::put (function_basicblock_collect, &D.193247, &D.193248);

  <bb 53> :
  D.193247 = {CLOBBER};
  D.193248 = {CLOBBER};
  k = k + 1;

  <bb 54> :
  _57 = (long unsigned int) k;
  _58 = std::vector<free_type>::size (&callerRetTypearray);
  retval.411 = _57 < _58;
  if (retval.411 != 0)
    goto <bb 51>; [INV]
  else
    goto <bb 55>; [INV]

  <bb 55> :
  k = 0;
  goto <bb 87>; [INV]

  <bb 56> :
  _59 = (long unsigned int) k;
  _60 = std::vector<free_type>::operator[] (&callerRetTypearray, _59);
  _61 = _60->stmt;
  debug_gimple_stmt (_61);

  <bb 57> :
  _62 = (long unsigned int) k;
  _63 = std::vector<free_type>::operator[] (&callerRetTypearray, _62);
  _64 = _63->free_tree;
  D.250636 = ptr_derefs_may_alias_p (_64, mallocStmt_tree);

  <bb 58> :
  retval.412 = D.250636;
  if (retval.412 != 0)
    goto <bb 59>; [INV]
  else
    goto <bb 86>; [INV]

  <bb 59> :
  stderr.413_65 = stderr;
  __builtin_fwrite ("\x1b[40;31m  find free stmt free same pointer \x1b[0m\n", 1, 48, stderr.413_65);

  <bb 60> :
  _66 = (long unsigned int) k;
  _67 = std::vector<free_type>::operator[] (&callerRetTypearray, _66);
  _68 = _67->stmt;
  debug_gimple_stmt (_68);

  <bb 61> :
  _69 = (long unsigned int) k;
  _70 = std::vector<free_type>::operator[] (&callerRetTypearray, _69);
  _71 = _70->stmt;
  _72 = gimple_location_safe (_71);
  warning_at (_72, 0, "use location");

  <bb 62> :
  _73 = *freecount;
  _74 = _73 + 1;
  *freecount = _74;
  freemod.414_75 = freemod;
  if (freemod.414_75 != 0)
    goto <bb 63>; [INV]
  else
    goto <bb 86>; [INV]

  <bb 63> :
  debugmod.415_76 = debugmod;
  if (debugmod.415_76 != 0)
    goto <bb 64>; [INV]
  else
    goto <bb 86>; [INV]

  <bb 64> :
  _77 = (long unsigned int) k;
  _78 = std::vector<free_type>::operator[] (&callerRetTypearray, _77);
  _79 = _78->stmt;
  D.250637 = gimple_block (_79);

  <bb 65> :
  _80 = D.250637;
  D.193250 = _80;
  D.250638 = hash_map<tree_node*, int>::get (function_basicblock_collect, &D.193250);

  <bb 66> :
  _81 = D.250638;
  _82 = *_81;
  retval.416 = _82 == 0;
  D.193250 = {CLOBBER};
  if (retval.416 != 0)
    goto <bb 67>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 67> :
  D.193252 = 1;
  _83 = (long unsigned int) k;
  _84 = std::vector<free_type>::operator[] (&callerRetTypearray, _83);
  _85 = _84->stmt;
  D.250640 = gimple_block (_85);

  <bb 68> :
  _86 = D.250640;
  D.193251 = _86;
  hash_map<tree_node*, int>::put (function_basicblock_collect, &D.193251, &D.193252);

  <bb 69> :
  D.193251 = {CLOBBER};
  D.193252 = {CLOBBER};
  stderr.417_87 = stderr;
  __builtin_fwrite ("dot graph start relate form ", 1, 28, stderr.417_87);
  goto <bb 71>; [INV]

  <bb 70> :
  stderr.418_88 = stderr;
  __builtin_fwrite ("dot graph start relate form ", 1, 28, stderr.418_88);

  <bb 71> :
  now_fucntion.419_89 = now_fucntion;
  stderr.420_90 = stderr;
  fprintf (stderr.420_90, "ID : %lu\n", now_fucntion.419_89);

  <bb 72> :
  _91 = (long unsigned int) k;
  _92 = std::vector<free_type>::operator[] (&callerRetTypearray, _91);
  _93 = _92->stmt;
  _94 = gimple_bb (_93);
  _95 = _94->index;
  function_tree.421_96 = function_tree;
  D.250643 = get_name (function_tree.421_96);

  <bb 73> :
  _97 = D.250643;
  stderr.422_98 = stderr;
  fprintf (stderr.422_98, "from %s basic block %d", _97, _95);

  <bb 74> :
  stderr.423_99 = stderr;
  __builtin_fwrite ("dot graph end relate end\n\n", 1, 26, stderr.423_99);

  <bb 75> :
  _100 = (long unsigned int) k;
  _101 = std::vector<free_type>::operator[] (&callerRetTypearray, _100);
  _102 = _101->stmt;
  now_laststmt = _102;
  _103 = rand ();
  x = (long unsigned int) _103;
  now_laststmtid = x;
  stderr.424_104 = stderr;
  fprintf (stderr.424_104, "dot graph relate stmt start ID : %lu stmt(free) :", x);

  <bb 76> :
  _105 = (long unsigned int) k;
  _106 = std::vector<free_type>::operator[] (&callerRetTypearray, _105);
  _107 = _106->stmt;
  debug (_107);

  <bb 77> :
  _108 = (long unsigned int) k;
  _109 = std::vector<free_type>::operator[] (&callerRetTypearray, _108);
  _110 = _109->stmt;
  _111 = gimple_location_safe (_110);
  warning_at (_111, 0, "use location");

  <bb 78> :
  stderr.425_112 = stderr;
  __builtin_fwrite ("dot graph relate end\n\n", 1, 22, stderr.425_112);

  <bb 79> :
  stderr.426_113 = stderr;
  __builtin_fwrite ("dot graph target color desc", 1, 27, stderr.426_113);

  <bb 80> :
  stderr.427_114 = stderr;
  __builtin_fwrite ("green", 1, 5, stderr.427_114);

  <bb 81> :
  stderr.428_115 = stderr;
  __builtin_fwrite ("dot graph target color desend\n\n", 1, 31, stderr.428_115);

  <bb 82> :
  stderr.429_116 = stderr;
  fprintf (stderr.429_116, "dot graph relate stmt start ID : %lu stmt(free) :", x);

  <bb 83> :
  _117 = (long unsigned int) k;
  _118 = std::vector<free_type>::operator[] (&callerRetTypearray, _117);
  _119 = _118->stmt;
  debug (_119);

  <bb 84> :
  _120 = (long unsigned int) k;
  _121 = std::vector<free_type>::operator[] (&callerRetTypearray, _120);
  _122 = _121->stmt;
  _123 = gimple_location_safe (_122);
  warning_at (_123, 0, "use location");

  <bb 85> :
  stderr.430_124 = stderr;
  __builtin_fwrite ("dot graph relate end\n\n", 1, 22, stderr.430_124);

  <bb 86> :
  k = k + 1;

  <bb 87> :
  _125 = (long unsigned int) k;
  _126 = std::vector<free_type>::size (&callerRetTypearray);
  retval.431 = _125 < _126;
  if (retval.431 != 0)
    goto <bb 56>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 88> :
  function_basicblock_collect.432 = function_basicblock_collect;
  if (function_basicblock_collect.432 != 0B)
    goto <bb 89>; [INV]
  else
    goto <bb 90>; [INV]

  <bb 89> :
  hash_map<tree_node*, int>::~hash_map (function_basicblock_collect.432);
  operator delete (function_basicblock_collect.432, 48);

  <bb 90> :
  std::vector<free_type>::~vector (&callerRetTypearray);
  function_free_array::~function_free_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 91> :
  function_pthread_detched_collect.435_127 = function_pthread_detched_collect;
  D.250647 = hash_map<tree_node*, function_pthread_detched_array>::get (function_pthread_detched_collect.435_127, &function_tree);

  <bb 92> :
  _128 = D.250647;
  if (_128 != 0B)
    goto <bb 93>; [INV]
  else
    goto <bb 96>; [INV]

  <bb 93> :
  if (fucntion_level == -1)
    goto <bb 94>; [INV]
  else
    goto <bb 96>; [INV]

  <bb 94> :
  fucntion_level.436_129 = (unsigned int) fucntion_level;
  DISABLE_TREACE.437_130 = DISABLE_TREACE;
  if (fucntion_level.436_129 != DISABLE_TREACE.437_130)
    goto <bb 95>; [INV]
  else
    goto <bb 96>; [INV]

  <bb 95> :
  iftmp.434 = 1;
  goto <bb 97>; [INV]

  <bb 96> :
  iftmp.434 = 0;

  <bb 97> :
  retval.433 = iftmp.434;
  if (retval.433 != 0)
    goto <bb 98>; [INV]
  else
    goto <bb 118>; [INV]

  <bb 98> :
  function_pthread_detched_collect.438_131 = function_pthread_detched_collect;
  D.250648 = hash_map<tree_node*, function_pthread_detched_array>::get (function_pthread_detched_collect.438_131, &function_tree);

  <bb 99> :
  _132 = D.250648;
  function_pthread_detched_array::function_pthread_detched_array (&callerFunArray, _132);

  <bb 100> :
  std::vector<pthread_detched_type>::vector (&callerRetTypearray, &callerFunArray.pthread_detched_array);

  <bb 101> :
  k = 0;
  goto <bb 116>; [INV]

  <bb 102> :
  stderr.439_133 = stderr;
  __builtin_fwrite ("\x1b[40;31m  find pthread_detched stmt  \x1b[0m\n", 1, 42, stderr.439_133);

  <bb 103> :
  _134 = (long unsigned int) k;
  _135 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _134);
  _136 = _135->stmt;
  debug_gimple_stmt (_136);

  <bb 104> :
  _137 = (long unsigned int) k;
  _138 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _137);
  _139 = _138->stmt;
  _140 = gimple_location_safe (_139);
  warning_at (_140, 0, "use location");

  <bb 105> :
  _141 = *freecount;
  _142 = _141 + 1;
  *freecount = _142;
  pthread_detachedmod.440_143 = pthread_detachedmod;
  if (pthread_detachedmod.440_143 != 0)
    goto <bb 106>; [INV]
  else
    goto <bb 115>; [INV]

  <bb 106> :
  stderr.441_144 = stderr;
  __builtin_fwrite ("dot graph start relate form ", 1, 28, stderr.441_144);

  <bb 107> :
  now_fucntion.442_145 = now_fucntion;
  stderr.443_146 = stderr;
  fprintf (stderr.443_146, "ID : %lu\n", now_fucntion.442_145);

  <bb 108> :
  _147 = (long unsigned int) k;
  _148 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _147);
  _149 = _148->stmt;
  _150 = gimple_bb (_149);
  _151 = _150->index;
  function_tree.444_152 = function_tree;
  D.250649 = get_name (function_tree.444_152);

  <bb 109> :
  _153 = D.250649;
  stderr.445_154 = stderr;
  fprintf (stderr.445_154, "from %s basic block %d", _153, _151);

  <bb 110> :
  stderr.446_155 = stderr;
  __builtin_fwrite ("dot graph end relate end\n\n", 1, 26, stderr.446_155);

  <bb 111> :
  _156 = (long unsigned int) k;
  _157 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _156);
  _158 = _157->stmt;
  now_laststmt = _158;
  _159 = rand ();
  x = (long unsigned int) _159;
  now_laststmtid = x;
  stderr.447_160 = stderr;
  fprintf (stderr.447_160, "dot graph relate stmt start ID : %lu stmt(pthread_detched)) :", x);

  <bb 112> :
  _161 = (long unsigned int) k;
  _162 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _161);
  _163 = _162->stmt;
  debug (_163);

  <bb 113> :
  _164 = (long unsigned int) k;
  _165 = std::vector<pthread_detched_type>::operator[] (&callerRetTypearray, _164);
  _166 = _165->stmt;
  _167 = gimple_location_safe (_166);
  warning_at (_167, 0, "use location");

  <bb 114> :
  stderr.448_168 = stderr;
  __builtin_fwrite ("dot graph relate end\n\n", 1, 22, stderr.448_168);

  <bb 115> :
  k = k + 1;

  <bb 116> :
  _169 = (long unsigned int) k;
  _170 = std::vector<pthread_detched_type>::size (&callerRetTypearray);
  retval.449 = _169 < _170;
  if (retval.449 != 0)
    goto <bb 102>; [INV]
  else
    goto <bb 117>; [INV]

  <bb 117> :
  std::vector<pthread_detched_type>::~vector (&callerRetTypearray);
  function_pthread_detched_array::~function_pthread_detched_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 118> :
  function_pthread_exit_collect.452_171 = function_pthread_exit_collect;
  D.250653 = hash_map<tree_node*, function_pthread_exit_array>::get (function_pthread_exit_collect.452_171, &function_tree);

  <bb 119> :
  _172 = D.250653;
  if (_172 != 0B)
    goto <bb 120>; [INV]
  else
    goto <bb 123>; [INV]

  <bb 120> :
  if (fucntion_level == -1)
    goto <bb 121>; [INV]
  else
    goto <bb 123>; [INV]

  <bb 121> :
  fucntion_level.453_173 = (unsigned int) fucntion_level;
  DISABLE_TREACE.454_174 = DISABLE_TREACE;
  if (fucntion_level.453_173 != DISABLE_TREACE.454_174)
    goto <bb 122>; [INV]
  else
    goto <bb 123>; [INV]

  <bb 122> :
  iftmp.451 = 1;
  goto <bb 124>; [INV]

  <bb 123> :
  iftmp.451 = 0;

  <bb 124> :
  retval.450 = iftmp.451;
  if (retval.450 != 0)
    goto <bb 125>; [INV]
  else
    goto <bb 145>; [INV]

  <bb 125> :
  function_pthread_exit_collect.455_175 = function_pthread_exit_collect;
  D.250654 = hash_map<tree_node*, function_pthread_exit_array>::get (function_pthread_exit_collect.455_175, &function_tree);

  <bb 126> :
  _176 = D.250654;
  function_pthread_exit_array::function_pthread_exit_array (&callerFunArray, _176);

  <bb 127> :
  std::vector<pthread_exit_type>::vector (&callerRetTypearray, &callerFunArray.pthread_exit_array);

  <bb 128> :
  k = 0;
  goto <bb 143>; [INV]

  <bb 129> :
  stderr.456_177 = stderr;
  __builtin_fwrite ("\x1b[40;31m  find pthread_exit stmt  \x1b[0m\n", 1, 39, stderr.456_177);

  <bb 130> :
  _178 = (long unsigned int) k;
  _179 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _178);
  _180 = _179->stmt;
  debug_gimple_stmt (_180);

  <bb 131> :
  _181 = (long unsigned int) k;
  _182 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _181);
  _183 = _182->stmt;
  _184 = gimple_location_safe (_183);
  warning_at (_184, 0, "use location");

  <bb 132> :
  pthread_exitmod.457_185 = pthread_exitmod;
  if (pthread_exitmod.457_185 != 0)
    goto <bb 133>; [INV]
  else
    goto <bb 142>; [INV]

  <bb 133> :
  stderr.458_186 = stderr;
  __builtin_fwrite ("dot graph start relate form ", 1, 28, stderr.458_186);

  <bb 134> :
  now_fucntion.459_187 = now_fucntion;
  stderr.460_188 = stderr;
  fprintf (stderr.460_188, "ID : %lu\n", now_fucntion.459_187);

  <bb 135> :
  _189 = (long unsigned int) k;
  _190 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _189);
  _191 = _190->stmt;
  _192 = gimple_bb (_191);
  _193 = _192->index;
  function_tree.461_194 = function_tree;
  D.250655 = get_name (function_tree.461_194);

  <bb 136> :
  _195 = D.250655;
  stderr.462_196 = stderr;
  fprintf (stderr.462_196, "from %s basic block %d", _195, _193);

  <bb 137> :
  stderr.463_197 = stderr;
  __builtin_fwrite ("dot graph end relate end\n\n", 1, 26, stderr.463_197);

  <bb 138> :
  _198 = (long unsigned int) k;
  _199 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _198);
  _200 = _199->stmt;
  now_laststmt = _200;
  _201 = rand ();
  x = (long unsigned int) _201;
  now_laststmtid = x;
  stderr.464_202 = stderr;
  fprintf (stderr.464_202, "dot graph relate stmt start ID : %lu stmt(pthread_exit) :", x);

  <bb 139> :
  _203 = (long unsigned int) k;
  _204 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _203);
  _205 = _204->stmt;
  debug (_205);

  <bb 140> :
  _206 = (long unsigned int) k;
  _207 = std::vector<pthread_exit_type>::operator[] (&callerRetTypearray, _206);
  _208 = _207->stmt;
  _209 = gimple_location_safe (_208);
  warning_at (_209, 0, "use location");

  <bb 141> :
  stderr.465_210 = stderr;
  __builtin_fwrite ("dot graph relate end\n\n", 1, 22, stderr.465_210);

  <bb 142> :
  k = k + 1;

  <bb 143> :
  _211 = (long unsigned int) k;
  _212 = std::vector<pthread_exit_type>::size (&callerRetTypearray);
  retval.466 = _211 < _212;
  if (retval.466 != 0)
    goto <bb 129>; [INV]
  else
    goto <bb 144>; [INV]

  <bb 144> :
  std::vector<pthread_exit_type>::~vector (&callerRetTypearray);
  function_pthread_exit_array::~function_pthread_exit_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 145> :
  tracerelatestmt.467_213 = tracerelatestmt;
  _214 = (int) tracerelatestmt.467_213;
  if (_214 == 1)
    goto <bb 146>; [INV]
  else
    goto <bb 154>; [INV]

  <bb 146> :
  if (fucntion_level != -1)
    goto <bb 147>; [INV]
  else
    goto <bb 154>; [INV]

  <bb 147> :
  fucntion_level.468_215 = (unsigned int) fucntion_level;
  DISABLE_TREACE.469_216 = DISABLE_TREACE;
  if (fucntion_level.468_215 != DISABLE_TREACE.469_216)
    goto <bb 148>; [INV]
  else
    goto <bb 154>; [INV]

  <bb 148> :
  fucntion_level.470_217 = (unsigned int) fucntion_level;
  RET_HEAP_OBJECT.471_218 = RET_HEAP_OBJECT;
  if (fucntion_level.470_217 != RET_HEAP_OBJECT.471_218)
    goto <bb 149>; [INV]
  else
    goto <bb 154>; [INV]

  <bb 149> :
  if (mallocStmt_tree != 0B)
    goto <bb 150>; [INV]
  else
    goto <bb 154>; [INV]

  <bb 150> :
  pi1 = mallocStmt_tree->ssa_name.info.ptr_info;
  debug_tree (mallocStmt_tree);

  <bb 151> :
  pt1 = &pi1->pt;
  if (pt1 != 0B)
    goto <bb 152>; [INV]
  else
    goto <bb 154>; [INV]

  <bb 152> :
  _219 = BIT_FIELD_REF <*pt1, 8, 0>;
  _220 = _219 & 16;
  if (_220 != 0)
    goto <bb 153>; [INV]
  else
    goto <bb 154>; [INV]

  <bb 153> :
  function_tree.472_221 = function_tree;
  trace_fucntion_relate_stmt (node, function_tree.472_221, mallocStmt_tree);

  <bb 154> :
  if (fucntion_level != -1)
    goto <bb 155>; [INV]
  else
    goto <bb 157>; [INV]

  <bb 155> :
  fucntion_level.473_222 = (unsigned int) fucntion_level;
  DISABLE_TREACE.474_223 = DISABLE_TREACE;
  if (fucntion_level.473_222 != DISABLE_TREACE.474_223)
    goto <bb 156>; [INV]
  else
    goto <bb 157>; [INV]

  <bb 156> :
  fucntion_level = fucntion_level + 1;

  <bb 157> :
  _224 = std::vector<function_path>::size (&function_path_array);
  retval.475 = _224 == 0;
  if (retval.475 != 0)
    goto <bb 158>; [INV]
  else
    goto <bb 171>; [INV]

  <bb 158> :
  function_return_collect.477_225 = function_return_collect;
  D.250659 = hash_map<tree_node*, function_return_array>::get (function_return_collect.477_225, &function_tree);

  <bb 159> :
  _226 = D.250659;
  retval.476 = _226 != 0B;
  if (retval.476 != 0)
    goto <bb 160>; [INV]
  else
    goto <bb 171>; [INV]

  <bb 160> :
  function_return_collect.478_227 = function_return_collect;
  D.250660 = hash_map<tree_node*, function_return_array>::get (function_return_collect.478_227, &function_tree);

  <bb 161> :
  _228 = D.250660;
  function_return_array::function_return_array (&callerFunArray, _228);

  <bb 162> :
  function_return_collect.481_229 = function_return_collect;
  D.250661 = hash_map<tree_node*, function_return_array>::get (function_return_collect.481_229, &function_tree);

  <bb 163> :
  _230 = D.250661;
  if (_230 != 0B)
    goto <bb 164>; [INV]
  else
    goto <bb 166>; [INV]

  <bb 164> :
  _231 = callerFunArray.return_type_num;
  if (_231 == 2)
    goto <bb 165>; [INV]
  else
    goto <bb 166>; [INV]

  <bb 165> :
  iftmp.480 = 1;
  goto <bb 167>; [INV]

  <bb 166> :
  iftmp.480 = 0;

  <bb 167> :
  retval.479 = iftmp.480;
  if (retval.479 != 0)
    goto <bb 168>; [INV]
  else
    goto <bb 170>; [INV]

  <bb 168> :
  function_tree.482_232 = function_tree;
  D.250662 = get_name (function_tree.482_232);

  <bb 169> :
  _233 = D.250662;
  stderr.483_234 = stderr;
  fprintf (stderr.483_234, "%s this fucntion return value is heap-object \n", _233);

  <bb 170> :
  function_return_array::~function_return_array (&callerFunArray);
  callerFunArray = {CLOBBER};

  <bb 171> :
  function_return_collect.484_235 = function_return_collect;
  D.250665 = hash_map<tree_node*, function_return_array>::get (function_return_collect.484_235, &function_tree);

  <bb 172> :
  callerFunArray = D.250665;
  std::vector<return_type>::vector (&callerRetTypearray);
  function_return_array::function_return_array (&calleeFunArray);
  if (callerFunArray != 0B)
    goto <bb 173>; [INV]
  else
    goto <bb 215>; [INV]

  <bb 173> :
  i = 0;
  goto <bb 214>; [INV]

  <bb 174> :
  find = 0;
  _236 = (long unsigned int) i;
  _237 = std::vector<function_path>::operator[] (&function_path_array, _236);
  _238 = _237->next;
  D.250666 = get_name (_238);

  <bb 175> :
  _239 = D.250666;
  stderr.485_240 = stderr;
  fprintf (stderr.485_240, "\x1b[40;42m =======pre add _ fucntion:%s========= \x1b[0m\n", _239);

  <bb 176> :
  o = 0;
  goto <bb 182>; [INV]

  <bb 177> :
  _241 = (long unsigned int) o;
  _242 = std::vector<tree_node*>::operator[] (&traceStack, _241);
  _243 = *_242;
  _244 = (long unsigned int) i;
  _245 = std::vector<function_path>::operator[] (&function_path_array, _244);
  _246 = _245->next;
  retval.486 = _243 == _246;
  if (retval.486 != 0)
    goto <bb 178>; [INV]
  else
    goto <bb 181>; [INV]

  <bb 178> :
  find = 1;
  _247 = (long unsigned int) o;
  _248 = std::vector<tree_node*>::operator[] (&traceStack, _247);
  _249 = *_248;
  D.250667 = get_name (_249);

  <bb 179> :
  _250 = D.250667;
  stderr.487_251 = stderr;
  fprintf (stderr.487_251, "\x1b[40;41m =======recursive_fun2:%s========= \x1b[0m\n", _250);

  <bb 180> :
  goto <bb 183>; [INV]

  <bb 181> :
  o = o + 1;

  <bb 182> :
  _252 = (long unsigned int) o;
  _253 = std::vector<tree_node*>::size (&traceStack);
  retval.488 = _252 < _253;
  if (retval.488 != 0)
    goto <bb 177>; [INV]
  else
    goto <bb 183>; [INV]

  <bb 183> :
  _254 = (long unsigned int) i;
  _255 = std::vector<function_path>::operator[] (&function_path_array, _254);
  _256 = _255->next;
  retval.489 = _256 != 0B;
  if (retval.489 != 0)
    goto <bb 184>; [INV]
  else
    goto <bb 207>; [INV]

  <bb 184> :
  function_return_collect.491_257 = function_return_collect;
  _258 = (long unsigned int) i;
  _259 = std::vector<function_path>::operator[] (&function_path_array, _258);
  _260 = &_259->next;
  D.250668 = hash_map<tree_node*, function_return_array>::get (function_return_collect.491_257, _260);

  <bb 185> :
  _261 = D.250668;
  retval.490 = _261 != 0B;
  if (retval.490 != 0)
    goto <bb 186>; [INV]
  else
    goto <bb 207>; [INV]

  <bb 186> :
  _262 = &callerFunArray->return_type_array;
  std::vector<return_type>::operator= (&callerRetTypearray, _262);

  <bb 187> :
  function_return_collect.492_263 = function_return_collect;
  _264 = (long unsigned int) i;
  _265 = std::vector<function_path>::operator[] (&function_path_array, _264);
  _266 = &_265->next;
  D.250669 = hash_map<tree_node*, function_return_array>::get (function_return_collect.492_263, _266);

  <bb 188> :
  _267 = D.250669;
  function_return_array::operator= (&calleeFunArray, _267);

  <bb 189> :
  function_return_array::function_return_array (&find_fun_array);
  std::vector<return_type>::vector (&ret_type_find_fun_array);
  _268 = (long unsigned int) i;
  _269 = std::vector<function_path>::operator[] (&function_path_array, _268);
  _270 = _269->next;
  getFucntionDecl = _270;
  function_return_collect.494_271 = function_return_collect;
  D.250670 = hash_map<tree_node*, function_return_array>::get (function_return_collect.494_271, &getFucntionDecl);

  <bb 190> :
  _272 = D.250670;
  retval.493 = _272 == 0B;
  if (retval.493 != 0)
    goto <bb 191>; [INV]
  else
    goto <bb 192>; [INV]

  <bb 191> :
  std::vector<return_type>::operator= (&find_fun_array.return_type_array, &ret_type_find_fun_array);
  goto <bb 194>; [INV]

  <bb 192> :
  function_return_collect.495_273 = function_return_collect;
  D.250671 = hash_map<tree_node*, function_return_array>::get (function_return_collect.495_273, &getFucntionDecl);

  <bb 193> :
  _274 = D.250671;
  function_return_array::operator= (&find_fun_array, _274);

  <bb 194> :
  k = 0;
  goto <bb 205>; [INV]

  <bb 195> :
  _275 = calleeFunArray.return_type_num;
  if (_275 == 2)
    goto <bb 196>; [INV]
  else
    goto <bb 204>; [INV]

  <bb 196> :
  _276 = (long unsigned int) k;
  _277 = std::vector<return_type>::operator[] (&callerRetTypearray, _276);
  _278 = _277->return_tree;
  _279 = (long unsigned int) i;
  _280 = std::vector<function_path>::operator[] (&function_path_array, _279);
  _281 = _280->next;
  retval.496 = _278 == _281;
  if (retval.496 != 0)
    goto <bb 197>; [INV]
  else
    goto <bb 204>; [INV]

  <bb 197> :
  _282 = (long unsigned int) i;
  _283 = std::vector<function_path>::operator[] (&function_path_array, _282);
  _284 = _283->next;
  D.250672 = get_name (_284);

  <bb 198> :
  _285 = D.250672;
  stderr.497_286 = stderr;
  fprintf (stderr.497_286, "%s this fucntion return value is heap-object \n", _285);

  <bb 199> :
  _287 = (long unsigned int) k;
  _288 = std::vector<return_type>::operator[] (&callerRetTypearray, _287);
  _289 = _288->return_tree;
  D.250673 = get_name (_289);

  <bb 200> :
  _290 = D.250673;
  function_tree.498_291 = function_tree;
  D.250674 = get_name (function_tree.498_291);

  <bb 201> :
  _292 = D.250674;
  stderr.499_293 = stderr;
  fprintf (stderr.499_293, "%s this fucntion return value is heap-object %s\n", _292, _290);

  <bb 202> :
  fucntion_level.500_294 = (unsigned int) fucntion_level;
  RET_HEAP_OBJECT.501_295 = RET_HEAP_OBJECT;
  if (fucntion_level.500_294 == RET_HEAP_OBJECT.501_295)
    goto <bb 203>; [INV]
  else
    goto <bb 204>; [INV]

  <bb 203> :
  EFFECTIVE.502_296 = EFFECTIVE;
  EFFECTIVE.503_297 = (int) EFFECTIVE.502_296;
  *freecount = EFFECTIVE.503_297;

  <bb 204> :
  k = k + 1;

  <bb 205> :
  _298 = (long unsigned int) k;
  _299 = std::vector<return_type>::size (&callerRetTypearray);
  retval.504 = _298 < _299;
  if (retval.504 != 0)
    goto <bb 195>; [INV]
  else
    goto <bb 206>; [INV]

  <bb 206> :
  std::vector<return_type>::~vector (&ret_type_find_fun_array);
  function_return_array::~function_return_array (&find_fun_array);
  find_fun_array = {CLOBBER};
  ret_type_find_fun_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};

  <bb 207> :
  if (find == 0)
    goto <bb 208>; [INV]
  else
    goto <bb 213>; [INV]

  <bb 208> :
  _300 = (long unsigned int) i;
  _301 = std::vector<function_path>::operator[] (&function_path_array, _300);
  _302 = _301->next;
  D.250678 = get_name (_302);

  <bb 209> :
  _303 = D.250678;
  stderr.505_304 = stderr;
  fprintf (stderr.505_304, "\x1b[40;46m =======add node_fun stack:%s========= \x1b[0m\n", _303);

  <bb 210> :
  _305 = (long unsigned int) i;
  _306 = std::vector<function_path>::operator[] (&function_path_array, _305);
  _307 = &_306->next;
  std::vector<tree_node*>::push_back (&traceStack, _307);

  <bb 211> :
  _308 = (long unsigned int) i;
  _309 = std::vector<function_path>::operator[] (&function_path_array, _308);
  _310 = _309->next;
  trace_function_path (_310, fucntion_level, mallocStmt_tree, freecount);

  <bb 212> :
  std::vector<tree_node*>::pop_back (&traceStack);

  <bb 213> :
  i = i + 1;

  <bb 214> :
  _311 = (long unsigned int) i;
  _312 = std::vector<function_path>::size (&function_path_array);
  retval.506 = _311 < _312;
  if (retval.506 != 0)
    goto <bb 174>; [INV]
  else
    goto <bb 215>; [INV]

  <bb 215> :
  function_return_array::~function_return_array (&calleeFunArray);
  std::vector<return_type>::~vector (&callerRetTypearray);
  std::vector<function_path>::~vector (&function_path_array);
  function_path_array::~function_path_array (&fun_array);
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  calleeFunArray = {CLOBBER};
  return;

  <bb 216> :
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  calleeFunArray = {CLOBBER};

  <bb 217> :
<L165>:
  return D.250448;

  <bb 218> :
<L166>:
  std::vector<return_type>::~vector (&callerRetTypearray);
  resx 6

  <bb 219> :
<L167>:
  function_return_array::~function_return_array (&callerFunArray);
  resx 5

  <bb 220> :
<L168>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 4

  <bb 221> :
<L169>:
  operator delete (D.193245, 48);
  resx 13

  <bb 222> :
<L170>:
  D.193247 = {CLOBBER};
  resx 16

  <bb 223> :
<L171>:
  D.193248 = {CLOBBER};
  resx 15

  <bb 224> :
<L172>:
  D.193250 = {CLOBBER};
  resx 19

  <bb 225> :
<L173>:
  D.193251 = {CLOBBER};
  resx 22

  <bb 226> :
<L174>:
  D.193252 = {CLOBBER};
  resx 21

  <bb 227> :
<L175>:
  std::vector<free_type>::~vector (&callerRetTypearray);
  resx 12

  <bb 228> :
<L176>:
  function_free_array::~function_free_array (&callerFunArray);
  resx 11

  <bb 229> :
<L177>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 10

  <bb 230> :
<L178>:
  std::vector<pthread_detched_type>::~vector (&callerRetTypearray);
  resx 31

  <bb 231> :
<L179>:
  function_pthread_detched_array::~function_pthread_detched_array (&callerFunArray);
  resx 30

  <bb 232> :
<L180>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 29

  <bb 233> :
<L181>:
  std::vector<pthread_exit_type>::~vector (&callerRetTypearray);
  resx 37

  <bb 234> :
<L182>:
  function_pthread_exit_array::~function_pthread_exit_array (&callerFunArray);
  resx 36

  <bb 235> :
<L183>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 35

  <bb 236> :
<L184>:
  function_return_array::~function_return_array (&callerFunArray);
  resx 42

  <bb 237> :
<L185>:
  callerFunArray = {CLOBBER};
  resx 41

  <bb 238> :
<L186>:
  std::vector<return_type>::~vector (&ret_type_find_fun_array);
  resx 49

  <bb 239> :
<L187>:
  function_return_array::~function_return_array (&find_fun_array);
  resx 48

  <bb 240> :
<L188>:
  find_fun_array = {CLOBBER};
  ret_type_find_fun_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};
  resx 47

  <bb 241> :
<L189>:
  function_return_array::~function_return_array (&calleeFunArray);
  resx 46

  <bb 242> :
<L190>:
  std::vector<return_type>::~vector (&callerRetTypearray);
  resx 45

  <bb 243> :
<L191>:
  std::vector<function_path>::~vector (&function_path_array);
  resx 3

  <bb 244> :
<L192>:
  function_path_array::~function_path_array (&fun_array);
  resx 2

  <bb 245> :
<L193>:
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  calleeFunArray = {CLOBBER};
  resx 1

}



;; Function hash_map<tree_node*, function_path_array>::get (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7670, decl_uid=191964, cgraph_uid=4302, symbol_order=5091)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_path_array * hash_map<tree_node*, function_path_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.250694;
  struct hash_entry & D.250693;
  unsigned int D.250692;
  struct hash_entry & e;
  struct function_path_array * iftmp.507;
  struct function_path_array * D.250686;

  <bb 2> :
  _1 = &this->m_table;
  D.250692 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::hash (k);
  _2 = D.250692;
  D.250693 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.250693;
  D.250694 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_empty<hash_map<tree_node*, function_path_array>::hash_entry> (e);
  _3 = D.250694;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.507 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.507 = &e->m_value;

  <bb 5> :
  D.250686 = iftmp.507;

  <bb 6> :
<L3>:
  return D.250686;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE4hashERKS2_, funcdef_no=8549, decl_uid=191920, cgraph_uid=5181, symbol_order=5974)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::hash (union tree_node * const & h)
{
  hashval_t D.250695;

  <bb 2> :
  D.250695 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.250695;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8550, decl_uid=192107, cgraph_uid=5182, symbol_order=5975)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.250729;
  bool D.250728;
  bool D.250727;
  bool D.250726;
  bool D.250725;
  bool D.250724;
  struct value_type * D.250723;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.511;
  bool retval.510;
  struct value_type & D.250709;
  bool iftmp.509;
  bool retval.508;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 40;
  entry = _5 + _7;
  D.250724 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.250724;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.250725 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.250725;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.250726 = hash_map<tree_node*, function_path_array>::hash_entry::equal (entry, comparable);
  _11 = D.250726;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.509 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.509 = 0;

  <bb 8> :
  retval.508 = iftmp.509;
  if (retval.508 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.250709 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  entry = _17 + _19;
  D.250727 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.250727;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.250728 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.250728;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.250729 = hash_map<tree_node*, function_path_array>::hash_entry::equal (entry, comparable);
  _23 = D.250729;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.511 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.511 = 0;

  <bb 18> :
  retval.510 = iftmp.511;
  if (retval.510 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.250709 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.250709;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8972, decl_uid=192203, cgraph_uid=5604, symbol_order=6397)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.250732;
  bool D.250730;

  <bb 2> :
  D.250732 = hash_map<tree_node*, function_path_array>::hash_entry::is_empty (v);
  D.250730 = D.250732;

  <bb 3> :
<L0>:
  return D.250730;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8841, decl_uid=192033, cgraph_uid=5473, symbol_order=6266)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_path_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.250735;
  bool D.250733;

  <bb 2> :
  D.250735 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_empty<hash_map<tree_node*, function_path_array>::hash_entry> (e);
  D.250733 = D.250735;

  <bb 3> :
<L0>:
  return D.250733;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8973, decl_uid=192201, cgraph_uid=5605, symbol_order=6398)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.250738;
  bool D.250736;

  <bb 2> :
  D.250738 = hash_map<tree_node*, function_path_array>::hash_entry::is_deleted (v);
  D.250736 = D.250738;

  <bb 3> :
<L0>:
  return D.250736;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9811, decl_uid=192028, cgraph_uid=6443, symbol_order=7236)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_path_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.250741;
  bool D.250739;

  <bb 2> :
  D.250741 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_deleted<hash_map<tree_node*, function_path_array>::hash_entry> (e);
  D.250739 = D.250741;

  <bb 3> :
<L0>:
  return D.250739;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_deleted<hash_map<tree_node*, function_path_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10372, decl_uid=239704, cgraph_uid=7004, symbol_order=7801)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_deleted<hash_map<tree_node*, function_path_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.250742;

  <bb 2> :
  _1 = entry->m_key;
  D.250742 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.250742;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9340, decl_uid=192021, cgraph_uid=5972, symbol_order=6765)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_path_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.250746;
  bool D.250744;

  <bb 2> :
  _1 = &a->m_key;
  D.250746 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::equal_keys (_1, b);
  D.250744 = D.250746;

  <bb 3> :
<L0>:
  return D.250744;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE10equal_keysERKS2_S7_, funcdef_no=10047, decl_uid=191922, cgraph_uid=6679, symbol_order=7476)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.250747;

  <bb 2> :
  D.250747 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.250747;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_empty<hash_map<tree_node*, function_path_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8551, decl_uid=212572, cgraph_uid=5183, symbol_order=5976)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::is_empty<hash_map<tree_node*, function_path_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.250749;

  <bb 2> :
  _1 = entry->m_key;
  D.250749 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.250749;

}



;; Function function_path_array::function_path_array (_ZN19function_path_arrayC2ERKS_, funcdef_no=6320, decl_uid=192302, cgraph_uid=3295, symbol_order=4073)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_path_array::function_path_array (struct function_path_array * const this, const struct function_path_array & D.192304)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.192304->funtion_type_num;
  this->funtion_type_num = _1;
  _2 = &this->function_path_array;
  _3 = &D.192304->function_path_array;
  std::vector<function_path>::vector (_2, _3);
  return;

}



;; Function std::vector<function_path>::vector (_ZNSt6vectorI13function_pathSaIS0_EEC2ERKS2_, funcdef_no=7672, decl_uid=175571, cgraph_uid=4304, symbol_order=5093)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<function_path>::vector (struct vector * const this, const struct vector & __x)
{
  struct function_path * D.250755;
  struct __normal_iterator D.250752;
  struct __normal_iterator D.250751;
  struct allocator D.212683;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.175608;
  _2 = &__x->D.175608;
  _3 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_2);
  D.212683 = __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<function_path>::size (__x);
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_1, _4, &D.212683);

  <bb 3> :
  std::allocator<function_path>::~allocator (&D.212683);
  D.212683 = {CLOBBER};
  _5 = &this->D.175608;
  _6 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_5);
  _7 = this->D.175608._M_impl.D.174953._M_start;
  D.250751 = std::vector<function_path>::end (__x);
  D.250752 = std::vector<function_path>::begin (__x);
  D.250755 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*, function_path> (D.250752, D.250751, _7, _6);

  <bb 4> :
  _8 = D.250755;
  this->D.175608._M_impl.D.174953._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<function_path>::~allocator (&D.212683);
  resx 2

  <bb 6> :
<L1>:
  D.212683 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.175608;
  std::_Vector_base<function_path, std::allocator<function_path> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI13function_pathSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8553, decl_uid=174843, cgraph_uid=5185, symbol_order=5978)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.250757;

  <bb 2> :
  D.250757 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.250757;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI13function_pathES1_E17_S_select_on_copyERKS2_, funcdef_no=8552, decl_uid=174815, cgraph_uid=5184, symbol_order=5977)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<function_path> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<function_path> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI13function_pathEE37select_on_container_copy_constructionERKS1_, funcdef_no=9341, decl_uid=174780, cgraph_uid=5973, symbol_order=6766)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<function_path> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<function_path>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<function_path>::allocator (_ZNSaI13function_pathEC2ERKS0_, funcdef_no=10049, decl_uid=174723, cgraph_uid=6681, symbol_order=7478)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<function_path>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<function_path>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<function_path>::new_allocator (_ZN9__gnu_cxx13new_allocatorI13function_pathEC2ERKS2_, funcdef_no=10568, decl_uid=174652, cgraph_uid=7200, symbol_order=7997)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<function_path>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.174654)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_ZNSt12_Vector_baseI13function_pathSaIS0_EEC2EmRKS1_, funcdef_no=8555, decl_uid=175040, cgraph_uid=5187, symbol_order=5980)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI13function_pathSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9343, decl_uid=174945, cgraph_uid=5975, symbol_order=6768)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<function_path>::allocator (this, __a);
  _1 = &this->D.174953;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI13function_pathSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8790, decl_uid=174900, cgraph_uid=5422, symbol_order=6215)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_M_create_storage (_ZNSt12_Vector_baseI13function_pathSaIS0_EE17_M_create_storageEm, funcdef_no=9345, decl_uid=174964, cgraph_uid=5977, symbol_order=6770)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct function_path * D.250764;

  <bb 2> :
  D.250764 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_allocate (this, __n);
  _1 = D.250764;
  this->_M_impl.D.174953._M_start = _1;
  _2 = this->_M_impl.D.174953._M_start;
  this->_M_impl.D.174953._M_finish = _2;
  _3 = this->_M_impl.D.174953._M_start;
  _4 = __n * 24;
  _5 = _3 + _4;
  this->_M_impl.D.174953._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_M_allocate (_ZNSt12_Vector_baseI13function_pathSaIS0_EE11_M_allocateEm, funcdef_no=9630, decl_uid=174957, cgraph_uid=6262, symbol_order=7055)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_path * std::_Vector_base<function_path, std::allocator<function_path> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct function_path * D.250771;
  struct function_path * iftmp.512;
  struct function_path * D.250765;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.250771 = std::allocator_traits<std::allocator<function_path> >::allocate (_1, __n);
  iftmp.512 = D.250771;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.512 = 0B;

  <bb 5> :
  D.250765 = iftmp.512;

  <bb 6> :
<L3>:
  return D.250765;

}



;; Function std::allocator_traits<std::allocator<function_path> >::allocate (_ZNSt16allocator_traitsISaI13function_pathEE8allocateERS1_m, funcdef_no=10226, decl_uid=174758, cgraph_uid=6858, symbol_order=7655)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct function_path * std::allocator_traits<std::allocator<function_path> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct function_path * D.250774;
  struct function_path * D.250772;

  <bb 2> :
  D.250774 = __gnu_cxx::new_allocator<function_path>::allocate (__a, __n, 0B);
  D.250772 = D.250774;

  <bb 3> :
<L0>:
  return D.250772;

}



;; Function __gnu_cxx::new_allocator<function_path>::allocate (_ZN9__gnu_cxx13new_allocatorI13function_pathE8allocateEmPKv, funcdef_no=10694, decl_uid=174612, cgraph_uid=7327, symbol_order=8124)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct function_path * __gnu_cxx::new_allocator<function_path>::allocate (struct new_allocator * const this, size_type __n, const void * D.246040)
{
  struct function_path * D.250785;
  struct function_path * D.250784;
  align_val_t __al;
  struct function_path * D.250782;
  bool retval.513;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<function_path>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.513 = _4 != 0;
  if (retval.513 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 768614336404564650)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 24;
  D.250785 = operator new (_6);
  D.250782 = D.250785;

  <bb 7> :
<L6>:
  return D.250782;

}



;; Function __gnu_cxx::new_allocator<function_path>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI13function_pathE11_M_max_sizeEv, funcdef_no=10695, decl_uid=174639, cgraph_uid=7326, symbol_order=8123)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<function_path>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.250786;

  <bb 2> :
  D.250786 = 384307168202282325;

  <bb 3> :
<L0>:
  return D.250786;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI13function_pathSaIS0_EE12_Vector_implD2Ev, funcdef_no=6816, decl_uid=175000, cgraph_uid=3444, symbol_order=4223)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<function_path>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<function_path>::~allocator (_ZNSaI13function_pathED2Ev, funcdef_no=7826, decl_uid=174733, cgraph_uid=4458, symbol_order=5247)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<function_path>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<function_path>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<function_path>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI13function_pathED2Ev, funcdef_no=8793, decl_uid=174662, cgraph_uid=5425, symbol_order=6218)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<function_path>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI13function_pathSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8559, decl_uid=174841, cgraph_uid=5191, symbol_order=5984)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.250788;

  <bb 2> :
  D.250788 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.250788;

}



;; Function std::vector<function_path>::end (_ZNKSt6vectorI13function_pathSaIS0_EE3endEv, funcdef_no=8558, decl_uid=175223, cgraph_uid=5190, symbol_order=5983)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<function_path>::end (const struct vector * const this)
{
  struct const_iterator D.223631;
  struct const_iterator D.250790;

  <bb 2> :
  _1 = &this->D.175608._M_impl.D.174953._M_finish;
  __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::__normal_iterator (&D.223631, _1);
  D.250790 = D.223631;
  D.223631 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250790;

}



;; Function __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9347, decl_uid=212652, cgraph_uid=5979, symbol_order=6772)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::__normal_iterator (struct __normal_iterator * const this, const struct function_path * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<function_path>::begin (_ZNKSt6vectorI13function_pathSaIS0_EE5beginEv, funcdef_no=8557, decl_uid=175219, cgraph_uid=5189, symbol_order=5982)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<function_path>::begin (const struct vector * const this)
{
  struct const_iterator D.223629;
  struct const_iterator D.250793;

  <bb 2> :
  _1 = &this->D.175608._M_impl.D.174953._M_start;
  __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::__normal_iterator (&D.223629, _1);
  D.250793 = D.223629;
  D.223629 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250793;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*, function_path> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8560, decl_uid=212672, cgraph_uid=5192, symbol_order=5985)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*, function_path> (struct __normal_iterator __first, struct __normal_iterator __last, struct function_path * __result, struct allocator & D.223636)
{
  struct function_path * D.250798;
  struct function_path * D.250796;

  <bb 2> :
  D.250798 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (__first, __last, __result);
  D.250796 = D.250798;

  <bb 3> :
<L0>:
  return D.250796;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9349, decl_uid=223638, cgraph_uid=5982, symbol_order=6775)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (struct __normal_iterator __first, struct __normal_iterator __last, struct function_path * __result)
{
  struct function_path * D.250801;
  const bool __assignable;
  struct function_path * D.250799;

  <bb 2> :
  __assignable = 1;
  D.250801 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (__first, __last, __result);
  D.250799 = D.250801;

  <bb 3> :
<L0>:
  return D.250799;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10051, decl_uid=235435, cgraph_uid=6683, symbol_order=7480)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (struct __normal_iterator __first, struct __normal_iterator __last, struct function_path * __result)
{
  struct function_path * D.250804;
  struct function_path * D.250802;

  <bb 2> :
  D.250804 = std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (__first, __last, __result);
  D.250802 = D.250804;

  <bb 3> :
<L0>:
  return D.250802;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10570, decl_uid=242069, cgraph_uid=7202, symbol_order=7999)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (struct __normal_iterator __first, struct __normal_iterator __last, struct function_path * __result)
{
  struct function_path * D.250809;
  struct __normal_iterator D.250807;
  struct __normal_iterator D.250806;
  struct function_path * D.250805;

  <bb 2> :
  D.250806 = std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (__last);
  D.250807 = std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (__first);
  D.250809 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (D.250807, D.250806, __result);
  D.250805 = D.250809;

  <bb 3> :
<L0>:
  return D.250805;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9631, decl_uid=229463, cgraph_uid=6263, symbol_order=7056)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.250810;

  <bb 2> :
  D.250810 = __it;

  <bb 3> :
<L0>:
  return D.250810;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEEPS2_ET1_T0_SB_SA_, funcdef_no=10868, decl_uid=245518, cgraph_uid=7500, symbol_order=8299)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*> (struct __normal_iterator __first, struct __normal_iterator __last, struct function_path * __result)
{
  struct function_path * D.250814;
  struct function_path * D.250812;

  <bb 2> :
  __result.514_1 = __result;
  _2 = std::__niter_base<function_path*> (__result.514_1);
  _3 = std::__niter_base<const function_path*, std::vector<function_path> > (__last);
  _4 = std::__niter_base<const function_path*, std::vector<function_path> > (__first);
  D.250814 = std::__copy_move_a1<false, const function_path*, function_path*> (_4, _3, _2);
  _5 = D.250814;
  D.250812 = std::__niter_wrap<function_path*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.250812;

}



;; Function std::__niter_base<function_path*> (_ZSt12__niter_baseIP13function_pathET_S2_, funcdef_no=10232, decl_uid=229731, cgraph_uid=6864, symbol_order=7661)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__niter_base<function_path*> (struct function_path * __it)
{
  struct function_path * D.250815;

  <bb 2> :
  D.250815 = __it;

  <bb 3> :
<L0>:
  return D.250815;

}



;; Function std::__niter_base<const function_path*, std::vector<function_path> > (_ZSt12__niter_baseIPK13function_pathSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10227, decl_uid=237871, cgraph_uid=6859, symbol_order=7656)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct function_path * std::__niter_base<const function_path*, std::vector<function_path> > (struct __normal_iterator __it)
{
  const struct function_path * D.250817;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::base (&__it);
  D.250817 = *_1;

  <bb 3> :
<L0>:
  return D.250817;

}



;; Function __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10696, decl_uid=212639, cgraph_uid=7328, symbol_order=8125)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct function_path * const & __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >::base (const struct __normal_iterator * const this)
{
  const struct function_path * const & D.250819;

  <bb 2> :
  D.250819 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.250819;

}



;; Function std::__copy_move_a1<false, const function_path*, function_path*> (_ZSt14__copy_move_a1ILb0EPK13function_pathPS0_ET1_T0_S5_S4_, funcdef_no=10229, decl_uid=238025, cgraph_uid=6861, symbol_order=7658)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a1<false, const function_path*, function_path*> (const struct function_path * __first, const struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.250823;
  struct function_path * D.250821;

  <bb 2> :
  D.250823 = std::__copy_move_a2<false, const function_path*, function_path*> (__first, __last, __result);
  D.250821 = D.250823;

  <bb 3> :
<L0>:
  return D.250821;

}



;; Function std::__copy_move_a2<false, const function_path*, function_path*> (_ZSt14__copy_move_a2ILb0EPK13function_pathPS0_ET1_T0_S5_S4_, funcdef_no=10697, decl_uid=242810, cgraph_uid=7329, symbol_order=8126)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a2<false, const function_path*, function_path*> (const struct function_path * __first, const struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.250824;

  <bb 2> :
  D.250824 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<function_path> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.250824;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<function_path> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI13function_pathEEPT_PKS4_S7_S5_, funcdef_no=10898, decl_uid=246063, cgraph_uid=7530, symbol_order=8329)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct function_path * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<function_path> (const struct function_path * __first, const struct function_path * __last, struct function_path * __result)
{
  const ptrdiff_t _Num;
  struct function_path * D.250829;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 24;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.515_2 = (long unsigned int) _Num;
  _3 = _Num.515_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.516_4 = (long unsigned int) _Num;
  _5 = _Num.516_4 * 24;
  D.250829 = __result + _5;

  <bb 5> :
<L3>:
  return D.250829;

}



;; Function std::__niter_wrap<function_path*> (_ZSt12__niter_wrapIP13function_pathET_RKS2_S2_, funcdef_no=10234, decl_uid=238068, cgraph_uid=6866, symbol_order=7663)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__niter_wrap<function_path*> (struct function_path * const & D.242832, struct function_path * __res)
{
  struct function_path * D.250831;

  <bb 2> :
  D.250831 = __res;

  <bb 3> :
<L0>:
  return D.250831;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::~_Vector_base (_ZNSt12_Vector_baseI13function_pathSaIS0_EED2Ev, funcdef_no=7829, decl_uid=175063, cgraph_uid=4461, symbol_order=5250)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.174953._M_end_of_storage;
  _2 = this->_M_impl.D.174953._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.174953._M_start;
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (_ZNSt12_Vector_baseI13function_pathSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8795, decl_uid=174960, cgraph_uid=5427, symbol_order=6220)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (struct _Vector_base * const this, struct function_path * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<function_path> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<function_path> >::deallocate (_ZNSt16allocator_traitsISaI13function_pathEE10deallocateERS1_PS0_m, funcdef_no=9628, decl_uid=174765, cgraph_uid=6260, symbol_order=7053)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<function_path> >::deallocate (struct allocator_type & __a, struct function_path * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<function_path>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<function_path>::deallocate (_ZN9__gnu_cxx13new_allocatorI13function_pathE10deallocateEPS1_m, funcdef_no=10225, decl_uid=174616, cgraph_uid=6857, symbol_order=7654)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<function_path>::deallocate (struct new_allocator * const this, struct function_path * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function hash_map<tree_node*, function_free_array>::get (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7678, decl_uid=192446, cgraph_uid=4310, symbol_order=5099)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_free_array * hash_map<tree_node*, function_free_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.250847;
  struct hash_entry & D.250846;
  unsigned int D.250845;
  struct hash_entry & e;
  struct function_free_array * iftmp.517;
  struct function_free_array * D.250839;

  <bb 2> :
  _1 = &this->m_table;
  D.250845 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::hash (k);
  _2 = D.250845;
  D.250846 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.250846;
  D.250847 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_empty<hash_map<tree_node*, function_free_array>::hash_entry> (e);
  _3 = D.250847;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.517 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.517 = &e->m_value;

  <bb 5> :
  D.250839 = iftmp.517;

  <bb 6> :
<L3>:
  return D.250839;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE4hashERKS2_, funcdef_no=8562, decl_uid=192402, cgraph_uid=5194, symbol_order=5987)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::hash (union tree_node * const & h)
{
  hashval_t D.250848;

  <bb 2> :
  D.250848 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.250848;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8563, decl_uid=192589, cgraph_uid=5195, symbol_order=5988)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.250882;
  bool D.250881;
  bool D.250880;
  bool D.250879;
  bool D.250878;
  bool D.250877;
  struct value_type * D.250876;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.521;
  bool retval.520;
  struct value_type & D.250862;
  bool iftmp.519;
  bool retval.518;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 32;
  entry = _5 + _7;
  D.250877 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.250877;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.250878 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.250878;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.250879 = hash_map<tree_node*, function_free_array>::hash_entry::equal (entry, comparable);
  _11 = D.250879;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.519 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.519 = 0;

  <bb 8> :
  retval.518 = iftmp.519;
  if (retval.518 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.250862 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  entry = _17 + _19;
  D.250880 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.250880;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.250881 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.250881;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.250882 = hash_map<tree_node*, function_free_array>::hash_entry::equal (entry, comparable);
  _23 = D.250882;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.521 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.521 = 0;

  <bb 18> :
  retval.520 = iftmp.521;
  if (retval.520 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.250862 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.250862;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8976, decl_uid=192685, cgraph_uid=5608, symbol_order=6401)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.250885;
  bool D.250883;

  <bb 2> :
  D.250885 = hash_map<tree_node*, function_free_array>::hash_entry::is_empty (v);
  D.250883 = D.250885;

  <bb 3> :
<L0>:
  return D.250883;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8675, decl_uid=192515, cgraph_uid=5307, symbol_order=6100)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_free_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.250888;
  bool D.250886;

  <bb 2> :
  D.250888 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_empty<hash_map<tree_node*, function_free_array>::hash_entry> (e);
  D.250886 = D.250888;

  <bb 3> :
<L0>:
  return D.250886;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8977, decl_uid=192683, cgraph_uid=5609, symbol_order=6402)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.250891;
  bool D.250889;

  <bb 2> :
  D.250891 = hash_map<tree_node*, function_free_array>::hash_entry::is_deleted (v);
  D.250889 = D.250891;

  <bb 3> :
<L0>:
  return D.250889;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9813, decl_uid=192510, cgraph_uid=6445, symbol_order=7238)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_free_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.250894;
  bool D.250892;

  <bb 2> :
  D.250894 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_deleted<hash_map<tree_node*, function_free_array>::hash_entry> (e);
  D.250892 = D.250894;

  <bb 3> :
<L0>:
  return D.250892;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_deleted<hash_map<tree_node*, function_free_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10373, decl_uid=239710, cgraph_uid=7005, symbol_order=7802)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_deleted<hash_map<tree_node*, function_free_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.250895;

  <bb 2> :
  _1 = entry->m_key;
  D.250895 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.250895;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9353, decl_uid=192503, cgraph_uid=5985, symbol_order=6778)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_free_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.250899;
  bool D.250897;

  <bb 2> :
  _1 = &a->m_key;
  D.250899 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::equal_keys (_1, b);
  D.250897 = D.250899;

  <bb 3> :
<L0>:
  return D.250897;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE10equal_keysERKS2_S7_, funcdef_no=10055, decl_uid=192404, cgraph_uid=6687, symbol_order=7484)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.250900;

  <bb 2> :
  D.250900 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.250900;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_empty<hash_map<tree_node*, function_free_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8564, decl_uid=212706, cgraph_uid=5196, symbol_order=5989)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::is_empty<hash_map<tree_node*, function_free_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.250902;

  <bb 2> :
  _1 = entry->m_key;
  D.250902 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.250902;

}



;; Function function_free_array::function_free_array (_ZN19function_free_arrayC2ERKS_, funcdef_no=6326, decl_uid=192784, cgraph_uid=3301, symbol_order=4079)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_free_array::function_free_array (struct function_free_array * const this, const struct function_free_array & D.192786)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->free_type_array;
  _2 = &D.192786->free_type_array;
  std::vector<free_type>::vector (_1, _2);
  return;

}



;; Function std::vector<free_type>::vector (_ZNSt6vectorI9free_typeSaIS0_EEC2ERKS2_, funcdef_no=7680, decl_uid=173455, cgraph_uid=4312, symbol_order=5101)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<free_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct free_type * D.250908;
  struct __normal_iterator D.250905;
  struct __normal_iterator D.250904;
  struct allocator D.212821;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.173492;
  _2 = &__x->D.173492;
  _3 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_2);
  D.212821 = __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<free_type>::size (__x);
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_1, _4, &D.212821);

  <bb 3> :
  std::allocator<free_type>::~allocator (&D.212821);
  D.212821 = {CLOBBER};
  _5 = &this->D.173492;
  _6 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.173492._M_impl.D.172837._M_start;
  D.250904 = std::vector<free_type>::end (__x);
  D.250905 = std::vector<free_type>::begin (__x);
  D.250908 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*, free_type> (D.250905, D.250904, _7, _6);

  <bb 4> :
  _8 = D.250908;
  this->D.173492._M_impl.D.172837._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<free_type>::~allocator (&D.212821);
  resx 2

  <bb 6> :
<L1>:
  D.212821 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.173492;
  std::_Vector_base<free_type, std::allocator<free_type> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI9free_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8566, decl_uid=172727, cgraph_uid=5198, symbol_order=5991)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.250910;

  <bb 2> :
  D.250910 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.250910;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI9free_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=8565, decl_uid=172699, cgraph_uid=5197, symbol_order=5990)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<free_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<free_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI9free_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9354, decl_uid=172664, cgraph_uid=5986, symbol_order=6779)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<free_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<free_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<free_type>::allocator (_ZNSaI9free_typeEC2ERKS0_, funcdef_no=10057, decl_uid=172607, cgraph_uid=6689, symbol_order=7486)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<free_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<free_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI9free_typeEC2ERKS2_, funcdef_no=10577, decl_uid=172536, cgraph_uid=7209, symbol_order=8006)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.172538)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_ZNSt12_Vector_baseI9free_typeSaIS0_EEC2EmRKS1_, funcdef_no=8568, decl_uid=172924, cgraph_uid=5200, symbol_order=5993)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI9free_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9356, decl_uid=172829, cgraph_uid=5988, symbol_order=6781)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<free_type>::allocator (this, __a);
  _1 = &this->D.172837;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI9free_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8652, decl_uid=172784, cgraph_uid=5284, symbol_order=6077)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_M_create_storage (_ZNSt12_Vector_baseI9free_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9358, decl_uid=172848, cgraph_uid=5990, symbol_order=6783)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct free_type * D.250917;

  <bb 2> :
  D.250917 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_allocate (this, __n);
  _1 = D.250917;
  this->_M_impl.D.172837._M_start = _1;
  _2 = this->_M_impl.D.172837._M_start;
  this->_M_impl.D.172837._M_finish = _2;
  _3 = this->_M_impl.D.172837._M_start;
  _4 = __n * 24;
  _5 = _3 + _4;
  this->_M_impl.D.172837._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_M_allocate (_ZNSt12_Vector_baseI9free_typeSaIS0_EE11_M_allocateEm, funcdef_no=9460, decl_uid=172841, cgraph_uid=6092, symbol_order=6885)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct free_type * std::_Vector_base<free_type, std::allocator<free_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct free_type * D.250924;
  struct free_type * iftmp.522;
  struct free_type * D.250918;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.250924 = std::allocator_traits<std::allocator<free_type> >::allocate (_1, __n);
  iftmp.522 = D.250924;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.522 = 0B;

  <bb 5> :
  D.250918 = iftmp.522;

  <bb 6> :
<L3>:
  return D.250918;

}



;; Function std::allocator_traits<std::allocator<free_type> >::allocate (_ZNSt16allocator_traitsISaI9free_typeEE8allocateERS1_m, funcdef_no=10130, decl_uid=172642, cgraph_uid=6762, symbol_order=7559)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct free_type * std::allocator_traits<std::allocator<free_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct free_type * D.250927;
  struct free_type * D.250925;

  <bb 2> :
  D.250927 = __gnu_cxx::new_allocator<free_type>::allocate (__a, __n, 0B);
  D.250925 = D.250927;

  <bb 3> :
<L0>:
  return D.250925;

}



;; Function __gnu_cxx::new_allocator<free_type>::allocate (_ZN9__gnu_cxx13new_allocatorI9free_typeE8allocateEmPKv, funcdef_no=10631, decl_uid=172496, cgraph_uid=7264, symbol_order=8061)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct free_type * __gnu_cxx::new_allocator<free_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.245762)
{
  struct free_type * D.250938;
  struct free_type * D.250937;
  align_val_t __al;
  struct free_type * D.250935;
  bool retval.523;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<free_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.523 = _4 != 0;
  if (retval.523 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 768614336404564650)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 24;
  D.250938 = operator new (_6);
  D.250935 = D.250938;

  <bb 7> :
<L6>:
  return D.250935;

}



;; Function __gnu_cxx::new_allocator<free_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI9free_typeE11_M_max_sizeEv, funcdef_no=10632, decl_uid=172523, cgraph_uid=7263, symbol_order=8060)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<free_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.250939;

  <bb 2> :
  D.250939 = 384307168202282325;

  <bb 3> :
<L0>:
  return D.250939;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI9free_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6365, decl_uid=172884, cgraph_uid=3338, symbol_order=4116)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<free_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<free_type>::~allocator (_ZNSaI9free_typeED2Ev, funcdef_no=7736, decl_uid=172617, cgraph_uid=4368, symbol_order=5157)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<free_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<free_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI9free_typeED2Ev, funcdef_no=8655, decl_uid=172546, cgraph_uid=5287, symbol_order=6080)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI9free_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8572, decl_uid=172725, cgraph_uid=5204, symbol_order=5997)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.250941;

  <bb 2> :
  D.250941 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.250941;

}



;; Function std::vector<free_type>::end (_ZNKSt6vectorI9free_typeSaIS0_EE3endEv, funcdef_no=8571, decl_uid=173107, cgraph_uid=5203, symbol_order=5996)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<free_type>::end (const struct vector * const this)
{
  struct const_iterator D.223706;
  struct const_iterator D.250943;

  <bb 2> :
  _1 = &this->D.173492._M_impl.D.172837._M_finish;
  __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::__normal_iterator (&D.223706, _1);
  D.250943 = D.223706;
  D.223706 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250943;

}



;; Function __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9360, decl_uid=212790, cgraph_uid=5992, symbol_order=6785)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::__normal_iterator (struct __normal_iterator * const this, const struct free_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<free_type>::begin (_ZNKSt6vectorI9free_typeSaIS0_EE5beginEv, funcdef_no=8570, decl_uid=173103, cgraph_uid=5202, symbol_order=5995)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<free_type>::begin (const struct vector * const this)
{
  struct const_iterator D.223704;
  struct const_iterator D.250946;

  <bb 2> :
  _1 = &this->D.173492._M_impl.D.172837._M_start;
  __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::__normal_iterator (&D.223704, _1);
  D.250946 = D.223704;
  D.223704 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.250946;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*, free_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8573, decl_uid=212810, cgraph_uid=5205, symbol_order=5998)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*, free_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct free_type * __result, struct allocator & D.223711)
{
  struct free_type * D.250951;
  struct free_type * D.250949;

  <bb 2> :
  D.250951 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (__first, __last, __result);
  D.250949 = D.250951;

  <bb 3> :
<L0>:
  return D.250949;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9362, decl_uid=223713, cgraph_uid=5995, symbol_order=6788)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct free_type * __result)
{
  struct free_type * D.250954;
  const bool __assignable;
  struct free_type * D.250952;

  <bb 2> :
  __assignable = 1;
  D.250954 = std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (__first, __last, __result);
  D.250952 = D.250954;

  <bb 3> :
<L0>:
  return D.250952;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10059, decl_uid=235604, cgraph_uid=6691, symbol_order=7488)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct free_type * std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct free_type * __result)
{
  struct free_type * __cur;
  struct free_type * D.250956;
  bool retval.524;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator* (&__first);
  _2 = std::__addressof<free_type> (__cur);
  std::_Construct<free_type, const free_type&> (_2, _1);
  __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator++ (&__first);
  __cur = __cur + 24;

  <bb 4> :
  retval.524 = __gnu_cxx::operator!=<const free_type*, std::vector<free_type> > (&__first, &__last);
  if (retval.524 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.250956 = __cur;

  <bb 6> :
<L3>:
  return D.250956;

}



;; Function __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS1_SaIS1_EEEdeEv, funcdef_no=10582, decl_uid=212748, cgraph_uid=7214, symbol_order=8011)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct free_type & __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator* (const struct __normal_iterator * const this)
{
  const struct free_type & D.250958;

  <bb 2> :
  D.250958 = this->_M_current;

  <bb 3> :
<L0>:
  return D.250958;

}



;; Function std::__addressof<free_type> (_ZSt11__addressofI9free_typeEPT_RS1_, funcdef_no=10581, decl_uid=226178, cgraph_uid=7213, symbol_order=8010)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__addressof<free_type> (struct free_type & __r)
{
  struct free_type * D.250960;

  <bb 2> :
  D.250960 = __r;

  <bb 3> :
<L0>:
  return D.250960;

}



;; Function std::_Construct<free_type, const free_type&> (_ZSt10_ConstructI9free_typeJRKS0_EEvPT_DpOT0_, funcdef_no=10583, decl_uid=242123, cgraph_uid=7215, symbol_order=8012)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<free_type, const free_type&> (struct free_type * __p, const struct free_type & __args#0)
{
  void * D.245558;
  void * D.245557;
  const struct free_type * D.245559;

  <bb 2> :
  D.245559 = std::forward<const free_type&> (__args#0);
  D.245557 = __p;
  D.245558 = operator new (24, D.245557);
  MEM[(struct free_type *)D.245558] = *D.245559;
  return;

}



;; Function std::forward<const free_type&> (_ZSt7forwardIRK9free_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9471, decl_uid=225792, cgraph_uid=6103, symbol_order=6896)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct free_type & std::forward<const free_type&> (const struct type & __t)
{
  const struct free_type & D.250962;

  <bb 2> :
  D.250962 = __t;

  <bb 3> :
<L0>:
  return D.250962;

}



;; Function __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS1_SaIS1_EEEppEv, funcdef_no=10580, decl_uid=212752, cgraph_uid=7212, symbol_order=8009)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.250964;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 24;
  this->_M_current = _2;
  D.250964 = this;

  <bb 3> :
<L0>:
  return D.250964;

}



;; Function __gnu_cxx::operator!=<const free_type*, std::vector<free_type> > (_ZN9__gnu_cxxneIPK9free_typeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_, funcdef_no=10579, decl_uid=242116, cgraph_uid=7211, symbol_order=8008)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<const free_type*, std::vector<free_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.250966;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::base (__rhs);
  _4 = *_3;
  D.250966 = _2 != _4;

  <bb 3> :
<L0>:
  return D.250966;

}



;; Function __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10633, decl_uid=212777, cgraph_uid=7265, symbol_order=8062)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct free_type * const & __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::base (const struct __normal_iterator * const this)
{
  const struct free_type * const & D.250968;

  <bb 2> :
  D.250968 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.250968;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::~_Vector_base (_ZNSt12_Vector_baseI9free_typeSaIS0_EED2Ev, funcdef_no=7739, decl_uid=172947, cgraph_uid=4371, symbol_order=5160)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.172837._M_end_of_storage;
  _2 = this->_M_impl.D.172837._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.172837._M_start;
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (_ZNSt12_Vector_baseI9free_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8657, decl_uid=172844, cgraph_uid=5289, symbol_order=6082)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (struct _Vector_base * const this, struct free_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<free_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<free_type> >::deallocate (_ZNSt16allocator_traitsISaI9free_typeEE10deallocateERS1_PS0_m, funcdef_no=9458, decl_uid=172649, cgraph_uid=6090, symbol_order=6883)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<free_type> >::deallocate (struct allocator_type & __a, struct free_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<free_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI9free_typeE10deallocateEPS1_m, funcdef_no=10129, decl_uid=172500, cgraph_uid=6761, symbol_order=7558)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::deallocate (struct new_allocator * const this, struct free_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function hash_map<tree_node*, int>::hash_map (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEEC2Embbb, funcdef_no=7686, decl_uid=193237, cgraph_uid=4318, symbol_order=5107)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, int>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8576, decl_uid=193196, cgraph_uid=5208, symbol_order=6001)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.250977;
  unsigned int D.250976;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.250976 = hash_table_higher_prime_index (size);
  size_prime_index = D.250976;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.250977 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.250977;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9365, decl_uid=193142, cgraph_uid=5997, symbol_order=6790)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.250993;
  struct value_type * D.250992;
  struct mem_alloc_description & D.250991;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.250989;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.250992 = xcallocator<hash_map<tree_node*, int>::hash_entry>::data_alloc (n);
  nentries = D.250992;
  goto <bb 6>; [INV]

  <bb 5> :
  D.250993 = ggc_cleared_vec_alloc<hash_map<tree_node*, int>::hash_entry> (n);
  nentries = D.250993;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.250989 = nentries;

  <bb 9> :
<L14>:
  return D.250989;

}



;; Function xcallocator<hash_map<tree_node*, int>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEE10data_allocEm, funcdef_no=10061, decl_uid=212867, cgraph_uid=6693, symbol_order=7490)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, int>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.250996;
  struct hash_entry * D.250994;

  <bb 2> :
  D.250996 = xcalloc (count, 16);
  D.250994 = D.250996;

  <bb 3> :
<L0>:
  return D.250994;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, int>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEEPT_m, funcdef_no=10062, decl_uid=235642, cgraph_uid=6694, symbol_order=7491)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, int>::hash_entry> (size_t c)
{
  struct hash_entry * D.251003;
  struct hash_entry * D.251002;
  struct hash_entry * D.251000;
  bool retval.525;

  <bb 2> :
  retval.525 = need_finalization_p<hash_map<tree_node*, int>::hash_entry> ();
  if (retval.525 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 16;
  D.251002 = ggc_internal_cleared_alloc (_1, finalize, 16, c);
  D.251000 = D.251002;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 16;
  D.251003 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.251000 = D.251003;

  <bb 5> :
<L2>:
  return D.251000;

}



;; Function finalize<hash_map<tree_node*, int>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEEvPv, funcdef_no=10585, decl_uid=242138, cgraph_uid=7217, symbol_order=8014)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, int>::hash_entry> (void * p)
{
  <bb 2> :
  MEM[(struct hash_entry *)p] = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, int>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEEbv, funcdef_no=10584, decl_uid=242137, cgraph_uid=7216, symbol_order=8013)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, int>::hash_entry> ()
{
  bool D.251004;

  <bb 2> :
  D.251004 = 0;

  <bb 3> :
<L0>:
  return D.251004;

}



;; Function hash_map<tree_node*, int>::get (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE3getERKS1_, funcdef_no=7691, decl_uid=192923, cgraph_uid=4323, symbol_order=5112)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
int * hash_map<tree_node*, int>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.251014;
  struct hash_entry & D.251013;
  unsigned int D.251012;
  struct hash_entry & e;
  int * iftmp.526;
  int * D.251006;

  <bb 2> :
  _1 = &this->m_table;
  D.251012 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::hash (k);
  _2 = D.251012;
  D.251013 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.251013;
  D.251014 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_empty<hash_map<tree_node*, int>::hash_entry> (e);
  _3 = D.251014;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.526 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.526 = &e->m_value;

  <bb 5> :
  D.251006 = iftmp.526;

  <bb 6> :
<L3>:
  return D.251006;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE4hashERKS2_, funcdef_no=8578, decl_uid=192879, cgraph_uid=5210, symbol_order=6003)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, int>::hash (union tree_node * const & h)
{
  hashval_t D.251015;

  <bb 2> :
  D.251015 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.251015;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8581, decl_uid=193063, cgraph_uid=5213, symbol_order=6006)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.251049;
  bool D.251048;
  bool D.251047;
  bool D.251046;
  bool D.251045;
  bool D.251044;
  struct value_type * D.251043;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.530;
  bool retval.529;
  struct value_type & D.251029;
  bool iftmp.528;
  bool retval.527;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 16;
  entry = _5 + _7;
  D.251044 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.251044;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.251045 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.251045;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.251046 = hash_map<tree_node*, int>::hash_entry::equal (entry, comparable);
  _11 = D.251046;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.528 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.528 = 0;

  <bb 8> :
  retval.527 = iftmp.528;
  if (retval.527 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.251029 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 16;
  entry = _17 + _19;
  D.251047 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.251047;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.251048 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.251048;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.251049 = hash_map<tree_node*, int>::hash_entry::equal (entry, comparable);
  _23 = D.251049;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.530 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.530 = 0;

  <bb 18> :
  retval.529 = iftmp.530;
  if (retval.529 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.251029 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.251029;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE8is_emptyERS8_, funcdef_no=8583, decl_uid=193159, cgraph_uid=5215, symbol_order=6008)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.251052;
  bool D.251050;

  <bb 2> :
  D.251052 = hash_map<tree_node*, int>::hash_entry::is_empty (v);
  D.251050 = D.251052;

  <bb 3> :
<L0>:
  return D.251050;

}



;; Function hash_map<tree_node*, int>::hash_entry::is_empty (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry8is_emptyERKS7_, funcdef_no=8580, decl_uid=192992, cgraph_uid=5212, symbol_order=6005)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, int>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.251055;
  bool D.251053;

  <bb 2> :
  D.251055 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_empty<hash_map<tree_node*, int>::hash_entry> (e);
  D.251053 = D.251055;

  <bb 3> :
<L0>:
  return D.251053;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE10is_deletedERS8_, funcdef_no=8584, decl_uid=193157, cgraph_uid=5216, symbol_order=6009)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.251058;
  bool D.251056;

  <bb 2> :
  D.251058 = hash_map<tree_node*, int>::hash_entry::is_deleted (v);
  D.251056 = D.251058;

  <bb 3> :
<L0>:
  return D.251056;

}



;; Function hash_map<tree_node*, int>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry10is_deletedERKS7_, funcdef_no=9369, decl_uid=192987, cgraph_uid=6001, symbol_order=6794)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, int>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.251061;
  bool D.251059;

  <bb 2> :
  D.251061 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_deleted<hash_map<tree_node*, int>::hash_entry> (e);
  D.251059 = D.251061;

  <bb 3> :
<L0>:
  return D.251059;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_deleted<hash_map<tree_node*, int>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE10is_deletedIN8hash_mapIS2_iS4_E10hash_entryEEEbRKT_, funcdef_no=10071, decl_uid=235705, cgraph_uid=6703, symbol_order=7500)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_deleted<hash_map<tree_node*, int>::hash_entry> (const struct hash_entry & entry)
{
  bool D.251062;

  <bb 2> :
  _1 = entry->m_key;
  D.251062 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.251062;

}



;; Function hash_map<tree_node*, int>::hash_entry::equal (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry5equalERKS7_RKS1_, funcdef_no=9367, decl_uid=192980, cgraph_uid=5999, symbol_order=6792)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, int>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.251066;
  bool D.251064;

  <bb 2> :
  _1 = &a->m_key;
  D.251066 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::equal_keys (_1, b);
  D.251064 = D.251066;

  <bb 3> :
<L0>:
  return D.251064;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE10equal_keysERKS2_S6_, funcdef_no=10069, decl_uid=192881, cgraph_uid=6701, symbol_order=7498)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, int>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.251067;

  <bb 2> :
  D.251067 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.251067;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_empty<hash_map<tree_node*, int>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE8is_emptyIN8hash_mapIS2_iS4_E10hash_entryEEEbRKT_, funcdef_no=8582, decl_uid=212860, cgraph_uid=5214, symbol_order=6007)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, int>::is_empty<hash_map<tree_node*, int>::hash_entry> (const struct hash_entry & entry)
{
  bool D.251069;

  <bb 2> :
  _1 = entry->m_key;
  D.251069 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.251069;

}



;; Function gimple_block (_ZL12gimple_blockPK6gimple, funcdef_no=2001, decl_uid=92276, cgraph_uid=1138, symbol_order=1298)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
union tree_node * gimple_block (const struct gimple * g)
{
  union tree_node * D.251077;
  union tree_node * iftmp.531;
  union tree_node * D.251071;

  <bb 2> :
  _1 = g->location;
  _2 = IS_ADHOC_LOC (_1);
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = g->location;
  line_table.532_4 = line_table;
  D.251077 = get_data_from_adhoc_loc (line_table.532_4, _3);
  iftmp.531 = D.251077;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.531 = 0B;

  <bb 5> :
  D.251071 = iftmp.531;

  <bb 6> :
<L3>:
  return D.251071;

}



;; Function IS_ADHOC_LOC (_Z12IS_ADHOC_LOCj, funcdef_no=1146, decl_uid=35072, cgraph_uid=320, symbol_order=337)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool IS_ADHOC_LOC (location_t loc)
{
  bool D.251078;

  <bb 2> :
  loc.533_1 = (signed int) loc;
  D.251078 = loc.533_1 < 0;

  <bb 3> :
<L0>:
  return D.251078;

}



;; Function hash_map<tree_node*, int>::put (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE3putERKS1_RKi, funcdef_no=7690, decl_uid=192919, cgraph_uid=4322, symbol_order=5111)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
bool hash_map<tree_node*, int>::put (struct hash_map * const this, union tree_node * const & k, const int & v)
{
  bool D.251087;
  struct hash_entry * D.251086;
  unsigned int D.251085;
  bool ins;
  struct hash_entry * e;
  bool D.251083;
  void * D.212856;
  void * D.212855;

  <bb 2> :
  _1 = &this->m_table;
  D.251085 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::hash (k);
  _2 = D.251085;
  D.251086 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.251086;
  D.251087 = hash_map<tree_node*, int>::hash_entry::is_empty (e);
  ins = D.251087;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.212855 = &e->m_value;
  D.212856 = operator new (4, D.212855);
  _4 = *v;
  MEM[(int *)D.212856] = _4;
  goto <bb 5>; [INV]

  <bb 4> :
  _5 = *v;
  e->m_value = _5;

  <bb 5> :
  D.251083 = ~ins;

  <bb 6> :
<L3>:
  return D.251083;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8579, decl_uid=193074, cgraph_uid=5211, symbol_order=6004)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.251137;
  bool D.251136;
  bool D.251135;
  bool D.251134;
  bool D.251133;
  bool D.251132;
  struct value_type * D.251131;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.539;
  bool retval.538;
  bool retval.537;
  bool retval.536;
  bool retval.535;
  bool retval.534;
  struct value_type * D.251093;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 16;
  entry = _11 + _13;
  size = this->m_size;
  D.251132 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.534 = D.251132;
  if (retval.534 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.251133 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.535 = D.251133;
  if (retval.535 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 16;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.251134 = hash_map<tree_node*, int>::hash_entry::equal (entry, comparable);
  retval.536 = D.251134;
  if (retval.536 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 16;
  D.251093 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 16;
  entry = _24 + _26;
  D.251135 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.537 = D.251135;
  if (retval.537 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.251136 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.538 = D.251136;
  if (retval.538 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 16;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.251137 = hash_map<tree_node*, int>::hash_entry::equal (entry, comparable);
  retval.539 = D.251137;
  if (retval.539 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 16;
  D.251093 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.251093 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.251093 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 16;
  D.251093 = _37 + _39;

  <bb 27> :
<L37>:
  return D.251093;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9366, decl_uid=193155, cgraph_uid=5998, symbol_order=6791)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.251168;
  unsigned int D.251167;
  bool D.251166;
  bool D.251165;
  struct mem_alloc_description & D.251164;
  struct value_type * D.251163;
  unsigned int D.251162;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.235693;
  void * D.235692;
  struct hash_entry * D.235694;
  bool iftmp.543;
  bool retval.542;
  bool iftmp.541;
  bool retval.540;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 16;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.541 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.541 = 0;

  <bb 6> :
  retval.540 = iftmp.541;
  if (retval.540 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.251162 = hash_table_higher_prime_index (_5);
  nindex = D.251162;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.251163 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.251163;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.251165 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.251165;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.251166 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.251166;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.543 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.543 = 0;

  <bb 15> :
  retval.542 = iftmp.543;
  if (retval.542 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.251167 = hash_map<tree_node*, int>::hash_entry::hash (x);
  _16 = D.251167;
  D.251168 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.251168;
  D.235694 = std::move<hash_map<tree_node*, int>::hash_entry&> (x);
  D.235692 = q;
  D.235693 = operator new (16, D.235692);
  MEM[(struct value_type *)D.235693] = *D.235694;

  <bb 17> :
  p = p + 16;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, int>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10063, decl_uid=193050, cgraph_uid=6695, symbol_order=7492)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.251169;

  <bb 2> :
  D.251169 = this->m_size;

  <bb 3> :
<L0>:
  return D.251169;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10064, decl_uid=193052, cgraph_uid=6696, symbol_order=7493)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.251171;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.251171 = _1 - _2;

  <bb 3> :
<L0>:
  return D.251171;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10065, decl_uid=193152, cgraph_uid=6697, symbol_order=7494)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.544;
  bool D.251173;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.544 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.544 = 0;

  <bb 6> :
  D.251173 = iftmp.544;

  <bb 7> :
<L4>:
  return D.251173;

}



;; Function hash_map<tree_node*, int>::hash_entry::hash (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry4hashERKS7_, funcdef_no=10067, decl_uid=192978, cgraph_uid=6699, symbol_order=7496)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, int>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.251182;
  hashval_t D.251180;

  <bb 2> :
  _1 = &e->m_key;
  D.251182 = simple_hashmap_traits<default_hash_traits<tree_node*>, int>::hash (_1);
  D.251180 = D.251182;

  <bb 3> :
<L0>:
  return D.251180;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10066, decl_uid=193145, cgraph_uid=6698, symbol_order=7495)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.251195;
  bool D.251194;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.546;
  struct value_type * D.251186;
  bool retval.545;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 16;
  slot = _2 + _4;
  D.251194 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.545 = D.251194;
  if (retval.545 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.251186 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 16;
  slot = _8 + _10;
  D.251195 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.546 = D.251195;
  if (retval.546 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.251186 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.251186;

}



;; Function std::move<hash_map<tree_node*, int>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEEONSt16remove_referenceIT_E4typeEOSB_, funcdef_no=10068, decl_uid=235666, cgraph_uid=6700, symbol_order=7497)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, int>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.251196;

  <bb 2> :
  D.251196 = __t;

  <bb 3> :
<L0>:
  return D.251196;

}



;; Function xcallocator<hash_map<tree_node*, int>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryEE9data_freeEPS8_, funcdef_no=8586, decl_uid=212869, cgraph_uid=5218, symbol_order=6011)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, int>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorE10mark_emptyERS8_, funcdef_no=9368, decl_uid=193163, cgraph_uid=6000, symbol_order=6793)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, int>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, int>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry10mark_emptyERS7_, funcdef_no=10070, decl_uid=192990, cgraph_uid=6702, symbol_order=7499)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, int>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, int>::mark_empty<hash_map<tree_node*, int>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::mark_empty<hash_map<tree_node*, int>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE10mark_emptyIN8hash_mapIS2_iS4_E10hash_entryEEEvRT_, funcdef_no=10586, decl_uid=242164, cgraph_uid=7218, symbol_order=8015)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, int>::mark_empty<hash_map<tree_node*, int>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function std::vector<free_type>::operator[] (_ZNSt6vectorI9free_typeSaIS0_EEixEm, funcdef_no=7689, decl_uid=173145, cgraph_uid=4321, symbol_order=5110)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<free_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.251199;

  <bb 2> :
  _1 = this->D.173492._M_impl.D.172837._M_start;
  _2 = __n * 24;
  D.251199 = _1 + _2;

  <bb 3> :
<L0>:
  return D.251199;

}



;; Function std::vector<free_type>::size (_ZNKSt6vectorI9free_typeSaIS0_EE4sizeEv, funcdef_no=7688, decl_uid=173125, cgraph_uid=4320, symbol_order=5109)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<free_type>::size (const struct vector * const this)
{
  size_type D.251201;

  <bb 2> :
  _1 = this->D.173492._M_impl.D.172837._M_finish;
  _2 = this->D.173492._M_impl.D.172837._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.251201 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.251201;

}



;; Function hash_map<tree_node*, int>::~hash_map (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEED2Ev, funcdef_no=6332, decl_uid=193260, cgraph_uid=3307, symbol_order=4085)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, int>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS2_EiEE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7693, decl_uid=193206, cgraph_uid=4325, symbol_order=5114)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.251216;
  bool D.251215;
  size_t i;
  bool iftmp.548;
  bool retval.547;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 16;
  _4 = _2 + _3;
  D.251215 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.251215;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 16;
  _9 = _7 + _8;
  D.251216 = hash_table<hash_map<tree_node*, int>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.251216;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.548 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.548 = 0;

  <bb 7> :
  retval.547 = iftmp.548;
  if (retval.547 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 16;
  _14 = _12 + _13;
  hash_map<tree_node*, int>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, int>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, int>::hash_entry::remove (_ZN8hash_mapIP9tree_nodei21simple_hashmap_traitsI19default_hash_traitsIS1_EiEE10hash_entry6removeERS7_, funcdef_no=8585, decl_uid=192983, cgraph_uid=5217, symbol_order=6010)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, int>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, int>::remove<hash_map<tree_node*, int>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, int>::remove<hash_map<tree_node*, int>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeEiE6removeIN8hash_mapIS2_iS4_E10hash_entryEEEvRT_, funcdef_no=9370, decl_uid=223782, cgraph_uid=6002, symbol_order=6795)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, int>::remove<hash_map<tree_node*, int>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  *_2 = {CLOBBER};
  return;

}



;; Function ggc_remove<tree_node*>::remove (_ZN10ggc_removeIP9tree_nodeE6removeERS1_, funcdef_no=10072, decl_uid=85315, cgraph_uid=6704, symbol_order=7501)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ggc_remove<tree_node*>::remove (union tree_node * & D.242168)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::get (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7695, decl_uid=193318, cgraph_uid=4327, symbol_order=5116)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_pthread_detched_array * hash_map<tree_node*, function_pthread_detched_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.251225;
  struct hash_entry & D.251224;
  unsigned int D.251223;
  struct hash_entry & e;
  struct function_pthread_detched_array * iftmp.549;
  struct function_pthread_detched_array * D.251217;

  <bb 2> :
  _1 = &this->m_table;
  D.251223 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::hash (k);
  _2 = D.251223;
  D.251224 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.251224;
  D.251225 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (e);
  _3 = D.251225;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.549 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.549 = &e->m_value;

  <bb 5> :
  D.251217 = iftmp.549;

  <bb 6> :
<L3>:
  return D.251217;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE4hashERKS2_, funcdef_no=8587, decl_uid=193274, cgraph_uid=5219, symbol_order=6012)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::hash (union tree_node * const & h)
{
  hashval_t D.251226;

  <bb 2> :
  D.251226 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.251226;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8588, decl_uid=193461, cgraph_uid=5220, symbol_order=6013)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.251260;
  bool D.251259;
  bool D.251258;
  bool D.251257;
  bool D.251256;
  bool D.251255;
  struct value_type * D.251254;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.553;
  bool retval.552;
  struct value_type & D.251240;
  bool iftmp.551;
  bool retval.550;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 32;
  entry = _5 + _7;
  D.251255 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.251255;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.251256 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.251256;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.251257 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (entry, comparable);
  _11 = D.251257;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.551 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.551 = 0;

  <bb 8> :
  retval.550 = iftmp.551;
  if (retval.550 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.251240 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  entry = _17 + _19;
  D.251258 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.251258;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.251259 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.251259;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.251260 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (entry, comparable);
  _23 = D.251260;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.553 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.553 = 0;

  <bb 18> :
  retval.552 = iftmp.553;
  if (retval.552 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.251240 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.251240;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8964, decl_uid=193557, cgraph_uid=5596, symbol_order=6389)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.251263;
  bool D.251261;

  <bb 2> :
  D.251263 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_empty (v);
  D.251261 = D.251263;

  <bb 3> :
<L0>:
  return D.251261;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8703, decl_uid=193387, cgraph_uid=5335, symbol_order=6128)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.251266;
  bool D.251264;

  <bb 2> :
  D.251266 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (e);
  D.251264 = D.251266;

  <bb 3> :
<L0>:
  return D.251264;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8965, decl_uid=193555, cgraph_uid=5597, symbol_order=6390)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.251269;
  bool D.251267;

  <bb 2> :
  D.251269 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_deleted (v);
  D.251267 = D.251269;

  <bb 3> :
<L0>:
  return D.251267;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9807, decl_uid=193382, cgraph_uid=6439, symbol_order=7232)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.251272;
  bool D.251270;

  <bb 2> :
  D.251272 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_deleted<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (e);
  D.251270 = D.251272;

  <bb 3> :
<L0>:
  return D.251270;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_deleted<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10370, decl_uid=239692, cgraph_uid=7002, symbol_order=7799)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_deleted<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.251273;

  <bb 2> :
  _1 = entry->m_key;
  D.251273 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.251273;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9372, decl_uid=193375, cgraph_uid=6004, symbol_order=6797)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.251277;
  bool D.251275;

  <bb 2> :
  _1 = &a->m_key;
  D.251277 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::equal_keys (_1, b);
  D.251275 = D.251277;

  <bb 3> :
<L0>:
  return D.251275;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE10equal_keysERKS2_S7_, funcdef_no=10075, decl_uid=193276, cgraph_uid=6707, symbol_order=7504)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.251278;

  <bb 2> :
  D.251278 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.251278;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8589, decl_uid=212889, cgraph_uid=5221, symbol_order=6014)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::is_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.251280;

  <bb 2> :
  _1 = entry->m_key;
  D.251280 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.251280;

}



;; Function function_pthread_detched_array::function_pthread_detched_array (_ZN30function_pthread_detched_arrayC2ERKS_, funcdef_no=6335, decl_uid=193656, cgraph_uid=3310, symbol_order=4088)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_detched_array::function_pthread_detched_array (struct function_pthread_detched_array * const this, const struct function_pthread_detched_array & D.193658)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->pthread_detched_array;
  _2 = &D.193658->pthread_detched_array;
  std::vector<pthread_detched_type>::vector (_1, _2);
  return;

}



;; Function std::vector<pthread_detched_type>::vector (_ZNSt6vectorI20pthread_detched_typeSaIS0_EEC2ERKS2_, funcdef_no=7697, decl_uid=177677, cgraph_uid=4329, symbol_order=5118)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<pthread_detched_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct pthread_detched_type * D.251286;
  struct __normal_iterator D.251283;
  struct __normal_iterator D.251282;
  struct allocator D.213004;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.177714;
  _2 = &__x->D.177714;
  _3 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_2);
  D.213004 = __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<pthread_detched_type>::size (__x);
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_1, _4, &D.213004);

  <bb 3> :
  std::allocator<pthread_detched_type>::~allocator (&D.213004);
  D.213004 = {CLOBBER};
  _5 = &this->D.177714;
  _6 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.177714._M_impl.D.177059._M_start;
  D.251282 = std::vector<pthread_detched_type>::end (__x);
  D.251283 = std::vector<pthread_detched_type>::begin (__x);
  D.251286 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*, pthread_detched_type> (D.251283, D.251282, _7, _6);

  <bb 4> :
  _8 = D.251286;
  this->D.177714._M_impl.D.177059._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<pthread_detched_type>::~allocator (&D.213004);
  resx 2

  <bb 6> :
<L1>:
  D.213004 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.177714;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI20pthread_detched_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8591, decl_uid=176949, cgraph_uid=5223, symbol_order=6016)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.251288;

  <bb 2> :
  D.251288 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.251288;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI20pthread_detched_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=8590, decl_uid=176921, cgraph_uid=5222, symbol_order=6015)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<pthread_detched_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<pthread_detched_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI20pthread_detched_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9373, decl_uid=176886, cgraph_uid=6005, symbol_order=6798)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<pthread_detched_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<pthread_detched_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<pthread_detched_type>::allocator (_ZNSaI20pthread_detched_typeEC2ERKS0_, funcdef_no=10077, decl_uid=176829, cgraph_uid=6709, symbol_order=7506)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_detched_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeEC2ERKS2_, funcdef_no=10594, decl_uid=176758, cgraph_uid=7226, symbol_order=8023)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.176760)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EEC2EmRKS1_, funcdef_no=8593, decl_uid=177146, cgraph_uid=5225, symbol_order=6018)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9375, decl_uid=177051, cgraph_uid=6007, symbol_order=6800)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<pthread_detched_type>::allocator (this, __a);
  _1 = &this->D.177059;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8680, decl_uid=177006, cgraph_uid=5312, symbol_order=6105)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_create_storage (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9377, decl_uid=177070, cgraph_uid=6009, symbol_order=6802)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct pthread_detched_type * D.251295;

  <bb 2> :
  D.251295 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_allocate (this, __n);
  _1 = D.251295;
  this->_M_impl.D.177059._M_start = _1;
  _2 = this->_M_impl.D.177059._M_start;
  this->_M_impl.D.177059._M_finish = _2;
  _3 = this->_M_impl.D.177059._M_start;
  _4 = __n * 16;
  _5 = _3 + _4;
  this->_M_impl.D.177059._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_allocate (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE11_M_allocateEm, funcdef_no=9497, decl_uid=177063, cgraph_uid=6129, symbol_order=6922)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct pthread_detched_type * std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct pthread_detched_type * D.251302;
  struct pthread_detched_type * iftmp.554;
  struct pthread_detched_type * D.251296;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.251302 = std::allocator_traits<std::allocator<pthread_detched_type> >::allocate (_1, __n);
  iftmp.554 = D.251302;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.554 = 0B;

  <bb 5> :
  D.251296 = iftmp.554;

  <bb 6> :
<L3>:
  return D.251296;

}



;; Function std::allocator_traits<std::allocator<pthread_detched_type> >::allocate (_ZNSt16allocator_traitsISaI20pthread_detched_typeEE8allocateERS1_m, funcdef_no=10154, decl_uid=176864, cgraph_uid=6786, symbol_order=7583)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct pthread_detched_type * std::allocator_traits<std::allocator<pthread_detched_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct pthread_detched_type * D.251305;
  struct pthread_detched_type * D.251303;

  <bb 2> :
  D.251305 = __gnu_cxx::new_allocator<pthread_detched_type>::allocate (__a, __n, 0B);
  D.251303 = D.251305;

  <bb 3> :
<L0>:
  return D.251303;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::allocate (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeE8allocateEmPKv, funcdef_no=10645, decl_uid=176718, cgraph_uid=7278, symbol_order=8075)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct pthread_detched_type * __gnu_cxx::new_allocator<pthread_detched_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.245834)
{
  struct pthread_detched_type * D.251316;
  struct pthread_detched_type * D.251315;
  align_val_t __al;
  struct pthread_detched_type * D.251313;
  bool retval.555;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<pthread_detched_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.555 = _4 != 0;
  if (retval.555 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 1152921504606846975)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 16;
  D.251316 = operator new (_6);
  D.251313 = D.251316;

  <bb 7> :
<L6>:
  return D.251313;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI20pthread_detched_typeE11_M_max_sizeEv, funcdef_no=10646, decl_uid=176745, cgraph_uid=7277, symbol_order=8074)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<pthread_detched_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.251317;

  <bb 2> :
  D.251317 = 576460752303423487;

  <bb 3> :
<L0>:
  return D.251317;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6383, decl_uid=177106, cgraph_uid=3355, symbol_order=4133)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<pthread_detched_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<pthread_detched_type>::~allocator (_ZNSaI20pthread_detched_typeED2Ev, funcdef_no=7751, decl_uid=176839, cgraph_uid=4383, symbol_order=5172)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_detched_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_detched_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeED2Ev, funcdef_no=8683, decl_uid=176768, cgraph_uid=5315, symbol_order=6108)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_detched_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8597, decl_uid=176947, cgraph_uid=5229, symbol_order=6022)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.251319;

  <bb 2> :
  D.251319 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.251319;

}



;; Function std::vector<pthread_detched_type>::end (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE3endEv, funcdef_no=8596, decl_uid=177329, cgraph_uid=5228, symbol_order=6021)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<pthread_detched_type>::end (const struct vector * const this)
{
  struct const_iterator D.223830;
  struct const_iterator D.251321;

  <bb 2> :
  _1 = &this->D.177714._M_impl.D.177059._M_finish;
  __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (&D.223830, _1);
  D.251321 = D.223830;
  D.223830 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251321;

}



;; Function __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9379, decl_uid=212973, cgraph_uid=6011, symbol_order=6804)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (struct __normal_iterator * const this, const struct pthread_detched_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<pthread_detched_type>::begin (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE5beginEv, funcdef_no=8595, decl_uid=177325, cgraph_uid=5227, symbol_order=6020)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<pthread_detched_type>::begin (const struct vector * const this)
{
  struct const_iterator D.223828;
  struct const_iterator D.251324;

  <bb 2> :
  _1 = &this->D.177714._M_impl.D.177059._M_start;
  __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (&D.223828, _1);
  D.251324 = D.223828;
  D.223828 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251324;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*, pthread_detched_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8598, decl_uid=212993, cgraph_uid=5230, symbol_order=6023)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*, pthread_detched_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_detched_type * __result, struct allocator & D.223835)
{
  struct pthread_detched_type * D.251329;
  struct pthread_detched_type * D.251327;

  <bb 2> :
  D.251329 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (__first, __last, __result);
  D.251327 = D.251329;

  <bb 3> :
<L0>:
  return D.251327;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9381, decl_uid=223837, cgraph_uid=6014, symbol_order=6807)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.251332;
  const bool __assignable;
  struct pthread_detched_type * D.251330;

  <bb 2> :
  __assignable = 1;
  D.251332 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (__first, __last, __result);
  D.251330 = D.251332;

  <bb 3> :
<L0>:
  return D.251330;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10079, decl_uid=235844, cgraph_uid=6711, symbol_order=7508)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.251335;
  struct pthread_detched_type * D.251333;

  <bb 2> :
  D.251335 = std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (__first, __last, __result);
  D.251333 = D.251335;

  <bb 3> :
<L0>:
  return D.251333;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10596, decl_uid=242197, cgraph_uid=7228, symbol_order=8025)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.251340;
  struct __normal_iterator D.251338;
  struct __normal_iterator D.251337;
  struct pthread_detched_type * D.251336;

  <bb 2> :
  D.251337 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (__last);
  D.251338 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (__first);
  D.251340 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (D.251338, D.251337, __result);
  D.251336 = D.251340;

  <bb 3> :
<L0>:
  return D.251336;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9501, decl_uid=226447, cgraph_uid=6133, symbol_order=6926)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.251341;

  <bb 2> :
  D.251341 = __it;

  <bb 3> :
<L0>:
  return D.251341;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEPS2_ET1_T0_SB_SA_, funcdef_no=10869, decl_uid=245607, cgraph_uid=7501, symbol_order=8300)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.251345;
  struct pthread_detched_type * D.251343;

  <bb 2> :
  __result.556_1 = __result;
  _2 = std::__niter_base<pthread_detched_type*> (__result.556_1);
  _3 = std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (__last);
  _4 = std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (__first);
  D.251345 = std::__copy_move_a1<false, const pthread_detched_type*, pthread_detched_type*> (_4, _3, _2);
  _5 = D.251345;
  D.251343 = std::__niter_wrap<pthread_detched_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.251343;

}



;; Function std::__niter_base<pthread_detched_type*> (_ZSt12__niter_baseIP20pthread_detched_typeET_S2_, funcdef_no=10160, decl_uid=226713, cgraph_uid=6792, symbol_order=7589)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__niter_base<pthread_detched_type*> (struct pthread_detched_type * __it)
{
  struct pthread_detched_type * D.251346;

  <bb 2> :
  D.251346 = __it;

  <bb 3> :
<L0>:
  return D.251346;

}



;; Function std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (_ZSt12__niter_baseIPK20pthread_detched_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10155, decl_uid=236920, cgraph_uid=6787, symbol_order=7584)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct pthread_detched_type * std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (struct __normal_iterator __it)
{
  const struct pthread_detched_type * D.251348;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::base (&__it);
  D.251348 = *_1;

  <bb 3> :
<L0>:
  return D.251348;

}



;; Function __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10647, decl_uid=212960, cgraph_uid=7279, symbol_order=8076)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct pthread_detched_type * const & __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >::base (const struct __normal_iterator * const this)
{
  const struct pthread_detched_type * const & D.251350;

  <bb 2> :
  D.251350 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.251350;

}



;; Function std::__copy_move_a1<false, const pthread_detched_type*, pthread_detched_type*> (_ZSt14__copy_move_a1ILb0EPK20pthread_detched_typePS0_ET1_T0_S5_S4_, funcdef_no=10157, decl_uid=237074, cgraph_uid=6789, symbol_order=7586)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a1<false, const pthread_detched_type*, pthread_detched_type*> (const struct pthread_detched_type * __first, const struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.251354;
  struct pthread_detched_type * D.251352;

  <bb 2> :
  D.251354 = std::__copy_move_a2<false, const pthread_detched_type*, pthread_detched_type*> (__first, __last, __result);
  D.251352 = D.251354;

  <bb 3> :
<L0>:
  return D.251352;

}



;; Function std::__copy_move_a2<false, const pthread_detched_type*, pthread_detched_type*> (_ZSt14__copy_move_a2ILb0EPK20pthread_detched_typePS0_ET1_T0_S5_S4_, funcdef_no=10648, decl_uid=242530, cgraph_uid=7280, symbol_order=8077)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a2<false, const pthread_detched_type*, pthread_detched_type*> (const struct pthread_detched_type * __first, const struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.251355;

  <bb 2> :
  D.251355 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_detched_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.251355;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_detched_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI20pthread_detched_typeEEPT_PKS4_S7_S5_, funcdef_no=10884, decl_uid=245857, cgraph_uid=7516, symbol_order=8315)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct pthread_detched_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_detched_type> (const struct pthread_detched_type * __first, const struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  const ptrdiff_t _Num;
  struct pthread_detched_type * D.251360;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 16;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.557_2 = (long unsigned int) _Num;
  _3 = _Num.557_2 * 16;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.558_4 = (long unsigned int) _Num;
  _5 = _Num.558_4 * 16;
  D.251360 = __result + _5;

  <bb 5> :
<L3>:
  return D.251360;

}



;; Function std::__niter_wrap<pthread_detched_type*> (_ZSt12__niter_wrapIP20pthread_detched_typeET_RKS2_S2_, funcdef_no=10162, decl_uid=237117, cgraph_uid=6794, symbol_order=7591)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__niter_wrap<pthread_detched_type*> (struct pthread_detched_type * const & D.242552, struct pthread_detched_type * __res)
{
  struct pthread_detched_type * D.251362;

  <bb 2> :
  D.251362 = __res;

  <bb 3> :
<L0>:
  return D.251362;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::~_Vector_base (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EED2Ev, funcdef_no=7754, decl_uid=177169, cgraph_uid=4386, symbol_order=5175)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.177059._M_end_of_storage;
  _2 = this->_M_impl.D.177059._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.177059._M_start;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8685, decl_uid=177066, cgraph_uid=5317, symbol_order=6110)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (struct _Vector_base * const this, struct pthread_detched_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<pthread_detched_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<pthread_detched_type> >::deallocate (_ZNSt16allocator_traitsISaI20pthread_detched_typeEE10deallocateERS1_PS0_m, funcdef_no=9495, decl_uid=176871, cgraph_uid=6127, symbol_order=6920)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<pthread_detched_type> >::deallocate (struct allocator_type & __a, struct pthread_detched_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_detched_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeE10deallocateEPS1_m, funcdef_no=10153, decl_uid=176722, cgraph_uid=6785, symbol_order=7582)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<pthread_detched_type>::deallocate (struct new_allocator * const this, struct pthread_detched_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 16;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<pthread_detched_type>::operator[] (_ZNSt6vectorI20pthread_detched_typeSaIS0_EEixEm, funcdef_no=7703, decl_uid=177367, cgraph_uid=4335, symbol_order=5124)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<pthread_detched_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.251370;

  <bb 2> :
  _1 = this->D.177714._M_impl.D.177059._M_start;
  _2 = __n * 16;
  D.251370 = _1 + _2;

  <bb 3> :
<L0>:
  return D.251370;

}



;; Function std::vector<pthread_detched_type>::size (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE4sizeEv, funcdef_no=7702, decl_uid=177347, cgraph_uid=4334, symbol_order=5123)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_detched_type>::size (const struct vector * const this)
{
  size_type D.251372;

  <bb 2> :
  _1 = this->D.177714._M_impl.D.177059._M_finish;
  _2 = this->D.177714._M_impl.D.177059._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.251372 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.251372;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::get (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7704, decl_uid=193794, cgraph_uid=4336, symbol_order=5125)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct function_pthread_exit_array * hash_map<tree_node*, function_pthread_exit_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.251382;
  struct hash_entry & D.251381;
  unsigned int D.251380;
  struct hash_entry & e;
  struct function_pthread_exit_array * iftmp.559;
  struct function_pthread_exit_array * D.251374;

  <bb 2> :
  _1 = &this->m_table;
  D.251380 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::hash (k);
  _2 = D.251380;
  D.251381 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.251381;
  D.251382 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (e);
  _3 = D.251382;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.559 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.559 = &e->m_value;

  <bb 5> :
  D.251374 = iftmp.559;

  <bb 6> :
<L3>:
  return D.251374;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE4hashERKS2_, funcdef_no=8600, decl_uid=193750, cgraph_uid=5232, symbol_order=6025)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::hash (union tree_node * const & h)
{
  hashval_t D.251383;

  <bb 2> :
  D.251383 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.251383;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8601, decl_uid=193937, cgraph_uid=5233, symbol_order=6026)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.251417;
  bool D.251416;
  bool D.251415;
  bool D.251414;
  bool D.251413;
  bool D.251412;
  struct value_type * D.251411;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.563;
  bool retval.562;
  struct value_type & D.251397;
  bool iftmp.561;
  bool retval.560;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 32;
  entry = _5 + _7;
  D.251412 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.251412;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.251413 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.251413;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.251414 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (entry, comparable);
  _11 = D.251414;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.561 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.561 = 0;

  <bb 8> :
  retval.560 = iftmp.561;
  if (retval.560 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.251397 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  entry = _17 + _19;
  D.251415 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.251415;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.251416 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.251416;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.251417 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (entry, comparable);
  _23 = D.251417;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.563 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.563 = 0;

  <bb 18> :
  retval.562 = iftmp.563;
  if (retval.562 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.251397 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.251397;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8968, decl_uid=194033, cgraph_uid=5600, symbol_order=6393)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.251420;
  bool D.251418;

  <bb 2> :
  D.251420 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_empty (v);
  D.251418 = D.251420;

  <bb 3> :
<L0>:
  return D.251418;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8731, decl_uid=193863, cgraph_uid=5363, symbol_order=6156)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.251423;
  bool D.251421;

  <bb 2> :
  D.251423 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (e);
  D.251421 = D.251423;

  <bb 3> :
<L0>:
  return D.251421;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8969, decl_uid=194031, cgraph_uid=5601, symbol_order=6394)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.251426;
  bool D.251424;

  <bb 2> :
  D.251426 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_deleted (v);
  D.251424 = D.251426;

  <bb 3> :
<L0>:
  return D.251424;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9809, decl_uid=193858, cgraph_uid=6441, symbol_order=7234)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.251429;
  bool D.251427;

  <bb 2> :
  D.251429 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_deleted<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (e);
  D.251427 = D.251429;

  <bb 3> :
<L0>:
  return D.251427;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_deleted<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10371, decl_uid=239698, cgraph_uid=7003, symbol_order=7800)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_deleted<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.251430;

  <bb 2> :
  _1 = entry->m_key;
  D.251430 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.251430;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9385, decl_uid=193851, cgraph_uid=6017, symbol_order=6810)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.251434;
  bool D.251432;

  <bb 2> :
  _1 = &a->m_key;
  D.251434 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::equal_keys (_1, b);
  D.251432 = D.251434;

  <bb 3> :
<L0>:
  return D.251432;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE10equal_keysERKS2_S7_, funcdef_no=10083, decl_uid=193752, cgraph_uid=6715, symbol_order=7512)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.251435;

  <bb 2> :
  D.251435 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.251435;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8602, decl_uid=213029, cgraph_uid=5234, symbol_order=6027)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::is_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.251437;

  <bb 2> :
  _1 = entry->m_key;
  D.251437 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.251437;

}



;; Function function_pthread_exit_array::function_pthread_exit_array (_ZN27function_pthread_exit_arrayC2ERKS_, funcdef_no=6341, decl_uid=194132, cgraph_uid=3316, symbol_order=4094)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_exit_array::function_pthread_exit_array (struct function_pthread_exit_array * const this, const struct function_pthread_exit_array & D.194134)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->pthread_exit_array;
  _2 = &D.194134->pthread_exit_array;
  std::vector<pthread_exit_type>::vector (_1, _2);
  return;

}



;; Function std::vector<pthread_exit_type>::vector (_ZNSt6vectorI17pthread_exit_typeSaIS0_EEC2ERKS2_, funcdef_no=7706, decl_uid=178722, cgraph_uid=4338, symbol_order=5127)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<pthread_exit_type>::vector (struct vector * const this, const struct vector & __x)
{
  struct pthread_exit_type * D.251443;
  struct __normal_iterator D.251440;
  struct __normal_iterator D.251439;
  struct allocator D.213144;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.178759;
  _2 = &__x->D.178759;
  _3 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_2);
  D.213144 = __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<pthread_exit_type>::size (__x);
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_1, _4, &D.213144);

  <bb 3> :
  std::allocator<pthread_exit_type>::~allocator (&D.213144);
  D.213144 = {CLOBBER};
  _5 = &this->D.178759;
  _6 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_5);
  _7 = this->D.178759._M_impl.D.178104._M_start;
  D.251439 = std::vector<pthread_exit_type>::end (__x);
  D.251440 = std::vector<pthread_exit_type>::begin (__x);
  D.251443 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*, pthread_exit_type> (D.251440, D.251439, _7, _6);

  <bb 4> :
  _8 = D.251443;
  this->D.178759._M_impl.D.178104._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<pthread_exit_type>::~allocator (&D.213144);
  resx 2

  <bb 6> :
<L1>:
  D.213144 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.178759;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI17pthread_exit_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8604, decl_uid=177994, cgraph_uid=5236, symbol_order=6029)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.251445;

  <bb 2> :
  D.251445 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.251445;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI17pthread_exit_typeES1_E17_S_select_on_copyERKS2_, funcdef_no=8603, decl_uid=177966, cgraph_uid=5235, symbol_order=6028)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<pthread_exit_type> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<pthread_exit_type> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI17pthread_exit_typeEE37select_on_container_copy_constructionERKS1_, funcdef_no=9386, decl_uid=177931, cgraph_uid=6018, symbol_order=6811)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<pthread_exit_type> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<pthread_exit_type>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<pthread_exit_type>::allocator (_ZNSaI17pthread_exit_typeEC2ERKS0_, funcdef_no=10085, decl_uid=177874, cgraph_uid=6717, symbol_order=7514)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_exit_type>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeEC2ERKS2_, funcdef_no=10603, decl_uid=177803, cgraph_uid=7235, symbol_order=8032)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.177805)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EEC2EmRKS1_, funcdef_no=8606, decl_uid=178191, cgraph_uid=5238, symbol_order=6031)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=9388, decl_uid=178096, cgraph_uid=6020, symbol_order=6813)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<pthread_exit_type>::allocator (this, __a);
  _1 = &this->D.178104;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8708, decl_uid=178051, cgraph_uid=5340, symbol_order=6133)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_create_storage (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE17_M_create_storageEm, funcdef_no=9390, decl_uid=178115, cgraph_uid=6022, symbol_order=6815)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct pthread_exit_type * D.251452;

  <bb 2> :
  D.251452 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_allocate (this, __n);
  _1 = D.251452;
  this->_M_impl.D.178104._M_start = _1;
  _2 = this->_M_impl.D.178104._M_start;
  this->_M_impl.D.178104._M_finish = _2;
  _3 = this->_M_impl.D.178104._M_start;
  _4 = __n * 16;
  _5 = _3 + _4;
  this->_M_impl.D.178104._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_allocate (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE11_M_allocateEm, funcdef_no=9534, decl_uid=178108, cgraph_uid=6166, symbol_order=6959)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct pthread_exit_type * std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct pthread_exit_type * D.251459;
  struct pthread_exit_type * iftmp.564;
  struct pthread_exit_type * D.251453;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.251459 = std::allocator_traits<std::allocator<pthread_exit_type> >::allocate (_1, __n);
  iftmp.564 = D.251459;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.564 = 0B;

  <bb 5> :
  D.251453 = iftmp.564;

  <bb 6> :
<L3>:
  return D.251453;

}



;; Function std::allocator_traits<std::allocator<pthread_exit_type> >::allocate (_ZNSt16allocator_traitsISaI17pthread_exit_typeEE8allocateERS1_m, funcdef_no=10178, decl_uid=177909, cgraph_uid=6810, symbol_order=7607)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct pthread_exit_type * std::allocator_traits<std::allocator<pthread_exit_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct pthread_exit_type * D.251462;
  struct pthread_exit_type * D.251460;

  <bb 2> :
  D.251462 = __gnu_cxx::new_allocator<pthread_exit_type>::allocate (__a, __n, 0B);
  D.251460 = D.251462;

  <bb 3> :
<L0>:
  return D.251460;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::allocate (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeE8allocateEmPKv, funcdef_no=10658, decl_uid=177763, cgraph_uid=7291, symbol_order=8088)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct pthread_exit_type * __gnu_cxx::new_allocator<pthread_exit_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.245895)
{
  struct pthread_exit_type * D.251473;
  struct pthread_exit_type * D.251472;
  align_val_t __al;
  struct pthread_exit_type * D.251470;
  bool retval.565;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<pthread_exit_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.565 = _4 != 0;
  if (retval.565 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 1152921504606846975)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 16;
  D.251473 = operator new (_6);
  D.251470 = D.251473;

  <bb 7> :
<L6>:
  return D.251470;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI17pthread_exit_typeE11_M_max_sizeEv, funcdef_no=10659, decl_uid=177790, cgraph_uid=7290, symbol_order=8087)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<pthread_exit_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.251474;

  <bb 2> :
  D.251474 = 576460752303423487;

  <bb 3> :
<L0>:
  return D.251474;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6397, decl_uid=178151, cgraph_uid=3369, symbol_order=4147)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<pthread_exit_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<pthread_exit_type>::~allocator (_ZNSaI17pthread_exit_typeED2Ev, funcdef_no=7766, decl_uid=177884, cgraph_uid=4398, symbol_order=5187)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_exit_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_exit_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeED2Ev, funcdef_no=8711, decl_uid=177813, cgraph_uid=5343, symbol_order=6136)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_exit_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8610, decl_uid=177992, cgraph_uid=5242, symbol_order=6035)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.251476;

  <bb 2> :
  D.251476 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.251476;

}



;; Function std::vector<pthread_exit_type>::end (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE3endEv, funcdef_no=8609, decl_uid=178374, cgraph_uid=5241, symbol_order=6034)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<pthread_exit_type>::end (const struct vector * const this)
{
  struct const_iterator D.223905;
  struct const_iterator D.251478;

  <bb 2> :
  _1 = &this->D.178759._M_impl.D.178104._M_finish;
  __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (&D.223905, _1);
  D.251478 = D.223905;
  D.223905 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251478;

}



;; Function __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=9392, decl_uid=213113, cgraph_uid=6024, symbol_order=6817)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (struct __normal_iterator * const this, const struct pthread_exit_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<pthread_exit_type>::begin (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE5beginEv, funcdef_no=8608, decl_uid=178370, cgraph_uid=5240, symbol_order=6033)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<pthread_exit_type>::begin (const struct vector * const this)
{
  struct const_iterator D.223903;
  struct const_iterator D.251481;

  <bb 2> :
  _1 = &this->D.178759._M_impl.D.178104._M_start;
  __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (&D.223903, _1);
  D.251481 = D.223903;
  D.223903 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251481;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*, pthread_exit_type> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=8611, decl_uid=213133, cgraph_uid=5243, symbol_order=6036)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*, pthread_exit_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_exit_type * __result, struct allocator & D.223910)
{
  struct pthread_exit_type * D.251486;
  struct pthread_exit_type * D.251484;

  <bb 2> :
  D.251486 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (__first, __last, __result);
  D.251484 = D.251486;

  <bb 3> :
<L0>:
  return D.251484;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=9394, decl_uid=223912, cgraph_uid=6027, symbol_order=6820)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251489;
  const bool __assignable;
  struct pthread_exit_type * D.251487;

  <bb 2> :
  __assignable = 1;
  D.251489 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (__first, __last, __result);
  D.251487 = D.251489;

  <bb 3> :
<L0>:
  return D.251487;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10087, decl_uid=236013, cgraph_uid=6719, symbol_order=7516)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251492;
  struct pthread_exit_type * D.251490;

  <bb 2> :
  D.251492 = std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (__first, __last, __result);
  D.251490 = D.251492;

  <bb 3> :
<L0>:
  return D.251490;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10605, decl_uid=242233, cgraph_uid=7237, symbol_order=8034)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251497;
  struct __normal_iterator D.251495;
  struct __normal_iterator D.251494;
  struct pthread_exit_type * D.251493;

  <bb 2> :
  D.251494 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (__last);
  D.251495 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (__first);
  D.251497 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (D.251495, D.251494, __result);
  D.251493 = D.251497;

  <bb 3> :
<L0>:
  return D.251493;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9538, decl_uid=227153, cgraph_uid=6170, symbol_order=6963)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.251498;

  <bb 2> :
  D.251498 = __it;

  <bb 3> :
<L0>:
  return D.251498;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEPS2_ET1_T0_SB_SA_, funcdef_no=10870, decl_uid=245642, cgraph_uid=7502, symbol_order=8301)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (struct __normal_iterator __first, struct __normal_iterator __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251502;
  struct pthread_exit_type * D.251500;

  <bb 2> :
  __result.566_1 = __result;
  _2 = std::__niter_base<pthread_exit_type*> (__result.566_1);
  _3 = std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (__last);
  _4 = std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (__first);
  D.251502 = std::__copy_move_a1<false, const pthread_exit_type*, pthread_exit_type*> (_4, _3, _2);
  _5 = D.251502;
  D.251500 = std::__niter_wrap<pthread_exit_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.251500;

}



;; Function std::__niter_base<pthread_exit_type*> (_ZSt12__niter_baseIP17pthread_exit_typeET_S2_, funcdef_no=10184, decl_uid=227419, cgraph_uid=6816, symbol_order=7613)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__niter_base<pthread_exit_type*> (struct pthread_exit_type * __it)
{
  struct pthread_exit_type * D.251503;

  <bb 2> :
  D.251503 = __it;

  <bb 3> :
<L0>:
  return D.251503;

}



;; Function std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (_ZSt12__niter_baseIPK17pthread_exit_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10179, decl_uid=237276, cgraph_uid=6811, symbol_order=7608)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct pthread_exit_type * std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (struct __normal_iterator __it)
{
  const struct pthread_exit_type * D.251505;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::base (&__it);
  D.251505 = *_1;

  <bb 3> :
<L0>:
  return D.251505;

}



;; Function __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10660, decl_uid=213100, cgraph_uid=7292, symbol_order=8089)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct pthread_exit_type * const & __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >::base (const struct __normal_iterator * const this)
{
  const struct pthread_exit_type * const & D.251507;

  <bb 2> :
  D.251507 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.251507;

}



;; Function std::__copy_move_a1<false, const pthread_exit_type*, pthread_exit_type*> (_ZSt14__copy_move_a1ILb0EPK17pthread_exit_typePS0_ET1_T0_S5_S4_, funcdef_no=10181, decl_uid=237430, cgraph_uid=6813, symbol_order=7610)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a1<false, const pthread_exit_type*, pthread_exit_type*> (const struct pthread_exit_type * __first, const struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251511;
  struct pthread_exit_type * D.251509;

  <bb 2> :
  D.251511 = std::__copy_move_a2<false, const pthread_exit_type*, pthread_exit_type*> (__first, __last, __result);
  D.251509 = D.251511;

  <bb 3> :
<L0>:
  return D.251509;

}



;; Function std::__copy_move_a2<false, const pthread_exit_type*, pthread_exit_type*> (_ZSt14__copy_move_a2ILb0EPK17pthread_exit_typePS0_ET1_T0_S5_S4_, funcdef_no=10661, decl_uid=242625, cgraph_uid=7293, symbol_order=8090)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a2<false, const pthread_exit_type*, pthread_exit_type*> (const struct pthread_exit_type * __first, const struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.251512;

  <bb 2> :
  D.251512 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_exit_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.251512;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_exit_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI17pthread_exit_typeEEPT_PKS4_S7_S5_, funcdef_no=10887, decl_uid=245918, cgraph_uid=7519, symbol_order=8318)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct pthread_exit_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_exit_type> (const struct pthread_exit_type * __first, const struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  const ptrdiff_t _Num;
  struct pthread_exit_type * D.251517;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 16;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.567_2 = (long unsigned int) _Num;
  _3 = _Num.567_2 * 16;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.568_4 = (long unsigned int) _Num;
  _5 = _Num.568_4 * 16;
  D.251517 = __result + _5;

  <bb 5> :
<L3>:
  return D.251517;

}



;; Function std::__niter_wrap<pthread_exit_type*> (_ZSt12__niter_wrapIP17pthread_exit_typeET_RKS2_S2_, funcdef_no=10186, decl_uid=237473, cgraph_uid=6818, symbol_order=7615)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__niter_wrap<pthread_exit_type*> (struct pthread_exit_type * const & D.242647, struct pthread_exit_type * __res)
{
  struct pthread_exit_type * D.251519;

  <bb 2> :
  D.251519 = __res;

  <bb 3> :
<L0>:
  return D.251519;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::~_Vector_base (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EED2Ev, funcdef_no=7769, decl_uid=178214, cgraph_uid=4401, symbol_order=5190)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.178104._M_end_of_storage;
  _2 = this->_M_impl.D.178104._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.178104._M_start;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8713, decl_uid=178111, cgraph_uid=5345, symbol_order=6138)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (struct _Vector_base * const this, struct pthread_exit_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<pthread_exit_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<pthread_exit_type> >::deallocate (_ZNSt16allocator_traitsISaI17pthread_exit_typeEE10deallocateERS1_PS0_m, funcdef_no=9532, decl_uid=177916, cgraph_uid=6164, symbol_order=6957)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<pthread_exit_type> >::deallocate (struct allocator_type & __a, struct pthread_exit_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_exit_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeE10deallocateEPS1_m, funcdef_no=10177, decl_uid=177767, cgraph_uid=6809, symbol_order=7606)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<pthread_exit_type>::deallocate (struct new_allocator * const this, struct pthread_exit_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 16;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<pthread_exit_type>::operator[] (_ZNSt6vectorI17pthread_exit_typeSaIS0_EEixEm, funcdef_no=7712, decl_uid=178412, cgraph_uid=4344, symbol_order=5133)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<pthread_exit_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.251527;

  <bb 2> :
  _1 = this->D.178759._M_impl.D.178104._M_start;
  _2 = __n * 16;
  D.251527 = _1 + _2;

  <bb 3> :
<L0>:
  return D.251527;

}



;; Function std::vector<pthread_exit_type>::size (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE4sizeEv, funcdef_no=7711, decl_uid=178392, cgraph_uid=4343, symbol_order=5132)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_exit_type>::size (const struct vector * const this)
{
  size_type D.251529;

  <bb 2> :
  _1 = this->D.178759._M_impl.D.178104._M_finish;
  _2 = this->D.178759._M_impl.D.178104._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.251529 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.251529;

}



;; Function std::vector<tree_node*>::operator[] (_ZNSt6vectorIP9tree_nodeSaIS1_EEixEm, funcdef_no=7715, decl_uid=184551, cgraph_uid=4347, symbol_order=5136)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * & std::vector<tree_node*>::operator[] (struct vector * const this, size_type __n)
{
  union tree_node * & D.251531;

  <bb 2> :
  _1 = this->D.184898._M_impl.D.184254._M_start;
  _2 = __n * 8;
  D.251531 = _1 + _2;

  <bb 3> :
<L0>:
  return D.251531;

}



;; Function std::vector<tree_node*>::size (_ZNKSt6vectorIP9tree_nodeSaIS1_EE4sizeEv, funcdef_no=7714, decl_uid=184531, cgraph_uid=4346, symbol_order=5135)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<tree_node*>::size (const struct vector * const this)
{
  size_type D.251533;

  <bb 2> :
  _1 = this->D.184898._M_impl.D.184254._M_finish;
  _2 = this->D.184898._M_impl.D.184254._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  D.251533 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.251533;

}



;; Function function_return_array::function_return_array (_ZN21function_return_arrayC2Ev, funcdef_no=6347, decl_uid=189932, cgraph_uid=3322, symbol_order=4100)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_return_array::function_return_array (struct function_return_array * const this)
{
  <bb 2> :
  this->return_type_num = 0;
  this->pthread_type_num = -1;
  _1 = &this->return_type_array;
  std::vector<return_type>::vector (_1);
  return;

}



;; Function std::vector<return_type>::vector (_ZNSt6vectorI11return_typeSaIS0_EEC2Ev, funcdef_no=6221, decl_uid=174551, cgraph_uid=3197, symbol_order=3958)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<return_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.174559;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_ZNSt12_Vector_baseI11return_typeSaIS0_EEC2Ev, funcdef_no=6219, decl_uid=174009, cgraph_uid=3194, symbol_order=3955)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11return_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7588, decl_uid=173901, cgraph_uid=4220, symbol_order=5009)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<return_type>::allocator (this);
  _1 = &this->D.173904;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<return_type>::allocator (_ZNSaI11return_typeEC2Ev, funcdef_no=8418, decl_uid=173679, cgraph_uid=5050, symbol_order=5843)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<return_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<return_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI11return_typeEC2Ev, funcdef_no=9217, decl_uid=173608, cgraph_uid=5849, symbol_order=6642)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<return_type>::operator= (_ZNSt6vectorI11return_typeSaIS0_EEaSERKS2_, funcdef_no=7716, decl_uid=174137, cgraph_uid=4350, symbol_order=5139)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<return_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct return_type * D.251568;
  struct return_type * __tmp;
  const size_type __xlen;
  struct vector & D.251566;
  struct __normal_iterator D.251563;
  struct __normal_iterator D.251562;
  struct __normal_iterator D.251561;
  struct __normal_iterator D.251560;
  struct __normal_iterator D.251559;
  bool retval.573;
  struct __normal_iterator D.251554;
  struct __normal_iterator D.251553;
  bool retval.572;
  bool iftmp.571;
  bool retval.570;
  bool retval.569;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.569 = __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_propagate_on_copy_assign ();
  if (retval.569 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.174559;
  _4 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.174559;
  _6 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.571 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.571 = 0;

  <bb 8> :
  retval.570 = iftmp.571;
  if (retval.570 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<return_type>::clear (this);
  _8 = &this->D.174559;
  _9 = this->D.174559._M_impl.D.173904._M_end_of_storage;
  _10 = this->D.174559._M_impl.D.173904._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 24;
  _13 = (long unsigned int) _12;
  _14 = this->D.174559._M_impl.D.173904._M_start;
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (_8, _14, _13);
  this->D.174559._M_impl.D.173904._M_start = 0B;
  this->D.174559._M_impl.D.173904._M_finish = 0B;
  this->D.174559._M_impl.D.173904._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.174559;
  _16 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.174559;
  _18 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<return_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<return_type>::size (__x);
  _19 = std::vector<return_type>::capacity (this);
  retval.572 = __xlen > _19;
  if (retval.572 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.251553 = std::vector<return_type>::end (__x);
  D.251554 = std::vector<return_type>::begin (__x);
  D.251568 = std::vector<return_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (this, __xlen, D.251554, D.251553);
  __tmp = D.251568;
  _20 = &this->D.174559;
  _21 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.174559._M_impl.D.173904._M_finish;
  _23 = this->D.174559._M_impl.D.173904._M_start;
  std::_Destroy<return_type*, return_type> (_23, _22, _21);
  _24 = &this->D.174559;
  _25 = this->D.174559._M_impl.D.173904._M_end_of_storage;
  _26 = this->D.174559._M_impl.D.173904._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 24;
  _29 = (long unsigned int) _28;
  _30 = this->D.174559._M_impl.D.173904._M_start;
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (_24, _30, _29);
  this->D.174559._M_impl.D.173904._M_start = __tmp;
  _31 = this->D.174559._M_impl.D.173904._M_start;
  _32 = __xlen * 24;
  _33 = _31 + _32;
  this->D.174559._M_impl.D.173904._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<return_type>::size (this);
  retval.573 = __xlen <= _34;
  if (retval.573 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.174559;
  _36 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_35);
  D.251559 = std::vector<return_type>::end (this);
  D.251560 = std::vector<return_type>::begin (this);
  D.251561 = std::vector<return_type>::end (__x);
  D.251562 = std::vector<return_type>::begin (__x);
  D.251563 = std::copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (D.251562, D.251561, D.251560);
  std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type> (D.251563, D.251559, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.174559._M_impl.D.173904._M_start;
  _38 = __x->D.174559._M_impl.D.173904._M_start;
  _39 = std::vector<return_type>::size (this);
  _40 = _39 * 24;
  _41 = _38 + _40;
  _42 = __x->D.174559._M_impl.D.173904._M_start;
  std::copy<return_type*, return_type*> (_42, _41, _37);
  _43 = &this->D.174559;
  _44 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.174559._M_impl.D.173904._M_finish;
  _46 = __x->D.174559._M_impl.D.173904._M_finish;
  _47 = __x->D.174559._M_impl.D.173904._M_start;
  _48 = std::vector<return_type>::size (this);
  _49 = _48 * 24;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<return_type*, return_type*, return_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.174559._M_impl.D.173904._M_start;
  _52 = __xlen * 24;
  _53 = _51 + _52;
  this->D.174559._M_impl.D.173904._M_finish = _53;

  <bb 17> :
  D.251566 = this;

  <bb 18> :
<L19>:
  return D.251566;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI11return_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7717, decl_uid=173771, cgraph_uid=4348, symbol_order=5137)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_propagate_on_copy_assign ()
{
  bool D.251569;

  <bb 2> :
  D.251569 = 0;

  <bb 3> :
<L0>:
  return D.251569;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI11return_typeES1_E15_S_always_equalEv, funcdef_no=7718, decl_uid=173774, cgraph_uid=4349, symbol_order=5138)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<return_type>, return_type>::_S_always_equal ()
{
  bool D.251571;

  <bb 2> :
  D.251571 = 1;

  <bb 3> :
<L0>:
  return D.251571;

}



;; Function std::operator!= (_ZStneRKSaI11return_typeES2_, funcdef_no=8613, decl_uid=173657, cgraph_uid=5245, symbol_order=6038)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.223936, const struct allocator & D.223937)
{
  bool D.251573;

  <bb 2> :
  D.251573 = 0;

  <bb 3> :
<L0>:
  return D.251573;

}



;; Function std::vector<return_type>::clear (_ZNSt6vectorI11return_typeSaIS0_EE5clearEv, funcdef_no=8614, decl_uid=174289, cgraph_uid=5246, symbol_order=6039)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<return_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.174559._M_impl.D.173904._M_start;
  std::vector<return_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<return_type>::_M_erase_at_end (_ZNSt6vectorI11return_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9397, decl_uid=174417, cgraph_uid=6029, symbol_order=6822)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<return_type>::_M_erase_at_end (struct vector * const this, struct return_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.174559._M_impl.D.173904._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 24;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.174559;
  _5 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.174559._M_impl.D.173904._M_finish;
  std::_Destroy<return_type*, return_type> (__pos, _6, _5);
  this->D.174559._M_impl.D.173904._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<return_type> > (_ZSt15__alloc_on_copyISaI11return_typeEEvRT_RKS2_, funcdef_no=8615, decl_uid=213194, cgraph_uid=5247, symbol_order=6040)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<return_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<return_type>::capacity (_ZNKSt6vectorI11return_typeSaIS0_EE8capacityEv, funcdef_no=8616, decl_uid=174205, cgraph_uid=5248, symbol_order=6041)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<return_type>::capacity (const struct vector * const this)
{
  size_type D.251578;

  <bb 2> :
  _1 = this->D.174559._M_impl.D.173904._M_end_of_storage;
  _2 = this->D.174559._M_impl.D.173904._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.251578 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.251578;

}



;; Function std::vector<return_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (_ZNSt6vectorI11return_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8617, decl_uid=213201, cgraph_uid=5249, symbol_order=6042)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct return_type * std::vector<return_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct return_type * D.251582;
  struct return_type * __result;
  struct return_type * D.251580;

  <bb 2> :
  _1 = &this->D.174559;
  D.251582 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_allocate (_1, __n);
  __result = D.251582;
  _2 = &this->D.174559;
  _3 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, return_type*, return_type> (__first, __last, __result, _3);

  <bb 3> :
  D.251580 = __result;

  <bb 4> :
<L0>:
  return D.251580;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.174559;
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<return_type>::end (_ZNSt6vectorI11return_typeSaIS0_EE3endEv, funcdef_no=8620, decl_uid=174172, cgraph_uid=5252, symbol_order=6045)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<return_type>::end (struct vector * const this)
{
  struct iterator D.224023;
  struct iterator D.251586;

  <bb 2> :
  _1 = &this->D.174559._M_impl.D.173904._M_finish;
  __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::__normal_iterator (&D.224023, _1);
  D.251586 = D.224023;
  D.224023 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251586;

}



;; Function __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9400, decl_uid=213283, cgraph_uid=6032, symbol_order=6825)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::__normal_iterator (struct __normal_iterator * const this, struct return_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<return_type>::begin (_ZNSt6vectorI11return_typeSaIS0_EE5beginEv, funcdef_no=8618, decl_uid=174168, cgraph_uid=5250, symbol_order=6043)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<return_type>::begin (struct vector * const this)
{
  struct iterator D.223977;
  struct iterator D.251589;

  <bb 2> :
  _1 = &this->D.174559._M_impl.D.173904._M_start;
  __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::__normal_iterator (&D.223977, _1);
  D.251589 = D.223977;
  D.223977 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251589;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8619, decl_uid=213302, cgraph_uid=5251, symbol_order=6044)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.251594;
  struct __normal_iterator D.251593;
  struct __normal_iterator D.251592;

  <bb 2> :
  D.251593 = std::__miter_base<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (__last);
  D.251594 = std::__miter_base<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (__first);
  D.251592 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (D.251594, D.251593, __result);

  <bb 3> :
<L0>:
  return D.251592;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9402, decl_uid=223989, cgraph_uid=6034, symbol_order=6827)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.251596;

  <bb 2> :
  D.251596 = __it;

  <bb 3> :
<L0>:
  return D.251596;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK11return_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9403, decl_uid=223995, cgraph_uid=6036, symbol_order=6829)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >, __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct return_type * D.251600;
  struct __normal_iterator D.251598;

  <bb 2> :
  _1 = std::__niter_base<return_type*, std::vector<return_type> > (__result);
  _2 = std::__niter_base<const return_type*, std::vector<return_type> > (__last);
  _3 = std::__niter_base<const return_type*, std::vector<return_type> > (__first);
  D.251600 = std::__copy_move_a1<false, const return_type*, return_type*> (_3, _2, _1);
  _4 = D.251600;
  D.251598 = std::__niter_wrap<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.251598;

}



;; Function std::__niter_base<return_type*, std::vector<return_type> > (_ZSt12__niter_baseIP11return_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10091, decl_uid=236217, cgraph_uid=6723, symbol_order=7520)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__niter_base<return_type*, std::vector<return_type> > (struct __normal_iterator __it)
{
  struct return_type * D.251601;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (&__it);
  D.251601 = *_1;

  <bb 3> :
<L0>:
  return D.251601;

}



;; Function __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9428, decl_uid=213270, cgraph_uid=6060, symbol_order=6853)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * const & __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (const struct __normal_iterator * const this)
{
  struct return_type * const & D.251603;

  <bb 2> :
  D.251603 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.251603;

}



;; Function std::__niter_base<const return_type*, std::vector<return_type> > (_ZSt12__niter_baseIPK11return_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10090, decl_uid=236066, cgraph_uid=6722, symbol_order=7519)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct return_type * std::__niter_base<const return_type*, std::vector<return_type> > (struct __normal_iterator __it)
{
  const struct return_type * D.251605;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const return_type*, std::vector<return_type> >::base (&__it);
  D.251605 = *_1;

  <bb 3> :
<L0>:
  return D.251605;

}



;; Function std::__copy_move_a1<false, const return_type*, return_type*> (_ZSt14__copy_move_a1ILb0EPK11return_typePS0_ET1_T0_S5_S4_, funcdef_no=10092, decl_uid=236220, cgraph_uid=6724, symbol_order=7521)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__copy_move_a1<false, const return_type*, return_type*> (const struct return_type * __first, const struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.251609;
  struct return_type * D.251607;

  <bb 2> :
  D.251609 = std::__copy_move_a2<false, const return_type*, return_type*> (__first, __last, __result);
  D.251607 = D.251609;

  <bb 3> :
<L0>:
  return D.251607;

}



;; Function std::__copy_move_a2<false, const return_type*, return_type*> (_ZSt14__copy_move_a2ILb0EPK11return_typePS0_ET1_T0_S5_S4_, funcdef_no=10609, decl_uid=242253, cgraph_uid=7241, symbol_order=8038)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__copy_move_a2<false, const return_type*, return_type*> (const struct return_type * __first, const struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.251610;

  <bb 2> :
  D.251610 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<return_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.251610;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<return_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI11return_typeEEPT_PKS4_S7_S5_, funcdef_no=10871, decl_uid=245670, cgraph_uid=7503, symbol_order=8302)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct return_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<return_type> (const struct return_type * __first, const struct return_type * __last, struct return_type * __result)
{
  const ptrdiff_t _Num;
  struct return_type * D.251615;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 24;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.574_2 = (long unsigned int) _Num;
  _3 = _Num.574_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.575_4 = (long unsigned int) _Num;
  _5 = _Num.575_4 * 24;
  D.251615 = __result + _5;

  <bb 5> :
<L3>:
  return D.251615;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10093, decl_uid=236224, cgraph_uid=6725, symbol_order=7522)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type*> (struct __normal_iterator __from, struct return_type * __res)
{
  struct __normal_iterator D.251617;

  <bb 2> :
  _1 = std::__niter_base<return_type*, std::vector<return_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 24;
  D.251617 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.251617;

}



;; Function __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10610, decl_uid=213261, cgraph_uid=7242, symbol_order=8039)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct return_type * const D.245676;
  struct __normal_iterator D.245677;
  struct __normal_iterator D.251619;

  <bb 2> :
  _1 = this->_M_current;
  __n.576_2 = (long unsigned int) __n;
  _3 = __n.576_2 * 24;
  _4 = _1 + _3;
  D.245676 = _4;
  __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::__normal_iterator (&D.245677, &D.245676);
  D.251619 = D.245677;
  D.245677 = {CLOBBER};
  D.245676 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.251619;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8621, decl_uid=213308, cgraph_uid=5253, symbol_order=6046)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >, return_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.224026)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9405, decl_uid=224028, cgraph_uid=6037, symbol_order=6830)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP11return_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10094, decl_uid=236248, cgraph_uid=6726, symbol_order=7523)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> > > (struct __normal_iterator D.242262, struct __normal_iterator D.242263)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<return_type*, return_type*> (_ZSt4copyIP11return_typeS1_ET0_T_S3_S2_, funcdef_no=8622, decl_uid=213316, cgraph_uid=5254, symbol_order=6047)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::copy<return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.251625;
  struct return_type * D.251623;

  <bb 2> :
  _1 = std::__miter_base<return_type*> (__last);
  _2 = std::__miter_base<return_type*> (__first);
  D.251625 = std::__copy_move_a<false, return_type*, return_type*> (_2, _1, __result);
  D.251623 = D.251625;

  <bb 3> :
<L0>:
  return D.251623;

}



;; Function std::__miter_base<return_type*> (_ZSt12__miter_baseIP11return_typeET_S2_, funcdef_no=9406, decl_uid=224044, cgraph_uid=6038, symbol_order=6831)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__miter_base<return_type*> (struct return_type * __it)
{
  struct return_type * D.251626;

  <bb 2> :
  D.251626 = __it;

  <bb 3> :
<L0>:
  return D.251626;

}



;; Function std::__copy_move_a<false, return_type*, return_type*> (_ZSt13__copy_move_aILb0EP11return_typeS1_ET1_T0_S3_S2_, funcdef_no=9407, decl_uid=224046, cgraph_uid=6039, symbol_order=6832)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__copy_move_a<false, return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.251630;
  struct return_type * D.251628;

  <bb 2> :
  __result.577_1 = __result;
  _2 = std::__niter_base<return_type*> (__result.577_1);
  _3 = std::__niter_base<return_type*> (__last);
  _4 = std::__niter_base<return_type*> (__first);
  D.251630 = std::__copy_move_a1<false, return_type*, return_type*> (_4, _3, _2);
  _5 = D.251630;
  D.251628 = std::__niter_wrap<return_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.251628;

}



;; Function std::__niter_base<return_type*> (_ZSt12__niter_baseIP11return_typeET_S2_, funcdef_no=10095, decl_uid=224661, cgraph_uid=6727, symbol_order=7524)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__niter_base<return_type*> (struct return_type * __it)
{
  struct return_type * D.251631;

  <bb 2> :
  D.251631 = __it;

  <bb 3> :
<L0>:
  return D.251631;

}



;; Function std::__copy_move_a1<false, return_type*, return_type*> (_ZSt14__copy_move_a1ILb0EP11return_typeS1_ET1_T0_S3_S2_, funcdef_no=10096, decl_uid=236259, cgraph_uid=6728, symbol_order=7525)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__copy_move_a1<false, return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.251635;
  struct return_type * D.251633;

  <bb 2> :
  D.251635 = std::__copy_move_a2<false, return_type*, return_type*> (__first, __last, __result);
  D.251633 = D.251635;

  <bb 3> :
<L0>:
  return D.251633;

}



;; Function std::__copy_move_a2<false, return_type*, return_type*> (_ZSt14__copy_move_a2ILb0EP11return_typeS1_ET1_T0_S3_S2_, funcdef_no=10611, decl_uid=242271, cgraph_uid=7243, symbol_order=8040)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__copy_move_a2<false, return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.251636;

  <bb 2> :
  D.251636 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<return_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.251636;

}



;; Function std::__niter_wrap<return_type*> (_ZSt12__niter_wrapIP11return_typeET_RKS2_S2_, funcdef_no=10097, decl_uid=236263, cgraph_uid=6729, symbol_order=7526)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__niter_wrap<return_type*> (struct return_type * const & D.242275, struct return_type * __res)
{
  struct return_type * D.251638;

  <bb 2> :
  D.251638 = __res;

  <bb 3> :
<L0>:
  return D.251638;

}



;; Function std::__uninitialized_copy_a<return_type*, return_type*, return_type> (_ZSt22__uninitialized_copy_aIP11return_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8623, decl_uid=213320, cgraph_uid=5255, symbol_order=6048)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__uninitialized_copy_a<return_type*, return_type*, return_type> (struct return_type * __first, struct return_type * __last, struct return_type * __result, struct allocator & D.224053)
{
  struct return_type * D.251642;
  struct return_type * D.251640;

  <bb 2> :
  D.251642 = std::uninitialized_copy<return_type*, return_type*> (__first, __last, __result);
  D.251640 = D.251642;

  <bb 3> :
<L0>:
  return D.251640;

}



;; Function std::uninitialized_copy<return_type*, return_type*> (_ZSt18uninitialized_copyIP11return_typeS1_ET0_T_S3_S2_, funcdef_no=9408, decl_uid=224055, cgraph_uid=6040, symbol_order=6833)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::uninitialized_copy<return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * D.251645;
  const bool __assignable;
  struct return_type * D.251643;

  <bb 2> :
  __assignable = 1;
  D.251645 = std::__uninitialized_copy<false>::__uninit_copy<return_type*, return_type*> (__first, __last, __result);
  D.251643 = D.251645;

  <bb 3> :
<L0>:
  return D.251643;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<return_type*, return_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP11return_typeS3_EET0_T_S5_S4_, funcdef_no=10098, decl_uid=236297, cgraph_uid=6730, symbol_order=7527)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct return_type * std::__uninitialized_copy<false>::__uninit_copy<return_type*, return_type*> (struct return_type * __first, struct return_type * __last, struct return_type * __result)
{
  struct return_type * __cur;
  struct return_type * D.251646;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<return_type> (__cur);
  std::_Construct<return_type, return_type&> (_1, __first);
  __first = __first + 24;
  __cur = __cur + 24;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.251646 = __cur;

  <bb 6> :
<L3>:
  return D.251646;

}



;; Function std::_Construct<return_type, return_type&> (_ZSt10_ConstructI11return_typeJRS0_EEvPT_DpOT0_, funcdef_no=10612, decl_uid=242283, cgraph_uid=7244, symbol_order=8041)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<return_type, return_type&> (struct return_type * __p, struct return_type & __args#0)
{
  void * D.245696;
  void * D.245695;
  const struct return_type * D.245697;

  <bb 2> :
  D.245697 = std::forward<return_type&> (__args#0);
  D.245695 = __p;
  D.245696 = operator new (24, D.245695);
  MEM[(struct return_type *)D.245696] = *D.245697;
  return;

}



;; Function std::forward<return_type&> (_ZSt7forwardIR11return_typeEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=10872, decl_uid=245693, cgraph_uid=7504, symbol_order=8303)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct return_type & std::forward<return_type&> (struct type & __t)
{
  struct return_type & D.251648;

  <bb 2> :
  D.251648 = __t;

  <bb 3> :
<L0>:
  return D.251648;

}



;; Function function_return_array::operator= (_ZN21function_return_arrayaSERKS_, funcdef_no=6349, decl_uid=194238, cgraph_uid=3324, symbol_order=4102)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_return_array & function_return_array::operator= (struct function_return_array * const this, const struct function_return_array & D.194239)
{
  struct function_return_array & D.251650;

  <bb 2> :
  _1 = D.194239->return_type_num;
  this->return_type_num = _1;
  _2 = D.194239->pthread_type_num;
  this->pthread_type_num = _2;
  _3 = &D.194239->return_type_array;
  _4 = &this->return_type_array;
  std::vector<return_type>::operator= (_4, _3);
  D.251650 = this;

  <bb 3> :
<L0>:
  return D.251650;

}



;; Function std::vector<tree_node*>::push_back (_ZNSt6vectorIP9tree_nodeSaIS1_EE9push_backERKS1_, funcdef_no=7719, decl_uid=184578, cgraph_uid=4352, symbol_order=5141)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<tree_node*>::push_back (struct vector * const this, union tree_node * const & __x)
{
  struct __normal_iterator D.251655;

  <bb 2> :
  _1 = this->D.184898._M_impl.D.184254._M_finish;
  _2 = this->D.184898._M_impl.D.184254._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.184898._M_impl.D.184254._M_finish;
  _4 = &this->D.184898._M_impl;
  std::allocator_traits<std::allocator<tree_node*> >::construct<tree_node*, tree_node* const&> (_4, _3, __x);
  _5 = this->D.184898._M_impl.D.184254._M_finish;
  _6 = _5 + 8;
  this->D.184898._M_impl.D.184254._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.251655 = std::vector<tree_node*>::end (this);
  std::vector<tree_node*>::_M_realloc_insert<tree_node* const&> (this, D.251655, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<tree_node*> >::construct<tree_node*, tree_node* const&> (_ZNSt16allocator_traitsISaIP9tree_nodeEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_, funcdef_no=8624, decl_uid=213332, cgraph_uid=5256, symbol_order=6049)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<tree_node*> >::construct<tree_node*, tree_node* const&> (struct allocator_type & __a, union tree_node * * __p, union tree_node * const & __args#0)
{
  <bb 2> :
  _1 = std::forward<tree_node* const&> (__args#0);
  __gnu_cxx::new_allocator<tree_node*>::construct<tree_node*, tree_node* const&> (__a, __p, _1);
  return;

}



;; Function std::forward<tree_node* const&> (_ZSt7forwardIRKP9tree_nodeEOT_RNSt16remove_referenceIS4_E4typeE, funcdef_no=9409, decl_uid=224070, cgraph_uid=6041, symbol_order=6834)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
union tree_node * const & std::forward<tree_node* const&> (union tree_node * const & __t)
{
  union tree_node * const & D.251656;

  <bb 2> :
  D.251656 = __t;

  <bb 3> :
<L0>:
  return D.251656;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::construct<tree_node*, tree_node* const&> (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeE9constructIS2_JRKS2_EEEvPT_DpOT0_, funcdef_no=9410, decl_uid=224072, cgraph_uid=6042, symbol_order=6835)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node*>::construct<tree_node*, tree_node* const&> (struct new_allocator * const this, union tree_node * * __p, union tree_node * const & __args#0)
{
  void * D.236309;
  void * D.236308;
  union tree_node * D.236310;

  <bb 2> :
  _1 = std::forward<tree_node* const&> (__args#0);
  D.236310 = *_1;
  D.236308 = __p;
  D.236309 = operator new (8, D.236308);
  MEM[(union tree_node * *)D.236309] = D.236310;
  return;

}



;; Function std::vector<tree_node*>::end (_ZNSt6vectorIP9tree_nodeSaIS1_EE3endEv, funcdef_no=8625, decl_uid=184511, cgraph_uid=5257, symbol_order=6050)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<tree_node*>::end (struct vector * const this)
{
  struct iterator D.224095;
  struct iterator D.251658;

  <bb 2> :
  _1 = &this->D.184898._M_impl.D.184254._M_finish;
  __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::__normal_iterator (&D.224095, _1);
  D.251658 = D.224095;
  D.224095 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251658;

}



;; Function __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPP9tree_nodeSt6vectorIS2_SaIS2_EEEC2ERKS3_, funcdef_no=9412, decl_uid=213569, cgraph_uid=6044, symbol_order=6837)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::__normal_iterator (struct __normal_iterator * const this, union tree_node * * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<tree_node*>::_M_realloc_insert<tree_node* const&> (_ZNSt6vectorIP9tree_nodeSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_, funcdef_no=8626, decl_uid=213588, cgraph_uid=5261, symbol_order=6054)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<tree_node*>::_M_realloc_insert<tree_node* const&> (struct vector * const this, struct iterator __position, union tree_node * const & __args#0)
{
  union tree_node * * D.251665;
  const size_type D.251664;
  union tree_node * * __new_finish;
  union tree_node * * __new_start;
  const size_type __elems_before;
  union tree_node * * __old_finish;
  union tree_node * * __old_start;
  const size_type __len;
  struct iterator D.224103;

  <bb 2> :
  D.251664 = std::vector<tree_node*>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.251664;
  __old_start = this->D.184898._M_impl.D.184254._M_start;
  __old_finish = this->D.184898._M_impl.D.184254._M_finish;
  D.224103 = std::vector<tree_node*>::begin (this);
  _1 = __gnu_cxx::operator-<tree_node**, std::vector<tree_node*> > (&__position, &D.224103);
  __elems_before = (const size_type) _1;
  D.224103 = {CLOBBER};
  _2 = &this->D.184898;
  D.251665 = std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_allocate (_2, __len);
  __new_start = D.251665;
  __new_finish = __new_start;
  _3 = std::forward<tree_node* const&> (__args#0);
  _4 = __elems_before * 8;
  _5 = __new_start + _4;
  _6 = &this->D.184898._M_impl;
  std::allocator_traits<std::allocator<tree_node*> >::construct<tree_node*, tree_node* const&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.184898;
  _8 = std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<tree_node*>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 8;
  _11 = &this->D.184898;
  _12 = std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<tree_node*>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.184898;
  _23 = this->D.184898._M_impl.D.184254._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 8;
  _26 = (long unsigned int) _25;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate (_22, __old_start, _26);
  this->D.184898._M_impl.D.184254._M_start = __new_start;
  this->D.184898._M_impl.D.184254._M_finish = __new_finish;
  _27 = __len * 8;
  _28 = __new_start + _27;
  this->D.184898._M_impl.D.184254._M_end_of_storage = _28;
  return;

}



;; Function std::vector<tree_node*>::_M_check_len (_ZNKSt6vectorIP9tree_nodeSaIS1_EE12_M_check_lenEmPKc, funcdef_no=9414, decl_uid=184747, cgraph_uid=6046, symbol_order=6839)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<tree_node*>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.580;
  size_type D.251669;
  const long unsigned int D.236319;
  bool retval.578;

  <bb 2> :
  _1 = std::vector<tree_node*>::max_size (this);
  _2 = std::vector<tree_node*>::size (this);
  _3 = _1 - _2;
  __n.579_4 = __n;
  retval.578 = _3 < __n.579_4;
  if (retval.578 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<tree_node*>::size (this);
  _6 = std::vector<tree_node*>::size (this);
  D.236319 = _6;
  _7 = std::max<long unsigned int> (&D.236319, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.236319 = {CLOBBER};
  _9 = std::vector<tree_node*>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<tree_node*>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.580 = std::vector<tree_node*>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.580 = __len;

  <bb 8> :
  D.251669 = iftmp.580;

  <bb 9> :
<L6>:
  return D.251669;

}



;; Function std::vector<tree_node*>::max_size (_ZNKSt6vectorIP9tree_nodeSaIS1_EE8max_sizeEv, funcdef_no=10099, decl_uid=184533, cgraph_uid=6731, symbol_order=7528)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<tree_node*>::max_size (const struct vector * const this)
{
  size_type D.251676;

  <bb 2> :
  _1 = &this->D.184898;
  _2 = std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_1);
  D.251676 = std::vector<tree_node*>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.251676;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseIP9tree_nodeSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=10614, decl_uid=184144, cgraph_uid=7246, symbol_order=8043)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.251678;

  <bb 2> :
  D.251678 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.251678;

}



;; Function std::vector<tree_node*>::_S_max_size (_ZNSt6vectorIP9tree_nodeSaIS1_EE11_S_max_sizeERKS2_, funcdef_no=10613, decl_uid=184754, cgraph_uid=7245, symbol_order=8042)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<tree_node*>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.251680;

  <bb 2> :
  __diffmax = 1152921504606846975;
  _1 = std::allocator_traits<std::allocator<tree_node*> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.251680 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251680;

}



;; Function std::allocator_traits<std::allocator<tree_node*> >::max_size (_ZNSt16allocator_traitsISaIP9tree_nodeEE8max_sizeERKS2_, funcdef_no=10873, decl_uid=180083, cgraph_uid=7505, symbol_order=8304)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<tree_node*> >::max_size (const struct allocator_type & __a)
{
  size_type D.251683;

  <bb 2> :
  D.251683 = __gnu_cxx::new_allocator<tree_node*>::max_size (__a);

  <bb 3> :
<L0>:
  return D.251683;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::max_size (_ZNK9__gnu_cxx13new_allocatorIP9tree_nodeE8max_sizeEv, funcdef_no=10985, decl_uid=179925, cgraph_uid=7617, symbol_order=8416)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<tree_node*>::max_size (const struct new_allocator * const this)
{
  size_type D.251685;

  <bb 2> :
  D.251685 = __gnu_cxx::new_allocator<tree_node*>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.251685;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIP9tree_nodeE11_M_max_sizeEv, funcdef_no=10616, decl_uid=179944, cgraph_uid=7247, symbol_order=8044)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<tree_node*>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.251687;

  <bb 2> :
  D.251687 = 1152921504606846975;

  <bb 3> :
<L0>:
  return D.251687;

}



;; Function std::vector<tree_node*>::begin (_ZNSt6vectorIP9tree_nodeSaIS1_EE5beginEv, funcdef_no=9415, decl_uid=184507, cgraph_uid=6047, symbol_order=6840)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<tree_node*>::begin (struct vector * const this)
{
  struct iterator D.236321;
  struct iterator D.251689;

  <bb 2> :
  _1 = &this->D.184898._M_impl.D.184254._M_start;
  __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::__normal_iterator (&D.236321, _1);
  D.251689 = D.236321;
  D.236321 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251689;

}



;; Function __gnu_cxx::operator-<tree_node**, std::vector<tree_node*> > (_ZN9__gnu_cxxmiIPP9tree_nodeSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_, funcdef_no=9416, decl_uid=224104, cgraph_uid=6048, symbol_order=6841)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<tree_node**, std::vector<tree_node*> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.251692;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.251692 = _5 /[ex] 8;

  <bb 3> :
<L0>:
  return D.251692;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_allocate (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE11_M_allocateEm, funcdef_no=9417, decl_uid=184258, cgraph_uid=6049, symbol_order=6842)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
union tree_node * * std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  union tree_node * * D.251700;
  union tree_node * * iftmp.581;
  union tree_node * * D.251694;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.251700 = std::allocator_traits<std::allocator<tree_node*> >::allocate (_1, __n);
  iftmp.581 = D.251700;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.581 = 0B;

  <bb 5> :
  D.251694 = iftmp.581;

  <bb 6> :
<L3>:
  return D.251694;

}



;; Function std::allocator_traits<std::allocator<tree_node*> >::allocate (_ZNSt16allocator_traitsISaIP9tree_nodeEE8allocateERS2_m, funcdef_no=10100, decl_uid=180063, cgraph_uid=6732, symbol_order=7529)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
union tree_node * * std::allocator_traits<std::allocator<tree_node*> >::allocate (struct allocator_type & __a, size_type __n)
{
  union tree_node * * D.251703;
  union tree_node * * D.251701;

  <bb 2> :
  D.251703 = __gnu_cxx::new_allocator<tree_node*>::allocate (__a, __n, 0B);
  D.251701 = D.251703;

  <bb 3> :
<L0>:
  return D.251701;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::allocate (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeE8allocateEmPKv, funcdef_no=10615, decl_uid=179917, cgraph_uid=7248, symbol_order=8045)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
union tree_node * * __gnu_cxx::new_allocator<tree_node*>::allocate (struct new_allocator * const this, size_type __n, const void * D.245704)
{
  union tree_node * * D.251714;
  union tree_node * * D.251713;
  align_val_t __al;
  union tree_node * * D.251711;
  bool retval.582;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<tree_node*>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.582 = _4 != 0;
  if (retval.582 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 2305843009213693951)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 8;
  D.251714 = operator new (_6);
  D.251711 = D.251714;

  <bb 7> :
<L6>:
  return D.251711;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=9420, decl_uid=184142, cgraph_uid=6052, symbol_order=6845)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.251715;

  <bb 2> :
  D.251715 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.251715;

}



;; Function __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPP9tree_nodeSt6vectorIS2_SaIS2_EEE4baseEv, funcdef_no=9419, decl_uid=213556, cgraph_uid=6051, symbol_order=6844)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * const & __gnu_cxx::__normal_iterator<tree_node**, std::vector<tree_node*> >::base (const struct __normal_iterator * const this)
{
  union tree_node * * const & D.251717;

  <bb 2> :
  D.251717 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.251717;

}



;; Function std::vector<tree_node*>::_S_relocate (_ZNSt6vectorIP9tree_nodeSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_, funcdef_no=9418, decl_uid=184406, cgraph_uid=6050, symbol_order=6843)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * std::vector<tree_node*>::_S_relocate (union tree_node * * __first, union tree_node * * __last, union tree_node * * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.251720;
  union tree_node * * D.251719;

  <bb 2> :
  D.251719 = std::vector<tree_node*>::_S_do_relocate (__first, __last, __result, __alloc, D.251720);

  <bb 3> :
<L0>:
  return D.251719;

}



;; Function std::vector<tree_node*>::_S_do_relocate (_ZNSt6vectorIP9tree_nodeSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE, funcdef_no=10101, decl_uid=184394, cgraph_uid=6733, symbol_order=7530)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * std::vector<tree_node*>::_S_do_relocate (union tree_node * * __first, union tree_node * * __last, union tree_node * * __result, struct _Tp_alloc_type & __alloc, struct true_type D.242298)
{
  union tree_node * * D.251722;

  <bb 2> :
  D.251722 = std::__relocate_a<tree_node**, tree_node**, std::allocator<tree_node*> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.251722;

}



;; Function std::__relocate_a<tree_node**, tree_node**, std::allocator<tree_node*> > (_ZSt12__relocate_aIPP9tree_nodeS2_SaIS1_EET0_T_S5_S4_RT1_, funcdef_no=10617, decl_uid=224269, cgraph_uid=7249, symbol_order=8046)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * std::__relocate_a<tree_node**, tree_node**, std::allocator<tree_node*> > (union tree_node * * __first, union tree_node * * __last, union tree_node * * __result, struct allocator & __alloc)
{
  union tree_node * * D.251724;

  <bb 2> :
  _1 = std::__niter_base<tree_node**> (__result);
  _2 = std::__niter_base<tree_node**> (__last);
  _3 = std::__niter_base<tree_node**> (__first);
  D.251724 = std::__relocate_a_1<tree_node*, tree_node*> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.251724;

}



;; Function std::__niter_base<tree_node**> (_ZSt12__niter_baseIPP9tree_nodeET_S3_, funcdef_no=10874, decl_uid=224275, cgraph_uid=7506, symbol_order=8305)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * std::__niter_base<tree_node**> (union tree_node * * __it)
{
  union tree_node * * D.251726;

  <bb 2> :
  D.251726 = __it;

  <bb 3> :
<L0>:
  return D.251726;

}



;; Function std::__relocate_a_1<tree_node*, tree_node*> (_ZSt14__relocate_a_1IP9tree_nodeS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E, funcdef_no=10875, decl_uid=224443, cgraph_uid=7507, symbol_order=8306)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
union tree_node * * std::__relocate_a_1<tree_node*, tree_node*> (union tree_node * * __first, union tree_node * * __last, union tree_node * * __result, struct allocator & D.246885)
{
  ptrdiff_t __count;
  union tree_node * * D.251731;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 8;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.583_2 = (long unsigned int) __count;
  _3 = __count.583_2 * 8;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.584_4 = (long unsigned int) __count;
  _5 = __count.584_4 * 8;
  D.251731 = __result + _5;

  <bb 5> :
<L3>:
  return D.251731;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE13_M_deallocateEPS1_m, funcdef_no=8396, decl_uid=184261, cgraph_uid=5028, symbol_order=5821)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate (struct _Vector_base * const this, union tree_node * * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<tree_node*> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<tree_node*> >::deallocate (_ZNSt16allocator_traitsISaIP9tree_nodeEE10deallocateERS2_PS1_m, funcdef_no=9207, decl_uid=180070, cgraph_uid=5839, symbol_order=6632)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<tree_node*> >::deallocate (struct allocator_type & __a, union tree_node * * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node*>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::deallocate (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeE10deallocateEPS2_m, funcdef_no=9947, decl_uid=179921, cgraph_uid=6579, symbol_order=7376)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<tree_node*>::deallocate (struct new_allocator * const this, union tree_node * * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 8;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<function_path>::operator[] (_ZNSt6vectorI13function_pathSaIS0_EEixEm, funcdef_no=7713, decl_uid=175261, cgraph_uid=4345, symbol_order=5134)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<function_path>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.251739;

  <bb 2> :
  _1 = this->D.175608._M_impl.D.174953._M_start;
  _2 = __n * 24;
  D.251739 = _1 + _2;

  <bb 3> :
<L0>:
  return D.251739;

}



;; Function std::vector<tree_node*>::pop_back (_ZNSt6vectorIP9tree_nodeSaIS1_EE8pop_backEv, funcdef_no=7721, decl_uid=184588, cgraph_uid=4353, symbol_order=5142)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<tree_node*>::pop_back (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.184898._M_impl.D.184254._M_finish;
  _2 = _1 + 18446744073709551608;
  this->D.184898._M_impl.D.184254._M_finish = _2;
  _3 = this->D.184898._M_impl.D.184254._M_finish;
  _4 = &this->D.184898._M_impl;
  std::allocator_traits<std::allocator<tree_node*> >::destroy<tree_node*> (_4, _3);
  return;

}



;; Function std::allocator_traits<std::allocator<tree_node*> >::destroy<tree_node*> (_ZNSt16allocator_traitsISaIP9tree_nodeEE7destroyIS1_EEvRS2_PT_, funcdef_no=8630, decl_uid=213593, cgraph_uid=5262, symbol_order=6055)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<tree_node*> >::destroy<tree_node*> (struct allocator_type & __a, union tree_node * * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node*>::destroy<tree_node*> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::destroy<tree_node*> (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeE7destroyIS2_EEvPT_, funcdef_no=9422, decl_uid=224462, cgraph_uid=6054, symbol_order=6847)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node*>::destroy<tree_node*> (struct new_allocator * const this, union tree_node * * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function std::vector<function_path>::size (_ZNKSt6vectorI13function_pathSaIS0_EE4sizeEv, funcdef_no=7677, decl_uid=175241, cgraph_uid=4309, symbol_order=5098)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<function_path>::size (const struct vector * const this)
{
  size_type D.251741;

  <bb 2> :
  _1 = this->D.175608._M_impl.D.174953._M_finish;
  _2 = this->D.175608._M_impl.D.174953._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.251741 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.251741;

}



;; Function std::vector<free_type>::~vector (_ZNSt6vectorI9free_typeSaIS0_EED2Ev, funcdef_no=7683, decl_uid=173489, cgraph_uid=4315, symbol_order=5104)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<free_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.173492;
  _2 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.173492._M_impl.D.172837._M_finish;
  _4 = this->D.173492._M_impl.D.172837._M_start;
  std::_Destroy<free_type*, free_type> (_4, _3, _2);
  _5 = &this->D.173492;
  std::_Vector_base<free_type, std::allocator<free_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<free_type*, free_type> (_ZSt8_DestroyIP9free_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8574, decl_uid=212827, cgraph_uid=5206, symbol_order=5999)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<free_type*, free_type> (struct free_type * __first, struct free_type * __last, struct allocator & D.223732)
{
  <bb 2> :
  std::_Destroy<free_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<free_type*> (_ZSt8_DestroyIP9free_typeEvT_S2_, funcdef_no=9364, decl_uid=223734, cgraph_uid=5996, symbol_order=6789)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<free_type*> (struct free_type * __first, struct free_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<free_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<free_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP9free_typeEEvT_S4_, funcdef_no=10060, decl_uid=235635, cgraph_uid=6692, symbol_order=7489)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<free_type*> (struct free_type * D.242130, struct free_type * D.242131)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function function_free_array::~function_free_array (_ZN19function_free_arrayD2Ev, funcdef_no=6329, decl_uid=192806, cgraph_uid=3304, symbol_order=4082)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_free_array::~function_free_array (struct function_free_array * const this)
{
  <bb 2> :
  _1 = &this->free_type_array;
  std::vector<free_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<pthread_detched_type>::~vector (_ZNSt6vectorI20pthread_detched_typeSaIS0_EED2Ev, funcdef_no=7700, decl_uid=177711, cgraph_uid=4332, symbol_order=5121)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_detched_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.177714;
  _2 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.177714._M_impl.D.177059._M_finish;
  _4 = this->D.177714._M_impl.D.177059._M_start;
  std::_Destroy<pthread_detched_type*, pthread_detched_type> (_4, _3, _2);
  _5 = &this->D.177714;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<pthread_detched_type*, pthread_detched_type> (_ZSt8_DestroyIP20pthread_detched_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8599, decl_uid=213010, cgraph_uid=5231, symbol_order=6024)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<pthread_detched_type*, pthread_detched_type> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct allocator & D.223856)
{
  <bb 2> :
  std::_Destroy<pthread_detched_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<pthread_detched_type*> (_ZSt8_DestroyIP20pthread_detched_typeEvT_S2_, funcdef_no=9383, decl_uid=223858, cgraph_uid=6015, symbol_order=6808)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<pthread_detched_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<pthread_detched_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP20pthread_detched_typeEEvT_S4_, funcdef_no=10080, decl_uid=235875, cgraph_uid=6712, symbol_order=7509)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<pthread_detched_type*> (struct pthread_detched_type * D.242203, struct pthread_detched_type * D.242204)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function function_pthread_detched_array::~function_pthread_detched_array (_ZN30function_pthread_detched_arrayD2Ev, funcdef_no=6338, decl_uid=193678, cgraph_uid=3313, symbol_order=4091)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_detched_array::~function_pthread_detched_array (struct function_pthread_detched_array * const this)
{
  <bb 2> :
  _1 = &this->pthread_detched_array;
  std::vector<pthread_detched_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<pthread_exit_type>::~vector (_ZNSt6vectorI17pthread_exit_typeSaIS0_EED2Ev, funcdef_no=7709, decl_uid=178756, cgraph_uid=4341, symbol_order=5130)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_exit_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.178759;
  _2 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.178759._M_impl.D.178104._M_finish;
  _4 = this->D.178759._M_impl.D.178104._M_start;
  std::_Destroy<pthread_exit_type*, pthread_exit_type> (_4, _3, _2);
  _5 = &this->D.178759;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<pthread_exit_type*, pthread_exit_type> (_ZSt8_DestroyIP17pthread_exit_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8612, decl_uid=213150, cgraph_uid=5244, symbol_order=6037)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<pthread_exit_type*, pthread_exit_type> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct allocator & D.223931)
{
  <bb 2> :
  std::_Destroy<pthread_exit_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<pthread_exit_type*> (_ZSt8_DestroyIP17pthread_exit_typeEvT_S2_, funcdef_no=9396, decl_uid=223933, cgraph_uid=6028, symbol_order=6821)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<pthread_exit_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<pthread_exit_type*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP17pthread_exit_typeEEvT_S4_, funcdef_no=10088, decl_uid=236044, cgraph_uid=6720, symbol_order=7517)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<pthread_exit_type*> (struct pthread_exit_type * D.242239, struct pthread_exit_type * D.242240)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function function_pthread_exit_array::~function_pthread_exit_array (_ZN27function_pthread_exit_arrayD2Ev, funcdef_no=6344, decl_uid=194154, cgraph_uid=3319, symbol_order=4097)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_exit_array::~function_pthread_exit_array (struct function_pthread_exit_array * const this)
{
  <bb 2> :
  _1 = &this->pthread_exit_array;
  std::vector<pthread_exit_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<function_path>::~vector (_ZNSt6vectorI13function_pathSaIS0_EED2Ev, funcdef_no=7675, decl_uid=175605, cgraph_uid=4307, symbol_order=5096)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<function_path>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.175608;
  _2 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_1);
  _3 = this->D.175608._M_impl.D.174953._M_finish;
  _4 = this->D.175608._M_impl.D.174953._M_start;
  std::_Destroy<function_path*, function_path> (_4, _3, _2);
  _5 = &this->D.175608;
  std::_Vector_base<function_path, std::allocator<function_path> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<function_path*, function_path> (_ZSt8_DestroyIP13function_pathS0_EvT_S2_RSaIT0_E, funcdef_no=8561, decl_uid=212689, cgraph_uid=5193, symbol_order=5986)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<function_path*, function_path> (struct function_path * __first, struct function_path * __last, struct allocator & D.223657)
{
  <bb 2> :
  std::_Destroy<function_path*> (__first, __last);
  return;

}



;; Function std::_Destroy<function_path*> (_ZSt8_DestroyIP13function_pathEvT_S2_, funcdef_no=9351, decl_uid=223659, cgraph_uid=5983, symbol_order=6776)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<function_path*> (struct function_path * __first, struct function_path * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<function_path*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<function_path*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP13function_pathEEvT_S4_, funcdef_no=10052, decl_uid=235466, cgraph_uid=6684, symbol_order=7481)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<function_path*> (struct function_path * D.242075, struct function_path * D.242076)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function function_path_array::~function_path_array (_ZN19function_path_arrayD2Ev, funcdef_no=6323, decl_uid=192324, cgraph_uid=3298, symbol_order=4076)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_path_array::~function_path_array (struct function_path_array * const this)
{
  <bb 2> :
  _1 = &this->function_path_array;
  std::vector<function_path>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function tracefree_fucntion (_Z18tracefree_fucntionP11cgraph_nodeP3ptbP12gimple_array, funcdef_no=6350, decl_uid=187021, cgraph_uid=3326, symbol_order=4104)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 4 5 3
;; 2 succs { 7 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 1 }
void tracefree_fucntion (struct cgraph_node * node, struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct cgraph_node * D.251748;
  const char * D.251747;
  struct function * D.251746;
  struct cgraph_node * D.251745;
  availability avail;
  int fucntion_level;
  struct cgraph_edge * e;

  <bb 2> :
  symtab.585_1 = symtab;
  D.251745 = symbol_table::first_defined_function (symtab.585_1);
  node = D.251745;
  goto <bb 7>; [INV]

  <bb 3> :
  fucntion_level = 0;
  D.251746 = cgraph_node::get_fun (node);
  _2 = D.251746;
  push_cfun (_2);
  cfun.586_3 = cfun;
  _4 = cfun.586_3->decl;
  D.251747 = get_name (_4);
  _5 = D.251747;
  stderr.587_6 = stderr;
  fprintf (stderr.587_6, "=======node_fun:%s=========\n", _5);
  cfun.588_7 = cfun;
  if (cfun.588_7 == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  pop_cfun ();
  // predicted unlikely by continue predictor.
  goto <bb 6>; [INV]

  <bb 5> :
  stderr.589_8 = stderr;
  __builtin_fwrite ("fucntion collect path \n", 1, 23, stderr.589_8);
  cfun.590_9 = cfun;
  _10 = &cfun.590_9->decl;
  std::vector<tree_node*>::push_back (&pathStack, _10);
  cfun.591_11 = cfun;
  _12 = cfun.591_11->decl;
  walk_function_path (_12, fucntion_level, ptable, user_tmp);
  std::vector<tree_node*>::pop_back (&pathStack);
  pop_cfun ();

  <bb 6> :
  symtab.592_13 = symtab;
  D.251748 = symbol_table::next_defined_function (symtab.592_13, node);
  node = D.251748;

  <bb 7> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  stderr.593_14 = stderr;
  __builtin_fwrite ("fucntion collect path finsh\n", 1, 28, stderr.593_14);
  return;

}



;; Function walk_function_path (_Z18walk_function_pathP9tree_nodeiP3ptbP12gimple_array, funcdef_no=6351, decl_uid=187017, cgraph_uid=3330, symbol_order=4108)

Merging blocks 4 and 65
Removing basic block 18
Removing basic block 19
Removing basic block 37
Removing basic block 52
Removing basic block 62
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71
;;
;; Loop 1
;;  header 55, latch 54
;;  depth 1, outer 0
;;  nodes: 55 54 26 53 52 29 51 50 38 49 39 48 45 44 40 43 41 42 47 46 37 34 36 35 33 32 31 30 28 27 23 25 21 24 22 20 19
;;
;; Loop 3
;;  header 50, latch 49
;;  depth 2, outer 1
;;  nodes: 50 49 39 48 45 44 40 43 41 42 47 46
;;
;; Loop 4
;;  header 44, latch 43
;;  depth 3, outer 3
;;  nodes: 44 43 41 42
;;
;; Loop 2
;;  header 25, latch 24
;;  depth 2, outer 1
;;  nodes: 25 24 22
;; 2 succs { 71 3 }
;; 3 succs { 4 5 }
;; 4 succs { 60 }
;; 5 succs { 71 6 }
;; 6 succs { 71 7 }
;; 7 succs { 70 8 }
;; 8 succs { 67 9 }
;; 9 succs { 67 10 }
;; 10 succs { 67 11 }
;; 11 succs { 12 18 }
;; 12 succs { 67 13 }
;; 13 succs { 67 14 }
;; 14 succs { 67 15 }
;; 15 succs { 67 16 }
;; 16 succs { 17 18 }
;; 17 succs { 67 18 }
;; 18 succs { 55 }
;; 19 succs { 67 20 }
;; 20 succs { 67 21 }
;; 21 succs { 25 }
;; 22 succs { 23 24 }
;; 23 succs { 26 }
;; 24 succs { 25 }
;; 25 succs { 22 26 }
;; 26 succs { 27 54 }
;; 27 succs { 67 28 }
;; 28 succs { 67 29 }
;; 29 succs { 30 52 }
;; 30 succs { 66 31 }
;; 31 succs { 66 32 }
;; 32 succs { 63 33 }
;; 33 succs { 34 35 }
;; 34 succs { 63 37 }
;; 35 succs { 63 36 }
;; 36 succs { 63 37 }
;; 37 succs { 63 38 }
;; 38 succs { 50 }
;; 39 succs { 40 49 }
;; 40 succs { 44 }
;; 41 succs { 42 43 }
;; 42 succs { 43 }
;; 43 succs { 44 }
;; 44 succs { 41 45 }
;; 45 succs { 46 49 }
;; 46 succs { 61 47 }
;; 47 succs { 61 48 }
;; 48 succs { 49 }
;; 49 succs { 50 }
;; 50 succs { 39 51 }
;; 51 succs { 52 }
;; 52 succs { 67 53 }
;; 53 succs { 54 }
;; 54 succs { 55 }
;; 55 succs { 19 56 }
;; 56 succs { 57 58 }
;; 57 succs { 67 59 }
;; 58 succs { 67 59 }
;; 59 succs { 60 }
;; 60 succs { 1 }
;; 61 succs { 62 }
;; 62 succs { 63 }
;; 63 succs { 64 }
;; 64 succs { 65 }
;; 65 succs { 66 }
;; 66 succs { 67 }
;; 67 succs { 68 }
;; 68 succs { 69 }
;; 69 succs { 70 }
;; 70 succs { 71 }
;; 71 succs { }
void walk_function_path (union tree_node * function_tree, int fucntion_level, struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct function_return_array * D.251801;
  struct function_return_array * D.251800;
  struct function_return_array * D.251799;
  struct function_return_array * D.251798;
  const char * D.251797;
  struct function_return_array * D.251796;
  struct function_return_array * D.251795;
  const char * D.251794;
  struct function_path_array * D.251793;
  struct function_path_array * D.251792;
  struct return_type ret_type;
  int k2;
  int find_diff;
  int k;
  struct vector funcalleeRetTypearray;
  union tree_node * getFucntionDecl;
  struct vector ret_type_find_fun_array;
  struct function_return_array find_fun_array;
  struct function_return_array calleeFunArray;
  int o;
  int i;
  int find_thread;
  int find;
  struct vector callerRetTypearray;
  struct function_return_array callerFunArray;
  struct vector function_path_array;
  struct function_path_array fun_array;
  bool retval.623;
  bool retval.622;
  bool retval.617;
  bool retval.616;
  bool retval.614;
  bool retval.611;
  bool retval.608;
  bool retval.607;
  bool retval.606;
  bool retval.599;
  bool retval.594;

  <bb 2> :
  function_path_collect.595_1 = function_path_collect;
  D.251792 = hash_map<tree_node*, function_path_array>::get (function_path_collect.595_1, &function_tree);

  <bb 3> :
  _2 = D.251792;
  retval.594 = _2 == 0B;
  if (retval.594 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  goto <bb 60>; [INV]

  <bb 5> :
  function_path_collect.596_3 = function_path_collect;
  D.251793 = hash_map<tree_node*, function_path_array>::get (function_path_collect.596_3, &function_tree);

  <bb 6> :
  _4 = D.251793;
  function_path_array::function_path_array (&fun_array, _4);

  <bb 7> :
  std::vector<function_path>::vector (&function_path_array, &fun_array.function_path_array);

  <bb 8> :
  function_return_array::function_return_array (&callerFunArray);
  std::vector<return_type>::vector (&callerRetTypearray);
  _5 = std::vector<function_path>::size (&function_path_array);
  function_tree.597_6 = function_tree;
  D.251794 = get_name (function_tree.597_6);

  <bb 9> :
  _7 = D.251794;
  stderr.598_8 = stderr;
  fprintf (stderr.598_8, "\x1b[40;44m =======print_function_path %s  function_call count: %d level :%d========  \x1b[0m\n", _7, _5, fucntion_level);

  <bb 10> :
  function_return_collect.600_9 = function_return_collect;
  D.251795 = hash_map<tree_node*, function_return_array>::get (function_return_collect.600_9, &function_tree);

  <bb 11> :
  _10 = D.251795;
  retval.599 = _10 != 0B;
  if (retval.599 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 12> :
  function_return_collect.601_11 = function_return_collect;
  D.251796 = hash_map<tree_node*, function_return_array>::get (function_return_collect.601_11, &function_tree);

  <bb 13> :
  _12 = D.251796;
  function_return_array::operator= (&callerFunArray, _12);

  <bb 14> :
  std::vector<return_type>::operator= (&callerRetTypearray, &callerFunArray.return_type_array);

  <bb 15> :
  _13 = callerFunArray.return_type_num;
  stderr.602_14 = stderr;
  fprintf (stderr.602_14, "\x1b[40;44m =======print_function_type %d  ========  \x1b[0m\n", _13);

  <bb 16> :
  _15 = callerFunArray.pthread_type_num;
  _16 = (unsigned int) _15;
  FUNCITON_THREAD.603_17 = FUNCITON_THREAD;
  if (_16 == FUNCITON_THREAD.603_17)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  stderr.604_18 = stderr;
  __builtin_fwrite ("\x1b[40;44m =======print_pthread_type_is thread_fucntion  ========  \x1b[0m\n", 1, 70, stderr.604_18);

  <bb 18> :
  fucntion_level = fucntion_level + 1;
  find = 0;
  find_thread = 0;
  i = 0;
  goto <bb 55>; [INV]

  <bb 19> :
  find = 0;
  _19 = (long unsigned int) i;
  _20 = std::vector<function_path>::operator[] (&function_path_array, _19);
  _21 = _20->next;
  D.251797 = get_name (_21);

  <bb 20> :
  _22 = D.251797;
  stderr.605_23 = stderr;
  fprintf (stderr.605_23, "\x1b[40;42m =======pre add _ fucntion:%s========= \x1b[0m\n", _22);

  <bb 21> :
  o = 0;
  goto <bb 25>; [INV]

  <bb 22> :
  _24 = (long unsigned int) o;
  _25 = std::vector<tree_node*>::operator[] (&pathStack, _24);
  _26 = *_25;
  _27 = (long unsigned int) i;
  _28 = std::vector<function_path>::operator[] (&function_path_array, _27);
  _29 = _28->next;
  retval.606 = _26 == _29;
  if (retval.606 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  find = 1;
  goto <bb 26>; [INV]

  <bb 24> :
  o = o + 1;

  <bb 25> :
  _30 = (long unsigned int) o;
  _31 = std::vector<tree_node*>::size (&pathStack);
  retval.607 = _30 < _31;
  if (retval.607 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 26> :
  if (find == 0)
    goto <bb 27>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 27> :
  _32 = (long unsigned int) i;
  _33 = std::vector<function_path>::operator[] (&function_path_array, _32);
  _34 = &_33->next;
  std::vector<tree_node*>::push_back (&pathStack, _34);

  <bb 28> :
  function_return_collect.609_35 = function_return_collect;
  _36 = (long unsigned int) i;
  _37 = std::vector<function_path>::operator[] (&function_path_array, _36);
  _38 = &_37->next;
  D.251798 = hash_map<tree_node*, function_return_array>::get (function_return_collect.609_35, _38);

  <bb 29> :
  _39 = D.251798;
  retval.608 = _39 != 0B;
  if (retval.608 != 0)
    goto <bb 30>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 30> :
  function_return_collect.610_40 = function_return_collect;
  _41 = (long unsigned int) i;
  _42 = std::vector<function_path>::operator[] (&function_path_array, _41);
  _43 = &_42->next;
  D.251799 = hash_map<tree_node*, function_return_array>::get (function_return_collect.610_40, _43);

  <bb 31> :
  _44 = D.251799;
  function_return_array::function_return_array (&calleeFunArray, _44);

  <bb 32> :
  function_return_array::function_return_array (&find_fun_array);
  std::vector<return_type>::vector (&ret_type_find_fun_array);
  _45 = (long unsigned int) i;
  _46 = std::vector<function_path>::operator[] (&function_path_array, _45);
  _47 = _46->next;
  getFucntionDecl = _47;
  function_return_collect.612_48 = function_return_collect;
  D.251800 = hash_map<tree_node*, function_return_array>::get (function_return_collect.612_48, &getFucntionDecl);

  <bb 33> :
  _49 = D.251800;
  retval.611 = _49 == 0B;
  if (retval.611 != 0)
    goto <bb 34>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 34> :
  std::vector<return_type>::operator= (&find_fun_array.return_type_array, &ret_type_find_fun_array);
  goto <bb 37>; [INV]

  <bb 35> :
  function_return_collect.613_50 = function_return_collect;
  D.251801 = hash_map<tree_node*, function_return_array>::get (function_return_collect.613_50, &getFucntionDecl);

  <bb 36> :
  _51 = D.251801;
  function_return_array::operator= (&find_fun_array, _51);

  <bb 37> :
  std::vector<return_type>::vector (&funcalleeRetTypearray, &find_fun_array.return_type_array);

  <bb 38> :
  k = 0;
  goto <bb 50>; [INV]

  <bb 39> :
  _52 = (long unsigned int) k;
  _53 = std::vector<return_type>::operator[] (&callerRetTypearray, _52);
  _54 = _53->return_type_stmt_num;
  _55 = (unsigned int) _54;
  FUNCITON_THREAD.615_56 = FUNCITON_THREAD;
  retval.614 = _55 == FUNCITON_THREAD.615_56;
  if (retval.614 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 40> :
  find_diff = 0;
  k2 = 0;
  goto <bb 44>; [INV]

  <bb 41> :
  _57 = (long unsigned int) k;
  _58 = std::vector<return_type>::operator[] (&callerRetTypearray, _57);
  _59 = _58->return_tree;
  _60 = (long unsigned int) k2;
  _61 = std::vector<return_type>::operator[] (&funcalleeRetTypearray, _60);
  _62 = _61->return_tree;
  retval.616 = _59 == _62;
  if (retval.616 != 0)
    goto <bb 42>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 42> :
  find_diff = 1;

  <bb 43> :
  k2 = k2 + 1;

  <bb 44> :
  _63 = (long unsigned int) k2;
  _64 = std::vector<return_type>::size (&funcalleeRetTypearray);
  retval.617 = _63 < _64;
  if (retval.617 != 0)
    goto <bb 41>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 45> :
  if (find_diff == 0)
    goto <bb 46>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 46> :
  return_type::return_type (&ret_type);
  _65 = (long unsigned int) k;
  _66 = std::vector<return_type>::operator[] (&callerRetTypearray, _65);
  _67 = _66->stmt;
  ret_type.stmt = _67;
  _68 = (long unsigned int) k;
  _69 = std::vector<return_type>::operator[] (&callerRetTypearray, _68);
  _70 = _69->return_tree;
  ret_type.return_tree = _70;
  FUNCITON_THREAD.618_71 = FUNCITON_THREAD;
  FUNCITON_THREAD.619_72 = (int) FUNCITON_THREAD.618_71;
  ret_type.return_type_stmt_num = FUNCITON_THREAD.619_72;
  std::vector<return_type>::push_back (&find_fun_array.return_type_array, &ret_type);

  <bb 47> :
  function_return_collect.620_73 = function_return_collect;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.620_73, &getFucntionDecl, &find_fun_array);

  <bb 48> :
  FUNCITON_THREAD.621_74 = FUNCITON_THREAD;
  find_thread = (int) FUNCITON_THREAD.621_74;
  ret_type = {CLOBBER};

  <bb 49> :
  k = k + 1;

  <bb 50> :
  _75 = (long unsigned int) k;
  _76 = std::vector<return_type>::size (&callerRetTypearray);
  retval.622 = _75 < _76;
  if (retval.622 != 0)
    goto <bb 39>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 51> :
  std::vector<return_type>::~vector (&funcalleeRetTypearray);
  std::vector<return_type>::~vector (&ret_type_find_fun_array);
  function_return_array::~function_return_array (&find_fun_array);
  function_return_array::~function_return_array (&calleeFunArray);
  calleeFunArray = {CLOBBER};
  find_fun_array = {CLOBBER};
  ret_type_find_fun_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};
  funcalleeRetTypearray = {CLOBBER};

  <bb 52> :
  _77 = (long unsigned int) i;
  _78 = std::vector<function_path>::operator[] (&function_path_array, _77);
  _79 = _78->next;
  walk_function_path (_79, fucntion_level, ptable, user_tmp);

  <bb 53> :
  std::vector<tree_node*>::pop_back (&pathStack);

  <bb 54> :
  i = i + 1;

  <bb 55> :
  _80 = (long unsigned int) i;
  _81 = std::vector<function_path>::size (&function_path_array);
  retval.623 = _80 < _81;
  if (retval.623 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 56> :
  find_thread.624_82 = (unsigned int) find_thread;
  FUNCITON_THREAD.625_83 = FUNCITON_THREAD;
  if (find_thread.624_82 == FUNCITON_THREAD.625_83)
    goto <bb 57>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 57> :
  FUNCITON_THREAD.626_84 = FUNCITON_THREAD;
  FUNCITON_THREAD.627_85 = (int) FUNCITON_THREAD.626_84;
  function_tree.628_86 = function_tree;
  checkPointerConstraint (function_tree.628_86, ptable, user_tmp, 0B, FUNCITON_THREAD.627_85);
  goto <bb 59>; [INV]

  <bb 58> :
  function_tree.629_87 = function_tree;
  checkPointerConstraint (function_tree.629_87, ptable, user_tmp, 0B, 0);

  <bb 59> :
  std::vector<return_type>::~vector (&callerRetTypearray);
  function_return_array::~function_return_array (&callerFunArray);
  std::vector<function_path>::~vector (&function_path_array);
  function_path_array::~function_path_array (&fun_array);
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 60> :
<L45>:
  return;

  <bb 61> :
<L46>:
  ret_type = {CLOBBER};
  resx 11

  <bb 62> :
<L47>:
  std::vector<return_type>::~vector (&funcalleeRetTypearray);
  resx 10

  <bb 63> :
<L48>:
  std::vector<return_type>::~vector (&ret_type_find_fun_array);
  resx 9

  <bb 64> :
<L49>:
  function_return_array::~function_return_array (&find_fun_array);
  resx 8

  <bb 65> :
<L50>:
  function_return_array::~function_return_array (&calleeFunArray);
  resx 7

  <bb 66> :
<L51>:
  calleeFunArray = {CLOBBER};
  find_fun_array = {CLOBBER};
  ret_type_find_fun_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};
  funcalleeRetTypearray = {CLOBBER};
  resx 6

  <bb 67> :
<L52>:
  std::vector<return_type>::~vector (&callerRetTypearray);
  resx 5

  <bb 68> :
<L53>:
  function_return_array::~function_return_array (&callerFunArray);
  resx 4

  <bb 69> :
<L54>:
  std::vector<function_path>::~vector (&function_path_array);
  resx 3

  <bb 70> :
<L55>:
  function_path_array::~function_path_array (&fun_array);
  resx 2

  <bb 71> :
<L56>:
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 1

}



;; Function return_type::return_type (_ZN11return_typeC2Ev, funcdef_no=6353, decl_uid=194324, cgraph_uid=3328, symbol_order=4106)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void return_type::return_type (struct return_type * const this)
{
  <bb 2> :
  this->return_type_stmt_num = 0;
  return;

}



;; Function std::vector<return_type>::push_back (_ZNSt6vectorI11return_typeSaIS0_EE9push_backERKS0_, funcdef_no=7722, decl_uid=174239, cgraph_uid=4355, symbol_order=5144)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<return_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.251818;

  <bb 2> :
  _1 = this->D.174559._M_impl.D.173904._M_finish;
  _2 = this->D.174559._M_impl.D.173904._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.174559._M_impl.D.173904._M_finish;
  _4 = &this->D.174559._M_impl;
  std::allocator_traits<std::allocator<return_type> >::construct<return_type, const return_type&> (_4, _3, __x);
  _5 = this->D.174559._M_impl.D.173904._M_finish;
  _6 = _5 + 24;
  this->D.174559._M_impl.D.173904._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.251818 = std::vector<return_type>::end (this);
  std::vector<return_type>::_M_realloc_insert<const return_type&> (this, D.251818, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<return_type> >::construct<return_type, const return_type&> (_ZNSt16allocator_traitsISaI11return_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8631, decl_uid=213729, cgraph_uid=5263, symbol_order=6056)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<return_type> >::construct<return_type, const return_type&> (struct allocator_type & __a, struct return_type * __p, const struct return_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const return_type&> (__args#0);
  __gnu_cxx::new_allocator<return_type>::construct<return_type, const return_type&> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::construct<return_type, const return_type&> (_ZN9__gnu_cxx13new_allocatorI11return_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9424, decl_uid=224478, cgraph_uid=6056, symbol_order=6849)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::construct<return_type, const return_type&> (struct new_allocator * const this, struct return_type * __p, const struct return_type & __args#0)
{
  void * D.236354;
  void * D.236353;
  const struct return_type * D.236355;

  <bb 2> :
  D.236355 = std::forward<const return_type&> (__args#0);
  D.236353 = __p;
  D.236354 = operator new (24, D.236353);
  MEM[(struct return_type *)D.236354] = *D.236355;
  return;

}



;; Function std::vector<return_type>::_M_realloc_insert<const return_type&> (_ZNSt6vectorI11return_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8632, decl_uid=213898, cgraph_uid=5267, symbol_order=6060)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<return_type>::_M_realloc_insert<const return_type&> (struct vector * const this, struct iterator __position, const struct return_type & __args#0)
{
  struct return_type * D.251823;
  const size_type D.251822;
  struct return_type * __new_finish;
  struct return_type * __new_start;
  const size_type __elems_before;
  struct return_type * __old_finish;
  struct return_type * __old_start;
  const size_type __len;
  struct iterator D.224489;

  <bb 2> :
  D.251822 = std::vector<return_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.251822;
  __old_start = this->D.174559._M_impl.D.173904._M_start;
  __old_finish = this->D.174559._M_impl.D.173904._M_finish;
  D.224489 = std::vector<return_type>::begin (this);
  _1 = __gnu_cxx::operator-<return_type*, std::vector<return_type> > (&__position, &D.224489);
  __elems_before = (const size_type) _1;
  D.224489 = {CLOBBER};
  _2 = &this->D.174559;
  D.251823 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_allocate (_2, __len);
  __new_start = D.251823;
  __new_finish = __new_start;
  _3 = std::forward<const return_type&> (__args#0);
  _4 = __elems_before * 24;
  _5 = __new_start + _4;
  _6 = &this->D.174559._M_impl;
  std::allocator_traits<std::allocator<return_type> >::construct<return_type, const return_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.174559;
  _8 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<return_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 24;
  _11 = &this->D.174559;
  _12 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<return_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.174559;
  _23 = this->D.174559._M_impl.D.173904._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 24;
  _26 = (long unsigned int) _25;
  std::_Vector_base<return_type, std::allocator<return_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.174559._M_impl.D.173904._M_start = __new_start;
  this->D.174559._M_impl.D.173904._M_finish = __new_finish;
  _27 = __len * 24;
  _28 = __new_start + _27;
  this->D.174559._M_impl.D.173904._M_end_of_storage = _28;
  return;

}



;; Function std::vector<return_type>::_M_check_len (_ZNKSt6vectorI11return_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9425, decl_uid=174408, cgraph_uid=6057, symbol_order=6850)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<return_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.632;
  size_type D.251827;
  const long unsigned int D.236360;
  bool retval.630;

  <bb 2> :
  _1 = std::vector<return_type>::max_size (this);
  _2 = std::vector<return_type>::size (this);
  _3 = _1 - _2;
  __n.631_4 = __n;
  retval.630 = _3 < __n.631_4;
  if (retval.630 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<return_type>::size (this);
  _6 = std::vector<return_type>::size (this);
  D.236360 = _6;
  _7 = std::max<long unsigned int> (&D.236360, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.236360 = {CLOBBER};
  _9 = std::vector<return_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<return_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.632 = std::vector<return_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.632 = __len;

  <bb 8> :
  D.251827 = iftmp.632;

  <bb 9> :
<L6>:
  return D.251827;

}



;; Function std::vector<return_type>::max_size (_ZNKSt6vectorI11return_typeSaIS0_EE8max_sizeEv, funcdef_no=10103, decl_uid=174194, cgraph_uid=6735, symbol_order=7532)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<return_type>::max_size (const struct vector * const this)
{
  size_type D.251834;

  <bb 2> :
  _1 = &this->D.174559;
  _2 = std::_Vector_base<return_type, std::allocator<return_type> >::_M_get_Tp_allocator (_1);
  D.251834 = std::vector<return_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.251834;

}



;; Function std::vector<return_type>::_S_max_size (_ZNSt6vectorI11return_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10619, decl_uid=174415, cgraph_uid=7251, symbol_order=8048)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<return_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.251836;

  <bb 2> :
  __diffmax = 384307168202282325;
  _1 = std::allocator_traits<std::allocator<return_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.251836 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.251836;

}



;; Function std::allocator_traits<std::allocator<return_type> >::max_size (_ZNSt16allocator_traitsISaI11return_typeEE8max_sizeERKS1_, funcdef_no=10876, decl_uid=173729, cgraph_uid=7508, symbol_order=8307)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<return_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.251839;

  <bb 2> :
  D.251839 = __gnu_cxx::new_allocator<return_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.251839;

}



;; Function __gnu_cxx::new_allocator<return_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI11return_typeE8max_sizeEv, funcdef_no=10986, decl_uid=173571, cgraph_uid=7618, symbol_order=8417)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<return_type>::max_size (const struct new_allocator * const this)
{
  size_type D.251841;

  <bb 2> :
  D.251841 = __gnu_cxx::new_allocator<return_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.251841;

}



;; Function __gnu_cxx::operator-<return_type*, std::vector<return_type> > (_ZN9__gnu_cxxmiIP11return_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9426, decl_uid=224490, cgraph_uid=6058, symbol_order=6851)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<return_type*, std::vector<return_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.251843;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<return_type*, std::vector<return_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.251843 = _5 /[ex] 24;

  <bb 3> :
<L0>:
  return D.251843;

}



;; Function std::vector<return_type>::_S_relocate (_ZNSt6vectorI11return_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9427, decl_uid=174066, cgraph_uid=6059, symbol_order=6852)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::vector<return_type>::_S_relocate (struct return_type * __first, struct return_type * __last, struct return_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.251846;
  struct return_type * D.251845;

  <bb 2> :
  D.251845 = std::vector<return_type>::_S_do_relocate (__first, __last, __result, __alloc, D.251846);

  <bb 3> :
<L0>:
  return D.251845;

}



;; Function std::vector<return_type>::_S_do_relocate (_ZNSt6vectorI11return_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10104, decl_uid=174054, cgraph_uid=6736, symbol_order=7533)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::vector<return_type>::_S_do_relocate (struct return_type * __first, struct return_type * __last, struct return_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.242324)
{
  struct return_type * D.251848;

  <bb 2> :
  D.251848 = std::__relocate_a<return_type*, return_type*, std::allocator<return_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.251848;

}



;; Function std::__relocate_a<return_type*, return_type*, std::allocator<return_type> > (_ZSt12__relocate_aIP11return_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10620, decl_uid=224655, cgraph_uid=7252, symbol_order=8049)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct return_type * std::__relocate_a<return_type*, return_type*, std::allocator<return_type> > (struct return_type * __first, struct return_type * __last, struct return_type * __result, struct allocator & __alloc)
{
  struct return_type * D.251850;

  <bb 2> :
  _1 = std::__niter_base<return_type*> (__result);
  _2 = std::__niter_base<return_type*> (__last);
  _3 = std::__niter_base<return_type*> (__first);
  D.251850 = std::__relocate_a_1<return_type*, return_type*, std::allocator<return_type> > (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.251850;

}



;; Function std::__relocate_a_1<return_type*, return_type*, std::allocator<return_type> > (_ZSt14__relocate_a_1IP11return_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10877, decl_uid=224806, cgraph_uid=7509, symbol_order=8308)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct return_type * std::__relocate_a_1<return_type*, return_type*, std::allocator<return_type> > (struct return_type * __first, struct return_type * __last, struct return_type * __result, struct allocator & __alloc)
{
  struct return_type * __cur;
  struct return_type * D.251852;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<return_type> (__first);
  _2 = std::__addressof<return_type> (__cur);
  std::__relocate_object_a<return_type, return_type, std::allocator<return_type> > (_2, _1, __alloc);
  __first = __first + 24;
  __cur = __cur + 24;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.251852 = __cur;

  <bb 6> :
<L3>:
  return D.251852;

}



;; Function std::__relocate_object_a<return_type, return_type, std::allocator<return_type> > (_ZSt19__relocate_object_aI11return_typeS0_SaIS0_EEvPT_PT0_RT1_, funcdef_no=10987, decl_uid=224835, cgraph_uid=7619, symbol_order=8418)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__relocate_object_a<return_type, return_type, std::allocator<return_type> > (struct return_type * restrict __dest, struct return_type * restrict __orig, struct allocator & __alloc)
{
  <bb 2> :
  _1 = std::move<return_type&> (__orig);
  std::allocator_traits<std::allocator<return_type> >::construct<return_type, return_type> (__alloc, __dest, _1);
  _2 = std::__addressof<return_type> (__orig);
  std::allocator_traits<std::allocator<return_type> >::destroy<return_type> (__alloc, _2);
  return;

}



;; Function std::move<return_type&> (_ZSt4moveIR11return_typeEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=11036, decl_uid=224847, cgraph_uid=7668, symbol_order=8467)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<return_type&> (struct return_type & __t)
{
  struct type & D.251854;

  <bb 2> :
  D.251854 = __t;

  <bb 3> :
<L0>:
  return D.251854;

}



;; Function std::allocator_traits<std::allocator<return_type> >::construct<return_type, return_type> (_ZNSt16allocator_traitsISaI11return_typeEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_, funcdef_no=11037, decl_uid=224849, cgraph_uid=7669, symbol_order=8468)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<return_type> >::construct<return_type, return_type> (struct allocator_type & __a, struct return_type * __p, struct return_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<return_type> (__args#0);
  __gnu_cxx::new_allocator<return_type>::construct<return_type, return_type> (__a, __p, _1);
  return;

}



;; Function std::forward<return_type> (_ZSt7forwardI11return_typeEOT_RNSt16remove_referenceIS1_E4typeE, funcdef_no=11058, decl_uid=247737, cgraph_uid=7690, symbol_order=8489)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct return_type & std::forward<return_type> (struct type & __t)
{
  struct return_type & D.251856;

  <bb 2> :
  D.251856 = __t;

  <bb 3> :
<L0>:
  return D.251856;

}



;; Function __gnu_cxx::new_allocator<return_type>::construct<return_type, return_type> (_ZN9__gnu_cxx13new_allocatorI11return_typeE9constructIS1_JS1_EEEvPT_DpOT0_, funcdef_no=11059, decl_uid=247739, cgraph_uid=7691, symbol_order=8490)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::construct<return_type, return_type> (struct new_allocator * const this, struct return_type * __p, struct return_type & __args#0)
{
  void * D.248178;
  void * D.248177;
  struct return_type * D.248179;

  <bb 2> :
  D.248179 = std::forward<return_type> (__args#0);
  D.248177 = __p;
  D.248178 = operator new (24, D.248177);
  MEM[(struct return_type *)D.248178] = *D.248179;
  return;

}



;; Function std::allocator_traits<std::allocator<return_type> >::destroy<return_type> (_ZNSt16allocator_traitsISaI11return_typeEE7destroyIS0_EEvRS1_PT_, funcdef_no=9429, decl_uid=224864, cgraph_uid=6061, symbol_order=6854)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<return_type> >::destroy<return_type> (struct allocator_type & __a, struct return_type * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<return_type>::destroy<return_type> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<return_type>::destroy<return_type> (_ZN9__gnu_cxx13new_allocatorI11return_typeE7destroyIS1_EEvPT_, funcdef_no=10105, decl_uid=236375, cgraph_uid=6737, symbol_order=7534)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<return_type>::destroy<return_type> (struct new_allocator * const this, struct return_type * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_return_array>::put (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7724, decl_uid=189598, cgraph_uid=4356, symbol_order=5145)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_return_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_return_array & v)
{
  bool D.251865;
  struct hash_entry * D.251864;
  unsigned int D.251863;
  bool ins;
  struct hash_entry * e;
  bool D.251861;
  void * D.213908;
  void * D.213907;

  <bb 2> :
  _1 = &this->m_table;
  D.251863 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::hash (k);
  _2 = D.251863;
  D.251864 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.251864;
  D.251865 = hash_map<tree_node*, function_return_array>::hash_entry::is_empty (e);
  ins = D.251865;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.213907 = &e->m_value;
  D.213908 = operator new (32, D.213907);
  function_return_array::function_return_array (D.213908, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_return_array::operator= (_4, v);

  <bb 5> :
  D.251861 = ~ins;

  <bb 6> :
<L3>:
  return D.251861;

  <bb 7> :
<L4>:
  operator delete (D.213908, D.213907);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8636, decl_uid=189756, cgraph_uid=5268, symbol_order=6061)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.251916;
  bool D.251915;
  bool D.251914;
  bool D.251913;
  bool D.251912;
  bool D.251911;
  struct value_type * D.251910;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.638;
  bool retval.637;
  bool retval.636;
  bool retval.635;
  bool retval.634;
  bool retval.633;
  struct value_type * D.251872;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 40;
  entry = _11 + _13;
  size = this->m_size;
  D.251911 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.633 = D.251911;
  if (retval.633 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.251912 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.634 = D.251912;
  if (retval.634 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 40;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.251913 = hash_map<tree_node*, function_return_array>::hash_entry::equal (entry, comparable);
  retval.635 = D.251913;
  if (retval.635 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  D.251872 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 40;
  entry = _24 + _26;
  D.251914 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.636 = D.251914;
  if (retval.636 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.251915 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.637 = D.251915;
  if (retval.637 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 40;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.251916 = hash_map<tree_node*, function_return_array>::hash_entry::equal (entry, comparable);
  retval.638 = D.251916;
  if (retval.638 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 40;
  D.251872 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.251872 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.251872 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 40;
  D.251872 = _37 + _39;

  <bb 27> :
<L37>:
  return D.251872;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9430, decl_uid=189837, cgraph_uid=6074, symbol_order=6867)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.251947;
  unsigned int D.251946;
  bool D.251945;
  bool D.251944;
  struct mem_alloc_description & D.251943;
  struct value_type * D.251942;
  unsigned int D.251941;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.236398;
  void * D.236397;
  struct hash_entry & D.236435;
  bool iftmp.642;
  bool retval.641;
  bool iftmp.640;
  bool retval.639;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 40;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.640 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.640 = 0;

  <bb 6> :
  retval.639 = iftmp.640;
  if (retval.639 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.251941 = hash_table_higher_prime_index (_5);
  nindex = D.251941;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.251942 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.251942;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.251944 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.251944;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.251945 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.251945;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.642 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.642 = 0;

  <bb 15> :
  retval.641 = iftmp.642;
  if (retval.641 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.251946 = hash_map<tree_node*, function_return_array>::hash_entry::hash (x);
  _16 = D.251946;
  D.251947 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.251947;
  D.236435 = std::move<hash_map<tree_node*, function_return_array>::hash_entry&> (x);
  D.236397 = q;
  D.236398 = operator new (40, D.236397);
  hash_map<tree_node*, function_return_array>::hash_entry::hash_entry (D.236398, D.236435);

  <bb 17> :
  p = p + 40;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10106, decl_uid=189732, cgraph_uid=6738, symbol_order=7535)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.251948;

  <bb 2> :
  D.251948 = this->m_size;

  <bb 3> :
<L0>:
  return D.251948;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10107, decl_uid=189734, cgraph_uid=6739, symbol_order=7536)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.251950;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.251950 = _1 - _2;

  <bb 3> :
<L0>:
  return D.251950;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10108, decl_uid=189834, cgraph_uid=6740, symbol_order=7537)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.643;
  bool D.251952;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.643 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.643 = 0;

  <bb 6> :
  D.251952 = iftmp.643;

  <bb 7> :
<L4>:
  return D.251952;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9241, decl_uid=189824, cgraph_uid=5873, symbol_order=6666)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.251974;
  struct value_type * D.251973;
  struct mem_alloc_description & D.251972;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.251970;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.251973 = xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_alloc (n);
  nentries = D.251973;
  goto <bb 6>; [INV]

  <bb 5> :
  D.251974 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_return_array>::hash_entry> (n);
  nentries = D.251974;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.251970 = nentries;

  <bb 9> :
<L14>:
  return D.251970;

}



;; Function xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=9977, decl_uid=218356, cgraph_uid=6609, symbol_order=7406)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.251977;
  struct hash_entry * D.251975;

  <bb 2> :
  D.251977 = xcalloc (count, 40);
  D.251975 = D.251977;

  <bb 3> :
<L0>:
  return D.251975;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_return_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=9978, decl_uid=234139, cgraph_uid=6610, symbol_order=7407)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_return_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.251984;
  struct hash_entry * D.251983;
  struct hash_entry * D.251981;
  bool retval.644;

  <bb 2> :
  retval.644 = need_finalization_p<hash_map<tree_node*, function_return_array>::hash_entry> ();
  if (retval.644 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 40;
  D.251983 = ggc_internal_cleared_alloc (_1, finalize, 40, c);
  D.251981 = D.251983;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 40;
  D.251984 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.251981 = D.251984;

  <bb 5> :
<L2>:
  return D.251981;

}



;; Function finalize<hash_map<tree_node*, function_return_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10510, decl_uid=241719, cgraph_uid=7145, symbol_order=7942)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_return_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_return_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10512, decl_uid=245222, cgraph_uid=7143, symbol_order=7940)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_return_array::~function_return_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_return_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10509, decl_uid=241718, cgraph_uid=7141, symbol_order=7938)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_return_array>::hash_entry> ()
{
  bool D.251985;

  <bb 2> :
  D.251985 = 1;

  <bb 3> :
<L0>:
  return D.251985;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10110, decl_uid=189657, cgraph_uid=6742, symbol_order=7539)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_return_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.251989;
  hashval_t D.251987;

  <bb 2> :
  _1 = &e->m_key;
  D.251989 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::hash (_1);
  D.251987 = D.251989;

  <bb 3> :
<L0>:
  return D.251987;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10109, decl_uid=189827, cgraph_uid=6741, symbol_order=7538)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.252002;
  bool D.252001;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.646;
  struct value_type * D.251993;
  bool retval.645;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 40;
  slot = _2 + _4;
  D.252001 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.645 = D.252001;
  if (retval.645 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.251993 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 40;
  slot = _8 + _10;
  D.252002 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.646 = D.252002;
  if (retval.646 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.251993 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.251993;

}



;; Function std::move<hash_map<tree_node*, function_return_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10111, decl_uid=236395, cgraph_uid=6743, symbol_order=7540)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_return_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.252003;

  <bb 2> :
  D.252003 = __t;

  <bb 3> :
<L0>:
  return D.252003;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9441, decl_uid=236420, cgraph_uid=6072, symbol_order=6865)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.236422)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.236422->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.236422->m_value;
  function_return_array::function_return_array (_2, _3);
  return;

}



;; Function function_return_array::function_return_array (_ZN21function_return_arrayC2EOS_, funcdef_no=9439, decl_uid=189949, cgraph_uid=6069, symbol_order=6862)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_return_array::function_return_array (struct function_return_array * const this, struct function_return_array & D.189951)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.189951->return_type_num;
  this->return_type_num = _1;
  _2 = D.189951->pthread_type_num;
  this->pthread_type_num = _2;
  _3 = &this->return_type_array;
  _4 = &D.189951->return_type_array;
  std::vector<return_type>::vector (_3, _4);
  return;

}



;; Function std::vector<return_type>::vector (_ZNSt6vectorI11return_typeSaIS0_EEC2EOS2_, funcdef_no=9437, decl_uid=174516, cgraph_uid=6066, symbol_order=6859)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<return_type>::vector (struct vector * const this, struct vector & D.174518)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.174559;
  _2 = &D.174518->D.174559;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (_ZNSt12_Vector_baseI11return_typeSaIS0_EEC2EOS2_, funcdef_no=9435, decl_uid=173984, cgraph_uid=6063, symbol_order=6856)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.173986)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.173986->_M_impl;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI11return_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10113, decl_uid=173890, cgraph_uid=6745, symbol_order=7542)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl&> (__x);
  std::allocator<return_type>::allocator (this, _1);
  _2 = &this->D.173904;
  _3 = std::move<std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.173904;
  std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI11return_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10621, decl_uid=242354, cgraph_uid=7253, symbol_order=8050)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.252005;

  <bb 2> :
  D.252005 = __t;

  <bb 3> :
<L0>:
  return D.252005;

}



;; Function std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI11return_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10623, decl_uid=173846, cgraph_uid=7255, symbol_order=8052)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<return_type, std::allocator<return_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8955, decl_uid=218358, cgraph_uid=5587, symbol_order=6380)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9443, decl_uid=189845, cgraph_uid=6075, symbol_order=6868)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_return_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10115, decl_uid=189669, cgraph_uid=6747, symbol_order=7544)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::mark_empty<hash_map<tree_node*, function_return_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::mark_empty<hash_map<tree_node*, function_return_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10625, decl_uid=242369, cgraph_uid=7257, symbol_order=8054)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::mark_empty<hash_map<tree_node*, function_return_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function dump_fucntion (_Z13dump_fucntionP11cgraph_nodeP3ptbP12gimple_array, funcdef_no=6355, decl_uid=187046, cgraph_uid=3331, symbol_order=4109)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;;
;; Loop 1
;;  header 11, latch 10
;;  depth 1, outer 0
;;  nodes: 11 10 6 8 9 7 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 11 }
;; 5 succs { 6 7 }
;; 6 succs { 10 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 5 12 }
;; 12 succs { 1 }
void dump_fucntion (struct cgraph_node * node, struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct cgraph_node * D.252021;
  struct function * D.252020;
  struct function * D.252019;
  bool D.252018;
  struct cgraph_node * D.252017;
  int fucntion_level;
  struct cgraph_edge * e;
  bool retval.650;
  bool retval.649;

  <bb 2> :
  if (node == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  stderr.647_1 = stderr;
  __builtin_fwrite ("=======node_fun: =========\n", 1, 27, stderr.647_1);

  <bb 4> :
  symtab.648_2 = symtab;
  D.252017 = symbol_table::first_defined_function (symtab.648_2);
  node = D.252017;
  goto <bb 11>; [INV]

  <bb 5> :
  _3 = node->D.97512.decl;
  D.252018 = gimple_has_body_p (_3);
  _4 = D.252018;
  retval.649 = ~_4;
  if (retval.649 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  // predicted unlikely by continue predictor.
  goto <bb 10>; [INV]

  <bb 7> :
  fucntion_level = 0;
  D.252019 = cgraph_node::get_fun (node);
  _5 = D.252019;
  push_cfun (_5);
  D.252020 = cgraph_node::get_fun (node);
  _6 = D.252020;
  _7 = _6->decl;
  retval.650 = _7 == 0B;
  if (retval.650 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  pop_cfun ();
  // predicted unlikely by continue predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  cfun.651_8 = cfun;
  _9 = &cfun.651_8->decl;
  std::vector<tree_node*>::push_back (&pathStack, _9);
  cfun.652_10 = cfun;
  _11 = cfun.652_10->decl;
  walk_function_path (_11, fucntion_level, ptable, user_tmp);
  std::vector<tree_node*>::pop_back (&pathStack);
  pop_cfun ();

  <bb 10> :
  symtab.653_12 = symtab;
  D.252021 = symbol_table::next_defined_function (symtab.653_12, node);
  node = D.252021;

  <bb 11> :
  if (node != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  stderr.654_13 = stderr;
  __builtin_fwrite ("fucntion collect path finsh\n", 1, 28, stderr.654_13);
  return;

}



;; Function collect_function_call (_Z21collect_function_callP6gimpleP11cgraph_nodeP15basic_block_def, funcdef_no=6356, decl_uid=187002, cgraph_uid=3335, symbol_order=4113)

Removing basic block 5
Removing basic block 13
Removing basic block 14
Removing basic block 15
Removing basic block 21
Removing basic block 22
Removing basic block 27
Removing basic block 57
Removing basic block 58
Removing basic block 59
Removing basic block 63
Removing basic block 83
Removing basic block 86
Removing basic block 104
Removing basic block 106
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93
;;
;; Loop 2
;;  header 49, latch 48
;;  depth 1, outer 0
;;  nodes: 49 48 46 47 43 44 45 42
;;
;; Loop 1
;;  header 18, latch 17
;;  depth 1, outer 0
;;  nodes: 18 17 13 16 14 15
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 92 }
;; 5 succs { 6 21 }
;; 6 succs { 7 12 }
;; 7 succs { 8 12 }
;; 8 succs { 9 12 }
;; 9 succs { 11 10 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 18 }
;; 13 succs { 14 17 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 13 19 }
;; 19 succs { 20 21 }
;; 20 succs { 92 }
;; 21 succs { 22 92 }
;; 22 succs { 23 92 }
;; 23 succs { 24 50 }
;; 24 succs { 25 38 }
;; 25 succs { 26 38 }
;; 26 succs { 27 38 }
;; 27 succs { 28 38 }
;; 28 succs { 29 38 }
;; 29 succs { 30 38 }
;; 30 succs { 31 38 }
;; 31 succs { 32 38 }
;; 32 succs { 33 38 }
;; 33 succs { 34 38 }
;; 34 succs { 35 38 }
;; 35 succs { 36 38 }
;; 36 succs { 37 38 }
;; 37 succs { 39 }
;; 38 succs { 39 }
;; 39 succs { 40 50 }
;; 40 succs { 41 50 }
;; 41 succs { 49 }
;; 42 succs { 43 44 }
;; 43 succs { 46 }
;; 44 succs { 45 46 }
;; 45 succs { 46 }
;; 46 succs { 47 48 }
;; 47 succs { 48 }
;; 48 succs { 49 }
;; 49 succs { 42 50 }
;; 50 succs { 52 51 }
;; 51 succs { 52 55 }
;; 52 succs { 54 53 }
;; 53 succs { 54 }
;; 54 succs { 91 }
;; 55 succs { 62 56 }
;; 56 succs { 62 57 }
;; 57 succs { 62 58 }
;; 58 succs { 62 59 }
;; 59 succs { 62 60 }
;; 60 succs { 62 61 }
;; 61 succs { 62 63 }
;; 62 succs { 64 }
;; 63 succs { 64 }
;; 64 succs { 65 66 }
;; 65 succs { 91 }
;; 66 succs { 67 68 }
;; 67 succs { 91 }
;; 68 succs { 69 84 }
;; 69 succs { 93 70 }
;; 70 succs { 93 71 }
;; 71 succs { 72 }
;; 72 succs { 93 73 }
;; 73 succs { 76 74 }
;; 74 succs { 93 75 }
;; 75 succs { 76 }
;; 76 succs { 93 77 }
;; 77 succs { 93 78 }
;; 78 succs { 79 82 }
;; 79 succs { 93 80 }
;; 80 succs { 93 81 }
;; 81 succs { 82 }
;; 82 succs { 93 83 }
;; 83 succs { 91 }
;; 84 succs { 85 87 }
;; 85 succs { 86 87 }
;; 86 succs { 88 }
;; 87 succs { 88 }
;; 88 succs { 89 91 }
;; 89 succs { 90 91 }
;; 90 succs { 91 }
;; 91 succs { 92 }
;; 92 succs { 1 }
;; 93 succs { }
void collect_function_call (struct gimple * gc, struct cgraph_node * node, struct basic_block_def * bb)
{
  union tree_node * D.252194;
  union tree_node * D.252193;
  union tree_node * D.252192;
  union tree_node * D.252191;
  long int D.252189;
  union tree_node * D.252188;
  union tree_node * D.252187;
  union tree_node * D.252186;
  struct pthread_attr_array * D.252185;
  struct pthread_attr_array * D.252184;
  union tree_node * D.252183;
  union tree_node * D.252182;
  union tree_node * D.252181;
  union tree_node * D.252180;
  const char * D.252179;
  union tree_node * D.252178;
  union tree_node * D.252177;
  union tree_node * D.252176;
  unsigned int D.252175;
  union tree_node * D.252174;
  union tree_node * D.252173;
  union tree_node * D.252172;
  union tree_node * D.252171;
  unsigned int D.252170;
  const char * D.252169;
  union tree_node * D.252168;
  const char * D.252167;
  union tree_node * D.252166;
  union tree_node * D.252165;
  const char * D.252164;
  union tree_node * D.252163;
  const char * D.252162;
  union tree_node * D.252161;
  union tree_node * D.252160;
  struct pthread_attr_array pthread_attr_array;
  union tree_node * getvardecl;
  union tree_node * second;
  int i;
  const char * name2;
  size_t found;
  int i;
  int find;
  const char * name;
  struct cgraph_node * node2;
  union tree_node * a;
  location_t loc;
  bool retval.697;
  bool iftmp.696;
  bool retval.695;
  bool retval.693;
  bool retval.690;
  bool retval.689;
  bool iftmp.683;
  bool retval.682;
  bool retval.680;
  bool retval.677;
  bool retval.673;
  bool retval.670;
  bool retval.669;
  bool iftmp.668;
  bool retval.667;
  bool retval.666;
  bool retval.665;
  bool retval.664;
  struct expanded_location D.194606;
  bool retval.662;
  struct expanded_location D.194396;
  struct expanded_location D.194394;
  bool retval.661;
  bool retval.659;
  bool retval.656;
  bool retval.655;

  <bb 2> :
  loc = gimple_location_safe (gc);
  retval.655 = is_gimple_call (gc);
  if (retval.655 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  D.252160 = gimple_call_fn (gc);
  _1 = D.252160;
  retval.656 = _1 == 0B;
  if (retval.656 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 92>; [INV]

  <bb 5> :
  vscode_extensionmod.657_2 = vscode_extensionmod;
  if (vscode_extensionmod.657_2 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 6> :
  find = 0;
  vscode_extensionIgonefreemod.658_3 = vscode_extensionIgonefreemod;
  if (vscode_extensionIgonefreemod.658_3 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 7> :
  retval.659 = is_gimple_call (gc);
  if (retval.659 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 8> :
  D.252161 = gimple_call_fn (gc);
  _4 = D.252161;
  D.252162 = get_name (_4);
  name = D.252162;
  if (name != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 9> :
  _5 = strcmp (name, "free");
  if (_5 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  _6 = strcmp (name, "xfree");
  if (_6 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  find = 1;
  stderr.660_7 = stderr;
  __builtin_fwrite ("set breakpoint free stmt igone\n", 1, 31, stderr.660_7);
  _8 = gimple_location_safe (gc);
  warning_at (_8, 0, "use location");

  <bb 12> :
  i = 0;
  goto <bb 18>; [INV]

  <bb 13> :
  D.194394 = expand_location (loc); [return slot optimization]
  _9 = D.194394.file;
  retval.661 = _9 != 0B;
  D.194394 = {CLOBBER};
  if (retval.661 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 14> :
  _10 = (long unsigned int) i;
  _11 = std::vector<breakpoint>::operator[] (&vbreakpoint, _10);
  _12 = &_11->name;
  D.194396 = expand_location (loc); [return slot optimization]
  _13 = D.194396.file;
  found = std::__cxx11::basic_string<char>::find (_12, _13, 0);
  D.194396 = {CLOBBER};
  if (found != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  _14 = (long unsigned int) i;
  _15 = std::vector<breakpoint>::operator[] (&vbreakpoint, _14);
  _16 = _15->line;
  D.194606 = expand_location (loc); [return slot optimization]
  _17 = D.194606.line;
  retval.662 = _16 == _17;
  D.194606 = {CLOBBER};
  if (retval.662 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  debug_gimple_stmt (gc);
  _18 = (long unsigned int) i;
  _19 = std::vector<breakpoint>::operator[] (&vbreakpoint, _18);
  _20 = _19->line;
  _21 = (long unsigned int) i;
  _22 = std::vector<breakpoint>::operator[] (&vbreakpoint, _21);
  _23 = &_22->name;
  _24 = std::__cxx11::basic_string<char>::c_str (_23);
  stderr.663_25 = stderr;
  fprintf (stderr.663_25, "set breakpoint %s %d\n", _24, _20);
  find = 1;

  <bb 17> :
  i = i + 1;

  <bb 18> :
  _26 = (long unsigned int) i;
  _27 = std::vector<breakpoint>::size (&vbreakpoint);
  retval.664 = _26 < _27;
  if (retval.664 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  if (find == 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 92>; [INV]

  <bb 21> :
  retval.665 = is_gimple_call (gc);
  if (retval.665 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 92>; [INV]

  <bb 22> :
  D.252163 = gimple_call_fn (gc);
  _28 = D.252163;
  D.252164 = get_name (_28);
  name = D.252164;
  if (name != 0B)
    goto <bb 23>; [INV]
  else
    goto <bb 92>; [INV]

  <bb 23> :
  D.252165 = gimple_call_fndecl (gc);
  _29 = D.252165;
  retval.666 = _29 != 0B;
  if (retval.666 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 24> :
  D.252166 = gimple_call_fndecl (gc);
  _30 = D.252166;
  D.252167 = get_name (_30);
  name2 = D.252167;
  _31 = strcmp (name2, "realloc");
  if (_31 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 25> :
  _32 = strcmp (name2, "malloc");
  if (_32 != 0)
    goto <bb 26>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 26> :
  D.252168 = gimple_call_fn (gc);
  _33 = D.252168;
  D.252169 = get_name (_33);
  _34 = D.252169;
  _35 = strcmp (_34, "calloc");
  if (_35 != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 27> :
  _36 = strcmp (name2, "xcalloc");
  if (_36 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 28> :
  _37 = strcmp (name2, "xmalloc");
  if (_37 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 29> :
  _38 = strcmp (name2, "strdup");
  if (_38 != 0)
    goto <bb 30>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 30> :
  _39 = strcmp (name2, "xstrdup");
  if (_39 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 31> :
  _40 = strcmp (name2, "free");
  if (_40 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 32> :
  _41 = strcmp (name2, "printf");
  if (_41 != 0)
    goto <bb 33>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 33> :
  _42 = strcmp (name2, "pthread_attr_setdetachstate");
  if (_42 != 0)
    goto <bb 34>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 34> :
  _43 = strcmp (name2, "pthread_create");
  if (_43 != 0)
    goto <bb 35>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 35> :
  _44 = strcmp (name2, "pthread_join");
  if (_44 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 36> :
  _45 = strcmp (name2, "pthread_attr_init");
  if (_45 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 37> :
  iftmp.668 = 1;
  goto <bb 39>; [INV]

  <bb 38> :
  iftmp.668 = 0;

  <bb 39> :
  retval.667 = iftmp.668;
  if (retval.667 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 40> :
  D.252170 = gimple_call_num_args (gc);
  _46 = D.252170;
  retval.669 = _46 != 0;
  if (retval.669 != 0)
    goto <bb 41>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 41> :
  i = 0;
  goto <bb 49>; [INV]

  <bb 42> :
  second = 0B;
  i.671_47 = (unsigned int) i;
  D.252171 = gimple_call_arg (gc, i.671_47);
  _48 = D.252171;
  _49 = _48->base.code;
  retval.670 = _49 == 153;
  if (retval.670 != 0)
    goto <bb 43>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 43> :
  i.672_50 = (unsigned int) i;
  D.252172 = gimple_call_arg (gc, i.672_50);
  second = D.252172;
  goto <bb 46>; [INV]

  <bb 44> :
  i.674_51 = (unsigned int) i;
  D.252173 = gimple_call_arg (gc, i.674_51);
  _52 = D.252173;
  _53 = _52->base.code;
  retval.673 = _53 == 131;
  if (retval.673 != 0)
    goto <bb 45>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 45> :
  i.675_54 = (unsigned int) i;
  D.252174 = gimple_call_arg (gc, i.675_54);
  _55 = D.252174;
  second = _55->exp.operands[0];

  <bb 46> :
  if (second != 0B)
    goto <bb 47>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 47> :
  ptable.676_56 = ptable;
  set_ptb (bb, ptable.676_56, second, loc, 0, gc, node);

  <bb 48> :
  i = i + 1;

  <bb 49> :
  D.252175 = gimple_call_num_args (gc);
  _57 = D.252175;
  i.678_58 = (unsigned int) i;
  retval.677 = _57 > i.678_58;
  if (retval.677 != 0)
    goto <bb 42>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 50> :
  _59 = strcmp (name, "free");
  if (_59 == 0)
    goto <bb 52>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 51> :
  _60 = strcmp (name, "xfree");
  if (_60 == 0)
    goto <bb 52>; [INV]
  else
    goto <bb 55>; [INV]

  <bb 52> :
  GIMPLE_FREE_COUNT.679_61 = GIMPLE_FREE_COUNT;
  _62 = GIMPLE_FREE_COUNT.679_61 + 1;
  GIMPLE_FREE_COUNT = _62;
  D.252176 = gimple_call_arg (gc, 0);
  _63 = D.252176;
  _64 = _63->base.code;
  retval.680 = _64 == 131;
  if (retval.680 != 0)
    goto <bb 54>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 53> :
  D.252177 = gimple_call_arg (gc, 0);
  _65 = D.252177;
  ftable.681_66 = ftable;
  set_ptb (bb, ftable.681_66, _65, loc, 0, gc, node);

  <bb 54> :
  goto <bb 91>; [INV]

  <bb 55> :
  _67 = strcmp (name, "realloc");
  if (_67 == 0)
    goto <bb 62>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 56> :
  _68 = strcmp (name, "malloc");
  if (_68 == 0)
    goto <bb 62>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 57> :
  D.252178 = gimple_call_fn (gc);
  _69 = D.252178;
  D.252179 = get_name (_69);
  _70 = D.252179;
  _71 = strcmp (_70, "calloc");
  if (_71 == 0)
    goto <bb 62>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 58> :
  _72 = strcmp (name, "xcalloc");
  if (_72 == 0)
    goto <bb 62>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 59> :
  _73 = strcmp (name, "xmalloc");
  if (_73 == 0)
    goto <bb 62>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 60> :
  _74 = strcmp (name, "strdup");
  if (_74 == 0)
    goto <bb 62>; [INV]
  else
    goto <bb 61>; [INV]

  <bb 61> :
  _75 = strcmp (name, "xstrdup");
  if (_75 == 0)
    goto <bb 62>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 62> :
  iftmp.683 = 1;
  goto <bb 64>; [INV]

  <bb 63> :
  iftmp.683 = 0;

  <bb 64> :
  retval.682 = iftmp.683;
  if (retval.682 != 0)
    goto <bb 65>; [INV]
  else
    goto <bb 66>; [INV]

  <bb 65> :
  GIMPLE_MALLOC_COUNT.684_76 = GIMPLE_MALLOC_COUNT;
  _77 = GIMPLE_MALLOC_COUNT.684_76 + 1;
  GIMPLE_MALLOC_COUNT = _77;
  D.252180 = gimple_call_lhs (gc);
  _78 = D.252180;
  ptable.685_79 = ptable;
  set_ptb (bb, ptable.685_79, _78, loc, 0, gc, node);
  goto <bb 91>; [INV]

  <bb 66> :
  _80 = strcmp (name, "pthread_create");
  if (_80 == 0)
    goto <bb 67>; [INV]
  else
    goto <bb 68>; [INV]

  <bb 67> :
  IS_PTHREAD_FUCNTION.686_81 = IS_PTHREAD_FUCNTION;
  IS_PTHREAD_FUCNTION.687_82 = (int) IS_PTHREAD_FUCNTION.686_81;
  D.252181 = gimple_call_arg (gc, 0);
  _83 = D.252181;
  ptable.688_84 = ptable;
  set_ptb (bb, ptable.688_84, _83, loc, IS_PTHREAD_FUCNTION.687_82, gc, node);
  goto <bb 91>; [INV]

  <bb 68> :
  _85 = strcmp (name, "pthread_attr_setdetachstate");
  if (_85 == 0)
    goto <bb 69>; [INV]
  else
    goto <bb 84>; [INV]

  <bb 69> :
  D.252182 = gimple_call_arg (gc, 0);

  <bb 70> :
  _86 = D.252182;
  _87 = _86->exp.operands[0];
  getvardecl = _87;
  D.252183 = gimple_call_arg (gc, 1);

  <bb 71> :
  _88 = D.252183;
  _89 = _88->base.code;
  retval.689 = _89 == 26;

  <bb 72> :
  pthread_attr_array::pthread_attr_array (&pthread_attr_array);
  pthread_attr_setdetachstates.691_90 = pthread_attr_setdetachstates;
  D.252184 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.691_90, &getvardecl);

  <bb 73> :
  _91 = D.252184;
  retval.690 = _91 == 0B;
  if (retval.690 != 0)
    goto <bb 76>; [INV]
  else
    goto <bb 74>; [INV]

  <bb 74> :
  pthread_attr_setdetachstates.692_92 = pthread_attr_setdetachstates;
  D.252185 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.692_92, &getvardecl);

  <bb 75> :
  _93 = D.252185;
  pthread_attr_array = MEM[(const struct pthread_attr_array &)_93];

  <bb 76> :
  pthread_attr_array.stmt = gc;
  D.252186 = gimple_call_arg (gc, 0);

  <bb 77> :
  _94 = D.252186;
  pthread_attr_array.attr_tree = _94;
  D.252187 = gimple_call_arg (gc, 1);

  <bb 78> :
  _95 = D.252187;
  _96 = _95->base.code;
  retval.693 = _96 == 26;
  if (retval.693 != 0)
    goto <bb 79>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 79> :
  D.252188 = gimple_call_arg (gc, 1);

  <bb 80> :
  _97 = D.252188;
  D.252189 = int_cst_value (_97);

  <bb 81> :
  _98 = D.252189;
  _99 = (int) _98;
  pthread_attr_array.attr_type_num = _99;

  <bb 82> :
  pthread_attr_setdetachstates.694_100 = pthread_attr_setdetachstates;
  hash_map<tree_node*, pthread_attr_array>::put (pthread_attr_setdetachstates.694_100, &getvardecl, &pthread_attr_array);

  <bb 83> :
  getvardecl = {CLOBBER};
  pthread_attr_array = {CLOBBER};
  goto <bb 91>; [INV]

  <bb 84> :
  D.252191 = gimple_call_lhs (gc);
  _101 = D.252191;
  if (_101 != 0B)
    goto <bb 85>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 85> :
  D.252192 = gimple_call_fn (gc);
  _102 = D.252192;
  if (_102 != 0B)
    goto <bb 86>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 86> :
  iftmp.696 = 1;
  goto <bb 88>; [INV]

  <bb 87> :
  iftmp.696 = 0;

  <bb 88> :
  retval.695 = iftmp.696;
  if (retval.695 != 0)
    goto <bb 89>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 89> :
  D.252193 = gimple_call_lhs (gc);
  _103 = D.252193;
  _104 = _103->base.code;
  retval.697 = _104 == 153;
  if (retval.697 != 0)
    goto <bb 90>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 90> :
  D.252194 = gimple_call_lhs (gc);
  _105 = D.252194;
  ptable.698_106 = ptable;
  set_ptb (bb, ptable.698_106, _105, loc, 0, gc, node);

  <bb 91> :

  <bb 92> :
<L120>:
  return;

  <bb 93> :
<L121>:
  getvardecl = {CLOBBER};
  pthread_attr_array = {CLOBBER};
  resx 4

}



;; Function std::vector<breakpoint>::operator[] (_ZNSt6vectorI10breakpointSaIS0_EEixEm, funcdef_no=7726, decl_uid=185889, cgraph_uid=4358, symbol_order=5147)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<breakpoint>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.252195;

  <bb 2> :
  _1 = this->D.186236._M_impl.D.185581._M_start;
  _2 = __n * 40;
  D.252195 = _1 + _2;

  <bb 3> :
<L0>:
  return D.252195;

}



;; Function std::vector<breakpoint>::size (_ZNKSt6vectorI10breakpointSaIS0_EE4sizeEv, funcdef_no=7725, decl_uid=185869, cgraph_uid=4357, symbol_order=5146)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<breakpoint>::size (const struct vector * const this)
{
  size_type D.252197;

  <bb 2> :
  _1 = this->D.186236._M_impl.D.185581._M_finish;
  _2 = this->D.186236._M_impl.D.185581._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 40;
  D.252197 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.252197;

}



;; Function gimple_call_fndecl (_ZL18gimple_call_fndeclPK6gimple, funcdef_no=2132, decl_uid=92888, cgraph_uid=1269, symbol_order=1429)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_fndecl (const struct gimple * gs)
{
  union tree_node * D.252202;
  const struct gcall * D.252201;
  const struct gcall * gc;
  union tree_node * D.252199;

  <bb 2> :
  D.252201 = GIMPLE_CHECK2<const gcall*> (gs);
  gc = D.252201;
  D.252202 = gimple_call_fndecl (gc);
  D.252199 = D.252202;

  <bb 3> :
<L0>:
  return D.252199;

}



;; Function gimple_call_fndecl (_ZL18gimple_call_fndeclPK5gcall, funcdef_no=2131, decl_uid=92885, cgraph_uid=1268, symbol_order=1428)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_call_fndecl (const struct gcall * gs)
{
  union tree_node * D.252205;
  union tree_node * D.252203;

  <bb 2> :
  _1 = gimple_call_fn (gs);
  D.252205 = gimple_call_addr_fndecl (_1);
  D.252203 = D.252205;

  <bb 3> :
<L0>:
  return D.252203;

}



;; Function gimple_call_addr_fndecl (_ZL23gimple_call_addr_fndeclPK9tree_node, funcdef_no=1909, decl_uid=89977, cgraph_uid=1048, symbol_order=1208)

Removing basic block 13
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;; 2 succs { 3 13 }
;; 3 succs { 4 13 }
;; 4 succs { 5 8 }
;; 5 succs { 6 8 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
union tree_node * gimple_call_addr_fndecl (const union tree_node * fn)
{
  bool D.252225;
  union tree_node * fndecl;
  union tree_node * D.252222;
  bool iftmp.700;
  bool retval.699;

  <bb 2> :
  if (fn != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 3> :
  _1 = fn->base.code;
  if (_1 == 131)
    goto <bb 4>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 4> :
  fndecl = fn->exp.operands[0];
  _2 = fndecl->base.code;
  if (_2 == 165)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  _3 = fndecl->exp.operands[0];
  _4 = _3->base.code;
  if (_4 == 131)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  _5 = fndecl->exp.operands[1];
  D.252225 = integer_zerop (_5);
  _6 = D.252225;
  if (_6 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  iftmp.700 = 1;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.700 = 0;

  <bb 9> :
  retval.699 = iftmp.700;
  if (retval.699 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _7 = fndecl->exp.operands[0];
  fndecl = _7->exp.operands[0];

  <bb 11> :
  _8 = fndecl->base.code;
  if (_8 == 33)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.252222 = fndecl;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 14>; [INV]

  <bb 13> :
  D.252222 = 0B;

  <bb 14> :
<L15>:
  return D.252222;

}



;; Function pthread_attr_array::pthread_attr_array (_ZN18pthread_attr_arrayC2Ev, funcdef_no=6358, decl_uid=194616, cgraph_uid=3333, symbol_order=4111)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void pthread_attr_array::pthread_attr_array (struct pthread_attr_array * const this)
{
  <bb 2> :
  this->attr_type_num = 0;
  return;

}



;; Function hash_map<tree_node*, pthread_attr_array>::get (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7728, decl_uid=194696, cgraph_uid=4360, symbol_order=5149)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct pthread_attr_array * hash_map<tree_node*, pthread_attr_array>::get (struct hash_map * const this, union tree_node * const & k)
{
  bool D.252234;
  struct hash_entry & D.252233;
  unsigned int D.252232;
  struct hash_entry & e;
  struct pthread_attr_array * iftmp.701;
  struct pthread_attr_array * D.252226;

  <bb 2> :
  _1 = &this->m_table;
  D.252232 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::hash (k);
  _2 = D.252232;
  D.252233 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.252233;
  D.252234 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (e);
  _3 = D.252234;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.701 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.701 = &e->m_value;

  <bb 5> :
  D.252226 = iftmp.701;

  <bb 6> :
<L3>:
  return D.252226;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE4hashERKS2_, funcdef_no=8638, decl_uid=194652, cgraph_uid=5270, symbol_order=6063)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::hash (union tree_node * const & h)
{
  hashval_t D.252235;

  <bb 2> :
  D.252235 = pointer_hash<tree_node>::hash (h);

  <bb 3> :
<L0>:
  return D.252235;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8639, decl_uid=194836, cgraph_uid=5271, symbol_order=6064)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash)
{
  bool D.252269;
  bool D.252268;
  bool D.252267;
  bool D.252266;
  bool D.252265;
  bool D.252264;
  struct value_type * D.252263;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.705;
  bool retval.704;
  struct value_type & D.252249;
  bool iftmp.703;
  bool retval.702;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 32;
  entry = _5 + _7;
  D.252264 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.252264;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.252265 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.252265;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.252266 = hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (entry, comparable);
  _11 = D.252266;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.703 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.703 = 0;

  <bb 8> :
  retval.702 = iftmp.703;
  if (retval.702 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.252249 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  entry = _17 + _19;
  D.252267 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.252267;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.252268 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.252268;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.252269 = hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (entry, comparable);
  _23 = D.252269;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.705 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.705 = 0;

  <bb 18> :
  retval.704 = iftmp.705;
  if (retval.704 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.252249 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.252249;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8960, decl_uid=194932, cgraph_uid=5592, symbol_order=6385)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.252272;
  bool D.252270;

  <bb 2> :
  D.252272 = hash_map<tree_node*, pthread_attr_array>::hash_entry::is_empty (v);
  D.252270 = D.252272;

  <bb 3> :
<L0>:
  return D.252270;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8642, decl_uid=194765, cgraph_uid=5274, symbol_order=6067)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, pthread_attr_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.252275;
  bool D.252273;

  <bb 2> :
  D.252275 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (e);
  D.252273 = D.252275;

  <bb 3> :
<L0>:
  return D.252273;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8961, decl_uid=194930, cgraph_uid=5593, symbol_order=6386)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.252278;
  bool D.252276;

  <bb 2> :
  D.252278 = hash_map<tree_node*, pthread_attr_array>::hash_entry::is_deleted (v);
  D.252276 = D.252278;

  <bb 3> :
<L0>:
  return D.252276;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9805, decl_uid=194760, cgraph_uid=6437, symbol_order=7230)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, pthread_attr_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.252281;
  bool D.252279;

  <bb 2> :
  D.252281 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_deleted<hash_map<tree_node*, pthread_attr_array>::hash_entry> (e);
  D.252279 = D.252281;

  <bb 3> :
<L0>:
  return D.252279;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_deleted<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10369, decl_uid=239686, cgraph_uid=7001, symbol_order=7798)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_deleted<hash_map<tree_node*, pthread_attr_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.252282;

  <bb 2> :
  _1 = entry->m_key;
  D.252282 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.252282;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9445, decl_uid=194753, cgraph_uid=6077, symbol_order=6870)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (const struct hash_entry & a, union tree_node * const & b)
{
  bool D.252286;
  bool D.252284;

  <bb 2> :
  _1 = &a->m_key;
  D.252286 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::equal_keys (_1, b);
  D.252284 = D.252286;

  <bb 3> :
<L0>:
  return D.252284;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE10equal_keysERKS2_S7_, funcdef_no=10118, decl_uid=194654, cgraph_uid=6750, symbol_order=7547)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::equal_keys (union tree_node * const & k1, union tree_node * const & k2)
{
  bool D.252287;

  <bb 2> :
  D.252287 = pointer_hash<tree_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.252287;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8640, decl_uid=213918, cgraph_uid=5272, symbol_order=6065)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::is_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.252289;

  <bb 2> :
  _1 = entry->m_key;
  D.252289 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.252289;

}



;; Function hash_map<tree_node*, pthread_attr_array>::put (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7729, decl_uid=194692, cgraph_uid=4361, symbol_order=5150)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
bool hash_map<tree_node*, pthread_attr_array>::put (struct hash_map * const this, union tree_node * const & k, const struct pthread_attr_array & v)
{
  bool D.252298;
  struct hash_entry * D.252297;
  unsigned int D.252296;
  bool ins;
  struct hash_entry * e;
  bool D.252294;
  void * D.213926;
  void * D.213925;

  <bb 2> :
  _1 = &this->m_table;
  D.252296 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::hash (k);
  _2 = D.252296;
  D.252297 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.252297;
  D.252298 = hash_map<tree_node*, pthread_attr_array>::hash_entry::is_empty (e);
  ins = D.252298;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.213925 = &e->m_value;
  D.213926 = operator new (24, D.213925);
  MEM[(struct pthread_attr_array *)D.213926] = *v;
  goto <bb 5>; [INV]

  <bb 4> :
  e->m_value = *v;

  <bb 5> :
  D.252294 = ~ins;

  <bb 6> :
<L3>:
  return D.252294;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8641, decl_uid=194847, cgraph_uid=5273, symbol_order=6066)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.252348;
  bool D.252347;
  bool D.252346;
  bool D.252345;
  bool D.252344;
  bool D.252343;
  struct value_type * D.252342;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.711;
  bool retval.710;
  bool retval.709;
  bool retval.708;
  bool retval.707;
  bool retval.706;
  struct value_type * D.252304;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 32;
  entry = _11 + _13;
  size = this->m_size;
  D.252343 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.706 = D.252343;
  if (retval.706 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.252344 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.707 = D.252344;
  if (retval.707 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 32;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.252345 = hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (entry, comparable);
  retval.708 = D.252345;
  if (retval.708 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  D.252304 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 32;
  entry = _24 + _26;
  D.252346 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.709 = D.252346;
  if (retval.709 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.252347 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.710 = D.252347;
  if (retval.710 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 32;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.252348 = hash_map<tree_node*, pthread_attr_array>::hash_entry::equal (entry, comparable);
  retval.711 = D.252348;
  if (retval.711 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 32;
  D.252304 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.252304 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.252304 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 32;
  D.252304 = _37 + _39;

  <bb 27> :
<L37>:
  return D.252304;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9446, decl_uid=194928, cgraph_uid=6078, symbol_order=6871)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.252379;
  unsigned int D.252378;
  bool D.252377;
  bool D.252376;
  struct mem_alloc_description & D.252375;
  struct value_type * D.252374;
  unsigned int D.252373;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.236475;
  void * D.236474;
  struct hash_entry * D.236500;
  bool iftmp.715;
  bool retval.714;
  bool iftmp.713;
  bool retval.712;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 32;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.713 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.713 = 0;

  <bb 6> :
  retval.712 = iftmp.713;
  if (retval.712 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.252373 = hash_table_higher_prime_index (_5);
  nindex = D.252373;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.252374 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.252374;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.252376 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.252376;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.252377 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.252377;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.715 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.715 = 0;

  <bb 15> :
  retval.714 = iftmp.715;
  if (retval.714 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.252378 = hash_map<tree_node*, pthread_attr_array>::hash_entry::hash (x);
  _16 = D.252378;
  D.252379 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.252379;
  D.236500 = std::move<hash_map<tree_node*, pthread_attr_array>::hash_entry&> (x);
  D.236474 = q;
  D.236475 = operator new (32, D.236474);
  MEM[(struct value_type *)D.236475] = *D.236500;

  <bb 17> :
  p = p + 32;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10119, decl_uid=194823, cgraph_uid=6751, symbol_order=7548)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.252380;

  <bb 2> :
  D.252380 = this->m_size;

  <bb 3> :
<L0>:
  return D.252380;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10120, decl_uid=194825, cgraph_uid=6752, symbol_order=7549)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.252382;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.252382 = _1 - _2;

  <bb 3> :
<L0>:
  return D.252382;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10121, decl_uid=194925, cgraph_uid=6753, symbol_order=7550)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.716;
  bool D.252384;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.716 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.716 = 0;

  <bb 6> :
  D.252384 = iftmp.716;

  <bb 7> :
<L4>:
  return D.252384;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9444, decl_uid=194915, cgraph_uid=6076, symbol_order=6869)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.252406;
  struct value_type * D.252405;
  struct mem_alloc_description & D.252404;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.252402;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.252405 = xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_alloc (n);
  nentries = D.252405;
  goto <bb 6>; [INV]

  <bb 5> :
  D.252406 = ggc_cleared_vec_alloc<hash_map<tree_node*, pthread_attr_array>::hash_entry> (n);
  nentries = D.252406;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.252402 = nentries;

  <bb 9> :
<L14>:
  return D.252402;

}



;; Function xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10116, decl_uid=218404, cgraph_uid=6748, symbol_order=7545)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.252409;
  struct hash_entry * D.252407;

  <bb 2> :
  D.252409 = xcalloc (count, 32);
  D.252407 = D.252409;

  <bb 3> :
<L0>:
  return D.252407;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10117, decl_uid=236445, cgraph_uid=6749, symbol_order=7546)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, pthread_attr_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.252416;
  struct hash_entry * D.252415;
  struct hash_entry * D.252413;
  bool retval.717;

  <bb 2> :
  retval.717 = need_finalization_p<hash_map<tree_node*, pthread_attr_array>::hash_entry> ();
  if (retval.717 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 32;
  D.252415 = ggc_internal_cleared_alloc (_1, finalize, 32, c);
  D.252413 = D.252415;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 32;
  D.252416 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.252413 = D.252416;

  <bb 5> :
<L2>:
  return D.252413;

}



;; Function finalize<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10627, decl_uid=242376, cgraph_uid=7259, symbol_order=8056)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, pthread_attr_array>::hash_entry> (void * p)
{
  <bb 2> :
  MEM[(struct hash_entry *)p] = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10626, decl_uid=242375, cgraph_uid=7258, symbol_order=8055)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, pthread_attr_array>::hash_entry> ()
{
  bool D.252417;

  <bb 2> :
  D.252417 = 0;

  <bb 3> :
<L0>:
  return D.252417;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10123, decl_uid=194751, cgraph_uid=6755, symbol_order=7552)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, pthread_attr_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.252421;
  hashval_t D.252419;

  <bb 2> :
  _1 = &e->m_key;
  D.252421 = simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::hash (_1);
  D.252419 = D.252421;

  <bb 3> :
<L0>:
  return D.252419;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10122, decl_uid=194918, cgraph_uid=6754, symbol_order=7551)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.252434;
  bool D.252433;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.719;
  struct value_type * D.252425;
  bool retval.718;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 32;
  slot = _2 + _4;
  D.252433 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.718 = D.252433;
  if (retval.718 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.252425 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 32;
  slot = _8 + _10;
  D.252434 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.719 = D.252434;
  if (retval.719 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.252425 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.252425;

}



;; Function std::move<hash_map<tree_node*, pthread_attr_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10124, decl_uid=236472, cgraph_uid=6756, symbol_order=7553)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, pthread_attr_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.252435;

  <bb 2> :
  D.252435 = __t;

  <bb 3> :
<L0>:
  return D.252435;

}



;; Function xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8963, decl_uid=218406, cgraph_uid=5595, symbol_order=6388)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9447, decl_uid=194936, cgraph_uid=6079, symbol_order=6872)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, pthread_attr_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10125, decl_uid=194763, cgraph_uid=6757, symbol_order=7554)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, pthread_attr_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::mark_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::mark_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10628, decl_uid=242402, cgraph_uid=7260, symbol_order=8057)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::mark_empty<hash_map<tree_node*, pthread_attr_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function collect_FunctionMapping_Assign (_Z30collect_FunctionMapping_AssignP6gimpleP11cgraph_nodeP15basic_block_defP3ptb, funcdef_no=6360, decl_uid=187007, cgraph_uid=3381, symbol_order=4159)

Removing basic block 14
Removing basic block 28
Removing basic block 48
Removing basic block 59
Removing basic block 60
Removing basic block 79
Removing basic block 94
Removing basic block 108
Removing basic block 126
Removing basic block 132
Removing basic block 133
Removing basic block 141
Removing basic block 154
Removing basic block 180
Removing basic block 200
Removing basic block 211
Removing basic block 213
Removing basic block 225
Removing basic block 230
Removing basic block 234
Removing basic block 235
Merging blocks 239 and 252
Removing basic block 244
Merging blocks 251 and 253
Removing basic block 257
Merging blocks 266 and 592
Removing basic block 279
Removing basic block 287
Removing basic block 299
Removing basic block 307
Removing basic block 312
Removing basic block 326
Removing basic block 342
Removing basic block 352
Removing basic block 357
Removing basic block 373
Removing basic block 393
Removing basic block 404
Removing basic block 405
Removing basic block 406
Removing basic block 408
Removing basic block 414
Removing basic block 423
Removing basic block 428
Removing basic block 449
Removing basic block 460
Removing basic block 461
Removing basic block 462
Removing basic block 463
Removing basic block 468
Removing basic block 488
Removing basic block 499
Removing basic block 500
Removing basic block 501
Removing basic block 502
Removing basic block 503
Removing basic block 504
Removing basic block 505
Removing basic block 511
Removing basic block 519
Removing basic block 521
Removing basic block 534
Removing basic block 545
Removing basic block 546
Removing basic block 547
Removing basic block 548
Removing basic block 553
Removing basic block 561
Removing basic block 567
Removing basic block 575
Removing basic block 582
Merging blocks 591 and 593
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 3
;;  header 122, latch 121
;;  depth 1, outer 0
;;  nodes: 122 121 119 120 118 114 117 115 116
;;
;; Loop 2
;;  header 209, latch 208
;;  depth 1, outer 0
;;  nodes: 209 208 202 207 204 203 206 205 201
;;
;; Loop 1
;;  header 176, latch 175
;;  depth 1, outer 0
;;  nodes: 176 175 157 174 173 172 171 170 166 169 168 167 165 164 161 163 162 159 158 160 155 156 154 153 152 151 177
;; 2 succs { 3 233 }
;; 3 succs { 4 5 }
;; 4 succs { 522 }
;; 5 succs { 6 522 }
;; 6 succs { 9 7 }
;; 7 succs { 9 8 }
;; 8 succs { 9 59 }
;; 9 succs { 10 22 }
;; 10 succs { 526 11 }
;; 11 succs { 523 12 }
;; 12 succs { 13 14 }
;; 13 succs { 523 17 }
;; 14 succs { 523 15 }
;; 15 succs { 523 16 }
;; 16 succs { 523 17 }
;; 17 succs { 523 18 }
;; 18 succs { 523 19 }
;; 19 succs { 523 20 }
;; 20 succs { 523 21 }
;; 21 succs { 58 }
;; 22 succs { 23 58 }
;; 23 succs { 536 24 }
;; 24 succs { 534 25 }
;; 25 succs { 26 27 }
;; 26 succs { 534 30 }
;; 27 succs { 534 28 }
;; 28 succs { 534 29 }
;; 29 succs { 534 30 }
;; 30 succs { 534 31 }
;; 31 succs { 534 32 }
;; 32 succs { 534 33 }
;; 33 succs { 534 34 }
;; 34 succs { 35 57 }
;; 35 succs { 531 36 }
;; 36 succs { 37 56 }
;; 37 succs { 38 56 }
;; 38 succs { 531 39 }
;; 39 succs { 40 56 }
;; 40 succs { 530 41 }
;; 41 succs { 530 42 }
;; 42 succs { 530 43 }
;; 43 succs { 527 44 }
;; 44 succs { 45 46 }
;; 45 succs { 530 50 }
;; 46 succs { 530 47 }
;; 47 succs { 528 48 }
;; 48 succs { 528 49 }
;; 49 succs { 530 50 }
;; 50 succs { 530 51 }
;; 51 succs { 530 52 }
;; 52 succs { 530 53 }
;; 53 succs { 530 54 }
;; 54 succs { 529 55 }
;; 55 succs { 56 }
;; 56 succs { 57 }
;; 57 succs { 58 }
;; 58 succs { 232 }
;; 59 succs { 60 68 }
;; 60 succs { 539 61 }
;; 61 succs { 62 67 }
;; 62 succs { 537 63 }
;; 63 succs { 537 64 }
;; 64 succs { 537 65 }
;; 65 succs { 537 66 }
;; 66 succs { 67 }
;; 67 succs { 232 }
;; 68 succs { 70 69 }
;; 69 succs { 70 81 }
;; 70 succs { 541 71 }
;; 71 succs { 541 72 }
;; 72 succs { 73 74 }
;; 73 succs { 541 76 }
;; 74 succs { 541 75 }
;; 75 succs { 541 76 }
;; 76 succs { 541 77 }
;; 77 succs { 541 78 }
;; 78 succs { 541 79 }
;; 79 succs { 541 80 }
;; 80 succs { 232 }
;; 81 succs { 82 125 }
;; 82 succs { 547 83 }
;; 83 succs { 547 84 }
;; 84 succs { 545 85 }
;; 85 succs { 545 86 }
;; 86 succs { 87 88 }
;; 87 succs { 545 91 }
;; 88 succs { 545 89 }
;; 89 succs { 545 90 }
;; 90 succs { 545 91 }
;; 91 succs { 545 92 }
;; 92 succs { 545 93 }
;; 93 succs { 545 94 }
;; 94 succs { 545 95 }
;; 95 succs { 545 96 }
;; 96 succs { 97 124 }
;; 97 succs { 544 98 }
;; 98 succs { 544 99 }
;; 99 succs { 100 101 }
;; 100 succs { 544 104 }
;; 101 succs { 544 102 }
;; 102 succs { 544 103 }
;; 103 succs { 544 104 }
;; 104 succs { 544 105 }
;; 105 succs { 544 106 }
;; 106 succs { 544 107 }
;; 107 succs { 544 108 }
;; 108 succs { 109 123 }
;; 109 succs { 110 123 }
;; 110 succs { 111 112 }
;; 111 succs { 113 }
;; 112 succs { 113 }
;; 113 succs { 122 }
;; 114 succs { 115 118 }
;; 115 succs { 116 118 }
;; 116 succs { 544 117 }
;; 117 succs { 118 }
;; 118 succs { 119 120 }
;; 119 succs { 121 }
;; 120 succs { 121 }
;; 121 succs { 122 }
;; 122 succs { 114 123 }
;; 123 succs { 124 }
;; 124 succs { 232 }
;; 125 succs { 126 137 }
;; 126 succs { 550 127 }
;; 127 succs { 548 128 }
;; 128 succs { 129 130 }
;; 129 succs { 548 133 }
;; 130 succs { 548 131 }
;; 131 succs { 548 132 }
;; 132 succs { 548 133 }
;; 133 succs { 548 134 }
;; 134 succs { 548 135 }
;; 135 succs { 548 136 }
;; 136 succs { 232 }
;; 137 succs { 138 149 }
;; 138 succs { 553 139 }
;; 139 succs { 551 140 }
;; 140 succs { 141 142 }
;; 141 succs { 551 145 }
;; 142 succs { 551 143 }
;; 143 succs { 551 144 }
;; 144 succs { 551 145 }
;; 145 succs { 551 146 }
;; 146 succs { 551 147 }
;; 147 succs { 551 148 }
;; 148 succs { 232 }
;; 149 succs { 566 150 }
;; 150 succs { 176 }
;; 151 succs { 557 152 }
;; 152 succs { 155 153 }
;; 153 succs { 557 154 }
;; 154 succs { 155 156 }
;; 155 succs { 157 }
;; 156 succs { 157 }
;; 157 succs { 158 175 }
;; 158 succs { 556 159 }
;; 159 succs { 160 162 }
;; 160 succs { 556 161 }
;; 161 succs { 164 }
;; 162 succs { 556 163 }
;; 163 succs { 164 }
;; 164 succs { 554 165 }
;; 165 succs { 166 167 }
;; 166 succs { 554 170 }
;; 167 succs { 554 168 }
;; 168 succs { 554 169 }
;; 169 succs { 554 170 }
;; 170 succs { 554 171 }
;; 171 succs { 554 172 }
;; 172 succs { 554 173 }
;; 173 succs { 554 174 }
;; 174 succs { 175 }
;; 175 succs { 176 }
;; 176 succs { 566 177 }
;; 177 succs { 151 178 }
;; 178 succs { 566 179 }
;; 179 succs { 180 197 }
;; 180 succs { 566 181 }
;; 181 succs { 182 197 }
;; 182 succs { 560 183 }
;; 183 succs { 558 184 }
;; 184 succs { 185 186 }
;; 185 succs { 560 190 }
;; 186 succs { 560 187 }
;; 187 succs { 559 188 }
;; 188 succs { 559 189 }
;; 189 succs { 560 190 }
;; 190 succs { 560 191 }
;; 191 succs { 560 192 }
;; 192 succs { 560 193 }
;; 193 succs { 560 194 }
;; 194 succs { 195 196 }
;; 195 succs { 560 196 }
;; 196 succs { 197 }
;; 197 succs { 566 198 }
;; 198 succs { 199 215 }
;; 199 succs { 200 212 }
;; 200 succs { 209 }
;; 201 succs { 566 202 }
;; 202 succs { 203 208 }
;; 203 succs { 566 204 }
;; 204 succs { 205 208 }
;; 205 succs { 566 206 }
;; 206 succs { 566 207 }
;; 207 succs { 208 }
;; 208 succs { 209 }
;; 209 succs { 201 210 }
;; 210 succs { 211 212 }
;; 211 succs { 231 }
;; 212 succs { 566 213 }
;; 213 succs { 566 214 }
;; 214 succs { 215 }
;; 215 succs { 216 230 }
;; 216 succs { 565 217 }
;; 217 succs { 218 219 }
;; 218 succs { 231 }
;; 219 succs { 565 220 }
;; 220 succs { 563 221 }
;; 221 succs { 222 223 }
;; 222 succs { 563 226 }
;; 223 succs { 563 224 }
;; 224 succs { 563 225 }
;; 225 succs { 563 226 }
;; 226 succs { 563 227 }
;; 227 succs { 563 228 }
;; 228 succs { 563 229 }
;; 229 succs { 230 }
;; 230 succs { 232 }
;; 231 succs { 522 }
;; 232 succs { 522 }
;; 233 succs { 234 522 }
;; 234 succs { 638 235 }
;; 235 succs { 238 236 }
;; 236 succs { 638 237 }
;; 237 succs { 238 239 }
;; 238 succs { 240 }
;; 239 succs { 240 }
;; 240 succs { 241 242 }
;; 241 succs { 522 }
;; 242 succs { 638 243 }
;; 243 succs { 638 244 }
;; 244 succs { 245 262 }
;; 245 succs { 246 248 }
;; 246 succs { 247 248 }
;; 247 succs { 249 }
;; 248 succs { 249 }
;; 249 succs { 250 261 }
;; 250 succs { 251 261 }
;; 251 succs { 567 252 }
;; 252 succs { 253 254 }
;; 253 succs { 567 257 }
;; 254 succs { 567 255 }
;; 255 succs { 567 256 }
;; 256 succs { 567 257 }
;; 257 succs { 567 258 }
;; 258 succs { 567 259 }
;; 259 succs { 567 260 }
;; 260 succs { 261 }
;; 261 succs { 262 }
;; 262 succs { 263 305 }
;; 263 succs { 264 266 }
;; 264 succs { 265 266 }
;; 265 succs { 267 }
;; 266 succs { 267 }
;; 267 succs { 268 279 }
;; 268 succs { 269 279 }
;; 269 succs { 571 270 }
;; 270 succs { 271 272 }
;; 271 succs { 571 275 }
;; 272 succs { 571 273 }
;; 273 succs { 571 274 }
;; 274 succs { 571 275 }
;; 275 succs { 571 276 }
;; 276 succs { 571 277 }
;; 277 succs { 571 278 }
;; 278 succs { 279 }
;; 279 succs { 280 292 }
;; 280 succs { 574 281 }
;; 281 succs { 282 283 }
;; 282 succs { 574 286 }
;; 283 succs { 574 284 }
;; 284 succs { 574 285 }
;; 285 succs { 574 286 }
;; 286 succs { 574 287 }
;; 287 succs { 574 288 }
;; 288 succs { 574 289 }
;; 289 succs { 574 290 }
;; 290 succs { 574 291 }
;; 291 succs { 292 }
;; 292 succs { 293 304 }
;; 293 succs { 577 294 }
;; 294 succs { 295 296 }
;; 295 succs { 577 299 }
;; 296 succs { 577 297 }
;; 297 succs { 577 298 }
;; 298 succs { 577 299 }
;; 299 succs { 577 300 }
;; 300 succs { 577 301 }
;; 301 succs { 577 302 }
;; 302 succs { 577 303 }
;; 303 succs { 304 }
;; 304 succs { 305 }
;; 305 succs { 306 462 }
;; 306 succs { 307 320 }
;; 307 succs { 308 333 }
;; 308 succs { 581 309 }
;; 309 succs { 310 311 }
;; 310 succs { 581 314 }
;; 311 succs { 581 312 }
;; 312 succs { 581 313 }
;; 313 succs { 581 314 }
;; 314 succs { 581 315 }
;; 315 succs { 581 316 }
;; 316 succs { 581 317 }
;; 317 succs { 581 318 }
;; 318 succs { 581 319 }
;; 319 succs { 333 }
;; 320 succs { 321 333 }
;; 321 succs { 584 322 }
;; 322 succs { 323 324 }
;; 323 succs { 584 327 }
;; 324 succs { 584 325 }
;; 325 succs { 584 326 }
;; 326 succs { 584 327 }
;; 327 succs { 584 328 }
;; 328 succs { 584 329 }
;; 329 succs { 584 330 }
;; 330 succs { 584 331 }
;; 331 succs { 584 332 }
;; 332 succs { 333 }
;; 333 succs { 334 369 }
;; 334 succs { 638 335 }
;; 335 succs { 336 347 }
;; 336 succs { 587 337 }
;; 337 succs { 338 339 }
;; 338 succs { 587 342 }
;; 339 succs { 587 340 }
;; 340 succs { 587 341 }
;; 341 succs { 587 342 }
;; 342 succs { 587 343 }
;; 343 succs { 587 344 }
;; 344 succs { 587 345 }
;; 345 succs { 587 346 }
;; 346 succs { 347 }
;; 347 succs { 348 369 }
;; 348 succs { 596 349 }
;; 349 succs { 350 368 }
;; 350 succs { 351 368 }
;; 351 succs { 352 368 }
;; 352 succs { 594 353 }
;; 353 succs { 354 368 }
;; 354 succs { 593 355 }
;; 355 succs { 590 356 }
;; 356 succs { 357 358 }
;; 357 succs { 593 362 }
;; 358 succs { 593 359 }
;; 359 succs { 591 360 }
;; 360 succs { 591 361 }
;; 361 succs { 593 362 }
;; 362 succs { 593 363 }
;; 363 succs { 593 364 }
;; 364 succs { 593 365 }
;; 365 succs { 593 366 }
;; 366 succs { 592 367 }
;; 367 succs { 368 }
;; 368 succs { 369 }
;; 369 succs { 370 382 }
;; 370 succs { 371 382 }
;; 371 succs { 597 372 }
;; 372 succs { 373 374 }
;; 373 succs { 597 377 }
;; 374 succs { 597 375 }
;; 375 succs { 597 376 }
;; 376 succs { 597 377 }
;; 377 succs { 597 378 }
;; 378 succs { 597 379 }
;; 379 succs { 597 380 }
;; 380 succs { 597 381 }
;; 381 succs { 382 }
;; 382 succs { 383 394 }
;; 383 succs { 600 384 }
;; 384 succs { 385 386 }
;; 385 succs { 600 389 }
;; 386 succs { 600 387 }
;; 387 succs { 600 388 }
;; 388 succs { 600 389 }
;; 389 succs { 600 390 }
;; 390 succs { 600 391 }
;; 391 succs { 600 392 }
;; 392 succs { 600 393 }
;; 393 succs { 521 }
;; 394 succs { 395 521 }
;; 395 succs { 396 449 }
;; 396 succs { 397 416 }
;; 397 succs { 398 449 }
;; 398 succs { 399 449 }
;; 399 succs { 400 449 }
;; 400 succs { 621 401 }
;; 401 succs { 402 449 }
;; 402 succs { 606 403 }
;; 403 succs { 603 404 }
;; 404 succs { 405 406 }
;; 405 succs { 606 410 }
;; 406 succs { 606 407 }
;; 407 succs { 604 408 }
;; 408 succs { 604 409 }
;; 409 succs { 606 410 }
;; 410 succs { 606 411 }
;; 411 succs { 606 412 }
;; 412 succs { 606 413 }
;; 413 succs { 606 414 }
;; 414 succs { 605 415 }
;; 415 succs { 449 }
;; 416 succs { 417 427 }
;; 417 succs { 609 418 }
;; 418 succs { 419 420 }
;; 419 succs { 609 423 }
;; 420 succs { 609 421 }
;; 421 succs { 609 422 }
;; 422 succs { 609 423 }
;; 423 succs { 609 424 }
;; 424 succs { 609 425 }
;; 425 succs { 609 426 }
;; 426 succs { 449 }
;; 427 succs { 428 449 }
;; 428 succs { 429 449 }
;; 429 succs { 430 449 }
;; 430 succs { 431 449 }
;; 431 succs { 432 449 }
;; 432 succs { 433 449 }
;; 433 succs { 621 434 }
;; 434 succs { 435 449 }
;; 435 succs { 615 436 }
;; 436 succs { 612 437 }
;; 437 succs { 438 439 }
;; 438 succs { 615 443 }
;; 439 succs { 615 440 }
;; 440 succs { 613 441 }
;; 441 succs { 613 442 }
;; 442 succs { 615 443 }
;; 443 succs { 615 444 }
;; 444 succs { 615 445 }
;; 445 succs { 615 446 }
;; 446 succs { 615 447 }
;; 447 succs { 614 448 }
;; 448 succs { 449 }
;; 449 succs { 450 461 }
;; 450 succs { 451 461 }
;; 451 succs { 618 452 }
;; 452 succs { 453 454 }
;; 453 succs { 618 457 }
;; 454 succs { 618 455 }
;; 455 succs { 618 456 }
;; 456 succs { 618 457 }
;; 457 succs { 618 458 }
;; 458 succs { 618 459 }
;; 459 succs { 618 460 }
;; 460 succs { 461 }
;; 461 succs { 521 }
;; 462 succs { 463 508 }
;; 463 succs { 464 495 }
;; 464 succs { 465 484 }
;; 465 succs { 466 495 }
;; 466 succs { 467 495 }
;; 467 succs { 468 495 }
;; 468 succs { 634 469 }
;; 469 succs { 470 495 }
;; 470 succs { 625 471 }
;; 471 succs { 622 472 }
;; 472 succs { 473 474 }
;; 473 succs { 625 478 }
;; 474 succs { 625 475 }
;; 475 succs { 623 476 }
;; 476 succs { 623 477 }
;; 477 succs { 625 478 }
;; 478 succs { 625 479 }
;; 479 succs { 625 480 }
;; 480 succs { 625 481 }
;; 481 succs { 625 482 }
;; 482 succs { 624 483 }
;; 483 succs { 495 }
;; 484 succs { 485 495 }
;; 485 succs { 628 486 }
;; 486 succs { 487 488 }
;; 487 succs { 628 491 }
;; 488 succs { 628 489 }
;; 489 succs { 628 490 }
;; 490 succs { 628 491 }
;; 491 succs { 628 492 }
;; 492 succs { 628 493 }
;; 493 succs { 628 494 }
;; 494 succs { 495 }
;; 495 succs { 496 507 }
;; 496 succs { 497 507 }
;; 497 succs { 631 498 }
;; 498 succs { 499 500 }
;; 499 succs { 631 503 }
;; 500 succs { 631 501 }
;; 501 succs { 631 502 }
;; 502 succs { 631 503 }
;; 503 succs { 631 504 }
;; 504 succs { 631 505 }
;; 505 succs { 631 506 }
;; 506 succs { 507 }
;; 507 succs { 521 }
;; 508 succs { 509 521 }
;; 509 succs { 637 510 }
;; 510 succs { 635 511 }
;; 511 succs { 512 513 }
;; 512 succs { 635 516 }
;; 513 succs { 635 514 }
;; 514 succs { 635 515 }
;; 515 succs { 635 516 }
;; 516 succs { 635 517 }
;; 517 succs { 635 518 }
;; 518 succs { 635 519 }
;; 519 succs { 635 520 }
;; 520 succs { 521 }
;; 521 succs { 522 }
;; 522 succs { 1 }
;; 523 succs { 524 }
;; 524 succs { 525 }
;; 525 succs { 526 }
;; 526 succs { }
;; 527 succs { 530 }
;; 528 succs { 530 }
;; 529 succs { 530 }
;; 530 succs { 531 }
;; 531 succs { 532 }
;; 532 succs { 533 }
;; 533 succs { 534 }
;; 534 succs { 535 }
;; 535 succs { 536 }
;; 536 succs { }
;; 537 succs { 538 }
;; 538 succs { 539 }
;; 539 succs { 540 }
;; 540 succs { }
;; 541 succs { 542 }
;; 542 succs { 543 }
;; 543 succs { }
;; 544 succs { 545 }
;; 545 succs { 546 }
;; 546 succs { 547 }
;; 547 succs { }
;; 548 succs { 549 }
;; 549 succs { 550 }
;; 550 succs { }
;; 551 succs { 552 }
;; 552 succs { 553 }
;; 553 succs { }
;; 554 succs { 555 }
;; 555 succs { 556 }
;; 556 succs { 557 }
;; 557 succs { 566 }
;; 558 succs { 560 }
;; 559 succs { 560 }
;; 560 succs { 561 }
;; 561 succs { 562 }
;; 562 succs { 566 }
;; 563 succs { 564 }
;; 564 succs { 565 }
;; 565 succs { 566 }
;; 566 succs { }
;; 567 succs { 568 }
;; 568 succs { 569 }
;; 569 succs { 570 }
;; 570 succs { 638 }
;; 571 succs { 572 }
;; 572 succs { 573 }
;; 573 succs { 580 }
;; 574 succs { 575 }
;; 575 succs { 576 }
;; 576 succs { 580 }
;; 577 succs { 578 }
;; 578 succs { 579 }
;; 579 succs { 580 }
;; 580 succs { 638 }
;; 581 succs { 582 }
;; 582 succs { 583 }
;; 583 succs { 638 }
;; 584 succs { 585 }
;; 585 succs { 586 }
;; 586 succs { 638 }
;; 587 succs { 588 }
;; 588 succs { 589 }
;; 589 succs { 638 }
;; 590 succs { 593 }
;; 591 succs { 593 }
;; 592 succs { 593 }
;; 593 succs { 594 }
;; 594 succs { 595 }
;; 595 succs { 596 }
;; 596 succs { 638 }
;; 597 succs { 598 }
;; 598 succs { 599 }
;; 599 succs { 638 }
;; 600 succs { 601 }
;; 601 succs { 602 }
;; 602 succs { 638 }
;; 603 succs { 606 }
;; 604 succs { 606 }
;; 605 succs { 606 }
;; 606 succs { 607 }
;; 607 succs { 608 }
;; 608 succs { 621 }
;; 609 succs { 610 }
;; 610 succs { 611 }
;; 611 succs { 621 }
;; 612 succs { 615 }
;; 613 succs { 615 }
;; 614 succs { 615 }
;; 615 succs { 616 }
;; 616 succs { 617 }
;; 617 succs { 621 }
;; 618 succs { 619 }
;; 619 succs { 620 }
;; 620 succs { 621 }
;; 621 succs { 638 }
;; 622 succs { 625 }
;; 623 succs { 625 }
;; 624 succs { 625 }
;; 625 succs { 626 }
;; 626 succs { 627 }
;; 627 succs { 634 }
;; 628 succs { 629 }
;; 629 succs { 630 }
;; 630 succs { 634 }
;; 631 succs { 632 }
;; 632 succs { 633 }
;; 633 succs { 634 }
;; 634 succs { 638 }
;; 635 succs { 636 }
;; 636 succs { 637 }
;; 637 succs { 638 }
;; 638 succs { }
void collect_FunctionMapping_Assign (struct gimple * gc, struct cgraph_node * node, struct basic_block_def * bb, struct ptb * ptable)
{
  struct function * D.253151;
  union tree_node * D.253150;
  struct function_assign_array * D.253149;
  struct function_assign_array * D.253148;
  struct function * D.253143;
  struct function_assign_array * D.253142;
  struct function_assign_array * D.253141;
  struct function * D.253137;
  struct function_assign_array * D.253136;
  struct function_assign_array * D.253135;
  union tree_node * D.253130;
  struct function * D.253129;
  union tree_node * D.253128;
  struct function_assign_array * D.253126;
  union tree_node * D.253125;
  struct function_assign_array * D.253123;
  union tree_node * D.253122;
  union tree_node * D.253121;
  struct function * D.253116;
  struct function_assign_array * D.253115;
  struct function_assign_array * D.253114;
  union tree_node * D.253109;
  struct function * D.253108;
  union tree_node * D.253107;
  struct function_assign_array * D.253105;
  union tree_node * D.253104;
  struct function_assign_array * D.253102;
  union tree_node * D.253101;
  union tree_node * D.253100;
  struct function * D.253096;
  struct function_assign_array * D.253095;
  struct function_assign_array * D.253094;
  union tree_node * D.253089;
  struct function * D.253088;
  union tree_node * D.253087;
  struct function_assign_array * D.253085;
  union tree_node * D.253084;
  struct function_assign_array * D.253082;
  union tree_node * D.253081;
  union tree_node * D.253080;
  struct function * D.253076;
  union tree_node * D.253075;
  struct function_assign_array * D.253074;
  struct function_assign_array * D.253073;
  struct function * D.253069;
  union tree_node * D.253068;
  struct function_assign_array * D.253067;
  struct function_assign_array * D.253066;
  union tree_node * D.253060;
  struct function * D.253059;
  union tree_node * D.253058;
  struct function_assign_array * D.253056;
  union tree_node * D.253055;
  struct function_assign_array * D.253053;
  union tree_node * D.253052;
  union tree_node * D.253051;
  union tree_node * D.253050;
  struct function * D.253046;
  union tree_node * D.253045;
  struct function_assign_array * D.253044;
  struct function_assign_array * D.253043;
  union tree_node * D.253042;
  struct function * D.253038;
  union tree_node * D.253037;
  union tree_node * D.253036;
  struct function_assign_array * D.253035;
  struct function_assign_array * D.253034;
  struct function * D.253030;
  union tree_node * D.253029;
  union tree_node * D.253028;
  struct function_assign_array * D.253027;
  struct function_assign_array * D.253026;
  struct function * D.253021;
  union tree_node * D.253020;
  struct function_assign_array * D.253019;
  struct function_assign_array * D.253018;
  struct function * D.253014;
  union tree_node * D.253013;
  union tree_node * D.253012;
  struct function_assign_array * D.253011;
  struct function_assign_array * D.253010;
  struct function * D.253006;
  struct function_assign_array * D.253005;
  struct function_assign_array * D.253004;
  struct function * D.252999;
  struct function_assign_array * D.252998;
  struct function_assign_array * D.252997;
  union tree_node * D.252996;
  union tree_node * D.252995;
  union tree_node * D.252994;
  union tree_node * D.252993;
  struct function * D.252984;
  struct function_return_array * D.252983;
  struct function_return_array * D.252982;
  struct function * D.252981;
  struct function_return_array * D.252980;
  const char * D.252979;
  union tree_node * D.252978;
  union tree_node * D.252977;
  union tree_node * D.252973;
  struct function * D.252972;
  union tree_node * D.252971;
  struct function_assign_array * D.252969;
  union tree_node * D.252968;
  struct function_assign_array * D.252966;
  union tree_node * D.252965;
  union tree_node * D.252964;
  unsigned int D.252963;
  unsigned int D.252962;
  struct function * D.252957;
  union tree_node * D.252956;
  struct function_assign_array * D.252955;
  struct function_assign_array * D.252954;
  union tree_node * D.252953;
  union tree_node * D.252952;
  union tree_node * D.252951;
  union tree_node * D.252950;
  union tree_node * D.252949;
  union tree_node * D.252945;
  struct function_pthread_exit_array * D.252944;
  struct function_pthread_exit_array * D.252943;
  struct function * D.252942;
  union tree_node * D.252938;
  struct function_pthread_detched_array * D.252937;
  struct function_pthread_detched_array * D.252936;
  struct function * D.252935;
  struct function * D.252930;
  struct function * D.252929;
  union tree_node * D.252928;
  struct function_assign_array * D.252927;
  struct function_assign_array * D.252926;
  union tree_node * D.252925;
  union tree_node * D.252924;
  struct function * D.252923;
  union tree_node * D.252922;
  struct function_assign_array * D.252921;
  struct function_assign_array * D.252920;
  union tree_node * D.252919;
  struct function * D.252915;
  union tree_node * D.252914;
  struct function_return_array * D.252913;
  struct function_return_array * D.252912;
  struct function * D.252911;
  struct function * D.252906;
  union tree_node * D.252905;
  union tree_node * D.252896;
  struct function * D.252895;
  union tree_node * D.252894;
  struct function_assign_array * D.252892;
  union tree_node * D.252891;
  struct function_assign_array * D.252889;
  union tree_node * D.252888;
  union tree_node * D.252887;
  union tree_node * D.252886;
  union tree_node * D.252885;
  union tree_node * D.252884;
  union tree_node * D.252883;
  struct function_free_array * D.252882;
  struct function_free_array * D.252881;
  struct function * D.252880;
  union tree_node * D.252879;
  struct function * D.252874;
  union tree_node * D.252873;
  struct function_assign_array * D.252872;
  struct function_assign_array * D.252871;
  union tree_node * D.252870;
  union tree_node * D.252869;
  union tree_node * D.252868;
  const char * D.252867;
  union tree_node * D.252866;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second2;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct gimple * def_stmt;
  union tree_node * four;
  union tree_node * three;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second2;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  union tree_node * first;
  struct assign_type assign_type;
  struct gimple * def_stmt;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  union tree_node * first;
  struct assign_type assign_type;
  union tree_node * function_return_lhstree;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  union tree_node * function_return_lhstree;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  struct assign_type assign_type;
  union tree_node * function_return_lhstree;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * ssa_var;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * ssa_var;
  union tree_node * getFunctionAssignLHS;
  union tree_node * getFunctionAssignRHS;
  struct return_type ret_type;
  struct function_return_array fun_array;
  struct vector ret_type_array;
  union tree_node * getFucntionDecl;
  size_t found;
  int i;
  int find;
  union tree_node * second;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * getVARDECLtree;
  int i;
  union tree_node * getreturnFucntionDecl;
  union tree_node * checklhstree;
  union tree_node * getVARDECLtree;
  struct pthread_exit_type pthread_exit_type;
  struct vector pthread_exit_array;
  struct function_pthread_exit_array fun_array;
  union tree_node * getFucntionDecl;
  struct pthread_detched_type pthread_detched_type;
  struct vector pthread_detched_array;
  struct function_pthread_detched_array fun_array;
  union tree_node * getFucntionDecl;
  union tree_node * second;
  union tree_node * t2;
  struct ptb * table1;
  struct assign_type assign_type;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * getFunctionCallarg;
  struct return_type ret_type;
  union tree_node * getFucntionDecl;
  struct vector ret_type_array;
  struct function_return_array fun_array;
  struct return_type ret_type;
  struct vector ret_type_array;
  union tree_node * get_function_arg_tree;
  struct function_return_array fun_array;
  struct assign_type assign_type;
  struct gimple * def_stmt;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct free_type free_type;
  struct function_free_array fun_array;
  struct vector free_type_array;
  union tree_node * getFucntionDecl;
  struct assign_type assign_type;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  union tree_node * second;
  union tree_node * get_function_return_tree;
  const char * name;
  struct cgraph_node * node2;
  union tree_node * a;
  location_t loc;
  bool retval.942;
  bool retval.935;
  bool retval.928;
  union tree_node * const D.195793;
  union tree_node * const D.195791;
  union tree_node * const D.195790;
  bool retval.923;
  bool retval.922;
  bool retval.921;
  bool retval.910;
  union tree_node * const D.195780;
  union tree_node * const D.195778;
  union tree_node * const D.195777;
  bool retval.904;
  bool retval.903;
  bool retval.902;
  bool retval.894;
  union tree_node * const D.195768;
  union tree_node * const D.195766;
  union tree_node * const D.195765;
  bool retval.889;
  bool retval.888;
  bool retval.887;
  bool retval.877;
  bool retval.871;
  union tree_node * const D.195749;
  union tree_node * const D.195747;
  union tree_node * const D.195746;
  bool retval.865;
  bool retval.864;
  bool retval.863;
  bool retval.858;
  bool retval.853;
  bool retval.848;
  bool retval.841;
  bool retval.835;
  bool retval.829;
  union tree_node * iftmp.823;
  bool retval.817;
  union tree_node * iftmp.811;
  bool iftmp.809;
  bool retval.808;
  bool retval.807;
  bool retval.802;
  bool retval.800;
  bool retval.798;
  struct expanded_location D.195704;
  bool retval.796;
  struct expanded_location D.195701;
  bool retval.794;
  union tree_node * const D.195694;
  union tree_node * const D.195693;
  bool retval.789;
  bool retval.788;
  bool retval.787;
  bool retval.785;
  bool retval.780;
  bool retval.776;
  bool iftmp.773;
  bool retval.772;
  bool retval.768;
  bool retval.764;
  union tree_node * iftmp.763;
  union tree_node * iftmp.758;
  bool retval.753;
  bool retval.751;
  bool retval.747;
  bool retval.739;
  union tree_node * const D.195282;
  union tree_node * const D.195280;
  union tree_node * const D.195279;
  bool retval.734;
  bool retval.733;
  bool retval.732;
  bool retval.731;
  bool retval.727;
  bool retval.726;
  bool retval.722;
  bool retval.721;
  bool retval.720;

  <bb 2> :
  loc = gimple_location_safe (gc);
  _1 = gimple_code (gc);
  retval.720 = _1 == 8;
  if (retval.720 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 233>; [INV]

  <bb 3> :
  D.252866 = gimple_call_fn (gc);
  _2 = D.252866;
  D.252867 = get_name (_2);
  name = D.252867;
  D.252868 = gimple_call_fn (gc);
  get_function_return_tree = D.252868;
  _3 = get_function_return_tree->base.code;
  if (_3 == 153)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 522>; [INV]

  <bb 5> :
  if (name != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 522>; [INV]

  <bb 6> :
  _4 = strcmp (name, "free");
  if (_4 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  _5 = strcmp (name, "xfree");
  if (_5 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _6 = strcmp (name, "realloc");
  if (_6 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 9> :
  D.252869 = gimple_call_arg (gc, 0);
  _7 = D.252869;
  _8 = _7->base.code;
  retval.721 = _8 == 131;
  if (retval.721 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 10> :
  D.252870 = gimple_call_arg (gc, 0);

  <bb 11> :
  _9 = D.252870;
  _10 = _9->exp.operands[0];
  second = _10;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.723_11 = function_assign_collect;
  D.252871 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.723_11, &second);

  <bb 12> :
  _12 = D.252871;
  retval.722 = _12 == 0B;
  if (retval.722 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 17>; [INV]

  <bb 14> :
  function_assign_collect.724_13 = function_assign_collect;
  D.252872 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.724_13, &second);

  <bb 15> :
  _14 = D.252872;
  function_assign_array::operator= (&assign_array, _14);

  <bb 16> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 17> :
  assign_type.stmt = gc;
  D.252873 = gimple_call_arg (gc, 0);

  <bb 18> :
  _15 = D.252873;
  assign_type.assign_tree = _15;
  D.252874 = cgraph_node::get_fun (node);

  <bb 19> :
  _16 = D.252874;
  _17 = _16->decl;
  assign_type.form_tree = _17;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 20> :
  function_assign_collect.725_18 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.725_18, &second, &assign_array);

  <bb 21> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  second = {CLOBBER};
  goto <bb 58>; [INV]

  <bb 22> :
  D.252879 = gimple_call_arg (gc, 0);
  _19 = D.252879;
  _20 = _19->base.code;
  retval.726 = _20 == 153;
  if (retval.726 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 23> :
  D.252880 = cgraph_node::get_fun (node);

  <bb 24> :
  _21 = D.252880;
  _22 = _21->decl;
  getFucntionDecl = _22;
  std::vector<free_type>::vector (&free_type_array);
  function_free_array::function_free_array (&fun_array);
  function_free_collect.728_23 = function_free_collect;
  D.252881 = hash_map<tree_node*, function_free_array>::get (function_free_collect.728_23, &getFucntionDecl);

  <bb 25> :
  _24 = D.252881;
  retval.727 = _24 == 0B;
  if (retval.727 != 0)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  std::vector<free_type>::operator= (&fun_array.free_type_array, &free_type_array);
  goto <bb 30>; [INV]

  <bb 27> :
  function_free_collect.729_25 = function_free_collect;
  D.252882 = hash_map<tree_node*, function_free_array>::get (function_free_collect.729_25, &getFucntionDecl);

  <bb 28> :
  _26 = D.252882;
  function_free_array::operator= (&fun_array, _26);

  <bb 29> :
  std::vector<free_type>::operator= (&free_type_array, &fun_array.free_type_array);

  <bb 30> :
  free_type::free_type (&free_type);
  free_type.stmt = gc;
  D.252883 = gimple_call_arg (gc, 0);

  <bb 31> :
  _27 = D.252883;
  free_type.free_tree = _27;
  std::vector<free_type>::push_back (&fun_array.free_type_array, &free_type);

  <bb 32> :
  function_free_collect.730_28 = function_free_collect;
  hash_map<tree_node*, function_free_array>::put (function_free_collect.730_28, &getFucntionDecl, &fun_array);

  <bb 33> :
  D.252884 = gimple_call_arg (gc, 0);

  <bb 34> :
  _29 = D.252884;
  _30 = _29->base.code;
  retval.731 = _30 == 153;
  if (retval.731 != 0)
    goto <bb 35>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 35> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  D.252885 = gimple_call_arg (gc, 0);

  <bb 36> :
  _31 = D.252885;
  def_stmt = _31->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 37>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 37> :
  retval.732 = is_gimple_assign (def_stmt);
  if (retval.732 != 0)
    goto <bb 38>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 38> :
  D.252886 = gimple_assign_rhs1 (def_stmt);

  <bb 39> :
  _32 = D.252886;
  _33 = _32->base.code;
  retval.733 = _33 == 36;
  if (retval.733 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 40> :
  D.252887 = gimple_assign_rhs1 (def_stmt);

  <bb 41> :
  _34 = D.252887;
  debug_tree (_34);

  <bb 42> :
  function_assign_collect.735_35 = function_assign_collect;
  D.252888 = gimple_assign_rhs1 (def_stmt);

  <bb 43> :
  _36 = D.252888;
  D.195279 = _36;
  D.252889 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.735_35, &D.195279);

  <bb 44> :
  _37 = D.252889;
  retval.734 = _37 == 0B;
  D.195279 = {CLOBBER};
  if (retval.734 != 0)
    goto <bb 45>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 45> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 50>; [INV]

  <bb 46> :
  function_assign_collect.736_38 = function_assign_collect;
  D.252891 = gimple_assign_rhs1 (def_stmt);

  <bb 47> :
  _39 = D.252891;
  D.195280 = _39;
  D.252892 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.736_38, &D.195280);

  <bb 48> :
  _40 = D.252892;
  function_assign_array::operator= (&assign_array, _40);

  <bb 49> :
  D.195280 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 50> :
  assign_type.stmt = gc;
  D.252894 = gimple_call_arg (gc, 0);

  <bb 51> :
  _41 = D.252894;
  assign_type.assign_tree = _41;
  D.252895 = cgraph_node::get_fun (node);

  <bb 52> :
  _42 = D.252895;
  _43 = _42->decl;
  assign_type.form_tree = _43;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 53> :
  function_assign_collect.737_44 = function_assign_collect;
  D.252896 = gimple_assign_rhs1 (def_stmt);

  <bb 54> :
  _45 = D.252896;
  D.195282 = _45;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.737_44, &D.195282, &assign_array);

  <bb 55> :
  D.195282 = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 56> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};

  <bb 57> :
  function_free_array::~function_free_array (&fun_array);
  std::vector<free_type>::~vector (&free_type_array);
  getFucntionDecl = {CLOBBER};
  free_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  free_type = {CLOBBER};

  <bb 58> :
  goto <bb 232>; [INV]

  <bb 59> :
  _46 = strcmp (name, "exit");
  if (_46 == 0)
    goto <bb 60>; [INV]
  else
    goto <bb 68>; [INV]

  <bb 60> :
  function_return_array::function_return_array (&fun_array);
  D.252905 = gimple_call_arg (gc, 0);

  <bb 61> :
  get_function_arg_tree = D.252905;
  std::vector<return_type>::vector (&ret_type_array);
  if (get_function_return_tree != 0B)
    goto <bb 62>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 62> :
  return_type::return_type (&ret_type);
  ret_type.stmt = gc;
  ret_type.return_tree = get_function_return_tree;
  std::vector<return_type>::push_back (&global_ret_type_array, &ret_type);

  <bb 63> :
  std::vector<return_type>::push_back (&fun_array.return_type_array, &ret_type);

  <bb 64> :
  function_return_collect.738_47 = function_return_collect;
  D.252906 = cgraph_node::get_fun (node);

  <bb 65> :
  _48 = D.252906;
  _49 = &_48->decl;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.738_47, _49, &fun_array);

  <bb 66> :
  ret_type = {CLOBBER};

  <bb 67> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  goto <bb 232>; [INV]

  <bb 68> :
  _50 = strcmp (name, "pthread_mutex_lock");
  if (_50 == 0)
    goto <bb 70>; [INV]
  else
    goto <bb 69>; [INV]

  <bb 69> :
  _51 = strcmp (name, "pthread_mutex_unlock");
  if (_51 == 0)
    goto <bb 70>; [INV]
  else
    goto <bb 81>; [INV]

  <bb 70> :
  function_return_array::function_return_array (&fun_array);
  std::vector<return_type>::vector (&ret_type_array);
  D.252911 = cgraph_node::get_fun (node);

  <bb 71> :
  _52 = D.252911;
  _53 = _52->decl;
  getFucntionDecl = _53;
  function_return_collect.740_54 = function_return_collect;
  D.252912 = hash_map<tree_node*, function_return_array>::get (function_return_collect.740_54, &getFucntionDecl);

  <bb 72> :
  _55 = D.252912;
  retval.739 = _55 == 0B;
  if (retval.739 != 0)
    goto <bb 73>; [INV]
  else
    goto <bb 74>; [INV]

  <bb 73> :
  std::vector<return_type>::operator= (&fun_array.return_type_array, &ret_type_array);
  goto <bb 76>; [INV]

  <bb 74> :
  function_return_collect.741_56 = function_return_collect;
  D.252913 = hash_map<tree_node*, function_return_array>::get (function_return_collect.741_56, &getFucntionDecl);

  <bb 75> :
  _57 = D.252913;
  function_return_array::operator= (&fun_array, _57);

  <bb 76> :
  return_type::return_type (&ret_type);
  ret_type.stmt = gc;
  D.252914 = gimple_call_arg (gc, 0);

  <bb 77> :
  _58 = D.252914;
  ret_type.return_tree = _58;
  FUNCITON_THREAD.742_59 = FUNCITON_THREAD;
  FUNCITON_THREAD.743_60 = (int) FUNCITON_THREAD.742_59;
  ret_type.return_type_stmt_num = FUNCITON_THREAD.743_60;
  std::vector<return_type>::push_back (&fun_array.return_type_array, &ret_type);

  <bb 78> :
  function_return_collect.744_61 = function_return_collect;
  D.252915 = cgraph_node::get_fun (node);

  <bb 79> :
  _62 = D.252915;
  _63 = &_62->decl;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.744_61, _63, &fun_array);

  <bb 80> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};
  ret_type = {CLOBBER};
  goto <bb 232>; [INV]

  <bb 81> :
  _64 = strcmp (name, "pthread_create");
  if (_64 == 0)
    goto <bb 82>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 82> :
  stderr.745_65 = stderr;
  __builtin_fwrite ("----------------test-------------\n", 1, 34, stderr.745_65);

  <bb 83> :
  D.252919 = gimple_call_arg (gc, 0);

  <bb 84> :
  _66 = D.252919;
  getFunctionCallarg = _66;
  getFunctionCallarg.746_67 = getFunctionCallarg;
  _68 = getFunctionCallarg.746_67->exp.operands[0];
  getFunctionCallarg = _68;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  debug (gc);

  <bb 85> :
  function_assign_collect.748_69 = function_assign_collect;
  D.252920 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.748_69, &getFunctionCallarg);

  <bb 86> :
  _70 = D.252920;
  retval.747 = _70 == 0B;
  if (retval.747 != 0)
    goto <bb 87>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 87> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 91>; [INV]

  <bb 88> :
  function_assign_collect.749_71 = function_assign_collect;
  D.252921 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.749_71, &getFunctionCallarg);

  <bb 89> :
  _72 = D.252921;
  function_assign_array::operator= (&assign_array, _72);

  <bb 90> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 91> :
  assign_type.stmt = gc;
  D.252922 = gimple_call_arg (gc, 0);

  <bb 92> :
  _73 = D.252922;
  assign_type.assign_tree = _73;
  D.252923 = cgraph_node::get_fun (node);

  <bb 93> :
  _74 = D.252923;
  _75 = _74->decl;
  assign_type.form_tree = _75;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 94> :
  function_assign_collect.750_76 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.750_76, &getFunctionCallarg, &assign_array);

  <bb 95> :
  D.252924 = gimple_call_arg (gc, 3);

  <bb 96> :
  _77 = D.252924;
  retval.751 = _77 != 0B;
  if (retval.751 != 0)
    goto <bb 97>; [INV]
  else
    goto <bb 124>; [INV]

  <bb 97> :
  D.252925 = gimple_call_arg (gc, 0);

  <bb 98> :
  _78 = D.252925;
  getFunctionCallarg = _78;
  getFunctionCallarg.752_79 = getFunctionCallarg;
  _80 = getFunctionCallarg.752_79->exp.operands[0];
  getFunctionCallarg = _80;
  function_assign_collect.754_81 = function_assign_collect;
  D.252926 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.754_81, &getFunctionCallarg);

  <bb 99> :
  _82 = D.252926;
  retval.753 = _82 == 0B;
  if (retval.753 != 0)
    goto <bb 100>; [INV]
  else
    goto <bb 101>; [INV]

  <bb 100> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 104>; [INV]

  <bb 101> :
  function_assign_collect.755_83 = function_assign_collect;
  D.252927 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.755_83, &getFunctionCallarg);

  <bb 102> :
  _84 = D.252927;
  function_assign_array::operator= (&assign_array, _84);

  <bb 103> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 104> :
  assign_type.stmt = gc;
  D.252928 = gimple_call_arg (gc, 3);

  <bb 105> :
  _85 = D.252928;
  assign_type.assign_tree = _85;
  D.252929 = cgraph_node::get_fun (node);

  <bb 106> :
  _86 = D.252929;
  _87 = _86->decl;
  assign_type.form_tree = _87;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 107> :
  function_assign_collect.756_88 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.756_88, &getFunctionCallarg, &assign_array);

  <bb 108> :
  getFunctionCallarg.757_89 = getFunctionCallarg;
  _90 = getFunctionCallarg.757_89->base.code;
  if (_90 == 36)
    goto <bb 109>; [INV]
  else
    goto <bb 123>; [INV]

  <bb 109> :
  table1 = ptable;
  t2 = 0B;
  _91 = ptable->size;
  if (_91 >= 0)
    goto <bb 110>; [INV]
  else
    goto <bb 123>; [INV]

  <bb 110> :
  if (table1 != 0B)
    goto <bb 111>; [INV]
  else
    goto <bb 112>; [INV]

  <bb 111> :
  iftmp.758 = table1->target;
  goto <bb 113>; [INV]

  <bb 112> :
  iftmp.758 = 0B;

  <bb 113> :
  t2 = iftmp.758;
  goto <bb 122>; [INV]

  <bb 114> :
  _92 = table1->target;
  _93 = _92->base.code;
  if (_93 == 131)
    goto <bb 115>; [INV]
  else
    goto <bb 118>; [INV]

  <bb 115> :
  _94 = table1->target;
  second = _94->exp.operands[0];
  getFunctionCallarg.759_95 = getFunctionCallarg;
  if (second == getFunctionCallarg.759_95)
    goto <bb 116>; [INV]
  else
    goto <bb 118>; [INV]

  <bb 116> :
  _96 = table1->target;
  table1->swap_target = _96;
  _97 = table1->last_stmt;
  table1->swap_stmt = _97;
  getFunctionCallarg.760_98 = getFunctionCallarg;
  table1->target = getFunctionCallarg.760_98;
  table1->last_stmt = gc;
  FUNCITON_THREAD.761_99 = FUNCITON_THREAD;
  FUNCITON_THREAD.762_100 = (int) FUNCITON_THREAD.761_99;
  table1->swap_type = FUNCITON_THREAD.762_100;
  _101 = table1->last_stmt;
  assign_type.stmt = _101;
  _102 = table1->target;
  assign_type.assign_tree = _102;
  D.252930 = cgraph_node::get_fun (node);

  <bb 117> :
  _103 = D.252930;
  _104 = _103->decl;
  assign_type.form_tree = _104;

  <bb 118> :
  table1 = table1->next;
  if (table1 != 0B)
    goto <bb 119>; [INV]
  else
    goto <bb 120>; [INV]

  <bb 119> :
  iftmp.763 = table1->target;
  goto <bb 121>; [INV]

  <bb 120> :
  iftmp.763 = 0B;

  <bb 121> :
  t2 = iftmp.763;

  <bb 122> :
  _105 = table1->next;
  if (_105 != 0B)
    goto <bb 114>; [INV]
  else
    goto <bb 123>; [INV]

  <bb 123> :
  assign_type = {CLOBBER};

  <bb 124> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  getFunctionCallarg = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 232>; [INV]

  <bb 125> :
  _106 = strcmp (name, "pthread_detach");
  if (_106 == 0)
    goto <bb 126>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 126> :
  D.252935 = cgraph_node::get_fun (node);

  <bb 127> :
  _107 = D.252935;
  _108 = _107->decl;
  getFucntionDecl = _108;
  function_pthread_detched_array::function_pthread_detched_array (&fun_array);
  std::vector<pthread_detched_type>::vector (&pthread_detched_array);
  function_pthread_detched_collect.765_109 = function_pthread_detched_collect;
  D.252936 = hash_map<tree_node*, function_pthread_detched_array>::get (function_pthread_detched_collect.765_109, &getFucntionDecl);

  <bb 128> :
  _110 = D.252936;
  retval.764 = _110 == 0B;
  if (retval.764 != 0)
    goto <bb 129>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 129> :
  std::vector<pthread_detched_type>::operator= (&fun_array.pthread_detched_array, &pthread_detched_array);
  goto <bb 133>; [INV]

  <bb 130> :
  function_pthread_detched_collect.766_111 = function_pthread_detched_collect;
  D.252937 = hash_map<tree_node*, function_pthread_detched_array>::get (function_pthread_detched_collect.766_111, &getFucntionDecl);

  <bb 131> :
  _112 = D.252937;
  function_pthread_detched_array::operator= (&fun_array, _112);

  <bb 132> :
  std::vector<pthread_detched_type>::operator= (&pthread_detched_array, &fun_array.pthread_detched_array);

  <bb 133> :
  pthread_detched_type.stmt = gc;
  D.252938 = gimple_call_arg (gc, 0);

  <bb 134> :
  _113 = D.252938;
  pthread_detched_type.pthread_detched_tree = _113;
  std::vector<pthread_detched_type>::push_back (&fun_array.pthread_detched_array, &pthread_detched_type);

  <bb 135> :
  function_pthread_detched_collect.767_114 = function_pthread_detched_collect;
  hash_map<tree_node*, function_pthread_detched_array>::put (function_pthread_detched_collect.767_114, &getFucntionDecl, &fun_array);

  <bb 136> :
  std::vector<pthread_detched_type>::~vector (&pthread_detched_array);
  function_pthread_detched_array::~function_pthread_detched_array (&fun_array);
  getFucntionDecl = {CLOBBER};
  fun_array = {CLOBBER};
  pthread_detched_array = {CLOBBER};
  pthread_detched_type = {CLOBBER};
  goto <bb 232>; [INV]

  <bb 137> :
  _115 = strcmp (name, "pthread_exit");
  if (_115 == 0)
    goto <bb 138>; [INV]
  else
    goto <bb 149>; [INV]

  <bb 138> :
  D.252942 = cgraph_node::get_fun (node);

  <bb 139> :
  _116 = D.252942;
  _117 = _116->decl;
  getFucntionDecl = _117;
  function_pthread_exit_array::function_pthread_exit_array (&fun_array);
  std::vector<pthread_exit_type>::vector (&pthread_exit_array);
  function_pthread_exit_collect.769_118 = function_pthread_exit_collect;
  D.252943 = hash_map<tree_node*, function_pthread_exit_array>::get (function_pthread_exit_collect.769_118, &getFucntionDecl);

  <bb 140> :
  _119 = D.252943;
  retval.768 = _119 == 0B;
  if (retval.768 != 0)
    goto <bb 141>; [INV]
  else
    goto <bb 142>; [INV]

  <bb 141> :
  std::vector<pthread_exit_type>::operator= (&fun_array.pthread_exit_array, &pthread_exit_array);
  goto <bb 145>; [INV]

  <bb 142> :
  function_pthread_exit_collect.770_120 = function_pthread_exit_collect;
  D.252944 = hash_map<tree_node*, function_pthread_exit_array>::get (function_pthread_exit_collect.770_120, &getFucntionDecl);

  <bb 143> :
  _121 = D.252944;
  function_pthread_exit_array::operator= (&fun_array, _121);

  <bb 144> :
  std::vector<pthread_exit_type>::operator= (&pthread_exit_array, &fun_array.pthread_exit_array);

  <bb 145> :
  pthread_exit_type.stmt = gc;
  D.252945 = gimple_call_arg (gc, 0);

  <bb 146> :
  _122 = D.252945;
  pthread_exit_type.pthread_exit_tree = _122;
  std::vector<pthread_exit_type>::push_back (&fun_array.pthread_exit_array, &pthread_exit_type);

  <bb 147> :
  function_pthread_exit_collect.771_123 = function_pthread_exit_collect;
  hash_map<tree_node*, function_pthread_exit_array>::put (function_pthread_exit_collect.771_123, &getFucntionDecl, &fun_array);

  <bb 148> :
  std::vector<pthread_exit_type>::~vector (&pthread_exit_array);
  function_pthread_exit_array::~function_pthread_exit_array (&fun_array);
  getFucntionDecl = {CLOBBER};
  fun_array = {CLOBBER};
  pthread_exit_array = {CLOBBER};
  pthread_exit_type = {CLOBBER};
  goto <bb 232>; [INV]

  <bb 149> :
  debug_gimple_stmt (gc);

  <bb 150> :
  i = 0;
  goto <bb 176>; [INV]

  <bb 151> :
  i.774_124 = (unsigned int) i;
  D.252949 = gimple_call_arg (gc, i.774_124);

  <bb 152> :
  _125 = D.252949;
  _126 = _125->base.code;
  if (_126 == 131)
    goto <bb 155>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 153> :
  i.775_127 = (unsigned int) i;
  D.252950 = gimple_call_arg (gc, i.775_127);

  <bb 154> :
  _128 = D.252950;
  _129 = _128->base.code;
  if (_129 == 36)
    goto <bb 155>; [INV]
  else
    goto <bb 156>; [INV]

  <bb 155> :
  iftmp.773 = 1;
  goto <bb 157>; [INV]

  <bb 156> :
  iftmp.773 = 0;

  <bb 157> :
  retval.772 = iftmp.773;
  if (retval.772 != 0)
    goto <bb 158>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 158> :
  i.777_130 = (unsigned int) i;
  D.252951 = gimple_call_arg (gc, i.777_130);

  <bb 159> :
  _131 = D.252951;
  _132 = _131->base.code;
  retval.776 = _132 == 131;
  if (retval.776 != 0)
    goto <bb 160>; [INV]
  else
    goto <bb 162>; [INV]

  <bb 160> :
  i.778_133 = (unsigned int) i;
  D.252952 = gimple_call_arg (gc, i.778_133);

  <bb 161> :
  _134 = D.252952;
  _135 = _134->exp.operands[0];
  getVARDECLtree = _135;
  goto <bb 164>; [INV]

  <bb 162> :
  i.779_136 = (unsigned int) i;
  D.252953 = gimple_call_arg (gc, i.779_136);

  <bb 163> :
  _137 = D.252953;
  getVARDECLtree = _137;

  <bb 164> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.781_138 = function_assign_collect;
  D.252954 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.781_138, &getVARDECLtree);

  <bb 165> :
  _139 = D.252954;
  retval.780 = _139 == 0B;
  if (retval.780 != 0)
    goto <bb 166>; [INV]
  else
    goto <bb 167>; [INV]

  <bb 166> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 170>; [INV]

  <bb 167> :
  function_assign_collect.782_140 = function_assign_collect;
  D.252955 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.782_140, &getVARDECLtree);

  <bb 168> :
  _141 = D.252955;
  function_assign_array::operator= (&assign_array, _141);

  <bb 169> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 170> :
  assign_type.stmt = gc;
  i.783_142 = (unsigned int) i;
  D.252956 = gimple_call_arg (gc, i.783_142);

  <bb 171> :
  _143 = D.252956;
  assign_type.assign_tree = _143;
  D.252957 = cgraph_node::get_fun (node);

  <bb 172> :
  _144 = D.252957;
  _145 = _144->decl;
  assign_type.form_tree = _145;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 173> :
  function_assign_collect.784_146 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.784_146, &getVARDECLtree, &assign_array);

  <bb 174> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 175> :
  getVARDECLtree = {CLOBBER};
  i = i + 1;

  <bb 176> :
  D.252962 = gimple_call_num_args (gc);

  <bb 177> :
  _147 = D.252962;
  i.786_148 = (unsigned int) i;
  retval.785 = _147 > i.786_148;
  if (retval.785 != 0)
    goto <bb 151>; [INV]
  else
    goto <bb 178>; [INV]

  <bb 178> :
  D.252963 = gimple_call_num_args (gc);

  <bb 179> :
  _149 = D.252963;
  retval.787 = _149 != 0;
  if (retval.787 != 0)
    goto <bb 180>; [INV]
  else
    goto <bb 197>; [INV]

  <bb 180> :
  D.252964 = gimple_call_arg (gc, 0);

  <bb 181> :
  _150 = D.252964;
  _151 = _150->base.code;
  retval.788 = _151 == 131;
  if (retval.788 != 0)
    goto <bb 182>; [INV]
  else
    goto <bb 197>; [INV]

  <bb 182> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.790_152 = function_assign_collect;
  D.252965 = gimple_call_fn (gc);

  <bb 183> :
  _153 = D.252965;
  D.195693 = _153;
  D.252966 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.790_152, &D.195693);

  <bb 184> :
  _154 = D.252966;
  retval.789 = _154 == 0B;
  D.195693 = {CLOBBER};
  if (retval.789 != 0)
    goto <bb 185>; [INV]
  else
    goto <bb 186>; [INV]

  <bb 185> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 190>; [INV]

  <bb 186> :
  function_assign_collect.791_155 = function_assign_collect;
  D.252968 = gimple_call_fn (gc);

  <bb 187> :
  _156 = D.252968;
  D.195694 = _156;
  D.252969 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.791_155, &D.195694);

  <bb 188> :
  _157 = D.252969;
  function_assign_array::operator= (&assign_array, _157);

  <bb 189> :
  D.195694 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 190> :
  assign_type.stmt = gc;
  D.252971 = gimple_call_arg (gc, 0);

  <bb 191> :
  _158 = D.252971;
  assign_type.assign_tree = _158;
  D.252972 = cgraph_node::get_fun (node);

  <bb 192> :
  _159 = D.252972;
  _160 = _159->decl;
  assign_type.form_tree = _160;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 193> :
  D.252973 = gimple_call_arg (gc, 0);

  <bb 194> :
  _161 = D.252973;
  _162 = _161->exp.operands[0];
  second = _162;
  second.792_163 = second;
  _164 = second.792_163->base.code;
  if (_164 == 36)
    goto <bb 195>; [INV]
  else
    goto <bb 196>; [INV]

  <bb 195> :
  function_assign_collect.793_165 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.793_165, &second, &assign_array);

  <bb 196> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  second = {CLOBBER};

  <bb 197> :
  D.252977 = gimple_call_lhs (gc);

  <bb 198> :
  checklhstree = D.252977;
  _166 = gimple_code (gc);
  retval.794 = _166 == 8;
  if (retval.794 != 0)
    goto <bb 199>; [INV]
  else
    goto <bb 215>; [INV]

  <bb 199> :
  vscode_extensionmod.795_167 = vscode_extensionmod;
  if (vscode_extensionmod.795_167 != 0)
    goto <bb 200>; [INV]
  else
    goto <bb 212>; [INV]

  <bb 200> :
  find = 0;
  i = 0;
  goto <bb 209>; [INV]

  <bb 201> :
  _168 = (long unsigned int) i;
  _169 = std::vector<breakpoint>::operator[] (&vbreakpoint, _168);
  _170 = &_169->name;
  D.195701 = expand_location (loc); [return slot optimization]

  <bb 202> :
  _171 = D.195701.file;
  found = std::__cxx11::basic_string<char>::find (_170, _171, 0);
  D.195701 = {CLOBBER};
  if (found != 0)
    goto <bb 203>; [INV]
  else
    goto <bb 208>; [INV]

  <bb 203> :
  _172 = (long unsigned int) i;
  _173 = std::vector<breakpoint>::operator[] (&vbreakpoint, _172);
  _174 = _173->line;
  D.195704 = expand_location (loc); [return slot optimization]

  <bb 204> :
  _175 = D.195704.line;
  retval.796 = _174 == _175;
  D.195704 = {CLOBBER};
  if (retval.796 != 0)
    goto <bb 205>; [INV]
  else
    goto <bb 208>; [INV]

  <bb 205> :
  debug_gimple_stmt (gc);

  <bb 206> :
  _176 = (long unsigned int) i;
  _177 = std::vector<breakpoint>::operator[] (&vbreakpoint, _176);
  _178 = _177->line;
  _179 = (long unsigned int) i;
  _180 = std::vector<breakpoint>::operator[] (&vbreakpoint, _179);
  _181 = &_180->name;
  _182 = std::__cxx11::basic_string<char>::c_str (_181);
  stderr.797_183 = stderr;
  fprintf (stderr.797_183, "set breakpoint %s %d\n", _182, _178);

  <bb 207> :
  find = 1;

  <bb 208> :
  i = i + 1;

  <bb 209> :
  _184 = (long unsigned int) i;
  _185 = std::vector<breakpoint>::size (&vbreakpoint);
  retval.798 = _184 < _185;
  if (retval.798 != 0)
    goto <bb 201>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 210> :
  if (find == 0)
    goto <bb 211>; [INV]
  else
    goto <bb 212>; [INV]

  <bb 211> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 231>; [INV]

  <bb 212> :
  D.252978 = gimple_call_fn (gc);

  <bb 213> :
  _186 = D.252978;
  D.252979 = get_name (_186);

  <bb 214> :
  name = D.252979;

  <bb 215> :
  _187 = get_function_return_tree->exp.operands[0];
  getreturnFucntionDecl = _187;
  getreturnFucntionDecl.799_188 = getreturnFucntionDecl;
  if (getreturnFucntionDecl.799_188 != 0B)
    goto <bb 216>; [INV]
  else
    goto <bb 230>; [INV]

  <bb 216> :
  function_return_collect.801_189 = function_return_collect;
  D.252980 = hash_map<tree_node*, function_return_array>::get (function_return_collect.801_189, &getreturnFucntionDecl);

  <bb 217> :
  _190 = D.252980;
  retval.800 = _190 == 0B;
  if (retval.800 != 0)
    goto <bb 218>; [INV]
  else
    goto <bb 219>; [INV]

  <bb 218> :
  // predicted unlikely by early return (on trees) predictor.
  getFucntionDecl = {CLOBBER};
  ret_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  ret_type = {CLOBBER};
  goto <bb 231>; [INV]

  <bb 219> :
  D.252981 = cgraph_node::get_fun (node);

  <bb 220> :
  _191 = D.252981;
  _192 = _191->decl;
  getFucntionDecl = _192;
  std::vector<return_type>::vector (&ret_type_array);
  function_return_array::function_return_array (&fun_array);
  function_return_collect.803_193 = function_return_collect;
  D.252982 = hash_map<tree_node*, function_return_array>::get (function_return_collect.803_193, &getFucntionDecl);

  <bb 221> :
  _194 = D.252982;
  retval.802 = _194 == 0B;
  if (retval.802 != 0)
    goto <bb 222>; [INV]
  else
    goto <bb 223>; [INV]

  <bb 222> :
  std::vector<return_type>::operator= (&fun_array.return_type_array, &ret_type_array);
  goto <bb 226>; [INV]

  <bb 223> :
  function_return_collect.804_195 = function_return_collect;
  D.252983 = hash_map<tree_node*, function_return_array>::get (function_return_collect.804_195, &getFucntionDecl);

  <bb 224> :
  _196 = D.252983;
  function_return_array::operator= (&fun_array, _196);

  <bb 225> :
  std::vector<return_type>::operator= (&ret_type_array, &fun_array.return_type_array);

  <bb 226> :
  return_type::return_type (&ret_type);
  ret_type.stmt = gc;
  getreturnFucntionDecl.805_197 = getreturnFucntionDecl;
  ret_type.return_tree = getreturnFucntionDecl.805_197;
  std::vector<return_type>::push_back (&fun_array.return_type_array, &ret_type);

  <bb 227> :
  function_return_collect.806_198 = function_return_collect;
  D.252984 = cgraph_node::get_fun (node);

  <bb 228> :
  _199 = D.252984;
  _200 = &_199->decl;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.806_198, _200, &fun_array);

  <bb 229> :
  function_return_array::~function_return_array (&fun_array);
  std::vector<return_type>::~vector (&ret_type_array);
  getFucntionDecl = {CLOBBER};
  ret_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  ret_type = {CLOBBER};

  <bb 230> :
  getreturnFucntionDecl = {CLOBBER};
  goto <bb 232>; [INV]

  <bb 231> :
  getreturnFucntionDecl = {CLOBBER};
  goto <bb 522>; [INV]

  <bb 232> :
  goto <bb 522>; [INV]

  <bb 233> :
  _201 = gimple_code (gc);
  retval.807 = _201 == 6;
  if (retval.807 != 0)
    goto <bb 234>; [INV]
  else
    goto <bb 522>; [INV]

  <bb 234> :
  D.252993 = gimple_assign_lhs (gc);

  <bb 235> :
  _202 = D.252993;
  if (_202 == 0B)
    goto <bb 238>; [INV]
  else
    goto <bb 236>; [INV]

  <bb 236> :
  D.252994 = gimple_assign_rhs1 (gc);

  <bb 237> :
  _203 = D.252994;
  if (_203 == 0B)
    goto <bb 238>; [INV]
  else
    goto <bb 239>; [INV]

  <bb 238> :
  iftmp.809 = 1;
  goto <bb 240>; [INV]

  <bb 239> :
  iftmp.809 = 0;

  <bb 240> :
  retval.808 = iftmp.809;
  if (retval.808 != 0)
    goto <bb 241>; [INV]
  else
    goto <bb 242>; [INV]

  <bb 241> :
  // predicted unlikely by early return (on trees) predictor.
  getFunctionAssignRHS = {CLOBBER};
  getFunctionAssignLHS = {CLOBBER};
  goto <bb 522>; [INV]

  <bb 242> :
  D.252995 = gimple_assign_rhs1 (gc);

  <bb 243> :
  _204 = D.252995;
  getFunctionAssignRHS = _204;
  D.252996 = gimple_assign_lhs (gc);

  <bb 244> :
  _205 = D.252996;
  getFunctionAssignLHS = _205;
  getFunctionAssignRHS.810_206 = getFunctionAssignRHS;
  _207 = getFunctionAssignRHS.810_206->base.code;
  if (_207 == 153)
    goto <bb 245>; [INV]
  else
    goto <bb 262>; [INV]

  <bb 245> :
  getFunctionAssignRHS.812_208 = getFunctionAssignRHS;
  _209 = getFunctionAssignRHS.812_208->ssa_name.var;
  if (_209 != 0B)
    goto <bb 246>; [INV]
  else
    goto <bb 248>; [INV]

  <bb 246> :
  getFunctionAssignRHS.813_210 = getFunctionAssignRHS;
  _211 = getFunctionAssignRHS.813_210->ssa_name.var;
  _212 = _211->base.code;
  if (_212 != 1)
    goto <bb 247>; [INV]
  else
    goto <bb 248>; [INV]

  <bb 247> :
  getFunctionAssignRHS.814_213 = getFunctionAssignRHS;
  iftmp.811 = getFunctionAssignRHS.814_213->ssa_name.var;
  goto <bb 249>; [INV]

  <bb 248> :
  iftmp.811 = 0B;

  <bb 249> :
  ssa_var = iftmp.811;
  ssa_var.815_214 = ssa_var;
  if (ssa_var.815_214 != 0B)
    goto <bb 250>; [INV]
  else
    goto <bb 261>; [INV]

  <bb 250> :
  ssa_var.816_215 = ssa_var;
  _216 = ssa_var.816_215->base.code;
  if (_216 == 36)
    goto <bb 251>; [INV]
  else
    goto <bb 261>; [INV]

  <bb 251> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.818_217 = function_assign_collect;
  D.252997 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.818_217, &ssa_var);

  <bb 252> :
  _218 = D.252997;
  retval.817 = _218 == 0B;
  if (retval.817 != 0)
    goto <bb 253>; [INV]
  else
    goto <bb 254>; [INV]

  <bb 253> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 257>; [INV]

  <bb 254> :
  function_assign_collect.819_219 = function_assign_collect;
  D.252998 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.819_219, &ssa_var);

  <bb 255> :
  _220 = D.252998;
  function_assign_array::operator= (&assign_array, _220);

  <bb 256> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 257> :
  assign_type.stmt = gc;
  ssa_var.820_221 = ssa_var;
  assign_type.assign_tree = ssa_var.820_221;
  D.252999 = cgraph_node::get_fun (node);

  <bb 258> :
  _222 = D.252999;
  _223 = _222->decl;
  assign_type.form_tree = _223;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 259> :
  function_assign_collect.821_224 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.821_224, &ssa_var, &assign_array);

  <bb 260> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 261> :
  ssa_var = {CLOBBER};

  <bb 262> :
  getFunctionAssignLHS.822_225 = getFunctionAssignLHS;
  _226 = getFunctionAssignLHS.822_225->base.code;
  if (_226 == 153)
    goto <bb 263>; [INV]
  else
    goto <bb 305>; [INV]

  <bb 263> :
  getFunctionAssignLHS.824_227 = getFunctionAssignLHS;
  _228 = getFunctionAssignLHS.824_227->ssa_name.var;
  if (_228 != 0B)
    goto <bb 264>; [INV]
  else
    goto <bb 266>; [INV]

  <bb 264> :
  getFunctionAssignLHS.825_229 = getFunctionAssignLHS;
  _230 = getFunctionAssignLHS.825_229->ssa_name.var;
  _231 = _230->base.code;
  if (_231 != 1)
    goto <bb 265>; [INV]
  else
    goto <bb 266>; [INV]

  <bb 265> :
  getFunctionAssignLHS.826_232 = getFunctionAssignLHS;
  iftmp.823 = getFunctionAssignLHS.826_232->ssa_name.var;
  goto <bb 267>; [INV]

  <bb 266> :
  iftmp.823 = 0B;

  <bb 267> :
  ssa_var = iftmp.823;
  ssa_var.827_233 = ssa_var;
  if (ssa_var.827_233 != 0B)
    goto <bb 268>; [INV]
  else
    goto <bb 279>; [INV]

  <bb 268> :
  ssa_var.828_234 = ssa_var;
  _235 = ssa_var.828_234->base.code;
  if (_235 == 36)
    goto <bb 269>; [INV]
  else
    goto <bb 279>; [INV]

  <bb 269> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.830_236 = function_assign_collect;
  D.253004 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.830_236, &ssa_var);

  <bb 270> :
  _237 = D.253004;
  retval.829 = _237 == 0B;
  if (retval.829 != 0)
    goto <bb 271>; [INV]
  else
    goto <bb 272>; [INV]

  <bb 271> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 275>; [INV]

  <bb 272> :
  function_assign_collect.831_238 = function_assign_collect;
  D.253005 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.831_238, &ssa_var);

  <bb 273> :
  _239 = D.253005;
  function_assign_array::operator= (&assign_array, _239);

  <bb 274> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 275> :
  assign_type.stmt = gc;
  ssa_var.832_240 = ssa_var;
  assign_type.assign_tree = ssa_var.832_240;
  D.253006 = cgraph_node::get_fun (node);

  <bb 276> :
  _241 = D.253006;
  _242 = _241->decl;
  assign_type.form_tree = _242;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 277> :
  function_assign_collect.833_243 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.833_243, &ssa_var, &assign_array);

  <bb 278> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 279> :
  getFunctionAssignRHS.834_244 = getFunctionAssignRHS;
  _245 = getFunctionAssignRHS.834_244->base.code;
  if (_245 == 36)
    goto <bb 280>; [INV]
  else
    goto <bb 292>; [INV]

  <bb 280> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.836_246 = function_assign_collect;
  D.253010 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.836_246, &getFunctionAssignRHS);

  <bb 281> :
  _247 = D.253010;
  retval.835 = _247 == 0B;
  if (retval.835 != 0)
    goto <bb 282>; [INV]
  else
    goto <bb 283>; [INV]

  <bb 282> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 286>; [INV]

  <bb 283> :
  function_assign_collect.837_248 = function_assign_collect;
  D.253011 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.837_248, &getFunctionAssignRHS);

  <bb 284> :
  _249 = D.253011;
  function_assign_array::operator= (&assign_array, _249);

  <bb 285> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 286> :
  D.253012 = gimple_assign_lhs (gc);

  <bb 287> :
  function_return_lhstree = D.253012;
  assign_type.stmt = gc;
  D.253013 = gimple_assign_lhs (gc);

  <bb 288> :
  _250 = D.253013;
  assign_type.assign_tree = _250;
  D.253014 = cgraph_node::get_fun (node);

  <bb 289> :
  _251 = D.253014;
  _252 = _251->decl;
  assign_type.form_tree = _252;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 290> :
  function_assign_collect.838_253 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.838_253, &getFunctionAssignRHS, &assign_array);

  <bb 291> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 292> :
  getFunctionAssignRHS.839_254 = getFunctionAssignRHS;
  _255 = getFunctionAssignRHS.839_254->base.code;
  if (_255 == 49)
    goto <bb 293>; [INV]
  else
    goto <bb 304>; [INV]

  <bb 293> :
  getFunctionAssignRHS.840_256 = getFunctionAssignRHS;
  _257 = getFunctionAssignRHS.840_256->exp.operands[0];
  second = _257;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.842_258 = function_assign_collect;
  D.253018 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.842_258, &second);

  <bb 294> :
  _259 = D.253018;
  retval.841 = _259 == 0B;
  if (retval.841 != 0)
    goto <bb 295>; [INV]
  else
    goto <bb 296>; [INV]

  <bb 295> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 299>; [INV]

  <bb 296> :
  function_assign_collect.843_260 = function_assign_collect;
  D.253019 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.843_260, &second);

  <bb 297> :
  _261 = D.253019;
  function_assign_array::operator= (&assign_array, _261);

  <bb 298> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 299> :
  assign_type.stmt = gc;
  D.253020 = gimple_assign_lhs (gc);

  <bb 300> :
  _262 = D.253020;
  assign_type.assign_tree = _262;
  D.253021 = cgraph_node::get_fun (node);

  <bb 301> :
  _263 = D.253021;
  _264 = _263->decl;
  assign_type.form_tree = _264;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 302> :
  function_assign_collect.844_265 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.844_265, &second, &assign_array);

  <bb 303> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 304> :
  ssa_var = {CLOBBER};

  <bb 305> :
  getFunctionAssignLHS.845_266 = getFunctionAssignLHS;
  _267 = getFunctionAssignLHS.845_266->base.code;
  if (_267 == 36)
    goto <bb 306>; [INV]
  else
    goto <bb 462>; [INV]

  <bb 306> :
  getFunctionAssignRHS.846_268 = getFunctionAssignRHS;
  _269 = getFunctionAssignRHS.846_268->base.code;
  if (_269 == 131)
    goto <bb 307>; [INV]
  else
    goto <bb 320>; [INV]

  <bb 307> :
  getFunctionAssignRHS.847_270 = getFunctionAssignRHS;
  second = getFunctionAssignRHS.847_270->exp.operands[0];
  _271 = second->base.code;
  if (_271 == 36)
    goto <bb 308>; [INV]
  else
    goto <bb 333>; [INV]

  <bb 308> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.849_272 = function_assign_collect;
  D.253026 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.849_272, &getFunctionAssignLHS);

  <bb 309> :
  _273 = D.253026;
  retval.848 = _273 == 0B;
  if (retval.848 != 0)
    goto <bb 310>; [INV]
  else
    goto <bb 311>; [INV]

  <bb 310> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 314>; [INV]

  <bb 311> :
  function_assign_collect.850_274 = function_assign_collect;
  D.253027 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.850_274, &getFunctionAssignLHS);

  <bb 312> :
  _275 = D.253027;
  function_assign_array::operator= (&assign_array, _275);

  <bb 313> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 314> :
  D.253028 = gimple_call_lhs (gc);

  <bb 315> :
  function_return_lhstree = D.253028;
  assign_type.stmt = gc;
  D.253029 = gimple_assign_lhs (gc);

  <bb 316> :
  _276 = D.253029;
  assign_type.assign_tree = _276;
  D.253030 = cgraph_node::get_fun (node);

  <bb 317> :
  _277 = D.253030;
  _278 = _277->decl;
  assign_type.form_tree = _278;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 318> :
  function_assign_collect.851_279 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.851_279, &getFunctionAssignLHS, &assign_array);

  <bb 319> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 333>; [INV]

  <bb 320> :
  getFunctionAssignRHS.852_280 = getFunctionAssignRHS;
  _281 = getFunctionAssignRHS.852_280->base.code;
  if (_281 == 153)
    goto <bb 321>; [INV]
  else
    goto <bb 333>; [INV]

  <bb 321> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.854_282 = function_assign_collect;
  D.253034 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.854_282, &getFunctionAssignLHS);

  <bb 322> :
  _283 = D.253034;
  retval.853 = _283 == 0B;
  if (retval.853 != 0)
    goto <bb 323>; [INV]
  else
    goto <bb 324>; [INV]

  <bb 323> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 327>; [INV]

  <bb 324> :
  function_assign_collect.855_284 = function_assign_collect;
  D.253035 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.855_284, &getFunctionAssignLHS);

  <bb 325> :
  _285 = D.253035;
  function_assign_array::operator= (&assign_array, _285);

  <bb 326> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 327> :
  D.253036 = gimple_assign_rhs1 (gc);

  <bb 328> :
  function_return_lhstree = D.253036;
  assign_type.stmt = gc;
  D.253037 = gimple_assign_rhs1 (gc);

  <bb 329> :
  _286 = D.253037;
  assign_type.assign_tree = _286;
  D.253038 = cgraph_node::get_fun (node);

  <bb 330> :
  _287 = D.253038;
  _288 = _287->decl;
  assign_type.form_tree = _288;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 331> :
  function_assign_collect.856_289 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.856_289, &getFunctionAssignLHS, &assign_array);

  <bb 332> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 333> :
  getFunctionAssignLHS.857_290 = getFunctionAssignLHS;
  _291 = getFunctionAssignLHS.857_290->base.code;
  if (_291 == 165)
    goto <bb 334>; [INV]
  else
    goto <bb 369>; [INV]

  <bb 334> :
  D.253042 = gimple_assign_lhs (gc);

  <bb 335> :
  _292 = D.253042;
  first = _292->exp.operands[0];
  _293 = first->base.code;
  if (_293 == 131)
    goto <bb 336>; [INV]
  else
    goto <bb 347>; [INV]

  <bb 336> :
  _294 = first->exp.operands[0];
  second = _294;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.859_295 = function_assign_collect;
  D.253043 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.859_295, &second);

  <bb 337> :
  _296 = D.253043;
  retval.858 = _296 == 0B;
  if (retval.858 != 0)
    goto <bb 338>; [INV]
  else
    goto <bb 339>; [INV]

  <bb 338> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 342>; [INV]

  <bb 339> :
  function_assign_collect.860_297 = function_assign_collect;
  D.253044 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.860_297, &second);

  <bb 340> :
  _298 = D.253044;
  function_assign_array::operator= (&assign_array, _298);

  <bb 341> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 342> :
  assign_type.stmt = gc;
  D.253045 = gimple_assign_lhs (gc);

  <bb 343> :
  _299 = D.253045;
  assign_type.assign_tree = _299;
  D.253046 = cgraph_node::get_fun (node);

  <bb 344> :
  _300 = D.253046;
  _301 = _300->decl;
  assign_type.form_tree = _301;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 345> :
  function_assign_collect.861_302 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.861_302, &second, &assign_array);

  <bb 346> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 347> :
  getFunctionAssignRHS.862_303 = getFunctionAssignRHS;
  _304 = getFunctionAssignRHS.862_303->base.code;
  if (_304 == 26)
    goto <bb 348>; [INV]
  else
    goto <bb 369>; [INV]

  <bb 348> :
  second = 0B;
  D.253050 = gimple_assign_lhs (gc);

  <bb 349> :
  _305 = D.253050;
  second = _305->exp.operands[0];
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  _306 = second->base.code;
  if (_306 == 153)
    goto <bb 350>; [INV]
  else
    goto <bb 368>; [INV]

  <bb 350> :
  def_stmt = second->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 351>; [INV]
  else
    goto <bb 368>; [INV]

  <bb 351> :
  retval.863 = is_gimple_assign (def_stmt);
  if (retval.863 != 0)
    goto <bb 352>; [INV]
  else
    goto <bb 368>; [INV]

  <bb 352> :
  D.253051 = gimple_assign_rhs1 (def_stmt);

  <bb 353> :
  _307 = D.253051;
  _308 = _307->base.code;
  retval.864 = _308 == 36;
  if (retval.864 != 0)
    goto <bb 354>; [INV]
  else
    goto <bb 368>; [INV]

  <bb 354> :
  function_assign_collect.866_309 = function_assign_collect;
  D.253052 = gimple_assign_rhs1 (def_stmt);

  <bb 355> :
  _310 = D.253052;
  D.195746 = _310;
  D.253053 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.866_309, &D.195746);

  <bb 356> :
  _311 = D.253053;
  retval.865 = _311 == 0B;
  D.195746 = {CLOBBER};
  if (retval.865 != 0)
    goto <bb 357>; [INV]
  else
    goto <bb 358>; [INV]

  <bb 357> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 362>; [INV]

  <bb 358> :
  function_assign_collect.867_312 = function_assign_collect;
  D.253055 = gimple_assign_rhs1 (def_stmt);

  <bb 359> :
  _313 = D.253055;
  D.195747 = _313;
  D.253056 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.867_312, &D.195747);

  <bb 360> :
  _314 = D.253056;
  function_assign_array::operator= (&assign_array, _314);

  <bb 361> :
  D.195747 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 362> :
  assign_type.stmt = gc;
  D.253058 = gimple_assign_lhs (gc);

  <bb 363> :
  _315 = D.253058;
  assign_type.assign_tree = _315;
  D.253059 = cgraph_node::get_fun (node);

  <bb 364> :
  _316 = D.253059;
  _317 = _316->decl;
  assign_type.form_tree = _317;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 365> :
  function_assign_collect.868_318 = function_assign_collect;
  D.253060 = gimple_assign_rhs1 (def_stmt);

  <bb 366> :
  _319 = D.253060;
  D.195749 = _319;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.868_318, &D.195749, &assign_array);

  <bb 367> :
  D.195749 = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 368> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};

  <bb 369> :
  getFunctionAssignRHS.869_320 = getFunctionAssignRHS;
  _321 = getFunctionAssignRHS.869_320->base.code;
  if (_321 == 165)
    goto <bb 370>; [INV]
  else
    goto <bb 382>; [INV]

  <bb 370> :
  getFunctionAssignRHS.870_322 = getFunctionAssignRHS;
  first = getFunctionAssignRHS.870_322->exp.operands[0];
  _323 = first->base.code;
  if (_323 == 131)
    goto <bb 371>; [INV]
  else
    goto <bb 382>; [INV]

  <bb 371> :
  _324 = first->exp.operands[0];
  second = _324;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.872_325 = function_assign_collect;
  D.253066 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.872_325, &second);

  <bb 372> :
  _326 = D.253066;
  retval.871 = _326 == 0B;
  if (retval.871 != 0)
    goto <bb 373>; [INV]
  else
    goto <bb 374>; [INV]

  <bb 373> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 377>; [INV]

  <bb 374> :
  function_assign_collect.873_327 = function_assign_collect;
  D.253067 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.873_327, &second);

  <bb 375> :
  _328 = D.253067;
  function_assign_array::operator= (&assign_array, _328);

  <bb 376> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 377> :
  assign_type.stmt = gc;
  D.253068 = gimple_assign_lhs (gc);

  <bb 378> :
  _329 = D.253068;
  assign_type.assign_tree = _329;
  D.253069 = cgraph_node::get_fun (node);

  <bb 379> :
  _330 = D.253069;
  _331 = _330->decl;
  assign_type.form_tree = _331;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 380> :
  function_assign_collect.874_332 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.874_332, &second, &assign_array);

  <bb 381> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 382> :
  getFunctionAssignRHS.875_333 = getFunctionAssignRHS;
  _334 = getFunctionAssignRHS.875_333->base.code;
  if (_334 == 49)
    goto <bb 383>; [INV]
  else
    goto <bb 394>; [INV]

  <bb 383> :
  getFunctionAssignRHS.876_335 = getFunctionAssignRHS;
  _336 = getFunctionAssignRHS.876_335->exp.operands[0];
  second = _336;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.878_337 = function_assign_collect;
  D.253073 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.878_337, &second);

  <bb 384> :
  _338 = D.253073;
  retval.877 = _338 == 0B;
  if (retval.877 != 0)
    goto <bb 385>; [INV]
  else
    goto <bb 386>; [INV]

  <bb 385> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 389>; [INV]

  <bb 386> :
  function_assign_collect.879_339 = function_assign_collect;
  D.253074 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.879_339, &second);

  <bb 387> :
  _340 = D.253074;
  function_assign_array::operator= (&assign_array, _340);

  <bb 388> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 389> :
  assign_type.stmt = gc;
  D.253075 = gimple_assign_lhs (gc);

  <bb 390> :
  _341 = D.253075;
  assign_type.assign_tree = _341;
  D.253076 = cgraph_node::get_fun (node);

  <bb 391> :
  _342 = D.253076;
  _343 = _342->decl;
  assign_type.form_tree = _343;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 392> :
  function_assign_collect.880_344 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.880_344, &second, &assign_array);

  <bb 393> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 521>; [INV]

  <bb 394> :
  getFunctionAssignRHS.881_345 = getFunctionAssignRHS;
  _346 = getFunctionAssignRHS.881_345->base.code;
  if (_346 == 47)
    goto <bb 395>; [INV]
  else
    goto <bb 521>; [INV]

  <bb 395> :
  getFunctionAssignRHS.882_347 = getFunctionAssignRHS;
  _348 = getFunctionAssignRHS.882_347->exp.operands[0];
  second = _348;
  getFunctionAssignRHS.883_349 = getFunctionAssignRHS;
  _350 = getFunctionAssignRHS.883_349->exp.operands[1];
  second2 = _350;
  second.884_351 = second;
  if (second.884_351 != 0B)
    goto <bb 396>; [INV]
  else
    goto <bb 449>; [INV]

  <bb 396> :
  second.885_352 = second;
  _353 = second.885_352->base.code;
  if (_353 == 165)
    goto <bb 397>; [INV]
  else
    goto <bb 416>; [INV]

  <bb 397> :
  second.886_354 = second;
  three = second.886_354->exp.operands[0];
  if (three != 0B)
    goto <bb 398>; [INV]
  else
    goto <bb 449>; [INV]

  <bb 398> :
  _355 = three->base.code;
  if (_355 == 153)
    goto <bb 399>; [INV]
  else
    goto <bb 449>; [INV]

  <bb 399> :
  def_stmt = three->ssa_name.def_stmt;
  retval.887 = is_gimple_assign (def_stmt);
  if (retval.887 != 0)
    goto <bb 400>; [INV]
  else
    goto <bb 449>; [INV]

  <bb 400> :
  D.253080 = gimple_assign_rhs1 (def_stmt);

  <bb 401> :
  _356 = D.253080;
  _357 = _356->base.code;
  retval.888 = _357 == 36;
  if (retval.888 != 0)
    goto <bb 402>; [INV]
  else
    goto <bb 449>; [INV]

  <bb 402> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.890_358 = function_assign_collect;
  D.253081 = gimple_assign_rhs1 (def_stmt);

  <bb 403> :
  _359 = D.253081;
  D.195765 = _359;
  D.253082 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.890_358, &D.195765);

  <bb 404> :
  _360 = D.253082;
  retval.889 = _360 == 0B;
  D.195765 = {CLOBBER};
  if (retval.889 != 0)
    goto <bb 405>; [INV]
  else
    goto <bb 406>; [INV]

  <bb 405> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 410>; [INV]

  <bb 406> :
  function_assign_collect.891_361 = function_assign_collect;
  D.253084 = gimple_assign_rhs1 (def_stmt);

  <bb 407> :
  _362 = D.253084;
  D.195766 = _362;
  D.253085 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.891_361, &D.195766);

  <bb 408> :
  _363 = D.253085;
  function_assign_array::operator= (&assign_array, _363);

  <bb 409> :
  D.195766 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 410> :
  assign_type.stmt = gc;
  D.253087 = gimple_assign_lhs (def_stmt);

  <bb 411> :
  _364 = D.253087;
  assign_type.assign_tree = _364;
  D.253088 = cgraph_node::get_fun (node);

  <bb 412> :
  _365 = D.253088;
  _366 = _365->decl;
  assign_type.form_tree = _366;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 413> :
  function_assign_collect.892_367 = function_assign_collect;
  D.253089 = gimple_assign_rhs1 (def_stmt);

  <bb 414> :
  _368 = D.253089;
  D.195768 = _368;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.892_367, &D.195768, &assign_array);

  <bb 415> :
  D.195768 = {CLOBBER};
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 449>; [INV]

  <bb 416> :
  second.893_369 = second;
  _370 = second.893_369->base.code;
  if (_370 == 36)
    goto <bb 417>; [INV]
  else
    goto <bb 427>; [INV]

  <bb 417> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.895_371 = function_assign_collect;
  D.253094 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.895_371, &second);

  <bb 418> :
  _372 = D.253094;
  retval.894 = _372 == 0B;
  if (retval.894 != 0)
    goto <bb 419>; [INV]
  else
    goto <bb 420>; [INV]

  <bb 419> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 423>; [INV]

  <bb 420> :
  function_assign_collect.896_373 = function_assign_collect;
  D.253095 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.896_373, &second);

  <bb 421> :
  _374 = D.253095;
  function_assign_array::operator= (&assign_array, _374);

  <bb 422> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 423> :
  assign_type.stmt = gc;
  second.897_375 = second;
  assign_type.assign_tree = second.897_375;
  D.253096 = cgraph_node::get_fun (node);

  <bb 424> :
  _376 = D.253096;
  _377 = _376->decl;
  assign_type.form_tree = _377;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 425> :
  function_assign_collect.898_378 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.898_378, &second, &assign_array);

  <bb 426> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 449>; [INV]

  <bb 427> :
  second.899_379 = second;
  _380 = second.899_379->base.code;
  if (_380 == 47)
    goto <bb 428>; [INV]
  else
    goto <bb 449>; [INV]

  <bb 428> :
  getFunctionAssignLHS.900_381 = getFunctionAssignLHS;
  three = getFunctionAssignLHS.900_381->exp.operands[0];
  if (three != 0B)
    goto <bb 429>; [INV]
  else
    goto <bb 449>; [INV]

  <bb 429> :
  _382 = three->base.code;
  if (_382 == 165)
    goto <bb 430>; [INV]
  else
    goto <bb 449>; [INV]

  <bb 430> :
  second.901_383 = second;
  four = second.901_383->exp.operands[0];
  if (four != 0B)
    goto <bb 431>; [INV]
  else
    goto <bb 449>; [INV]

  <bb 431> :
  _384 = four->base.code;
  if (_384 == 153)
    goto <bb 432>; [INV]
  else
    goto <bb 449>; [INV]

  <bb 432> :
  def_stmt = four->ssa_name.def_stmt;
  retval.902 = is_gimple_assign (def_stmt);
  if (retval.902 != 0)
    goto <bb 433>; [INV]
  else
    goto <bb 449>; [INV]

  <bb 433> :
  D.253100 = gimple_assign_rhs1 (def_stmt);

  <bb 434> :
  _385 = D.253100;
  _386 = _385->base.code;
  retval.903 = _386 == 36;
  if (retval.903 != 0)
    goto <bb 435>; [INV]
  else
    goto <bb 449>; [INV]

  <bb 435> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.905_387 = function_assign_collect;
  D.253101 = gimple_assign_rhs1 (def_stmt);

  <bb 436> :
  _388 = D.253101;
  D.195777 = _388;
  D.253102 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.905_387, &D.195777);

  <bb 437> :
  _389 = D.253102;
  retval.904 = _389 == 0B;
  D.195777 = {CLOBBER};
  if (retval.904 != 0)
    goto <bb 438>; [INV]
  else
    goto <bb 439>; [INV]

  <bb 438> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 443>; [INV]

  <bb 439> :
  function_assign_collect.906_390 = function_assign_collect;
  D.253104 = gimple_assign_rhs1 (def_stmt);

  <bb 440> :
  _391 = D.253104;
  D.195778 = _391;
  D.253105 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.906_390, &D.195778);

  <bb 441> :
  _392 = D.253105;
  function_assign_array::operator= (&assign_array, _392);

  <bb 442> :
  D.195778 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 443> :
  assign_type.stmt = gc;
  D.253107 = gimple_assign_lhs (def_stmt);

  <bb 444> :
  _393 = D.253107;
  assign_type.assign_tree = _393;
  D.253108 = cgraph_node::get_fun (node);

  <bb 445> :
  _394 = D.253108;
  _395 = _394->decl;
  assign_type.form_tree = _395;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 446> :
  function_assign_collect.907_396 = function_assign_collect;
  D.253109 = gimple_assign_rhs1 (def_stmt);

  <bb 447> :
  _397 = D.253109;
  D.195780 = _397;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.907_396, &D.195780, &assign_array);

  <bb 448> :
  D.195780 = {CLOBBER};
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 449> :
  second2.908_398 = second2;
  if (second2.908_398 != 0B)
    goto <bb 450>; [INV]
  else
    goto <bb 461>; [INV]

  <bb 450> :
  second2.909_399 = second2;
  _400 = second2.909_399->base.code;
  if (_400 == 35)
    goto <bb 451>; [INV]
  else
    goto <bb 461>; [INV]

  <bb 451> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.911_401 = function_assign_collect;
  D.253114 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.911_401, &second2);

  <bb 452> :
  _402 = D.253114;
  retval.910 = _402 == 0B;
  if (retval.910 != 0)
    goto <bb 453>; [INV]
  else
    goto <bb 454>; [INV]

  <bb 453> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 457>; [INV]

  <bb 454> :
  function_assign_collect.912_403 = function_assign_collect;
  D.253115 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.912_403, &second2);

  <bb 455> :
  _404 = D.253115;
  function_assign_array::operator= (&assign_array, _404);

  <bb 456> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 457> :
  assign_type.stmt = gc;
  getFunctionAssignRHS.913_405 = getFunctionAssignRHS;
  assign_type.assign_tree = getFunctionAssignRHS.913_405;
  D.253116 = cgraph_node::get_fun (node);

  <bb 458> :
  _406 = D.253116;
  _407 = _406->decl;
  assign_type.form_tree = _407;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 459> :
  function_assign_collect.914_408 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.914_408, &second2, &assign_array);

  <bb 460> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 461> :
  second = {CLOBBER};
  second2 = {CLOBBER};
  goto <bb 521>; [INV]

  <bb 462> :
  getFunctionAssignLHS.915_409 = getFunctionAssignLHS;
  _410 = getFunctionAssignLHS.915_409->base.code;
  if (_410 == 47)
    goto <bb 463>; [INV]
  else
    goto <bb 508>; [INV]

  <bb 463> :
  getFunctionAssignLHS.916_411 = getFunctionAssignLHS;
  _412 = getFunctionAssignLHS.916_411->exp.operands[0];
  second = _412;
  getFunctionAssignLHS.917_413 = getFunctionAssignLHS;
  _414 = getFunctionAssignLHS.917_413->exp.operands[1];
  second2 = _414;
  second.918_415 = second;
  if (second.918_415 != 0B)
    goto <bb 464>; [INV]
  else
    goto <bb 495>; [INV]

  <bb 464> :
  second.919_416 = second;
  _417 = second.919_416->base.code;
  if (_417 == 165)
    goto <bb 465>; [INV]
  else
    goto <bb 484>; [INV]

  <bb 465> :
  second.920_418 = second;
  three = second.920_418->exp.operands[0];
  if (three != 0B)
    goto <bb 466>; [INV]
  else
    goto <bb 495>; [INV]

  <bb 466> :
  _419 = three->base.code;
  if (_419 == 153)
    goto <bb 467>; [INV]
  else
    goto <bb 495>; [INV]

  <bb 467> :
  def_stmt = three->ssa_name.def_stmt;
  retval.921 = is_gimple_assign (def_stmt);
  if (retval.921 != 0)
    goto <bb 468>; [INV]
  else
    goto <bb 495>; [INV]

  <bb 468> :
  D.253121 = gimple_assign_rhs1 (def_stmt);

  <bb 469> :
  _420 = D.253121;
  _421 = _420->base.code;
  retval.922 = _421 == 36;
  if (retval.922 != 0)
    goto <bb 470>; [INV]
  else
    goto <bb 495>; [INV]

  <bb 470> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.924_422 = function_assign_collect;
  D.253122 = gimple_assign_rhs1 (def_stmt);

  <bb 471> :
  _423 = D.253122;
  D.195790 = _423;
  D.253123 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.924_422, &D.195790);

  <bb 472> :
  _424 = D.253123;
  retval.923 = _424 == 0B;
  D.195790 = {CLOBBER};
  if (retval.923 != 0)
    goto <bb 473>; [INV]
  else
    goto <bb 474>; [INV]

  <bb 473> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 478>; [INV]

  <bb 474> :
  function_assign_collect.925_425 = function_assign_collect;
  D.253125 = gimple_assign_rhs1 (def_stmt);

  <bb 475> :
  _426 = D.253125;
  D.195791 = _426;
  D.253126 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.925_425, &D.195791);

  <bb 476> :
  _427 = D.253126;
  function_assign_array::operator= (&assign_array, _427);

  <bb 477> :
  D.195791 = {CLOBBER};
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 478> :
  assign_type.stmt = gc;
  D.253128 = gimple_assign_lhs (def_stmt);

  <bb 479> :
  _428 = D.253128;
  assign_type.assign_tree = _428;
  D.253129 = cgraph_node::get_fun (node);

  <bb 480> :
  _429 = D.253129;
  _430 = _429->decl;
  assign_type.form_tree = _430;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 481> :
  function_assign_collect.926_431 = function_assign_collect;
  D.253130 = gimple_assign_rhs1 (def_stmt);

  <bb 482> :
  _432 = D.253130;
  D.195793 = _432;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.926_431, &D.195793, &assign_array);

  <bb 483> :
  D.195793 = {CLOBBER};
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  goto <bb 495>; [INV]

  <bb 484> :
  second.927_433 = second;
  _434 = second.927_433->base.code;
  if (_434 == 36)
    goto <bb 485>; [INV]
  else
    goto <bb 495>; [INV]

  <bb 485> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.929_435 = function_assign_collect;
  D.253135 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.929_435, &second);

  <bb 486> :
  _436 = D.253135;
  retval.928 = _436 == 0B;
  if (retval.928 != 0)
    goto <bb 487>; [INV]
  else
    goto <bb 488>; [INV]

  <bb 487> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 491>; [INV]

  <bb 488> :
  function_assign_collect.930_437 = function_assign_collect;
  D.253136 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.930_437, &second);

  <bb 489> :
  _438 = D.253136;
  function_assign_array::operator= (&assign_array, _438);

  <bb 490> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 491> :
  assign_type.stmt = gc;
  second.931_439 = second;
  assign_type.assign_tree = second.931_439;
  D.253137 = cgraph_node::get_fun (node);

  <bb 492> :
  _440 = D.253137;
  _441 = _440->decl;
  assign_type.form_tree = _441;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 493> :
  function_assign_collect.932_442 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.932_442, &second, &assign_array);

  <bb 494> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 495> :
  second2.933_443 = second2;
  if (second2.933_443 != 0B)
    goto <bb 496>; [INV]
  else
    goto <bb 507>; [INV]

  <bb 496> :
  second2.934_444 = second2;
  _445 = second2.934_444->base.code;
  if (_445 == 35)
    goto <bb 497>; [INV]
  else
    goto <bb 507>; [INV]

  <bb 497> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.936_446 = function_assign_collect;
  D.253141 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.936_446, &second2);

  <bb 498> :
  _447 = D.253141;
  retval.935 = _447 == 0B;
  if (retval.935 != 0)
    goto <bb 499>; [INV]
  else
    goto <bb 500>; [INV]

  <bb 499> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 503>; [INV]

  <bb 500> :
  function_assign_collect.937_448 = function_assign_collect;
  D.253142 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.937_448, &second2);

  <bb 501> :
  _449 = D.253142;
  function_assign_array::operator= (&assign_array, _449);

  <bb 502> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 503> :
  assign_type.stmt = gc;
  getFunctionAssignLHS.938_450 = getFunctionAssignLHS;
  assign_type.assign_tree = getFunctionAssignLHS.938_450;
  D.253143 = cgraph_node::get_fun (node);

  <bb 504> :
  _451 = D.253143;
  _452 = _451->decl;
  assign_type.form_tree = _452;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 505> :
  function_assign_collect.939_453 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.939_453, &second2, &assign_array);

  <bb 506> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 507> :
  second = {CLOBBER};
  second2 = {CLOBBER};
  goto <bb 521>; [INV]

  <bb 508> :
  getFunctionAssignLHS.940_454 = getFunctionAssignLHS;
  _455 = getFunctionAssignLHS.940_454->base.code;
  if (_455 == 49)
    goto <bb 509>; [INV]
  else
    goto <bb 521>; [INV]

  <bb 509> :
  debug_gimple_stmt (gc);

  <bb 510> :
  getFunctionAssignLHS.941_456 = getFunctionAssignLHS;
  _457 = getFunctionAssignLHS.941_456->exp.operands[0];
  second = _457;
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.943_458 = function_assign_collect;
  D.253148 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.943_458, &second);

  <bb 511> :
  _459 = D.253148;
  retval.942 = _459 == 0B;
  if (retval.942 != 0)
    goto <bb 512>; [INV]
  else
    goto <bb 513>; [INV]

  <bb 512> :
  std::vector<assign_type>::operator= (&assign_array.assign_type_array, &assign_type_array);
  goto <bb 516>; [INV]

  <bb 513> :
  function_assign_collect.944_460 = function_assign_collect;
  D.253149 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.944_460, &second);

  <bb 514> :
  _461 = D.253149;
  function_assign_array::operator= (&assign_array, _461);

  <bb 515> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 516> :
  assign_type.stmt = gc;
  D.253150 = gimple_assign_rhs1 (gc);

  <bb 517> :
  _462 = D.253150;
  assign_type.assign_tree = _462;
  D.253151 = cgraph_node::get_fun (node);

  <bb 518> :
  _463 = D.253151;
  _464 = _463->decl;
  assign_type.form_tree = _464;
  std::vector<assign_type>::push_back (&assign_array.assign_type_array, &assign_type);

  <bb 519> :
  function_assign_collect.945_465 = function_assign_collect;
  hash_map<tree_node*, function_assign_array>::put (function_assign_collect.945_465, &second, &assign_array);

  <bb 520> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};

  <bb 521> :
  getFunctionAssignRHS = {CLOBBER};
  getFunctionAssignLHS = {CLOBBER};

  <bb 522> :
<L381>:
  return;

  <bb 523> :
<L382>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 4

  <bb 524> :
<L383>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 3

  <bb 525> :
<L384>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 2

  <bb 526> :
<L385>:
  second = {CLOBBER};
  resx 1

  <bb 527> :
<L386>:
  D.195279 = {CLOBBER};
  resx 16

  <bb 528> :
<L387>:
  D.195280 = {CLOBBER};
  resx 18

  <bb 529> :
<L388>:
  D.195282 = {CLOBBER};
  resx 20

  <bb 530> :
<L389>:
  assign_type = {CLOBBER};
  resx 15

  <bb 531> :
<L390>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 14

  <bb 532> :
<L391>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 13

  <bb 533> :
<L392>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  resx 12

  <bb 534> :
<L393>:
  function_free_array::~function_free_array (&fun_array);
  resx 11

  <bb 535> :
<L394>:
  std::vector<free_type>::~vector (&free_type_array);
  resx 10

  <bb 536> :
<L395>:
  getFucntionDecl = {CLOBBER};
  free_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  free_type = {CLOBBER};
  resx 9

  <bb 537> :
<L396>:
  ret_type = {CLOBBER};
  resx 32

  <bb 538> :
<L397>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 31

  <bb 539> :
<L398>:
  function_return_array::~function_return_array (&fun_array);
  resx 30

  <bb 540> :
<L399>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  resx 29

  <bb 541> :
<L400>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 39

  <bb 542> :
<L401>:
  function_return_array::~function_return_array (&fun_array);
  resx 38

  <bb 543> :
<L402>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  getFucntionDecl = {CLOBBER};
  ret_type = {CLOBBER};
  resx 37

  <bb 544> :
<L403>:
  assign_type = {CLOBBER};
  resx 46

  <bb 545> :
<L404>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 45

  <bb 546> :
<L405>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 44

  <bb 547> :
<L406>:
  getFunctionCallarg = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 43

  <bb 548> :
<L407>:
  std::vector<pthread_detched_type>::~vector (&pthread_detched_array);
  resx 53

  <bb 549> :
<L408>:
  function_pthread_detched_array::~function_pthread_detched_array (&fun_array);
  resx 52

  <bb 550> :
<L409>:
  getFucntionDecl = {CLOBBER};
  fun_array = {CLOBBER};
  pthread_detched_array = {CLOBBER};
  pthread_detched_type = {CLOBBER};
  resx 51

  <bb 551> :
<L410>:
  std::vector<pthread_exit_type>::~vector (&pthread_exit_array);
  resx 59

  <bb 552> :
<L411>:
  function_pthread_exit_array::~function_pthread_exit_array (&fun_array);
  resx 58

  <bb 553> :
<L412>:
  getFucntionDecl = {CLOBBER};
  fun_array = {CLOBBER};
  pthread_exit_array = {CLOBBER};
  pthread_exit_type = {CLOBBER};
  resx 57

  <bb 554> :
<L413>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 67

  <bb 555> :
<L414>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 66

  <bb 556> :
<L415>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 65

  <bb 557> :
<L416>:
  getVARDECLtree = {CLOBBER};
  resx 64

  <bb 558> :
<L417>:
  D.195693 = {CLOBBER};
  resx 75

  <bb 559> :
<L418>:
  D.195694 = {CLOBBER};
  resx 77

  <bb 560> :
<L419>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 74

  <bb 561> :
<L420>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 73

  <bb 562> :
<L421>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  second = {CLOBBER};
  resx 72

  <bb 563> :
<L422>:
  function_return_array::~function_return_array (&fun_array);
  resx 86

  <bb 564> :
<L423>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 85

  <bb 565> :
<L424>:
  getFucntionDecl = {CLOBBER};
  ret_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  ret_type = {CLOBBER};
  resx 84

  <bb 566> :
<L425>:
  getreturnFucntionDecl = {CLOBBER};
  resx 63

  <bb 567> :
<L426>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 95

  <bb 568> :
<L427>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 94

  <bb 569> :
<L428>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 93

  <bb 570> :
<L429>:
  ssa_var = {CLOBBER};
  resx 92

  <bb 571> :
<L430>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 103

  <bb 572> :
<L431>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 102

  <bb 573> :
<L432>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 101

  <bb 574> :
<L433>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 109

  <bb 575> :
<L434>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 108

  <bb 576> :
<L435>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 107

  <bb 577> :
<L436>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 115

  <bb 578> :
<L437>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 114

  <bb 579> :
<L438>:
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 113

  <bb 580> :
<L439>:
  ssa_var = {CLOBBER};
  resx 100

  <bb 581> :
<L440>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 122

  <bb 582> :
<L441>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 121

  <bb 583> :
<L442>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 120

  <bb 584> :
<L443>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 128

  <bb 585> :
<L444>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 127

  <bb 586> :
<L445>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 126

  <bb 587> :
<L446>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 134

  <bb 588> :
<L447>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 133

  <bb 589> :
<L448>:
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 132

  <bb 590> :
<L449>:
  D.195746 = {CLOBBER};
  resx 142

  <bb 591> :
<L450>:
  D.195747 = {CLOBBER};
  resx 144

  <bb 592> :
<L451>:
  D.195749 = {CLOBBER};
  resx 146

  <bb 593> :
<L452>:
  assign_type = {CLOBBER};
  resx 141

  <bb 594> :
<L453>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 140

  <bb 595> :
<L454>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 139

  <bb 596> :
<L455>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  resx 138

  <bb 597> :
<L456>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 154

  <bb 598> :
<L457>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 153

  <bb 599> :
<L458>:
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 152

  <bb 600> :
<L459>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 160

  <bb 601> :
<L460>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 159

  <bb 602> :
<L461>:
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 158

  <bb 603> :
<L462>:
  D.195765 = {CLOBBER};
  resx 168

  <bb 604> :
<L463>:
  D.195766 = {CLOBBER};
  resx 170

  <bb 605> :
<L464>:
  D.195768 = {CLOBBER};
  resx 172

  <bb 606> :
<L465>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 167

  <bb 607> :
<L466>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 166

  <bb 608> :
<L467>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 165

  <bb 609> :
<L468>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 179

  <bb 610> :
<L469>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 178

  <bb 611> :
<L470>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 177

  <bb 612> :
<L471>:
  D.195777 = {CLOBBER};
  resx 186

  <bb 613> :
<L472>:
  D.195778 = {CLOBBER};
  resx 188

  <bb 614> :
<L473>:
  D.195780 = {CLOBBER};
  resx 190

  <bb 615> :
<L474>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 185

  <bb 616> :
<L475>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 184

  <bb 617> :
<L476>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 183

  <bb 618> :
<L477>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 197

  <bb 619> :
<L478>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 196

  <bb 620> :
<L479>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 195

  <bb 621> :
<L480>:
  second = {CLOBBER};
  second2 = {CLOBBER};
  resx 164

  <bb 622> :
<L481>:
  D.195790 = {CLOBBER};
  resx 206

  <bb 623> :
<L482>:
  D.195791 = {CLOBBER};
  resx 208

  <bb 624> :
<L483>:
  D.195793 = {CLOBBER};
  resx 210

  <bb 625> :
<L484>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 205

  <bb 626> :
<L485>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 204

  <bb 627> :
<L486>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 203

  <bb 628> :
<L487>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 217

  <bb 629> :
<L488>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 216

  <bb 630> :
<L489>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 215

  <bb 631> :
<L490>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 223

  <bb 632> :
<L491>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 222

  <bb 633> :
<L492>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 221

  <bb 634> :
<L493>:
  second = {CLOBBER};
  second2 = {CLOBBER};
  resx 202

  <bb 635> :
<L494>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 230

  <bb 636> :
<L495>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 229

  <bb 637> :
<L496>:
  second = {CLOBBER};
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  assign_type = {CLOBBER};
  resx 228

  <bb 638> :
<L497>:
  getFunctionAssignRHS = {CLOBBER};
  getFunctionAssignLHS = {CLOBBER};
  resx 91

}



;; Function std::vector<free_type>::vector (_ZNSt6vectorI9free_typeSaIS0_EEC2Ev, funcdef_no=6369, decl_uid=173484, cgraph_uid=3344, symbol_order=4122)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<free_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.173492;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_ZNSt12_Vector_baseI9free_typeSaIS0_EEC2Ev, funcdef_no=6367, decl_uid=172942, cgraph_uid=3341, symbol_order=4119)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI9free_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7733, decl_uid=172834, cgraph_uid=4365, symbol_order=5154)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<free_type>::allocator (this);
  _1 = &this->D.172837;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<free_type>::allocator (_ZNSaI9free_typeEC2Ev, funcdef_no=8649, decl_uid=172612, cgraph_uid=5281, symbol_order=6074)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<free_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<free_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI9free_typeEC2Ev, funcdef_no=9456, decl_uid=172541, cgraph_uid=6088, symbol_order=6881)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function function_free_array::function_free_array (_ZN19function_free_arrayC2Ev, funcdef_no=6372, decl_uid=192776, cgraph_uid=3347, symbol_order=4125)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_free_array::function_free_array (struct function_free_array * const this)
{
  <bb 2> :
  _1 = &this->free_type_array;
  std::vector<free_type>::vector (_1);
  return;

}



;; Function function_free_array::operator= (_ZN19function_free_arrayaSERKS_, funcdef_no=6374, decl_uid=195232, cgraph_uid=3349, symbol_order=4127)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_free_array & function_free_array::operator= (struct function_free_array * const this, const struct function_free_array & D.195233)
{
  struct function_free_array & D.253158;

  <bb 2> :
  _1 = &D.195233->free_type_array;
  _2 = &this->free_type_array;
  std::vector<free_type>::operator= (_2, _1);
  D.253158 = this;

  <bb 3> :
<L0>:
  return D.253158;

}



;; Function std::vector<free_type>::operator= (_ZNSt6vectorI9free_typeSaIS0_EEaSERKS2_, funcdef_no=7741, decl_uid=173070, cgraph_uid=4375, symbol_order=5164)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<free_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct free_type * D.253193;
  struct free_type * __tmp;
  const size_type __xlen;
  struct vector & D.253191;
  struct __normal_iterator D.253188;
  struct __normal_iterator D.253187;
  struct __normal_iterator D.253186;
  struct __normal_iterator D.253185;
  struct __normal_iterator D.253184;
  bool retval.950;
  struct __normal_iterator D.253179;
  struct __normal_iterator D.253178;
  bool retval.949;
  bool iftmp.948;
  bool retval.947;
  bool retval.946;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.946 = __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_propagate_on_copy_assign ();
  if (retval.946 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.173492;
  _4 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.173492;
  _6 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.948 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.948 = 0;

  <bb 8> :
  retval.947 = iftmp.948;
  if (retval.947 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<free_type>::clear (this);
  _8 = &this->D.173492;
  _9 = this->D.173492._M_impl.D.172837._M_end_of_storage;
  _10 = this->D.173492._M_impl.D.172837._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 24;
  _13 = (long unsigned int) _12;
  _14 = this->D.173492._M_impl.D.172837._M_start;
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (_8, _14, _13);
  this->D.173492._M_impl.D.172837._M_start = 0B;
  this->D.173492._M_impl.D.172837._M_finish = 0B;
  this->D.173492._M_impl.D.172837._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.173492;
  _16 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.173492;
  _18 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<free_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<free_type>::size (__x);
  _19 = std::vector<free_type>::capacity (this);
  retval.949 = __xlen > _19;
  if (retval.949 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.253178 = std::vector<free_type>::end (__x);
  D.253179 = std::vector<free_type>::begin (__x);
  D.253193 = std::vector<free_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (this, __xlen, D.253179, D.253178);
  __tmp = D.253193;
  _20 = &this->D.173492;
  _21 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.173492._M_impl.D.172837._M_finish;
  _23 = this->D.173492._M_impl.D.172837._M_start;
  std::_Destroy<free_type*, free_type> (_23, _22, _21);
  _24 = &this->D.173492;
  _25 = this->D.173492._M_impl.D.172837._M_end_of_storage;
  _26 = this->D.173492._M_impl.D.172837._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 24;
  _29 = (long unsigned int) _28;
  _30 = this->D.173492._M_impl.D.172837._M_start;
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (_24, _30, _29);
  this->D.173492._M_impl.D.172837._M_start = __tmp;
  _31 = this->D.173492._M_impl.D.172837._M_start;
  _32 = __xlen * 24;
  _33 = _31 + _32;
  this->D.173492._M_impl.D.172837._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<free_type>::size (this);
  retval.950 = __xlen <= _34;
  if (retval.950 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.173492;
  _36 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_35);
  D.253184 = std::vector<free_type>::end (this);
  D.253185 = std::vector<free_type>::begin (this);
  D.253186 = std::vector<free_type>::end (__x);
  D.253187 = std::vector<free_type>::begin (__x);
  D.253188 = std::copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (D.253187, D.253186, D.253185);
  std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type> (D.253188, D.253184, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.173492._M_impl.D.172837._M_start;
  _38 = __x->D.173492._M_impl.D.172837._M_start;
  _39 = std::vector<free_type>::size (this);
  _40 = _39 * 24;
  _41 = _38 + _40;
  _42 = __x->D.173492._M_impl.D.172837._M_start;
  std::copy<free_type*, free_type*> (_42, _41, _37);
  _43 = &this->D.173492;
  _44 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.173492._M_impl.D.172837._M_finish;
  _46 = __x->D.173492._M_impl.D.172837._M_finish;
  _47 = __x->D.173492._M_impl.D.172837._M_start;
  _48 = std::vector<free_type>::size (this);
  _49 = _48 * 24;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<free_type*, free_type*, free_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.173492._M_impl.D.172837._M_start;
  _52 = __xlen * 24;
  _53 = _51 + _52;
  this->D.173492._M_impl.D.172837._M_finish = _53;

  <bb 17> :
  D.253191 = this;

  <bb 18> :
<L19>:
  return D.253191;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI9free_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7742, decl_uid=172704, cgraph_uid=4373, symbol_order=5162)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_propagate_on_copy_assign ()
{
  bool D.253194;

  <bb 2> :
  D.253194 = 0;

  <bb 3> :
<L0>:
  return D.253194;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI9free_typeES1_E15_S_always_equalEv, funcdef_no=7743, decl_uid=172707, cgraph_uid=4374, symbol_order=5163)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<free_type>, free_type>::_S_always_equal ()
{
  bool D.253196;

  <bb 2> :
  D.253196 = 1;

  <bb 3> :
<L0>:
  return D.253196;

}



;; Function std::operator!= (_ZStneRKSaI9free_typeES2_, funcdef_no=8658, decl_uid=172590, cgraph_uid=5290, symbol_order=6083)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.225658, const struct allocator & D.225659)
{
  bool D.253198;

  <bb 2> :
  D.253198 = 0;

  <bb 3> :
<L0>:
  return D.253198;

}



;; Function std::vector<free_type>::clear (_ZNSt6vectorI9free_typeSaIS0_EE5clearEv, funcdef_no=8659, decl_uid=173222, cgraph_uid=5291, symbol_order=6084)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<free_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.173492._M_impl.D.172837._M_start;
  std::vector<free_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<free_type>::_M_erase_at_end (_ZNSt6vectorI9free_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9459, decl_uid=173350, cgraph_uid=6091, symbol_order=6884)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<free_type>::_M_erase_at_end (struct vector * const this, struct free_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.173492._M_impl.D.172837._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 24;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.173492;
  _5 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.173492._M_impl.D.172837._M_finish;
  std::_Destroy<free_type*, free_type> (__pos, _6, _5);
  this->D.173492._M_impl.D.172837._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<free_type> > (_ZSt15__alloc_on_copyISaI9free_typeEEvRT_RKS2_, funcdef_no=8660, decl_uid=214142, cgraph_uid=5292, symbol_order=6085)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<free_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<free_type>::capacity (_ZNKSt6vectorI9free_typeSaIS0_EE8capacityEv, funcdef_no=8661, decl_uid=173138, cgraph_uid=5293, symbol_order=6086)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<free_type>::capacity (const struct vector * const this)
{
  size_type D.253203;

  <bb 2> :
  _1 = this->D.173492._M_impl.D.172837._M_end_of_storage;
  _2 = this->D.173492._M_impl.D.172837._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.253203 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.253203;

}



;; Function std::vector<free_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (_ZNSt6vectorI9free_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8662, decl_uid=214149, cgraph_uid=5294, symbol_order=6087)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct free_type * std::vector<free_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct free_type * D.253207;
  struct free_type * __result;
  struct free_type * D.253205;

  <bb 2> :
  _1 = &this->D.173492;
  D.253207 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_allocate (_1, __n);
  __result = D.253207;
  _2 = &this->D.173492;
  _3 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, free_type*, free_type> (__first, __last, __result, _3);

  <bb 3> :
  D.253205 = __result;

  <bb 4> :
<L0>:
  return D.253205;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.173492;
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<free_type>::end (_ZNSt6vectorI9free_typeSaIS0_EE3endEv, funcdef_no=8665, decl_uid=173105, cgraph_uid=5297, symbol_order=6090)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<free_type>::end (struct vector * const this)
{
  struct iterator D.225745;
  struct iterator D.253211;

  <bb 2> :
  _1 = &this->D.173492._M_impl.D.172837._M_finish;
  __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::__normal_iterator (&D.225745, _1);
  D.253211 = D.225745;
  D.225745 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253211;

}



;; Function __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9462, decl_uid=214231, cgraph_uid=6094, symbol_order=6887)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::__normal_iterator (struct __normal_iterator * const this, struct free_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<free_type>::begin (_ZNSt6vectorI9free_typeSaIS0_EE5beginEv, funcdef_no=8663, decl_uid=173101, cgraph_uid=5295, symbol_order=6088)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<free_type>::begin (struct vector * const this)
{
  struct iterator D.225699;
  struct iterator D.253214;

  <bb 2> :
  _1 = &this->D.173492._M_impl.D.172837._M_start;
  __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::__normal_iterator (&D.225699, _1);
  D.253214 = D.225699;
  D.225699 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253214;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8664, decl_uid=214250, cgraph_uid=5296, symbol_order=6089)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.253219;
  struct __normal_iterator D.253218;
  struct __normal_iterator D.253217;

  <bb 2> :
  D.253218 = std::__miter_base<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (__last);
  D.253219 = std::__miter_base<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (__first);
  D.253217 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (D.253219, D.253218, __result);

  <bb 3> :
<L0>:
  return D.253217;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=9464, decl_uid=225711, cgraph_uid=6096, symbol_order=6889)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.253221;

  <bb 2> :
  D.253221 = __it;

  <bb 3> :
<L0>:
  return D.253221;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK9free_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9465, decl_uid=225717, cgraph_uid=6098, symbol_order=6891)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >, __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct free_type * D.253225;
  struct __normal_iterator D.253223;

  <bb 2> :
  _1 = std::__niter_base<free_type*, std::vector<free_type> > (__result);
  _2 = std::__niter_base<const free_type*, std::vector<free_type> > (__last);
  _3 = std::__niter_base<const free_type*, std::vector<free_type> > (__first);
  D.253225 = std::__copy_move_a1<false, const free_type*, free_type*> (_3, _2, _1);
  _4 = D.253225;
  D.253223 = std::__niter_wrap<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.253223;

}



;; Function std::__niter_base<free_type*, std::vector<free_type> > (_ZSt12__niter_baseIP9free_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10132, decl_uid=236715, cgraph_uid=6764, symbol_order=7561)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__niter_base<free_type*, std::vector<free_type> > (struct __normal_iterator __it)
{
  struct free_type * D.253226;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (&__it);
  D.253226 = *_1;

  <bb 3> :
<L0>:
  return D.253226;

}



;; Function __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9476, decl_uid=214218, cgraph_uid=6108, symbol_order=6901)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * const & __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (const struct __normal_iterator * const this)
{
  struct free_type * const & D.253228;

  <bb 2> :
  D.253228 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.253228;

}



;; Function std::__niter_base<const free_type*, std::vector<free_type> > (_ZSt12__niter_baseIPK9free_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10131, decl_uid=236564, cgraph_uid=6763, symbol_order=7560)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct free_type * std::__niter_base<const free_type*, std::vector<free_type> > (struct __normal_iterator __it)
{
  const struct free_type * D.253230;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const free_type*, std::vector<free_type> >::base (&__it);
  D.253230 = *_1;

  <bb 3> :
<L0>:
  return D.253230;

}



;; Function std::__copy_move_a1<false, const free_type*, free_type*> (_ZSt14__copy_move_a1ILb0EPK9free_typePS0_ET1_T0_S5_S4_, funcdef_no=10133, decl_uid=236718, cgraph_uid=6765, symbol_order=7562)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__copy_move_a1<false, const free_type*, free_type*> (const struct free_type * __first, const struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.253234;
  struct free_type * D.253232;

  <bb 2> :
  D.253234 = std::__copy_move_a2<false, const free_type*, free_type*> (__first, __last, __result);
  D.253232 = D.253234;

  <bb 3> :
<L0>:
  return D.253232;

}



;; Function std::__copy_move_a2<false, const free_type*, free_type*> (_ZSt14__copy_move_a2ILb0EPK9free_typePS0_ET1_T0_S5_S4_, funcdef_no=10634, decl_uid=242427, cgraph_uid=7266, symbol_order=8063)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__copy_move_a2<false, const free_type*, free_type*> (const struct free_type * __first, const struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.253235;

  <bb 2> :
  D.253235 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<free_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.253235;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<free_type> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI9free_typeEEPT_PKS4_S7_S5_, funcdef_no=10880, decl_uid=245785, cgraph_uid=7512, symbol_order=8311)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct free_type * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<free_type> (const struct free_type * __first, const struct free_type * __last, struct free_type * __result)
{
  const ptrdiff_t _Num;
  struct free_type * D.253240;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 24;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.951_2 = (long unsigned int) _Num;
  _3 = _Num.951_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.952_4 = (long unsigned int) _Num;
  _5 = _Num.952_4 * 24;
  D.253240 = __result + _5;

  <bb 5> :
<L3>:
  return D.253240;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10134, decl_uid=236722, cgraph_uid=6766, symbol_order=7563)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type*> (struct __normal_iterator __from, struct free_type * __res)
{
  struct __normal_iterator D.253242;

  <bb 2> :
  _1 = std::__niter_base<free_type*, std::vector<free_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 24;
  D.253242 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.253242;

}



;; Function __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10635, decl_uid=214209, cgraph_uid=7267, symbol_order=8064)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct free_type * const D.245791;
  struct __normal_iterator D.245792;
  struct __normal_iterator D.253244;

  <bb 2> :
  _1 = this->_M_current;
  __n.953_2 = (long unsigned int) __n;
  _3 = __n.953_2 * 24;
  _4 = _1 + _3;
  D.245791 = _4;
  __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::__normal_iterator (&D.245792, &D.245791);
  D.253244 = D.245792;
  D.245792 = {CLOBBER};
  D.245791 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.253244;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8666, decl_uid=214256, cgraph_uid=5298, symbol_order=6091)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >, free_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.225748)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9467, decl_uid=225750, cgraph_uid=6099, symbol_order=6892)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP9free_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10135, decl_uid=236746, cgraph_uid=6767, symbol_order=7564)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> > > (struct __normal_iterator D.242436, struct __normal_iterator D.242437)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<free_type*, free_type*> (_ZSt4copyIP9free_typeS1_ET0_T_S3_S2_, funcdef_no=8667, decl_uid=214264, cgraph_uid=5299, symbol_order=6092)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::copy<free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.253250;
  struct free_type * D.253248;

  <bb 2> :
  _1 = std::__miter_base<free_type*> (__last);
  _2 = std::__miter_base<free_type*> (__first);
  D.253250 = std::__copy_move_a<false, free_type*, free_type*> (_2, _1, __result);
  D.253248 = D.253250;

  <bb 3> :
<L0>:
  return D.253248;

}



;; Function std::__miter_base<free_type*> (_ZSt12__miter_baseIP9free_typeET_S2_, funcdef_no=9468, decl_uid=225766, cgraph_uid=6100, symbol_order=6893)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__miter_base<free_type*> (struct free_type * __it)
{
  struct free_type * D.253251;

  <bb 2> :
  D.253251 = __it;

  <bb 3> :
<L0>:
  return D.253251;

}



;; Function std::__copy_move_a<false, free_type*, free_type*> (_ZSt13__copy_move_aILb0EP9free_typeS1_ET1_T0_S3_S2_, funcdef_no=9469, decl_uid=225768, cgraph_uid=6101, symbol_order=6894)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__copy_move_a<false, free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.253255;
  struct free_type * D.253253;

  <bb 2> :
  __result.954_1 = __result;
  _2 = std::__niter_base<free_type*> (__result.954_1);
  _3 = std::__niter_base<free_type*> (__last);
  _4 = std::__niter_base<free_type*> (__first);
  D.253255 = std::__copy_move_a1<false, free_type*, free_type*> (_4, _3, _2);
  _5 = D.253255;
  D.253253 = std::__niter_wrap<free_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.253253;

}



;; Function std::__niter_base<free_type*> (_ZSt12__niter_baseIP9free_typeET_S2_, funcdef_no=10136, decl_uid=225977, cgraph_uid=6768, symbol_order=7565)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__niter_base<free_type*> (struct free_type * __it)
{
  struct free_type * D.253256;

  <bb 2> :
  D.253256 = __it;

  <bb 3> :
<L0>:
  return D.253256;

}



;; Function std::__copy_move_a1<false, free_type*, free_type*> (_ZSt14__copy_move_a1ILb0EP9free_typeS1_ET1_T0_S3_S2_, funcdef_no=10137, decl_uid=236757, cgraph_uid=6769, symbol_order=7566)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__copy_move_a1<false, free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.253260;
  struct free_type * D.253258;

  <bb 2> :
  D.253260 = std::__copy_move_a2<false, free_type*, free_type*> (__first, __last, __result);
  D.253258 = D.253260;

  <bb 3> :
<L0>:
  return D.253258;

}



;; Function std::__copy_move_a2<false, free_type*, free_type*> (_ZSt14__copy_move_a2ILb0EP9free_typeS1_ET1_T0_S3_S2_, funcdef_no=10636, decl_uid=242445, cgraph_uid=7268, symbol_order=8065)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__copy_move_a2<false, free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.253261;

  <bb 2> :
  D.253261 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<free_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.253261;

}



;; Function std::__niter_wrap<free_type*> (_ZSt12__niter_wrapIP9free_typeET_RKS2_S2_, funcdef_no=10138, decl_uid=236761, cgraph_uid=6770, symbol_order=7567)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__niter_wrap<free_type*> (struct free_type * const & D.242449, struct free_type * __res)
{
  struct free_type * D.253263;

  <bb 2> :
  D.253263 = __res;

  <bb 3> :
<L0>:
  return D.253263;

}



;; Function std::__uninitialized_copy_a<free_type*, free_type*, free_type> (_ZSt22__uninitialized_copy_aIP9free_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8668, decl_uid=214268, cgraph_uid=5300, symbol_order=6093)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__uninitialized_copy_a<free_type*, free_type*, free_type> (struct free_type * __first, struct free_type * __last, struct free_type * __result, struct allocator & D.225775)
{
  struct free_type * D.253267;
  struct free_type * D.253265;

  <bb 2> :
  D.253267 = std::uninitialized_copy<free_type*, free_type*> (__first, __last, __result);
  D.253265 = D.253267;

  <bb 3> :
<L0>:
  return D.253265;

}



;; Function std::uninitialized_copy<free_type*, free_type*> (_ZSt18uninitialized_copyIP9free_typeS1_ET0_T_S3_S2_, funcdef_no=9470, decl_uid=225777, cgraph_uid=6102, symbol_order=6895)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::uninitialized_copy<free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * D.253270;
  const bool __assignable;
  struct free_type * D.253268;

  <bb 2> :
  __assignable = 1;
  D.253270 = std::__uninitialized_copy<false>::__uninit_copy<free_type*, free_type*> (__first, __last, __result);
  D.253268 = D.253270;

  <bb 3> :
<L0>:
  return D.253268;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<free_type*, free_type*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP9free_typeS3_EET0_T_S5_S4_, funcdef_no=10139, decl_uid=236795, cgraph_uid=6771, symbol_order=7568)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct free_type * std::__uninitialized_copy<false>::__uninit_copy<free_type*, free_type*> (struct free_type * __first, struct free_type * __last, struct free_type * __result)
{
  struct free_type * __cur;
  struct free_type * D.253271;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<free_type> (__cur);
  std::_Construct<free_type, free_type&> (_1, __first);
  __first = __first + 24;
  __cur = __cur + 24;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.253271 = __cur;

  <bb 6> :
<L3>:
  return D.253271;

}



;; Function std::_Construct<free_type, free_type&> (_ZSt10_ConstructI9free_typeJRS0_EEvPT_DpOT0_, funcdef_no=10637, decl_uid=242457, cgraph_uid=7269, symbol_order=8066)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<free_type, free_type&> (struct free_type * __p, struct free_type & __args#0)
{
  void * D.245811;
  void * D.245810;
  const struct free_type * D.245812;

  <bb 2> :
  D.245812 = std::forward<free_type&> (__args#0);
  D.245810 = __p;
  D.245811 = operator new (24, D.245810);
  MEM[(struct free_type *)D.245811] = *D.245812;
  return;

}



;; Function std::forward<free_type&> (_ZSt7forwardIR9free_typeEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=10881, decl_uid=245808, cgraph_uid=7513, symbol_order=8312)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct free_type & std::forward<free_type&> (struct type & __t)
{
  struct free_type & D.253273;

  <bb 2> :
  D.253273 = __t;

  <bb 3> :
<L0>:
  return D.253273;

}



;; Function free_type::free_type (_ZN9free_typeC2Ev, funcdef_no=6376, decl_uid=195244, cgraph_uid=3351, symbol_order=4129)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void free_type::free_type (struct free_type * const this)
{
  <bb 2> :
  this->Looserulesfree = 0;
  return;

}



;; Function std::vector<free_type>::push_back (_ZNSt6vectorI9free_typeSaIS0_EE9push_backERKS0_, funcdef_no=7744, decl_uid=173172, cgraph_uid=4377, symbol_order=5166)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<free_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.253278;

  <bb 2> :
  _1 = this->D.173492._M_impl.D.172837._M_finish;
  _2 = this->D.173492._M_impl.D.172837._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.173492._M_impl.D.172837._M_finish;
  _4 = &this->D.173492._M_impl;
  std::allocator_traits<std::allocator<free_type> >::construct<free_type, const free_type&> (_4, _3, __x);
  _5 = this->D.173492._M_impl.D.172837._M_finish;
  _6 = _5 + 24;
  this->D.173492._M_impl.D.172837._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.253278 = std::vector<free_type>::end (this);
  std::vector<free_type>::_M_realloc_insert<const free_type&> (this, D.253278, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<free_type> >::construct<free_type, const free_type&> (_ZNSt16allocator_traitsISaI9free_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8669, decl_uid=214280, cgraph_uid=5301, symbol_order=6094)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<free_type> >::construct<free_type, const free_type&> (struct allocator_type & __a, struct free_type * __p, const struct free_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const free_type&> (__args#0);
  __gnu_cxx::new_allocator<free_type>::construct<free_type, const free_type&> (__a, __p, _1);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::construct<free_type, const free_type&> (_ZN9__gnu_cxx13new_allocatorI9free_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9472, decl_uid=225794, cgraph_uid=6104, symbol_order=6897)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::construct<free_type, const free_type&> (struct new_allocator * const this, struct free_type * __p, const struct free_type & __args#0)
{
  void * D.236807;
  void * D.236806;
  const struct free_type * D.236808;

  <bb 2> :
  D.236808 = std::forward<const free_type&> (__args#0);
  D.236806 = __p;
  D.236807 = operator new (24, D.236806);
  MEM[(struct free_type *)D.236807] = *D.236808;
  return;

}



;; Function std::vector<free_type>::_M_realloc_insert<const free_type&> (_ZNSt6vectorI9free_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8670, decl_uid=214449, cgraph_uid=5305, symbol_order=6098)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<free_type>::_M_realloc_insert<const free_type&> (struct vector * const this, struct iterator __position, const struct free_type & __args#0)
{
  struct free_type * D.253283;
  const size_type D.253282;
  struct free_type * __new_finish;
  struct free_type * __new_start;
  const size_type __elems_before;
  struct free_type * __old_finish;
  struct free_type * __old_start;
  const size_type __len;
  struct iterator D.225805;

  <bb 2> :
  D.253282 = std::vector<free_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.253282;
  __old_start = this->D.173492._M_impl.D.172837._M_start;
  __old_finish = this->D.173492._M_impl.D.172837._M_finish;
  D.225805 = std::vector<free_type>::begin (this);
  _1 = __gnu_cxx::operator-<free_type*, std::vector<free_type> > (&__position, &D.225805);
  __elems_before = (const size_type) _1;
  D.225805 = {CLOBBER};
  _2 = &this->D.173492;
  D.253283 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_allocate (_2, __len);
  __new_start = D.253283;
  __new_finish = __new_start;
  _3 = std::forward<const free_type&> (__args#0);
  _4 = __elems_before * 24;
  _5 = __new_start + _4;
  _6 = &this->D.173492._M_impl;
  std::allocator_traits<std::allocator<free_type> >::construct<free_type, const free_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.173492;
  _8 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<free_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 24;
  _11 = &this->D.173492;
  _12 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<free_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.173492;
  _23 = this->D.173492._M_impl.D.172837._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 24;
  _26 = (long unsigned int) _25;
  std::_Vector_base<free_type, std::allocator<free_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.173492._M_impl.D.172837._M_start = __new_start;
  this->D.173492._M_impl.D.172837._M_finish = __new_finish;
  _27 = __len * 24;
  _28 = __new_start + _27;
  this->D.173492._M_impl.D.172837._M_end_of_storage = _28;
  return;

}



;; Function std::vector<free_type>::_M_check_len (_ZNKSt6vectorI9free_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9473, decl_uid=173341, cgraph_uid=6105, symbol_order=6898)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<free_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.957;
  size_type D.253287;
  const long unsigned int D.236813;
  bool retval.955;

  <bb 2> :
  _1 = std::vector<free_type>::max_size (this);
  _2 = std::vector<free_type>::size (this);
  _3 = _1 - _2;
  __n.956_4 = __n;
  retval.955 = _3 < __n.956_4;
  if (retval.955 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<free_type>::size (this);
  _6 = std::vector<free_type>::size (this);
  D.236813 = _6;
  _7 = std::max<long unsigned int> (&D.236813, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.236813 = {CLOBBER};
  _9 = std::vector<free_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<free_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.957 = std::vector<free_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.957 = __len;

  <bb 8> :
  D.253287 = iftmp.957;

  <bb 9> :
<L6>:
  return D.253287;

}



;; Function std::vector<free_type>::max_size (_ZNKSt6vectorI9free_typeSaIS0_EE8max_sizeEv, funcdef_no=10140, decl_uid=173127, cgraph_uid=6772, symbol_order=7569)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<free_type>::max_size (const struct vector * const this)
{
  size_type D.253294;

  <bb 2> :
  _1 = &this->D.173492;
  _2 = std::_Vector_base<free_type, std::allocator<free_type> >::_M_get_Tp_allocator (_1);
  D.253294 = std::vector<free_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.253294;

}



;; Function std::vector<free_type>::_S_max_size (_ZNSt6vectorI9free_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10638, decl_uid=173348, cgraph_uid=7270, symbol_order=8067)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<free_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.253296;

  <bb 2> :
  __diffmax = 384307168202282325;
  _1 = std::allocator_traits<std::allocator<free_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.253296 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253296;

}



;; Function std::allocator_traits<std::allocator<free_type> >::max_size (_ZNSt16allocator_traitsISaI9free_typeEE8max_sizeERKS1_, funcdef_no=10882, decl_uid=172662, cgraph_uid=7514, symbol_order=8313)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<free_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.253299;

  <bb 2> :
  D.253299 = __gnu_cxx::new_allocator<free_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.253299;

}



;; Function __gnu_cxx::new_allocator<free_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI9free_typeE8max_sizeEv, funcdef_no=10989, decl_uid=172504, cgraph_uid=7621, symbol_order=8420)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<free_type>::max_size (const struct new_allocator * const this)
{
  size_type D.253301;

  <bb 2> :
  D.253301 = __gnu_cxx::new_allocator<free_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.253301;

}



;; Function __gnu_cxx::operator-<free_type*, std::vector<free_type> > (_ZN9__gnu_cxxmiIP9free_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9474, decl_uid=225806, cgraph_uid=6106, symbol_order=6899)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<free_type*, std::vector<free_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.253303;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<free_type*, std::vector<free_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.253303 = _5 /[ex] 24;

  <bb 3> :
<L0>:
  return D.253303;

}



;; Function std::vector<free_type>::_S_relocate (_ZNSt6vectorI9free_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9475, decl_uid=172999, cgraph_uid=6107, symbol_order=6900)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::vector<free_type>::_S_relocate (struct free_type * __first, struct free_type * __last, struct free_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.253306;
  struct free_type * D.253305;

  <bb 2> :
  D.253305 = std::vector<free_type>::_S_do_relocate (__first, __last, __result, __alloc, D.253306);

  <bb 3> :
<L0>:
  return D.253305;

}



;; Function std::vector<free_type>::_S_do_relocate (_ZNSt6vectorI9free_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10141, decl_uid=172987, cgraph_uid=6773, symbol_order=7570)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::vector<free_type>::_S_do_relocate (struct free_type * __first, struct free_type * __last, struct free_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.242469)
{
  struct free_type * D.253308;

  <bb 2> :
  D.253308 = std::__relocate_a<free_type*, free_type*, std::allocator<free_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.253308;

}



;; Function std::__relocate_a<free_type*, free_type*, std::allocator<free_type> > (_ZSt12__relocate_aIP9free_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10639, decl_uid=225971, cgraph_uid=7271, symbol_order=8068)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct free_type * std::__relocate_a<free_type*, free_type*, std::allocator<free_type> > (struct free_type * __first, struct free_type * __last, struct free_type * __result, struct allocator & __alloc)
{
  struct free_type * D.253310;

  <bb 2> :
  _1 = std::__niter_base<free_type*> (__result);
  _2 = std::__niter_base<free_type*> (__last);
  _3 = std::__niter_base<free_type*> (__first);
  D.253310 = std::__relocate_a_1<free_type*, free_type*, std::allocator<free_type> > (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.253310;

}



;; Function std::__relocate_a_1<free_type*, free_type*, std::allocator<free_type> > (_ZSt14__relocate_a_1IP9free_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10883, decl_uid=226122, cgraph_uid=7515, symbol_order=8314)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct free_type * std::__relocate_a_1<free_type*, free_type*, std::allocator<free_type> > (struct free_type * __first, struct free_type * __last, struct free_type * __result, struct allocator & __alloc)
{
  struct free_type * __cur;
  struct free_type * D.253312;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<free_type> (__first);
  _2 = std::__addressof<free_type> (__cur);
  std::__relocate_object_a<free_type, free_type, std::allocator<free_type> > (_2, _1, __alloc);
  __first = __first + 24;
  __cur = __cur + 24;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.253312 = __cur;

  <bb 6> :
<L3>:
  return D.253312;

}



;; Function std::__relocate_object_a<free_type, free_type, std::allocator<free_type> > (_ZSt19__relocate_object_aI9free_typeS0_SaIS0_EEvPT_PT0_RT1_, funcdef_no=10990, decl_uid=226151, cgraph_uid=7622, symbol_order=8421)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__relocate_object_a<free_type, free_type, std::allocator<free_type> > (struct free_type * restrict __dest, struct free_type * restrict __orig, struct allocator & __alloc)
{
  <bb 2> :
  _1 = std::move<free_type&> (__orig);
  std::allocator_traits<std::allocator<free_type> >::construct<free_type, free_type> (__alloc, __dest, _1);
  _2 = std::__addressof<free_type> (__orig);
  std::allocator_traits<std::allocator<free_type> >::destroy<free_type> (__alloc, _2);
  return;

}



;; Function std::move<free_type&> (_ZSt4moveIR9free_typeEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=11038, decl_uid=226163, cgraph_uid=7670, symbol_order=8469)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<free_type&> (struct free_type & __t)
{
  struct type & D.253314;

  <bb 2> :
  D.253314 = __t;

  <bb 3> :
<L0>:
  return D.253314;

}



;; Function std::allocator_traits<std::allocator<free_type> >::construct<free_type, free_type> (_ZNSt16allocator_traitsISaI9free_typeEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_, funcdef_no=11039, decl_uid=226165, cgraph_uid=7671, symbol_order=8470)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<free_type> >::construct<free_type, free_type> (struct allocator_type & __a, struct free_type * __p, struct free_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<free_type> (__args#0);
  __gnu_cxx::new_allocator<free_type>::construct<free_type, free_type> (__a, __p, _1);
  return;

}



;; Function std::forward<free_type> (_ZSt7forwardI9free_typeEOT_RNSt16remove_referenceIS1_E4typeE, funcdef_no=11060, decl_uid=247758, cgraph_uid=7692, symbol_order=8491)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct free_type & std::forward<free_type> (struct type & __t)
{
  struct free_type & D.253316;

  <bb 2> :
  D.253316 = __t;

  <bb 3> :
<L0>:
  return D.253316;

}



;; Function __gnu_cxx::new_allocator<free_type>::construct<free_type, free_type> (_ZN9__gnu_cxx13new_allocatorI9free_typeE9constructIS1_JS1_EEEvPT_DpOT0_, funcdef_no=11061, decl_uid=247760, cgraph_uid=7693, symbol_order=8492)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::construct<free_type, free_type> (struct new_allocator * const this, struct free_type * __p, struct free_type & __args#0)
{
  void * D.248188;
  void * D.248187;
  struct free_type * D.248189;

  <bb 2> :
  D.248189 = std::forward<free_type> (__args#0);
  D.248187 = __p;
  D.248188 = operator new (24, D.248187);
  MEM[(struct free_type *)D.248188] = *D.248189;
  return;

}



;; Function std::allocator_traits<std::allocator<free_type> >::destroy<free_type> (_ZNSt16allocator_traitsISaI9free_typeEE7destroyIS0_EEvRS1_PT_, funcdef_no=9477, decl_uid=226180, cgraph_uid=6109, symbol_order=6902)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<free_type> >::destroy<free_type> (struct allocator_type & __a, struct free_type * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<free_type>::destroy<free_type> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<free_type>::destroy<free_type> (_ZN9__gnu_cxx13new_allocatorI9free_typeE7destroyIS1_EEvPT_, funcdef_no=10142, decl_uid=236828, cgraph_uid=6774, symbol_order=7571)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<free_type>::destroy<free_type> (struct new_allocator * const this, struct free_type * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_free_array>::put (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7746, decl_uid=192442, cgraph_uid=4378, symbol_order=5167)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_free_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_free_array & v)
{
  bool D.253325;
  struct hash_entry * D.253324;
  unsigned int D.253323;
  bool ins;
  struct hash_entry * e;
  bool D.253321;
  void * D.214459;
  void * D.214458;

  <bb 2> :
  _1 = &this->m_table;
  D.253323 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::hash (k);
  _2 = D.253323;
  D.253324 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.253324;
  D.253325 = hash_map<tree_node*, function_free_array>::hash_entry::is_empty (e);
  ins = D.253325;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.214458 = &e->m_value;
  D.214459 = operator new (24, D.214458);
  function_free_array::function_free_array (D.214459, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_free_array::operator= (_4, v);

  <bb 5> :
  D.253321 = ~ins;

  <bb 6> :
<L3>:
  return D.253321;

  <bb 7> :
<L4>:
  operator delete (D.214459, D.214458);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8674, decl_uid=192600, cgraph_uid=5306, symbol_order=6099)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.253376;
  bool D.253375;
  bool D.253374;
  bool D.253373;
  bool D.253372;
  bool D.253371;
  struct value_type * D.253370;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.963;
  bool retval.962;
  bool retval.961;
  bool retval.960;
  bool retval.959;
  bool retval.958;
  struct value_type * D.253332;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 32;
  entry = _11 + _13;
  size = this->m_size;
  D.253371 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.958 = D.253371;
  if (retval.958 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.253372 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.959 = D.253372;
  if (retval.959 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 32;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.253373 = hash_map<tree_node*, function_free_array>::hash_entry::equal (entry, comparable);
  retval.960 = D.253373;
  if (retval.960 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  D.253332 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 32;
  entry = _24 + _26;
  D.253374 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.961 = D.253374;
  if (retval.961 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.253375 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.962 = D.253375;
  if (retval.962 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 32;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.253376 = hash_map<tree_node*, function_free_array>::hash_entry::equal (entry, comparable);
  retval.963 = D.253376;
  if (retval.963 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 32;
  D.253332 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.253332 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.253332 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 32;
  D.253332 = _37 + _39;

  <bb 27> :
<L37>:
  return D.253332;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9478, decl_uid=192681, cgraph_uid=6122, symbol_order=6915)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.253407;
  unsigned int D.253406;
  bool D.253405;
  bool D.253404;
  struct mem_alloc_description & D.253403;
  struct value_type * D.253402;
  unsigned int D.253401;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.236851;
  void * D.236850;
  struct hash_entry & D.236888;
  bool iftmp.967;
  bool retval.966;
  bool iftmp.965;
  bool retval.964;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 32;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.965 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.965 = 0;

  <bb 6> :
  retval.964 = iftmp.965;
  if (retval.964 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.253401 = hash_table_higher_prime_index (_5);
  nindex = D.253401;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.253402 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.253402;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.253404 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.253404;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.253405 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.253405;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.967 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.967 = 0;

  <bb 15> :
  retval.966 = iftmp.967;
  if (retval.966 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.253406 = hash_map<tree_node*, function_free_array>::hash_entry::hash (x);
  _16 = D.253406;
  D.253407 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.253407;
  D.236888 = std::move<hash_map<tree_node*, function_free_array>::hash_entry&> (x);
  D.236850 = q;
  D.236851 = operator new (32, D.236850);
  hash_map<tree_node*, function_free_array>::hash_entry::hash_entry (D.236851, D.236888);

  <bb 17> :
  p = p + 32;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10143, decl_uid=192576, cgraph_uid=6775, symbol_order=7572)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.253408;

  <bb 2> :
  D.253408 = this->m_size;

  <bb 3> :
<L0>:
  return D.253408;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10144, decl_uid=192578, cgraph_uid=6776, symbol_order=7573)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.253410;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.253410 = _1 - _2;

  <bb 3> :
<L0>:
  return D.253410;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10145, decl_uid=192678, cgraph_uid=6777, symbol_order=7574)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.968;
  bool D.253412;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.968 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.968 = 0;

  <bb 6> :
  D.253412 = iftmp.968;

  <bb 7> :
<L4>:
  return D.253412;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9352, decl_uid=192668, cgraph_uid=5984, symbol_order=6777)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.253434;
  struct value_type * D.253433;
  struct mem_alloc_description & D.253432;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.253430;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.253433 = xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_alloc (n);
  nentries = D.253433;
  goto <bb 6>; [INV]

  <bb 5> :
  D.253434 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_free_array>::hash_entry> (n);
  nentries = D.253434;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.253430 = nentries;

  <bb 9> :
<L14>:
  return D.253430;

}



;; Function xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10053, decl_uid=218500, cgraph_uid=6685, symbol_order=7482)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.253437;
  struct hash_entry * D.253435;

  <bb 2> :
  D.253437 = xcalloc (count, 32);
  D.253435 = D.253437;

  <bb 3> :
<L0>:
  return D.253435;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_free_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10054, decl_uid=235473, cgraph_uid=6686, symbol_order=7483)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_free_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.253444;
  struct hash_entry * D.253443;
  struct hash_entry * D.253441;
  bool retval.969;

  <bb 2> :
  retval.969 = need_finalization_p<hash_map<tree_node*, function_free_array>::hash_entry> ();
  if (retval.969 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 32;
  D.253443 = ggc_internal_cleared_alloc (_1, finalize, 32, c);
  D.253441 = D.253443;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 32;
  D.253444 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.253441 = D.253444;

  <bb 5> :
<L2>:
  return D.253441;

}



;; Function finalize<hash_map<tree_node*, function_free_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10572, decl_uid=242083, cgraph_uid=7207, symbol_order=8004)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_free_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_free_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10574, decl_uid=245531, cgraph_uid=7205, symbol_order=8002)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_free_array::~function_free_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_free_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10571, decl_uid=242082, cgraph_uid=7203, symbol_order=8000)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_free_array>::hash_entry> ()
{
  bool D.253445;

  <bb 2> :
  D.253445 = 1;

  <bb 3> :
<L0>:
  return D.253445;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10147, decl_uid=192501, cgraph_uid=6779, symbol_order=7576)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_free_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.253449;
  hashval_t D.253447;

  <bb 2> :
  _1 = &e->m_key;
  D.253449 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::hash (_1);
  D.253447 = D.253449;

  <bb 3> :
<L0>:
  return D.253447;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10146, decl_uid=192671, cgraph_uid=6778, symbol_order=7575)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.253462;
  bool D.253461;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.971;
  struct value_type * D.253453;
  bool retval.970;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 32;
  slot = _2 + _4;
  D.253461 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.970 = D.253461;
  if (retval.970 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.253453 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 32;
  slot = _8 + _10;
  D.253462 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.971 = D.253462;
  if (retval.971 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.253453 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.253453;

}



;; Function std::move<hash_map<tree_node*, function_free_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10148, decl_uid=236848, cgraph_uid=6780, symbol_order=7577)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_free_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.253463;

  <bb 2> :
  D.253463 = __t;

  <bb 3> :
<L0>:
  return D.253463;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9489, decl_uid=236873, cgraph_uid=6120, symbol_order=6913)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.236875)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.236875->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.236875->m_value;
  function_free_array::function_free_array (_2, _3);
  return;

}



;; Function function_free_array::function_free_array (_ZN19function_free_arrayC2EOS_, funcdef_no=9487, decl_uid=192793, cgraph_uid=6117, symbol_order=6910)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_free_array::function_free_array (struct function_free_array * const this, struct function_free_array & D.192795)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->free_type_array;
  _2 = &D.192795->free_type_array;
  std::vector<free_type>::vector (_1, _2);
  return;

}



;; Function std::vector<free_type>::vector (_ZNSt6vectorI9free_typeSaIS0_EEC2EOS2_, funcdef_no=9485, decl_uid=173449, cgraph_uid=6114, symbol_order=6907)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<free_type>::vector (struct vector * const this, struct vector & D.173451)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.173492;
  _2 = &D.173451->D.173492;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (_ZNSt12_Vector_baseI9free_typeSaIS0_EEC2EOS2_, funcdef_no=9483, decl_uid=172917, cgraph_uid=6111, symbol_order=6904)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.172919)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.172919->_M_impl;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI9free_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10150, decl_uid=172823, cgraph_uid=6782, symbol_order=7579)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl&> (__x);
  std::allocator<free_type>::allocator (this, _1);
  _2 = &this->D.172837;
  _3 = std::move<std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.172837;
  std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI9free_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10640, decl_uid=242499, cgraph_uid=7272, symbol_order=8069)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.253465;

  <bb 2> :
  D.253465 = __t;

  <bb 3> :
<L0>:
  return D.253465;

}



;; Function std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI9free_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10642, decl_uid=172779, cgraph_uid=7274, symbol_order=8071)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<free_type, std::allocator<free_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8979, decl_uid=218502, cgraph_uid=5611, symbol_order=6404)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9491, decl_uid=192689, cgraph_uid=6123, symbol_order=6916)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_free_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10152, decl_uid=192513, cgraph_uid=6784, symbol_order=7581)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::mark_empty<hash_map<tree_node*, function_free_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::mark_empty<hash_map<tree_node*, function_free_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10644, decl_uid=242514, cgraph_uid=7276, symbol_order=8073)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::mark_empty<hash_map<tree_node*, function_free_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function function_pthread_detched_array::function_pthread_detched_array (_ZN30function_pthread_detched_arrayC2Ev, funcdef_no=6389, decl_uid=193648, cgraph_uid=3364, symbol_order=4142)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_detched_array::function_pthread_detched_array (struct function_pthread_detched_array * const this)
{
  <bb 2> :
  _1 = &this->pthread_detched_array;
  std::vector<pthread_detched_type>::vector (_1);
  return;

}



;; Function std::vector<pthread_detched_type>::vector (_ZNSt6vectorI20pthread_detched_typeSaIS0_EEC2Ev, funcdef_no=6387, decl_uid=177706, cgraph_uid=3361, symbol_order=4139)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_detched_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.177714;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EEC2Ev, funcdef_no=6385, decl_uid=177164, cgraph_uid=3358, symbol_order=4136)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7748, decl_uid=177056, cgraph_uid=4380, symbol_order=5169)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<pthread_detched_type>::allocator (this);
  _1 = &this->D.177059;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<pthread_detched_type>::allocator (_ZNSaI20pthread_detched_typeEC2Ev, funcdef_no=8677, decl_uid=176834, cgraph_uid=5309, symbol_order=6102)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_detched_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeEC2Ev, funcdef_no=9493, decl_uid=176763, cgraph_uid=6125, symbol_order=6918)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_detched_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function function_pthread_detched_array::operator= (_ZN30function_pthread_detched_arrayaSERKS_, funcdef_no=6391, decl_uid=195451, cgraph_uid=3366, symbol_order=4144)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_pthread_detched_array & function_pthread_detched_array::operator= (struct function_pthread_detched_array * const this, const struct function_pthread_detched_array & D.195452)
{
  struct function_pthread_detched_array & D.253468;

  <bb 2> :
  _1 = &D.195452->pthread_detched_array;
  _2 = &this->pthread_detched_array;
  std::vector<pthread_detched_type>::operator= (_2, _1);
  D.253468 = this;

  <bb 3> :
<L0>:
  return D.253468;

}



;; Function std::vector<pthread_detched_type>::operator= (_ZNSt6vectorI20pthread_detched_typeSaIS0_EEaSERKS2_, funcdef_no=7756, decl_uid=177292, cgraph_uid=4390, symbol_order=5179)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<pthread_detched_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct pthread_detched_type * D.253503;
  struct pthread_detched_type * __tmp;
  const size_type __xlen;
  struct vector & D.253501;
  struct __normal_iterator D.253498;
  struct __normal_iterator D.253497;
  struct __normal_iterator D.253496;
  struct __normal_iterator D.253495;
  struct __normal_iterator D.253494;
  bool retval.976;
  struct __normal_iterator D.253489;
  struct __normal_iterator D.253488;
  bool retval.975;
  bool iftmp.974;
  bool retval.973;
  bool retval.972;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.972 = __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_propagate_on_copy_assign ();
  if (retval.972 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.177714;
  _4 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.177714;
  _6 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.974 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.974 = 0;

  <bb 8> :
  retval.973 = iftmp.974;
  if (retval.973 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<pthread_detched_type>::clear (this);
  _8 = &this->D.177714;
  _9 = this->D.177714._M_impl.D.177059._M_end_of_storage;
  _10 = this->D.177714._M_impl.D.177059._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 16;
  _13 = (long unsigned int) _12;
  _14 = this->D.177714._M_impl.D.177059._M_start;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (_8, _14, _13);
  this->D.177714._M_impl.D.177059._M_start = 0B;
  this->D.177714._M_impl.D.177059._M_finish = 0B;
  this->D.177714._M_impl.D.177059._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.177714;
  _16 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.177714;
  _18 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<pthread_detched_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<pthread_detched_type>::size (__x);
  _19 = std::vector<pthread_detched_type>::capacity (this);
  retval.975 = __xlen > _19;
  if (retval.975 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.253488 = std::vector<pthread_detched_type>::end (__x);
  D.253489 = std::vector<pthread_detched_type>::begin (__x);
  D.253503 = std::vector<pthread_detched_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (this, __xlen, D.253489, D.253488);
  __tmp = D.253503;
  _20 = &this->D.177714;
  _21 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.177714._M_impl.D.177059._M_finish;
  _23 = this->D.177714._M_impl.D.177059._M_start;
  std::_Destroy<pthread_detched_type*, pthread_detched_type> (_23, _22, _21);
  _24 = &this->D.177714;
  _25 = this->D.177714._M_impl.D.177059._M_end_of_storage;
  _26 = this->D.177714._M_impl.D.177059._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 16;
  _29 = (long unsigned int) _28;
  _30 = this->D.177714._M_impl.D.177059._M_start;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (_24, _30, _29);
  this->D.177714._M_impl.D.177059._M_start = __tmp;
  _31 = this->D.177714._M_impl.D.177059._M_start;
  _32 = __xlen * 16;
  _33 = _31 + _32;
  this->D.177714._M_impl.D.177059._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<pthread_detched_type>::size (this);
  retval.976 = __xlen <= _34;
  if (retval.976 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.177714;
  _36 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_35);
  D.253494 = std::vector<pthread_detched_type>::end (this);
  D.253495 = std::vector<pthread_detched_type>::begin (this);
  D.253496 = std::vector<pthread_detched_type>::end (__x);
  D.253497 = std::vector<pthread_detched_type>::begin (__x);
  D.253498 = std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (D.253497, D.253496, D.253495);
  std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type> (D.253498, D.253494, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.177714._M_impl.D.177059._M_start;
  _38 = __x->D.177714._M_impl.D.177059._M_start;
  _39 = std::vector<pthread_detched_type>::size (this);
  _40 = _39 * 16;
  _41 = _38 + _40;
  _42 = __x->D.177714._M_impl.D.177059._M_start;
  std::copy<pthread_detched_type*, pthread_detched_type*> (_42, _41, _37);
  _43 = &this->D.177714;
  _44 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.177714._M_impl.D.177059._M_finish;
  _46 = __x->D.177714._M_impl.D.177059._M_finish;
  _47 = __x->D.177714._M_impl.D.177059._M_start;
  _48 = std::vector<pthread_detched_type>::size (this);
  _49 = _48 * 16;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<pthread_detched_type*, pthread_detched_type*, pthread_detched_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.177714._M_impl.D.177059._M_start;
  _52 = __xlen * 16;
  _53 = _51 + _52;
  this->D.177714._M_impl.D.177059._M_finish = _53;

  <bb 17> :
  D.253501 = this;

  <bb 18> :
<L19>:
  return D.253501;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI20pthread_detched_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7757, decl_uid=176926, cgraph_uid=4388, symbol_order=5177)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_propagate_on_copy_assign ()
{
  bool D.253504;

  <bb 2> :
  D.253504 = 0;

  <bb 3> :
<L0>:
  return D.253504;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI20pthread_detched_typeES1_E15_S_always_equalEv, funcdef_no=7758, decl_uid=176929, cgraph_uid=4389, symbol_order=5178)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<pthread_detched_type>, pthread_detched_type>::_S_always_equal ()
{
  bool D.253506;

  <bb 2> :
  D.253506 = 1;

  <bb 3> :
<L0>:
  return D.253506;

}



;; Function std::operator!= (_ZStneRKSaI20pthread_detched_typeES2_, funcdef_no=8686, decl_uid=176812, cgraph_uid=5318, symbol_order=6111)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.226394, const struct allocator & D.226395)
{
  bool D.253508;

  <bb 2> :
  D.253508 = 0;

  <bb 3> :
<L0>:
  return D.253508;

}



;; Function std::vector<pthread_detched_type>::clear (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE5clearEv, funcdef_no=8687, decl_uid=177444, cgraph_uid=5319, symbol_order=6112)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_detched_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.177714._M_impl.D.177059._M_start;
  std::vector<pthread_detched_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<pthread_detched_type>::_M_erase_at_end (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9496, decl_uid=177572, cgraph_uid=6128, symbol_order=6921)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<pthread_detched_type>::_M_erase_at_end (struct vector * const this, struct pthread_detched_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.177714._M_impl.D.177059._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 16;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.177714;
  _5 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.177714._M_impl.D.177059._M_finish;
  std::_Destroy<pthread_detched_type*, pthread_detched_type> (__pos, _6, _5);
  this->D.177714._M_impl.D.177059._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<pthread_detched_type> > (_ZSt15__alloc_on_copyISaI20pthread_detched_typeEEvRT_RKS2_, funcdef_no=8688, decl_uid=214500, cgraph_uid=5320, symbol_order=6113)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<pthread_detched_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<pthread_detched_type>::capacity (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE8capacityEv, funcdef_no=8689, decl_uid=177360, cgraph_uid=5321, symbol_order=6114)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_detched_type>::capacity (const struct vector * const this)
{
  size_type D.253513;

  <bb 2> :
  _1 = this->D.177714._M_impl.D.177059._M_end_of_storage;
  _2 = this->D.177714._M_impl.D.177059._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.253513 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.253513;

}



;; Function std::vector<pthread_detched_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8690, decl_uid=214507, cgraph_uid=5322, symbol_order=6115)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct pthread_detched_type * std::vector<pthread_detched_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct pthread_detched_type * D.253517;
  struct pthread_detched_type * __result;
  struct pthread_detched_type * D.253515;

  <bb 2> :
  _1 = &this->D.177714;
  D.253517 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_allocate (_1, __n);
  __result = D.253517;
  _2 = &this->D.177714;
  _3 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*, pthread_detched_type> (__first, __last, __result, _3);

  <bb 3> :
  D.253515 = __result;

  <bb 4> :
<L0>:
  return D.253515;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.177714;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<pthread_detched_type>::end (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE3endEv, funcdef_no=8693, decl_uid=177327, cgraph_uid=5325, symbol_order=6118)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<pthread_detched_type>::end (struct vector * const this)
{
  struct iterator D.226481;
  struct iterator D.253521;

  <bb 2> :
  _1 = &this->D.177714._M_impl.D.177059._M_finish;
  __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (&D.226481, _1);
  D.253521 = D.226481;
  D.226481 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253521;

}



;; Function __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9499, decl_uid=214589, cgraph_uid=6131, symbol_order=6924)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (struct __normal_iterator * const this, struct pthread_detched_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<pthread_detched_type>::begin (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE5beginEv, funcdef_no=8691, decl_uid=177323, cgraph_uid=5323, symbol_order=6116)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<pthread_detched_type>::begin (struct vector * const this)
{
  struct iterator D.226435;
  struct iterator D.253524;

  <bb 2> :
  _1 = &this->D.177714._M_impl.D.177059._M_start;
  __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (&D.226435, _1);
  D.253524 = D.226435;
  D.226435 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253524;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8692, decl_uid=214608, cgraph_uid=5324, symbol_order=6117)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.253529;
  struct __normal_iterator D.253528;
  struct __normal_iterator D.253527;

  <bb 2> :
  D.253528 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (__last);
  D.253529 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> > > (__first);
  D.253527 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (D.253529, D.253528, __result);

  <bb 3> :
<L0>:
  return D.253527;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK20pthread_detched_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9502, decl_uid=226453, cgraph_uid=6135, symbol_order=6928)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_detched_type*, std::vector<pthread_detched_type> >, __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct pthread_detched_type * D.253533;
  struct __normal_iterator D.253531;

  <bb 2> :
  _1 = std::__niter_base<pthread_detched_type*, std::vector<pthread_detched_type> > (__result);
  _2 = std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (__last);
  _3 = std::__niter_base<const pthread_detched_type*, std::vector<pthread_detched_type> > (__first);
  D.253533 = std::__copy_move_a1<false, const pthread_detched_type*, pthread_detched_type*> (_3, _2, _1);
  _4 = D.253533;
  D.253531 = std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.253531;

}



;; Function std::__niter_base<pthread_detched_type*, std::vector<pthread_detched_type> > (_ZSt12__niter_baseIP20pthread_detched_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10156, decl_uid=237071, cgraph_uid=6788, symbol_order=7585)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__niter_base<pthread_detched_type*, std::vector<pthread_detched_type> > (struct __normal_iterator __it)
{
  struct pthread_detched_type * D.253534;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (&__it);
  D.253534 = *_1;

  <bb 3> :
<L0>:
  return D.253534;

}



;; Function __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9513, decl_uid=214576, cgraph_uid=6145, symbol_order=6938)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * const & __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (const struct __normal_iterator * const this)
{
  struct pthread_detched_type * const & D.253536;

  <bb 2> :
  D.253536 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.253536;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10158, decl_uid=237078, cgraph_uid=6790, symbol_order=7587)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type*> (struct __normal_iterator __from, struct pthread_detched_type * __res)
{
  struct __normal_iterator D.253538;

  <bb 2> :
  _1 = std::__niter_base<pthread_detched_type*, std::vector<pthread_detched_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 16;
  D.253538 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.253538;

}



;; Function __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10649, decl_uid=214567, cgraph_uid=7281, symbol_order=8078)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct pthread_detched_type * const D.245863;
  struct __normal_iterator D.245864;
  struct __normal_iterator D.253540;

  <bb 2> :
  _1 = this->_M_current;
  __n.977_2 = (long unsigned int) __n;
  _3 = __n.977_2 * 16;
  _4 = _1 + _3;
  D.245863 = _4;
  __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::__normal_iterator (&D.245864, &D.245863);
  D.253540 = D.245864;
  D.245864 = {CLOBBER};
  D.245863 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.253540;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8694, decl_uid=214614, cgraph_uid=5326, symbol_order=6119)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >, pthread_detched_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.226484)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9504, decl_uid=226486, cgraph_uid=6136, symbol_order=6929)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP20pthread_detched_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10159, decl_uid=237102, cgraph_uid=6791, symbol_order=7588)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> > > (struct __normal_iterator D.242539, struct __normal_iterator D.242540)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<pthread_detched_type*, pthread_detched_type*> (_ZSt4copyIP20pthread_detched_typeS1_ET0_T_S3_S2_, funcdef_no=8695, decl_uid=214622, cgraph_uid=5327, symbol_order=6120)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::copy<pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.253546;
  struct pthread_detched_type * D.253544;

  <bb 2> :
  _1 = std::__miter_base<pthread_detched_type*> (__last);
  _2 = std::__miter_base<pthread_detched_type*> (__first);
  D.253546 = std::__copy_move_a<false, pthread_detched_type*, pthread_detched_type*> (_2, _1, __result);
  D.253544 = D.253546;

  <bb 3> :
<L0>:
  return D.253544;

}



;; Function std::__miter_base<pthread_detched_type*> (_ZSt12__miter_baseIP20pthread_detched_typeET_S2_, funcdef_no=9505, decl_uid=226502, cgraph_uid=6137, symbol_order=6930)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__miter_base<pthread_detched_type*> (struct pthread_detched_type * __it)
{
  struct pthread_detched_type * D.253547;

  <bb 2> :
  D.253547 = __it;

  <bb 3> :
<L0>:
  return D.253547;

}



;; Function std::__copy_move_a<false, pthread_detched_type*, pthread_detched_type*> (_ZSt13__copy_move_aILb0EP20pthread_detched_typeS1_ET1_T0_S3_S2_, funcdef_no=9506, decl_uid=226504, cgraph_uid=6138, symbol_order=6931)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a<false, pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.253551;
  struct pthread_detched_type * D.253549;

  <bb 2> :
  __result.978_1 = __result;
  _2 = std::__niter_base<pthread_detched_type*> (__result.978_1);
  _3 = std::__niter_base<pthread_detched_type*> (__last);
  _4 = std::__niter_base<pthread_detched_type*> (__first);
  D.253551 = std::__copy_move_a1<false, pthread_detched_type*, pthread_detched_type*> (_4, _3, _2);
  _5 = D.253551;
  D.253549 = std::__niter_wrap<pthread_detched_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.253549;

}



;; Function std::__copy_move_a1<false, pthread_detched_type*, pthread_detched_type*> (_ZSt14__copy_move_a1ILb0EP20pthread_detched_typeS1_ET1_T0_S3_S2_, funcdef_no=10161, decl_uid=237113, cgraph_uid=6793, symbol_order=7590)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a1<false, pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.253554;
  struct pthread_detched_type * D.253552;

  <bb 2> :
  D.253554 = std::__copy_move_a2<false, pthread_detched_type*, pthread_detched_type*> (__first, __last, __result);
  D.253552 = D.253554;

  <bb 3> :
<L0>:
  return D.253552;

}



;; Function std::__copy_move_a2<false, pthread_detched_type*, pthread_detched_type*> (_ZSt14__copy_move_a2ILb0EP20pthread_detched_typeS1_ET1_T0_S3_S2_, funcdef_no=10650, decl_uid=242548, cgraph_uid=7282, symbol_order=8079)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__copy_move_a2<false, pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.253555;

  <bb 2> :
  D.253555 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_detched_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.253555;

}



;; Function std::__uninitialized_copy_a<pthread_detched_type*, pthread_detched_type*, pthread_detched_type> (_ZSt22__uninitialized_copy_aIP20pthread_detched_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8696, decl_uid=214626, cgraph_uid=5328, symbol_order=6121)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__uninitialized_copy_a<pthread_detched_type*, pthread_detched_type*, pthread_detched_type> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result, struct allocator & D.226511)
{
  struct pthread_detched_type * D.253559;
  struct pthread_detched_type * D.253557;

  <bb 2> :
  D.253559 = std::uninitialized_copy<pthread_detched_type*, pthread_detched_type*> (__first, __last, __result);
  D.253557 = D.253559;

  <bb 3> :
<L0>:
  return D.253557;

}



;; Function std::uninitialized_copy<pthread_detched_type*, pthread_detched_type*> (_ZSt18uninitialized_copyIP20pthread_detched_typeS1_ET0_T_S3_S2_, funcdef_no=9507, decl_uid=226513, cgraph_uid=6139, symbol_order=6932)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::uninitialized_copy<pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.253562;
  const bool __assignable;
  struct pthread_detched_type * D.253560;

  <bb 2> :
  __assignable = 1;
  D.253562 = std::__uninitialized_copy<true>::__uninit_copy<pthread_detched_type*, pthread_detched_type*> (__first, __last, __result);
  D.253560 = D.253562;

  <bb 3> :
<L0>:
  return D.253560;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<pthread_detched_type*, pthread_detched_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIP20pthread_detched_typeS3_EET0_T_S5_S4_, funcdef_no=10163, decl_uid=237151, cgraph_uid=6795, symbol_order=7592)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__uninitialized_copy<true>::__uninit_copy<pthread_detched_type*, pthread_detched_type*> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result)
{
  struct pthread_detched_type * D.253565;
  struct pthread_detched_type * D.253563;

  <bb 2> :
  D.253565 = std::copy<pthread_detched_type*, pthread_detched_type*> (__first, __last, __result);
  D.253563 = D.253565;

  <bb 3> :
<L0>:
  return D.253563;

}



;; Function std::vector<pthread_detched_type>::push_back (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE9push_backERKS0_, funcdef_no=7759, decl_uid=177394, cgraph_uid=4392, symbol_order=5181)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<pthread_detched_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.253569;

  <bb 2> :
  _1 = this->D.177714._M_impl.D.177059._M_finish;
  _2 = this->D.177714._M_impl.D.177059._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.177714._M_impl.D.177059._M_finish;
  _4 = &this->D.177714._M_impl;
  std::allocator_traits<std::allocator<pthread_detched_type> >::construct<pthread_detched_type, const pthread_detched_type&> (_4, _3, __x);
  _5 = this->D.177714._M_impl.D.177059._M_finish;
  _6 = _5 + 16;
  this->D.177714._M_impl.D.177059._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.253569 = std::vector<pthread_detched_type>::end (this);
  std::vector<pthread_detched_type>::_M_realloc_insert<const pthread_detched_type&> (this, D.253569, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<pthread_detched_type> >::construct<pthread_detched_type, const pthread_detched_type&> (_ZNSt16allocator_traitsISaI20pthread_detched_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8697, decl_uid=214638, cgraph_uid=5329, symbol_order=6122)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<pthread_detched_type> >::construct<pthread_detched_type, const pthread_detched_type&> (struct allocator_type & __a, struct pthread_detched_type * __p, const struct pthread_detched_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const pthread_detched_type&> (__args#0);
  __gnu_cxx::new_allocator<pthread_detched_type>::construct<pthread_detched_type, const pthread_detched_type&> (__a, __p, _1);
  return;

}



;; Function std::forward<const pthread_detched_type&> (_ZSt7forwardIRK20pthread_detched_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9508, decl_uid=226528, cgraph_uid=6140, symbol_order=6933)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct pthread_detched_type & std::forward<const pthread_detched_type&> (const struct type & __t)
{
  const struct pthread_detched_type & D.253570;

  <bb 2> :
  D.253570 = __t;

  <bb 3> :
<L0>:
  return D.253570;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::construct<pthread_detched_type, const pthread_detched_type&> (_ZN9__gnu_cxx13new_allocatorI20pthread_detched_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9509, decl_uid=226530, cgraph_uid=6141, symbol_order=6934)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_detched_type>::construct<pthread_detched_type, const pthread_detched_type&> (struct new_allocator * const this, struct pthread_detched_type * __p, const struct pthread_detched_type & __args#0)
{
  void * D.237163;
  void * D.237162;
  const struct pthread_detched_type * D.237164;

  <bb 2> :
  D.237164 = std::forward<const pthread_detched_type&> (__args#0);
  D.237162 = __p;
  D.237163 = operator new (16, D.237162);
  MEM[(struct pthread_detched_type *)D.237163] = *D.237164;
  return;

}



;; Function std::vector<pthread_detched_type>::_M_realloc_insert<const pthread_detched_type&> (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8698, decl_uid=214807, cgraph_uid=5333, symbol_order=6126)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_detched_type>::_M_realloc_insert<const pthread_detched_type&> (struct vector * const this, struct iterator __position, const struct pthread_detched_type & __args#0)
{
  struct pthread_detched_type * D.253576;
  const size_type D.253575;
  struct pthread_detched_type * __new_finish;
  struct pthread_detched_type * __new_start;
  const size_type __elems_before;
  struct pthread_detched_type * __old_finish;
  struct pthread_detched_type * __old_start;
  const size_type __len;
  struct iterator D.226541;

  <bb 2> :
  D.253575 = std::vector<pthread_detched_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.253575;
  __old_start = this->D.177714._M_impl.D.177059._M_start;
  __old_finish = this->D.177714._M_impl.D.177059._M_finish;
  D.226541 = std::vector<pthread_detched_type>::begin (this);
  _1 = __gnu_cxx::operator-<pthread_detched_type*, std::vector<pthread_detched_type> > (&__position, &D.226541);
  __elems_before = (const size_type) _1;
  D.226541 = {CLOBBER};
  _2 = &this->D.177714;
  D.253576 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_allocate (_2, __len);
  __new_start = D.253576;
  __new_finish = __new_start;
  _3 = std::forward<const pthread_detched_type&> (__args#0);
  _4 = __elems_before * 16;
  _5 = __new_start + _4;
  _6 = &this->D.177714._M_impl;
  std::allocator_traits<std::allocator<pthread_detched_type> >::construct<pthread_detched_type, const pthread_detched_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.177714;
  _8 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<pthread_detched_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 16;
  _11 = &this->D.177714;
  _12 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<pthread_detched_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.177714;
  _23 = this->D.177714._M_impl.D.177059._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 16;
  _26 = (long unsigned int) _25;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.177714._M_impl.D.177059._M_start = __new_start;
  this->D.177714._M_impl.D.177059._M_finish = __new_finish;
  _27 = __len * 16;
  _28 = __new_start + _27;
  this->D.177714._M_impl.D.177059._M_end_of_storage = _28;
  return;

}



;; Function std::vector<pthread_detched_type>::_M_check_len (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9510, decl_uid=177563, cgraph_uid=6142, symbol_order=6935)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<pthread_detched_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.981;
  size_type D.253580;
  const long unsigned int D.237169;
  bool retval.979;

  <bb 2> :
  _1 = std::vector<pthread_detched_type>::max_size (this);
  _2 = std::vector<pthread_detched_type>::size (this);
  _3 = _1 - _2;
  __n.980_4 = __n;
  retval.979 = _3 < __n.980_4;
  if (retval.979 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<pthread_detched_type>::size (this);
  _6 = std::vector<pthread_detched_type>::size (this);
  D.237169 = _6;
  _7 = std::max<long unsigned int> (&D.237169, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.237169 = {CLOBBER};
  _9 = std::vector<pthread_detched_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<pthread_detched_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.981 = std::vector<pthread_detched_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.981 = __len;

  <bb 8> :
  D.253580 = iftmp.981;

  <bb 9> :
<L6>:
  return D.253580;

}



;; Function std::vector<pthread_detched_type>::max_size (_ZNKSt6vectorI20pthread_detched_typeSaIS0_EE8max_sizeEv, funcdef_no=10164, decl_uid=177349, cgraph_uid=6796, symbol_order=7593)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_detched_type>::max_size (const struct vector * const this)
{
  size_type D.253587;

  <bb 2> :
  _1 = &this->D.177714;
  _2 = std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_M_get_Tp_allocator (_1);
  D.253587 = std::vector<pthread_detched_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.253587;

}



;; Function std::vector<pthread_detched_type>::_S_max_size (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10651, decl_uid=177570, cgraph_uid=7283, symbol_order=8080)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_detched_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.253589;

  <bb 2> :
  __diffmax = 576460752303423487;
  _1 = std::allocator_traits<std::allocator<pthread_detched_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.253589 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253589;

}



;; Function std::allocator_traits<std::allocator<pthread_detched_type> >::max_size (_ZNSt16allocator_traitsISaI20pthread_detched_typeEE8max_sizeERKS1_, funcdef_no=10885, decl_uid=176884, cgraph_uid=7517, symbol_order=8316)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<pthread_detched_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.253592;

  <bb 2> :
  D.253592 = __gnu_cxx::new_allocator<pthread_detched_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.253592;

}



;; Function __gnu_cxx::new_allocator<pthread_detched_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI20pthread_detched_typeE8max_sizeEv, funcdef_no=10991, decl_uid=176726, cgraph_uid=7623, symbol_order=8422)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<pthread_detched_type>::max_size (const struct new_allocator * const this)
{
  size_type D.253594;

  <bb 2> :
  D.253594 = __gnu_cxx::new_allocator<pthread_detched_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.253594;

}



;; Function __gnu_cxx::operator-<pthread_detched_type*, std::vector<pthread_detched_type> > (_ZN9__gnu_cxxmiIP20pthread_detched_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9511, decl_uid=226542, cgraph_uid=6143, symbol_order=6936)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<pthread_detched_type*, std::vector<pthread_detched_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.253596;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<pthread_detched_type*, std::vector<pthread_detched_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.253596 = _5 /[ex] 16;

  <bb 3> :
<L0>:
  return D.253596;

}



;; Function std::vector<pthread_detched_type>::_S_relocate (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9512, decl_uid=177221, cgraph_uid=6144, symbol_order=6937)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::vector<pthread_detched_type>::_S_relocate (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.253599;
  struct pthread_detched_type * D.253598;

  <bb 2> :
  D.253598 = std::vector<pthread_detched_type>::_S_do_relocate (__first, __last, __result, __alloc, D.253599);

  <bb 3> :
<L0>:
  return D.253598;

}



;; Function std::vector<pthread_detched_type>::_S_do_relocate (_ZNSt6vectorI20pthread_detched_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10165, decl_uid=177209, cgraph_uid=6797, symbol_order=7594)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::vector<pthread_detched_type>::_S_do_relocate (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.242564)
{
  struct pthread_detched_type * D.253601;

  <bb 2> :
  D.253601 = std::__relocate_a<pthread_detched_type*, pthread_detched_type*, std::allocator<pthread_detched_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.253601;

}



;; Function std::__relocate_a<pthread_detched_type*, pthread_detched_type*, std::allocator<pthread_detched_type> > (_ZSt12__relocate_aIP20pthread_detched_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10652, decl_uid=226707, cgraph_uid=7284, symbol_order=8081)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_detched_type * std::__relocate_a<pthread_detched_type*, pthread_detched_type*, std::allocator<pthread_detched_type> > (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result, struct allocator & __alloc)
{
  struct pthread_detched_type * D.253603;

  <bb 2> :
  _1 = std::__niter_base<pthread_detched_type*> (__result);
  _2 = std::__niter_base<pthread_detched_type*> (__last);
  _3 = std::__niter_base<pthread_detched_type*> (__first);
  D.253603 = std::__relocate_a_1<pthread_detched_type, pthread_detched_type> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.253603;

}



;; Function std::__relocate_a_1<pthread_detched_type, pthread_detched_type> (_ZSt14__relocate_a_1I20pthread_detched_typeS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E, funcdef_no=10886, decl_uid=226881, cgraph_uid=7518, symbol_order=8317)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct pthread_detched_type * std::__relocate_a_1<pthread_detched_type, pthread_detched_type> (struct pthread_detched_type * __first, struct pthread_detched_type * __last, struct pthread_detched_type * __result, struct allocator & D.246981)
{
  ptrdiff_t __count;
  struct pthread_detched_type * D.253608;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 16;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.982_2 = (long unsigned int) __count;
  _3 = __count.982_2 * 16;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.983_4 = (long unsigned int) __count;
  _5 = __count.983_4 * 16;
  D.253608 = __result + _5;

  <bb 5> :
<L3>:
  return D.253608;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::put (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7761, decl_uid=193314, cgraph_uid=4393, symbol_order=5182)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_pthread_detched_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_pthread_detched_array & v)
{
  bool D.253617;
  struct hash_entry * D.253616;
  unsigned int D.253615;
  bool ins;
  struct hash_entry * e;
  bool D.253613;
  void * D.214817;
  void * D.214816;

  <bb 2> :
  _1 = &this->m_table;
  D.253615 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::hash (k);
  _2 = D.253615;
  D.253616 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.253616;
  D.253617 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::is_empty (e);
  ins = D.253617;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.214816 = &e->m_value;
  D.214817 = operator new (24, D.214816);
  function_pthread_detched_array::function_pthread_detched_array (D.214817, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_pthread_detched_array::operator= (_4, v);

  <bb 5> :
  D.253613 = ~ins;

  <bb 6> :
<L3>:
  return D.253613;

  <bb 7> :
<L4>:
  operator delete (D.214817, D.214816);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8702, decl_uid=193472, cgraph_uid=5334, symbol_order=6127)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.253668;
  bool D.253667;
  bool D.253666;
  bool D.253665;
  bool D.253664;
  bool D.253663;
  struct value_type * D.253662;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.989;
  bool retval.988;
  bool retval.987;
  bool retval.986;
  bool retval.985;
  bool retval.984;
  struct value_type * D.253624;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 32;
  entry = _11 + _13;
  size = this->m_size;
  D.253663 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.984 = D.253663;
  if (retval.984 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.253664 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.985 = D.253664;
  if (retval.985 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 32;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.253665 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (entry, comparable);
  retval.986 = D.253665;
  if (retval.986 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  D.253624 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 32;
  entry = _24 + _26;
  D.253666 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.987 = D.253666;
  if (retval.987 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.253667 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.988 = D.253667;
  if (retval.988 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 32;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.253668 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::equal (entry, comparable);
  retval.989 = D.253668;
  if (retval.989 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 32;
  D.253624 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.253624 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.253624 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 32;
  D.253624 = _37 + _39;

  <bb 27> :
<L37>:
  return D.253624;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9515, decl_uid=193553, cgraph_uid=6159, symbol_order=6952)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.253699;
  unsigned int D.253698;
  bool D.253697;
  bool D.253696;
  struct mem_alloc_description & D.253695;
  struct value_type * D.253694;
  unsigned int D.253693;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.237207;
  void * D.237206;
  struct hash_entry & D.237244;
  bool iftmp.993;
  bool retval.992;
  bool iftmp.991;
  bool retval.990;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 32;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.991 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.991 = 0;

  <bb 6> :
  retval.990 = iftmp.991;
  if (retval.990 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.253693 = hash_table_higher_prime_index (_5);
  nindex = D.253693;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.253694 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.253694;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.253696 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.253696;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.253697 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.253697;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.993 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.993 = 0;

  <bb 15> :
  retval.992 = iftmp.993;
  if (retval.992 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.253698 = hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash (x);
  _16 = D.253698;
  D.253699 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.253699;
  D.237244 = std::move<hash_map<tree_node*, function_pthread_detched_array>::hash_entry&> (x);
  D.237206 = q;
  D.237207 = operator new (32, D.237206);
  hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash_entry (D.237207, D.237244);

  <bb 17> :
  p = p + 32;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10167, decl_uid=193448, cgraph_uid=6799, symbol_order=7596)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.253700;

  <bb 2> :
  D.253700 = this->m_size;

  <bb 3> :
<L0>:
  return D.253700;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10168, decl_uid=193450, cgraph_uid=6800, symbol_order=7597)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.253702;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.253702 = _1 - _2;

  <bb 3> :
<L0>:
  return D.253702;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10169, decl_uid=193550, cgraph_uid=6801, symbol_order=7598)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.994;
  bool D.253704;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.994 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.994 = 0;

  <bb 6> :
  D.253704 = iftmp.994;

  <bb 7> :
<L4>:
  return D.253704;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9371, decl_uid=193540, cgraph_uid=6003, symbol_order=6796)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.253726;
  struct value_type * D.253725;
  struct mem_alloc_description & D.253724;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.253722;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.253725 = xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_alloc (n);
  nentries = D.253725;
  goto <bb 6>; [INV]

  <bb 5> :
  D.253726 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (n);
  nentries = D.253726;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.253722 = nentries;

  <bb 9> :
<L14>:
  return D.253722;

}



;; Function xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10073, decl_uid=218428, cgraph_uid=6705, symbol_order=7502)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.253729;
  struct hash_entry * D.253727;

  <bb 2> :
  D.253729 = xcalloc (count, 32);
  D.253727 = D.253729;

  <bb 3> :
<L0>:
  return D.253727;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10074, decl_uid=235713, cgraph_uid=6706, symbol_order=7503)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.253736;
  struct hash_entry * D.253735;
  struct hash_entry * D.253733;
  bool retval.995;

  <bb 2> :
  retval.995 = need_finalization_p<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> ();
  if (retval.995 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 32;
  D.253735 = ggc_internal_cleared_alloc (_1, finalize, 32, c);
  D.253733 = D.253735;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 32;
  D.253736 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.253733 = D.253736;

  <bb 5> :
<L2>:
  return D.253733;

}



;; Function finalize<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10589, decl_uid=242175, cgraph_uid=7224, symbol_order=8021)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_pthread_detched_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10591, decl_uid=245585, cgraph_uid=7222, symbol_order=8019)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_pthread_detched_array::~function_pthread_detched_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10588, decl_uid=242174, cgraph_uid=7220, symbol_order=8017)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> ()
{
  bool D.253737;

  <bb 2> :
  D.253737 = 1;

  <bb 3> :
<L0>:
  return D.253737;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10171, decl_uid=193373, cgraph_uid=6803, symbol_order=7600)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.253741;
  hashval_t D.253739;

  <bb 2> :
  _1 = &e->m_key;
  D.253741 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::hash (_1);
  D.253739 = D.253741;

  <bb 3> :
<L0>:
  return D.253739;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10170, decl_uid=193543, cgraph_uid=6802, symbol_order=7599)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.253754;
  bool D.253753;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.997;
  struct value_type * D.253745;
  bool retval.996;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 32;
  slot = _2 + _4;
  D.253753 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.996 = D.253753;
  if (retval.996 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.253745 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 32;
  slot = _8 + _10;
  D.253754 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.997 = D.253754;
  if (retval.997 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.253745 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.253745;

}



;; Function std::move<hash_map<tree_node*, function_pthread_detched_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10172, decl_uid=237204, cgraph_uid=6804, symbol_order=7601)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_pthread_detched_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.253755;

  <bb 2> :
  D.253755 = __t;

  <bb 3> :
<L0>:
  return D.253755;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9526, decl_uid=237229, cgraph_uid=6157, symbol_order=6950)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.237231)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.237231->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.237231->m_value;
  function_pthread_detched_array::function_pthread_detched_array (_2, _3);
  return;

}



;; Function function_pthread_detched_array::function_pthread_detched_array (_ZN30function_pthread_detched_arrayC2EOS_, funcdef_no=9524, decl_uid=193665, cgraph_uid=6154, symbol_order=6947)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_detched_array::function_pthread_detched_array (struct function_pthread_detched_array * const this, struct function_pthread_detched_array & D.193667)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->pthread_detched_array;
  _2 = &D.193667->pthread_detched_array;
  std::vector<pthread_detched_type>::vector (_1, _2);
  return;

}



;; Function std::vector<pthread_detched_type>::vector (_ZNSt6vectorI20pthread_detched_typeSaIS0_EEC2EOS2_, funcdef_no=9522, decl_uid=177671, cgraph_uid=6151, symbol_order=6944)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_detched_type>::vector (struct vector * const this, struct vector & D.177673)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.177714;
  _2 = &D.177673->D.177714;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EEC2EOS2_, funcdef_no=9520, decl_uid=177139, cgraph_uid=6148, symbol_order=6941)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.177141)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.177141->_M_impl;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10174, decl_uid=177045, cgraph_uid=6806, symbol_order=7603)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl&> (__x);
  std::allocator<pthread_detched_type>::allocator (this, _1);
  _2 = &this->D.177059;
  _3 = std::move<std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.177059;
  std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI20pthread_detched_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10653, decl_uid=242594, cgraph_uid=7285, symbol_order=8082)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.253757;

  <bb 2> :
  D.253757 = __t;

  <bb 3> :
<L0>:
  return D.253757;

}



;; Function std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI20pthread_detched_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10655, decl_uid=177001, cgraph_uid=7287, symbol_order=8084)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_detched_type, std::allocator<pthread_detched_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8967, decl_uid=218430, cgraph_uid=5599, symbol_order=6392)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9528, decl_uid=193561, cgraph_uid=6160, symbol_order=6953)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_pthread_detched_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10176, decl_uid=193385, cgraph_uid=6808, symbol_order=7605)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::mark_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::mark_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10657, decl_uid=242609, cgraph_uid=7289, symbol_order=8086)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::mark_empty<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function function_pthread_exit_array::function_pthread_exit_array (_ZN27function_pthread_exit_arrayC2Ev, funcdef_no=6403, decl_uid=194124, cgraph_uid=3378, symbol_order=4156)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_exit_array::function_pthread_exit_array (struct function_pthread_exit_array * const this)
{
  <bb 2> :
  _1 = &this->pthread_exit_array;
  std::vector<pthread_exit_type>::vector (_1);
  return;

}



;; Function std::vector<pthread_exit_type>::vector (_ZNSt6vectorI17pthread_exit_typeSaIS0_EEC2Ev, funcdef_no=6401, decl_uid=178751, cgraph_uid=3375, symbol_order=4153)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_exit_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.178759;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EEC2Ev, funcdef_no=6399, decl_uid=178209, cgraph_uid=3372, symbol_order=4150)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7763, decl_uid=178101, cgraph_uid=4395, symbol_order=5184)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<pthread_exit_type>::allocator (this);
  _1 = &this->D.178104;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<pthread_exit_type>::allocator (_ZNSaI17pthread_exit_typeEC2Ev, funcdef_no=8705, decl_uid=177879, cgraph_uid=5337, symbol_order=6130)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<pthread_exit_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeEC2Ev, funcdef_no=9530, decl_uid=177808, cgraph_uid=6162, symbol_order=6955)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_exit_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function function_pthread_exit_array::operator= (_ZN27function_pthread_exit_arrayaSERKS_, funcdef_no=6405, decl_uid=195644, cgraph_uid=3380, symbol_order=4158)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_pthread_exit_array & function_pthread_exit_array::operator= (struct function_pthread_exit_array * const this, const struct function_pthread_exit_array & D.195645)
{
  struct function_pthread_exit_array & D.253760;

  <bb 2> :
  _1 = &D.195645->pthread_exit_array;
  _2 = &this->pthread_exit_array;
  std::vector<pthread_exit_type>::operator= (_2, _1);
  D.253760 = this;

  <bb 3> :
<L0>:
  return D.253760;

}



;; Function std::vector<pthread_exit_type>::operator= (_ZNSt6vectorI17pthread_exit_typeSaIS0_EEaSERKS2_, funcdef_no=7771, decl_uid=178337, cgraph_uid=4405, symbol_order=5194)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<pthread_exit_type>::operator= (struct vector * const this, const struct vector & __x)
{
  struct pthread_exit_type * D.253795;
  struct pthread_exit_type * __tmp;
  const size_type __xlen;
  struct vector & D.253793;
  struct __normal_iterator D.253790;
  struct __normal_iterator D.253789;
  struct __normal_iterator D.253788;
  struct __normal_iterator D.253787;
  struct __normal_iterator D.253786;
  bool retval.1002;
  struct __normal_iterator D.253781;
  struct __normal_iterator D.253780;
  bool retval.1001;
  bool iftmp.1000;
  bool retval.999;
  bool retval.998;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.998 = __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_propagate_on_copy_assign ();
  if (retval.998 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.178759;
  _4 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.178759;
  _6 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1000 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1000 = 0;

  <bb 8> :
  retval.999 = iftmp.1000;
  if (retval.999 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<pthread_exit_type>::clear (this);
  _8 = &this->D.178759;
  _9 = this->D.178759._M_impl.D.178104._M_end_of_storage;
  _10 = this->D.178759._M_impl.D.178104._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 16;
  _13 = (long unsigned int) _12;
  _14 = this->D.178759._M_impl.D.178104._M_start;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (_8, _14, _13);
  this->D.178759._M_impl.D.178104._M_start = 0B;
  this->D.178759._M_impl.D.178104._M_finish = 0B;
  this->D.178759._M_impl.D.178104._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.178759;
  _16 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.178759;
  _18 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<pthread_exit_type> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<pthread_exit_type>::size (__x);
  _19 = std::vector<pthread_exit_type>::capacity (this);
  retval.1001 = __xlen > _19;
  if (retval.1001 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.253780 = std::vector<pthread_exit_type>::end (__x);
  D.253781 = std::vector<pthread_exit_type>::begin (__x);
  D.253795 = std::vector<pthread_exit_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (this, __xlen, D.253781, D.253780);
  __tmp = D.253795;
  _20 = &this->D.178759;
  _21 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_20);
  _22 = this->D.178759._M_impl.D.178104._M_finish;
  _23 = this->D.178759._M_impl.D.178104._M_start;
  std::_Destroy<pthread_exit_type*, pthread_exit_type> (_23, _22, _21);
  _24 = &this->D.178759;
  _25 = this->D.178759._M_impl.D.178104._M_end_of_storage;
  _26 = this->D.178759._M_impl.D.178104._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 16;
  _29 = (long unsigned int) _28;
  _30 = this->D.178759._M_impl.D.178104._M_start;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (_24, _30, _29);
  this->D.178759._M_impl.D.178104._M_start = __tmp;
  _31 = this->D.178759._M_impl.D.178104._M_start;
  _32 = __xlen * 16;
  _33 = _31 + _32;
  this->D.178759._M_impl.D.178104._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<pthread_exit_type>::size (this);
  retval.1002 = __xlen <= _34;
  if (retval.1002 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.178759;
  _36 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_35);
  D.253786 = std::vector<pthread_exit_type>::end (this);
  D.253787 = std::vector<pthread_exit_type>::begin (this);
  D.253788 = std::vector<pthread_exit_type>::end (__x);
  D.253789 = std::vector<pthread_exit_type>::begin (__x);
  D.253790 = std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (D.253789, D.253788, D.253787);
  std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type> (D.253790, D.253786, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.178759._M_impl.D.178104._M_start;
  _38 = __x->D.178759._M_impl.D.178104._M_start;
  _39 = std::vector<pthread_exit_type>::size (this);
  _40 = _39 * 16;
  _41 = _38 + _40;
  _42 = __x->D.178759._M_impl.D.178104._M_start;
  std::copy<pthread_exit_type*, pthread_exit_type*> (_42, _41, _37);
  _43 = &this->D.178759;
  _44 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_43);
  _45 = this->D.178759._M_impl.D.178104._M_finish;
  _46 = __x->D.178759._M_impl.D.178104._M_finish;
  _47 = __x->D.178759._M_impl.D.178104._M_start;
  _48 = std::vector<pthread_exit_type>::size (this);
  _49 = _48 * 16;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<pthread_exit_type*, pthread_exit_type*, pthread_exit_type> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.178759._M_impl.D.178104._M_start;
  _52 = __xlen * 16;
  _53 = _51 + _52;
  this->D.178759._M_impl.D.178104._M_finish = _53;

  <bb 17> :
  D.253793 = this;

  <bb 18> :
<L19>:
  return D.253793;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI17pthread_exit_typeES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7772, decl_uid=177971, cgraph_uid=4403, symbol_order=5192)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_propagate_on_copy_assign ()
{
  bool D.253796;

  <bb 2> :
  D.253796 = 0;

  <bb 3> :
<L0>:
  return D.253796;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI17pthread_exit_typeES1_E15_S_always_equalEv, funcdef_no=7773, decl_uid=177974, cgraph_uid=4404, symbol_order=5193)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<pthread_exit_type>, pthread_exit_type>::_S_always_equal ()
{
  bool D.253798;

  <bb 2> :
  D.253798 = 1;

  <bb 3> :
<L0>:
  return D.253798;

}



;; Function std::operator!= (_ZStneRKSaI17pthread_exit_typeES2_, funcdef_no=8714, decl_uid=177857, cgraph_uid=5346, symbol_order=6139)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.227100, const struct allocator & D.227101)
{
  bool D.253800;

  <bb 2> :
  D.253800 = 0;

  <bb 3> :
<L0>:
  return D.253800;

}



;; Function std::vector<pthread_exit_type>::clear (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE5clearEv, funcdef_no=8715, decl_uid=178489, cgraph_uid=5347, symbol_order=6140)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_exit_type>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.178759._M_impl.D.178104._M_start;
  std::vector<pthread_exit_type>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<pthread_exit_type>::_M_erase_at_end (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9533, decl_uid=178617, cgraph_uid=6165, symbol_order=6958)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<pthread_exit_type>::_M_erase_at_end (struct vector * const this, struct pthread_exit_type * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.178759._M_impl.D.178104._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 16;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.178759;
  _5 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_4);
  _6 = this->D.178759._M_impl.D.178104._M_finish;
  std::_Destroy<pthread_exit_type*, pthread_exit_type> (__pos, _6, _5);
  this->D.178759._M_impl.D.178104._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<pthread_exit_type> > (_ZSt15__alloc_on_copyISaI17pthread_exit_typeEEvRT_RKS2_, funcdef_no=8716, decl_uid=214858, cgraph_uid=5348, symbol_order=6141)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<pthread_exit_type> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<pthread_exit_type>::capacity (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE8capacityEv, funcdef_no=8717, decl_uid=178405, cgraph_uid=5349, symbol_order=6142)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_exit_type>::capacity (const struct vector * const this)
{
  size_type D.253805;

  <bb 2> :
  _1 = this->D.178759._M_impl.D.178104._M_end_of_storage;
  _2 = this->D.178759._M_impl.D.178104._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.253805 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.253805;

}



;; Function std::vector<pthread_exit_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8718, decl_uid=214865, cgraph_uid=5350, symbol_order=6143)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct pthread_exit_type * std::vector<pthread_exit_type>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct pthread_exit_type * D.253809;
  struct pthread_exit_type * __result;
  struct pthread_exit_type * D.253807;

  <bb 2> :
  _1 = &this->D.178759;
  D.253809 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_allocate (_1, __n);
  __result = D.253809;
  _2 = &this->D.178759;
  _3 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*, pthread_exit_type> (__first, __last, __result, _3);

  <bb 3> :
  D.253807 = __result;

  <bb 4> :
<L0>:
  return D.253807;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.178759;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<pthread_exit_type>::end (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE3endEv, funcdef_no=8721, decl_uid=178372, cgraph_uid=5353, symbol_order=6146)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<pthread_exit_type>::end (struct vector * const this)
{
  struct iterator D.227187;
  struct iterator D.253813;

  <bb 2> :
  _1 = &this->D.178759._M_impl.D.178104._M_finish;
  __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (&D.227187, _1);
  D.253813 = D.227187;
  D.227187 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253813;

}



;; Function __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9536, decl_uid=214947, cgraph_uid=6168, symbol_order=6961)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (struct __normal_iterator * const this, struct pthread_exit_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<pthread_exit_type>::begin (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE5beginEv, funcdef_no=8719, decl_uid=178368, cgraph_uid=5351, symbol_order=6144)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<pthread_exit_type>::begin (struct vector * const this)
{
  struct iterator D.227141;
  struct iterator D.253816;

  <bb 2> :
  _1 = &this->D.178759._M_impl.D.178104._M_start;
  __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (&D.227141, _1);
  D.253816 = D.227141;
  D.227141 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253816;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8720, decl_uid=214966, cgraph_uid=5352, symbol_order=6145)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.253821;
  struct __normal_iterator D.253820;
  struct __normal_iterator D.253819;

  <bb 2> :
  D.253820 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (__last);
  D.253821 = std::__miter_base<__gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> > > (__first);
  D.253819 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (D.253821, D.253820, __result);

  <bb 3> :
<L0>:
  return D.253819;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK17pthread_exit_typeSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9539, decl_uid=227159, cgraph_uid=6172, symbol_order=6965)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const pthread_exit_type*, std::vector<pthread_exit_type> >, __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct pthread_exit_type * D.253825;
  struct __normal_iterator D.253823;

  <bb 2> :
  _1 = std::__niter_base<pthread_exit_type*, std::vector<pthread_exit_type> > (__result);
  _2 = std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (__last);
  _3 = std::__niter_base<const pthread_exit_type*, std::vector<pthread_exit_type> > (__first);
  D.253825 = std::__copy_move_a1<false, const pthread_exit_type*, pthread_exit_type*> (_3, _2, _1);
  _4 = D.253825;
  D.253823 = std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (__result, _4);

  <bb 3> :
<L0>:
  return D.253823;

}



;; Function std::__niter_base<pthread_exit_type*, std::vector<pthread_exit_type> > (_ZSt12__niter_baseIP17pthread_exit_typeSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10180, decl_uid=237427, cgraph_uid=6812, symbol_order=7609)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__niter_base<pthread_exit_type*, std::vector<pthread_exit_type> > (struct __normal_iterator __it)
{
  struct pthread_exit_type * D.253826;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (&__it);
  D.253826 = *_1;

  <bb 3> :
<L0>:
  return D.253826;

}



;; Function __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9550, decl_uid=214934, cgraph_uid=6182, symbol_order=6975)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * const & __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (const struct __normal_iterator * const this)
{
  struct pthread_exit_type * const & D.253828;

  <bb 2> :
  D.253828 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.253828;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10182, decl_uid=237434, cgraph_uid=6814, symbol_order=7611)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type*> (struct __normal_iterator __from, struct pthread_exit_type * __res)
{
  struct __normal_iterator D.253830;

  <bb 2> :
  _1 = std::__niter_base<pthread_exit_type*, std::vector<pthread_exit_type> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 16;
  D.253830 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.253830;

}



;; Function __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10662, decl_uid=214925, cgraph_uid=7294, symbol_order=8091)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct pthread_exit_type * const D.245924;
  struct __normal_iterator D.245925;
  struct __normal_iterator D.253832;

  <bb 2> :
  _1 = this->_M_current;
  __n.1003_2 = (long unsigned int) __n;
  _3 = __n.1003_2 * 16;
  _4 = _1 + _3;
  D.245924 = _4;
  __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::__normal_iterator (&D.245925, &D.245924);
  D.253832 = D.245925;
  D.245925 = {CLOBBER};
  D.245924 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.253832;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8722, decl_uid=214972, cgraph_uid=5354, symbol_order=6147)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >, pthread_exit_type> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.227190)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9541, decl_uid=227192, cgraph_uid=6173, symbol_order=6966)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP17pthread_exit_typeSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10183, decl_uid=237458, cgraph_uid=6815, symbol_order=7612)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> > > (struct __normal_iterator D.242634, struct __normal_iterator D.242635)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<pthread_exit_type*, pthread_exit_type*> (_ZSt4copyIP17pthread_exit_typeS1_ET0_T_S3_S2_, funcdef_no=8723, decl_uid=214980, cgraph_uid=5355, symbol_order=6148)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::copy<pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.253838;
  struct pthread_exit_type * D.253836;

  <bb 2> :
  _1 = std::__miter_base<pthread_exit_type*> (__last);
  _2 = std::__miter_base<pthread_exit_type*> (__first);
  D.253838 = std::__copy_move_a<false, pthread_exit_type*, pthread_exit_type*> (_2, _1, __result);
  D.253836 = D.253838;

  <bb 3> :
<L0>:
  return D.253836;

}



;; Function std::__miter_base<pthread_exit_type*> (_ZSt12__miter_baseIP17pthread_exit_typeET_S2_, funcdef_no=9542, decl_uid=227208, cgraph_uid=6174, symbol_order=6967)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__miter_base<pthread_exit_type*> (struct pthread_exit_type * __it)
{
  struct pthread_exit_type * D.253839;

  <bb 2> :
  D.253839 = __it;

  <bb 3> :
<L0>:
  return D.253839;

}



;; Function std::__copy_move_a<false, pthread_exit_type*, pthread_exit_type*> (_ZSt13__copy_move_aILb0EP17pthread_exit_typeS1_ET1_T0_S3_S2_, funcdef_no=9543, decl_uid=227210, cgraph_uid=6175, symbol_order=6968)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a<false, pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.253843;
  struct pthread_exit_type * D.253841;

  <bb 2> :
  __result.1004_1 = __result;
  _2 = std::__niter_base<pthread_exit_type*> (__result.1004_1);
  _3 = std::__niter_base<pthread_exit_type*> (__last);
  _4 = std::__niter_base<pthread_exit_type*> (__first);
  D.253843 = std::__copy_move_a1<false, pthread_exit_type*, pthread_exit_type*> (_4, _3, _2);
  _5 = D.253843;
  D.253841 = std::__niter_wrap<pthread_exit_type*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.253841;

}



;; Function std::__copy_move_a1<false, pthread_exit_type*, pthread_exit_type*> (_ZSt14__copy_move_a1ILb0EP17pthread_exit_typeS1_ET1_T0_S3_S2_, funcdef_no=10185, decl_uid=237469, cgraph_uid=6817, symbol_order=7614)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a1<false, pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.253846;
  struct pthread_exit_type * D.253844;

  <bb 2> :
  D.253846 = std::__copy_move_a2<false, pthread_exit_type*, pthread_exit_type*> (__first, __last, __result);
  D.253844 = D.253846;

  <bb 3> :
<L0>:
  return D.253844;

}



;; Function std::__copy_move_a2<false, pthread_exit_type*, pthread_exit_type*> (_ZSt14__copy_move_a2ILb0EP17pthread_exit_typeS1_ET1_T0_S3_S2_, funcdef_no=10663, decl_uid=242643, cgraph_uid=7295, symbol_order=8092)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__copy_move_a2<false, pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.253847;

  <bb 2> :
  D.253847 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pthread_exit_type> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.253847;

}



;; Function std::__uninitialized_copy_a<pthread_exit_type*, pthread_exit_type*, pthread_exit_type> (_ZSt22__uninitialized_copy_aIP17pthread_exit_typeS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8724, decl_uid=214984, cgraph_uid=5356, symbol_order=6149)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__uninitialized_copy_a<pthread_exit_type*, pthread_exit_type*, pthread_exit_type> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result, struct allocator & D.227217)
{
  struct pthread_exit_type * D.253851;
  struct pthread_exit_type * D.253849;

  <bb 2> :
  D.253851 = std::uninitialized_copy<pthread_exit_type*, pthread_exit_type*> (__first, __last, __result);
  D.253849 = D.253851;

  <bb 3> :
<L0>:
  return D.253849;

}



;; Function std::uninitialized_copy<pthread_exit_type*, pthread_exit_type*> (_ZSt18uninitialized_copyIP17pthread_exit_typeS1_ET0_T_S3_S2_, funcdef_no=9544, decl_uid=227219, cgraph_uid=6176, symbol_order=6969)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::uninitialized_copy<pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.253854;
  const bool __assignable;
  struct pthread_exit_type * D.253852;

  <bb 2> :
  __assignable = 1;
  D.253854 = std::__uninitialized_copy<true>::__uninit_copy<pthread_exit_type*, pthread_exit_type*> (__first, __last, __result);
  D.253852 = D.253854;

  <bb 3> :
<L0>:
  return D.253852;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<pthread_exit_type*, pthread_exit_type*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIP17pthread_exit_typeS3_EET0_T_S5_S4_, funcdef_no=10187, decl_uid=237507, cgraph_uid=6819, symbol_order=7616)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__uninitialized_copy<true>::__uninit_copy<pthread_exit_type*, pthread_exit_type*> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result)
{
  struct pthread_exit_type * D.253857;
  struct pthread_exit_type * D.253855;

  <bb 2> :
  D.253857 = std::copy<pthread_exit_type*, pthread_exit_type*> (__first, __last, __result);
  D.253855 = D.253857;

  <bb 3> :
<L0>:
  return D.253855;

}



;; Function std::vector<pthread_exit_type>::push_back (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE9push_backERKS0_, funcdef_no=7774, decl_uid=178439, cgraph_uid=4407, symbol_order=5196)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<pthread_exit_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.253861;

  <bb 2> :
  _1 = this->D.178759._M_impl.D.178104._M_finish;
  _2 = this->D.178759._M_impl.D.178104._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.178759._M_impl.D.178104._M_finish;
  _4 = &this->D.178759._M_impl;
  std::allocator_traits<std::allocator<pthread_exit_type> >::construct<pthread_exit_type, const pthread_exit_type&> (_4, _3, __x);
  _5 = this->D.178759._M_impl.D.178104._M_finish;
  _6 = _5 + 16;
  this->D.178759._M_impl.D.178104._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.253861 = std::vector<pthread_exit_type>::end (this);
  std::vector<pthread_exit_type>::_M_realloc_insert<const pthread_exit_type&> (this, D.253861, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<pthread_exit_type> >::construct<pthread_exit_type, const pthread_exit_type&> (_ZNSt16allocator_traitsISaI17pthread_exit_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8725, decl_uid=214996, cgraph_uid=5357, symbol_order=6150)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<pthread_exit_type> >::construct<pthread_exit_type, const pthread_exit_type&> (struct allocator_type & __a, struct pthread_exit_type * __p, const struct pthread_exit_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const pthread_exit_type&> (__args#0);
  __gnu_cxx::new_allocator<pthread_exit_type>::construct<pthread_exit_type, const pthread_exit_type&> (__a, __p, _1);
  return;

}



;; Function std::forward<const pthread_exit_type&> (_ZSt7forwardIRK17pthread_exit_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9545, decl_uid=227234, cgraph_uid=6177, symbol_order=6970)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct pthread_exit_type & std::forward<const pthread_exit_type&> (const struct type & __t)
{
  const struct pthread_exit_type & D.253862;

  <bb 2> :
  D.253862 = __t;

  <bb 3> :
<L0>:
  return D.253862;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::construct<pthread_exit_type, const pthread_exit_type&> (_ZN9__gnu_cxx13new_allocatorI17pthread_exit_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9546, decl_uid=227236, cgraph_uid=6178, symbol_order=6971)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<pthread_exit_type>::construct<pthread_exit_type, const pthread_exit_type&> (struct new_allocator * const this, struct pthread_exit_type * __p, const struct pthread_exit_type & __args#0)
{
  void * D.237519;
  void * D.237518;
  const struct pthread_exit_type * D.237520;

  <bb 2> :
  D.237520 = std::forward<const pthread_exit_type&> (__args#0);
  D.237518 = __p;
  D.237519 = operator new (16, D.237518);
  MEM[(struct pthread_exit_type *)D.237519] = *D.237520;
  return;

}



;; Function std::vector<pthread_exit_type>::_M_realloc_insert<const pthread_exit_type&> (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8726, decl_uid=215165, cgraph_uid=5361, symbol_order=6154)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_exit_type>::_M_realloc_insert<const pthread_exit_type&> (struct vector * const this, struct iterator __position, const struct pthread_exit_type & __args#0)
{
  struct pthread_exit_type * D.253868;
  const size_type D.253867;
  struct pthread_exit_type * __new_finish;
  struct pthread_exit_type * __new_start;
  const size_type __elems_before;
  struct pthread_exit_type * __old_finish;
  struct pthread_exit_type * __old_start;
  const size_type __len;
  struct iterator D.227247;

  <bb 2> :
  D.253867 = std::vector<pthread_exit_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.253867;
  __old_start = this->D.178759._M_impl.D.178104._M_start;
  __old_finish = this->D.178759._M_impl.D.178104._M_finish;
  D.227247 = std::vector<pthread_exit_type>::begin (this);
  _1 = __gnu_cxx::operator-<pthread_exit_type*, std::vector<pthread_exit_type> > (&__position, &D.227247);
  __elems_before = (const size_type) _1;
  D.227247 = {CLOBBER};
  _2 = &this->D.178759;
  D.253868 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_allocate (_2, __len);
  __new_start = D.253868;
  __new_finish = __new_start;
  _3 = std::forward<const pthread_exit_type&> (__args#0);
  _4 = __elems_before * 16;
  _5 = __new_start + _4;
  _6 = &this->D.178759._M_impl;
  std::allocator_traits<std::allocator<pthread_exit_type> >::construct<pthread_exit_type, const pthread_exit_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.178759;
  _8 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<pthread_exit_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 16;
  _11 = &this->D.178759;
  _12 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<pthread_exit_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.178759;
  _23 = this->D.178759._M_impl.D.178104._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 16;
  _26 = (long unsigned int) _25;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.178759._M_impl.D.178104._M_start = __new_start;
  this->D.178759._M_impl.D.178104._M_finish = __new_finish;
  _27 = __len * 16;
  _28 = __new_start + _27;
  this->D.178759._M_impl.D.178104._M_end_of_storage = _28;
  return;

}



;; Function std::vector<pthread_exit_type>::_M_check_len (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9547, decl_uid=178608, cgraph_uid=6179, symbol_order=6972)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<pthread_exit_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.1007;
  size_type D.253872;
  const long unsigned int D.237525;
  bool retval.1005;

  <bb 2> :
  _1 = std::vector<pthread_exit_type>::max_size (this);
  _2 = std::vector<pthread_exit_type>::size (this);
  _3 = _1 - _2;
  __n.1006_4 = __n;
  retval.1005 = _3 < __n.1006_4;
  if (retval.1005 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<pthread_exit_type>::size (this);
  _6 = std::vector<pthread_exit_type>::size (this);
  D.237525 = _6;
  _7 = std::max<long unsigned int> (&D.237525, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.237525 = {CLOBBER};
  _9 = std::vector<pthread_exit_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<pthread_exit_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1007 = std::vector<pthread_exit_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1007 = __len;

  <bb 8> :
  D.253872 = iftmp.1007;

  <bb 9> :
<L6>:
  return D.253872;

}



;; Function std::vector<pthread_exit_type>::max_size (_ZNKSt6vectorI17pthread_exit_typeSaIS0_EE8max_sizeEv, funcdef_no=10188, decl_uid=178394, cgraph_uid=6820, symbol_order=7617)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_exit_type>::max_size (const struct vector * const this)
{
  size_type D.253879;

  <bb 2> :
  _1 = &this->D.178759;
  _2 = std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_M_get_Tp_allocator (_1);
  D.253879 = std::vector<pthread_exit_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.253879;

}



;; Function std::vector<pthread_exit_type>::_S_max_size (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10664, decl_uid=178615, cgraph_uid=7296, symbol_order=8093)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<pthread_exit_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.253881;

  <bb 2> :
  __diffmax = 576460752303423487;
  _1 = std::allocator_traits<std::allocator<pthread_exit_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.253881 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.253881;

}



;; Function std::allocator_traits<std::allocator<pthread_exit_type> >::max_size (_ZNSt16allocator_traitsISaI17pthread_exit_typeEE8max_sizeERKS1_, funcdef_no=10888, decl_uid=177929, cgraph_uid=7520, symbol_order=8319)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<pthread_exit_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.253884;

  <bb 2> :
  D.253884 = __gnu_cxx::new_allocator<pthread_exit_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.253884;

}



;; Function __gnu_cxx::new_allocator<pthread_exit_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI17pthread_exit_typeE8max_sizeEv, funcdef_no=10992, decl_uid=177771, cgraph_uid=7624, symbol_order=8423)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<pthread_exit_type>::max_size (const struct new_allocator * const this)
{
  size_type D.253886;

  <bb 2> :
  D.253886 = __gnu_cxx::new_allocator<pthread_exit_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.253886;

}



;; Function __gnu_cxx::operator-<pthread_exit_type*, std::vector<pthread_exit_type> > (_ZN9__gnu_cxxmiIP17pthread_exit_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9548, decl_uid=227248, cgraph_uid=6180, symbol_order=6973)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<pthread_exit_type*, std::vector<pthread_exit_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.253888;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<pthread_exit_type*, std::vector<pthread_exit_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.253888 = _5 /[ex] 16;

  <bb 3> :
<L0>:
  return D.253888;

}



;; Function std::vector<pthread_exit_type>::_S_relocate (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9549, decl_uid=178266, cgraph_uid=6181, symbol_order=6974)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::vector<pthread_exit_type>::_S_relocate (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.253891;
  struct pthread_exit_type * D.253890;

  <bb 2> :
  D.253890 = std::vector<pthread_exit_type>::_S_do_relocate (__first, __last, __result, __alloc, D.253891);

  <bb 3> :
<L0>:
  return D.253890;

}



;; Function std::vector<pthread_exit_type>::_S_do_relocate (_ZNSt6vectorI17pthread_exit_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10189, decl_uid=178254, cgraph_uid=6821, symbol_order=7618)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::vector<pthread_exit_type>::_S_do_relocate (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.242659)
{
  struct pthread_exit_type * D.253893;

  <bb 2> :
  D.253893 = std::__relocate_a<pthread_exit_type*, pthread_exit_type*, std::allocator<pthread_exit_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.253893;

}



;; Function std::__relocate_a<pthread_exit_type*, pthread_exit_type*, std::allocator<pthread_exit_type> > (_ZSt12__relocate_aIP17pthread_exit_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10665, decl_uid=227413, cgraph_uid=7297, symbol_order=8094)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pthread_exit_type * std::__relocate_a<pthread_exit_type*, pthread_exit_type*, std::allocator<pthread_exit_type> > (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result, struct allocator & __alloc)
{
  struct pthread_exit_type * D.253895;

  <bb 2> :
  _1 = std::__niter_base<pthread_exit_type*> (__result);
  _2 = std::__niter_base<pthread_exit_type*> (__last);
  _3 = std::__niter_base<pthread_exit_type*> (__first);
  D.253895 = std::__relocate_a_1<pthread_exit_type, pthread_exit_type> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.253895;

}



;; Function std::__relocate_a_1<pthread_exit_type, pthread_exit_type> (_ZSt14__relocate_a_1I17pthread_exit_typeS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E, funcdef_no=10889, decl_uid=227587, cgraph_uid=7521, symbol_order=8320)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct pthread_exit_type * std::__relocate_a_1<pthread_exit_type, pthread_exit_type> (struct pthread_exit_type * __first, struct pthread_exit_type * __last, struct pthread_exit_type * __result, struct allocator & D.247013)
{
  ptrdiff_t __count;
  struct pthread_exit_type * D.253900;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 16;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.1008_2 = (long unsigned int) __count;
  _3 = __count.1008_2 * 16;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.1009_4 = (long unsigned int) __count;
  _5 = __count.1009_4 * 16;
  D.253900 = __result + _5;

  <bb 5> :
<L3>:
  return D.253900;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::put (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7776, decl_uid=193790, cgraph_uid=4408, symbol_order=5197)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_pthread_exit_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_pthread_exit_array & v)
{
  bool D.253909;
  struct hash_entry * D.253908;
  unsigned int D.253907;
  bool ins;
  struct hash_entry * e;
  bool D.253905;
  void * D.215175;
  void * D.215174;

  <bb 2> :
  _1 = &this->m_table;
  D.253907 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::hash (k);
  _2 = D.253907;
  D.253908 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.253908;
  D.253909 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::is_empty (e);
  ins = D.253909;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.215174 = &e->m_value;
  D.215175 = operator new (24, D.215174);
  function_pthread_exit_array::function_pthread_exit_array (D.215175, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_pthread_exit_array::operator= (_4, v);

  <bb 5> :
  D.253905 = ~ins;

  <bb 6> :
<L3>:
  return D.253905;

  <bb 7> :
<L4>:
  operator delete (D.215175, D.215174);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8730, decl_uid=193948, cgraph_uid=5362, symbol_order=6155)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.253960;
  bool D.253959;
  bool D.253958;
  bool D.253957;
  bool D.253956;
  bool D.253955;
  struct value_type * D.253954;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.1015;
  bool retval.1014;
  bool retval.1013;
  bool retval.1012;
  bool retval.1011;
  bool retval.1010;
  struct value_type * D.253916;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 32;
  entry = _11 + _13;
  size = this->m_size;
  D.253955 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1010 = D.253955;
  if (retval.1010 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.253956 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1011 = D.253956;
  if (retval.1011 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 32;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.253957 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (entry, comparable);
  retval.1012 = D.253957;
  if (retval.1012 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 32;
  D.253916 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 32;
  entry = _24 + _26;
  D.253958 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1013 = D.253958;
  if (retval.1013 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.253959 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1014 = D.253959;
  if (retval.1014 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 32;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.253960 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::equal (entry, comparable);
  retval.1015 = D.253960;
  if (retval.1015 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 32;
  D.253916 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.253916 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.253916 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 32;
  D.253916 = _37 + _39;

  <bb 27> :
<L37>:
  return D.253916;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9552, decl_uid=194029, cgraph_uid=6196, symbol_order=6989)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.253991;
  unsigned int D.253990;
  bool D.253989;
  bool D.253988;
  struct mem_alloc_description & D.253987;
  struct value_type * D.253986;
  unsigned int D.253985;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.237563;
  void * D.237562;
  struct hash_entry & D.237600;
  bool iftmp.1019;
  bool retval.1018;
  bool iftmp.1017;
  bool retval.1016;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 32;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1017 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1017 = 0;

  <bb 6> :
  retval.1016 = iftmp.1017;
  if (retval.1016 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.253985 = hash_table_higher_prime_index (_5);
  nindex = D.253985;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.253986 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.253986;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.253988 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.253988;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.253989 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.253989;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.1019 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.1019 = 0;

  <bb 15> :
  retval.1018 = iftmp.1019;
  if (retval.1018 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.253990 = hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash (x);
  _16 = D.253990;
  D.253991 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.253991;
  D.237600 = std::move<hash_map<tree_node*, function_pthread_exit_array>::hash_entry&> (x);
  D.237562 = q;
  D.237563 = operator new (32, D.237562);
  hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash_entry (D.237563, D.237600);

  <bb 17> :
  p = p + 32;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10191, decl_uid=193924, cgraph_uid=6823, symbol_order=7620)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.253992;

  <bb 2> :
  D.253992 = this->m_size;

  <bb 3> :
<L0>:
  return D.253992;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10192, decl_uid=193926, cgraph_uid=6824, symbol_order=7621)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.253994;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.253994 = _1 - _2;

  <bb 3> :
<L0>:
  return D.253994;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10193, decl_uid=194026, cgraph_uid=6825, symbol_order=7622)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.1020;
  bool D.253996;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1020 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1020 = 0;

  <bb 6> :
  D.253996 = iftmp.1020;

  <bb 7> :
<L4>:
  return D.253996;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9384, decl_uid=194016, cgraph_uid=6016, symbol_order=6809)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.254018;
  struct value_type * D.254017;
  struct mem_alloc_description & D.254016;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.254014;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.254017 = xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_alloc (n);
  nentries = D.254017;
  goto <bb 6>; [INV]

  <bb 5> :
  D.254018 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (n);
  nentries = D.254018;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.254014 = nentries;

  <bb 9> :
<L14>:
  return D.254014;

}



;; Function xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10081, decl_uid=218452, cgraph_uid=6713, symbol_order=7510)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.254021;
  struct hash_entry * D.254019;

  <bb 2> :
  D.254021 = xcalloc (count, 32);
  D.254019 = D.254021;

  <bb 3> :
<L0>:
  return D.254019;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10082, decl_uid=235882, cgraph_uid=6714, symbol_order=7511)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.254028;
  struct hash_entry * D.254027;
  struct hash_entry * D.254025;
  bool retval.1021;

  <bb 2> :
  retval.1021 = need_finalization_p<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> ();
  if (retval.1021 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 32;
  D.254027 = ggc_internal_cleared_alloc (_1, finalize, 32, c);
  D.254025 = D.254027;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 32;
  D.254028 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.254025 = D.254028;

  <bb 5> :
<L2>:
  return D.254025;

}



;; Function finalize<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10598, decl_uid=242211, cgraph_uid=7233, symbol_order=8030)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_pthread_exit_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10600, decl_uid=245620, cgraph_uid=7231, symbol_order=8028)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_pthread_exit_array::~function_pthread_exit_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10597, decl_uid=242210, cgraph_uid=7229, symbol_order=8026)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> ()
{
  bool D.254029;

  <bb 2> :
  D.254029 = 1;

  <bb 3> :
<L0>:
  return D.254029;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10195, decl_uid=193849, cgraph_uid=6827, symbol_order=7624)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.254033;
  hashval_t D.254031;

  <bb 2> :
  _1 = &e->m_key;
  D.254033 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::hash (_1);
  D.254031 = D.254033;

  <bb 3> :
<L0>:
  return D.254031;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10194, decl_uid=194019, cgraph_uid=6826, symbol_order=7623)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.254046;
  bool D.254045;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.1023;
  struct value_type * D.254037;
  bool retval.1022;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 32;
  slot = _2 + _4;
  D.254045 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1022 = D.254045;
  if (retval.1022 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.254037 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 32;
  slot = _8 + _10;
  D.254046 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1023 = D.254046;
  if (retval.1023 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.254037 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.254037;

}



;; Function std::move<hash_map<tree_node*, function_pthread_exit_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10196, decl_uid=237560, cgraph_uid=6828, symbol_order=7625)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_pthread_exit_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.254047;

  <bb 2> :
  D.254047 = __t;

  <bb 3> :
<L0>:
  return D.254047;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9563, decl_uid=237585, cgraph_uid=6194, symbol_order=6987)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.237587)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.237587->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.237587->m_value;
  function_pthread_exit_array::function_pthread_exit_array (_2, _3);
  return;

}



;; Function function_pthread_exit_array::function_pthread_exit_array (_ZN27function_pthread_exit_arrayC2EOS_, funcdef_no=9561, decl_uid=194141, cgraph_uid=6191, symbol_order=6984)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_pthread_exit_array::function_pthread_exit_array (struct function_pthread_exit_array * const this, struct function_pthread_exit_array & D.194143)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->pthread_exit_array;
  _2 = &D.194143->pthread_exit_array;
  std::vector<pthread_exit_type>::vector (_1, _2);
  return;

}



;; Function std::vector<pthread_exit_type>::vector (_ZNSt6vectorI17pthread_exit_typeSaIS0_EEC2EOS2_, funcdef_no=9559, decl_uid=178716, cgraph_uid=6188, symbol_order=6981)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<pthread_exit_type>::vector (struct vector * const this, struct vector & D.178718)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.178759;
  _2 = &D.178718->D.178759;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EEC2EOS2_, funcdef_no=9557, decl_uid=178184, cgraph_uid=6185, symbol_order=6978)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.178186)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.178186->_M_impl;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10198, decl_uid=178090, cgraph_uid=6830, symbol_order=7627)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl&> (__x);
  std::allocator<pthread_exit_type>::allocator (this, _1);
  _2 = &this->D.178104;
  _3 = std::move<std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl&> (__x);
  _4 = &_3->D.178104;
  std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI17pthread_exit_typeSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10666, decl_uid=242689, cgraph_uid=7298, symbol_order=8095)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.254049;

  <bb 2> :
  D.254049 = __t;

  <bb 3> :
<L0>:
  return D.254049;

}



;; Function std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI17pthread_exit_typeSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10668, decl_uid=178046, cgraph_uid=7300, symbol_order=8097)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<pthread_exit_type, std::allocator<pthread_exit_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8971, decl_uid=218454, cgraph_uid=5603, symbol_order=6396)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9565, decl_uid=194037, cgraph_uid=6197, symbol_order=6990)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_pthread_exit_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10200, decl_uid=193861, cgraph_uid=6832, symbol_order=7629)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::mark_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::mark_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10670, decl_uid=242704, cgraph_uid=7302, symbol_order=8099)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::mark_empty<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function std::vector<assign_type>::push_back (_ZNSt6vectorI11assign_typeSaIS0_EE9push_backERKS0_, funcdef_no=7730, decl_uid=176336, cgraph_uid=4363, symbol_order=5152)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<assign_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.254055;

  <bb 2> :
  _1 = this->D.176656._M_impl.D.176001._M_finish;
  _2 = this->D.176656._M_impl.D.176001._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.176656._M_impl.D.176001._M_finish;
  _4 = &this->D.176656._M_impl;
  std::allocator_traits<std::allocator<assign_type> >::construct<assign_type, const assign_type&> (_4, _3, __x);
  _5 = this->D.176656._M_impl.D.176001._M_finish;
  _6 = _5 + 24;
  this->D.176656._M_impl.D.176001._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.254055 = std::vector<assign_type>::end (this);
  std::vector<assign_type>::_M_realloc_insert<const assign_type&> (this, D.254055, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<assign_type> >::construct<assign_type, const assign_type&> (_ZNSt16allocator_traitsISaI11assign_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8643, decl_uid=213929, cgraph_uid=5275, symbol_order=6068)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<assign_type> >::construct<assign_type, const assign_type&> (struct allocator_type & __a, struct assign_type * __p, const struct assign_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const assign_type&> (__args#0);
  __gnu_cxx::new_allocator<assign_type>::construct<assign_type, const assign_type&> (__a, __p, _1);
  return;

}



;; Function std::forward<const assign_type&> (_ZSt7forwardIRK11assign_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9448, decl_uid=225101, cgraph_uid=6080, symbol_order=6873)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct assign_type & std::forward<const assign_type&> (const struct type & __t)
{
  const struct assign_type & D.254056;

  <bb 2> :
  D.254056 = __t;

  <bb 3> :
<L0>:
  return D.254056;

}



;; Function __gnu_cxx::new_allocator<assign_type>::construct<assign_type, const assign_type&> (_ZN9__gnu_cxx13new_allocatorI11assign_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9449, decl_uid=225103, cgraph_uid=6081, symbol_order=6874)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<assign_type>::construct<assign_type, const assign_type&> (struct new_allocator * const this, struct assign_type * __p, const struct assign_type & __args#0)
{
  void * D.236514;
  void * D.236513;
  const struct assign_type * D.236515;

  <bb 2> :
  D.236515 = std::forward<const assign_type&> (__args#0);
  D.236513 = __p;
  D.236514 = operator new (24, D.236513);
  MEM[(struct assign_type *)D.236514] = *D.236515;
  return;

}



;; Function std::vector<assign_type>::_M_realloc_insert<const assign_type&> (_ZNSt6vectorI11assign_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8644, decl_uid=214098, cgraph_uid=5279, symbol_order=6072)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::_M_realloc_insert<const assign_type&> (struct vector * const this, struct iterator __position, const struct assign_type & __args#0)
{
  struct assign_type * D.254062;
  const size_type D.254061;
  struct assign_type * __new_finish;
  struct assign_type * __new_start;
  const size_type __elems_before;
  struct assign_type * __old_finish;
  struct assign_type * __old_start;
  const size_type __len;
  struct iterator D.225114;

  <bb 2> :
  D.254061 = std::vector<assign_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.254061;
  __old_start = this->D.176656._M_impl.D.176001._M_start;
  __old_finish = this->D.176656._M_impl.D.176001._M_finish;
  D.225114 = std::vector<assign_type>::begin (this);
  _1 = __gnu_cxx::operator-<assign_type*, std::vector<assign_type> > (&__position, &D.225114);
  __elems_before = (const size_type) _1;
  D.225114 = {CLOBBER};
  _2 = &this->D.176656;
  D.254062 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_allocate (_2, __len);
  __new_start = D.254062;
  __new_finish = __new_start;
  _3 = std::forward<const assign_type&> (__args#0);
  _4 = __elems_before * 24;
  _5 = __new_start + _4;
  _6 = &this->D.176656._M_impl;
  std::allocator_traits<std::allocator<assign_type> >::construct<assign_type, const assign_type&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.176656;
  _8 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<assign_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 24;
  _11 = &this->D.176656;
  _12 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<assign_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.176656;
  _23 = this->D.176656._M_impl.D.176001._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 24;
  _26 = (long unsigned int) _25;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.176656._M_impl.D.176001._M_start = __new_start;
  this->D.176656._M_impl.D.176001._M_finish = __new_finish;
  _27 = __len * 24;
  _28 = __new_start + _27;
  this->D.176656._M_impl.D.176001._M_end_of_storage = _28;
  return;

}



;; Function std::vector<assign_type>::_M_check_len (_ZNKSt6vectorI11assign_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9450, decl_uid=176505, cgraph_uid=6082, symbol_order=6875)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<assign_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.1026;
  size_type D.254066;
  const long unsigned int D.236520;
  bool retval.1024;

  <bb 2> :
  _1 = std::vector<assign_type>::max_size (this);
  _2 = std::vector<assign_type>::size (this);
  _3 = _1 - _2;
  __n.1025_4 = __n;
  retval.1024 = _3 < __n.1025_4;
  if (retval.1024 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<assign_type>::size (this);
  _6 = std::vector<assign_type>::size (this);
  D.236520 = _6;
  _7 = std::max<long unsigned int> (&D.236520, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.236520 = {CLOBBER};
  _9 = std::vector<assign_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<assign_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1026 = std::vector<assign_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1026 = __len;

  <bb 8> :
  D.254066 = iftmp.1026;

  <bb 9> :
<L6>:
  return D.254066;

}



;; Function std::vector<assign_type>::max_size (_ZNKSt6vectorI11assign_typeSaIS0_EE8max_sizeEv, funcdef_no=10126, decl_uid=176291, cgraph_uid=6758, symbol_order=7555)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<assign_type>::max_size (const struct vector * const this)
{
  size_type D.254073;

  <bb 2> :
  _1 = &this->D.176656;
  _2 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_1);
  D.254073 = std::vector<assign_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.254073;

}



;; Function std::vector<assign_type>::_S_max_size (_ZNSt6vectorI11assign_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10629, decl_uid=176512, cgraph_uid=7261, symbol_order=8058)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<assign_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.254075;

  <bb 2> :
  __diffmax = 384307168202282325;
  _1 = std::allocator_traits<std::allocator<assign_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.254075 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.254075;

}



;; Function std::allocator_traits<std::allocator<assign_type> >::max_size (_ZNSt16allocator_traitsISaI11assign_typeEE8max_sizeERKS1_, funcdef_no=10878, decl_uid=175826, cgraph_uid=7510, symbol_order=8309)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<assign_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.254078;

  <bb 2> :
  D.254078 = __gnu_cxx::new_allocator<assign_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.254078;

}



;; Function __gnu_cxx::new_allocator<assign_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI11assign_typeE8max_sizeEv, funcdef_no=10988, decl_uid=175668, cgraph_uid=7620, symbol_order=8419)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<assign_type>::max_size (const struct new_allocator * const this)
{
  size_type D.254080;

  <bb 2> :
  D.254080 = __gnu_cxx::new_allocator<assign_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.254080;

}



;; Function __gnu_cxx::operator-<assign_type*, std::vector<assign_type> > (_ZN9__gnu_cxxmiIP11assign_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9451, decl_uid=225115, cgraph_uid=6083, symbol_order=6876)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<assign_type*, std::vector<assign_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.254082;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<assign_type*, std::vector<assign_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.254082 = _5 /[ex] 24;

  <bb 3> :
<L0>:
  return D.254082;

}



;; Function std::vector<assign_type>::_S_relocate (_ZNSt6vectorI11assign_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9452, decl_uid=176163, cgraph_uid=6084, symbol_order=6877)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::vector<assign_type>::_S_relocate (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.254085;
  struct assign_type * D.254084;

  <bb 2> :
  D.254084 = std::vector<assign_type>::_S_do_relocate (__first, __last, __result, __alloc, D.254085);

  <bb 3> :
<L0>:
  return D.254084;

}



;; Function std::vector<assign_type>::_S_do_relocate (_ZNSt6vectorI11assign_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10127, decl_uid=176151, cgraph_uid=6759, symbol_order=7556)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::vector<assign_type>::_S_do_relocate (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.242409)
{
  struct assign_type * D.254087;

  <bb 2> :
  D.254087 = std::__relocate_a<assign_type*, assign_type*, std::allocator<assign_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.254087;

}



;; Function std::__relocate_a<assign_type*, assign_type*, std::allocator<assign_type> > (_ZSt12__relocate_aIP11assign_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10630, decl_uid=225280, cgraph_uid=7262, symbol_order=8059)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct assign_type * std::__relocate_a<assign_type*, assign_type*, std::allocator<assign_type> > (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result, struct allocator & __alloc)
{
  struct assign_type * D.254089;

  <bb 2> :
  _1 = std::__niter_base<assign_type*> (__result);
  _2 = std::__niter_base<assign_type*> (__last);
  _3 = std::__niter_base<assign_type*> (__first);
  D.254089 = std::__relocate_a_1<assign_type, assign_type> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.254089;

}



;; Function std::__relocate_a_1<assign_type, assign_type> (_ZSt14__relocate_a_1I11assign_typeS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E, funcdef_no=10879, decl_uid=225454, cgraph_uid=7511, symbol_order=8310)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct assign_type * std::__relocate_a_1<assign_type, assign_type> (struct assign_type * __first, struct assign_type * __last, struct assign_type * __result, struct allocator & D.246907)
{
  ptrdiff_t __count;
  struct assign_type * D.254094;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 24;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.1027_2 = (long unsigned int) __count;
  _3 = __count.1027_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.1028_4 = (long unsigned int) __count;
  _5 = __count.1028_4 * 24;
  D.254094 = __result + _5;

  <bb 5> :
<L3>:
  return D.254094;

}



;; Function collect_function_return (_Z23collect_function_returnP6gimpleP11cgraph_nodeP15basic_block_def, funcdef_no=6406, decl_uid=187031, cgraph_uid=3382, symbol_order=4160)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;; 2 succs { 14 3 }
;; 3 succs { 4 6 }
;; 4 succs { 14 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 13 8 }
;; 8 succs { 13 9 }
;; 9 succs { 13 10 }
;; 10 succs { 13 11 }
;; 11 succs { 13 12 }
;; 12 succs { 1 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { }
void collect_function_return (struct gimple * gc, struct cgraph_node * node, struct basic_block_def * bb)
{
  struct function * D.254102;
  struct greturn * D.254101;
  struct greturn * D.254100;
  struct return_type ret_type;
  struct vector ret_type_array;
  union tree_node * get_function_return_tree;
  struct function_return_array fun_array;
  bool retval.1029;

  <bb 2> :
  function_return_array::function_return_array (&fun_array);
  D.254100 = as_a<greturn*, gimple> (gc);

  <bb 3> :
  _1 = D.254100;
  _2 = gimple_return_retval (_1);
  retval.1029 = _2 != 0B;
  if (retval.1029 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  D.254101 = as_a<greturn*, gimple> (gc);

  <bb 5> :
  _3 = D.254101;
  get_function_return_tree = gimple_return_retval (_3);
  goto <bb 7>; [INV]

  <bb 6> :
  get_function_return_tree = 0B;

  <bb 7> :
  std::vector<return_type>::vector (&ret_type_array);
  std::vector<return_type>::operator= (&fun_array.return_type_array, &ret_type_array);

  <bb 8> :
  return_type::return_type (&ret_type);
  ret_type.stmt = gc;
  ret_type.return_tree = get_function_return_tree;
  std::vector<return_type>::push_back (&global_ret_type_array, &ret_type);

  <bb 9> :
  std::vector<return_type>::push_back (&fun_array.return_type_array, &ret_type);

  <bb 10> :
  function_return_collect.1030_4 = function_return_collect;
  D.254102 = cgraph_node::get_fun (node);

  <bb 11> :
  _5 = D.254102;
  _6 = &_5->decl;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.1030_4, _6, &fun_array);

  <bb 12> :
  std::vector<return_type>::~vector (&ret_type_array);
  function_return_array::~function_return_array (&fun_array);
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  ret_type = {CLOBBER};
  return;

  <bb 13> :
<L3>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 3

  <bb 14> :
<L4>:
  function_return_array::~function_return_array (&fun_array);
  resx 2

  <bb 15> :
<L5>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  ret_type = {CLOBBER};
  resx 1

}



;; Function as_a<greturn*, gimple> (_Z4as_aIP7greturn6gimpleET_PT0_, funcdef_no=7777, decl_uid=195823, cgraph_uid=4409, symbol_order=5198)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct greturn * as_a<greturn*, gimple> (struct gimple * p)
{
  struct greturn * D.254106;

  <bb 2> :
  D.254106 = reinterpret_is_a_helper<greturn*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.254106;

}



;; Function reinterpret_is_a_helper<greturn*>::cast<gimple> (_ZN23reinterpret_is_a_helperIP7greturnE4castI6gimpleEES1_PT_, funcdef_no=8733, decl_uid=215182, cgraph_uid=5365, symbol_order=6158)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct greturn * reinterpret_is_a_helper<greturn*>::cast<gimple> (struct gimple * p)
{
  struct greturn * D.254108;

  <bb 2> :
  D.254108 = p;

  <bb 3> :
<L0>:
  return D.254108;

}



;; Function gimple_return_retval (_ZL20gimple_return_retvalPK7greturn, funcdef_no=2464, decl_uid=94269, cgraph_uid=1601, symbol_order=1761)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_return_retval (const struct greturn * gs)
{
  union tree_node * D.254110;

  <bb 2> :
  D.254110 = gs->D.90483.op[0];

  <bb 3> :
<L0>:
  return D.254110;

}



;; Function FunctionStmtMappingRet (_Z22FunctionStmtMappingRetP3ptbS0_P12gimple_array, funcdef_no=6407, decl_uid=187035, cgraph_uid=3383, symbol_order=4161)

Removing basic block 41
Removing basic block 42
Removing basic block 43
Removing basic block 55
Removing basic block 69
Removing basic block 70
Removing basic block 76
Removing basic block 82
Merging blocks 83 and 85
Removing basic block 86
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88
;;
;; Loop 1
;;  header 81, latch 80
;;  depth 1, outer 0
;;  nodes: 81 80 78 79 77 6 76 75 8 7 74 73 19 72 71 23 70 51 58 65 69 67 25 53 64 57 56 55 54 61 63 62 60 59 52 24 66 68 41 43 44 50 47 49 48 46 45 42 30 29 28 27 26 35 40 36 38 37 39 33 34 31 32 21 22 20 18 17 16 15 13 12 11 10 9 14
;;
;; Loop 2
;;  header 71, latch 70
;;  depth 2, outer 1
;;  nodes: 71 70 51 58 65 69 67 25 53 64 57 56 55 54 61 63 62 60 59 52 24 66 68 41 43 44 50 47 49 48 46 45 42 30 29 28 27 26 35 40 36 38 37 39 33 34 31 32
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 81 }
;; 6 succs { 7 77 }
;; 7 succs { 88 8 }
;; 8 succs { 9 77 }
;; 9 succs { 87 10 }
;; 10 succs { 87 11 }
;; 11 succs { 87 12 }
;; 12 succs { 87 13 }
;; 13 succs { 14 15 }
;; 14 succs { 76 }
;; 15 succs { 87 16 }
;; 16 succs { 87 17 }
;; 17 succs { 87 18 }
;; 18 succs { 19 20 }
;; 19 succs { 73 }
;; 20 succs { 86 21 }
;; 21 succs { 22 23 }
;; 22 succs { 23 }
;; 23 succs { 71 }
;; 24 succs { 25 52 }
;; 25 succs { 26 70 }
;; 26 succs { 31 27 }
;; 27 succs { 31 28 }
;; 28 succs { 31 29 }
;; 29 succs { 31 30 }
;; 30 succs { 31 42 }
;; 31 succs { 32 34 }
;; 32 succs { 33 34 }
;; 33 succs { 35 }
;; 34 succs { 35 }
;; 35 succs { 36 41 }
;; 36 succs { 37 41 }
;; 37 succs { 85 38 }
;; 38 succs { 39 41 }
;; 39 succs { 85 40 }
;; 40 succs { 85 41 }
;; 41 succs { 51 }
;; 42 succs { 44 43 }
;; 43 succs { 44 51 }
;; 44 succs { 45 51 }
;; 45 succs { 83 46 }
;; 46 succs { 83 47 }
;; 47 succs { 48 50 }
;; 48 succs { 83 49 }
;; 49 succs { 50 }
;; 50 succs { 51 }
;; 51 succs { 70 }
;; 52 succs { 53 65 }
;; 53 succs { 54 70 }
;; 54 succs { 85 55 }
;; 55 succs { 85 56 }
;; 56 succs { 58 57 }
;; 57 succs { 58 70 }
;; 58 succs { 59 70 }
;; 59 succs { 84 60 }
;; 60 succs { 84 61 }
;; 61 succs { 62 64 }
;; 62 succs { 84 63 }
;; 63 succs { 64 }
;; 64 succs { 70 }
;; 65 succs { 66 70 }
;; 66 succs { 85 67 }
;; 67 succs { 68 70 }
;; 68 succs { 85 69 }
;; 69 succs { 70 }
;; 70 succs { 71 }
;; 71 succs { 24 72 }
;; 72 succs { 73 }
;; 73 succs { 76 74 }
;; 74 succs { 75 }
;; 75 succs { 77 }
;; 76 succs { 77 }
;; 77 succs { 78 79 }
;; 78 succs { 80 }
;; 79 succs { 80 }
;; 80 succs { 81 }
;; 81 succs { 6 82 }
;; 82 succs { 1 }
;; 83 succs { 85 }
;; 84 succs { 85 }
;; 85 succs { 86 }
;; 86 succs { 87 }
;; 87 succs { 88 }
;; 88 succs { }
void FunctionStmtMappingRet (struct ptb * ptable, struct ptb * ftable, struct gimple_array * user_tmp)
{
  int finally_tmp.1056;
  union tree_node * D.254219;
  struct pthread_attr_array * D.254217;
  struct pthread_attr_array * D.254216;
  union tree_node * D.254215;
  const char * D.254214;
  union tree_node * D.254213;
  struct pthread_attr_array * D.254211;
  struct pthread_attr_array * D.254210;
  union tree_node * D.254209;
  struct function * D.254208;
  bool D.254207;
  struct function_return_array * D.254206;
  struct function * D.254205;
  struct function_return_array * D.254204;
  struct function * D.254203;
  const char * D.254202;
  union tree_node * D.254201;
  struct gimple_array * D.254200;
  union tree_node * getvardecl;
  struct pthread_attr_array pthread_attr_array;
  const char * name;
  union tree_node * getvardecl;
  struct pthread_attr_array pthread_attr_array;
  int i;
  struct gimple * def_stmt;
  union tree_node * second;
  struct vector ret_type_array;
  struct function_return_array fun_array;
  const char * name;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;
  union tree_node * iftmp.1055;
  bool retval.1054;
  bool retval.1053;
  bool retval.1052;
  bool retval.1049;
  bool retval.1047;
  bool retval.1042;
  bool retval.1040;
  bool retval.1039;
  bool iftmp.1038;
  bool retval.1037;
  bool retval.1036;
  bool retval.1033;
  union tree_node * iftmp.1031;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  if (table_temp != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.1031 = table_temp->target;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1031 = 0B;

  <bb 5> :
  t = iftmp.1031;
  goto <bb 81>; [INV]

  <bb 6> :
  _1 = table_temp->target;
  if (_1 != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 7> :
  treeGimpleArray.1032_2 = treeGimpleArray;
  _3 = &table_temp->target;
  D.254200 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.1032_2, _3);

  <bb 8> :
  user_tmp = D.254200;
  if (user_tmp != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 9> :
  _4 = table_temp->last_stmt;
  D.254201 = gimple_call_fn (_4);

  <bb 10> :
  _5 = D.254201;
  D.254202 = get_name (_5);

  <bb 11> :
  name = D.254202;
  function_return_collect.1034_6 = function_return_collect;
  _7 = table_temp->node;
  D.254203 = cgraph_node::get_fun (_7);

  <bb 12> :
  _8 = D.254203;
  _9 = &_8->decl;
  D.254204 = hash_map<tree_node*, function_return_array>::get (function_return_collect.1034_6, _9);

  <bb 13> :
  _10 = D.254204;
  retval.1033 = _10 == 0B;
  if (retval.1033 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  // predicted unlikely by continue predictor.
  goto <bb 76>; [INV]

  <bb 15> :
  function_return_collect.1035_11 = function_return_collect;
  _12 = table_temp->node;
  D.254205 = cgraph_node::get_fun (_12);

  <bb 16> :
  _13 = D.254205;
  _14 = &_13->decl;
  D.254206 = hash_map<tree_node*, function_return_array>::get (function_return_collect.1035_11, _14);

  <bb 17> :
  _15 = D.254206;
  function_return_array::function_return_array (&fun_array, _15);

  <bb 18> :
  _16 = fun_array.return_type_num;
  if (_16 == 2)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  // predicted unlikely by continue predictor.
  finally_tmp.1056 = 0;
  goto <bb 73>; [INV]

  <bb 20> :
  std::vector<return_type>::vector (&ret_type_array, &fun_array.return_type_array);

  <bb 21> :
  _17 = table_temp->target;
  _18 = _17->base.code;
  if (_18 == 131)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  _19 = table_temp->target;
  second = _19->exp.operands[0];
  _20 = table_temp->target;
  def_stmt = _20->ssa_name.def_stmt;
  table_temp->target = second;
  table_temp->last_stmt = def_stmt;

  <bb 23> :
  i = 0;
  goto <bb 71>; [INV]

  <bb 24> :
  _21 = table_temp->last_stmt;
  _22 = gimple_code (_21);
  retval.1036 = _22 == 8;
  if (retval.1036 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 25> :
  if (name != 0B)
    goto <bb 26>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 26> :
  _23 = strcmp (name, "realloc");
  if (_23 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 27> :
  _24 = strcmp (name, "malloc");
  if (_24 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 28> :
  _25 = strcmp (name, "calloc");
  if (_25 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 29> :
  _26 = strcmp (name, "xmalloc");
  if (_26 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 30> :
  _27 = strcmp (name, "strdup");
  if (_27 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 31> :
  _28 = (long unsigned int) i;
  _29 = std::vector<return_type>::operator[] (&ret_type_array, _28);
  _30 = _29->return_tree;
  if (_30 != 0B)
    goto <bb 32>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 32> :
  _31 = table_temp->target;
  if (_31 != 0B)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  iftmp.1038 = 1;
  goto <bb 35>; [INV]

  <bb 34> :
  iftmp.1038 = 0;

  <bb 35> :
  retval.1037 = iftmp.1038;
  if (retval.1037 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 36> :
  _32 = (long unsigned int) i;
  _33 = std::vector<return_type>::operator[] (&ret_type_array, _32);
  _34 = _33->return_tree;
  _35 = _34->base.code;
  retval.1039 = _35 == 153;
  if (retval.1039 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 37> :
  _36 = (long unsigned int) i;
  _37 = std::vector<return_type>::operator[] (&ret_type_array, _36);
  _38 = _37->return_tree;
  _39 = table_temp->target;
  D.254207 = ptr_derefs_may_alias_p (_39, _38);

  <bb 38> :
  retval.1040 = D.254207;
  if (retval.1040 != 0)
    goto <bb 39>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 39> :
  fun_array.return_type_num = 2;
  function_return_collect.1041_40 = function_return_collect;
  _41 = table_temp->node;
  D.254208 = cgraph_node::get_fun (_41);

  <bb 40> :
  _42 = D.254208;
  _43 = &_42->decl;
  hash_map<tree_node*, function_return_array>::put (function_return_collect.1041_40, _43, &fun_array);

  <bb 41> :
  goto <bb 51>; [INV]

  <bb 42> :
  _44 = strcmp (name, "pthread_create");
  if (_44 == 0)
    goto <bb 44>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 43> :
  _45 = strcmp (name, "pthread_join");
  if (_45 == 0)
    goto <bb 44>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 44> :
  _46 = strcmp (name, "pthread_create");
  if (_46 == 0)
    goto <bb 45>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 45> :
  pthread_attr_array::pthread_attr_array (&pthread_attr_array);
  _47 = table_temp->last_stmt;
  D.254209 = gimple_call_arg (_47, 1);

  <bb 46> :
  _48 = D.254209;
  _49 = _48->exp.operands[0];
  getvardecl = _49;
  pthread_attr_setdetachstates.1043_50 = pthread_attr_setdetachstates;
  D.254210 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.1043_50, &getvardecl);

  <bb 47> :
  _51 = D.254210;
  retval.1042 = _51 != 0B;
  if (retval.1042 != 0)
    goto <bb 48>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 48> :
  pthread_attr_setdetachstates.1044_52 = pthread_attr_setdetachstates;
  D.254211 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.1044_52, &getvardecl);

  <bb 49> :
  _53 = D.254211;
  pthread_attr_array = MEM[(const struct pthread_attr_array &)_53];
  FUNCITON_THREAD.1045_54 = FUNCITON_THREAD;
  FUNCITON_THREAD.1046_55 = (int) FUNCITON_THREAD.1045_54;
  table_temp->swap_type = FUNCITON_THREAD.1046_55;
  _56 = pthread_attr_array.attr_type_num;
  table_temp->pthread_type = _56;

  <bb 50> :
  pthread_attr_array = {CLOBBER};
  getvardecl = {CLOBBER};

  <bb 51> :
  goto <bb 70>; [INV]

  <bb 52> :
  _57 = table_temp->last_stmt;
  _58 = gimple_code (_57);
  retval.1047 = _58 == 6;
  if (retval.1047 != 0)
    goto <bb 53>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 53> :
  _59 = table_temp->swap_type;
  _60 = (unsigned int) _59;
  FUNCITON_THREAD.1048_61 = FUNCITON_THREAD;
  if (_60 == FUNCITON_THREAD.1048_61)
    goto <bb 54>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 54> :
  _62 = table_temp->swap_stmt;
  D.254213 = gimple_call_fn (_62);

  <bb 55> :
  _63 = D.254213;
  D.254214 = get_name (_63);

  <bb 56> :
  name = D.254214;
  _64 = strcmp (name, "pthread_create");
  if (_64 == 0)
    goto <bb 58>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 57> :
  _65 = strcmp (name, "pthread_join");
  if (_65 == 0)
    goto <bb 58>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 58> :
  _66 = strcmp (name, "pthread_create");
  if (_66 == 0)
    goto <bb 59>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 59> :
  pthread_attr_array::pthread_attr_array (&pthread_attr_array);
  _67 = table_temp->swap_stmt;
  D.254215 = gimple_call_arg (_67, 1);

  <bb 60> :
  _68 = D.254215;
  _69 = _68->exp.operands[0];
  getvardecl = _69;
  pthread_attr_setdetachstates.1050_70 = pthread_attr_setdetachstates;
  D.254216 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.1050_70, &getvardecl);

  <bb 61> :
  _71 = D.254216;
  retval.1049 = _71 != 0B;
  if (retval.1049 != 0)
    goto <bb 62>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 62> :
  pthread_attr_setdetachstates.1051_72 = pthread_attr_setdetachstates;
  D.254217 = hash_map<tree_node*, pthread_attr_array>::get (pthread_attr_setdetachstates.1051_72, &getvardecl);

  <bb 63> :
  _73 = D.254217;
  pthread_attr_array = MEM[(const struct pthread_attr_array &)_73];
  _74 = pthread_attr_array.attr_type_num;
  table_temp->pthread_type = _74;

  <bb 64> :
  pthread_attr_array = {CLOBBER};
  getvardecl = {CLOBBER};
  goto <bb 70>; [INV]

  <bb 65> :
  _75 = table_temp->last_stmt;
  _76 = gimple_code (_75);
  retval.1052 = _76 == 18;
  if (retval.1052 != 0)
    goto <bb 66>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 66> :
  _77 = (long unsigned int) i;
  _78 = std::vector<return_type>::operator[] (&ret_type_array, _77);
  _79 = _78->return_tree;
  _80 = table_temp->last_stmt;
  D.254219 = gimple_phi_result (_80);

  <bb 67> :
  _81 = D.254219;
  retval.1053 = _79 == _81;
  if (retval.1053 != 0)
    goto <bb 68>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 68> :
  _82 = (long unsigned int) i;
  _83 = std::vector<return_type>::operator[] (&ret_type_array, _82);
  _84 = _83->stmt;
  _85 = (long unsigned int) i;
  _86 = std::vector<return_type>::operator[] (&ret_type_array, _85);
  _87 = _86->return_tree;
  _88 = (long unsigned int) i;
  _89 = std::vector<return_type>::operator[] (&ret_type_array, _88);
  _90 = _89->return_tree;
  _91 = table_temp->last_stmt;
  set_gimple_array (user_tmp, _91, _90, _87, _84);

  <bb 69> :
  // predicted unlikely by continue predictor.

  <bb 70> :
  i = i + 1;

  <bb 71> :
  _92 = (long unsigned int) i;
  _93 = std::vector<return_type>::size (&ret_type_array);
  retval.1054 = _92 < _93;
  if (retval.1054 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 72> :
  std::vector<return_type>::~vector (&ret_type_array);
  finally_tmp.1056 = 1;

  <bb 73> :
  function_return_array::~function_return_array (&fun_array);
  if (finally_tmp.1056 == 1)
    goto <bb 74>; [INV]
  else
    goto <bb 76>; [INV]

  <bb 74> :
<L73>:

  <bb 75> :
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  goto <bb 77>; [INV]

  <bb 76> :
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};

  <bb 77> :
  table_temp = table_temp->next;
  if (table_temp != 0B)
    goto <bb 78>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 78> :
  iftmp.1055 = table_temp->target;
  goto <bb 80>; [INV]

  <bb 79> :
  iftmp.1055 = 0B;

  <bb 80> :
  t = iftmp.1055;

  <bb 81> :
  _94 = table_temp->next;
  if (_94 != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 82> :
  start = {CLOBBER};
  return;

  <bb 83> :
<L88>:
  pthread_attr_array = {CLOBBER};
  getvardecl = {CLOBBER};
  resx 5

  <bb 84> :
<L89>:
  pthread_attr_array = {CLOBBER};
  getvardecl = {CLOBBER};
  resx 7

  <bb 85> :
<L90>:
  std::vector<return_type>::~vector (&ret_type_array);
  resx 4

  <bb 86> :
<L91>:
  function_return_array::~function_return_array (&fun_array);
  resx 3

  <bb 87> :
<L92>:
  fun_array = {CLOBBER};
  ret_type_array = {CLOBBER};
  resx 2

  <bb 88> :
<L93>:
  start = {CLOBBER};
  resx 1

}



;; Function gimple_phi_result (_ZL17gimple_phi_resultPK6gimple, funcdef_no=2265, decl_uid=93420, cgraph_uid=1402, symbol_order=1562)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_phi_result (const struct gimple * gs)
{
  const struct gphi * D.254233;
  const struct gphi * phi_stmt;
  union tree_node * D.254231;

  <bb 2> :
  D.254233 = as_a<const gphi*, const gimple> (gs);
  phi_stmt = D.254233;
  D.254231 = gimple_phi_result (phi_stmt);

  <bb 3> :
<L0>:
  return D.254231;

}



;; Function as_a<const gphi*, const gimple> (_Z4as_aIPK4gphiK6gimpleET_PT0_, funcdef_no=7073, decl_uid=93408, cgraph_uid=3705, symbol_order=4491)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gphi * as_a<const gphi*, const gimple> (const struct gimple * p)
{
  const struct gphi * D.254236;
  const struct gphi * D.254234;

  <bb 2> :
  D.254236 = is_a_helper<const gphi*>::cast<gimple> (p);
  D.254234 = D.254236;

  <bb 3> :
<L0>:
  return D.254234;

}



;; Function is_a_helper<const gphi*>::cast<gimple> (_ZN11is_a_helperIPK4gphiE4castI6gimpleEES2_PKT_, funcdef_no=8085, decl_uid=207263, cgraph_uid=4717, symbol_order=5506)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gphi * is_a_helper<const gphi*>::cast<gimple> (const struct gimple * p)
{
  const struct gphi * D.254237;

  <bb 2> :
  D.254237 = reinterpret_is_a_helper<gphi*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.254237;

}



;; Function reinterpret_is_a_helper<gphi*>::cast<gimple> (_ZN23reinterpret_is_a_helperIP4gphiE4castI6gimpleEES1_PT_, funcdef_no=8087, decl_uid=207271, cgraph_uid=4719, symbol_order=5508)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gphi * reinterpret_is_a_helper<gphi*>::cast<gimple> (struct gimple * p)
{
  struct gphi * D.254239;

  <bb 2> :
  D.254239 = p;

  <bb 3> :
<L0>:
  return D.254239;

}



;; Function gimple_phi_result (_ZL17gimple_phi_resultPK4gphi, funcdef_no=2264, decl_uid=93417, cgraph_uid=1401, symbol_order=1561)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_phi_result (const struct gphi * gs)
{
  union tree_node * D.254241;

  <bb 2> :
  D.254241 = gs->result;

  <bb 3> :
<L0>:
  return D.254241;

}



;; Function FunctionStmtMappingAssign (_Z25FunctionStmtMappingAssignP3ptbP12gimple_array, funcdef_no=6408, decl_uid=187038, cgraph_uid=3384, symbol_order=4162)

Removing basic block 21
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
;;
;; Loop 1
;;  header 28, latch 27
;;  depth 1, outer 0
;;  nodes: 28 27 26 6 11 25 24 13 23 22 14 21 19 20 17 18 16 15 12 9 8 7 5 4 10
;;
;; Loop 2
;;  header 24, latch 23
;;  depth 2, outer 1
;;  nodes: 24 23 22 14 21 19 20 17 18 16 15
;;
;; Loop 3
;;  header 22, latch 21
;;  depth 3, outer 2
;;  nodes: 22 21 19 20 17 18 16 15
;; 2 succs { 31 3 }
;; 3 succs { 28 }
;; 4 succs { 31 5 }
;; 5 succs { 6 7 }
;; 6 succs { 26 }
;; 7 succs { 31 8 }
;; 8 succs { 31 9 }
;; 9 succs { 10 12 }
;; 10 succs { 31 11 }
;; 11 succs { 26 }
;; 12 succs { 31 13 }
;; 13 succs { 24 }
;; 14 succs { 22 }
;; 15 succs { 17 16 }
;; 16 succs { 17 18 }
;; 17 succs { 19 }
;; 18 succs { 19 }
;; 19 succs { 20 21 }
;; 20 succs { 30 21 }
;; 21 succs { 22 }
;; 22 succs { 15 23 }
;; 23 succs { 24 }
;; 24 succs { 14 25 }
;; 25 succs { 31 26 }
;; 26 succs { 31 27 }
;; 27 succs { 28 }
;; 28 succs { 4 29 }
;; 29 succs { 1 }
;; 30 succs { 31 }
;; 31 succs { }
void FunctionStmtMappingAssign (struct ptb * ptable, struct gimple_array * user_tmp)
{
  struct cgraph_node * D.254262;
  struct function * D.254260;
  bool D.254259;
  struct cgraph_node * D.254258;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct cgraph_node * node;
  struct basic_block_def * bb;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * used_stmt;
  struct gimple_array start;
  struct gimple * u_stmt;
  bool retval.1063;
  bool iftmp.1062;
  bool retval.1061;
  bool retval.1058;

  <bb 2> :
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  table_temp = ptable;
  symtab.1057_1 = symtab;
  D.254258 = symbol_table::first_defined_function (symtab.1057_1);

  <bb 3> :
  node = D.254258;
  goto <bb 28>; [INV]

  <bb 4> :
  _2 = node->D.97512.decl;
  D.254259 = gimple_has_body_p (_2);

  <bb 5> :
  _3 = D.254259;
  retval.1058 = ~_3;
  if (retval.1058 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  // predicted unlikely by continue predictor.
  goto <bb 26>; [INV]

  <bb 7> :
  D.254260 = cgraph_node::get_fun (node);

  <bb 8> :
  _4 = D.254260;
  push_cfun (_4);

  <bb 9> :
  cfun.1059_5 = cfun;
  if (cfun.1059_5 == 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  pop_cfun ();

  <bb 11> :
  // predicted unlikely by continue predictor.
  goto <bb 26>; [INV]

  <bb 12> :
  calculate_dominance_info (1);

  <bb 13> :
  cfun.1060_6 = cfun;
  _7 = cfun.1060_6->cfg;
  _8 = _7->x_entry_block_ptr;
  bb = _8->next_bb;
  goto <bb 24>; [INV]

  <bb 14> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 22>; [INV]

  <bb 15> :
  gc = gsi_stmt (gsi);
  _9 = is_gimple_call (gc);
  if (_9 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  _10 = is_gimple_assign (gc);
  if (_10 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  iftmp.1062 = 1;
  goto <bb 19>; [INV]

  <bb 18> :
  iftmp.1062 = 0;

  <bb 19> :
  retval.1061 = iftmp.1062;
  if (retval.1061 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  collect_FunctionMapping_Assign (gc, node, bb, ptable);

  <bb 21> :
  gsi_next (&gsi);

  <bb 22> :
  _11 = gsi_end_p (gsi);
  retval.1063 = ~_11;
  if (retval.1063 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 23> :
  gsi = {CLOBBER};
  bb = bb->next_bb;

  <bb 24> :
  cfun.1064_12 = cfun;
  _13 = cfun.1064_12->cfg;
  _14 = _13->x_exit_block_ptr;
  if (bb != _14)
    goto <bb 14>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 25> :
  pop_cfun ();

  <bb 26> :
  symtab.1065_15 = symtab;
  D.254262 = symbol_table::next_defined_function (symtab.1065_15, node);

  <bb 27> :
  node = D.254262;

  <bb 28> :
  if (node != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 29> :
  start = {CLOBBER};
  return;

  <bb 30> :
<L21>:
  gsi = {CLOBBER};
  resx 2

  <bb 31> :
<L22>:
  start = {CLOBBER};
  resx 1

}



;; Function parseLine (_Z9parseLinePc, funcdef_no=6409, decl_uid=195889, cgraph_uid=3385, symbol_order=4163)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3 5
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 3 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
int parseLine (char * line)
{
  const char * p;
  int i;
  int D.254265;

  <bb 2> :
  _1 = strlen (line);
  i = (int) _1;
  p = line;
  goto <bb 4>; [INV]

  <bb 3> :
  p = p + 1;

  <bb 4> :
  _2 = *p;
  if (_2 <= 47)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _3 = *p;
  if (_3 > 57)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _4 = (sizetype) i;
  _5 = _4 + 18446744073709551613;
  _6 = line + _5;
  *_6 = 0;
  i = atoi (p);
  D.254265 = i;

  <bb 7> :
<L4>:
  return D.254265;

}



;; Function GetProcessMemory (_Z16GetProcessMemoryv, funcdef_no=6410, decl_uid=195901, cgraph_uid=3386, symbol_order=4164)

Merging blocks 13 and 14
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;;
;; Loop 1
;;  header 10, latch 7
;;  depth 1, outer 0
;;  nodes: 10 7 4 11
;; 2 succs { 15 3 }
;; 3 succs { 10 }
;; 4 succs { 5 7 }
;; 5 succs { 15 6 }
;; 6 succs { 12 }
;; 7 succs { 8 10 }
;; 8 succs { 15 9 }
;; 9 succs { 12 }
;; 10 succs { 15 11 }
;; 11 succs { 4 12 }
;; 12 succs { 15 13 }
;; 13 succs { 14 }
;; 14 succs { 1 }
;; 15 succs { }
struct processMem_t GetProcessMemory ()
{
  char * D.254277;
  int D.254276;
  int D.254275;
  struct FILE * D.254274;
  struct processMem_t processMem;
  char line[128];
  struct FILE * file;
  struct processMem_t D.254272;
  bool retval.1066;

  <bb 2> :
  D.254274 = fopen ("/proc/self/status", "r");

  <bb 3> :
  file = D.254274;
  goto <bb 10>; [INV]

  <bb 4> :
  _1 = strncmp (&line, "VmSize:", 7);
  if (_1 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.254275 = parseLine (&line);

  <bb 6> :
  _2 = D.254275;
  _3 = (unsigned int) _2;
  processMem.virtualMem = _3;
  goto <bb 12>; [INV]

  <bb 7> :
  _4 = strncmp (&line, "VmRSS:", 6);
  if (_4 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  D.254276 = parseLine (&line);

  <bb 9> :
  _5 = D.254276;
  _6 = (unsigned int) _5;
  processMem.physicalMem = _6;
  goto <bb 12>; [INV]

  <bb 10> :
  D.254277 = fgets (&line, 128, file);

  <bb 11> :
  _7 = D.254277;
  retval.1066 = _7 != 0B;
  if (retval.1066 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  fclose (file);

  <bb 13> :
  D.254272 = processMem;
  line = {CLOBBER};
  processMem = {CLOBBER};

  <bb 14> :
<L8>:
  return D.254272;

  <bb 15> :
<L9>:
  line = {CLOBBER};
  processMem = {CLOBBER};
  resx 1

}



;; Function diff (_Z4diff8timespecS_, funcdef_no=6411, decl_uid=187041, cgraph_uid=3387, symbol_order=4165)

Merging blocks 5 and 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct timespec diff (struct timespec start, struct timespec end)
{
  struct timespec temp;
  struct timespec D.254283;

  <bb 2> :
  _1 = end.tv_nsec;
  _2 = start.tv_nsec;
  _3 = _1 - _2;
  if (_3 < 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = end.tv_sec;
  _5 = start.tv_sec;
  _6 = _4 - _5;
  _7 = _6 + -1;
  temp.tv_sec = _7;
  _8 = end.tv_nsec;
  _9 = _8 + 1000000000;
  _10 = start.tv_nsec;
  _11 = _9 - _10;
  temp.tv_nsec = _11;
  goto <bb 5>; [INV]

  <bb 4> :
  _12 = end.tv_sec;
  _13 = start.tv_sec;
  _14 = _12 - _13;
  temp.tv_sec = _14;
  _15 = end.tv_nsec;
  _16 = start.tv_nsec;
  _17 = _15 - _16;
  temp.tv_nsec = _17;

  <bb 5> :
  D.254283 = temp;
  temp = {CLOBBER};

  <bb 6> :
<L4>:
  return D.254283;

}



;; Function Varnew_search_imm_use (_Z21Varnew_search_imm_useP12gimple_arrayP6gimpleP9tree_nodeS4_, funcdef_no=6414, decl_uid=196216, cgraph_uid=3394, symbol_order=4172)

Removing basic block 28
Removing basic block 29
Removing basic block 42
Removing basic block 47
Removing basic block 57
Removing basic block 58
Removing basic block 84
Removing basic block 85
Removing basic block 93
Removing basic block 94
Removing basic block 110
Removing basic block 111
Removing basic block 114
Removing basic block 115
Removing basic block 146
Removing basic block 147
Removing basic block 148
Removing basic block 149
Removing basic block 150
Removing basic block 161
Removing basic block 162
Removing basic block 163
Removing basic block 164
Removing basic block 187
Removing basic block 188
Removing basic block 189
Removing basic block 190
Removing basic block 205
Removing basic block 206
Removing basic block 207
Removing basic block 208
Removing basic block 209
Removing basic block 220
Removing basic block 221
Removing basic block 222
Removing basic block 223
Removing basic block 246
Removing basic block 247
Removing basic block 248
Removing basic block 249
Removing basic block 250
Removing basic block 253
Removing basic block 254
Removing basic block 255
Removing basic block 257
Removing basic block 258
Removing basic block 260
Removing basic block 276
Removing basic block 287
Removing basic block 288
Removing basic block 289
Removing basic block 292
Removing basic block 293
Removing basic block 327
Removing basic block 328
Removing basic block 329
Removing basic block 330
Removing basic block 331
Removing basic block 345
Removing basic block 346
Removing basic block 347
Removing basic block 348
Removing basic block 371
Removing basic block 372
Removing basic block 373
Removing basic block 374
Removing basic block 392
Removing basic block 393
Removing basic block 394
Removing basic block 395
Removing basic block 396
Removing basic block 410
Removing basic block 411
Removing basic block 412
Removing basic block 413
Removing basic block 414
Removing basic block 415
Removing basic block 437
Removing basic block 438
Removing basic block 439
Removing basic block 440
Removing basic block 441
Removing basic block 444
Removing basic block 445
Removing basic block 446
Removing basic block 448
Removing basic block 449
Removing basic block 453
Removing basic block 454
Removing basic block 455
Removing basic block 466
Removing basic block 477
Removing basic block 492
Removing basic block 506
Removing basic block 507
Removing basic block 508
Removing basic block 509
Removing basic block 510
Removing basic block 511
Removing basic block 512
Removing basic block 520
Removing basic block 535
Removing basic block 536
Removing basic block 537
Removing basic block 561
Removing basic block 562
Removing basic block 563
Removing basic block 564
Removing basic block 565
Removing basic block 566
Removing basic block 567
Removing basic block 568
Removing basic block 569
Removing basic block 582
Removing basic block 595
Removing basic block 596
Removing basic block 597
Removing basic block 598
Removing basic block 599
Removing basic block 600
Removing basic block 613
Removing basic block 616
Removing basic block 617
Removing basic block 618
Removing basic block 626
Removing basic block 643
Removing basic block 644
Removing basic block 645
Removing basic block 646
Removing basic block 670
Removing basic block 671
Removing basic block 672
Removing basic block 673
Removing basic block 674
Removing basic block 675
Removing basic block 676
Removing basic block 677
Removing basic block 678
Removing basic block 699
Removing basic block 700
Removing basic block 701
Removing basic block 702
Removing basic block 703
Removing basic block 704
Removing basic block 712
Removing basic block 715
Removing basic block 716
Removing basic block 717
Removing basic block 718
Removing basic block 741
Removing basic block 742
Removing basic block 745
Removing basic block 748
Removing basic block 761
Removing basic block 762
Removing basic block 767
Removing basic block 768
Removing basic block 771
Removing basic block 778
Removing basic block 794
Removing basic block 795
Removing basic block 796
Removing basic block 797
Removing basic block 800
Removing basic block 801
Removing basic block 802
Removing basic block 803
Removing basic block 804
Removing basic block 807
;; 6 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 3
;;  header 638, latch 637
;;  depth 1, outer 0
;;  nodes
;;
;; Loop 5
;;  header 613, latch 612
;;  depth 2, outer 3
;;  nodes: 613 612 600 609 607 604 611 610 603 602 601 606 605 608 599 598
;;
;; Loop 4
;;  header 636, latch 635
;;  depth 2, outer 3
;;  nodes: 636 635 624 634 626 631 629 628 627 630 625 633 632 623 622
;;
;; Loop 2
;;  header 361, latch 360
;;  depth 1, outer 0
;;  nodes: 361 360 256 310 308 347 354 344 296 303 293 359 358 357 356 355 291 292 289 290 287 288 275 276 273 274 264 267 272 269 265 268 271 270 266 263 261 262 259 260 258 257 277 286 278 282 285 280 279 284 283 281 301 302 298 300 299 297 295 294 342 343 340 341 338 339 328 330 334 337 332 329 331 336 335 333 327 325 326 316 319 324 321 317 320 323 322 318 315 313 314 311 312 352 353 349 351 350 348 346 345 307 306 305 304 309
;;
;; Loop 1
;;  header 211, latch 210
;;  depth 1, outer 0
;;  nodes: 211 210 117 165 163 197 204 194 151 158 148 209 208 207 206 205 146 147 144 145 142 143 133 134 131 132 125 128 130 129 127 126 124 122 123 120 121 119 118 135 141 137 139 140 138 136 156 157 153 155 154 152 150 149 192 193 190 191 188 189 179 180 177 178 171 174 176 175 173 172 170 168 169 166 167 181 187 183 185 186 184 182 202 203 199 201 200 198 196 195 162 161 160 159 164
;; 2 succs { 3 4 }
;; 3 succs { 28 }
;; 4 succs { 5 6 }
;; 5 succs { 16 6 }
;; 6 succs { 7 8 }
;; 7 succs { 16 8 }
;; 8 succs { 9 10 }
;; 9 succs { 16 10 }
;; 10 succs { 11 12 }
;; 11 succs { 16 12 }
;; 12 succs { 13 14 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 28 }
;; 20 succs { 21 28 }
;; 21 succs { 22 24 }
;; 22 succs { 23 24 }
;; 23 succs { 25 }
;; 24 succs { 25 }
;; 25 succs { 26 28 }
;; 26 succs { 27 28 }
;; 27 succs { 28 }
;; 28 succs { 29 641 }
;; 29 succs { 31 30 }
;; 30 succs { 31 32 }
;; 31 succs { 33 }
;; 32 succs { 33 }
;; 33 succs { 34 366 }
;; 34 succs { 35 44 }
;; 35 succs { 652 36 }
;; 36 succs { 37 40 }
;; 37 succs { 652 38 }
;; 38 succs { 39 366 }
;; 39 succs { 366 }
;; 40 succs { 652 41 }
;; 41 succs { 42 366 }
;; 42 succs { 652 43 }
;; 43 succs { 366 }
;; 44 succs { 45 366 }
;; 45 succs { 46 53 }
;; 46 succs { 47 49 }
;; 47 succs { 48 49 }
;; 48 succs { 50 }
;; 49 succs { 50 }
;; 50 succs { 51 53 }
;; 51 succs { 52 53 }
;; 52 succs { 53 }
;; 53 succs { 652 54 }
;; 54 succs { 55 58 }
;; 55 succs { 652 56 }
;; 56 succs { 57 58 }
;; 57 succs { 59 }
;; 58 succs { 59 }
;; 59 succs { 60 62 }
;; 60 succs { 652 61 }
;; 61 succs { 62 }
;; 62 succs { 652 63 }
;; 63 succs { 64 67 }
;; 64 succs { 652 65 }
;; 65 succs { 66 67 }
;; 66 succs { 68 }
;; 67 succs { 68 }
;; 68 succs { 69 71 }
;; 69 succs { 652 70 }
;; 70 succs { 71 }
;; 71 succs { 652 72 }
;; 72 succs { 73 78 }
;; 73 succs { 652 74 }
;; 74 succs { 75 78 }
;; 75 succs { 652 76 }
;; 76 succs { 77 78 }
;; 77 succs { 78 }
;; 78 succs { 652 79 }
;; 79 succs { 80 85 }
;; 80 succs { 652 81 }
;; 81 succs { 82 85 }
;; 82 succs { 652 83 }
;; 83 succs { 84 85 }
;; 84 succs { 85 }
;; 85 succs { 652 86 }
;; 86 succs { 87 214 }
;; 87 succs { 652 88 }
;; 88 succs { 89 214 }
;; 89 succs { 645 90 }
;; 90 succs { 645 91 }
;; 91 succs { 92 213 }
;; 92 succs { 93 102 }
;; 93 succs { 94 104 }
;; 94 succs { 95 100 }
;; 95 succs { 96 104 }
;; 96 succs { 645 97 }
;; 97 succs { 98 104 }
;; 98 succs { 645 99 }
;; 99 succs { 104 }
;; 100 succs { 101 104 }
;; 101 succs { 104 }
;; 102 succs { 103 104 }
;; 103 succs { 104 }
;; 104 succs { 105 213 }
;; 105 succs { 106 213 }
;; 106 succs { 107 108 }
;; 107 succs { 108 }
;; 108 succs { 642 109 }
;; 109 succs { 110 212 }
;; 110 succs { 642 111 }
;; 111 succs { 642 112 }
;; 112 succs { 642 113 }
;; 113 succs { 642 114 }
;; 114 succs { 115 212 }
;; 115 succs { 116 212 }
;; 116 succs { 211 }
;; 117 succs { 118 210 }
;; 118 succs { 642 119 }
;; 119 succs { 120 164 }
;; 120 succs { 121 122 }
;; 121 succs { 122 }
;; 122 succs { 123 124 }
;; 123 succs { 124 }
;; 124 succs { 125 132 }
;; 125 succs { 126 133 }
;; 126 succs { 642 127 }
;; 127 succs { 128 133 }
;; 128 succs { 129 133 }
;; 129 succs { 130 133 }
;; 130 succs { 131 133 }
;; 131 succs { 133 }
;; 132 succs { 133 }
;; 133 succs { 134 143 }
;; 134 succs { 135 143 }
;; 135 succs { 136 142 }
;; 136 succs { 642 137 }
;; 137 succs { 138 142 }
;; 138 succs { 139 142 }
;; 139 succs { 140 142 }
;; 140 succs { 141 142 }
;; 141 succs { 142 }
;; 142 succs { 144 }
;; 143 succs { 144 }
;; 144 succs { 145 146 }
;; 145 succs { 146 }
;; 146 succs { 147 148 }
;; 147 succs { 148 }
;; 148 succs { 149 210 }
;; 149 succs { 642 150 }
;; 150 succs { 642 151 }
;; 151 succs { 152 210 }
;; 152 succs { 642 153 }
;; 153 succs { 154 157 }
;; 154 succs { 642 155 }
;; 155 succs { 156 157 }
;; 156 succs { 158 }
;; 157 succs { 158 }
;; 158 succs { 159 210 }
;; 159 succs { 642 160 }
;; 160 succs { 642 161 }
;; 161 succs { 642 162 }
;; 162 succs { 642 163 }
;; 163 succs { 642 210 }
;; 164 succs { 642 165 }
;; 165 succs { 166 210 }
;; 166 succs { 167 168 }
;; 167 succs { 168 }
;; 168 succs { 169 170 }
;; 169 succs { 170 }
;; 170 succs { 171 178 }
;; 171 succs { 172 179 }
;; 172 succs { 642 173 }
;; 173 succs { 174 179 }
;; 174 succs { 175 179 }
;; 175 succs { 176 179 }
;; 176 succs { 177 179 }
;; 177 succs { 179 }
;; 178 succs { 179 }
;; 179 succs { 180 189 }
;; 180 succs { 181 189 }
;; 181 succs { 182 188 }
;; 182 succs { 642 183 }
;; 183 succs { 184 188 }
;; 184 succs { 185 188 }
;; 185 succs { 186 188 }
;; 186 succs { 187 188 }
;; 187 succs { 188 }
;; 188 succs { 190 }
;; 189 succs { 190 }
;; 190 succs { 191 192 }
;; 191 succs { 192 }
;; 192 succs { 193 194 }
;; 193 succs { 194 }
;; 194 succs { 195 210 }
;; 195 succs { 642 196 }
;; 196 succs { 642 197 }
;; 197 succs { 198 210 }
;; 198 succs { 642 199 }
;; 199 succs { 200 203 }
;; 200 succs { 642 201 }
;; 201 succs { 202 203 }
;; 202 succs { 204 }
;; 203 succs { 204 }
;; 204 succs { 205 210 }
;; 205 succs { 642 206 }
;; 206 succs { 642 207 }
;; 207 succs { 642 208 }
;; 208 succs { 642 209 }
;; 209 succs { 642 210 }
;; 210 succs { 211 }
;; 211 succs { 117 212 }
;; 212 succs { 213 }
;; 213 succs { 214 }
;; 214 succs { 652 215 }
;; 215 succs { 216 366 }
;; 216 succs { 652 217 }
;; 217 succs { 218 366 }
;; 218 succs { 649 219 }
;; 219 succs { 649 220 }
;; 220 succs { 221 363 }
;; 221 succs { 222 241 }
;; 222 succs { 223 241 }
;; 223 succs { 224 239 }
;; 224 succs { 225 229 }
;; 225 succs { 649 226 }
;; 226 succs { 227 229 }
;; 227 succs { 649 228 }
;; 228 succs { 229 }
;; 229 succs { 649 230 }
;; 230 succs { 231 241 }
;; 231 succs { 232 235 }
;; 232 succs { 649 233 }
;; 233 succs { 234 235 }
;; 234 succs { 236 }
;; 235 succs { 236 }
;; 236 succs { 237 241 }
;; 237 succs { 649 238 }
;; 238 succs { 649 241 }
;; 239 succs { 240 241 }
;; 240 succs { 241 }
;; 241 succs { 242 365 }
;; 242 succs { 243 365 }
;; 243 succs { 244 245 }
;; 244 succs { 245 }
;; 245 succs { 646 246 }
;; 246 succs { 247 362 }
;; 247 succs { 646 248 }
;; 248 succs { 646 249 }
;; 249 succs { 646 250 }
;; 250 succs { 646 251 }
;; 251 succs { 252 362 }
;; 252 succs { 253 254 }
;; 253 succs { 254 }
;; 254 succs { 255 362 }
;; 255 succs { 361 }
;; 256 succs { 257 360 }
;; 257 succs { 646 258 }
;; 258 succs { 259 309 }
;; 259 succs { 260 261 }
;; 260 succs { 261 }
;; 261 succs { 262 263 }
;; 262 succs { 263 }
;; 263 succs { 264 274 }
;; 264 succs { 265 275 }
;; 265 succs { 266 275 }
;; 266 succs { 646 267 }
;; 267 succs { 268 275 }
;; 268 succs { 646 269 }
;; 269 succs { 270 275 }
;; 270 succs { 271 273 }
;; 271 succs { 646 272 }
;; 272 succs { 275 }
;; 273 succs { 275 }
;; 274 succs { 275 }
;; 275 succs { 276 288 }
;; 276 succs { 277 288 }
;; 277 succs { 278 287 }
;; 278 succs { 279 287 }
;; 279 succs { 646 280 }
;; 280 succs { 281 287 }
;; 281 succs { 646 282 }
;; 282 succs { 283 287 }
;; 283 succs { 284 286 }
;; 284 succs { 646 285 }
;; 285 succs { 287 }
;; 286 succs { 287 }
;; 287 succs { 289 }
;; 288 succs { 289 }
;; 289 succs { 290 291 }
;; 290 succs { 291 }
;; 291 succs { 292 293 }
;; 292 succs { 293 }
;; 293 succs { 294 360 }
;; 294 succs { 646 295 }
;; 295 succs { 646 296 }
;; 296 succs { 297 360 }
;; 297 succs { 646 298 }
;; 298 succs { 299 302 }
;; 299 succs { 646 300 }
;; 300 succs { 301 302 }
;; 301 succs { 303 }
;; 302 succs { 303 }
;; 303 succs { 304 360 }
;; 304 succs { 646 305 }
;; 305 succs { 646 306 }
;; 306 succs { 646 307 }
;; 307 succs { 646 308 }
;; 308 succs { 646 360 }
;; 309 succs { 646 310 }
;; 310 succs { 311 360 }
;; 311 succs { 312 313 }
;; 312 succs { 313 }
;; 313 succs { 314 315 }
;; 314 succs { 315 }
;; 315 succs { 316 326 }
;; 316 succs { 317 327 }
;; 317 succs { 318 327 }
;; 318 succs { 646 319 }
;; 319 succs { 320 327 }
;; 320 succs { 646 321 }
;; 321 succs { 322 327 }
;; 322 succs { 323 325 }
;; 323 succs { 646 324 }
;; 324 succs { 327 }
;; 325 succs { 327 }
;; 326 succs { 327 }
;; 327 succs { 328 339 }
;; 328 succs { 329 340 }
;; 329 succs { 330 340 }
;; 330 succs { 331 340 }
;; 331 succs { 646 332 }
;; 332 succs { 333 340 }
;; 333 succs { 646 334 }
;; 334 succs { 335 340 }
;; 335 succs { 336 338 }
;; 336 succs { 646 337 }
;; 337 succs { 340 }
;; 338 succs { 340 }
;; 339 succs { 340 }
;; 340 succs { 341 342 }
;; 341 succs { 342 }
;; 342 succs { 343 344 }
;; 343 succs { 344 }
;; 344 succs { 345 360 }
;; 345 succs { 646 346 }
;; 346 succs { 646 347 }
;; 347 succs { 348 360 }
;; 348 succs { 646 349 }
;; 349 succs { 350 353 }
;; 350 succs { 646 351 }
;; 351 succs { 352 353 }
;; 352 succs { 354 }
;; 353 succs { 354 }
;; 354 succs { 355 360 }
;; 355 succs { 646 356 }
;; 356 succs { 646 357 }
;; 357 succs { 646 358 }
;; 358 succs { 646 359 }
;; 359 succs { 646 360 }
;; 360 succs { 361 }
;; 361 succs { 256 362 }
;; 362 succs { 365 }
;; 363 succs { 364 365 }
;; 364 succs { 365 }
;; 365 succs { 366 }
;; 366 succs { 652 367 }
;; 367 succs { 652 368 }
;; 368 succs { 369 372 }
;; 369 succs { 652 370 }
;; 370 succs { 371 372 }
;; 371 succs { 373 }
;; 372 succs { 373 }
;; 373 succs { 374 376 }
;; 374 succs { 652 375 }
;; 375 succs { 652 386 }
;; 376 succs { 652 377 }
;; 377 succs { 652 378 }
;; 378 succs { 379 382 }
;; 379 succs { 652 380 }
;; 380 succs { 381 382 }
;; 381 succs { 383 }
;; 382 succs { 383 }
;; 383 succs { 384 386 }
;; 384 succs { 652 385 }
;; 385 succs { 652 386 }
;; 386 succs { 387 640 }
;; 387 succs { 650 388 }
;; 388 succs { 389 639 }
;; 389 succs { 650 390 }
;; 390 succs { 638 }
;; 391 succs { 650 392 }
;; 392 succs { 393 570 }
;; 393 succs { 650 394 }
;; 394 succs { 395 413 }
;; 395 succs { 650 396 }
;; 396 succs { 650 397 }
;; 397 succs { 398 637 }
;; 398 succs { 399 400 }
;; 399 succs { 650 402 }
;; 400 succs { 650 401 }
;; 401 succs { 650 402 }
;; 402 succs { 650 403 }
;; 403 succs { 404 637 }
;; 404 succs { 405 637 }
;; 405 succs { 406 637 }
;; 406 succs { 650 407 }
;; 407 succs { 408 637 }
;; 408 succs { 650 409 }
;; 409 succs { 410 637 }
;; 410 succs { 650 411 }
;; 411 succs { 650 412 }
;; 412 succs { 650 637 }
;; 413 succs { 650 414 }
;; 414 succs { 415 495 }
;; 415 succs { 650 416 }
;; 416 succs { 650 417 }
;; 417 succs { 418 434 }
;; 418 succs { 419 420 }
;; 419 succs { 650 422 }
;; 420 succs { 650 421 }
;; 421 succs { 650 422 }
;; 422 succs { 650 423 }
;; 423 succs { 424 434 }
;; 424 succs { 650 425 }
;; 425 succs { 426 429 }
;; 426 succs { 650 427 }
;; 427 succs { 428 429 }
;; 428 succs { 430 }
;; 429 succs { 430 }
;; 430 succs { 431 434 }
;; 431 succs { 650 432 }
;; 432 succs { 650 433 }
;; 433 succs { 650 434 }
;; 434 succs { 650 435 }
;; 435 succs { 436 439 }
;; 436 succs { 650 437 }
;; 437 succs { 438 439 }
;; 438 succs { 440 }
;; 439 succs { 440 }
;; 440 succs { 441 457 }
;; 441 succs { 650 442 }
;; 442 succs { 650 443 }
;; 443 succs { 444 637 }
;; 444 succs { 650 445 }
;; 445 succs { 446 637 }
;; 446 succs { 447 637 }
;; 447 succs { 448 637 }
;; 448 succs { 449 637 }
;; 449 succs { 450 637 }
;; 450 succs { 650 451 }
;; 451 succs { 452 637 }
;; 452 succs { 650 453 }
;; 453 succs { 454 637 }
;; 454 succs { 650 455 }
;; 455 succs { 650 456 }
;; 456 succs { 650 637 }
;; 457 succs { 650 458 }
;; 458 succs { 459 462 }
;; 459 succs { 650 460 }
;; 460 succs { 461 462 }
;; 461 succs { 463 }
;; 462 succs { 463 }
;; 463 succs { 464 481 }
;; 464 succs { 650 465 }
;; 465 succs { 650 466 }
;; 466 succs { 467 637 }
;; 467 succs { 468 469 }
;; 468 succs { 650 471 }
;; 469 succs { 650 470 }
;; 470 succs { 650 471 }
;; 471 succs { 650 472 }
;; 472 succs { 473 637 }
;; 473 succs { 474 637 }
;; 474 succs { 650 475 }
;; 475 succs { 476 637 }
;; 476 succs { 650 477 }
;; 477 succs { 478 637 }
;; 478 succs { 650 479 }
;; 479 succs { 650 480 }
;; 480 succs { 650 637 }
;; 481 succs { 650 482 }
;; 482 succs { 483 486 }
;; 483 succs { 650 484 }
;; 484 succs { 485 486 }
;; 485 succs { 487 }
;; 486 succs { 487 }
;; 487 succs { 488 637 }
;; 488 succs { 650 489 }
;; 489 succs { 650 490 }
;; 490 succs { 491 637 }
;; 491 succs { 492 493 }
;; 492 succs { 650 637 }
;; 493 succs { 650 494 }
;; 494 succs { 650 637 }
;; 495 succs { 650 496 }
;; 496 succs { 497 637 }
;; 497 succs { 650 498 }
;; 498 succs { 650 499 }
;; 499 succs { 500 518 }
;; 500 succs { 501 502 }
;; 501 succs { 650 504 }
;; 502 succs { 650 503 }
;; 503 succs { 650 504 }
;; 504 succs { 650 505 }
;; 505 succs { 506 518 }
;; 506 succs { 650 507 }
;; 507 succs { 508 518 }
;; 508 succs { 650 509 }
;; 509 succs { 510 513 }
;; 510 succs { 650 511 }
;; 511 succs { 512 513 }
;; 512 succs { 514 }
;; 513 succs { 514 }
;; 514 succs { 515 518 }
;; 515 succs { 650 516 }
;; 516 succs { 650 517 }
;; 517 succs { 650 518 }
;; 518 succs { 650 519 }
;; 519 succs { 520 523 }
;; 520 succs { 650 521 }
;; 521 succs { 522 523 }
;; 522 succs { 524 }
;; 523 succs { 524 }
;; 524 succs { 525 541 }
;; 525 succs { 650 526 }
;; 526 succs { 650 527 }
;; 527 succs { 528 637 }
;; 528 succs { 650 529 }
;; 529 succs { 530 637 }
;; 530 succs { 531 637 }
;; 531 succs { 532 637 }
;; 532 succs { 533 637 }
;; 533 succs { 534 637 }
;; 534 succs { 650 535 }
;; 535 succs { 536 637 }
;; 536 succs { 650 537 }
;; 537 succs { 538 637 }
;; 538 succs { 650 539 }
;; 539 succs { 650 540 }
;; 540 succs { 650 637 }
;; 541 succs { 650 542 }
;; 542 succs { 543 546 }
;; 543 succs { 650 544 }
;; 544 succs { 545 546 }
;; 545 succs { 547 }
;; 546 succs { 547 }
;; 547 succs { 548 561 }
;; 548 succs { 650 549 }
;; 549 succs { 650 550 }
;; 550 succs { 551 637 }
;; 551 succs { 650 552 }
;; 552 succs { 553 637 }
;; 553 succs { 554 637 }
;; 554 succs { 650 555 }
;; 555 succs { 556 637 }
;; 556 succs { 650 557 }
;; 557 succs { 558 637 }
;; 558 succs { 650 559 }
;; 559 succs { 650 560 }
;; 560 succs { 650 637 }
;; 561 succs { 650 562 }
;; 562 succs { 563 637 }
;; 563 succs { 650 564 }
;; 564 succs { 650 565 }
;; 565 succs { 566 637 }
;; 566 succs { 567 568 }
;; 567 succs { 650 637 }
;; 568 succs { 650 569 }
;; 569 succs { 650 637 }
;; 570 succs { 571 637 }
;; 571 succs { 572 637 }
;; 572 succs { 650 573 }
;; 573 succs { 574 637 }
;; 574 succs { 650 575 }
;; 575 succs { 650 576 }
;; 576 succs { 650 577 }
;; 577 succs { 580 578 }
;; 578 succs { 650 579 }
;; 579 succs { 580 581 }
;; 580 succs { 582 }
;; 581 succs { 582 }
;; 582 succs { 583 637 }
;; 583 succs { 650 584 }
;; 584 succs { 650 585 }
;; 585 succs { 586 614 }
;; 586 succs { 587 596 }
;; 587 succs { 588 592 }
;; 588 succs { 650 589 }
;; 589 succs { 590 596 }
;; 590 succs { 650 591 }
;; 591 succs { 650 596 }
;; 592 succs { 593 594 }
;; 593 succs { 650 596 }
;; 594 succs { 650 595 }
;; 595 succs { 650 596 }
;; 596 succs { 650 597 }
;; 597 succs { 613 }
;; 598 succs { 650 599 }
;; 599 succs { 650 600 }
;; 600 succs { 601 612 }
;; 601 succs { 650 602 }
;; 602 succs { 603 608 }
;; 603 succs { 650 604 }
;; 604 succs { 605 612 }
;; 605 succs { 650 606 }
;; 606 succs { 650 607 }
;; 607 succs { 650 612 }
;; 608 succs { 650 609 }
;; 609 succs { 610 612 }
;; 610 succs { 650 611 }
;; 611 succs { 650 612 }
;; 612 succs { 613 }
;; 613 succs { 598 637 }
;; 614 succs { 650 615 }
;; 615 succs { 616 637 }
;; 616 succs { 650 617 }
;; 617 succs { 618 620 }
;; 618 succs { 650 619 }
;; 619 succs { 650 620 }
;; 620 succs { 650 621 }
;; 621 succs { 636 }
;; 622 succs { 650 623 }
;; 623 succs { 650 624 }
;; 624 succs { 625 635 }
;; 625 succs { 650 626 }
;; 626 succs { 627 635 }
;; 627 succs { 650 628 }
;; 628 succs { 650 629 }
;; 629 succs { 630 635 }
;; 630 succs { 650 631 }
;; 631 succs { 632 635 }
;; 632 succs { 650 633 }
;; 633 succs { 650 634 }
;; 634 succs { 650 635 }
;; 635 succs { 636 }
;; 636 succs { 622 637 }
;; 637 succs { 638 }
;; 638 succs { 391 639 }
;; 639 succs { 640 }
;; 640 succs { 641 }
;; 641 succs { 1 }
;; 642 succs { 643 }
;; 643 succs { 644 }
;; 644 succs { 645 }
;; 645 succs { 652 }
;; 646 succs { 647 }
;; 647 succs { 648 }
;; 648 succs { 649 }
;; 649 succs { 652 }
;; 650 succs { 651 }
;; 651 succs { 652 }
;; 652 succs { }
void Varnew_search_imm_use (struct gimple_array * used_stmt, struct gimple * use_stmt, union tree_node * target, union tree_node * target2)
{
  union tree_node * D.255409;
  union tree_node * D.255408;
  union tree_node * D.255407;
  int D.255406;
  union tree_node * D.255405;
  union tree_node * D.255404;
  int D.255403;
  union tree_node * D.255402;
  unsigned int D.255401;
  union tree_node * D.255400;
  union tree_node * D.255399;
  int D.255398;
  union tree_node * D.255397;
  union tree_node * D.255396;
  union tree_node * D.255395;
  union tree_node * D.255394;
  union tree_node * D.255393;
  union tree_node * D.255392;
  int D.255391;
  union tree_node * D.255390;
  unsigned int D.255389;
  union tree_node * D.255388;
  union tree_node * D.255387;
  int D.255386;
  int D.255385;
  union tree_node * D.255384;
  union tree_node * D.255383;
  union tree_node * D.255382;
  const char * D.255381;
  union tree_node * D.255380;
  union tree_node * D.255379;
  union tree_node * D.255378;
  int D.255377;
  union tree_node * D.255376;
  union tree_node * D.255375;
  union tree_node * D.255374;
  union tree_node * D.255373;
  union tree_node * D.255372;
  union tree_node * D.255371;
  union tree_node * D.255370;
  int D.255369;
  union tree_node * D.255368;
  union tree_node * D.255367;
  union tree_node * D.255366;
  union tree_node * D.255365;
  union tree_node * D.255364;
  union tree_node * D.255363;
  union tree_node * D.255362;
  union tree_node * D.255361;
  int D.255360;
  union tree_node * D.255359;
  union tree_node * D.255358;
  union tree_node * D.255357;
  union tree_node * D.255356;
  union tree_node * D.255355;
  int D.255354;
  union tree_node * D.255353;
  int D.255352;
  union tree_node * D.255351;
  union tree_node * D.255350;
  int D.255349;
  union tree_node * D.255348;
  union tree_node * D.255347;
  union tree_node * D.255346;
  int D.255345;
  union tree_node * D.255344;
  union tree_node * D.255343;
  union tree_node * D.255342;
  union tree_node * D.255341;
  union tree_node * D.255340;
  union tree_node * D.255339;
  union tree_node * D.255338;
  union tree_node * D.255337;
  union tree_node * D.255336;
  int D.255335;
  union tree_node * D.255334;
  union tree_node * D.255333;
  union tree_node * D.255332;
  union tree_node * D.255331;
  union tree_node * D.255330;
  union tree_node * D.255329;
  union tree_node * D.255328;
  union tree_node * D.255327;
  int D.255326;
  union tree_node * D.255325;
  union tree_node * D.255324;
  union tree_node * D.255323;
  union tree_node * D.255322;
  union tree_node * D.255321;
  int D.255320;
  union tree_node * D.255319;
  int D.255318;
  union tree_node * D.255317;
  int D.255316;
  union tree_node * D.255315;
  union tree_node * D.255314;
  union tree_node * D.255313;
  union tree_node * D.255312;
  union tree_node * D.255311;
  union tree_node * D.255310;
  union tree_node * D.255309;
  union tree_node * D.255308;
  int D.255307;
  union tree_node * D.255306;
  union tree_node * D.255305;
  struct function_assign_array * D.255304;
  union tree_node * D.255303;
  int D.255302;
  int D.255301;
  union tree_node * D.255300;
  union tree_node * D.255299;
  int D.255298;
  int D.255297;
  union tree_node * D.255296;
  union tree_node * D.255291;
  union tree_node * D.255290;
  union tree_node * D.255289;
  int D.255288;
  union tree_node * D.255287;
  int D.255286;
  union tree_node * D.255285;
  union tree_node * D.255284;
  union tree_node * D.255283;
  union tree_node * D.255282;
  union tree_node * D.255281;
  union tree_node * D.255280;
  union tree_node * D.255279;
  union tree_node * D.255278;
  union tree_node * D.255277;
  union tree_node * D.255276;
  union tree_node * D.255275;
  int D.255274;
  union tree_node * D.255273;
  int D.255272;
  union tree_node * D.255271;
  union tree_node * D.255270;
  union tree_node * D.255269;
  union tree_node * D.255268;
  union tree_node * D.255267;
  union tree_node * D.255266;
  union tree_node * D.255265;
  union tree_node * D.255264;
  struct function_assign_array * D.255263;
  struct function_assign_array * D.255262;
  struct function_assign_array * D.255261;
  int D.255260;
  int D.255259;
  union tree_node * D.255258;
  union tree_node * D.255257;
  union tree_node * D.255256;
  union tree_node * D.255255;
  union tree_node * D.255254;
  union tree_node * D.255253;
  union tree_node * D.255248;
  union tree_node * D.255247;
  union tree_node * D.255246;
  int D.255245;
  union tree_node * D.255244;
  int D.255243;
  union tree_node * D.255242;
  union tree_node * D.255241;
  union tree_node * D.255240;
  union tree_node * D.255239;
  union tree_node * D.255238;
  union tree_node * D.255237;
  union tree_node * D.255236;
  int D.255235;
  union tree_node * D.255234;
  int D.255233;
  union tree_node * D.255232;
  union tree_node * D.255231;
  union tree_node * D.255230;
  union tree_node * D.255229;
  struct function_assign_array * D.255228;
  struct function_assign_array * D.255227;
  struct function_assign_array * D.255226;
  union tree_node * D.255225;
  union tree_node * D.255224;
  union tree_node * D.255223;
  union tree_node * D.255222;
  union tree_node * D.255221;
  union tree_node * D.255220;
  union tree_node * D.255219;
  union tree_node * D.255218;
  union tree_node * D.255217;
  union tree_node * D.255216;
  union tree_node * D.255215;
  union tree_node * D.255214;
  union tree_node * D.255213;
  union tree_node * D.255212;
  union tree_node * D.255211;
  union tree_node * D.255210;
  union tree_node * D.255209;
  union tree_node * D.255208;
  union tree_node * D.255207;
  union tree_node * D.255206;
  union tree_node * D.255205;
  union tree_node * D.255204;
  union tree_node * D.255203;
  union tree_node * D.255202;
  union tree_node * D.255201;
  union tree_node * D.255200;
  union tree_node * D.255199;
  union tree_node * D.255198;
  union tree_node * D.255197;
  union tree_node * D.255196;
  union tree_node * D.255195;
  union tree_node * D.255194;
  union tree_node * D.255193;
  union tree_node * D.255192;
  int i;
  int size;
  int i;
  int size;
  const char * name;
  struct gimple * def_stmt;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * second;
  struct gimple * nowstmt;
  int i;
  struct function_assign_array assign_array;
  struct gimple * def_stmt2;
  union tree_node * treecheck2;
  struct gimple * def_stmt2;
  struct gimple * def_stmt;
  union tree_node * treecheck;
  union tree_node * filed_from2;
  union tree_node * filed_from;
  struct gimple * def_stmt2;
  union tree_node * treecheck2;
  struct gimple * def_stmt2;
  struct gimple * def_stmt;
  union tree_node * treecheck;
  union tree_node * filed_from2;
  union tree_node * filed_from;
  int i;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second2;
  union tree_node * second;
  union tree_node * getfiledtree;
  struct gimple * def_stmt2;
  union tree_node * getfiledtree;
  union tree_node * treecheck2;
  struct gimple * def_stmt2;
  struct gimple * def_stmt;
  union tree_node * treecheck;
  union tree_node * filed_from2;
  union tree_node * filed_from;
  union tree_node * getfiledtree;
  struct gimple * def_stmt2;
  union tree_node * getfiledtree;
  union tree_node * treecheck2;
  struct gimple * def_stmt2;
  struct gimple * def_stmt;
  union tree_node * treecheck;
  union tree_node * filed_from2;
  union tree_node * filed_from;
  int i;
  struct vector assign_type_array;
  struct function_assign_array assign_array;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second2;
  union tree_node * second;
  union tree_node * second;
  union tree_node * second;
  union tree_node * ssa_var;
  union tree_node * first;
  union tree_node * getFunctionAssignVAR;
  union tree_node * ssa_var;
  int passfilter;
  bool retval.1238;
  bool retval.1234;
  bool retval.1232;
  bool retval.1230;
  bool retval.1228;
  bool retval.1227;
  bool retval.1226;
  bool retval.1223;
  bool retval.1219;
  bool retval.1217;
  bool retval.1215;
  bool retval.1214;
  bool retval.1213;
  bool retval.1212;
  bool iftmp.1211;
  bool retval.1210;
  bool retval.1209;
  bool retval.1208;
  bool retval.1207;
  bool retval.1206;
  bool retval.1205;
  bool retval.1204;
  bool retval.1203;
  bool retval.1202;
  bool retval.1201;
  bool retval.1200;
  bool iftmp.1199;
  bool retval.1198;
  bool retval.1197;
  bool retval.1196;
  bool retval.1195;
  bool retval.1194;
  bool iftmp.1193;
  bool retval.1192;
  bool iftmp.1191;
  bool retval.1190;
  bool retval.1189;
  bool retval.1188;
  bool retval.1187;
  bool retval.1186;
  bool retval.1185;
  bool retval.1184;
  bool retval.1183;
  bool iftmp.1182;
  bool retval.1181;
  bool retval.1180;
  bool retval.1179;
  bool retval.1178;
  bool retval.1177;
  bool retval.1176;
  bool iftmp.1175;
  bool retval.1174;
  bool retval.1173;
  bool retval.1172;
  bool retval.1171;
  bool retval.1170;
  bool iftmp.1169;
  bool retval.1168;
  bool iftmp.1167;
  bool retval.1166;
  bool retval.1165;
  bool retval.1164;
  bool retval.1163;
  bool retval.1162;
  bool retval.1161;
  bool retval.1160;
  bool retval.1159;
  bool retval.1158;
  bool retval.1157;
  bool retval.1156;
  bool retval.1155;
  struct function_assign_array D.196272;
  bool retval.1152;
  bool iftmp.1150;
  bool retval.1149;
  bool iftmp.1148;
  bool retval.1147;
  bool retval.1146;
  bool iftmp.1145;
  bool retval.1144;
  bool retval.1143;
  bool retval.1142;
  bool retval.1141;
  bool retval.1140;
  bool retval.1139;
  bool retval.1138;
  bool retval.1137;
  bool retval.1136;
  bool iftmp.1135;
  bool retval.1134;
  bool retval.1133;
  bool retval.1132;
  bool retval.1131;
  bool retval.1130;
  bool retval.1129;
  bool retval.1128;
  bool retval.1127;
  bool retval.1126;
  bool retval.1125;
  bool retval.1123;
  bool retval.1120;
  bool iftmp.1117;
  bool retval.1116;
  bool retval.1115;
  bool retval.1114;
  bool retval.1113;
  bool retval.1112;
  bool retval.1111;
  bool retval.1110;
  bool iftmp.1109;
  bool retval.1108;
  bool retval.1107;
  bool retval.1106;
  bool retval.1105;
  bool retval.1104;
  bool iftmp.1103;
  bool retval.1102;
  bool retval.1101;
  bool retval.1100;
  bool retval.1099;
  bool retval.1098;
  bool retval.1097;
  bool retval.1095;
  bool retval.1092;
  bool retval.1089;
  bool retval.1088;
  bool retval.1087;
  bool retval.1086;
  bool retval.1085;
  bool retval.1084;
  bool retval.1083;
  bool retval.1082;
  bool iftmp.1081;
  bool retval.1080;
  bool iftmp.1079;
  bool retval.1078;
  union tree_node * iftmp.1077;
  bool retval.1076;
  bool retval.1075;
  bool retval.1074;
  bool retval.1073;
  bool iftmp.1072;
  bool retval.1071;
  union tree_node * iftmp.1070;
  bool iftmp.1069;
  bool retval.1068;
  bool retval.1067;

  <bb 2> :
  passfilter = 0;
  retval.1067 = is_gimple_call (use_stmt);
  if (retval.1067 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  passfilter = 1;
  goto <bb 28>; [INV]

  <bb 4> :
  D.255192 = gimple_assign_lhs (use_stmt);
  _1 = D.255192;
  if (_1 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.255193 = gimple_assign_lhs (use_stmt);
  _2 = D.255193;
  _3 = _2->base.code;
  if (_3 == 36)
    goto <bb 16>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  D.255194 = gimple_assign_rhs1 (use_stmt);
  _4 = D.255194;
  if (_4 != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  D.255195 = gimple_assign_rhs1 (use_stmt);
  _5 = D.255195;
  _6 = _5->base.code;
  if (_6 == 36)
    goto <bb 16>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  D.255196 = gimple_assign_rhs1 (use_stmt);
  _7 = D.255196;
  if (_7 != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.255197 = gimple_assign_rhs1 (use_stmt);
  _8 = D.255197;
  _9 = _8->base.code;
  if (_9 == 49)
    goto <bb 16>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  D.255198 = gimple_assign_lhs (use_stmt);
  _10 = D.255198;
  if (_10 != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  D.255199 = gimple_assign_lhs (use_stmt);
  _11 = D.255199;
  _12 = _11->base.code;
  if (_12 == 49)
    goto <bb 16>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  D.255200 = gimple_assign_rhs1 (use_stmt);
  _13 = D.255200;
  if (_13 != 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  D.255201 = gimple_assign_rhs1 (use_stmt);
  _14 = D.255201;
  _15 = _14->base.code;
  if (_15 == 47)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.255202 = gimple_assign_lhs (use_stmt);
  _16 = D.255202;
  if (_16 != 0B)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.255203 = gimple_assign_lhs (use_stmt);
  _17 = D.255203;
  _18 = _17->base.code;
  if (_18 == 47)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1069 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.1069 = 0;

  <bb 18> :
  retval.1068 = iftmp.1069;
  if (retval.1068 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  passfilter = 1;
  goto <bb 28>; [INV]

  <bb 20> :
  _19 = target->base.code;
  if (_19 == 153)
    goto <bb 21>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 21> :
  _20 = target->ssa_name.var;
  if (_20 != 0B)
    goto <bb 22>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 22> :
  _21 = target->ssa_name.var;
  _22 = _21->base.code;
  if (_22 != 1)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  iftmp.1070 = target->ssa_name.var;
  goto <bb 25>; [INV]

  <bb 24> :
  iftmp.1070 = 0B;

  <bb 25> :
  ssa_var = iftmp.1070;
  if (ssa_var != 0B)
    goto <bb 26>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 26> :
  _23 = ssa_var->base.code;
  if (_23 == 36)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  passfilter = 1;

  <bb 28> :
  if (passfilter != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 641>; [INV]

  <bb 29> :
  _24 = is_gimple_assign (use_stmt);
  if (_24 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 30> :
  _25 = is_gimple_call (use_stmt);
  if (_25 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  iftmp.1072 = 1;
  goto <bb 33>; [INV]

  <bb 32> :
  iftmp.1072 = 0;

  <bb 33> :
  retval.1071 = iftmp.1072;
  if (retval.1071 != 0)
    goto <bb 34>; [INV]
  else
    goto <bb 366>; [INV]

  <bb 34> :
  retval.1073 = is_gimple_call (use_stmt);
  if (retval.1073 != 0)
    goto <bb 35>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 35> :
  D.255204 = gimple_call_arg (use_stmt, 0);

  <bb 36> :
  _26 = D.255204;
  _27 = _26->base.code;
  retval.1074 = _27 == 131;
  if (retval.1074 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 37> :
  D.255205 = gimple_call_arg (use_stmt, 0);

  <bb 38> :
  _28 = D.255205;
  first = _28->exp.operands[0];
  _29 = first->base.code;
  if (_29 == 36)
    goto <bb 39>; [INV]
  else
    goto <bb 366>; [INV]

  <bb 39> :
  getFunctionAssignVAR = first;
  goto <bb 366>; [INV]

  <bb 40> :
  D.255206 = gimple_call_arg (use_stmt, 0);

  <bb 41> :
  _30 = D.255206;
  _31 = _30->base.code;
  retval.1075 = _31 == 36;
  if (retval.1075 != 0)
    goto <bb 42>; [INV]
  else
    goto <bb 366>; [INV]

  <bb 42> :
  D.255207 = gimple_call_arg (use_stmt, 0);

  <bb 43> :
  _32 = D.255207;
  getFunctionAssignVAR = _32;
  goto <bb 366>; [INV]

  <bb 44> :
  retval.1076 = is_gimple_assign (use_stmt);
  if (retval.1076 != 0)
    goto <bb 45>; [INV]
  else
    goto <bb 366>; [INV]

  <bb 45> :
  _33 = target->base.code;
  if (_33 == 153)
    goto <bb 46>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 46> :
  _34 = target->ssa_name.var;
  if (_34 != 0B)
    goto <bb 47>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 47> :
  _35 = target->ssa_name.var;
  _36 = _35->base.code;
  if (_36 != 1)
    goto <bb 48>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 48> :
  iftmp.1077 = target->ssa_name.var;
  goto <bb 50>; [INV]

  <bb 49> :
  iftmp.1077 = 0B;

  <bb 50> :
  ssa_var = iftmp.1077;
  if (ssa_var != 0B)
    goto <bb 51>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 51> :
  _37 = ssa_var->base.code;
  if (_37 == 36)
    goto <bb 52>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 52> :
  getFunctionAssignVAR = ssa_var;

  <bb 53> :
  D.255208 = gimple_assign_lhs (use_stmt);

  <bb 54> :
  _38 = D.255208;
  if (_38 != 0B)
    goto <bb 55>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 55> :
  D.255209 = gimple_assign_lhs (use_stmt);

  <bb 56> :
  _39 = D.255209;
  _40 = _39->base.code;
  if (_40 == 36)
    goto <bb 57>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 57> :
  iftmp.1079 = 1;
  goto <bb 59>; [INV]

  <bb 58> :
  iftmp.1079 = 0;

  <bb 59> :
  retval.1078 = iftmp.1079;
  if (retval.1078 != 0)
    goto <bb 60>; [INV]
  else
    goto <bb 62>; [INV]

  <bb 60> :
  D.255210 = gimple_assign_lhs (use_stmt);

  <bb 61> :
  _41 = D.255210;
  getFunctionAssignVAR = _41;

  <bb 62> :
  D.255211 = gimple_assign_rhs1 (use_stmt);

  <bb 63> :
  _42 = D.255211;
  if (_42 != 0B)
    goto <bb 64>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 64> :
  D.255212 = gimple_assign_rhs1 (use_stmt);

  <bb 65> :
  _43 = D.255212;
  _44 = _43->base.code;
  if (_44 == 36)
    goto <bb 66>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 66> :
  iftmp.1081 = 1;
  goto <bb 68>; [INV]

  <bb 67> :
  iftmp.1081 = 0;

  <bb 68> :
  retval.1080 = iftmp.1081;
  if (retval.1080 != 0)
    goto <bb 69>; [INV]
  else
    goto <bb 71>; [INV]

  <bb 69> :
  D.255213 = gimple_assign_rhs1 (use_stmt);

  <bb 70> :
  _45 = D.255213;
  getFunctionAssignVAR = _45;

  <bb 71> :
  D.255214 = gimple_assign_rhs1 (use_stmt);

  <bb 72> :
  _46 = D.255214;
  retval.1082 = _46 != 0B;
  if (retval.1082 != 0)
    goto <bb 73>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 73> :
  D.255215 = gimple_assign_rhs1 (use_stmt);

  <bb 74> :
  _47 = D.255215;
  _48 = _47->base.code;
  retval.1083 = _48 == 49;
  if (retval.1083 != 0)
    goto <bb 75>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 75> :
  D.255216 = gimple_assign_rhs1 (use_stmt);

  <bb 76> :
  _49 = D.255216;
  second = _49->exp.operands[0];
  if (second != 0B)
    goto <bb 77>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 77> :
  getFunctionAssignVAR = second;

  <bb 78> :
  D.255217 = gimple_assign_lhs (use_stmt);

  <bb 79> :
  _50 = D.255217;
  retval.1084 = _50 != 0B;
  if (retval.1084 != 0)
    goto <bb 80>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 80> :
  D.255218 = gimple_assign_lhs (use_stmt);

  <bb 81> :
  _51 = D.255218;
  _52 = _51->base.code;
  retval.1085 = _52 == 49;
  if (retval.1085 != 0)
    goto <bb 82>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 82> :
  D.255219 = gimple_assign_lhs (use_stmt);

  <bb 83> :
  _53 = D.255219;
  second = _53->exp.operands[0];
  if (second != 0B)
    goto <bb 84>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 84> :
  getFunctionAssignVAR = second;

  <bb 85> :
  D.255220 = gimple_assign_rhs1 (use_stmt);

  <bb 86> :
  _54 = D.255220;
  retval.1086 = _54 != 0B;
  if (retval.1086 != 0)
    goto <bb 87>; [INV]
  else
    goto <bb 214>; [INV]

  <bb 87> :
  D.255221 = gimple_assign_rhs1 (use_stmt);

  <bb 88> :
  _55 = D.255221;
  _56 = _55->base.code;
  retval.1087 = _56 == 47;
  if (retval.1087 != 0)
    goto <bb 89>; [INV]
  else
    goto <bb 214>; [INV]

  <bb 89> :
  D.255222 = gimple_assign_rhs1 (use_stmt);

  <bb 90> :
  _57 = D.255222;
  second = _57->exp.operands[0];
  D.255223 = gimple_assign_rhs1 (use_stmt);

  <bb 91> :
  _58 = D.255223;
  _59 = _58->exp.operands[1];
  second2 = _59;
  if (second != 0B)
    goto <bb 92>; [INV]
  else
    goto <bb 213>; [INV]

  <bb 92> :
  _60 = second->base.code;
  if (_60 == 165)
    goto <bb 93>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 93> :
  three = second->exp.operands[0];
  if (three != 0B)
    goto <bb 94>; [INV]
  else
    goto <bb 104>; [INV]

  <bb 94> :
  _61 = three->base.code;
  if (_61 == 153)
    goto <bb 95>; [INV]
  else
    goto <bb 100>; [INV]

  <bb 95> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1088 = is_gimple_assign (def_stmt);
  if (retval.1088 != 0)
    goto <bb 96>; [INV]
  else
    goto <bb 104>; [INV]

  <bb 96> :
  D.255224 = gimple_assign_rhs1 (def_stmt);

  <bb 97> :
  _62 = D.255224;
  _63 = _62->base.code;
  retval.1089 = _63 == 36;
  if (retval.1089 != 0)
    goto <bb 98>; [INV]
  else
    goto <bb 104>; [INV]

  <bb 98> :
  D.255225 = gimple_assign_rhs1 (def_stmt);

  <bb 99> :
  _64 = D.255225;
  getFunctionAssignVAR = _64;
  goto <bb 104>; [INV]

  <bb 100> :
  _65 = three->base.code;
  if (_65 == 36)
    goto <bb 101>; [INV]
  else
    goto <bb 104>; [INV]

  <bb 101> :
  getFunctionAssignVAR = three;
  goto <bb 104>; [INV]

  <bb 102> :
  _66 = second->base.code;
  if (_66 == 36)
    goto <bb 103>; [INV]
  else
    goto <bb 104>; [INV]

  <bb 103> :
  getFunctionAssignVAR = second;

  <bb 104> :
  second2.1090_67 = second2;
  if (second2.1090_67 != 0B)
    goto <bb 105>; [INV]
  else
    goto <bb 213>; [INV]

  <bb 105> :
  second2.1091_68 = second2;
  _69 = second2.1091_68->base.code;
  if (_69 == 35)
    goto <bb 106>; [INV]
  else
    goto <bb 213>; [INV]

  <bb 106> :
  _70 = second->base.code;
  if (_70 == 36)
    goto <bb 107>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 107> :
  getFunctionAssignVAR = second;

  <bb 108> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.1093_71 = function_assign_collect;
  D.255226 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1093_71, &second2);

  <bb 109> :
  _72 = D.255226;
  retval.1092 = _72 != 0B;
  if (retval.1092 != 0)
    goto <bb 110>; [INV]
  else
    goto <bb 212>; [INV]

  <bb 110> :
  function_assign_collect.1094_73 = function_assign_collect;
  D.255227 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1094_73, &second2);

  <bb 111> :
  _74 = D.255227;
  function_assign_array::operator= (&assign_array, _74);

  <bb 112> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 113> :
  function_assign_collect.1096_75 = function_assign_collect;
  D.255228 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1096_75, &second2);

  <bb 114> :
  _76 = D.255228;
  retval.1095 = _76 != 0B;
  if (retval.1095 != 0)
    goto <bb 115>; [INV]
  else
    goto <bb 212>; [INV]

  <bb 115> :
  _77 = second->base.code;
  if (_77 != 36)
    goto <bb 116>; [INV]
  else
    goto <bb 212>; [INV]

  <bb 116> :
  i = 0;
  goto <bb 211>; [INV]

  <bb 117> :
  _78 = (long unsigned int) i;
  _79 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _78);
  _80 = _79->stmt;
  _81 = gimple_code (_80);
  retval.1097 = _81 == 6;
  if (retval.1097 != 0)
    goto <bb 118>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 118> :
  _82 = (long unsigned int) i;
  _83 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _82);
  _84 = _83->stmt;
  D.255229 = gimple_assign_rhs1 (_84);

  <bb 119> :
  _85 = D.255229;
  _86 = _85->base.code;
  retval.1098 = _86 == 153;
  if (retval.1098 != 0)
    goto <bb 120>; [INV]
  else
    goto <bb 164>; [INV]

  <bb 120> :
  filed_from = second->exp.operands[0];
  _87 = (long unsigned int) i;
  _88 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _87);
  _89 = _88->assign_tree;
  filed_from2 = _89->exp.operands[0];
  _90 = filed_from2->base.code;
  if (_90 == 165)
    goto <bb 121>; [INV]
  else
    goto <bb 122>; [INV]

  <bb 121> :
  filed_from2 = filed_from2->exp.operands[0];

  <bb 122> :
  _91 = filed_from->base.code;
  if (_91 == 165)
    goto <bb 123>; [INV]
  else
    goto <bb 124>; [INV]

  <bb 123> :
  filed_from = filed_from->exp.operands[0];

  <bb 124> :
  _92 = filed_from2->base.code;
  if (_92 == 153)
    goto <bb 125>; [INV]
  else
    goto <bb 132>; [INV]

  <bb 125> :
  def_stmt = filed_from2->ssa_name.def_stmt;
  getfiledtree = filed_from2;
  _93 = filed_from->base.code;
  if (_93 != 36)
    goto <bb 126>; [INV]
  else
    goto <bb 133>; [INV]

  <bb 126> :
  D.255230 = gimple_assign_rhs1 (def_stmt);

  <bb 127> :
  getfiledtree = D.255230;
  if (def_stmt != 0B)
    goto <bb 128>; [INV]
  else
    goto <bb 133>; [INV]

  <bb 128> :
  _94 = gimple_code (def_stmt);
  retval.1099 = _94 != 20;
  if (retval.1099 != 0)
    goto <bb 129>; [INV]
  else
    goto <bb 133>; [INV]

  <bb 129> :
  if (getfiledtree != 0B)
    goto <bb 130>; [INV]
  else
    goto <bb 133>; [INV]

  <bb 130> :
  _95 = getfiledtree->base.code;
  if (_95 != 0)
    goto <bb 131>; [INV]
  else
    goto <bb 133>; [INV]

  <bb 131> :
  treecheck = getfiledtree;
  goto <bb 133>; [INV]

  <bb 132> :
  treecheck = filed_from2;

  <bb 133> :
  _96 = second->base.code;
  if (_96 != 36)
    goto <bb 134>; [INV]
  else
    goto <bb 143>; [INV]

  <bb 134> :
  _97 = filed_from->base.code;
  if (_97 != 26)
    goto <bb 135>; [INV]
  else
    goto <bb 143>; [INV]

  <bb 135> :
  def_stmt2 = filed_from->ssa_name.def_stmt;
  getfiledtree = filed_from;
  _98 = filed_from->base.code;
  if (_98 != 36)
    goto <bb 136>; [INV]
  else
    goto <bb 142>; [INV]

  <bb 136> :
  D.255231 = gimple_assign_rhs1 (def_stmt2);

  <bb 137> :
  getfiledtree = D.255231;
  if (def_stmt2 != 0B)
    goto <bb 138>; [INV]
  else
    goto <bb 142>; [INV]

  <bb 138> :
  _99 = gimple_code (def_stmt2);
  retval.1100 = _99 != 20;
  if (retval.1100 != 0)
    goto <bb 139>; [INV]
  else
    goto <bb 142>; [INV]

  <bb 139> :
  if (getfiledtree != 0B)
    goto <bb 140>; [INV]
  else
    goto <bb 142>; [INV]

  <bb 140> :
  _100 = getfiledtree->base.code;
  if (_100 != 0)
    goto <bb 141>; [INV]
  else
    goto <bb 142>; [INV]

  <bb 141> :
  treecheck2 = getfiledtree;

  <bb 142> :
  goto <bb 144>; [INV]

  <bb 143> :
  treecheck2 = filed_from;

  <bb 144> :
  if (treecheck == 0B)
    goto <bb 145>; [INV]
  else
    goto <bb 146>; [INV]

  <bb 145> :
  treecheck = filed_from2;

  <bb 146> :
  if (treecheck2 == 0B)
    goto <bb 147>; [INV]
  else
    goto <bb 148>; [INV]

  <bb 147> :
  treecheck2 = filed_from;

  <bb 148> :
  if (treecheck2 == treecheck)
    goto <bb 149>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 149> :
  _101 = (long unsigned int) i;
  _102 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _101);
  _103 = _102->stmt;
  D.255232 = gimple_assign_rhs1 (_103);

  <bb 150> :
  _104 = D.255232;
  D.255233 = check_stmtStack (_104);

  <bb 151> :
  _105 = D.255233;
  retval.1101 = _105 == 0;
  if (retval.1101 != 0)
    goto <bb 152>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 152> :
  _106 = (long unsigned int) i;
  _107 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _106);
  _108 = _107->stmt;
  D.255234 = gimple_assign_rhs1 (_108);

  <bb 153> :
  _109 = D.255234;
  if (target2 != _109)
    goto <bb 154>; [INV]
  else
    goto <bb 157>; [INV]

  <bb 154> :
  _110 = (long unsigned int) i;
  _111 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _110);
  _112 = _111->stmt;
  D.255235 = check_stmtStack2 (_112);

  <bb 155> :
  _113 = D.255235;
  if (_113 == 0)
    goto <bb 156>; [INV]
  else
    goto <bb 157>; [INV]

  <bb 156> :
  iftmp.1103 = 1;
  goto <bb 158>; [INV]

  <bb 157> :
  iftmp.1103 = 0;

  <bb 158> :
  retval.1102 = iftmp.1103;
  if (retval.1102 != 0)
    goto <bb 159>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 159> :
  _114 = (long unsigned int) i;
  _115 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _114);
  _116 = _115->stmt;
  D.255236 = gimple_assign_rhs1 (_116);

  <bb 160> :
  _117 = D.255236;
  _118 = (long unsigned int) i;
  _119 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _118);
  _120 = _119->stmt;
  set_gimple_array (used_stmt, _120, _117, target, 0B);

  <bb 161> :
  _121 = (long unsigned int) i;
  _122 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _121);
  _123 = _122->stmt;
  D.255237 = gimple_assign_rhs1 (_123);

  <bb 162> :
  _124 = D.255237;
  _125 = (long unsigned int) i;
  _126 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _125);
  _127 = _126->stmt;
  D.255238 = gimple_assign_rhs1 (_127);

  <bb 163> :
  _128 = D.255238;
  new_search_imm_use (used_stmt, _128, _124);
  goto <bb 210>; [INV]

  <bb 164> :
  _129 = (long unsigned int) i;
  _130 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _129);
  _131 = _130->stmt;
  D.255239 = gimple_assign_lhs (_131);

  <bb 165> :
  _132 = D.255239;
  _133 = _132->base.code;
  retval.1104 = _133 == 153;
  if (retval.1104 != 0)
    goto <bb 166>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 166> :
  filed_from = second->exp.operands[0];
  _134 = (long unsigned int) i;
  _135 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _134);
  _136 = _135->assign_tree;
  filed_from2 = _136->exp.operands[0];
  _137 = filed_from2->base.code;
  if (_137 == 165)
    goto <bb 167>; [INV]
  else
    goto <bb 168>; [INV]

  <bb 167> :
  filed_from2 = filed_from2->exp.operands[0];

  <bb 168> :
  _138 = filed_from->base.code;
  if (_138 == 165)
    goto <bb 169>; [INV]
  else
    goto <bb 170>; [INV]

  <bb 169> :
  filed_from = filed_from->exp.operands[0];

  <bb 170> :
  _139 = filed_from2->base.code;
  if (_139 == 153)
    goto <bb 171>; [INV]
  else
    goto <bb 178>; [INV]

  <bb 171> :
  def_stmt = filed_from2->ssa_name.def_stmt;
  getfiledtree = filed_from2;
  _140 = filed_from->base.code;
  if (_140 != 36)
    goto <bb 172>; [INV]
  else
    goto <bb 179>; [INV]

  <bb 172> :
  D.255240 = gimple_assign_rhs1 (def_stmt);

  <bb 173> :
  getfiledtree = D.255240;
  if (def_stmt != 0B)
    goto <bb 174>; [INV]
  else
    goto <bb 179>; [INV]

  <bb 174> :
  _141 = gimple_code (def_stmt);
  retval.1105 = _141 != 20;
  if (retval.1105 != 0)
    goto <bb 175>; [INV]
  else
    goto <bb 179>; [INV]

  <bb 175> :
  if (getfiledtree != 0B)
    goto <bb 176>; [INV]
  else
    goto <bb 179>; [INV]

  <bb 176> :
  _142 = getfiledtree->base.code;
  if (_142 != 0)
    goto <bb 177>; [INV]
  else
    goto <bb 179>; [INV]

  <bb 177> :
  treecheck = getfiledtree;
  goto <bb 179>; [INV]

  <bb 178> :
  treecheck = filed_from2;

  <bb 179> :
  _143 = second->base.code;
  if (_143 != 36)
    goto <bb 180>; [INV]
  else
    goto <bb 189>; [INV]

  <bb 180> :
  _144 = filed_from->base.code;
  if (_144 != 26)
    goto <bb 181>; [INV]
  else
    goto <bb 189>; [INV]

  <bb 181> :
  def_stmt2 = filed_from->ssa_name.def_stmt;
  getfiledtree = filed_from;
  _145 = filed_from->base.code;
  if (_145 != 36)
    goto <bb 182>; [INV]
  else
    goto <bb 188>; [INV]

  <bb 182> :
  D.255241 = gimple_assign_rhs1 (def_stmt2);

  <bb 183> :
  getfiledtree = D.255241;
  if (def_stmt2 != 0B)
    goto <bb 184>; [INV]
  else
    goto <bb 188>; [INV]

  <bb 184> :
  _146 = gimple_code (def_stmt2);
  retval.1106 = _146 != 20;
  if (retval.1106 != 0)
    goto <bb 185>; [INV]
  else
    goto <bb 188>; [INV]

  <bb 185> :
  if (getfiledtree != 0B)
    goto <bb 186>; [INV]
  else
    goto <bb 188>; [INV]

  <bb 186> :
  _147 = getfiledtree->base.code;
  if (_147 != 0)
    goto <bb 187>; [INV]
  else
    goto <bb 188>; [INV]

  <bb 187> :
  treecheck2 = getfiledtree;

  <bb 188> :
  goto <bb 190>; [INV]

  <bb 189> :
  treecheck2 = filed_from;

  <bb 190> :
  if (treecheck == 0B)
    goto <bb 191>; [INV]
  else
    goto <bb 192>; [INV]

  <bb 191> :
  treecheck = filed_from2;

  <bb 192> :
  if (treecheck2 == 0B)
    goto <bb 193>; [INV]
  else
    goto <bb 194>; [INV]

  <bb 193> :
  treecheck2 = filed_from;

  <bb 194> :
  if (treecheck2 == treecheck)
    goto <bb 195>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 195> :
  _148 = (long unsigned int) i;
  _149 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _148);
  _150 = _149->stmt;
  D.255242 = gimple_assign_lhs (_150);

  <bb 196> :
  _151 = D.255242;
  D.255243 = check_stmtStack (_151);

  <bb 197> :
  _152 = D.255243;
  retval.1107 = _152 == 0;
  if (retval.1107 != 0)
    goto <bb 198>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 198> :
  _153 = (long unsigned int) i;
  _154 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _153);
  _155 = _154->stmt;
  D.255244 = gimple_assign_lhs (_155);

  <bb 199> :
  _156 = D.255244;
  if (target2 != _156)
    goto <bb 200>; [INV]
  else
    goto <bb 203>; [INV]

  <bb 200> :
  _157 = (long unsigned int) i;
  _158 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _157);
  _159 = _158->stmt;
  D.255245 = check_stmtStack2 (_159);

  <bb 201> :
  _160 = D.255245;
  if (_160 == 0)
    goto <bb 202>; [INV]
  else
    goto <bb 203>; [INV]

  <bb 202> :
  iftmp.1109 = 1;
  goto <bb 204>; [INV]

  <bb 203> :
  iftmp.1109 = 0;

  <bb 204> :
  retval.1108 = iftmp.1109;
  if (retval.1108 != 0)
    goto <bb 205>; [INV]
  else
    goto <bb 210>; [INV]

  <bb 205> :
  _161 = (long unsigned int) i;
  _162 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _161);
  _163 = _162->stmt;
  D.255246 = gimple_assign_rhs1 (_163);

  <bb 206> :
  _164 = D.255246;
  _165 = (long unsigned int) i;
  _166 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _165);
  _167 = _166->stmt;
  set_gimple_array (used_stmt, _167, _164, target, 0B);

  <bb 207> :
  _168 = (long unsigned int) i;
  _169 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _168);
  _170 = _169->stmt;
  D.255247 = gimple_assign_lhs (_170);

  <bb 208> :
  _171 = D.255247;
  _172 = (long unsigned int) i;
  _173 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _172);
  _174 = _173->stmt;
  D.255248 = gimple_assign_lhs (_174);

  <bb 209> :
  _175 = D.255248;
  new_search_imm_use (used_stmt, _175, _171);

  <bb 210> :
  i = i + 1;

  <bb 211> :
  _176 = (long unsigned int) i;
  _177 = std::vector<assign_type>::size (&assign_array.assign_type_array);
  retval.1110 = _176 < _177;
  if (retval.1110 != 0)
    goto <bb 117>; [INV]
  else
    goto <bb 212>; [INV]

  <bb 212> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};

  <bb 213> :
  second2 = {CLOBBER};

  <bb 214> :
  D.255253 = gimple_assign_lhs (use_stmt);

  <bb 215> :
  _178 = D.255253;
  retval.1111 = _178 != 0B;
  if (retval.1111 != 0)
    goto <bb 216>; [INV]
  else
    goto <bb 366>; [INV]

  <bb 216> :
  D.255254 = gimple_assign_lhs (use_stmt);

  <bb 217> :
  _179 = D.255254;
  _180 = _179->base.code;
  retval.1112 = _180 == 47;
  if (retval.1112 != 0)
    goto <bb 218>; [INV]
  else
    goto <bb 366>; [INV]

  <bb 218> :
  D.255255 = gimple_assign_lhs (use_stmt);

  <bb 219> :
  _181 = D.255255;
  second = _181->exp.operands[0];
  D.255256 = gimple_assign_lhs (use_stmt);

  <bb 220> :
  _182 = D.255256;
  _183 = _182->exp.operands[1];
  second2 = _183;
  if (second != 0B)
    goto <bb 221>; [INV]
  else
    goto <bb 363>; [INV]

  <bb 221> :
  three = second->exp.operands[0];
  _184 = second->base.code;
  if (_184 == 165)
    goto <bb 222>; [INV]
  else
    goto <bb 241>; [INV]

  <bb 222> :
  if (three != 0B)
    goto <bb 223>; [INV]
  else
    goto <bb 241>; [INV]

  <bb 223> :
  _185 = three->base.code;
  if (_185 == 153)
    goto <bb 224>; [INV]
  else
    goto <bb 239>; [INV]

  <bb 224> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1113 = is_gimple_assign (def_stmt);
  if (retval.1113 != 0)
    goto <bb 225>; [INV]
  else
    goto <bb 229>; [INV]

  <bb 225> :
  D.255257 = gimple_assign_rhs1 (def_stmt);

  <bb 226> :
  _186 = D.255257;
  _187 = _186->base.code;
  retval.1114 = _187 == 36;
  if (retval.1114 != 0)
    goto <bb 227>; [INV]
  else
    goto <bb 229>; [INV]

  <bb 227> :
  D.255258 = gimple_assign_rhs1 (def_stmt);

  <bb 228> :
  _188 = D.255258;
  getFunctionAssignVAR = _188;

  <bb 229> :
  D.255259 = check_stmtStack (three);

  <bb 230> :
  _189 = D.255259;
  retval.1115 = _189 == 0;
  if (retval.1115 != 0)
    goto <bb 231>; [INV]
  else
    goto <bb 241>; [INV]

  <bb 231> :
  if (three != target2)
    goto <bb 232>; [INV]
  else
    goto <bb 235>; [INV]

  <bb 232> :
  D.255260 = check_stmtStack2 (use_stmt);

  <bb 233> :
  _190 = D.255260;
  if (_190 == 0)
    goto <bb 234>; [INV]
  else
    goto <bb 235>; [INV]

  <bb 234> :
  iftmp.1117 = 1;
  goto <bb 236>; [INV]

  <bb 235> :
  iftmp.1117 = 0;

  <bb 236> :
  retval.1116 = iftmp.1117;
  if (retval.1116 != 0)
    goto <bb 237>; [INV]
  else
    goto <bb 241>; [INV]

  <bb 237> :
  set_gimple_array (used_stmt, use_stmt, three, target, 0B);

  <bb 238> :
  new_search_imm_use (used_stmt, three, three);
  goto <bb 241>; [INV]

  <bb 239> :
  _191 = three->base.code;
  if (_191 == 36)
    goto <bb 240>; [INV]
  else
    goto <bb 241>; [INV]

  <bb 240> :
  getFunctionAssignVAR = three;

  <bb 241> :
  second2.1118_192 = second2;
  if (second2.1118_192 != 0B)
    goto <bb 242>; [INV]
  else
    goto <bb 365>; [INV]

  <bb 242> :
  second2.1119_193 = second2;
  _194 = second2.1119_193->base.code;
  if (_194 == 35)
    goto <bb 243>; [INV]
  else
    goto <bb 365>; [INV]

  <bb 243> :
  _195 = second->base.code;
  if (_195 == 36)
    goto <bb 244>; [INV]
  else
    goto <bb 245>; [INV]

  <bb 244> :
  getFunctionAssignVAR = second;

  <bb 245> :
  function_assign_array::function_assign_array (&assign_array);
  std::vector<assign_type>::vector (&assign_type_array);
  function_assign_collect.1121_196 = function_assign_collect;
  D.255261 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1121_196, &second2);

  <bb 246> :
  _197 = D.255261;
  retval.1120 = _197 != 0B;
  if (retval.1120 != 0)
    goto <bb 247>; [INV]
  else
    goto <bb 362>; [INV]

  <bb 247> :
  function_assign_collect.1122_198 = function_assign_collect;
  D.255262 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1122_198, &second2);

  <bb 248> :
  _199 = D.255262;
  function_assign_array::operator= (&assign_array, _199);

  <bb 249> :
  std::vector<assign_type>::operator= (&assign_type_array, &assign_array.assign_type_array);

  <bb 250> :
  function_assign_collect.1124_200 = function_assign_collect;
  D.255263 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1124_200, &second2);

  <bb 251> :
  _201 = D.255263;
  retval.1123 = _201 != 0B;
  if (retval.1123 != 0)
    goto <bb 252>; [INV]
  else
    goto <bb 362>; [INV]

  <bb 252> :
  _202 = second->base.code;
  if (_202 == 36)
    goto <bb 253>; [INV]
  else
    goto <bb 254>; [INV]

  <bb 253> :
  getFunctionAssignVAR = second;

  <bb 254> :
  _203 = second->base.code;
  if (_203 != 36)
    goto <bb 255>; [INV]
  else
    goto <bb 362>; [INV]

  <bb 255> :
  i = 0;
  goto <bb 361>; [INV]

  <bb 256> :
  _204 = (long unsigned int) i;
  _205 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _204);
  _206 = _205->stmt;
  _207 = gimple_code (_206);
  retval.1125 = _207 == 6;
  if (retval.1125 != 0)
    goto <bb 257>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 257> :
  _208 = (long unsigned int) i;
  _209 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _208);
  _210 = _209->stmt;
  D.255264 = gimple_assign_rhs1 (_210);

  <bb 258> :
  _211 = D.255264;
  _212 = _211->base.code;
  retval.1126 = _212 == 153;
  if (retval.1126 != 0)
    goto <bb 259>; [INV]
  else
    goto <bb 309>; [INV]

  <bb 259> :
  filed_from = second->exp.operands[0];
  _213 = (long unsigned int) i;
  _214 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _213);
  _215 = _214->assign_tree;
  filed_from2 = _215->exp.operands[0];
  _216 = filed_from2->base.code;
  if (_216 == 165)
    goto <bb 260>; [INV]
  else
    goto <bb 261>; [INV]

  <bb 260> :
  filed_from2 = filed_from2->exp.operands[0];

  <bb 261> :
  _217 = filed_from->base.code;
  if (_217 == 165)
    goto <bb 262>; [INV]
  else
    goto <bb 263>; [INV]

  <bb 262> :
  filed_from = filed_from->exp.operands[0];

  <bb 263> :
  _218 = filed_from2->base.code;
  if (_218 == 153)
    goto <bb 264>; [INV]
  else
    goto <bb 274>; [INV]

  <bb 264> :
  def_stmt = filed_from2->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 265>; [INV]
  else
    goto <bb 275>; [INV]

  <bb 265> :
  _219 = gimple_code (def_stmt);
  retval.1127 = _219 != 20;
  if (retval.1127 != 0)
    goto <bb 266>; [INV]
  else
    goto <bb 275>; [INV]

  <bb 266> :
  D.255265 = gimple_assign_rhs1 (def_stmt);

  <bb 267> :
  _220 = D.255265;
  retval.1128 = _220 != 0B;
  if (retval.1128 != 0)
    goto <bb 268>; [INV]
  else
    goto <bb 275>; [INV]

  <bb 268> :
  D.255266 = gimple_assign_rhs1 (def_stmt);

  <bb 269> :
  _221 = D.255266;
  _222 = _221->base.code;
  retval.1129 = _222 != 0;
  if (retval.1129 != 0)
    goto <bb 270>; [INV]
  else
    goto <bb 275>; [INV]

  <bb 270> :
  if (def_stmt != 0B)
    goto <bb 271>; [INV]
  else
    goto <bb 273>; [INV]

  <bb 271> :
  D.255267 = gimple_assign_rhs1 (def_stmt);

  <bb 272> :
  treecheck = D.255267;
  goto <bb 275>; [INV]

  <bb 273> :
  treecheck = filed_from2;
  goto <bb 275>; [INV]

  <bb 274> :
  treecheck = filed_from2;

  <bb 275> :
  _223 = second->base.code;
  if (_223 != 36)
    goto <bb 276>; [INV]
  else
    goto <bb 288>; [INV]

  <bb 276> :
  _224 = filed_from->base.code;
  if (_224 != 26)
    goto <bb 277>; [INV]
  else
    goto <bb 288>; [INV]

  <bb 277> :
  def_stmt2 = filed_from->ssa_name.def_stmt;
  if (def_stmt2 != 0B)
    goto <bb 278>; [INV]
  else
    goto <bb 287>; [INV]

  <bb 278> :
  _225 = gimple_code (def_stmt2);
  retval.1130 = _225 != 20;
  if (retval.1130 != 0)
    goto <bb 279>; [INV]
  else
    goto <bb 287>; [INV]

  <bb 279> :
  D.255268 = gimple_assign_rhs1 (def_stmt2);

  <bb 280> :
  _226 = D.255268;
  retval.1131 = _226 != 0B;
  if (retval.1131 != 0)
    goto <bb 281>; [INV]
  else
    goto <bb 287>; [INV]

  <bb 281> :
  D.255269 = gimple_assign_rhs1 (def_stmt2);

  <bb 282> :
  _227 = D.255269;
  _228 = _227->base.code;
  retval.1132 = _228 != 0;
  if (retval.1132 != 0)
    goto <bb 283>; [INV]
  else
    goto <bb 287>; [INV]

  <bb 283> :
  if (def_stmt2 != 0B)
    goto <bb 284>; [INV]
  else
    goto <bb 286>; [INV]

  <bb 284> :
  D.255270 = gimple_assign_rhs1 (def_stmt2);

  <bb 285> :
  treecheck2 = D.255270;
  goto <bb 287>; [INV]

  <bb 286> :
  treecheck2 = filed_from;

  <bb 287> :
  goto <bb 289>; [INV]

  <bb 288> :
  treecheck2 = filed_from;

  <bb 289> :
  if (treecheck == 0B)
    goto <bb 290>; [INV]
  else
    goto <bb 291>; [INV]

  <bb 290> :
  treecheck = filed_from2;

  <bb 291> :
  if (treecheck2 == 0B)
    goto <bb 292>; [INV]
  else
    goto <bb 293>; [INV]

  <bb 292> :
  treecheck2 = filed_from;

  <bb 293> :
  if (treecheck2 == treecheck)
    goto <bb 294>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 294> :
  _229 = (long unsigned int) i;
  _230 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _229);
  _231 = _230->stmt;
  D.255271 = gimple_assign_rhs1 (_231);

  <bb 295> :
  _232 = D.255271;
  D.255272 = check_stmtStack (_232);

  <bb 296> :
  _233 = D.255272;
  retval.1133 = _233 == 0;
  if (retval.1133 != 0)
    goto <bb 297>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 297> :
  _234 = (long unsigned int) i;
  _235 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _234);
  _236 = _235->stmt;
  D.255273 = gimple_assign_rhs1 (_236);

  <bb 298> :
  _237 = D.255273;
  if (target2 != _237)
    goto <bb 299>; [INV]
  else
    goto <bb 302>; [INV]

  <bb 299> :
  _238 = (long unsigned int) i;
  _239 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _238);
  _240 = _239->stmt;
  D.255274 = check_stmtStack2 (_240);

  <bb 300> :
  _241 = D.255274;
  if (_241 == 0)
    goto <bb 301>; [INV]
  else
    goto <bb 302>; [INV]

  <bb 301> :
  iftmp.1135 = 1;
  goto <bb 303>; [INV]

  <bb 302> :
  iftmp.1135 = 0;

  <bb 303> :
  retval.1134 = iftmp.1135;
  if (retval.1134 != 0)
    goto <bb 304>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 304> :
  _242 = (long unsigned int) i;
  _243 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _242);
  _244 = _243->stmt;
  D.255275 = gimple_assign_rhs1 (_244);

  <bb 305> :
  _245 = D.255275;
  _246 = (long unsigned int) i;
  _247 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _246);
  _248 = _247->stmt;
  set_gimple_array (used_stmt, _248, _245, target, 0B);

  <bb 306> :
  _249 = (long unsigned int) i;
  _250 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _249);
  _251 = _250->stmt;
  D.255276 = gimple_assign_rhs1 (_251);

  <bb 307> :
  _252 = D.255276;
  _253 = (long unsigned int) i;
  _254 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _253);
  _255 = _254->stmt;
  D.255277 = gimple_assign_rhs1 (_255);

  <bb 308> :
  _256 = D.255277;
  new_search_imm_use (used_stmt, _256, _252);
  goto <bb 360>; [INV]

  <bb 309> :
  _257 = (long unsigned int) i;
  _258 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _257);
  _259 = _258->stmt;
  D.255278 = gimple_assign_lhs (_259);

  <bb 310> :
  _260 = D.255278;
  _261 = _260->base.code;
  retval.1136 = _261 == 153;
  if (retval.1136 != 0)
    goto <bb 311>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 311> :
  filed_from = second->exp.operands[0];
  _262 = (long unsigned int) i;
  _263 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _262);
  _264 = _263->assign_tree;
  filed_from2 = _264->exp.operands[0];
  _265 = filed_from2->base.code;
  if (_265 == 165)
    goto <bb 312>; [INV]
  else
    goto <bb 313>; [INV]

  <bb 312> :
  filed_from2 = filed_from2->exp.operands[0];

  <bb 313> :
  _266 = filed_from->base.code;
  if (_266 == 165)
    goto <bb 314>; [INV]
  else
    goto <bb 315>; [INV]

  <bb 314> :
  filed_from = filed_from->exp.operands[0];

  <bb 315> :
  _267 = filed_from2->base.code;
  if (_267 == 153)
    goto <bb 316>; [INV]
  else
    goto <bb 326>; [INV]

  <bb 316> :
  def_stmt = filed_from2->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 317>; [INV]
  else
    goto <bb 327>; [INV]

  <bb 317> :
  _268 = gimple_code (def_stmt);
  retval.1137 = _268 != 20;
  if (retval.1137 != 0)
    goto <bb 318>; [INV]
  else
    goto <bb 327>; [INV]

  <bb 318> :
  D.255279 = gimple_assign_rhs1 (def_stmt);

  <bb 319> :
  _269 = D.255279;
  retval.1138 = _269 != 0B;
  if (retval.1138 != 0)
    goto <bb 320>; [INV]
  else
    goto <bb 327>; [INV]

  <bb 320> :
  D.255280 = gimple_assign_rhs1 (def_stmt);

  <bb 321> :
  _270 = D.255280;
  _271 = _270->base.code;
  retval.1139 = _271 != 0;
  if (retval.1139 != 0)
    goto <bb 322>; [INV]
  else
    goto <bb 327>; [INV]

  <bb 322> :
  if (def_stmt != 0B)
    goto <bb 323>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 323> :
  D.255281 = gimple_assign_rhs1 (def_stmt);

  <bb 324> :
  treecheck = D.255281;
  goto <bb 327>; [INV]

  <bb 325> :
  treecheck = filed_from2;
  goto <bb 327>; [INV]

  <bb 326> :
  treecheck = filed_from2;

  <bb 327> :
  _272 = filed_from->base.code;
  if (_272 == 153)
    goto <bb 328>; [INV]
  else
    goto <bb 339>; [INV]

  <bb 328> :
  def_stmt2 = filed_from->ssa_name.def_stmt;
  if (def_stmt2 != 0B)
    goto <bb 329>; [INV]
  else
    goto <bb 340>; [INV]

  <bb 329> :
  _273 = filed_from->base.code;
  if (_273 != 20)
    goto <bb 330>; [INV]
  else
    goto <bb 340>; [INV]

  <bb 330> :
  _274 = gimple_code (def_stmt2);
  retval.1140 = _274 != 20;
  if (retval.1140 != 0)
    goto <bb 331>; [INV]
  else
    goto <bb 340>; [INV]

  <bb 331> :
  D.255282 = gimple_assign_rhs1 (def_stmt2);

  <bb 332> :
  _275 = D.255282;
  retval.1141 = _275 != 0B;
  if (retval.1141 != 0)
    goto <bb 333>; [INV]
  else
    goto <bb 340>; [INV]

  <bb 333> :
  D.255283 = gimple_assign_rhs1 (def_stmt2);

  <bb 334> :
  _276 = D.255283;
  _277 = _276->base.code;
  retval.1142 = _277 != 0;
  if (retval.1142 != 0)
    goto <bb 335>; [INV]
  else
    goto <bb 340>; [INV]

  <bb 335> :
  if (def_stmt2 != 0B)
    goto <bb 336>; [INV]
  else
    goto <bb 338>; [INV]

  <bb 336> :
  D.255284 = gimple_assign_rhs1 (def_stmt2);

  <bb 337> :
  treecheck2 = D.255284;
  goto <bb 340>; [INV]

  <bb 338> :
  treecheck2 = filed_from;
  goto <bb 340>; [INV]

  <bb 339> :
  treecheck2 = filed_from;

  <bb 340> :
  if (treecheck == 0B)
    goto <bb 341>; [INV]
  else
    goto <bb 342>; [INV]

  <bb 341> :
  treecheck = filed_from2;

  <bb 342> :
  if (treecheck2 == 0B)
    goto <bb 343>; [INV]
  else
    goto <bb 344>; [INV]

  <bb 343> :
  treecheck2 = filed_from;

  <bb 344> :
  if (treecheck2 == treecheck)
    goto <bb 345>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 345> :
  _278 = (long unsigned int) i;
  _279 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _278);
  _280 = _279->stmt;
  D.255285 = gimple_assign_lhs (_280);

  <bb 346> :
  _281 = D.255285;
  D.255286 = check_stmtStack (_281);

  <bb 347> :
  _282 = D.255286;
  retval.1143 = _282 == 0;
  if (retval.1143 != 0)
    goto <bb 348>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 348> :
  _283 = (long unsigned int) i;
  _284 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _283);
  _285 = _284->stmt;
  D.255287 = gimple_assign_lhs (_285);

  <bb 349> :
  _286 = D.255287;
  if (target2 != _286)
    goto <bb 350>; [INV]
  else
    goto <bb 353>; [INV]

  <bb 350> :
  _287 = (long unsigned int) i;
  _288 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _287);
  _289 = _288->stmt;
  D.255288 = check_stmtStack2 (_289);

  <bb 351> :
  _290 = D.255288;
  if (_290 == 0)
    goto <bb 352>; [INV]
  else
    goto <bb 353>; [INV]

  <bb 352> :
  iftmp.1145 = 1;
  goto <bb 354>; [INV]

  <bb 353> :
  iftmp.1145 = 0;

  <bb 354> :
  retval.1144 = iftmp.1145;
  if (retval.1144 != 0)
    goto <bb 355>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 355> :
  _291 = (long unsigned int) i;
  _292 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _291);
  _293 = _292->stmt;
  D.255289 = gimple_assign_rhs1 (_293);

  <bb 356> :
  _294 = D.255289;
  _295 = (long unsigned int) i;
  _296 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _295);
  _297 = _296->stmt;
  set_gimple_array (used_stmt, _297, _294, target, 0B);

  <bb 357> :
  _298 = (long unsigned int) i;
  _299 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _298);
  _300 = _299->stmt;
  D.255290 = gimple_assign_lhs (_300);

  <bb 358> :
  _301 = D.255290;
  _302 = (long unsigned int) i;
  _303 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _302);
  _304 = _303->stmt;
  D.255291 = gimple_assign_lhs (_304);

  <bb 359> :
  _305 = D.255291;
  new_search_imm_use (used_stmt, _305, _301);

  <bb 360> :
  i = i + 1;

  <bb 361> :
  _306 = (long unsigned int) i;
  _307 = std::vector<assign_type>::size (&assign_array.assign_type_array);
  retval.1146 = _306 < _307;
  if (retval.1146 != 0)
    goto <bb 256>; [INV]
  else
    goto <bb 362>; [INV]

  <bb 362> :
  std::vector<assign_type>::~vector (&assign_type_array);
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  goto <bb 365>; [INV]

  <bb 363> :
  _308 = second->base.code;
  if (_308 == 36)
    goto <bb 364>; [INV]
  else
    goto <bb 365>; [INV]

  <bb 364> :
  getFunctionAssignVAR = second;

  <bb 365> :
  second2 = {CLOBBER};

  <bb 366> :
  D.255296 = gimple_assign_lhs (use_stmt);

  <bb 367> :
  _309 = D.255296;
  D.255297 = check_stmtStack (_309);

  <bb 368> :
  _310 = D.255297;
  if (_310 == 0)
    goto <bb 369>; [INV]
  else
    goto <bb 372>; [INV]

  <bb 369> :
  D.255298 = check_stmtStack2 (use_stmt);

  <bb 370> :
  _311 = D.255298;
  if (_311 == 0)
    goto <bb 371>; [INV]
  else
    goto <bb 372>; [INV]

  <bb 371> :
  iftmp.1148 = 1;
  goto <bb 373>; [INV]

  <bb 372> :
  iftmp.1148 = 0;

  <bb 373> :
  retval.1147 = iftmp.1148;
  if (retval.1147 != 0)
    goto <bb 374>; [INV]
  else
    goto <bb 376>; [INV]

  <bb 374> :
  D.255299 = gimple_assign_lhs (use_stmt);

  <bb 375> :
  _312 = D.255299;
  set_gimple_array (used_stmt, use_stmt, _312, target, 0B);
  goto <bb 386>; [INV]

  <bb 376> :
  D.255300 = gimple_assign_rhs1 (use_stmt);

  <bb 377> :
  _313 = D.255300;
  D.255301 = check_stmtStack (_313);

  <bb 378> :
  _314 = D.255301;
  if (_314 == 0)
    goto <bb 379>; [INV]
  else
    goto <bb 382>; [INV]

  <bb 379> :
  D.255302 = check_stmtStack2 (use_stmt);

  <bb 380> :
  _315 = D.255302;
  if (_315 == 0)
    goto <bb 381>; [INV]
  else
    goto <bb 382>; [INV]

  <bb 381> :
  iftmp.1150 = 1;
  goto <bb 383>; [INV]

  <bb 382> :
  iftmp.1150 = 0;

  <bb 383> :
  retval.1149 = iftmp.1150;
  if (retval.1149 != 0)
    goto <bb 384>; [INV]
  else
    goto <bb 386>; [INV]

  <bb 384> :
  D.255303 = gimple_assign_rhs1 (use_stmt);

  <bb 385> :
  _316 = D.255303;
  set_gimple_array (used_stmt, use_stmt, _316, target, 0B);

  <bb 386> :
  getFunctionAssignVAR.1151_317 = getFunctionAssignVAR;
  if (getFunctionAssignVAR.1151_317 != 0B)
    goto <bb 387>; [INV]
  else
    goto <bb 640>; [INV]

  <bb 387> :
  function_assign_array::function_assign_array (&assign_array);
  function_assign_collect.1153_318 = function_assign_collect;
  D.255304 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1153_318, &getFunctionAssignVAR);

  <bb 388> :
  _319 = D.255304;
  retval.1152 = _319 != 0B;
  if (retval.1152 != 0)
    goto <bb 389>; [INV]
  else
    goto <bb 639>; [INV]

  <bb 389> :
  getFunctionAssignVAR.1154_320 = getFunctionAssignVAR;
  D.196272 = ret_function_varstmt (getFunctionAssignVAR.1154_320); [return slot optimization]

  <bb 390> :
  function_assign_array::operator= (&assign_array, &D.196272);
  function_assign_array::~function_assign_array (&D.196272);
  D.196272 = {CLOBBER};
  i = 0;
  goto <bb 638>; [INV]

  <bb 391> :
  _321 = (long unsigned int) i;
  _322 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _321);
  nowstmt = _322->stmt;
  debug_gimple_stmt (nowstmt);

  <bb 392> :
  _323 = gimple_code (nowstmt);
  retval.1155 = _323 == 6;
  if (retval.1155 != 0)
    goto <bb 393>; [INV]
  else
    goto <bb 570>; [INV]

  <bb 393> :
  D.255305 = gimple_assign_lhs (nowstmt);

  <bb 394> :
  _324 = D.255305;
  _325 = _324->base.code;
  retval.1156 = _325 == 165;
  if (retval.1156 != 0)
    goto <bb 395>; [INV]
  else
    goto <bb 413>; [INV]

  <bb 395> :
  D.255306 = gimple_assign_lhs (nowstmt);

  <bb 396> :
  _326 = D.255306;
  D.255307 = check_stmtStack (_326);

  <bb 397> :
  _327 = D.255307;
  retval.1157 = _327 == 0;
  if (retval.1157 != 0)
    goto <bb 398>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 398> :
  _328 = (long unsigned int) i;
  _329 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _328);
  _330 = _329->form_tree;
  retval.1158 = _330 != 0B;
  if (retval.1158 != 0)
    goto <bb 399>; [INV]
  else
    goto <bb 400>; [INV]

  <bb 399> :
  _331 = (long unsigned int) i;
  _332 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _331);
  _333 = _332->form_tree;
  set_gimple_array (used_stmt, nowstmt, _333, target, 0B);
  goto <bb 402>; [INV]

  <bb 400> :
  D.255308 = gimple_assign_lhs (nowstmt);

  <bb 401> :
  _334 = D.255308;
  set_gimple_array (used_stmt, nowstmt, _334, target, 0B);

  <bb 402> :
  D.255309 = gimple_assign_lhs (nowstmt);

  <bb 403> :
  _335 = D.255309;
  second = _335->exp.operands[0];
  if (second != 0B)
    goto <bb 404>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 404> :
  _336 = second->base.code;
  if (_336 == 153)
    goto <bb 405>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 405> :
  def_stmt = second->ssa_name.def_stmt;
  retval.1159 = is_gimple_assign (def_stmt);
  if (retval.1159 != 0)
    goto <bb 406>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 406> :
  D.255310 = gimple_assign_lhs (def_stmt);

  <bb 407> :
  _337 = D.255310;
  _338 = _337->base.code;
  retval.1160 = _338 == 153;
  if (retval.1160 != 0)
    goto <bb 408>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 408> :
  D.255311 = gimple_assign_lhs (def_stmt);

  <bb 409> :
  _339 = D.255311;
  retval.1161 = target2 != _339;
  if (retval.1161 != 0)
    goto <bb 410>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 410> :
  D.255312 = gimple_assign_lhs (def_stmt);

  <bb 411> :
  _340 = D.255312;
  D.255313 = gimple_assign_lhs (def_stmt);

  <bb 412> :
  _341 = D.255313;
  new_search_imm_use (used_stmt, _341, _340);
  goto <bb 637>; [INV]

  <bb 413> :
  D.255314 = gimple_assign_lhs (nowstmt);

  <bb 414> :
  _342 = D.255314;
  _343 = _342->base.code;
  retval.1162 = _343 == 153;
  if (retval.1162 != 0)
    goto <bb 415>; [INV]
  else
    goto <bb 495>; [INV]

  <bb 415> :
  D.255315 = gimple_assign_lhs (nowstmt);

  <bb 416> :
  _344 = D.255315;
  D.255316 = check_stmtStack (_344);

  <bb 417> :
  _345 = D.255316;
  retval.1163 = _345 == 0;
  if (retval.1163 != 0)
    goto <bb 418>; [INV]
  else
    goto <bb 434>; [INV]

  <bb 418> :
  _346 = (long unsigned int) i;
  _347 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _346);
  _348 = _347->form_tree;
  retval.1164 = _348 != 0B;
  if (retval.1164 != 0)
    goto <bb 419>; [INV]
  else
    goto <bb 420>; [INV]

  <bb 419> :
  _349 = (long unsigned int) i;
  _350 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _349);
  _351 = _350->form_tree;
  set_gimple_array (used_stmt, nowstmt, _351, target, 0B);
  goto <bb 422>; [INV]

  <bb 420> :
  D.255317 = gimple_assign_lhs (nowstmt);

  <bb 421> :
  _352 = D.255317;
  set_gimple_array (used_stmt, nowstmt, _352, target, 0B);

  <bb 422> :
  D.255318 = check_stmtStack4 (nowstmt);

  <bb 423> :
  _353 = D.255318;
  retval.1165 = _353 == 0;
  if (retval.1165 != 0)
    goto <bb 424>; [INV]
  else
    goto <bb 434>; [INV]

  <bb 424> :
  D.255319 = gimple_assign_lhs (nowstmt);

  <bb 425> :
  _354 = D.255319;
  if (target2 != _354)
    goto <bb 426>; [INV]
  else
    goto <bb 429>; [INV]

  <bb 426> :
  D.255320 = check_stmtStack2 (nowstmt);

  <bb 427> :
  _355 = D.255320;
  if (_355 == 0)
    goto <bb 428>; [INV]
  else
    goto <bb 429>; [INV]

  <bb 428> :
  iftmp.1167 = 1;
  goto <bb 430>; [INV]

  <bb 429> :
  iftmp.1167 = 0;

  <bb 430> :
  retval.1166 = iftmp.1167;
  if (retval.1166 != 0)
    goto <bb 431>; [INV]
  else
    goto <bb 434>; [INV]

  <bb 431> :
  D.255321 = gimple_assign_lhs (nowstmt);

  <bb 432> :
  _356 = D.255321;
  D.255322 = gimple_assign_lhs (nowstmt);

  <bb 433> :
  _357 = D.255322;
  new_search_imm_use (used_stmt, _357, _356);

  <bb 434> :
  D.255323 = gimple_assign_rhs1 (nowstmt);

  <bb 435> :
  _358 = D.255323;
  if (_358 != 0B)
    goto <bb 436>; [INV]
  else
    goto <bb 439>; [INV]

  <bb 436> :
  D.255324 = gimple_assign_rhs1 (nowstmt);

  <bb 437> :
  _359 = D.255324;
  _360 = _359->base.code;
  if (_360 == 47)
    goto <bb 438>; [INV]
  else
    goto <bb 439>; [INV]

  <bb 438> :
  iftmp.1169 = 1;
  goto <bb 440>; [INV]

  <bb 439> :
  iftmp.1169 = 0;

  <bb 440> :
  retval.1168 = iftmp.1169;
  if (retval.1168 != 0)
    goto <bb 441>; [INV]
  else
    goto <bb 457>; [INV]

  <bb 441> :
  D.255325 = gimple_assign_rhs1 (nowstmt);

  <bb 442> :
  _361 = D.255325;
  D.255326 = check_stmtStack (_361);

  <bb 443> :
  _362 = D.255326;
  retval.1170 = _362 == 0;
  if (retval.1170 != 0)
    goto <bb 444>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 444> :
  D.255327 = gimple_assign_rhs1 (nowstmt);

  <bb 445> :
  _363 = D.255327;
  second = _363->exp.operands[0];
  if (second != 0B)
    goto <bb 446>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 446> :
  _364 = second->base.code;
  if (_364 == 165)
    goto <bb 447>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 447> :
  three = second->exp.operands[0];
  if (three != 0B)
    goto <bb 448>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 448> :
  _365 = three->base.code;
  if (_365 == 153)
    goto <bb 449>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 449> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1171 = is_gimple_assign (def_stmt);
  if (retval.1171 != 0)
    goto <bb 450>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 450> :
  D.255328 = gimple_assign_lhs (def_stmt);

  <bb 451> :
  _366 = D.255328;
  _367 = _366->base.code;
  retval.1172 = _367 == 153;
  if (retval.1172 != 0)
    goto <bb 452>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 452> :
  D.255329 = gimple_assign_lhs (def_stmt);

  <bb 453> :
  _368 = D.255329;
  retval.1173 = target2 != _368;
  if (retval.1173 != 0)
    goto <bb 454>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 454> :
  D.255330 = gimple_assign_lhs (def_stmt);

  <bb 455> :
  _369 = D.255330;
  D.255331 = gimple_assign_lhs (def_stmt);

  <bb 456> :
  _370 = D.255331;
  new_search_imm_use (used_stmt, _370, _369);
  goto <bb 637>; [INV]

  <bb 457> :
  D.255332 = gimple_assign_rhs1 (nowstmt);

  <bb 458> :
  _371 = D.255332;
  if (_371 != 0B)
    goto <bb 459>; [INV]
  else
    goto <bb 462>; [INV]

  <bb 459> :
  D.255333 = gimple_assign_rhs1 (nowstmt);

  <bb 460> :
  _372 = D.255333;
  _373 = _372->base.code;
  if (_373 == 165)
    goto <bb 461>; [INV]
  else
    goto <bb 462>; [INV]

  <bb 461> :
  iftmp.1175 = 1;
  goto <bb 463>; [INV]

  <bb 462> :
  iftmp.1175 = 0;

  <bb 463> :
  retval.1174 = iftmp.1175;
  if (retval.1174 != 0)
    goto <bb 464>; [INV]
  else
    goto <bb 481>; [INV]

  <bb 464> :
  D.255334 = gimple_assign_rhs1 (nowstmt);

  <bb 465> :
  _374 = D.255334;
  D.255335 = check_stmtStack (_374);

  <bb 466> :
  _375 = D.255335;
  retval.1176 = _375 == 0;
  if (retval.1176 != 0)
    goto <bb 467>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 467> :
  _376 = (long unsigned int) i;
  _377 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _376);
  _378 = _377->form_tree;
  retval.1177 = _378 != 0B;
  if (retval.1177 != 0)
    goto <bb 468>; [INV]
  else
    goto <bb 469>; [INV]

  <bb 468> :
  _379 = (long unsigned int) i;
  _380 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _379);
  _381 = _380->form_tree;
  set_gimple_array (used_stmt, nowstmt, _381, target, 0B);
  goto <bb 471>; [INV]

  <bb 469> :
  D.255336 = gimple_assign_rhs1 (nowstmt);

  <bb 470> :
  _382 = D.255336;
  set_gimple_array (used_stmt, nowstmt, _382, target, 0B);

  <bb 471> :
  D.255337 = gimple_assign_rhs1 (nowstmt);

  <bb 472> :
  _383 = D.255337;
  second = _383->exp.operands[0];
  _384 = second->base.code;
  if (_384 == 165)
    goto <bb 473>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 473> :
  def_stmt = second->ssa_name.def_stmt;
  retval.1178 = is_gimple_assign (def_stmt);
  if (retval.1178 != 0)
    goto <bb 474>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 474> :
  D.255338 = gimple_assign_lhs (def_stmt);

  <bb 475> :
  _385 = D.255338;
  _386 = _385->base.code;
  retval.1179 = _386 == 153;
  if (retval.1179 != 0)
    goto <bb 476>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 476> :
  D.255339 = gimple_assign_lhs (def_stmt);

  <bb 477> :
  _387 = D.255339;
  retval.1180 = target2 != _387;
  if (retval.1180 != 0)
    goto <bb 478>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 478> :
  D.255340 = gimple_assign_lhs (def_stmt);

  <bb 479> :
  _388 = D.255340;
  D.255341 = gimple_assign_lhs (def_stmt);

  <bb 480> :
  _389 = D.255341;
  new_search_imm_use (used_stmt, _389, _388);
  goto <bb 637>; [INV]

  <bb 481> :
  D.255342 = gimple_assign_rhs1 (nowstmt);

  <bb 482> :
  _390 = D.255342;
  if (_390 != 0B)
    goto <bb 483>; [INV]
  else
    goto <bb 486>; [INV]

  <bb 483> :
  D.255343 = gimple_assign_rhs1 (nowstmt);

  <bb 484> :
  _391 = D.255343;
  _392 = _391->base.code;
  if (_392 == 49)
    goto <bb 485>; [INV]
  else
    goto <bb 486>; [INV]

  <bb 485> :
  iftmp.1182 = 1;
  goto <bb 487>; [INV]

  <bb 486> :
  iftmp.1182 = 0;

  <bb 487> :
  retval.1181 = iftmp.1182;
  if (retval.1181 != 0)
    goto <bb 488>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 488> :
  D.255344 = gimple_assign_rhs1 (nowstmt);

  <bb 489> :
  _393 = D.255344;
  D.255345 = check_stmtStack (_393);

  <bb 490> :
  _394 = D.255345;
  retval.1183 = _394 == 0;
  if (retval.1183 != 0)
    goto <bb 491>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 491> :
  _395 = (long unsigned int) i;
  _396 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _395);
  _397 = _396->form_tree;
  retval.1184 = _397 != 0B;
  if (retval.1184 != 0)
    goto <bb 492>; [INV]
  else
    goto <bb 493>; [INV]

  <bb 492> :
  _398 = (long unsigned int) i;
  _399 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _398);
  _400 = _399->form_tree;
  set_gimple_array (used_stmt, nowstmt, _400, target, 0B);
  goto <bb 637>; [INV]

  <bb 493> :
  D.255346 = gimple_assign_rhs1 (nowstmt);

  <bb 494> :
  _401 = D.255346;
  set_gimple_array (used_stmt, nowstmt, _401, target, 0B);
  goto <bb 637>; [INV]

  <bb 495> :
  D.255347 = gimple_assign_rhs1 (nowstmt);

  <bb 496> :
  _402 = D.255347;
  _403 = _402->base.code;
  retval.1185 = _403 == 153;
  if (retval.1185 != 0)
    goto <bb 497>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 497> :
  D.255348 = gimple_assign_rhs1 (nowstmt);

  <bb 498> :
  _404 = D.255348;
  D.255349 = check_stmtStack (_404);

  <bb 499> :
  _405 = D.255349;
  retval.1186 = _405 == 0;
  if (retval.1186 != 0)
    goto <bb 500>; [INV]
  else
    goto <bb 518>; [INV]

  <bb 500> :
  _406 = (long unsigned int) i;
  _407 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _406);
  _408 = _407->form_tree;
  retval.1187 = _408 != 0B;
  if (retval.1187 != 0)
    goto <bb 501>; [INV]
  else
    goto <bb 502>; [INV]

  <bb 501> :
  _409 = (long unsigned int) i;
  _410 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _409);
  _411 = _410->form_tree;
  set_gimple_array (used_stmt, nowstmt, _411, target, 0B);
  goto <bb 504>; [INV]

  <bb 502> :
  D.255350 = gimple_assign_rhs1 (nowstmt);

  <bb 503> :
  _412 = D.255350;
  set_gimple_array (used_stmt, nowstmt, _412, target, 0B);

  <bb 504> :
  D.255351 = gimple_assign_rhs1 (nowstmt);

  <bb 505> :
  _413 = D.255351;
  retval.1188 = target2 != _413;
  if (retval.1188 != 0)
    goto <bb 506>; [INV]
  else
    goto <bb 518>; [INV]

  <bb 506> :
  D.255352 = check_stmtStack4 (nowstmt);

  <bb 507> :
  _414 = D.255352;
  retval.1189 = _414 == 0;
  if (retval.1189 != 0)
    goto <bb 508>; [INV]
  else
    goto <bb 518>; [INV]

  <bb 508> :
  D.255353 = gimple_assign_rhs1 (nowstmt);

  <bb 509> :
  _415 = D.255353;
  if (target2 != _415)
    goto <bb 510>; [INV]
  else
    goto <bb 513>; [INV]

  <bb 510> :
  D.255354 = check_stmtStack2 (nowstmt);

  <bb 511> :
  _416 = D.255354;
  if (_416 == 0)
    goto <bb 512>; [INV]
  else
    goto <bb 513>; [INV]

  <bb 512> :
  iftmp.1191 = 1;
  goto <bb 514>; [INV]

  <bb 513> :
  iftmp.1191 = 0;

  <bb 514> :
  retval.1190 = iftmp.1191;
  if (retval.1190 != 0)
    goto <bb 515>; [INV]
  else
    goto <bb 518>; [INV]

  <bb 515> :
  D.255355 = gimple_assign_rhs1 (nowstmt);

  <bb 516> :
  _417 = D.255355;
  D.255356 = gimple_assign_rhs1 (nowstmt);

  <bb 517> :
  _418 = D.255356;
  new_search_imm_use (used_stmt, _418, _417);

  <bb 518> :
  D.255357 = gimple_assign_lhs (nowstmt);

  <bb 519> :
  _419 = D.255357;
  if (_419 != 0B)
    goto <bb 520>; [INV]
  else
    goto <bb 523>; [INV]

  <bb 520> :
  D.255358 = gimple_assign_lhs (nowstmt);

  <bb 521> :
  _420 = D.255358;
  _421 = _420->base.code;
  if (_421 == 47)
    goto <bb 522>; [INV]
  else
    goto <bb 523>; [INV]

  <bb 522> :
  iftmp.1193 = 1;
  goto <bb 524>; [INV]

  <bb 523> :
  iftmp.1193 = 0;

  <bb 524> :
  retval.1192 = iftmp.1193;
  if (retval.1192 != 0)
    goto <bb 525>; [INV]
  else
    goto <bb 541>; [INV]

  <bb 525> :
  D.255359 = gimple_assign_lhs (nowstmt);

  <bb 526> :
  _422 = D.255359;
  D.255360 = check_stmtStack (_422);

  <bb 527> :
  _423 = D.255360;
  retval.1194 = _423 == 0;
  if (retval.1194 != 0)
    goto <bb 528>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 528> :
  D.255361 = gimple_assign_lhs (nowstmt);

  <bb 529> :
  _424 = D.255361;
  second = _424->exp.operands[0];
  if (second != 0B)
    goto <bb 530>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 530> :
  _425 = second->base.code;
  if (_425 == 165)
    goto <bb 531>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 531> :
  three = second->exp.operands[0];
  if (three != 0B)
    goto <bb 532>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 532> :
  _426 = three->base.code;
  if (_426 == 153)
    goto <bb 533>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 533> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1195 = is_gimple_assign (def_stmt);
  if (retval.1195 != 0)
    goto <bb 534>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 534> :
  D.255362 = gimple_assign_lhs (def_stmt);

  <bb 535> :
  _427 = D.255362;
  _428 = _427->base.code;
  retval.1196 = _428 == 153;
  if (retval.1196 != 0)
    goto <bb 536>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 536> :
  D.255363 = gimple_assign_lhs (def_stmt);

  <bb 537> :
  _429 = D.255363;
  retval.1197 = target2 != _429;
  if (retval.1197 != 0)
    goto <bb 538>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 538> :
  D.255364 = gimple_assign_lhs (def_stmt);

  <bb 539> :
  _430 = D.255364;
  D.255365 = gimple_assign_lhs (def_stmt);

  <bb 540> :
  _431 = D.255365;
  new_search_imm_use (used_stmt, _431, _430);
  goto <bb 637>; [INV]

  <bb 541> :
  D.255366 = gimple_assign_lhs (nowstmt);

  <bb 542> :
  _432 = D.255366;
  if (_432 != 0B)
    goto <bb 543>; [INV]
  else
    goto <bb 546>; [INV]

  <bb 543> :
  D.255367 = gimple_assign_lhs (nowstmt);

  <bb 544> :
  _433 = D.255367;
  _434 = _433->base.code;
  if (_434 == 165)
    goto <bb 545>; [INV]
  else
    goto <bb 546>; [INV]

  <bb 545> :
  iftmp.1199 = 1;
  goto <bb 547>; [INV]

  <bb 546> :
  iftmp.1199 = 0;

  <bb 547> :
  retval.1198 = iftmp.1199;
  if (retval.1198 != 0)
    goto <bb 548>; [INV]
  else
    goto <bb 561>; [INV]

  <bb 548> :
  D.255368 = gimple_assign_lhs (nowstmt);

  <bb 549> :
  _435 = D.255368;
  D.255369 = check_stmtStack (_435);

  <bb 550> :
  _436 = D.255369;
  retval.1200 = _436 == 0;
  if (retval.1200 != 0)
    goto <bb 551>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 551> :
  D.255370 = gimple_assign_lhs (nowstmt);

  <bb 552> :
  _437 = D.255370;
  second = _437->exp.operands[0];
  _438 = second->base.code;
  if (_438 == 165)
    goto <bb 553>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 553> :
  def_stmt = second->ssa_name.def_stmt;
  retval.1201 = is_gimple_assign (def_stmt);
  if (retval.1201 != 0)
    goto <bb 554>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 554> :
  D.255371 = gimple_assign_lhs (def_stmt);

  <bb 555> :
  _439 = D.255371;
  _440 = _439->base.code;
  retval.1202 = _440 == 153;
  if (retval.1202 != 0)
    goto <bb 556>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 556> :
  D.255372 = gimple_assign_lhs (def_stmt);

  <bb 557> :
  _441 = D.255372;
  retval.1203 = target2 != _441;
  if (retval.1203 != 0)
    goto <bb 558>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 558> :
  D.255373 = gimple_assign_lhs (def_stmt);

  <bb 559> :
  _442 = D.255373;
  D.255374 = gimple_assign_lhs (def_stmt);

  <bb 560> :
  _443 = D.255374;
  new_search_imm_use (used_stmt, _443, _442);
  goto <bb 637>; [INV]

  <bb 561> :
  D.255375 = gimple_assign_lhs (nowstmt);

  <bb 562> :
  _444 = D.255375;
  _445 = _444->base.code;
  retval.1204 = _445 == 49;
  if (retval.1204 != 0)
    goto <bb 563>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 563> :
  D.255376 = gimple_assign_lhs (nowstmt);

  <bb 564> :
  _446 = D.255376;
  D.255377 = check_stmtStack (_446);

  <bb 565> :
  _447 = D.255377;
  retval.1205 = _447 == 0;
  if (retval.1205 != 0)
    goto <bb 566>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 566> :
  _448 = (long unsigned int) i;
  _449 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _448);
  _450 = _449->form_tree;
  retval.1206 = _450 != 0B;
  if (retval.1206 != 0)
    goto <bb 567>; [INV]
  else
    goto <bb 568>; [INV]

  <bb 567> :
  _451 = (long unsigned int) i;
  _452 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _451);
  _453 = _452->form_tree;
  set_gimple_array (used_stmt, nowstmt, _453, target, 0B);
  goto <bb 637>; [INV]

  <bb 568> :
  D.255378 = gimple_assign_lhs (nowstmt);

  <bb 569> :
  _454 = D.255378;
  set_gimple_array (used_stmt, nowstmt, _454, target, 0B);
  goto <bb 637>; [INV]

  <bb 570> :
  _455 = gimple_code (nowstmt);
  retval.1207 = _455 == 8;
  if (retval.1207 != 0)
    goto <bb 571>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 571> :
  _456 = gimple_code (nowstmt);
  retval.1208 = _456 == 8;
  if (retval.1208 != 0)
    goto <bb 572>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 572> :
  D.255379 = gimple_call_fn (nowstmt);

  <bb 573> :
  _457 = D.255379;
  retval.1209 = _457 != 0B;
  if (retval.1209 != 0)
    goto <bb 574>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 574> :
  D.255380 = gimple_call_fn (nowstmt);

  <bb 575> :
  _458 = D.255380;
  D.255381 = get_name (_458);

  <bb 576> :
  name = D.255381;
  D.255382 = gimple_call_lhs (nowstmt);

  <bb 577> :
  _459 = D.255382;
  if (_459 != 0B)
    goto <bb 580>; [INV]
  else
    goto <bb 578>; [INV]

  <bb 578> :
  D.255383 = gimple_call_fndecl (nowstmt);

  <bb 579> :
  _460 = D.255383;
  if (_460 != 0B)
    goto <bb 580>; [INV]
  else
    goto <bb 581>; [INV]

  <bb 580> :
  iftmp.1211 = 1;
  goto <bb 582>; [INV]

  <bb 581> :
  iftmp.1211 = 0;

  <bb 582> :
  retval.1210 = iftmp.1211;
  if (retval.1210 != 0)
    goto <bb 583>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 583> :
  D.255384 = gimple_call_lhs (nowstmt);

  <bb 584> :
  _461 = D.255384;
  D.255385 = check_stmtStack (_461);

  <bb 585> :
  _462 = D.255385;
  retval.1212 = _462 == 0;
  if (retval.1212 != 0)
    goto <bb 586>; [INV]
  else
    goto <bb 614>; [INV]

  <bb 586> :
  if (name != 0B)
    goto <bb 587>; [INV]
  else
    goto <bb 596>; [INV]

  <bb 587> :
  _463 = strcmp (name, "free");
  if (_463 == 0)
    goto <bb 588>; [INV]
  else
    goto <bb 592>; [INV]

  <bb 588> :
  D.255386 = check_stmtStack2 (nowstmt);

  <bb 589> :
  _464 = D.255386;
  retval.1213 = _464 == 0;
  if (retval.1213 != 0)
    goto <bb 590>; [INV]
  else
    goto <bb 596>; [INV]

  <bb 590> :
  D.255387 = gimple_call_arg (nowstmt, 0);

  <bb 591> :
  _465 = D.255387;
  set_gimple_array (used_stmt, nowstmt, _465, target, 0B);
  goto <bb 596>; [INV]

  <bb 592> :
  _466 = (long unsigned int) i;
  _467 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _466);
  _468 = _467->form_tree;
  retval.1214 = _468 != 0B;
  if (retval.1214 != 0)
    goto <bb 593>; [INV]
  else
    goto <bb 594>; [INV]

  <bb 593> :
  _469 = (long unsigned int) i;
  _470 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _469);
  _471 = _470->form_tree;
  set_gimple_array (used_stmt, nowstmt, _471, target, 0B);
  goto <bb 596>; [INV]

  <bb 594> :
  D.255388 = gimple_call_lhs (nowstmt);

  <bb 595> :
  _472 = D.255388;
  set_gimple_array (used_stmt, nowstmt, _472, target, 0B);

  <bb 596> :
  D.255389 = gimple_call_num_args (nowstmt);

  <bb 597> :
  _473 = D.255389;
  size = (int) _473;
  i = 0;
  goto <bb 613>; [INV]

  <bb 598> :
  i.1216_474 = (unsigned int) i;
  D.255390 = gimple_call_arg (nowstmt, i.1216_474);

  <bb 599> :
  _475 = D.255390;
  D.255391 = check_stmtStack (_475);

  <bb 600> :
  _476 = D.255391;
  retval.1215 = _476 == 0;
  if (retval.1215 != 0)
    goto <bb 601>; [INV]
  else
    goto <bb 612>; [INV]

  <bb 601> :
  i.1218_477 = (unsigned int) i;
  D.255392 = gimple_call_arg (nowstmt, i.1218_477);

  <bb 602> :
  _478 = D.255392;
  _479 = _478->base.code;
  retval.1217 = _479 == 153;
  if (retval.1217 != 0)
    goto <bb 603>; [INV]
  else
    goto <bb 608>; [INV]

  <bb 603> :
  i.1220_480 = (unsigned int) i;
  D.255393 = gimple_call_arg (nowstmt, i.1220_480);

  <bb 604> :
  _481 = D.255393;
  retval.1219 = target2 != _481;
  if (retval.1219 != 0)
    goto <bb 605>; [INV]
  else
    goto <bb 612>; [INV]

  <bb 605> :
  i.1221_482 = (unsigned int) i;
  D.255394 = gimple_call_arg (nowstmt, i.1221_482);

  <bb 606> :
  _483 = D.255394;
  i.1222_484 = (unsigned int) i;
  D.255395 = gimple_call_arg (nowstmt, i.1222_484);

  <bb 607> :
  _485 = D.255395;
  new_search_imm_use (used_stmt, _485, _483);
  goto <bb 612>; [INV]

  <bb 608> :
  i.1224_486 = (unsigned int) i;
  D.255396 = gimple_call_arg (nowstmt, i.1224_486);

  <bb 609> :
  _487 = D.255396;
  _488 = _487->base.code;
  retval.1223 = _488 == 131;
  if (retval.1223 != 0)
    goto <bb 610>; [INV]
  else
    goto <bb 612>; [INV]

  <bb 610> :
  i.1225_489 = (unsigned int) i;
  D.255397 = gimple_call_arg (nowstmt, i.1225_489);

  <bb 611> :
  _490 = D.255397;
  set_gimple_array (used_stmt, nowstmt, _490, target, 0B);

  <bb 612> :
  i = i + 1;

  <bb 613> :
  if (i < size)
    goto <bb 598>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 614> :
  D.255398 = check_stmtStack2 (nowstmt);

  <bb 615> :
  _491 = D.255398;
  retval.1226 = _491 == 0;
  if (retval.1226 != 0)
    goto <bb 616>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 616> :
  D.255399 = gimple_call_arg (nowstmt, 0);

  <bb 617> :
  _492 = D.255399;
  _493 = _492->base.code;
  retval.1227 = _493 == 131;
  if (retval.1227 != 0)
    goto <bb 618>; [INV]
  else
    goto <bb 620>; [INV]

  <bb 618> :
  D.255400 = gimple_call_arg (nowstmt, 0);

  <bb 619> :
  _494 = D.255400;
  set_gimple_array (used_stmt, nowstmt, _494, target, 0B);

  <bb 620> :
  D.255401 = gimple_call_num_args (nowstmt);

  <bb 621> :
  _495 = D.255401;
  size = (int) _495;
  i = 0;
  goto <bb 636>; [INV]

  <bb 622> :
  i.1229_496 = (unsigned int) i;
  D.255402 = gimple_call_arg (nowstmt, i.1229_496);

  <bb 623> :
  _497 = D.255402;
  D.255403 = check_stmtStack (_497);

  <bb 624> :
  _498 = D.255403;
  retval.1228 = _498 == 0;
  if (retval.1228 != 0)
    goto <bb 625>; [INV]
  else
    goto <bb 635>; [INV]

  <bb 625> :
  i.1231_499 = (unsigned int) i;
  D.255404 = gimple_call_arg (nowstmt, i.1231_499);

  <bb 626> :
  _500 = D.255404;
  _501 = _500->base.code;
  retval.1230 = _501 == 153;
  if (retval.1230 != 0)
    goto <bb 627>; [INV]
  else
    goto <bb 635>; [INV]

  <bb 627> :
  i.1233_502 = (unsigned int) i;
  D.255405 = gimple_call_arg (nowstmt, i.1233_502);

  <bb 628> :
  _503 = D.255405;
  D.255406 = check_stmtStack (_503);

  <bb 629> :
  _504 = D.255406;
  retval.1232 = _504 == 0;
  if (retval.1232 != 0)
    goto <bb 630>; [INV]
  else
    goto <bb 635>; [INV]

  <bb 630> :
  i.1235_505 = (unsigned int) i;
  D.255407 = gimple_call_arg (nowstmt, i.1235_505);

  <bb 631> :
  _506 = D.255407;
  retval.1234 = target2 != _506;
  if (retval.1234 != 0)
    goto <bb 632>; [INV]
  else
    goto <bb 635>; [INV]

  <bb 632> :
  i.1236_507 = (unsigned int) i;
  D.255408 = gimple_call_arg (nowstmt, i.1236_507);

  <bb 633> :
  _508 = D.255408;
  i.1237_509 = (unsigned int) i;
  D.255409 = gimple_call_arg (nowstmt, i.1237_509);

  <bb 634> :
  _510 = D.255409;
  new_search_imm_use (used_stmt, _510, _508);

  <bb 635> :
  i = i + 1;

  <bb 636> :
  if (i < size)
    goto <bb 622>; [INV]
  else
    goto <bb 637>; [INV]

  <bb 637> :
  i = i + 1;

  <bb 638> :
  _511 = (long unsigned int) i;
  _512 = std::vector<assign_type>::size (&assign_array.assign_type_array);
  retval.1238 = _511 < _512;
  if (retval.1238 != 0)
    goto <bb 391>; [INV]
  else
    goto <bb 639>; [INV]

  <bb 639> :
  function_assign_array::~function_assign_array (&assign_array);
  assign_array = {CLOBBER};

  <bb 640> :
  getFunctionAssignVAR = {CLOBBER};

  <bb 641> :
  return;

  <bb 642> :
<L775>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 5

  <bb 643> :
<L776>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 4

  <bb 644> :
<L777>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  resx 3

  <bb 645> :
<L778>:
  second2 = {CLOBBER};
  resx 2

  <bb 646> :
<L779>:
  std::vector<assign_type>::~vector (&assign_type_array);
  resx 13

  <bb 647> :
<L780>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 12

  <bb 648> :
<L781>:
  assign_array = {CLOBBER};
  assign_type_array = {CLOBBER};
  resx 11

  <bb 649> :
<L782>:
  second2 = {CLOBBER};
  resx 10

  <bb 650> :
<L783>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 19

  <bb 651> :
<L784>:
  assign_array = {CLOBBER};
  resx 18

  <bb 652> :
<L785>:
  getFunctionAssignVAR = {CLOBBER};
  resx 1

}



;; Function function_assign_array::operator= (_ZN21function_assign_arrayaSEOS_, funcdef_no=6418, decl_uid=191091, cgraph_uid=3393, symbol_order=4171)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_assign_array & function_assign_array::operator= (struct function_assign_array * const this, struct function_assign_array & D.191092)
{
  struct function_assign_array & D.255413;

  <bb 2> :
  _1 = D.191092->pass;
  this->pass = _1;
  _2 = &D.191092->assign_type_array;
  _3 = &this->assign_type_array;
  std::vector<assign_type>::operator= (_3, _2);
  D.255413 = this;

  <bb 3> :
<L0>:
  return D.255413;

}



;; Function std::vector<assign_type>::operator= (_ZNSt6vectorI11assign_typeSaIS0_EEaSEOS2_, funcdef_no=7778, decl_uid=176246, cgraph_uid=4410, symbol_order=5199)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct vector & std::vector<assign_type>::operator= (struct vector * const this, struct vector & __x)
{
  const bool __move_storage;
  struct vector & D.255416;
  struct integral_constant D.255415;

  <bb 2> :
  __move_storage = 1;
  _1 = std::move<std::vector<assign_type>&> (__x);
  std::vector<assign_type>::_M_move_assign (this, _1, D.255415);
  D.255416 = this;

  <bb 3> :
<L0>:
  return D.255416;

}



;; Function std::move<std::vector<assign_type>&> (_ZSt4moveIRSt6vectorI11assign_typeSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_, funcdef_no=8734, decl_uid=215192, cgraph_uid=5366, symbol_order=6159)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::vector<assign_type>&> (struct vector & __t)
{
  struct type & D.255418;

  <bb 2> :
  D.255418 = __t;

  <bb 3> :
<L0>:
  return D.255418;

}



;; Function std::vector<assign_type>::_M_move_assign (_ZNSt6vectorI11assign_typeSaIS0_EE14_M_move_assignEOS2_St17integral_constantIbLb1EE, funcdef_no=8735, decl_uid=176524, cgraph_uid=5367, symbol_order=6160)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::_M_move_assign (struct vector * const this, struct vector & __x, struct true_type D.227798)
{
  struct vector __tmp;
  struct allocator_type D.227801;

  <bb 2> :
  _1 = &this->D.176656;
  D.227801 = std::_Vector_base<assign_type, std::allocator<assign_type> >::get_allocator (_1); [return slot optimization]
  std::vector<assign_type>::vector (&__tmp, &D.227801);
  std::allocator<assign_type>::~allocator (&D.227801);
  D.227801 = {CLOBBER};
  _2 = &this->D.176656._M_impl.D.176001;
  _3 = &__x->D.176656._M_impl.D.176001;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_swap_data (_2, _3);
  _4 = &__x->D.176656._M_impl.D.176001;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_swap_data (&__tmp.D.176656._M_impl.D.176001, _4);
  _5 = &__x->D.176656;
  _6 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_5);
  _7 = &this->D.176656;
  _8 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (_7);
  std::__alloc_on_move<std::allocator<assign_type> > (_8, _6);
  std::vector<assign_type>::~vector (&__tmp);
  __tmp = {CLOBBER};
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::get_allocator (_ZNKSt12_Vector_baseI11assign_typeSaIS0_EE13get_allocatorEv, funcdef_no=9566, decl_uid=175893, cgraph_uid=6198, symbol_order=6991)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::_Vector_base<assign_type, std::allocator<assign_type> >::get_allocator (const struct _Vector_base * const this)
{
  <bb 2> :
  _1 = std::_Vector_base<assign_type, std::allocator<assign_type> >::_M_get_Tp_allocator (this);
  std::allocator<assign_type>::allocator (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::vector<assign_type>::vector (_ZNSt6vectorI11assign_typeSaIS0_EEC2ERKS1_, funcdef_no=9568, decl_uid=176643, cgraph_uid=6200, symbol_order=6993)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<assign_type>::vector (struct vector * const this, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.176656;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_1, __a);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (_ZNSt12_Vector_baseI11assign_typeSaIS0_EEC2ERKS1_, funcdef_no=10202, decl_uid=176101, cgraph_uid=6834, symbol_order=7631)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_base (struct _Vector_base * const this, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl::_Vector_impl (_1, __a);
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_swap_data (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE17_Vector_impl_data12_M_swap_dataERS3_, funcdef_no=9570, decl_uid=175937, cgraph_uid=6202, symbol_order=6995)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_swap_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  struct _Vector_impl_data __tmp;

  <bb 2> :
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_Vector_impl_data (&__tmp);
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_copy_data (&__tmp, this);
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_copy_data (this, __x);
  std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_copy_data (__x, &__tmp);
  __tmp = {CLOBBER};
  return;

}



;; Function std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_copy_data (_ZNSt12_Vector_baseI11assign_typeSaIS0_EE17_Vector_impl_data12_M_copy_dataERKS3_, funcdef_no=10204, decl_uid=175934, cgraph_uid=6836, symbol_order=7633)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<assign_type, std::allocator<assign_type> >::_Vector_impl_data::_M_copy_data (struct _Vector_impl_data * const this, const struct _Vector_impl_data & __x)
{
  <bb 2> :
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  return;

}



;; Function std::__alloc_on_move<std::allocator<assign_type> > (_ZSt15__alloc_on_moveISaI11assign_typeEEvRT_S3_, funcdef_no=9571, decl_uid=227802, cgraph_uid=6203, symbol_order=6996)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_move<std::allocator<assign_type> > (struct allocator & __one, struct allocator & __two)
{
  <bb 2> :
  std::move<std::allocator<assign_type>&> (__two);
  return;

}



;; Function std::move<std::allocator<assign_type>&> (_ZSt4moveIRSaI11assign_typeEEONSt16remove_referenceIT_E4typeEOS4_, funcdef_no=10205, decl_uid=237625, cgraph_uid=6837, symbol_order=7634)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::allocator<assign_type>&> (struct allocator & __t)
{
  struct type & D.255422;

  <bb 2> :
  D.255422 = __t;

  <bb 3> :
<L0>:
  return D.255422;

}



;; Function Prenew_search_imm_use (_Z21Prenew_search_imm_useP12gimple_arrayP9tree_nodeS2_, funcdef_no=6419, decl_uid=187054, cgraph_uid=3395, symbol_order=4173)

Removing basic block 36
Removing basic block 39
Removing basic block 40
Removing basic block 48
Removing basic block 63
Removing basic block 64
Removing basic block 65
Removing basic block 89
Removing basic block 90
Removing basic block 91
Removing basic block 92
Removing basic block 93
Removing basic block 94
Removing basic block 95
Removing basic block 96
Removing basic block 97
Removing basic block 118
Removing basic block 119
Removing basic block 120
Removing basic block 121
Removing basic block 122
Removing basic block 123
Removing basic block 124
Removing basic block 132
Removing basic block 149
Removing basic block 150
Removing basic block 151
Removing basic block 152
Removing basic block 176
Removing basic block 177
Removing basic block 178
Removing basic block 179
Removing basic block 180
Removing basic block 181
Removing basic block 182
Removing basic block 183
Removing basic block 184
Removing basic block 205
Removing basic block 206
Removing basic block 207
Removing basic block 208
Removing basic block 209
Removing basic block 210
Removing basic block 211
Removing basic block 212
Removing basic block 221
Removing basic block 222
Removing basic block 230
Removing basic block 233
Removing basic block 234
Removing basic block 235
Removing basic block 238
Removing basic block 243
Removing basic block 246
Removing basic block 247
Removing basic block 248
Removing basic block 249
Removing basic block 250
Removing basic block 251
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 1
;;  header 192, latch 191
;;  depth 1, outer 0
;;  nodes
;;
;; Loop 2
;;  header 186, latch 185
;;  depth 2, outer 1
;;  nodes: 186 185 88 168 184 37 167 134 137 139 142 144 140 138 136 157 160 164 162 159 147 101 68 71 73 76 78 74 72 70 91 94 98 96 93 81 35 33 154 103 178 182 180 179 181 177 176 170 175 173 172 171 174 169 102 39 38 30 29 28 152 153 149 151 150 148 131 129 130 126 128 127 125 106 124 112 121 114 113 119 120 116 118 117 115 111 108 110 109 107 123 122 105 104 32 31 34 80 79 92 95 97 90 89 69 77 75 67 66 65 63 64 60 62 61 59 42 58 48 55 53 54 50 52 51 49 47 44 46 45 43 57 56 41 40 100 99 146 145 158 161 163 156 155 135 143 141 133 132 166 165 36 183 86 87 83 85 84 82
;; 2 succs { 3 193 }
;; 3 succs { 4 193 }
;; 4 succs { 5 193 }
;; 5 succs { 6 8 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 193 }
;; 10 succs { 11 193 }
;; 11 succs { 12 193 }
;; 12 succs { 192 }
;; 13 succs { 15 14 }
;; 14 succs { 15 16 }
;; 15 succs { 17 }
;; 16 succs { 17 }
;; 17 succs { 18 188 }
;; 18 succs { 195 19 }
;; 19 succs { 20 22 }
;; 20 succs { 195 21 }
;; 21 succs { 24 }
;; 22 succs { 195 23 }
;; 23 succs { 24 }
;; 24 succs { 194 25 }
;; 25 succs { 26 187 }
;; 26 succs { 194 27 }
;; 27 succs { 186 }
;; 28 succs { 29 168 }
;; 29 succs { 194 30 }
;; 30 succs { 31 38 }
;; 31 succs { 194 32 }
;; 32 succs { 194 33 }
;; 33 succs { 34 185 }
;; 34 succs { 35 36 }
;; 35 succs { 194 185 }
;; 36 succs { 194 37 }
;; 37 succs { 194 185 }
;; 38 succs { 194 39 }
;; 39 succs { 40 102 }
;; 40 succs { 194 41 }
;; 41 succs { 194 42 }
;; 42 succs { 43 59 }
;; 43 succs { 44 45 }
;; 44 succs { 194 47 }
;; 45 succs { 194 46 }
;; 46 succs { 194 47 }
;; 47 succs { 194 48 }
;; 48 succs { 49 59 }
;; 49 succs { 194 50 }
;; 50 succs { 51 54 }
;; 51 succs { 194 52 }
;; 52 succs { 53 54 }
;; 53 succs { 55 }
;; 54 succs { 55 }
;; 55 succs { 56 59 }
;; 56 succs { 194 57 }
;; 57 succs { 194 58 }
;; 58 succs { 194 59 }
;; 59 succs { 194 60 }
;; 60 succs { 61 64 }
;; 61 succs { 194 62 }
;; 62 succs { 63 64 }
;; 63 succs { 65 }
;; 64 succs { 65 }
;; 65 succs { 66 82 }
;; 66 succs { 194 67 }
;; 67 succs { 194 68 }
;; 68 succs { 69 185 }
;; 69 succs { 194 70 }
;; 70 succs { 71 185 }
;; 71 succs { 72 185 }
;; 72 succs { 73 185 }
;; 73 succs { 74 185 }
;; 74 succs { 75 185 }
;; 75 succs { 194 76 }
;; 76 succs { 77 185 }
;; 77 succs { 194 78 }
;; 78 succs { 79 185 }
;; 79 succs { 194 80 }
;; 80 succs { 194 81 }
;; 81 succs { 194 185 }
;; 82 succs { 194 83 }
;; 83 succs { 84 87 }
;; 84 succs { 194 85 }
;; 85 succs { 86 87 }
;; 86 succs { 88 }
;; 87 succs { 88 }
;; 88 succs { 89 185 }
;; 89 succs { 194 90 }
;; 90 succs { 194 91 }
;; 91 succs { 92 185 }
;; 92 succs { 194 93 }
;; 93 succs { 94 185 }
;; 94 succs { 95 185 }
;; 95 succs { 194 96 }
;; 96 succs { 97 185 }
;; 97 succs { 194 98 }
;; 98 succs { 99 185 }
;; 99 succs { 194 100 }
;; 100 succs { 194 101 }
;; 101 succs { 194 185 }
;; 102 succs { 194 103 }
;; 103 succs { 104 185 }
;; 104 succs { 194 105 }
;; 105 succs { 194 106 }
;; 106 succs { 107 125 }
;; 107 succs { 108 109 }
;; 108 succs { 194 111 }
;; 109 succs { 194 110 }
;; 110 succs { 194 111 }
;; 111 succs { 194 112 }
;; 112 succs { 113 125 }
;; 113 succs { 194 114 }
;; 114 succs { 115 125 }
;; 115 succs { 194 116 }
;; 116 succs { 117 120 }
;; 117 succs { 194 118 }
;; 118 succs { 119 120 }
;; 119 succs { 121 }
;; 120 succs { 121 }
;; 121 succs { 122 125 }
;; 122 succs { 194 123 }
;; 123 succs { 194 124 }
;; 124 succs { 194 125 }
;; 125 succs { 194 126 }
;; 126 succs { 127 130 }
;; 127 succs { 194 128 }
;; 128 succs { 129 130 }
;; 129 succs { 131 }
;; 130 succs { 131 }
;; 131 succs { 132 148 }
;; 132 succs { 194 133 }
;; 133 succs { 194 134 }
;; 134 succs { 135 185 }
;; 135 succs { 194 136 }
;; 136 succs { 137 185 }
;; 137 succs { 138 185 }
;; 138 succs { 139 185 }
;; 139 succs { 140 185 }
;; 140 succs { 141 185 }
;; 141 succs { 194 142 }
;; 142 succs { 143 185 }
;; 143 succs { 194 144 }
;; 144 succs { 145 185 }
;; 145 succs { 194 146 }
;; 146 succs { 194 147 }
;; 147 succs { 194 185 }
;; 148 succs { 194 149 }
;; 149 succs { 150 153 }
;; 150 succs { 194 151 }
;; 151 succs { 152 153 }
;; 152 succs { 154 }
;; 153 succs { 154 }
;; 154 succs { 155 185 }
;; 155 succs { 194 156 }
;; 156 succs { 194 157 }
;; 157 succs { 158 185 }
;; 158 succs { 194 159 }
;; 159 succs { 160 185 }
;; 160 succs { 161 185 }
;; 161 succs { 194 162 }
;; 162 succs { 163 185 }
;; 163 succs { 194 164 }
;; 164 succs { 165 185 }
;; 165 succs { 194 166 }
;; 166 succs { 194 167 }
;; 167 succs { 194 185 }
;; 168 succs { 169 185 }
;; 169 succs { 194 170 }
;; 170 succs { 171 176 }
;; 171 succs { 194 172 }
;; 172 succs { 194 173 }
;; 173 succs { 174 176 }
;; 174 succs { 194 175 }
;; 175 succs { 194 176 }
;; 176 succs { 194 177 }
;; 177 succs { 194 178 }
;; 178 succs { 179 185 }
;; 179 succs { 194 180 }
;; 180 succs { 181 185 }
;; 181 succs { 182 183 }
;; 182 succs { 194 185 }
;; 183 succs { 194 184 }
;; 184 succs { 194 185 }
;; 185 succs { 186 }
;; 186 succs { 28 187 }
;; 187 succs { 191 }
;; 188 succs { 189 191 }
;; 189 succs { 190 191 }
;; 190 succs { 191 }
;; 191 succs { 192 }
;; 192 succs { 13 193 }
;; 193 succs { 1 }
;; 194 succs { 195 }
;; 195 succs { }
void Prenew_search_imm_use (struct gimple_array * used_stmt, union tree_node * target, union tree_node * target2)
{
  unsigned int D.255788;
  union tree_node * D.255787;
  union tree_node * D.255786;
  int D.255785;
  union tree_node * D.255784;
  union tree_node * D.255783;
  union tree_node * D.255780;
  union tree_node * D.255779;
  int D.255778;
  union tree_node * D.255777;
  union tree_node * D.255776;
  int D.255775;
  union tree_node * D.255774;
  union tree_node * D.255773;
  union tree_node * D.255772;
  union tree_node * D.255771;
  union tree_node * D.255770;
  union tree_node * D.255769;
  union tree_node * D.255768;
  int D.255767;
  union tree_node * D.255766;
  union tree_node * D.255765;
  union tree_node * D.255764;
  union tree_node * D.255763;
  union tree_node * D.255762;
  union tree_node * D.255761;
  union tree_node * D.255760;
  union tree_node * D.255759;
  int D.255758;
  union tree_node * D.255757;
  union tree_node * D.255756;
  union tree_node * D.255755;
  union tree_node * D.255754;
  union tree_node * D.255753;
  int D.255752;
  union tree_node * D.255751;
  int D.255750;
  union tree_node * D.255749;
  union tree_node * D.255748;
  int D.255747;
  union tree_node * D.255746;
  union tree_node * D.255745;
  union tree_node * D.255744;
  union tree_node * D.255743;
  union tree_node * D.255742;
  union tree_node * D.255741;
  union tree_node * D.255740;
  int D.255739;
  union tree_node * D.255738;
  union tree_node * D.255737;
  union tree_node * D.255736;
  union tree_node * D.255735;
  union tree_node * D.255734;
  union tree_node * D.255733;
  union tree_node * D.255732;
  union tree_node * D.255731;
  int D.255730;
  union tree_node * D.255729;
  union tree_node * D.255728;
  union tree_node * D.255727;
  union tree_node * D.255726;
  union tree_node * D.255725;
  int D.255724;
  union tree_node * D.255723;
  int D.255722;
  union tree_node * D.255721;
  int D.255720;
  union tree_node * D.255719;
  union tree_node * D.255718;
  union tree_node * D.255717;
  int D.255716;
  union tree_node * D.255715;
  union tree_node * D.255714;
  struct function_assign_array * D.255713;
  union tree_node * D.255712;
  union tree_node * D.255711;
  union tree_node * D.255710;
  union tree_node * D.255709;
  union tree_node * D.255708;
  unsigned int D.255707;
  union tree_node * D.255706;
  union tree_node * D.255705;
  union tree_node * D.255704;
  union tree_node * D.255703;
  struct gimple * def_stmt;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * second;
  struct gimple * def_stmt;
  union tree_node * three;
  union tree_node * second;
  int i;
  struct function_assign_array assign_array;
  union tree_node * getFunctionAssignVAR;
  union tree_node * second;
  int i;
  struct gimple * def_stmt;
  bool retval.1310;
  bool retval.1306;
  bool retval.1304;
  bool retval.1303;
  bool retval.1302;
  bool retval.1301;
  bool retval.1300;
  bool retval.1299;
  bool retval.1298;
  bool retval.1297;
  bool retval.1296;
  bool retval.1295;
  bool retval.1294;
  bool retval.1293;
  bool iftmp.1292;
  bool retval.1291;
  bool retval.1290;
  bool retval.1289;
  bool retval.1288;
  bool retval.1287;
  bool iftmp.1286;
  bool retval.1285;
  bool iftmp.1284;
  bool retval.1283;
  bool retval.1282;
  bool retval.1281;
  bool retval.1280;
  bool retval.1279;
  bool retval.1278;
  bool retval.1277;
  bool retval.1276;
  bool retval.1275;
  bool retval.1274;
  bool iftmp.1273;
  bool retval.1272;
  bool retval.1271;
  bool retval.1270;
  bool retval.1269;
  bool retval.1268;
  bool iftmp.1267;
  bool retval.1266;
  bool iftmp.1265;
  bool retval.1264;
  bool retval.1263;
  bool retval.1262;
  bool retval.1261;
  bool retval.1260;
  bool retval.1259;
  bool retval.1258;
  bool retval.1257;
  bool retval.1256;
  struct function_assign_array D.196329;
  bool retval.1253;
  bool retval.1249;
  bool iftmp.1246;
  bool retval.1245;
  bool retval.1244;
  bool retval.1243;
  bool iftmp.1242;
  bool retval.1241;
  bool retval.1240;
  bool retval.1239;

  <bb 2> :
  def_stmt = target->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 3> :
  _1 = gimple_code (def_stmt);
  retval.1239 = _1 == 8;
  if (retval.1239 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 4> :
  D.255703 = gimple_call_lhs (def_stmt);
  _2 = D.255703;
  retval.1240 = _2 != 0B;
  if (retval.1240 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 5> :
  D.255704 = gimple_call_lhs (def_stmt);
  _3 = D.255704;
  if (_3 != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  D.255705 = gimple_call_lhs (def_stmt);
  _4 = D.255705;
  _5 = _4->base.code;
  if (_5 == 153)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1242 = 1;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.1242 = 0;

  <bb 9> :
  retval.1241 = iftmp.1242;
  if (retval.1241 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 10> :
  D.255706 = gimple_assign_rhs1 (def_stmt);
  _6 = D.255706;
  retval.1243 = _6 != 0B;
  if (retval.1243 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 11> :
  D.255707 = gimple_call_num_args (def_stmt);
  _7 = D.255707;
  retval.1244 = _7 != 0;
  if (retval.1244 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 12> :
  i = 0;
  goto <bb 192>; [INV]

  <bb 13> :
  i.1247_8 = (unsigned int) i;
  D.255708 = gimple_call_arg (def_stmt, i.1247_8);
  _9 = D.255708;
  _10 = _9->base.code;
  if (_10 == 131)
    goto <bb 15>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  i.1248_11 = (unsigned int) i;
  D.255709 = gimple_call_arg (def_stmt, i.1248_11);
  _12 = D.255709;
  _13 = _12->base.code;
  if (_13 == 36)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  iftmp.1246 = 1;
  goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1246 = 0;

  <bb 17> :
  retval.1245 = iftmp.1246;
  if (retval.1245 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 188>; [INV]

  <bb 18> :
  i.1250_14 = (unsigned int) i;
  D.255710 = gimple_call_arg (def_stmt, i.1250_14);

  <bb 19> :
  _15 = D.255710;
  _16 = _15->base.code;
  retval.1249 = _16 == 131;
  if (retval.1249 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 20> :
  i.1251_17 = (unsigned int) i;
  D.255711 = gimple_call_arg (def_stmt, i.1251_17);

  <bb 21> :
  _18 = D.255711;
  second = _18->exp.operands[0];
  goto <bb 24>; [INV]

  <bb 22> :
  i.1252_19 = (unsigned int) i;
  D.255712 = gimple_call_arg (def_stmt, i.1252_19);

  <bb 23> :
  second = D.255712;

  <bb 24> :
  getFunctionAssignVAR = second;
  function_assign_array::function_assign_array (&assign_array);
  function_assign_collect.1254_20 = function_assign_collect;
  D.255713 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1254_20, &getFunctionAssignVAR);

  <bb 25> :
  _21 = D.255713;
  retval.1253 = _21 != 0B;
  if (retval.1253 != 0)
    goto <bb 26>; [INV]
  else
    goto <bb 187>; [INV]

  <bb 26> :
  getFunctionAssignVAR.1255_22 = getFunctionAssignVAR;
  D.196329 = ret_function_varstmt (getFunctionAssignVAR.1255_22); [return slot optimization]

  <bb 27> :
  function_assign_array::operator= (&assign_array, &D.196329);
  function_assign_array::~function_assign_array (&D.196329);
  D.196329 = {CLOBBER};
  i = 0;
  goto <bb 186>; [INV]

  <bb 28> :
  _23 = (long unsigned int) i;
  _24 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _23);
  _25 = _24->stmt;
  _26 = gimple_code (_25);
  retval.1256 = _26 == 6;
  if (retval.1256 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 168>; [INV]

  <bb 29> :
  _27 = (long unsigned int) i;
  _28 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _27);
  _29 = _28->stmt;
  D.255714 = gimple_assign_lhs (_29);

  <bb 30> :
  _30 = D.255714;
  _31 = _30->base.code;
  retval.1257 = _31 == 165;
  if (retval.1257 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 31> :
  _32 = (long unsigned int) i;
  _33 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _32);
  _34 = _33->stmt;
  D.255715 = gimple_assign_lhs (_34);

  <bb 32> :
  _35 = D.255715;
  D.255716 = check_stmtStack (_35);

  <bb 33> :
  _36 = D.255716;
  retval.1258 = _36 == 0;
  if (retval.1258 != 0)
    goto <bb 34>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 34> :
  _37 = (long unsigned int) i;
  _38 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _37);
  _39 = _38->form_tree;
  retval.1259 = _39 != 0B;
  if (retval.1259 != 0)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  _40 = (long unsigned int) i;
  _41 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _40);
  _42 = _41->form_tree;
  _43 = (long unsigned int) i;
  _44 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _43);
  _45 = _44->stmt;
  set_gimple_array (used_stmt, _45, _42, target, 0B);
  goto <bb 185>; [INV]

  <bb 36> :
  _46 = (long unsigned int) i;
  _47 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _46);
  _48 = _47->stmt;
  D.255717 = gimple_assign_lhs (_48);

  <bb 37> :
  _49 = D.255717;
  _50 = (long unsigned int) i;
  _51 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _50);
  _52 = _51->stmt;
  set_gimple_array (used_stmt, _52, _49, target, 0B);
  goto <bb 185>; [INV]

  <bb 38> :
  _53 = (long unsigned int) i;
  _54 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _53);
  _55 = _54->stmt;
  D.255718 = gimple_assign_lhs (_55);

  <bb 39> :
  _56 = D.255718;
  _57 = _56->base.code;
  retval.1260 = _57 == 153;
  if (retval.1260 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 40> :
  _58 = (long unsigned int) i;
  _59 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _58);
  _60 = _59->stmt;
  D.255719 = gimple_assign_lhs (_60);

  <bb 41> :
  _61 = D.255719;
  D.255720 = check_stmtStack (_61);

  <bb 42> :
  _62 = D.255720;
  retval.1261 = _62 == 0;
  if (retval.1261 != 0)
    goto <bb 43>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 43> :
  _63 = (long unsigned int) i;
  _64 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _63);
  _65 = _64->form_tree;
  retval.1262 = _65 != 0B;
  if (retval.1262 != 0)
    goto <bb 44>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 44> :
  _66 = (long unsigned int) i;
  _67 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _66);
  _68 = _67->form_tree;
  _69 = (long unsigned int) i;
  _70 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _69);
  _71 = _70->stmt;
  set_gimple_array (used_stmt, _71, _68, target, 0B);
  goto <bb 47>; [INV]

  <bb 45> :
  _72 = (long unsigned int) i;
  _73 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _72);
  _74 = _73->stmt;
  D.255721 = gimple_assign_lhs (_74);

  <bb 46> :
  _75 = D.255721;
  _76 = (long unsigned int) i;
  _77 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _76);
  _78 = _77->stmt;
  set_gimple_array (used_stmt, _78, _75, target, 0B);

  <bb 47> :
  _79 = (long unsigned int) i;
  _80 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _79);
  _81 = _80->stmt;
  D.255722 = check_stmtStack4 (_81);

  <bb 48> :
  _82 = D.255722;
  retval.1263 = _82 == 0;
  if (retval.1263 != 0)
    goto <bb 49>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 49> :
  _83 = (long unsigned int) i;
  _84 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _83);
  _85 = _84->stmt;
  D.255723 = gimple_assign_lhs (_85);

  <bb 50> :
  _86 = D.255723;
  if (target2 != _86)
    goto <bb 51>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 51> :
  _87 = (long unsigned int) i;
  _88 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _87);
  _89 = _88->stmt;
  D.255724 = check_stmtStack2 (_89);

  <bb 52> :
  _90 = D.255724;
  if (_90 == 0)
    goto <bb 53>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 53> :
  iftmp.1265 = 1;
  goto <bb 55>; [INV]

  <bb 54> :
  iftmp.1265 = 0;

  <bb 55> :
  retval.1264 = iftmp.1265;
  if (retval.1264 != 0)
    goto <bb 56>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 56> :
  _91 = (long unsigned int) i;
  _92 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _91);
  _93 = _92->stmt;
  D.255725 = gimple_assign_lhs (_93);

  <bb 57> :
  _94 = D.255725;
  _95 = (long unsigned int) i;
  _96 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _95);
  _97 = _96->stmt;
  D.255726 = gimple_assign_lhs (_97);

  <bb 58> :
  _98 = D.255726;
  new_search_imm_use (used_stmt, _98, _94);

  <bb 59> :
  _99 = (long unsigned int) i;
  _100 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _99);
  _101 = _100->stmt;
  D.255727 = gimple_assign_rhs1 (_101);

  <bb 60> :
  _102 = D.255727;
  if (_102 != 0B)
    goto <bb 61>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 61> :
  _103 = (long unsigned int) i;
  _104 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _103);
  _105 = _104->stmt;
  D.255728 = gimple_assign_rhs1 (_105);

  <bb 62> :
  _106 = D.255728;
  _107 = _106->base.code;
  if (_107 == 47)
    goto <bb 63>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 63> :
  iftmp.1267 = 1;
  goto <bb 65>; [INV]

  <bb 64> :
  iftmp.1267 = 0;

  <bb 65> :
  retval.1266 = iftmp.1267;
  if (retval.1266 != 0)
    goto <bb 66>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 66> :
  _108 = (long unsigned int) i;
  _109 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _108);
  _110 = _109->stmt;
  D.255729 = gimple_assign_rhs1 (_110);

  <bb 67> :
  _111 = D.255729;
  D.255730 = check_stmtStack (_111);

  <bb 68> :
  _112 = D.255730;
  retval.1268 = _112 == 0;
  if (retval.1268 != 0)
    goto <bb 69>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 69> :
  _113 = (long unsigned int) i;
  _114 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _113);
  _115 = _114->stmt;
  D.255731 = gimple_assign_rhs1 (_115);

  <bb 70> :
  _116 = D.255731;
  second = _116->exp.operands[0];
  if (second != 0B)
    goto <bb 71>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 71> :
  _117 = second->base.code;
  if (_117 == 165)
    goto <bb 72>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 72> :
  three = second->exp.operands[0];
  if (three != 0B)
    goto <bb 73>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 73> :
  _118 = three->base.code;
  if (_118 == 153)
    goto <bb 74>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 74> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1269 = is_gimple_assign (def_stmt);
  if (retval.1269 != 0)
    goto <bb 75>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 75> :
  D.255732 = gimple_assign_lhs (def_stmt);

  <bb 76> :
  _119 = D.255732;
  _120 = _119->base.code;
  retval.1270 = _120 == 153;
  if (retval.1270 != 0)
    goto <bb 77>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 77> :
  D.255733 = gimple_assign_lhs (def_stmt);

  <bb 78> :
  _121 = D.255733;
  retval.1271 = target2 != _121;
  if (retval.1271 != 0)
    goto <bb 79>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 79> :
  D.255734 = gimple_assign_lhs (def_stmt);

  <bb 80> :
  _122 = D.255734;
  D.255735 = gimple_assign_lhs (def_stmt);

  <bb 81> :
  _123 = D.255735;
  new_search_imm_use (used_stmt, _123, _122);
  goto <bb 185>; [INV]

  <bb 82> :
  _124 = (long unsigned int) i;
  _125 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _124);
  _126 = _125->stmt;
  D.255736 = gimple_assign_rhs1 (_126);

  <bb 83> :
  _127 = D.255736;
  if (_127 != 0B)
    goto <bb 84>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 84> :
  _128 = (long unsigned int) i;
  _129 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _128);
  _130 = _129->stmt;
  D.255737 = gimple_assign_rhs1 (_130);

  <bb 85> :
  _131 = D.255737;
  _132 = _131->base.code;
  if (_132 == 165)
    goto <bb 86>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 86> :
  iftmp.1273 = 1;
  goto <bb 88>; [INV]

  <bb 87> :
  iftmp.1273 = 0;

  <bb 88> :
  retval.1272 = iftmp.1273;
  if (retval.1272 != 0)
    goto <bb 89>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 89> :
  _133 = (long unsigned int) i;
  _134 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _133);
  _135 = _134->stmt;
  D.255738 = gimple_assign_rhs1 (_135);

  <bb 90> :
  _136 = D.255738;
  D.255739 = check_stmtStack (_136);

  <bb 91> :
  _137 = D.255739;
  retval.1274 = _137 == 0;
  if (retval.1274 != 0)
    goto <bb 92>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 92> :
  _138 = (long unsigned int) i;
  _139 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _138);
  _140 = _139->stmt;
  D.255740 = gimple_assign_rhs1 (_140);

  <bb 93> :
  _141 = D.255740;
  second = _141->exp.operands[0];
  _142 = second->base.code;
  if (_142 == 165)
    goto <bb 94>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 94> :
  def_stmt = second->ssa_name.def_stmt;
  retval.1275 = is_gimple_assign (def_stmt);
  if (retval.1275 != 0)
    goto <bb 95>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 95> :
  D.255741 = gimple_assign_lhs (def_stmt);

  <bb 96> :
  _143 = D.255741;
  _144 = _143->base.code;
  retval.1276 = _144 == 153;
  if (retval.1276 != 0)
    goto <bb 97>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 97> :
  D.255742 = gimple_assign_lhs (def_stmt);

  <bb 98> :
  _145 = D.255742;
  retval.1277 = target2 != _145;
  if (retval.1277 != 0)
    goto <bb 99>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 99> :
  D.255743 = gimple_assign_lhs (def_stmt);

  <bb 100> :
  _146 = D.255743;
  D.255744 = gimple_assign_lhs (def_stmt);

  <bb 101> :
  _147 = D.255744;
  new_search_imm_use (used_stmt, _147, _146);
  goto <bb 185>; [INV]

  <bb 102> :
  _148 = (long unsigned int) i;
  _149 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _148);
  _150 = _149->stmt;
  D.255745 = gimple_assign_rhs1 (_150);

  <bb 103> :
  _151 = D.255745;
  _152 = _151->base.code;
  retval.1278 = _152 == 153;
  if (retval.1278 != 0)
    goto <bb 104>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 104> :
  _153 = (long unsigned int) i;
  _154 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _153);
  _155 = _154->stmt;
  D.255746 = gimple_assign_rhs1 (_155);

  <bb 105> :
  _156 = D.255746;
  D.255747 = check_stmtStack (_156);

  <bb 106> :
  _157 = D.255747;
  retval.1279 = _157 == 0;
  if (retval.1279 != 0)
    goto <bb 107>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 107> :
  _158 = (long unsigned int) i;
  _159 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _158);
  _160 = _159->form_tree;
  retval.1280 = _160 != 0B;
  if (retval.1280 != 0)
    goto <bb 108>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 108> :
  _161 = (long unsigned int) i;
  _162 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _161);
  _163 = _162->form_tree;
  _164 = (long unsigned int) i;
  _165 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _164);
  _166 = _165->stmt;
  set_gimple_array (used_stmt, _166, _163, target, 0B);
  goto <bb 111>; [INV]

  <bb 109> :
  _167 = (long unsigned int) i;
  _168 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _167);
  _169 = _168->stmt;
  D.255748 = gimple_assign_rhs1 (_169);

  <bb 110> :
  _170 = D.255748;
  _171 = (long unsigned int) i;
  _172 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _171);
  _173 = _172->stmt;
  set_gimple_array (used_stmt, _173, _170, target, 0B);

  <bb 111> :
  _174 = (long unsigned int) i;
  _175 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _174);
  _176 = _175->stmt;
  D.255749 = gimple_assign_rhs1 (_176);

  <bb 112> :
  _177 = D.255749;
  retval.1281 = target2 != _177;
  if (retval.1281 != 0)
    goto <bb 113>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 113> :
  _178 = (long unsigned int) i;
  _179 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _178);
  _180 = _179->stmt;
  D.255750 = check_stmtStack4 (_180);

  <bb 114> :
  _181 = D.255750;
  retval.1282 = _181 == 0;
  if (retval.1282 != 0)
    goto <bb 115>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 115> :
  _182 = (long unsigned int) i;
  _183 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _182);
  _184 = _183->stmt;
  D.255751 = gimple_assign_rhs1 (_184);

  <bb 116> :
  _185 = D.255751;
  if (target2 != _185)
    goto <bb 117>; [INV]
  else
    goto <bb 120>; [INV]

  <bb 117> :
  _186 = (long unsigned int) i;
  _187 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _186);
  _188 = _187->stmt;
  D.255752 = check_stmtStack2 (_188);

  <bb 118> :
  _189 = D.255752;
  if (_189 == 0)
    goto <bb 119>; [INV]
  else
    goto <bb 120>; [INV]

  <bb 119> :
  iftmp.1284 = 1;
  goto <bb 121>; [INV]

  <bb 120> :
  iftmp.1284 = 0;

  <bb 121> :
  retval.1283 = iftmp.1284;
  if (retval.1283 != 0)
    goto <bb 122>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 122> :
  _190 = (long unsigned int) i;
  _191 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _190);
  _192 = _191->stmt;
  D.255753 = gimple_assign_rhs1 (_192);

  <bb 123> :
  _193 = D.255753;
  _194 = (long unsigned int) i;
  _195 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _194);
  _196 = _195->stmt;
  D.255754 = gimple_assign_rhs1 (_196);

  <bb 124> :
  _197 = D.255754;
  new_search_imm_use (used_stmt, _197, _193);

  <bb 125> :
  _198 = (long unsigned int) i;
  _199 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _198);
  _200 = _199->stmt;
  D.255755 = gimple_assign_lhs (_200);

  <bb 126> :
  _201 = D.255755;
  if (_201 != 0B)
    goto <bb 127>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 127> :
  _202 = (long unsigned int) i;
  _203 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _202);
  _204 = _203->stmt;
  D.255756 = gimple_assign_lhs (_204);

  <bb 128> :
  _205 = D.255756;
  _206 = _205->base.code;
  if (_206 == 47)
    goto <bb 129>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 129> :
  iftmp.1286 = 1;
  goto <bb 131>; [INV]

  <bb 130> :
  iftmp.1286 = 0;

  <bb 131> :
  retval.1285 = iftmp.1286;
  if (retval.1285 != 0)
    goto <bb 132>; [INV]
  else
    goto <bb 148>; [INV]

  <bb 132> :
  _207 = (long unsigned int) i;
  _208 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _207);
  _209 = _208->stmt;
  D.255757 = gimple_assign_lhs (_209);

  <bb 133> :
  _210 = D.255757;
  D.255758 = check_stmtStack (_210);

  <bb 134> :
  _211 = D.255758;
  retval.1287 = _211 == 0;
  if (retval.1287 != 0)
    goto <bb 135>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 135> :
  _212 = (long unsigned int) i;
  _213 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _212);
  _214 = _213->stmt;
  D.255759 = gimple_assign_lhs (_214);

  <bb 136> :
  _215 = D.255759;
  second = _215->exp.operands[0];
  if (second != 0B)
    goto <bb 137>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 137> :
  _216 = second->base.code;
  if (_216 == 165)
    goto <bb 138>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 138> :
  three = second->exp.operands[0];
  if (three != 0B)
    goto <bb 139>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 139> :
  _217 = three->base.code;
  if (_217 == 153)
    goto <bb 140>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 140> :
  def_stmt = three->ssa_name.def_stmt;
  retval.1288 = is_gimple_assign (def_stmt);
  if (retval.1288 != 0)
    goto <bb 141>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 141> :
  D.255760 = gimple_assign_lhs (def_stmt);

  <bb 142> :
  _218 = D.255760;
  _219 = _218->base.code;
  retval.1289 = _219 == 153;
  if (retval.1289 != 0)
    goto <bb 143>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 143> :
  D.255761 = gimple_assign_lhs (def_stmt);

  <bb 144> :
  _220 = D.255761;
  retval.1290 = target2 != _220;
  if (retval.1290 != 0)
    goto <bb 145>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 145> :
  D.255762 = gimple_assign_lhs (def_stmt);

  <bb 146> :
  _221 = D.255762;
  D.255763 = gimple_assign_lhs (def_stmt);

  <bb 147> :
  _222 = D.255763;
  new_search_imm_use (used_stmt, _222, _221);
  goto <bb 185>; [INV]

  <bb 148> :
  _223 = (long unsigned int) i;
  _224 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _223);
  _225 = _224->stmt;
  D.255764 = gimple_assign_lhs (_225);

  <bb 149> :
  _226 = D.255764;
  if (_226 != 0B)
    goto <bb 150>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 150> :
  _227 = (long unsigned int) i;
  _228 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _227);
  _229 = _228->stmt;
  D.255765 = gimple_assign_lhs (_229);

  <bb 151> :
  _230 = D.255765;
  _231 = _230->base.code;
  if (_231 == 165)
    goto <bb 152>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 152> :
  iftmp.1292 = 1;
  goto <bb 154>; [INV]

  <bb 153> :
  iftmp.1292 = 0;

  <bb 154> :
  retval.1291 = iftmp.1292;
  if (retval.1291 != 0)
    goto <bb 155>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 155> :
  _232 = (long unsigned int) i;
  _233 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _232);
  _234 = _233->stmt;
  D.255766 = gimple_assign_lhs (_234);

  <bb 156> :
  _235 = D.255766;
  D.255767 = check_stmtStack (_235);

  <bb 157> :
  _236 = D.255767;
  retval.1293 = _236 == 0;
  if (retval.1293 != 0)
    goto <bb 158>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 158> :
  _237 = (long unsigned int) i;
  _238 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _237);
  _239 = _238->stmt;
  D.255768 = gimple_assign_lhs (_239);

  <bb 159> :
  _240 = D.255768;
  second = _240->exp.operands[0];
  _241 = second->base.code;
  if (_241 == 165)
    goto <bb 160>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 160> :
  def_stmt = second->ssa_name.def_stmt;
  retval.1294 = is_gimple_assign (def_stmt);
  if (retval.1294 != 0)
    goto <bb 161>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 161> :
  D.255769 = gimple_assign_lhs (def_stmt);

  <bb 162> :
  _242 = D.255769;
  _243 = _242->base.code;
  retval.1295 = _243 == 153;
  if (retval.1295 != 0)
    goto <bb 163>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 163> :
  D.255770 = gimple_assign_lhs (def_stmt);

  <bb 164> :
  _244 = D.255770;
  retval.1296 = target2 != _244;
  if (retval.1296 != 0)
    goto <bb 165>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 165> :
  D.255771 = gimple_assign_lhs (def_stmt);

  <bb 166> :
  _245 = D.255771;
  D.255772 = gimple_assign_lhs (def_stmt);

  <bb 167> :
  _246 = D.255772;
  new_search_imm_use (used_stmt, _246, _245);
  goto <bb 185>; [INV]

  <bb 168> :
  _247 = (long unsigned int) i;
  _248 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _247);
  _249 = _248->stmt;
  _250 = gimple_code (_249);
  retval.1297 = _250 == 8;
  if (retval.1297 != 0)
    goto <bb 169>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 169> :
  _251 = (long unsigned int) i;
  _252 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _251);
  _253 = _252->stmt;
  D.255773 = gimple_call_arg (_253, 0);

  <bb 170> :
  _254 = D.255773;
  _255 = _254->base.code;
  retval.1298 = _255 == 131;
  if (retval.1298 != 0)
    goto <bb 171>; [INV]
  else
    goto <bb 176>; [INV]

  <bb 171> :
  _256 = (long unsigned int) i;
  _257 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _256);
  _258 = _257->stmt;
  D.255774 = gimple_call_arg (_258, 0);

  <bb 172> :
  _259 = D.255774;
  D.255775 = check_stmtStack (_259);

  <bb 173> :
  _260 = D.255775;
  retval.1299 = _260 == 0;
  if (retval.1299 != 0)
    goto <bb 174>; [INV]
  else
    goto <bb 176>; [INV]

  <bb 174> :
  _261 = (long unsigned int) i;
  _262 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _261);
  _263 = _262->stmt;
  D.255776 = gimple_call_arg (_263, 0);

  <bb 175> :
  _264 = D.255776;
  _265 = (long unsigned int) i;
  _266 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _265);
  _267 = _266->stmt;
  set_gimple_array (used_stmt, _267, _264, target, 0B);

  <bb 176> :
  _268 = (long unsigned int) i;
  _269 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _268);
  _270 = _269->stmt;
  D.255777 = gimple_call_arg (_270, 0);

  <bb 177> :
  _271 = D.255777;
  D.255778 = check_stmtStack (_271);

  <bb 178> :
  _272 = D.255778;
  retval.1300 = _272 == 0;
  if (retval.1300 != 0)
    goto <bb 179>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 179> :
  _273 = (long unsigned int) i;
  _274 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _273);
  _275 = _274->stmt;
  D.255779 = gimple_call_arg (_275, 0);

  <bb 180> :
  _276 = D.255779;
  _277 = _276->base.code;
  retval.1301 = _277 == 153;
  if (retval.1301 != 0)
    goto <bb 181>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 181> :
  _278 = (long unsigned int) i;
  _279 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _278);
  _280 = _279->form_tree;
  retval.1302 = _280 != 0B;
  if (retval.1302 != 0)
    goto <bb 182>; [INV]
  else
    goto <bb 183>; [INV]

  <bb 182> :
  _281 = (long unsigned int) i;
  _282 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _281);
  _283 = _282->form_tree;
  _284 = (long unsigned int) i;
  _285 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _284);
  _286 = _285->stmt;
  set_gimple_array (used_stmt, _286, _283, target, 0B);
  goto <bb 185>; [INV]

  <bb 183> :
  _287 = (long unsigned int) i;
  _288 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _287);
  _289 = _288->stmt;
  D.255780 = gimple_call_arg (_289, 0);

  <bb 184> :
  _290 = D.255780;
  _291 = (long unsigned int) i;
  _292 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _291);
  _293 = _292->stmt;
  set_gimple_array (used_stmt, _293, _290, target, 0B);

  <bb 185> :
  i = i + 1;

  <bb 186> :
  _294 = (long unsigned int) i;
  _295 = std::vector<assign_type>::size (&assign_array.assign_type_array);
  retval.1303 = _294 < _295;
  if (retval.1303 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 187>; [INV]

  <bb 187> :
  function_assign_array::~function_assign_array (&assign_array);
  getFunctionAssignVAR = {CLOBBER};
  assign_array = {CLOBBER};
  goto <bb 191>; [INV]

  <bb 188> :
  i.1305_296 = (unsigned int) i;
  D.255783 = gimple_call_arg (def_stmt, i.1305_296);
  _297 = D.255783;
  _298 = _297->base.code;
  retval.1304 = _298 == 153;
  if (retval.1304 != 0)
    goto <bb 189>; [INV]
  else
    goto <bb 191>; [INV]

  <bb 189> :
  i.1307_299 = (unsigned int) i;
  D.255784 = gimple_call_arg (def_stmt, i.1307_299);
  _300 = D.255784;
  D.255785 = check_stmtStack (_300);
  _301 = D.255785;
  retval.1306 = _301 == 0;
  if (retval.1306 != 0)
    goto <bb 190>; [INV]
  else
    goto <bb 191>; [INV]

  <bb 190> :
  i.1308_302 = (unsigned int) i;
  D.255786 = gimple_call_arg (def_stmt, i.1308_302);
  _303 = D.255786;
  i.1309_304 = (unsigned int) i;
  D.255787 = gimple_call_arg (def_stmt, i.1309_304);
  _305 = D.255787;
  new_search_imm_use (used_stmt, _305, _303);

  <bb 191> :
  i = i + 1;

  <bb 192> :
  D.255788 = gimple_call_num_args (def_stmt);
  _306 = D.255788;
  i.1311_307 = (unsigned int) i;
  retval.1310 = _306 > i.1311_307;
  if (retval.1310 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 193> :
  return;

  <bb 194> :
<L224>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 2

  <bb 195> :
<L225>:
  getFunctionAssignVAR = {CLOBBER};
  assign_array = {CLOBBER};
  resx 1

}



;; Function new_search_imm_use (_Z18new_search_imm_useP12gimple_arrayP9tree_nodeS2_, funcdef_no=6420, decl_uid=187050, cgraph_uid=3396, symbol_order=4174)

Removing basic block 11
Removing basic block 12
Removing basic block 16
Removing basic block 39
Removing basic block 40
Removing basic block 41
Removing basic block 42
Removing basic block 43
Removing basic block 49
Removing basic block 50
Removing basic block 76
Removing basic block 78
Removing basic block 90
Removing basic block 92
Removing basic block 93
Removing basic block 94
Removing basic block 106
Removing basic block 108
Removing basic block 110
Removing basic block 119
Removing basic block 121
Removing basic block 123
Removing basic block 127
Removing basic block 134
Removing basic block 141
Removing basic block 142
Removing basic block 143
Removing basic block 153
Removing basic block 154
Removing basic block 155
Removing basic block 170
Removing basic block 171
Removing basic block 172
Removing basic block 173
Removing basic block 200
Removing basic block 201
Removing basic block 202
Removing basic block 203
Removing basic block 204
Removing basic block 225
Removing basic block 226
Removing basic block 239
Removing basic block 240
Removing basic block 241
Removing basic block 242
Removing basic block 262
Removing basic block 263
Removing basic block 264
Removing basic block 268
Removing basic block 269
Removing basic block 270
Removing basic block 271
Removing basic block 284
Removing basic block 285
Removing basic block 295
Removing basic block 323
Removing basic block 329
Removing basic block 330
Removing basic block 343
Removing basic block 349
Removing basic block 350
Removing basic block 351
Removing basic block 360
Removing basic block 361
Removing basic block 362
Removing basic block 365
Removing basic block 367
Removing basic block 377
Removing basic block 378
Removing basic block 401
Removing basic block 402
Removing basic block 425
Removing basic block 426
Removing basic block 427
Removing basic block 428
Removing basic block 429
Removing basic block 433
Removing basic block 434
Removing basic block 435
Removing basic block 436
Removing basic block 437
Removing basic block 448
Removing basic block 449
Removing basic block 464
Removing basic block 470
Removing basic block 474
Removing basic block 475
Removing basic block 476
Removing basic block 477
Removing basic block 478
Removing basic block 480
Removing basic block 481
Removing basic block 485
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 3
;;  header 218, latch 217
;;  depth 1, outer 0
;;  nodes: 218 217 209 216 211 213 212 210 215 214 208 219
;;
;; Loop 2
;;  header 355, latch 354
;;  depth 1, outer 0
;;  nodes: 355 354 341 353 343 348 350 345 344 349 347 346 342 352 351 340 356
;;
;; Loop 1
;;  header 299, latch 298
;;  depth 1, outer 0
;;  nodes: 299 298 279 290 297 272 282 265 289 292 295 294 293 291 288 287 284 286 285 283 264 263 262 260 261 257 259 258 256 255 281 280 271 270 267 269 268 266 296 277 278 274 276 275 273
;; 2 succs { 4 3 }
;; 3 succs { 4 393 }
;; 4 succs { 5 7 }
;; 5 succs { 398 6 }
;; 6 succs { 238 }
;; 7 succs { 8 11 }
;; 8 succs { 9 11 }
;; 9 succs { 10 11 }
;; 10 succs { 22 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 394 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 393 }
;; 19 succs { 392 }
;; 20 succs { 398 21 }
;; 21 succs { 22 390 }
;; 22 succs { 398 23 }
;; 23 succs { 24 36 }
;; 24 succs { 25 36 }
;; 25 succs { 398 26 }
;; 26 succs { 27 36 }
;; 27 succs { 398 28 }
;; 28 succs { 29 31 }
;; 29 succs { 30 31 }
;; 30 succs { 32 }
;; 31 succs { 32 }
;; 32 succs { 33 36 }
;; 33 succs { 398 34 }
;; 34 succs { 35 36 }
;; 35 succs { 398 36 }
;; 36 succs { 37 41 }
;; 37 succs { 398 38 }
;; 38 succs { 398 39 }
;; 39 succs { 40 390 }
;; 40 succs { 398 390 }
;; 41 succs { 42 141 }
;; 42 succs { 398 43 }
;; 43 succs { 398 44 }
;; 44 succs { 398 45 }
;; 45 succs { 398 46 }
;; 46 succs { 47 93 }
;; 47 succs { 48 93 }
;; 48 succs { 398 49 }
;; 49 succs { 50 79 }
;; 50 succs { 398 51 }
;; 51 succs { 52 56 }
;; 52 succs { 398 53 }
;; 53 succs { 398 54 }
;; 54 succs { 55 56 }
;; 55 succs { 57 }
;; 56 succs { 57 }
;; 57 succs { 58 67 }
;; 58 succs { 398 59 }
;; 59 succs { 60 63 }
;; 60 succs { 398 61 }
;; 61 succs { 62 63 }
;; 62 succs { 64 }
;; 63 succs { 64 }
;; 64 succs { 65 66 }
;; 65 succs { 398 66 }
;; 66 succs { 398 79 }
;; 67 succs { 68 79 }
;; 68 succs { 69 79 }
;; 69 succs { 398 70 }
;; 70 succs { 71 79 }
;; 71 succs { 72 75 }
;; 72 succs { 398 73 }
;; 73 succs { 74 75 }
;; 74 succs { 76 }
;; 75 succs { 76 }
;; 76 succs { 77 78 }
;; 77 succs { 398 78 }
;; 78 succs { 398 79 }
;; 79 succs { 80 92 }
;; 80 succs { 81 92 }
;; 81 succs { 398 82 }
;; 82 succs { 83 91 }
;; 83 succs { 84 87 }
;; 84 succs { 398 85 }
;; 85 succs { 86 87 }
;; 86 succs { 88 }
;; 87 succs { 88 }
;; 88 succs { 89 90 }
;; 89 succs { 398 90 }
;; 90 succs { 398 91 }
;; 91 succs { 398 92 }
;; 92 succs { 102 }
;; 93 succs { 94 102 }
;; 94 succs { 95 102 }
;; 95 succs { 398 96 }
;; 96 succs { 97 101 }
;; 97 succs { 398 98 }
;; 98 succs { 99 100 }
;; 99 succs { 398 100 }
;; 100 succs { 398 101 }
;; 101 succs { 398 102 }
;; 102 succs { 398 103 }
;; 103 succs { 104 105 }
;; 104 succs { 398 105 }
;; 105 succs { 398 106 }
;; 106 succs { 107 118 }
;; 107 succs { 108 118 }
;; 108 succs { 398 109 }
;; 109 succs { 110 111 }
;; 110 succs { 398 111 }
;; 111 succs { 112 117 }
;; 112 succs { 398 113 }
;; 113 succs { 114 117 }
;; 114 succs { 398 115 }
;; 115 succs { 116 117 }
;; 116 succs { 398 117 }
;; 117 succs { 140 }
;; 118 succs { 119 127 }
;; 119 succs { 120 127 }
;; 120 succs { 121 126 }
;; 121 succs { 398 122 }
;; 122 succs { 123 126 }
;; 123 succs { 398 124 }
;; 124 succs { 125 126 }
;; 125 succs { 398 126 }
;; 126 succs { 140 }
;; 127 succs { 128 140 }
;; 128 succs { 129 140 }
;; 129 succs { 130 140 }
;; 130 succs { 398 131 }
;; 131 succs { 134 132 }
;; 132 succs { 398 133 }
;; 133 succs { 134 135 }
;; 134 succs { 136 }
;; 135 succs { 136 }
;; 136 succs { 137 140 }
;; 137 succs { 398 138 }
;; 138 succs { 139 140 }
;; 139 succs { 398 140 }
;; 140 succs { 390 }
;; 141 succs { 142 166 }
;; 142 succs { 398 143 }
;; 143 succs { 144 147 }
;; 144 succs { 398 145 }
;; 145 succs { 146 147 }
;; 146 succs { 148 }
;; 147 succs { 148 }
;; 148 succs { 149 390 }
;; 149 succs { 398 150 }
;; 150 succs { 151 390 }
;; 151 succs { 398 152 }
;; 152 succs { 398 153 }
;; 153 succs { 154 157 }
;; 154 succs { 398 155 }
;; 155 succs { 156 157 }
;; 156 succs { 158 }
;; 157 succs { 158 }
;; 158 succs { 159 390 }
;; 159 succs { 398 160 }
;; 160 succs { 398 161 }
;; 161 succs { 398 162 }
;; 162 succs { 163 390 }
;; 163 succs { 398 164 }
;; 164 succs { 398 165 }
;; 165 succs { 398 390 }
;; 166 succs { 167 390 }
;; 167 succs { 398 168 }
;; 168 succs { 169 170 }
;; 169 succs { 394 }
;; 170 succs { 398 171 }
;; 171 succs { 398 172 }
;; 172 succs { 173 390 }
;; 173 succs { 174 220 }
;; 174 succs { 398 175 }
;; 175 succs { 176 198 }
;; 176 succs { 398 177 }
;; 177 succs { 398 178 }
;; 178 succs { 179 186 }
;; 179 succs { 398 180 }
;; 180 succs { 398 181 }
;; 181 succs { 398 182 }
;; 182 succs { 183 389 }
;; 183 succs { 398 184 }
;; 184 succs { 398 185 }
;; 185 succs { 398 389 }
;; 186 succs { 398 187 }
;; 187 succs { 188 389 }
;; 188 succs { 398 189 }
;; 189 succs { 398 190 }
;; 190 succs { 191 389 }
;; 191 succs { 398 192 }
;; 192 succs { 398 193 }
;; 193 succs { 398 194 }
;; 194 succs { 195 389 }
;; 195 succs { 398 196 }
;; 196 succs { 398 197 }
;; 197 succs { 398 389 }
;; 198 succs { 398 199 }
;; 199 succs { 200 389 }
;; 200 succs { 398 201 }
;; 201 succs { 398 202 }
;; 202 succs { 203 389 }
;; 203 succs { 398 204 }
;; 204 succs { 398 205 }
;; 205 succs { 398 206 }
;; 206 succs { 207 389 }
;; 207 succs { 218 }
;; 208 succs { 398 209 }
;; 209 succs { 210 217 }
;; 210 succs { 398 211 }
;; 211 succs { 212 217 }
;; 212 succs { 398 213 }
;; 213 succs { 214 217 }
;; 214 succs { 398 215 }
;; 215 succs { 398 216 }
;; 216 succs { 398 217 }
;; 217 succs { 218 }
;; 218 succs { 398 219 }
;; 219 succs { 208 389 }
;; 220 succs { 222 221 }
;; 221 succs { 222 233 }
;; 222 succs { 398 223 }
;; 223 succs { 398 224 }
;; 224 succs { 225 232 }
;; 225 succs { 398 226 }
;; 226 succs { 398 227 }
;; 227 succs { 398 228 }
;; 228 succs { 229 232 }
;; 229 succs { 398 230 }
;; 230 succs { 398 231 }
;; 231 succs { 398 232 }
;; 232 succs { 389 }
;; 233 succs { 235 234 }
;; 234 succs { 235 311 }
;; 235 succs { 398 236 }
;; 236 succs { 398 237 }
;; 237 succs { 238 310 }
;; 238 succs { 239 241 }
;; 239 succs { 240 241 }
;; 240 succs { 241 }
;; 241 succs { 398 242 }
;; 242 succs { 243 245 }
;; 243 succs { 398 244 }
;; 244 succs { 249 }
;; 245 succs { 398 246 }
;; 246 succs { 247 249 }
;; 247 succs { 398 248 }
;; 248 succs { 249 }
;; 249 succs { 250 301 }
;; 250 succs { 251 301 }
;; 251 succs { 396 252 }
;; 252 succs { 253 300 }
;; 253 succs { 396 254 }
;; 254 succs { 299 }
;; 255 succs { 256 290 }
;; 256 succs { 396 257 }
;; 257 succs { 258 261 }
;; 258 succs { 396 259 }
;; 259 succs { 260 261 }
;; 260 succs { 262 }
;; 261 succs { 262 }
;; 262 succs { 263 273 }
;; 263 succs { 396 264 }
;; 264 succs { 396 265 }
;; 265 succs { 266 298 }
;; 266 succs { 267 268 }
;; 267 succs { 396 270 }
;; 268 succs { 396 269 }
;; 269 succs { 396 270 }
;; 270 succs { 396 271 }
;; 271 succs { 396 272 }
;; 272 succs { 396 298 }
;; 273 succs { 396 274 }
;; 274 succs { 275 278 }
;; 275 succs { 396 276 }
;; 276 succs { 277 278 }
;; 277 succs { 279 }
;; 278 succs { 279 }
;; 279 succs { 280 298 }
;; 280 succs { 396 281 }
;; 281 succs { 396 282 }
;; 282 succs { 283 298 }
;; 283 succs { 284 285 }
;; 284 succs { 396 287 }
;; 285 succs { 396 286 }
;; 286 succs { 396 287 }
;; 287 succs { 396 288 }
;; 288 succs { 396 289 }
;; 289 succs { 396 298 }
;; 290 succs { 291 298 }
;; 291 succs { 396 292 }
;; 292 succs { 293 298 }
;; 293 succs { 396 294 }
;; 294 succs { 396 295 }
;; 295 succs { 296 298 }
;; 296 succs { 396 297 }
;; 297 succs { 396 298 }
;; 298 succs { 299 }
;; 299 succs { 255 300 }
;; 300 succs { 301 }
;; 301 succs { 302 303 }
;; 302 succs { 394 }
;; 303 succs { 398 304 }
;; 304 succs { 398 305 }
;; 305 succs { 398 306 }
;; 306 succs { 307 310 }
;; 307 succs { 398 308 }
;; 308 succs { 398 309 }
;; 309 succs { 398 310 }
;; 310 succs { 389 }
;; 311 succs { 398 312 }
;; 312 succs { 313 318 }
;; 313 succs { 398 314 }
;; 314 succs { 315 318 }
;; 315 succs { 398 316 }
;; 316 succs { 317 318 }
;; 317 succs { 319 }
;; 318 succs { 319 }
;; 319 succs { 320 357 }
;; 320 succs { 398 321 }
;; 321 succs { 398 322 }
;; 322 succs { 323 389 }
;; 323 succs { 398 324 }
;; 324 succs { 398 325 }
;; 325 succs { 398 326 }
;; 326 succs { 327 332 }
;; 327 succs { 398 328 }
;; 328 succs { 329 332 }
;; 329 succs { 398 330 }
;; 330 succs { 398 331 }
;; 331 succs { 398 332 }
;; 332 succs { 398 333 }
;; 333 succs { 334 389 }
;; 334 succs { 398 335 }
;; 335 succs { 398 336 }
;; 336 succs { 337 389 }
;; 337 succs { 398 338 }
;; 338 succs { 339 389 }
;; 339 succs { 355 }
;; 340 succs { 398 341 }
;; 341 succs { 342 354 }
;; 342 succs { 398 343 }
;; 343 succs { 344 354 }
;; 344 succs { 398 345 }
;; 345 succs { 346 354 }
;; 346 succs { 398 347 }
;; 347 succs { 398 348 }
;; 348 succs { 349 354 }
;; 349 succs { 398 350 }
;; 350 succs { 351 354 }
;; 351 succs { 398 352 }
;; 352 succs { 398 353 }
;; 353 succs { 398 354 }
;; 354 succs { 355 }
;; 355 succs { 398 356 }
;; 356 succs { 340 389 }
;; 357 succs { 398 358 }
;; 358 succs { 398 359 }
;; 359 succs { 360 367 }
;; 360 succs { 398 361 }
;; 361 succs { 398 362 }
;; 362 succs { 398 363 }
;; 363 succs { 364 367 }
;; 364 succs { 398 365 }
;; 365 succs { 398 366 }
;; 366 succs { 398 367 }
;; 367 succs { 398 368 }
;; 368 succs { 369 389 }
;; 369 succs { 398 370 }
;; 370 succs { 398 371 }
;; 371 succs { 372 389 }
;; 372 succs { 398 373 }
;; 373 succs { 374 389 }
;; 374 succs { 398 375 }
;; 375 succs { 398 376 }
;; 376 succs { 398 377 }
;; 377 succs { 378 381 }
;; 378 succs { 398 379 }
;; 379 succs { 398 380 }
;; 380 succs { 398 381 }
;; 381 succs { 398 382 }
;; 382 succs { 383 389 }
;; 383 succs { 398 384 }
;; 384 succs { 385 386 }
;; 385 succs { 398 389 }
;; 386 succs { 398 387 }
;; 387 succs { 388 389 }
;; 388 succs { 398 389 }
;; 389 succs { 390 }
;; 390 succs { 398 391 }
;; 391 succs { 392 }
;; 392 succs { 20 393 }
;; 393 succs { 395 }
;; 394 succs { 395 }
;; 395 succs { 1 }
;; 396 succs { 397 }
;; 397 succs { 398 }
;; 398 succs { }
void new_search_imm_use (struct gimple_array * used_stmt, union tree_node * target, union tree_node * target2)
{
  struct ssa_use_operand_t * D.256416;
  union tree_node * D.256415;
  union tree_node * D.256414;
  union tree_node * D.256413;
  union tree_node * D.256412;
  union tree_node * D.256411;
  union tree_node * D.256410;
  union tree_node * D.256409;
  union tree_node * D.256408;
  int D.256407;
  union tree_node * D.256406;
  union tree_node * D.256405;
  union tree_node * D.256404;
  union tree_node * D.256403;
  union tree_node * D.256402;
  union tree_node * D.256401;
  int D.256400;
  union tree_node * D.256399;
  unsigned int D.256398;
  union tree_node * D.256397;
  union tree_node * D.256396;
  union tree_node * D.256395;
  int D.256394;
  union tree_node * D.256393;
  union tree_node * D.256392;
  union tree_node * D.256391;
  union tree_node * D.256390;
  unsigned int D.256389;
  int D.256388;
  union tree_node * D.256387;
  union tree_node * D.256386;
  union tree_node * D.256385;
  union tree_node * D.256384;
  int D.256383;
  union tree_node * D.256382;
  union tree_node * D.256381;
  int D.256380;
  union tree_node * D.256379;
  union tree_node * D.256378;
  union tree_node * D.256377;
  union tree_node * D.256376;
  union tree_node * D.256375;
  union tree_node * D.256374;
  union tree_node * D.256373;
  union tree_node * D.256372;
  union tree_node * D.256369;
  int D.256368;
  union tree_node * D.256367;
  union tree_node * D.256366;
  union tree_node * D.256365;
  union tree_node * D.256364;
  union tree_node * D.256363;
  int D.256362;
  union tree_node * D.256361;
  union tree_node * D.256360;
  union tree_node * D.256359;
  union tree_node * D.256358;
  union tree_node * D.256357;
  union tree_node * D.256356;
  int D.256355;
  union tree_node * D.256354;
  union tree_node * D.256353;
  union tree_node * D.256352;
  struct function_assign_array * D.256351;
  union tree_node * D.256350;
  union tree_node * D.256349;
  union tree_node * D.256348;
  union tree_node * D.256347;
  int D.256346;
  union tree_node * D.256345;
  union tree_node * D.256344;
  union tree_node * D.256343;
  union tree_node * D.256342;
  union tree_node * D.256341;
  int D.256340;
  union tree_node * D.256339;
  unsigned int D.256338;
  union tree_node * D.256337;
  union tree_node * D.256336;
  union tree_node * D.256335;
  union tree_node * D.256334;
  union tree_node * D.256333;
  unsigned int D.256332;
  union tree_node * D.256331;
  int D.256330;
  union tree_node * D.256329;
  union tree_node * D.256328;
  union tree_node * D.256327;
  union tree_node * D.256326;
  union tree_node * D.256325;
  union tree_node * D.256324;
  int D.256323;
  union tree_node * D.256322;
  union tree_node * D.256321;
  union tree_node * D.256320;
  union tree_node * D.256319;
  union tree_node * D.256318;
  union tree_node * D.256317;
  int D.256316;
  union tree_node * D.256315;
  union tree_node * D.256314;
  const char * D.256313;
  union tree_node * D.256312;
  union tree_node * D.256311;
  union tree_node * D.256310;
  union tree_node * D.256309;
  union tree_node * D.256308;
  union tree_node * D.256307;
  int D.256306;
  int D.256305;
  union tree_node * D.256304;
  union tree_node * D.256303;
  union tree_node * D.256302;
  union tree_node * D.256301;
  int D.256300;
  int D.256299;
  int D.256298;
  int D.256297;
  int D.256296;
  int D.256295;
  int D.256294;
  int D.256293;
  int D.256292;
  int D.256291;
  int D.256290;
  int D.256289;
  int D.256288;
  union tree_node * D.256287;
  int D.256286;
  union tree_node * D.256285;
  union tree_node * D.256284;
  union tree_node * D.256283;
  union tree_node * D.256282;
  union tree_node * D.256281;
  int D.256280;
  struct greturn * D.256279;
  int D.256278;
  const struct gcond * D.256277;
  union tree_node * D.256276;
  tree_code D.256275;
  int D.256274;
  struct gimple * def_stmt;
  int i;
  int i;
  struct function_assign_array assign_array;
  union tree_node * getFunctionAssignVAR;
  int isVardecl;
  union tree_node * second;
  int i;
  union tree_node * fundecl;
  union tree_node * gimpleassignrhs;
  union tree_node * gimpleassignlhs;
  int ssa_name_assign;
  union tree_node * return_tree;
  const struct gcond * gc;
  const struct ssa_use_operand_t * const head;
  int has_single_use_flag;
  int var_declsuperjump;
  int size;
  struct gimple * def_stmt;
  const char * name;
  struct gimple * gc;
  struct gimple * use_stmt;
  struct ssa_use_operand_t * use_p;
  struct imm_use_iterator imm_iter;
  bool retval.1428;
  bool retval.1427;
  bool retval.1426;
  bool retval.1425;
  bool retval.1424;
  bool retval.1423;
  bool retval.1422;
  bool retval.1421;
  bool retval.1420;
  bool retval.1419;
  bool retval.1417;
  bool retval.1413;
  bool retval.1411;
  bool retval.1409;
  bool retval.1407;
  bool retval.1405;
  bool retval.1404;
  bool retval.1403;
  bool retval.1402;
  bool retval.1401;
  bool retval.1400;
  bool retval.1399;
  bool iftmp.1398;
  bool retval.1397;
  bool retval.1396;
  bool retval.1395;
  bool retval.1394;
  bool retval.1393;
  bool retval.1392;
  bool retval.1391;
  bool retval.1390;
  bool iftmp.1389;
  bool retval.1388;
  bool retval.1387;
  bool retval.1386;
  bool iftmp.1385;
  bool retval.1384;
  bool retval.1383;
  struct function_assign_array D.196410;
  bool retval.1380;
  bool retval.1379;
  bool retval.1378;
  bool retval.1377;
  bool retval.1376;
  bool retval.1375;
  bool retval.1373;
  bool retval.1369;
  bool retval.1367;
  bool retval.1365;
  bool retval.1364;
  bool retval.1363;
  bool retval.1362;
  bool retval.1361;
  bool retval.1360;
  bool retval.1359;
  bool retval.1358;
  bool retval.1357;
  bool retval.1356;
  bool retval.1355;
  bool retval.1354;
  bool retval.1353;
  bool iftmp.1352;
  bool retval.1351;
  bool retval.1350;
  bool iftmp.1349;
  bool retval.1348;
  bool retval.1347;
  bool iftmp.1346;
  bool retval.1345;
  bool retval.1344;
  bool retval.1343;
  bool retval.1342;
  bool retval.1341;
  bool retval.1340;
  bool iftmp.1339;
  bool retval.1338;
  bool retval.1337;
  bool iftmp.1336;
  bool retval.1335;
  bool retval.1334;
  bool iftmp.1333;
  bool retval.1332;
  bool iftmp.1331;
  bool retval.1330;
  bool retval.1329;
  bool retval.1328;
  bool retval.1327;
  bool retval.1326;
  bool retval.1325;
  bool iftmp.1324;
  bool retval.1323;
  bool retval.1322;
  bool retval.1321;
  bool retval.1320;
  bool retval.1319;
  bool iftmp.1318;
  bool retval.1317;
  bool retval.1314;

  <bb 2> :
  def_stmt = target->ssa_name.def_stmt;
  size = 8;
  var_declsuperjump = 0;
  has_single_use_flag = 0;
  levelsize.1312_1 = levelsize;
  _2 = levelsize.1312_1 + 1;
  levelsize = _2;
  _3 = target->base.code;
  if (_3 == 153)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _4 = target->base.code;
  if (_4 == 131)
    goto <bb 4>; [INV]
  else
    goto <bb 393>; [INV]

  <bb 4> :
  head = &target->ssa_name.imm_uses;
  _5 = target->base.code;
  if (_5 == 131)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  stderr.1313_6 = stderr;
  __builtin_fwrite ("GIMPLE CODE :var_declsuperjump-------\n", 1, 38, stderr.1313_6);

  <bb 6> :
  var_declsuperjump = 1;
  // predicted unlikely by goto predictor.
  goto <bb 238>; [INV]

  <bb 7> :
  _7 = head->next;
  _8 = _7->loc.stmt;
  if (_8 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 8> :
  _9 = num_imm_uses (target);
  retval.1314 = _9 == 1;
  if (retval.1314 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  has_single_use_flag = 1;
  if (target != target2)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _10 = head->next;
  use_stmt = _10->loc.stmt;
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 11> :
  levelsize.1315_11 = levelsize;
  if (levelsize.1315_11 > 1)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  now_tree.1316_12 = now_tree;
  if (target == now_tree.1316_12)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 394>; [INV]

  <bb 14> :
  _13 = num_imm_uses (target);
  if (_13 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  _14 = head->next;
  if (_14 != 0B)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1318 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.1318 = 0;

  <bb 18> :
  retval.1317 = iftmp.1318;
  if (retval.1317 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 393>; [INV]

  <bb 19> :
  use_p = first_readonly_imm_use (&imm_iter, target);
  goto <bb 392>; [INV]

  <bb 20> :
  use_stmt = use_p->loc.stmt;
  D.256274 = check_stmtStack4 (use_stmt);

  <bb 21> :
  _15 = D.256274;
  retval.1319 = _15 == 0;
  if (retval.1319 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 390>; [INV]

  <bb 22> :
has_single_use_jump:
  D.256275 = gimple_cond_code (use_stmt);

  <bb 23> :
  _16 = D.256275;
  retval.1320 = _16 != 0;
  if (retval.1320 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 24> :
  _17 = is_gimple_assign (use_stmt);
  retval.1321 = ~_17;
  if (retval.1321 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 25> :
  D.256276 = gimple_cond_lhs (use_stmt);

  <bb 26> :
  _18 = D.256276;
  retval.1322 = _18 != 0B;
  if (retval.1322 != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 27> :
  D.256277 = GIMPLE_CHECK2<const gcond*> (use_stmt);

  <bb 28> :
  gc = D.256277;
  _19 = gimple_cond_rhs (gc);
  if (_19 != 0B)
    goto <bb 29>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 29> :
  _20 = gimple_cond_lhs (gc);
  if (_20 != 0B)
    goto <bb 30>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 30> :
  iftmp.1324 = 1;
  goto <bb 32>; [INV]

  <bb 31> :
  iftmp.1324 = 0;

  <bb 32> :
  retval.1323 = iftmp.1324;
  if (retval.1323 != 0)
    goto <bb 33>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 33> :
  _21 = gimple_cond_rhs (gc);
  D.256278 = check_stmtStack (_21);

  <bb 34> :
  _22 = D.256278;
  retval.1325 = _22 == 0;
  if (retval.1325 != 0)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  _23 = gimple_cond_lhs (gc);
  set_gimple_array (used_stmt, use_stmt, _23, target, 0B);

  <bb 36> :
  _24 = gimple_code (use_stmt);
  retval.1326 = _24 == 10;
  if (retval.1326 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 37> :
  D.256279 = as_a<greturn*, gimple> (use_stmt);

  <bb 38> :
  _25 = D.256279;
  return_tree = gimple_return_retval (_25);
  D.256280 = check_stmtStack (return_tree);

  <bb 39> :
  _26 = D.256280;
  retval.1327 = _26 == 0;
  if (retval.1327 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 390>; [INV]

  <bb 40> :
  set_gimple_array (used_stmt, use_stmt, return_tree, return_tree, 0B);
  goto <bb 390>; [INV]

  <bb 41> :
  _27 = gimple_code (use_stmt);
  retval.1328 = _27 == 6;
  if (retval.1328 != 0)
    goto <bb 42>; [INV]
  else
    goto <bb 141>; [INV]

  <bb 42> :
  ssa_name_assign = 0;
  D.256281 = gimple_assign_lhs (use_stmt);

  <bb 43> :
  _28 = D.256281;
  D.256282 = prechecktree (_28);

  <bb 44> :
  gimpleassignlhs = D.256282;
  D.256283 = gimple_assign_rhs1 (use_stmt);

  <bb 45> :
  _29 = D.256283;
  D.256284 = prechecktree (_29);

  <bb 46> :
  gimpleassignrhs = D.256284;
  if (gimpleassignlhs != 0B)
    goto <bb 47>; [INV]
  else
    goto <bb 93>; [INV]

  <bb 47> :
  _30 = gimpleassignlhs->base.code;
  if (_30 == 153)
    goto <bb 48>; [INV]
  else
    goto <bb 93>; [INV]

  <bb 48> :
  D.256285 = gimple_call_fn (use_stmt);

  <bb 49> :
  _31 = D.256285;
  retval.1329 = _31 != 0B;
  if (retval.1329 != 0)
    goto <bb 50>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 50> :
  D.256286 = check_stmtStack (gimpleassignlhs);

  <bb 51> :
  _32 = D.256286;
  if (_32 == 0)
    goto <bb 52>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 52> :
  D.256287 = gimple_call_fn (use_stmt);

  <bb 53> :
  _33 = D.256287;
  D.256288 = check_stmtStack (_33);

  <bb 54> :
  _34 = D.256288;
  if (_34 == 0)
    goto <bb 55>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 55> :
  iftmp.1331 = 1;
  goto <bb 57>; [INV]

  <bb 56> :
  iftmp.1331 = 0;

  <bb 57> :
  retval.1330 = iftmp.1331;
  if (retval.1330 != 0)
    goto <bb 58>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 58> :
  set_gimple_array (used_stmt, use_stmt, gimpleassignlhs, target, 0B);

  <bb 59> :
  ssa_name_assign = 1;
  if (gimpleassignlhs != target2)
    goto <bb 60>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 60> :
  D.256289 = check_stmtStack2 (use_stmt);

  <bb 61> :
  _35 = D.256289;
  if (_35 == 0)
    goto <bb 62>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 62> :
  iftmp.1333 = 1;
  goto <bb 64>; [INV]

  <bb 63> :
  iftmp.1333 = 0;

  <bb 64> :
  retval.1332 = iftmp.1333;
  if (retval.1332 != 0)
    goto <bb 65>; [INV]
  else
    goto <bb 66>; [INV]

  <bb 65> :
  new_search_imm_use (used_stmt, gimpleassignlhs, gimpleassignlhs);

  <bb 66> :
  Checknew_search_imm_use_lhs (used_stmt, use_stmt, target, target2);
  goto <bb 79>; [INV]

  <bb 67> :
  if (gimpleassignrhs != 0B)
    goto <bb 68>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 68> :
  _36 = gimpleassignrhs->base.code;
  if (_36 == 153)
    goto <bb 69>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 69> :
  D.256290 = check_stmtStack (gimpleassignrhs);

  <bb 70> :
  _37 = D.256290;
  retval.1334 = _37 == 0;
  if (retval.1334 != 0)
    goto <bb 71>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 71> :
  if (gimpleassignrhs != target2)
    goto <bb 72>; [INV]
  else
    goto <bb 75>; [INV]

  <bb 72> :
  D.256291 = check_stmtStack2 (use_stmt);

  <bb 73> :
  _38 = D.256291;
  if (_38 == 0)
    goto <bb 74>; [INV]
  else
    goto <bb 75>; [INV]

  <bb 74> :
  iftmp.1336 = 1;
  goto <bb 76>; [INV]

  <bb 75> :
  iftmp.1336 = 0;

  <bb 76> :
  retval.1335 = iftmp.1336;
  if (retval.1335 != 0)
    goto <bb 77>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 77> :
  new_search_imm_use (used_stmt, gimpleassignrhs, gimpleassignrhs);

  <bb 78> :
  Checknew_search_imm_use_rhs (used_stmt, use_stmt, target, target2);

  <bb 79> :
  if (gimpleassignlhs != 0B)
    goto <bb 80>; [INV]
  else
    goto <bb 92>; [INV]

  <bb 80> :
  _39 = gimpleassignlhs->base.code;
  if (_39 == 153)
    goto <bb 81>; [INV]
  else
    goto <bb 92>; [INV]

  <bb 81> :
  D.256292 = check_stmtStack (gimpleassignlhs);

  <bb 82> :
  _40 = D.256292;
  retval.1337 = _40 == 0;
  if (retval.1337 != 0)
    goto <bb 83>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 83> :
  if (gimpleassignlhs != target2)
    goto <bb 84>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 84> :
  D.256293 = check_stmtStack2 (use_stmt);

  <bb 85> :
  _41 = D.256293;
  if (_41 == 0)
    goto <bb 86>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 86> :
  iftmp.1339 = 1;
  goto <bb 88>; [INV]

  <bb 87> :
  iftmp.1339 = 0;

  <bb 88> :
  retval.1338 = iftmp.1339;
  if (retval.1338 != 0)
    goto <bb 89>; [INV]
  else
    goto <bb 90>; [INV]

  <bb 89> :
  new_search_imm_use (used_stmt, gimpleassignlhs, gimpleassignlhs);

  <bb 90> :
  Checknew_search_imm_use_lhs (used_stmt, use_stmt, target, target2);

  <bb 91> :
  Varnew_search_imm_use (used_stmt, use_stmt, gimpleassignlhs, target2);

  <bb 92> :
  goto <bb 102>; [INV]

  <bb 93> :
  if (gimpleassignrhs != 0B)
    goto <bb 94>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 94> :
  _42 = gimpleassignrhs->base.code;
  if (_42 == 153)
    goto <bb 95>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 95> :
  D.256294 = check_stmtStack (gimpleassignrhs);

  <bb 96> :
  _43 = D.256294;
  retval.1340 = _43 == 0;
  if (retval.1340 != 0)
    goto <bb 97>; [INV]
  else
    goto <bb 101>; [INV]

  <bb 97> :
  set_gimple_array (used_stmt, use_stmt, gimpleassignrhs, target, 0B);

  <bb 98> :
  if (gimpleassignrhs != target2)
    goto <bb 99>; [INV]
  else
    goto <bb 100>; [INV]

  <bb 99> :
  new_search_imm_use (used_stmt, gimpleassignrhs, gimpleassignrhs);

  <bb 100> :
  Checknew_search_imm_use_rhs (used_stmt, use_stmt, target, target2);

  <bb 101> :
  Varnew_search_imm_use (used_stmt, use_stmt, gimpleassignrhs, target2);

  <bb 102> :
  D.256295 = check_stmtStack (target);

  <bb 103> :
  _44 = D.256295;
  retval.1341 = _44 == 0;
  if (retval.1341 != 0)
    goto <bb 104>; [INV]
  else
    goto <bb 105>; [INV]

  <bb 104> :
  set_gimple_array (used_stmt, use_stmt, target, target2, 0B);

  <bb 105> :
  Varnew_search_imm_use (used_stmt, use_stmt, target, target2);

  <bb 106> :
  if (gimpleassignlhs != 0B)
    goto <bb 107>; [INV]
  else
    goto <bb 118>; [INV]

  <bb 107> :
  _45 = gimpleassignlhs->base.code;
  if (_45 == 165)
    goto <bb 108>; [INV]
  else
    goto <bb 118>; [INV]

  <bb 108> :
  fundecl = gimpleassignlhs->exp.operands[0];
  D.256296 = check_stmtStack (gimpleassignlhs);

  <bb 109> :
  _46 = D.256296;
  retval.1342 = _46 == 0;
  if (retval.1342 != 0)
    goto <bb 110>; [INV]
  else
    goto <bb 111>; [INV]

  <bb 110> :
  set_gimple_array (used_stmt, use_stmt, gimpleassignlhs, target, 0B);

  <bb 111> :
  _47 = fundecl->base.code;
  if (_47 == 153)
    goto <bb 112>; [INV]
  else
    goto <bb 117>; [INV]

  <bb 112> :
  D.256297 = check_stmtStack (fundecl);

  <bb 113> :
  _48 = D.256297;
  retval.1343 = _48 == 0;
  if (retval.1343 != 0)
    goto <bb 114>; [INV]
  else
    goto <bb 117>; [INV]

  <bb 114> :
  set_gimple_array (used_stmt, use_stmt, fundecl, target, 0B);

  <bb 115> :
  if (fundecl != target2)
    goto <bb 116>; [INV]
  else
    goto <bb 117>; [INV]

  <bb 116> :
  new_search_imm_use (used_stmt, fundecl, fundecl);

  <bb 117> :
  goto <bb 140>; [INV]

  <bb 118> :
  if (gimpleassignlhs != 0B)
    goto <bb 119>; [INV]
  else
    goto <bb 127>; [INV]

  <bb 119> :
  _49 = gimpleassignlhs->base.code;
  if (_49 == 47)
    goto <bb 120>; [INV]
  else
    goto <bb 127>; [INV]

  <bb 120> :
  _50 = gimpleassignrhs->base.code;
  if (_50 == 153)
    goto <bb 121>; [INV]
  else
    goto <bb 126>; [INV]

  <bb 121> :
  D.256298 = check_stmtStack (gimpleassignrhs);

  <bb 122> :
  _51 = D.256298;
  retval.1344 = _51 == 0;
  if (retval.1344 != 0)
    goto <bb 123>; [INV]
  else
    goto <bb 126>; [INV]

  <bb 123> :
  set_gimple_array (used_stmt, use_stmt, gimpleassignrhs, target, 0B);

  <bb 124> :
  if (gimpleassignrhs != target2)
    goto <bb 125>; [INV]
  else
    goto <bb 126>; [INV]

  <bb 125> :
  new_search_imm_use (used_stmt, gimpleassignrhs, gimpleassignrhs);

  <bb 126> :
  goto <bb 140>; [INV]

  <bb 127> :
  if (gimpleassignrhs != 0B)
    goto <bb 128>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 128> :
  _52 = gimpleassignrhs->base.code;
  if (_52 == 47)
    goto <bb 129>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 129> :
  _53 = gimpleassignlhs->base.code;
  if (_53 == 153)
    goto <bb 130>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 130> :
  D.256299 = check_stmtStack (gimpleassignlhs);

  <bb 131> :
  _54 = D.256299;
  if (_54 == 0)
    goto <bb 134>; [INV]
  else
    goto <bb 132>; [INV]

  <bb 132> :
  D.256300 = check_stmtStack2 (use_stmt);

  <bb 133> :
  _55 = D.256300;
  if (_55 == 0)
    goto <bb 134>; [INV]
  else
    goto <bb 135>; [INV]

  <bb 134> :
  iftmp.1346 = 1;
  goto <bb 136>; [INV]

  <bb 135> :
  iftmp.1346 = 0;

  <bb 136> :
  retval.1345 = iftmp.1346;
  if (retval.1345 != 0)
    goto <bb 137>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 137> :
  set_gimple_array (used_stmt, use_stmt, gimpleassignlhs, target, 0B);

  <bb 138> :
  if (gimpleassignlhs != target2)
    goto <bb 139>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 139> :
  new_search_imm_use (used_stmt, gimpleassignlhs, gimpleassignlhs);

  <bb 140> :
  goto <bb 390>; [INV]

  <bb 141> :
  _56 = gimple_code (use_stmt);
  retval.1347 = _56 == 18;
  if (retval.1347 != 0)
    goto <bb 142>; [INV]
  else
    goto <bb 166>; [INV]

  <bb 142> :
  D.256301 = gimple_phi_result (use_stmt);

  <bb 143> :
  _57 = D.256301;
  if (_57 != 0B)
    goto <bb 144>; [INV]
  else
    goto <bb 147>; [INV]

  <bb 144> :
  D.256302 = gimple_phi_result (use_stmt);

  <bb 145> :
  _58 = D.256302;
  _59 = _58->base.code;
  if (_59 == 153)
    goto <bb 146>; [INV]
  else
    goto <bb 147>; [INV]

  <bb 146> :
  iftmp.1349 = 1;
  goto <bb 148>; [INV]

  <bb 147> :
  iftmp.1349 = 0;

  <bb 148> :
  retval.1348 = iftmp.1349;
  if (retval.1348 != 0)
    goto <bb 149>; [INV]
  else
    goto <bb 390>; [INV]

  <bb 149> :
  D.256303 = gimple_phi_result (use_stmt);

  <bb 150> :
  _60 = D.256303;
  _61 = _60->base.code;
  retval.1350 = _61 == 153;
  if (retval.1350 != 0)
    goto <bb 151>; [INV]
  else
    goto <bb 390>; [INV]

  <bb 151> :
  D.256304 = gimple_phi_result (use_stmt);

  <bb 152> :
  _62 = D.256304;
  D.256305 = check_stmtStack (_62);

  <bb 153> :
  _63 = D.256305;
  if (_63 == 0)
    goto <bb 154>; [INV]
  else
    goto <bb 157>; [INV]

  <bb 154> :
  D.256306 = check_stmtStack2 (use_stmt);

  <bb 155> :
  _64 = D.256306;
  if (_64 == 0)
    goto <bb 156>; [INV]
  else
    goto <bb 157>; [INV]

  <bb 156> :
  iftmp.1352 = 1;
  goto <bb 158>; [INV]

  <bb 157> :
  iftmp.1352 = 0;

  <bb 158> :
  retval.1351 = iftmp.1352;
  if (retval.1351 != 0)
    goto <bb 159>; [INV]
  else
    goto <bb 390>; [INV]

  <bb 159> :
  D.256307 = gimple_phi_result (use_stmt);

  <bb 160> :
  _65 = D.256307;
  set_gimple_array (used_stmt, use_stmt, _65, target, 0B);

  <bb 161> :
  D.256308 = gimple_phi_result (use_stmt);

  <bb 162> :
  _66 = D.256308;
  retval.1353 = target2 != _66;
  if (retval.1353 != 0)
    goto <bb 163>; [INV]
  else
    goto <bb 390>; [INV]

  <bb 163> :
  D.256309 = gimple_phi_result (use_stmt);

  <bb 164> :
  _67 = D.256309;
  D.256310 = gimple_phi_result (use_stmt);

  <bb 165> :
  _68 = D.256310;
  new_search_imm_use (used_stmt, _68, _67);
  goto <bb 390>; [INV]

  <bb 166> :
  _69 = gimple_code (use_stmt);
  retval.1354 = _69 == 8;
  if (retval.1354 != 0)
    goto <bb 167>; [INV]
  else
    goto <bb 390>; [INV]

  <bb 167> :
  D.256311 = gimple_call_fn (use_stmt);

  <bb 168> :
  _70 = D.256311;
  retval.1355 = _70 == 0B;
  if (retval.1355 != 0)
    goto <bb 169>; [INV]
  else
    goto <bb 170>; [INV]

  <bb 169> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 394>; [INV]

  <bb 170> :
  D.256312 = gimple_call_fn (use_stmt);

  <bb 171> :
  _71 = D.256312;
  D.256313 = get_name (_71);

  <bb 172> :
  name = D.256313;
  if (name != 0B)
    goto <bb 173>; [INV]
  else
    goto <bb 390>; [INV]

  <bb 173> :
  _72 = strcmp (name, "realloc");
  if (_72 == 0)
    goto <bb 174>; [INV]
  else
    goto <bb 220>; [INV]

  <bb 174> :
  D.256314 = gimple_call_lhs (use_stmt);

  <bb 175> :
  _73 = D.256314;
  retval.1356 = _73 != 0B;
  if (retval.1356 != 0)
    goto <bb 176>; [INV]
  else
    goto <bb 198>; [INV]

  <bb 176> :
  D.256315 = gimple_call_lhs (use_stmt);

  <bb 177> :
  _74 = D.256315;
  D.256316 = check_stmtStack (_74);

  <bb 178> :
  _75 = D.256316;
  retval.1357 = _75 == 0;
  if (retval.1357 != 0)
    goto <bb 179>; [INV]
  else
    goto <bb 186>; [INV]

  <bb 179> :
  D.256317 = gimple_call_lhs (use_stmt);

  <bb 180> :
  _76 = D.256317;
  set_gimple_array (used_stmt, use_stmt, _76, target, 0B);

  <bb 181> :
  D.256318 = gimple_call_lhs (use_stmt);

  <bb 182> :
  _77 = D.256318;
  _78 = _77->base.code;
  retval.1358 = _78 == 153;
  if (retval.1358 != 0)
    goto <bb 183>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 183> :
  D.256319 = gimple_call_lhs (use_stmt);

  <bb 184> :
  _79 = D.256319;
  D.256320 = gimple_call_lhs (use_stmt);

  <bb 185> :
  _80 = D.256320;
  new_search_imm_use (used_stmt, _80, _79);
  goto <bb 389>; [INV]

  <bb 186> :
  D.256321 = gimple_call_fn (use_stmt);

  <bb 187> :
  _81 = D.256321;
  retval.1359 = _81 != 0B;
  if (retval.1359 != 0)
    goto <bb 188>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 188> :
  D.256322 = gimple_call_arg (use_stmt, 0);

  <bb 189> :
  _82 = D.256322;
  D.256323 = check_stmtStack (_82);

  <bb 190> :
  _83 = D.256323;
  retval.1360 = _83 == 0;
  if (retval.1360 != 0)
    goto <bb 191>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 191> :
  D.256324 = gimple_call_arg (use_stmt, 0);

  <bb 192> :
  _84 = D.256324;
  set_gimple_array (used_stmt, use_stmt, _84, target, 0B);

  <bb 193> :
  D.256325 = gimple_call_arg (use_stmt, 0);

  <bb 194> :
  _85 = D.256325;
  _86 = _85->base.code;
  retval.1361 = _86 == 153;
  if (retval.1361 != 0)
    goto <bb 195>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 195> :
  D.256326 = gimple_call_arg (use_stmt, 0);

  <bb 196> :
  _87 = D.256326;
  D.256327 = gimple_call_arg (use_stmt, 0);

  <bb 197> :
  _88 = D.256327;
  new_search_imm_use (used_stmt, _88, _87);
  goto <bb 389>; [INV]

  <bb 198> :
  D.256328 = gimple_call_fn (use_stmt);

  <bb 199> :
  _89 = D.256328;
  retval.1362 = _89 != 0B;
  if (retval.1362 != 0)
    goto <bb 200>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 200> :
  D.256329 = gimple_call_fn (use_stmt);

  <bb 201> :
  _90 = D.256329;
  D.256330 = check_stmtStack (_90);

  <bb 202> :
  _91 = D.256330;
  retval.1363 = _91 == 0;
  if (retval.1363 != 0)
    goto <bb 203>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 203> :
  D.256331 = gimple_call_fn (use_stmt);

  <bb 204> :
  _92 = D.256331;
  set_gimple_array (used_stmt, use_stmt, _92, target, 0B);

  <bb 205> :
  D.256332 = gimple_call_num_args (use_stmt);

  <bb 206> :
  _93 = D.256332;
  retval.1364 = _93 != 0;
  if (retval.1364 != 0)
    goto <bb 207>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 207> :
  i = 0;
  goto <bb 218>; [INV]

  <bb 208> :
  i.1366_94 = (unsigned int) i;
  D.256333 = gimple_call_arg (use_stmt, i.1366_94);

  <bb 209> :
  _95 = D.256333;
  retval.1365 = _95 != 0B;
  if (retval.1365 != 0)
    goto <bb 210>; [INV]
  else
    goto <bb 217>; [INV]

  <bb 210> :
  i.1368_96 = (unsigned int) i;
  D.256334 = gimple_call_arg (use_stmt, i.1368_96);

  <bb 211> :
  _97 = D.256334;
  retval.1367 = target2 != _97;
  if (retval.1367 != 0)
    goto <bb 212>; [INV]
  else
    goto <bb 217>; [INV]

  <bb 212> :
  i.1370_98 = (unsigned int) i;
  D.256335 = gimple_call_arg (use_stmt, i.1370_98);

  <bb 213> :
  _99 = D.256335;
  _100 = _99->base.code;
  retval.1369 = _100 == 153;
  if (retval.1369 != 0)
    goto <bb 214>; [INV]
  else
    goto <bb 217>; [INV]

  <bb 214> :
  i.1371_101 = (unsigned int) i;
  D.256336 = gimple_call_arg (use_stmt, i.1371_101);

  <bb 215> :
  _102 = D.256336;
  i.1372_103 = (unsigned int) i;
  D.256337 = gimple_call_arg (use_stmt, i.1372_103);

  <bb 216> :
  _104 = D.256337;
  new_search_imm_use (used_stmt, _104, _102);

  <bb 217> :
  i = i + 1;

  <bb 218> :
  D.256338 = gimple_call_num_args (use_stmt);

  <bb 219> :
  _105 = D.256338;
  i.1374_106 = (unsigned int) i;
  retval.1373 = _105 > i.1374_106;
  if (retval.1373 != 0)
    goto <bb 208>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 220> :
  _107 = strcmp (name, "free");
  if (_107 == 0)
    goto <bb 222>; [INV]
  else
    goto <bb 221>; [INV]

  <bb 221> :
  _108 = strcmp (name, "xfree");
  if (_108 == 0)
    goto <bb 222>; [INV]
  else
    goto <bb 233>; [INV]

  <bb 222> :
  D.256339 = gimple_call_fn (use_stmt);

  <bb 223> :
  _109 = D.256339;
  D.256340 = check_stmtStack (_109);

  <bb 224> :
  _110 = D.256340;
  retval.1375 = _110 == 0;
  if (retval.1375 != 0)
    goto <bb 225>; [INV]
  else
    goto <bb 232>; [INV]

  <bb 225> :
  D.256341 = gimple_call_fn (use_stmt);

  <bb 226> :
  _111 = D.256341;
  set_gimple_array (used_stmt, use_stmt, _111, target, 0B);

  <bb 227> :
  D.256342 = gimple_call_fn (use_stmt);

  <bb 228> :
  _112 = D.256342;
  _113 = _112->base.code;
  retval.1376 = _113 == 153;
  if (retval.1376 != 0)
    goto <bb 229>; [INV]
  else
    goto <bb 232>; [INV]

  <bb 229> :
  D.256343 = gimple_call_fn (use_stmt);

  <bb 230> :
  _114 = D.256343;
  D.256344 = gimple_call_fn (use_stmt);

  <bb 231> :
  _115 = D.256344;
  new_search_imm_use (used_stmt, _115, _114);

  <bb 232> :
  goto <bb 389>; [INV]

  <bb 233> :
  _116 = strcmp (name, "pthread_create");
  if (_116 == 0)
    goto <bb 235>; [INV]
  else
    goto <bb 234>; [INV]

  <bb 234> :
  _117 = strcmp (name, "pthread_join");
  if (_117 == 0)
    goto <bb 235>; [INV]
  else
    goto <bb 311>; [INV]

  <bb 235> :
  D.256345 = gimple_call_fn (use_stmt);

  <bb 236> :
  _118 = D.256345;
  D.256346 = check_stmtStack (_118);

  <bb 237> :
  _119 = D.256346;
  retval.1377 = _119 == 0;
  if (retval.1377 != 0)
    goto <bb 238>; [INV]
  else
    goto <bb 310>; [INV]

  <bb 238> :
has_single_use_addr_expr_jump:
  second = 0B;
  isVardecl = 0;
  if (var_declsuperjump == 1)
    goto <bb 239>; [INV]
  else
    goto <bb 241>; [INV]

  <bb 239> :
  _120 = target->base.code;
  if (_120 == 131)
    goto <bb 240>; [INV]
  else
    goto <bb 241>; [INV]

  <bb 240> :
  second = target->exp.operands[0];
  target = target;
  isVardecl = 1;

  <bb 241> :
  D.256347 = gimple_assign_rhs1 (def_stmt);

  <bb 242> :
  _121 = D.256347;
  _122 = _121->base.code;
  retval.1378 = _122 == 131;
  if (retval.1378 != 0)
    goto <bb 243>; [INV]
  else
    goto <bb 245>; [INV]

  <bb 243> :
  D.256348 = gimple_assign_rhs1 (def_stmt);

  <bb 244> :
  _123 = D.256348;
  second = _123->exp.operands[0];
  second = second->exp.operands[0];
  isVardecl = 1;
  goto <bb 249>; [INV]

  <bb 245> :
  D.256349 = gimple_assign_rhs1 (def_stmt);

  <bb 246> :
  _124 = D.256349;
  _125 = _124->base.code;
  retval.1379 = _125 == 36;
  if (retval.1379 != 0)
    goto <bb 247>; [INV]
  else
    goto <bb 249>; [INV]

  <bb 247> :
  D.256350 = gimple_assign_rhs1 (def_stmt);

  <bb 248> :
  second = D.256350;
  isVardecl = 1;

  <bb 249> :
  if (second != 0B)
    goto <bb 250>; [INV]
  else
    goto <bb 301>; [INV]

  <bb 250> :
  _126 = second->base.code;
  if (_126 == 36)
    goto <bb 251>; [INV]
  else
    goto <bb 301>; [INV]

  <bb 251> :
  getFunctionAssignVAR = second;
  function_assign_array::function_assign_array (&assign_array);
  function_assign_collect.1381_127 = function_assign_collect;
  D.256351 = hash_map<tree_node*, function_assign_array>::get (function_assign_collect.1381_127, &getFunctionAssignVAR);

  <bb 252> :
  _128 = D.256351;
  retval.1380 = _128 != 0B;
  if (retval.1380 != 0)
    goto <bb 253>; [INV]
  else
    goto <bb 300>; [INV]

  <bb 253> :
  getFunctionAssignVAR.1382_129 = getFunctionAssignVAR;
  D.196410 = ret_function_varstmt (getFunctionAssignVAR.1382_129); [return slot optimization]

  <bb 254> :
  function_assign_array::operator= (&assign_array, &D.196410);
  function_assign_array::~function_assign_array (&D.196410);
  D.196410 = {CLOBBER};
  i = 0;
  goto <bb 299>; [INV]

  <bb 255> :
  _130 = (long unsigned int) i;
  _131 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _130);
  _132 = _131->stmt;
  _133 = gimple_code (_132);
  retval.1383 = _133 == 6;
  if (retval.1383 != 0)
    goto <bb 256>; [INV]
  else
    goto <bb 290>; [INV]

  <bb 256> :
  _134 = (long unsigned int) i;
  _135 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _134);
  _136 = _135->stmt;
  D.256352 = gimple_assign_lhs (_136);

  <bb 257> :
  _137 = D.256352;
  if (target != _137)
    goto <bb 258>; [INV]
  else
    goto <bb 261>; [INV]

  <bb 258> :
  _138 = (long unsigned int) i;
  _139 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _138);
  _140 = _139->stmt;
  D.256353 = gimple_assign_lhs (_140);

  <bb 259> :
  _141 = D.256353;
  _142 = _141->base.code;
  if (_142 == 153)
    goto <bb 260>; [INV]
  else
    goto <bb 261>; [INV]

  <bb 260> :
  iftmp.1385 = 1;
  goto <bb 262>; [INV]

  <bb 261> :
  iftmp.1385 = 0;

  <bb 262> :
  retval.1384 = iftmp.1385;
  if (retval.1384 != 0)
    goto <bb 263>; [INV]
  else
    goto <bb 273>; [INV]

  <bb 263> :
  _143 = (long unsigned int) i;
  _144 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _143);
  _145 = _144->stmt;
  D.256354 = gimple_assign_lhs (_145);

  <bb 264> :
  _146 = D.256354;
  D.256355 = check_stmtStack (_146);

  <bb 265> :
  _147 = D.256355;
  retval.1386 = _147 == 0;
  if (retval.1386 != 0)
    goto <bb 266>; [INV]
  else
    goto <bb 298>; [INV]

  <bb 266> :
  _148 = (long unsigned int) i;
  _149 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _148);
  _150 = _149->form_tree;
  retval.1387 = _150 != 0B;
  if (retval.1387 != 0)
    goto <bb 267>; [INV]
  else
    goto <bb 268>; [INV]

  <bb 267> :
  _151 = (long unsigned int) i;
  _152 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _151);
  _153 = _152->form_tree;
  _154 = (long unsigned int) i;
  _155 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _154);
  _156 = _155->stmt;
  set_gimple_array (used_stmt, _156, _153, target, 0B);
  goto <bb 270>; [INV]

  <bb 268> :
  _157 = (long unsigned int) i;
  _158 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _157);
  _159 = _158->stmt;
  D.256356 = gimple_assign_lhs (_159);

  <bb 269> :
  _160 = D.256356;
  _161 = (long unsigned int) i;
  _162 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _161);
  _163 = _162->stmt;
  set_gimple_array (used_stmt, _163, _160, target, 0B);

  <bb 270> :
  _164 = (long unsigned int) i;
  _165 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _164);
  _166 = _165->stmt;
  D.256357 = gimple_assign_lhs (_166);

  <bb 271> :
  _167 = D.256357;
  _168 = (long unsigned int) i;
  _169 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _168);
  _170 = _169->stmt;
  D.256358 = gimple_assign_lhs (_170);

  <bb 272> :
  _171 = D.256358;
  new_search_imm_use (used_stmt, _171, _167);
  goto <bb 298>; [INV]

  <bb 273> :
  _172 = (long unsigned int) i;
  _173 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _172);
  _174 = _173->stmt;
  D.256359 = gimple_assign_rhs1 (_174);

  <bb 274> :
  _175 = D.256359;
  if (target != _175)
    goto <bb 275>; [INV]
  else
    goto <bb 278>; [INV]

  <bb 275> :
  _176 = (long unsigned int) i;
  _177 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _176);
  _178 = _177->stmt;
  D.256360 = gimple_assign_rhs1 (_178);

  <bb 276> :
  _179 = D.256360;
  _180 = _179->base.code;
  if (_180 == 153)
    goto <bb 277>; [INV]
  else
    goto <bb 278>; [INV]

  <bb 277> :
  iftmp.1389 = 1;
  goto <bb 279>; [INV]

  <bb 278> :
  iftmp.1389 = 0;

  <bb 279> :
  retval.1388 = iftmp.1389;
  if (retval.1388 != 0)
    goto <bb 280>; [INV]
  else
    goto <bb 298>; [INV]

  <bb 280> :
  _181 = (long unsigned int) i;
  _182 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _181);
  _183 = _182->stmt;
  D.256361 = gimple_assign_rhs1 (_183);

  <bb 281> :
  _184 = D.256361;
  D.256362 = check_stmtStack (_184);

  <bb 282> :
  _185 = D.256362;
  retval.1390 = _185 == 0;
  if (retval.1390 != 0)
    goto <bb 283>; [INV]
  else
    goto <bb 298>; [INV]

  <bb 283> :
  _186 = (long unsigned int) i;
  _187 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _186);
  _188 = _187->form_tree;
  retval.1391 = _188 != 0B;
  if (retval.1391 != 0)
    goto <bb 284>; [INV]
  else
    goto <bb 285>; [INV]

  <bb 284> :
  _189 = (long unsigned int) i;
  _190 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _189);
  _191 = _190->form_tree;
  _192 = (long unsigned int) i;
  _193 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _192);
  _194 = _193->stmt;
  set_gimple_array (used_stmt, _194, _191, target, 0B);
  goto <bb 287>; [INV]

  <bb 285> :
  _195 = (long unsigned int) i;
  _196 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _195);
  _197 = _196->stmt;
  D.256363 = gimple_assign_rhs1 (_197);

  <bb 286> :
  _198 = D.256363;
  _199 = (long unsigned int) i;
  _200 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _199);
  _201 = _200->stmt;
  set_gimple_array (used_stmt, _201, _198, target, 0B);

  <bb 287> :
  _202 = (long unsigned int) i;
  _203 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _202);
  _204 = _203->stmt;
  D.256364 = gimple_assign_rhs1 (_204);

  <bb 288> :
  _205 = D.256364;
  _206 = (long unsigned int) i;
  _207 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _206);
  _208 = _207->stmt;
  D.256365 = gimple_assign_rhs1 (_208);

  <bb 289> :
  _209 = D.256365;
  new_search_imm_use (used_stmt, _209, _205);
  goto <bb 298>; [INV]

  <bb 290> :
  _210 = (long unsigned int) i;
  _211 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _210);
  _212 = _211->stmt;
  _213 = gimple_code (_212);
  retval.1392 = _213 == 8;
  if (retval.1392 != 0)
    goto <bb 291>; [INV]
  else
    goto <bb 298>; [INV]

  <bb 291> :
  _214 = (long unsigned int) i;
  _215 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _214);
  _216 = _215->stmt;
  D.256366 = gimple_call_arg (_216, 0);

  <bb 292> :
  _217 = D.256366;
  _218 = _217->base.code;
  retval.1393 = _218 == 131;
  if (retval.1393 != 0)
    goto <bb 293>; [INV]
  else
    goto <bb 298>; [INV]

  <bb 293> :
  _219 = (long unsigned int) i;
  _220 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _219);
  _221 = _220->stmt;
  D.256367 = gimple_call_arg (_221, 0);

  <bb 294> :
  _222 = D.256367;
  D.256368 = check_stmtStack (_222);

  <bb 295> :
  _223 = D.256368;
  retval.1394 = _223 == 0;
  if (retval.1394 != 0)
    goto <bb 296>; [INV]
  else
    goto <bb 298>; [INV]

  <bb 296> :
  _224 = (long unsigned int) i;
  _225 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _224);
  _226 = _225->stmt;
  D.256369 = gimple_call_arg (_226, 0);

  <bb 297> :
  _227 = D.256369;
  _228 = (long unsigned int) i;
  _229 = std::vector<assign_type>::operator[] (&assign_array.assign_type_array, _228);
  _230 = _229->stmt;
  set_gimple_array (used_stmt, _230, _227, target, 0B);

  <bb 298> :
  i = i + 1;

  <bb 299> :
  _231 = (long unsigned int) i;
  _232 = std::vector<assign_type>::size (&assign_array.assign_type_array);
  retval.1395 = _231 < _232;
  if (retval.1395 != 0)
    goto <bb 255>; [INV]
  else
    goto <bb 300>; [INV]

  <bb 300> :
  function_assign_array::~function_assign_array (&assign_array);
  getFunctionAssignVAR = {CLOBBER};
  assign_array = {CLOBBER};

  <bb 301> :
  if (var_declsuperjump == 1)
    goto <bb 302>; [INV]
  else
    goto <bb 303>; [INV]

  <bb 302> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 394>; [INV]

  <bb 303> :
  D.256372 = gimple_call_fn (use_stmt);

  <bb 304> :
  _233 = D.256372;
  set_gimple_array (used_stmt, use_stmt, _233, target, 0B);

  <bb 305> :
  D.256373 = gimple_call_fn (use_stmt);

  <bb 306> :
  _234 = D.256373;
  _235 = _234->base.code;
  retval.1396 = _235 == 153;
  if (retval.1396 != 0)
    goto <bb 307>; [INV]
  else
    goto <bb 310>; [INV]

  <bb 307> :
  D.256374 = gimple_call_fn (use_stmt);

  <bb 308> :
  _236 = D.256374;
  D.256375 = gimple_call_fn (use_stmt);

  <bb 309> :
  _237 = D.256375;
  new_search_imm_use (used_stmt, _237, _236);

  <bb 310> :
  goto <bb 389>; [INV]

  <bb 311> :
  D.256376 = gimple_call_fn (use_stmt);

  <bb 312> :
  _238 = D.256376;
  if (_238 != 0B)
    goto <bb 313>; [INV]
  else
    goto <bb 318>; [INV]

  <bb 313> :
  D.256377 = gimple_call_lhs (use_stmt);

  <bb 314> :
  _239 = D.256377;
  if (_239 != 0B)
    goto <bb 315>; [INV]
  else
    goto <bb 318>; [INV]

  <bb 315> :
  D.256378 = gimple_call_lhs (use_stmt);

  <bb 316> :
  _240 = D.256378;
  _241 = _240->base.code;
  if (_241 == 153)
    goto <bb 317>; [INV]
  else
    goto <bb 318>; [INV]

  <bb 317> :
  iftmp.1398 = 1;
  goto <bb 319>; [INV]

  <bb 318> :
  iftmp.1398 = 0;

  <bb 319> :
  retval.1397 = iftmp.1398;
  if (retval.1397 != 0)
    goto <bb 320>; [INV]
  else
    goto <bb 357>; [INV]

  <bb 320> :
  D.256379 = gimple_call_lhs (use_stmt);

  <bb 321> :
  _242 = D.256379;
  D.256380 = check_stmtStack (_242);

  <bb 322> :
  _243 = D.256380;
  retval.1399 = _243 == 0;
  if (retval.1399 != 0)
    goto <bb 323>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 323> :
  D.256381 = gimple_call_lhs (use_stmt);

  <bb 324> :
  _244 = D.256381;
  set_gimple_array (used_stmt, use_stmt, _244, target, 0B);

  <bb 325> :
  D.256382 = gimple_call_lhs (use_stmt);

  <bb 326> :
  _245 = D.256382;
  retval.1400 = target2 != _245;
  if (retval.1400 != 0)
    goto <bb 327>; [INV]
  else
    goto <bb 332>; [INV]

  <bb 327> :
  D.256383 = check_stmtStack2 (use_stmt);

  <bb 328> :
  _246 = D.256383;
  retval.1401 = _246 == 0;
  if (retval.1401 != 0)
    goto <bb 329>; [INV]
  else
    goto <bb 332>; [INV]

  <bb 329> :
  D.256384 = gimple_call_lhs (use_stmt);

  <bb 330> :
  _247 = D.256384;
  D.256385 = gimple_call_lhs (use_stmt);

  <bb 331> :
  _248 = D.256385;
  new_search_imm_use (used_stmt, _248, _247);

  <bb 332> :
  D.256386 = gimple_call_fn (use_stmt);

  <bb 333> :
  _249 = D.256386;
  retval.1402 = _249 != 0B;
  if (retval.1402 != 0)
    goto <bb 334>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 334> :
  D.256387 = gimple_call_fn (use_stmt);

  <bb 335> :
  _250 = D.256387;
  D.256388 = check_stmtStack (_250);

  <bb 336> :
  _251 = D.256388;
  retval.1403 = _251 == 0;
  if (retval.1403 != 0)
    goto <bb 337>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 337> :
  D.256389 = gimple_call_num_args (use_stmt);

  <bb 338> :
  _252 = D.256389;
  retval.1404 = _252 != 0;
  if (retval.1404 != 0)
    goto <bb 339>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 339> :
  i = 0;
  goto <bb 355>; [INV]

  <bb 340> :
  i.1406_253 = (unsigned int) i;
  D.256390 = gimple_call_arg (use_stmt, i.1406_253);

  <bb 341> :
  _254 = D.256390;
  retval.1405 = _254 != 0B;
  if (retval.1405 != 0)
    goto <bb 342>; [INV]
  else
    goto <bb 354>; [INV]

  <bb 342> :
  i.1408_255 = (unsigned int) i;
  D.256391 = gimple_call_arg (use_stmt, i.1408_255);

  <bb 343> :
  _256 = D.256391;
  retval.1407 = target2 != _256;
  if (retval.1407 != 0)
    goto <bb 344>; [INV]
  else
    goto <bb 354>; [INV]

  <bb 344> :
  i.1410_257 = (unsigned int) i;
  D.256392 = gimple_call_arg (use_stmt, i.1410_257);

  <bb 345> :
  _258 = D.256392;
  _259 = _258->base.code;
  retval.1409 = _259 == 153;
  if (retval.1409 != 0)
    goto <bb 346>; [INV]
  else
    goto <bb 354>; [INV]

  <bb 346> :
  i.1412_260 = (unsigned int) i;
  D.256393 = gimple_call_arg (use_stmt, i.1412_260);

  <bb 347> :
  _261 = D.256393;
  D.256394 = check_stmtStack (_261);

  <bb 348> :
  _262 = D.256394;
  retval.1411 = _262 == 0;
  if (retval.1411 != 0)
    goto <bb 349>; [INV]
  else
    goto <bb 354>; [INV]

  <bb 349> :
  i.1414_263 = (unsigned int) i;
  D.256395 = gimple_call_arg (use_stmt, i.1414_263);

  <bb 350> :
  _264 = D.256395;
  retval.1413 = target2 != _264;
  if (retval.1413 != 0)
    goto <bb 351>; [INV]
  else
    goto <bb 354>; [INV]

  <bb 351> :
  i.1415_265 = (unsigned int) i;
  D.256396 = gimple_call_arg (use_stmt, i.1415_265);

  <bb 352> :
  _266 = D.256396;
  i.1416_267 = (unsigned int) i;
  D.256397 = gimple_call_arg (use_stmt, i.1416_267);

  <bb 353> :
  _268 = D.256397;
  new_search_imm_use (used_stmt, _268, _266);

  <bb 354> :
  i = i + 1;

  <bb 355> :
  D.256398 = gimple_call_num_args (use_stmt);

  <bb 356> :
  _269 = D.256398;
  i.1418_270 = (unsigned int) i;
  retval.1417 = _269 > i.1418_270;
  if (retval.1417 != 0)
    goto <bb 340>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 357> :
  D.256399 = gimple_call_fn (use_stmt);

  <bb 358> :
  _271 = D.256399;
  D.256400 = check_stmtStack (_271);

  <bb 359> :
  _272 = D.256400;
  retval.1419 = _272 == 0;
  if (retval.1419 != 0)
    goto <bb 360>; [INV]
  else
    goto <bb 367>; [INV]

  <bb 360> :
  D.256401 = gimple_call_fn (use_stmt);

  <bb 361> :
  _273 = D.256401;
  set_gimple_array (used_stmt, use_stmt, _273, target, 0B);

  <bb 362> :
  D.256402 = gimple_call_fn (use_stmt);

  <bb 363> :
  _274 = D.256402;
  _275 = _274->base.code;
  retval.1420 = _275 == 153;
  if (retval.1420 != 0)
    goto <bb 364>; [INV]
  else
    goto <bb 367>; [INV]

  <bb 364> :
  D.256403 = gimple_call_fn (use_stmt);

  <bb 365> :
  _276 = D.256403;
  D.256404 = gimple_call_fn (use_stmt);

  <bb 366> :
  _277 = D.256404;
  new_search_imm_use (used_stmt, _277, _276);

  <bb 367> :
  D.256405 = gimple_call_arg (use_stmt, 0);

  <bb 368> :
  _278 = D.256405;
  retval.1421 = _278 != 0B;
  if (retval.1421 != 0)
    goto <bb 369>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 369> :
  D.256406 = gimple_call_arg (use_stmt, 0);

  <bb 370> :
  _279 = D.256406;
  D.256407 = check_stmtStack (_279);

  <bb 371> :
  _280 = D.256407;
  retval.1422 = _280 == 0;
  if (retval.1422 != 0)
    goto <bb 372>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 372> :
  D.256408 = gimple_call_arg (use_stmt, 0);

  <bb 373> :
  _281 = D.256408;
  _282 = _281->base.code;
  retval.1423 = _282 == 153;
  if (retval.1423 != 0)
    goto <bb 374>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 374> :
  D.256409 = gimple_call_arg (use_stmt, 0);

  <bb 375> :
  _283 = D.256409;
  debug_tree (_283);

  <bb 376> :
  D.256410 = gimple_call_arg (use_stmt, 0);

  <bb 377> :
  _284 = D.256410;
  _285 = _284->base.code;
  retval.1424 = _285 == 153;
  if (retval.1424 != 0)
    goto <bb 378>; [INV]
  else
    goto <bb 381>; [INV]

  <bb 378> :
  D.256411 = gimple_call_arg (use_stmt, 0);

  <bb 379> :
  _286 = D.256411;
  D.256412 = gimple_call_arg (use_stmt, 0);

  <bb 380> :
  _287 = D.256412;
  new_search_imm_use (used_stmt, _287, _286);

  <bb 381> :
  D.256413 = gimple_call_arg (use_stmt, 0);

  <bb 382> :
  _288 = D.256413;
  def_stmt = _288->ssa_name.def_stmt;
  retval.1425 = is_gimple_assign (def_stmt);
  if (retval.1425 != 0)
    goto <bb 383>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 383> :
  D.256414 = gimple_assign_lhs (def_stmt);

  <bb 384> :
  _289 = D.256414;
  _290 = _289->base.code;
  retval.1426 = _290 == 36;
  if (retval.1426 != 0)
    goto <bb 385>; [INV]
  else
    goto <bb 386>; [INV]

  <bb 385> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 389>; [INV]

  <bb 386> :
  D.256415 = gimple_assign_rhs1 (def_stmt);

  <bb 387> :
  _291 = D.256415;
  _292 = _291->base.code;
  retval.1427 = _292 == 36;
  if (retval.1427 != 0)
    goto <bb 388>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 388> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);

  <bb 389> :

  <bb 390> :
  D.256416 = next_readonly_imm_use (&imm_iter);

  <bb 391> :
  use_p = D.256416;

  <bb 392> :
  _293 = end_readonly_imm_use_p (&imm_iter);
  retval.1428 = ~_293;
  if (retval.1428 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 393>; [INV]

  <bb 393> :
  imm_iter = {CLOBBER};
  goto <bb 395>; [INV]

  <bb 394> :
  imm_iter = {CLOBBER};

  <bb 395> :
<L403>:
  return;

  <bb 396> :
<L404>:
  function_assign_array::~function_assign_array (&assign_array);
  resx 3

  <bb 397> :
<L405>:
  getFunctionAssignVAR = {CLOBBER};
  assign_array = {CLOBBER};
  resx 2

  <bb 398> :
<L406>:
  imm_iter = {CLOBBER};
  resx 1

}



;; Function num_imm_uses (_ZL12num_imm_usesPK9tree_node, funcdef_no=2993, decl_uid=109485, cgraph_uid=2095, symbol_order=2260)

Removing basic block 8
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;;
;; Loop 2
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 4 5
;;
;; Loop 1
;;  header 16, latch 15
;;  depth 1, outer 0
;;  nodes: 16 15 13 14 11 12 9 10
;; 2 succs { 3 8 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 4 17 }
;; 8 succs { 16 }
;; 9 succs { 10 12 }
;; 10 succs { 11 12 }
;; 11 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 }
;; 16 succs { 9 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
unsigned int num_imm_uses (const union tree_node * var)
{
  unsigned int num;
  const struct ssa_use_operand_t * ptr;
  const struct ssa_use_operand_t * const start;
  unsigned int D.256435;
  bool iftmp.1430;
  bool retval.1429;

  <bb 2> :
  start = &var->ssa_name.imm_uses;
  num = 0;
  _1 = global_options.x_flag_var_tracking_assignments;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  ptr = start->next;
  goto <bb 7>; [INV]

  <bb 4> :
  _2 = ptr->loc.stmt;
  if (_2 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  num = num + 1;

  <bb 6> :
  ptr = ptr->next;

  <bb 7> :
  if (ptr != start)
    goto <bb 4>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 8> :
  ptr = start->next;
  goto <bb 16>; [INV]

  <bb 9> :
  _3 = ptr->loc.stmt;
  if (_3 != 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  _4 = ptr->loc.stmt;
  _5 = is_gimple_debug (_4);
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  iftmp.1430 = 1;
  goto <bb 13>; [INV]

  <bb 12> :
  iftmp.1430 = 0;

  <bb 13> :
  retval.1429 = iftmp.1430;
  if (retval.1429 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  num = num + 1;

  <bb 15> :
  ptr = ptr->next;

  <bb 16> :
  if (ptr != start)
    goto <bb 9>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  D.256435 = num;

  <bb 18> :
<L19>:
  return D.256435;

}



;; Function is_gimple_debug (_ZL15is_gimple_debugPK6gimple, funcdef_no=2297, decl_uid=93567, cgraph_uid=1434, symbol_order=1594)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool is_gimple_debug (const struct gimple * gs)
{
  bool D.256437;

  <bb 2> :
  _1 = gimple_code (gs);
  D.256437 = _1 == 2;

  <bb 3> :
<L0>:
  return D.256437;

}



;; Function first_readonly_imm_use (_ZL22first_readonly_imm_useP16imm_use_iteratorP9tree_node, funcdef_no=2988, decl_uid=109451, cgraph_uid=2090, symbol_order=2255)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct ssa_use_operand_t * first_readonly_imm_use (struct imm_use_iterator * imm, union tree_node * var)
{
  struct ssa_use_operand_t * D.256442;
  bool retval.1431;

  <bb 2> :
  _1 = &var->ssa_name.imm_uses;
  imm->end_p = _1;
  _2 = imm->end_p;
  _3 = _2->next;
  imm->imm_use = _3;
  _4 = imm->imm_use;
  _5 = _4->next;
  imm->iter_node.next = _5;
  retval.1431 = end_readonly_imm_use_p (imm);
  if (retval.1431 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.256442 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.256442 = imm->imm_use;

  <bb 5> :
<L2>:
  return D.256442;

}



;; Function gimple_cond_code (_ZL16gimple_cond_codePK6gimple, funcdef_no=2174, decl_uid=93048, cgraph_uid=1311, symbol_order=1471)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
tree_code gimple_cond_code (const struct gimple * gs)
{
  const struct gcond * D.256446;
  const struct gcond * gc;
  tree_code D.256444;

  <bb 2> :
  D.256446 = GIMPLE_CHECK2<const gcond*> (gs);
  gc = D.256446;
  D.256444 = gimple_cond_code (gc);

  <bb 3> :
<L0>:
  return D.256444;

}



;; Function GIMPLE_CHECK2<const gcond*> (_Z13GIMPLE_CHECK2IPK5gcondET_PK6gimple, funcdef_no=7066, decl_uid=93051, cgraph_uid=3698, symbol_order=4484)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcond * GIMPLE_CHECK2<const gcond*> (const struct gimple * gs)
{
  const struct gcond * D.256449;
  const struct gcond * D.256447;

  <bb 2> :
  D.256449 = as_a<const gcond*, const gimple> (gs);
  D.256447 = D.256449;

  <bb 3> :
<L0>:
  return D.256447;

}



;; Function as_a<const gcond*, const gimple> (_Z4as_aIPK5gcondK6gimpleET_PT0_, funcdef_no=8071, decl_uid=207205, cgraph_uid=4703, symbol_order=5492)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcond * as_a<const gcond*, const gimple> (const struct gimple * p)
{
  const struct gcond * D.256452;
  const struct gcond * D.256450;

  <bb 2> :
  D.256452 = is_a_helper<const gcond*>::cast<gimple> (p);
  D.256450 = D.256452;

  <bb 3> :
<L0>:
  return D.256450;

}



;; Function is_a_helper<const gcond*>::cast<gimple> (_ZN11is_a_helperIPK5gcondE4castI6gimpleEES2_PKT_, funcdef_no=8075, decl_uid=207223, cgraph_uid=4707, symbol_order=5496)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcond * is_a_helper<const gcond*>::cast<gimple> (const struct gimple * p)
{
  const struct gcond * D.256453;

  <bb 2> :
  D.256453 = reinterpret_is_a_helper<gcond*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.256453;

}



;; Function reinterpret_is_a_helper<gcond*>::cast<gimple> (_ZN23reinterpret_is_a_helperIP5gcondE4castI6gimpleEES1_PT_, funcdef_no=9048, decl_uid=219664, cgraph_uid=5680, symbol_order=6473)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gcond * reinterpret_is_a_helper<gcond*>::cast<gimple> (struct gimple * p)
{
  struct gcond * D.256455;

  <bb 2> :
  D.256455 = p;

  <bb 3> :
<L0>:
  return D.256455;

}



;; Function gimple_cond_code (_ZL16gimple_cond_codePK5gcond, funcdef_no=2173, decl_uid=93045, cgraph_uid=1310, symbol_order=1470)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
tree_code gimple_cond_code (const struct gcond * gs)
{
  tree_code D.256457;

  <bb 2> :
  _1 = gs->D.90458.D.90144.D.90137.subcode;
  D.256457 = (tree_code) _1;

  <bb 3> :
<L0>:
  return D.256457;

}



;; Function gimple_cond_lhs (_ZL15gimple_cond_lhsPK6gimple, funcdef_no=2177, decl_uid=93063, cgraph_uid=1314, symbol_order=1474)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_cond_lhs (const struct gimple * gs)
{
  const struct gcond * D.256461;
  const struct gcond * gc;
  union tree_node * D.256459;

  <bb 2> :
  D.256461 = GIMPLE_CHECK2<const gcond*> (gs);
  gc = D.256461;
  D.256459 = gimple_cond_lhs (gc);

  <bb 3> :
<L0>:
  return D.256459;

}



;; Function GIMPLE_CHECK2<const gcond*> (_Z13GIMPLE_CHECK2IPK5gcondET_P6gimple, funcdef_no=7779, decl_uid=93053, cgraph_uid=4411, symbol_order=5200)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcond * GIMPLE_CHECK2<const gcond*> (struct gimple * gs)
{
  const struct gcond * D.256464;
  const struct gcond * D.256462;

  <bb 2> :
  D.256464 = as_a<const gcond*, gimple> (gs);
  D.256462 = D.256464;

  <bb 3> :
<L0>:
  return D.256462;

}



;; Function as_a<const gcond*, gimple> (_Z4as_aIPK5gcond6gimpleET_PT0_, funcdef_no=8736, decl_uid=215197, cgraph_uid=5368, symbol_order=6161)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct gcond * as_a<const gcond*, gimple> (struct gimple * p)
{
  const struct gcond * D.256467;
  const struct gcond * D.256465;

  <bb 2> :
  D.256467 = is_a_helper<const gcond*>::cast<gimple> (p);
  D.256465 = D.256467;

  <bb 3> :
<L0>:
  return D.256465;

}



;; Function gimple_cond_rhs (_ZL15gimple_cond_rhsPK5gcond, funcdef_no=2180, decl_uid=93074, cgraph_uid=1317, symbol_order=1477)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_cond_rhs (const struct gcond * gs)
{
  union tree_node * D.256468;

  <bb 2> :
  D.256468 = gs->D.90458.op[1];

  <bb 3> :
<L0>:
  return D.256468;

}



;; Function gimple_cond_lhs (_ZL15gimple_cond_lhsPK5gcond, funcdef_no=2176, decl_uid=93060, cgraph_uid=1313, symbol_order=1473)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_cond_lhs (const struct gcond * gs)
{
  union tree_node * D.256470;

  <bb 2> :
  D.256470 = gs->D.90458.op[0];

  <bb 3> :
<L0>:
  return D.256470;

}



;; Function next_readonly_imm_use (_ZL21next_readonly_imm_useP16imm_use_iterator, funcdef_no=2989, decl_uid=109454, cgraph_uid=2091, symbol_order=2256)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct ssa_use_operand_t * next_readonly_imm_use (struct imm_use_iterator * imm)
{
  static const char __FUNCTION__[22] [value-expr: "next_readonly_imm_use"];
  struct ssa_use_operand_t * old;
  struct ssa_use_operand_t * D.256480;
  bool retval.1432;

  <bb 2> :
  old = imm->imm_use;
  _1 = global_options.x_flag_checking;
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  _2 = imm->iter_node.next;
  _3 = old->next;
  if (_2 != _3)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/ssa-iterators.h", 374, "next_readonly_imm_use");

  <bb 5> :
  _4 = old->next;
  _5 = _4->next;
  imm->iter_node.next = _5;

  <bb 6> :
  _6 = old->next;
  imm->imm_use = _6;
  retval.1432 = end_readonly_imm_use_p (imm);
  if (retval.1432 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  D.256480 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  D.256480 = imm->imm_use;

  <bb 9> :
<L7>:
  return D.256480;

}



;; Function end_readonly_imm_use_p (_ZL22end_readonly_imm_use_pPK16imm_use_iterator, funcdef_no=2987, decl_uid=109447, cgraph_uid=2089, symbol_order=2254)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool end_readonly_imm_use_p (const struct imm_use_iterator * imm)
{
  bool D.256482;

  <bb 2> :
  _1 = imm->imm_use;
  _2 = imm->end_p;
  D.256482 = _1 == _2;

  <bb 3> :
<L0>:
  return D.256482;

}



;; Function check_bbStack (_Z13check_bbStackP15basic_block_def, funcdef_no=6421, decl_uid=196431, cgraph_uid=3397, symbol_order=4175)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int check_bbStack (struct basic_block_def * target)
{
  int o;
  int size;
  int D.256487;
  bool retval.1433;

  <bb 2> :
  _1 = std::vector<basic_block_def*>::size (&new_path_array);
  _2 = (unsigned int) _1;
  _3 = _2 + 4294967295;
  o = (int) _3;
  goto <bb 6>; [INV]

  <bb 3> :
  _4 = (long unsigned int) o;
  _5 = std::vector<basic_block_def*>::operator[] (&new_path_array, _4);
  _6 = *_5;
  target.1434_7 = target;
  retval.1433 = _6 == target.1434_7;
  if (retval.1433 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.256487 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  o = o + -1;

  <bb 6> :
  if (o >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  size = 8;
  totalsize.1435_8 = totalsize;
  _9 = size + totalsize.1435_8;
  totalsize = _9;
  std::vector<basic_block_def*>::push_back (&new_path_array, &target);
  D.256487 = 0;

  <bb 8> :
<L5>:
  return D.256487;

}



;; Function std::vector<basic_block_def*>::size (_ZNKSt6vectorIP15basic_block_defSaIS1_EE4sizeEv, funcdef_no=7780, decl_uid=169935, cgraph_uid=4412, symbol_order=5201)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<basic_block_def*>::size (const struct vector * const this)
{
  size_type D.256489;

  <bb 2> :
  _1 = this->D.170302._M_impl.D.169647._M_finish;
  _2 = this->D.170302._M_impl.D.169647._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  D.256489 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.256489;

}



;; Function std::vector<basic_block_def*>::operator[] (_ZNSt6vectorIP15basic_block_defSaIS1_EEixEm, funcdef_no=7781, decl_uid=169955, cgraph_uid=4413, symbol_order=5202)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * & std::vector<basic_block_def*>::operator[] (struct vector * const this, size_type __n)
{
  struct basic_block_def * & D.256491;

  <bb 2> :
  _1 = this->D.170302._M_impl.D.169647._M_start;
  _2 = __n * 8;
  D.256491 = _1 + _2;

  <bb 3> :
<L0>:
  return D.256491;

}



;; Function std::vector<basic_block_def*>::push_back (_ZNSt6vectorIP15basic_block_defSaIS1_EE9push_backERKS1_, funcdef_no=7782, decl_uid=169982, cgraph_uid=4415, symbol_order=5204)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<basic_block_def*>::push_back (struct vector * const this, struct basic_block_def * const & __x)
{
  struct __normal_iterator D.256496;

  <bb 2> :
  _1 = this->D.170302._M_impl.D.169647._M_finish;
  _2 = this->D.170302._M_impl.D.169647._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.170302._M_impl.D.169647._M_finish;
  _4 = &this->D.170302._M_impl;
  std::allocator_traits<std::allocator<basic_block_def*> >::construct<basic_block_def*, basic_block_def* const&> (_4, _3, __x);
  _5 = this->D.170302._M_impl.D.169647._M_finish;
  _6 = _5 + 8;
  this->D.170302._M_impl.D.169647._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.256496 = std::vector<basic_block_def*>::end (this);
  std::vector<basic_block_def*>::_M_realloc_insert<basic_block_def* const&> (this, D.256496, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<basic_block_def*> >::construct<basic_block_def*, basic_block_def* const&> (_ZNSt16allocator_traitsISaIP15basic_block_defEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_, funcdef_no=8737, decl_uid=215204, cgraph_uid=5369, symbol_order=6162)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<basic_block_def*> >::construct<basic_block_def*, basic_block_def* const&> (struct allocator_type & __a, struct basic_block_def * * __p, struct basic_block_def * const & __args#0)
{
  <bb 2> :
  _1 = std::forward<basic_block_def* const&> (__args#0);
  __gnu_cxx::new_allocator<basic_block_def*>::construct<basic_block_def*, basic_block_def* const&> (__a, __p, _1);
  return;

}



;; Function std::forward<basic_block_def* const&> (_ZSt7forwardIRKP15basic_block_defEOT_RNSt16remove_referenceIS4_E4typeE, funcdef_no=9573, decl_uid=227820, cgraph_uid=6205, symbol_order=6998)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct basic_block_def * const & std::forward<basic_block_def* const&> (struct basic_block_def * const & __t)
{
  struct basic_block_def * const & D.256497;

  <bb 2> :
  D.256497 = __t;

  <bb 3> :
<L0>:
  return D.256497;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::construct<basic_block_def*, basic_block_def* const&> (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defE9constructIS2_JRKS2_EEEvPT_DpOT0_, funcdef_no=9574, decl_uid=227822, cgraph_uid=6206, symbol_order=6999)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<basic_block_def*>::construct<basic_block_def*, basic_block_def* const&> (struct new_allocator * const this, struct basic_block_def * * __p, struct basic_block_def * const & __args#0)
{
  void * D.237642;
  void * D.237641;
  struct basic_block_def * D.237643;

  <bb 2> :
  _1 = std::forward<basic_block_def* const&> (__args#0);
  D.237643 = *_1;
  D.237641 = __p;
  D.237642 = operator new (8, D.237641);
  MEM[(struct basic_block_def * *)D.237642] = D.237643;
  return;

}



;; Function std::vector<basic_block_def*>::end (_ZNSt6vectorIP15basic_block_defSaIS1_EE3endEv, funcdef_no=8738, decl_uid=169915, cgraph_uid=5370, symbol_order=6163)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<basic_block_def*>::end (struct vector * const this)
{
  struct iterator D.227845;
  struct iterator D.256499;

  <bb 2> :
  _1 = &this->D.170302._M_impl.D.169647._M_finish;
  __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::__normal_iterator (&D.227845, _1);
  D.256499 = D.227845;
  D.227845 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256499;

}



;; Function __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS2_SaIS2_EEEC2ERKS3_, funcdef_no=9576, decl_uid=215451, cgraph_uid=6208, symbol_order=7001)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::__normal_iterator (struct __normal_iterator * const this, struct basic_block_def * * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<basic_block_def*>::_M_realloc_insert<basic_block_def* const&> (_ZNSt6vectorIP15basic_block_defSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_, funcdef_no=8739, decl_uid=215470, cgraph_uid=5374, symbol_order=6167)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<basic_block_def*>::_M_realloc_insert<basic_block_def* const&> (struct vector * const this, struct iterator __position, struct basic_block_def * const & __args#0)
{
  struct basic_block_def * * D.256506;
  const size_type D.256505;
  struct basic_block_def * * __new_finish;
  struct basic_block_def * * __new_start;
  const size_type __elems_before;
  struct basic_block_def * * __old_finish;
  struct basic_block_def * * __old_start;
  const size_type __len;
  struct iterator D.227853;

  <bb 2> :
  D.256505 = std::vector<basic_block_def*>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.256505;
  __old_start = this->D.170302._M_impl.D.169647._M_start;
  __old_finish = this->D.170302._M_impl.D.169647._M_finish;
  D.227853 = std::vector<basic_block_def*>::begin (this);
  _1 = __gnu_cxx::operator-<basic_block_def**, std::vector<basic_block_def*> > (&__position, &D.227853);
  __elems_before = (const size_type) _1;
  D.227853 = {CLOBBER};
  _2 = &this->D.170302;
  D.256506 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_allocate (_2, __len);
  __new_start = D.256506;
  __new_finish = __new_start;
  _3 = std::forward<basic_block_def* const&> (__args#0);
  _4 = __elems_before * 8;
  _5 = __new_start + _4;
  _6 = &this->D.170302._M_impl;
  std::allocator_traits<std::allocator<basic_block_def*> >::construct<basic_block_def*, basic_block_def* const&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.170302;
  _8 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<basic_block_def*>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 8;
  _11 = &this->D.170302;
  _12 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<basic_block_def*>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.170302;
  _23 = this->D.170302._M_impl.D.169647._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 8;
  _26 = (long unsigned int) _25;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (_22, __old_start, _26);
  this->D.170302._M_impl.D.169647._M_start = __new_start;
  this->D.170302._M_impl.D.169647._M_finish = __new_finish;
  _27 = __len * 8;
  _28 = __new_start + _27;
  this->D.170302._M_impl.D.169647._M_end_of_storage = _28;
  return;

}



;; Function std::vector<basic_block_def*>::_M_check_len (_ZNKSt6vectorIP15basic_block_defSaIS1_EE12_M_check_lenEmPKc, funcdef_no=9578, decl_uid=170151, cgraph_uid=6210, symbol_order=7003)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<basic_block_def*>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.1438;
  size_type D.256510;
  const long unsigned int D.237652;
  bool retval.1436;

  <bb 2> :
  _1 = std::vector<basic_block_def*>::max_size (this);
  _2 = std::vector<basic_block_def*>::size (this);
  _3 = _1 - _2;
  __n.1437_4 = __n;
  retval.1436 = _3 < __n.1437_4;
  if (retval.1436 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<basic_block_def*>::size (this);
  _6 = std::vector<basic_block_def*>::size (this);
  D.237652 = _6;
  _7 = std::max<long unsigned int> (&D.237652, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.237652 = {CLOBBER};
  _9 = std::vector<basic_block_def*>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<basic_block_def*>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1438 = std::vector<basic_block_def*>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1438 = __len;

  <bb 8> :
  D.256510 = iftmp.1438;

  <bb 9> :
<L6>:
  return D.256510;

}



;; Function std::vector<basic_block_def*>::max_size (_ZNKSt6vectorIP15basic_block_defSaIS1_EE8max_sizeEv, funcdef_no=10206, decl_uid=169937, cgraph_uid=6838, symbol_order=7635)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<basic_block_def*>::max_size (const struct vector * const this)
{
  size_type D.256517;

  <bb 2> :
  _1 = &this->D.170302;
  _2 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_1);
  D.256517 = std::vector<basic_block_def*>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.256517;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseIP15basic_block_defSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=9671, decl_uid=169537, cgraph_uid=6303, symbol_order=7096)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.256519;

  <bb 2> :
  D.256519 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.256519;

}



;; Function std::vector<basic_block_def*>::_S_max_size (_ZNSt6vectorIP15basic_block_defSaIS1_EE11_S_max_sizeERKS2_, funcdef_no=10671, decl_uid=170158, cgraph_uid=7303, symbol_order=8100)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<basic_block_def*>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.256521;

  <bb 2> :
  __diffmax = 1152921504606846975;
  _1 = std::allocator_traits<std::allocator<basic_block_def*> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.256521 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256521;

}



;; Function std::allocator_traits<std::allocator<basic_block_def*> >::max_size (_ZNSt16allocator_traitsISaIP15basic_block_defEE8max_sizeERKS2_, funcdef_no=10890, decl_uid=169472, cgraph_uid=7522, symbol_order=8321)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<basic_block_def*> >::max_size (const struct allocator_type & __a)
{
  size_type D.256524;

  <bb 2> :
  D.256524 = __gnu_cxx::new_allocator<basic_block_def*>::max_size (__a);

  <bb 3> :
<L0>:
  return D.256524;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::max_size (_ZNK9__gnu_cxx13new_allocatorIP15basic_block_defE8max_sizeEv, funcdef_no=10993, decl_uid=169314, cgraph_uid=7625, symbol_order=8424)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<basic_block_def*>::max_size (const struct new_allocator * const this)
{
  size_type D.256526;

  <bb 2> :
  D.256526 = __gnu_cxx::new_allocator<basic_block_def*>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.256526;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIP15basic_block_defE11_M_max_sizeEv, funcdef_no=10673, decl_uid=169333, cgraph_uid=7304, symbol_order=8101)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<basic_block_def*>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.256528;

  <bb 2> :
  D.256528 = 1152921504606846975;

  <bb 3> :
<L0>:
  return D.256528;

}



;; Function std::vector<basic_block_def*>::begin (_ZNSt6vectorIP15basic_block_defSaIS1_EE5beginEv, funcdef_no=9579, decl_uid=169911, cgraph_uid=6211, symbol_order=7004)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<basic_block_def*>::begin (struct vector * const this)
{
  struct iterator D.237654;
  struct iterator D.256530;

  <bb 2> :
  _1 = &this->D.170302._M_impl.D.169647._M_start;
  __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::__normal_iterator (&D.237654, _1);
  D.256530 = D.237654;
  D.237654 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256530;

}



;; Function __gnu_cxx::operator-<basic_block_def**, std::vector<basic_block_def*> > (_ZN9__gnu_cxxmiIPP15basic_block_defSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_, funcdef_no=9580, decl_uid=227854, cgraph_uid=6212, symbol_order=7005)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<basic_block_def**, std::vector<basic_block_def*> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.256533;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.256533 = _5 /[ex] 8;

  <bb 3> :
<L0>:
  return D.256533;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_allocate (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE11_M_allocateEm, funcdef_no=9581, decl_uid=169651, cgraph_uid=6213, symbol_order=7006)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct basic_block_def * * std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct basic_block_def * * D.256541;
  struct basic_block_def * * iftmp.1439;
  struct basic_block_def * * D.256535;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.256541 = std::allocator_traits<std::allocator<basic_block_def*> >::allocate (_1, __n);
  iftmp.1439 = D.256541;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1439 = 0B;

  <bb 5> :
  D.256535 = iftmp.1439;

  <bb 6> :
<L3>:
  return D.256535;

}



;; Function std::allocator_traits<std::allocator<basic_block_def*> >::allocate (_ZNSt16allocator_traitsISaIP15basic_block_defEE8allocateERS2_m, funcdef_no=10207, decl_uid=169452, cgraph_uid=6839, symbol_order=7636)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct basic_block_def * * std::allocator_traits<std::allocator<basic_block_def*> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct basic_block_def * * D.256544;
  struct basic_block_def * * D.256542;

  <bb 2> :
  D.256544 = __gnu_cxx::new_allocator<basic_block_def*>::allocate (__a, __n, 0B);
  D.256542 = D.256544;

  <bb 3> :
<L0>:
  return D.256542;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::allocate (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defE8allocateEmPKv, funcdef_no=10672, decl_uid=169306, cgraph_uid=7305, symbol_order=8102)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct basic_block_def * * __gnu_cxx::new_allocator<basic_block_def*>::allocate (struct new_allocator * const this, size_type __n, const void * D.245960)
{
  struct basic_block_def * * D.256555;
  struct basic_block_def * * D.256554;
  align_val_t __al;
  struct basic_block_def * * D.256552;
  bool retval.1440;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<basic_block_def*>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.1440 = _4 != 0;
  if (retval.1440 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 2305843009213693951)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 8;
  D.256555 = operator new (_6);
  D.256552 = D.256555;

  <bb 7> :
<L6>:
  return D.256552;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=8764, decl_uid=169535, cgraph_uid=5396, symbol_order=6189)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.256556;

  <bb 2> :
  D.256556 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.256556;

}



;; Function __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS2_SaIS2_EEE4baseEv, funcdef_no=9583, decl_uid=215438, cgraph_uid=6215, symbol_order=7008)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * const & __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (const struct __normal_iterator * const this)
{
  struct basic_block_def * * const & D.256558;

  <bb 2> :
  D.256558 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.256558;

}



;; Function std::vector<basic_block_def*>::_S_relocate (_ZNSt6vectorIP15basic_block_defSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_, funcdef_no=9582, decl_uid=169809, cgraph_uid=6214, symbol_order=7007)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::vector<basic_block_def*>::_S_relocate (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.256561;
  struct basic_block_def * * D.256560;

  <bb 2> :
  D.256560 = std::vector<basic_block_def*>::_S_do_relocate (__first, __last, __result, __alloc, D.256561);

  <bb 3> :
<L0>:
  return D.256560;

}



;; Function std::vector<basic_block_def*>::_S_do_relocate (_ZNSt6vectorIP15basic_block_defSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE, funcdef_no=10208, decl_uid=169797, cgraph_uid=6840, symbol_order=7637)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::vector<basic_block_def*>::_S_do_relocate (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result, struct _Tp_alloc_type & __alloc, struct true_type D.242724)
{
  struct basic_block_def * * D.256563;

  <bb 2> :
  D.256563 = std::__relocate_a<basic_block_def**, basic_block_def**, std::allocator<basic_block_def*> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.256563;

}



;; Function std::__relocate_a<basic_block_def**, basic_block_def**, std::allocator<basic_block_def*> > (_ZSt12__relocate_aIPP15basic_block_defS2_SaIS1_EET0_T_S5_S4_RT1_, funcdef_no=10674, decl_uid=228019, cgraph_uid=7306, symbol_order=8103)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__relocate_a<basic_block_def**, basic_block_def**, std::allocator<basic_block_def*> > (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result, struct allocator & __alloc)
{
  struct basic_block_def * * D.256565;

  <bb 2> :
  _1 = std::__niter_base<basic_block_def**> (__result);
  _2 = std::__niter_base<basic_block_def**> (__last);
  _3 = std::__niter_base<basic_block_def**> (__first);
  D.256565 = std::__relocate_a_1<basic_block_def*, basic_block_def*> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.256565;

}



;; Function std::__niter_base<basic_block_def**> (_ZSt12__niter_baseIPP15basic_block_defET_S3_, funcdef_no=10724, decl_uid=228025, cgraph_uid=7356, symbol_order=8153)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__niter_base<basic_block_def**> (struct basic_block_def * * __it)
{
  struct basic_block_def * * D.256567;

  <bb 2> :
  D.256567 = __it;

  <bb 3> :
<L0>:
  return D.256567;

}



;; Function std::__relocate_a_1<basic_block_def*, basic_block_def*> (_ZSt14__relocate_a_1IP15basic_block_defS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E, funcdef_no=10891, decl_uid=228193, cgraph_uid=7523, symbol_order=8322)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct basic_block_def * * std::__relocate_a_1<basic_block_def*, basic_block_def*> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result, struct allocator & D.247021)
{
  ptrdiff_t __count;
  struct basic_block_def * * D.256572;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 8;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.1441_2 = (long unsigned int) __count;
  _3 = __count.1441_2 * 8;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.1442_4 = (long unsigned int) __count;
  _5 = __count.1442_4 * 8;
  D.256572 = __result + _5;

  <bb 5> :
<L3>:
  return D.256572;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE13_M_deallocateEPS1_m, funcdef_no=8406, decl_uid=169654, cgraph_uid=5038, symbol_order=5831)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (struct _Vector_base * const this, struct basic_block_def * * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<basic_block_def*> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<basic_block_def*> >::deallocate (_ZNSt16allocator_traitsISaIP15basic_block_defEE10deallocateERS2_PS1_m, funcdef_no=9211, decl_uid=169459, cgraph_uid=5843, symbol_order=6636)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<basic_block_def*> >::deallocate (struct allocator_type & __a, struct basic_block_def * * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<basic_block_def*>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::deallocate (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defE10deallocateEPS2_m, funcdef_no=9948, decl_uid=169310, cgraph_uid=6580, symbol_order=7377)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<basic_block_def*>::deallocate (struct new_allocator * const this, struct basic_block_def * * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 8;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function check_stmtStack (_Z15check_stmtStackP9tree_node, funcdef_no=6422, decl_uid=186980, cgraph_uid=3398, symbol_order=4176)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int check_stmtStack (union tree_node * target)
{
  int o;
  int size;
  int D.256583;
  bool retval.1443;

  <bb 2> :
  _1 = std::vector<tree_node*>::size (&new_gimpletree_array);
  _2 = (unsigned int) _1;
  _3 = _2 + 4294967295;
  o = (int) _3;
  goto <bb 6>; [INV]

  <bb 3> :
  _4 = (long unsigned int) o;
  _5 = std::vector<tree_node*>::operator[] (&new_gimpletree_array, _4);
  _6 = *_5;
  target.1444_7 = target;
  retval.1443 = _6 == target.1444_7;
  if (retval.1443 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.256583 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  o = o + -1;

  <bb 6> :
  if (o >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  size = 8;
  totalsize.1445_8 = totalsize;
  _9 = size + totalsize.1445_8;
  totalsize = _9;
  std::vector<tree_node*>::push_back (&new_gimpletree_array, &target);
  D.256583 = 0;

  <bb 8> :
<L5>:
  return D.256583;

}



;; Function check_stmtStack2 (_Z16check_stmtStack2P6gimple, funcdef_no=6423, decl_uid=186978, cgraph_uid=3399, symbol_order=4177)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int check_stmtStack2 (struct gimple * stmt)
{
  int o;
  int size;
  int D.256588;
  bool retval.1446;

  <bb 2> :
  _1 = std::vector<gimple*>::size (&new_gimple_array);
  _2 = (unsigned int) _1;
  _3 = _2 + 4294967295;
  o = (int) _3;
  goto <bb 6>; [INV]

  <bb 3> :
  _4 = (long unsigned int) o;
  _5 = std::vector<gimple*>::operator[] (&new_gimple_array, _4);
  _6 = *_5;
  stmt.1447_7 = stmt;
  retval.1446 = _6 == stmt.1447_7;
  if (retval.1446 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.256588 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  o = o + -1;

  <bb 6> :
  if (o >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  size = 8;
  totalsize.1448_8 = totalsize;
  _9 = size + totalsize.1448_8;
  totalsize = _9;
  std::vector<gimple*>::push_back (&new_gimple_array, &stmt);
  D.256588 = 0;

  <bb 8> :
<L5>:
  return D.256588;

}



;; Function std::vector<gimple*>::size (_ZNKSt6vectorIP6gimpleSaIS1_EE4sizeEv, funcdef_no=7784, decl_uid=183617, cgraph_uid=4416, symbol_order=5205)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<gimple*>::size (const struct vector * const this)
{
  size_type D.256590;

  <bb 2> :
  _1 = this->D.183984._M_impl.D.183340._M_finish;
  _2 = this->D.183984._M_impl.D.183340._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  D.256590 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.256590;

}



;; Function std::vector<gimple*>::operator[] (_ZNSt6vectorIP6gimpleSaIS1_EEixEm, funcdef_no=7785, decl_uid=183637, cgraph_uid=4417, symbol_order=5206)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * & std::vector<gimple*>::operator[] (struct vector * const this, size_type __n)
{
  struct gimple * & D.256592;

  <bb 2> :
  _1 = this->D.183984._M_impl.D.183340._M_start;
  _2 = __n * 8;
  D.256592 = _1 + _2;

  <bb 3> :
<L0>:
  return D.256592;

}



;; Function std::vector<gimple*>::push_back (_ZNSt6vectorIP6gimpleSaIS1_EE9push_backERKS1_, funcdef_no=7786, decl_uid=183664, cgraph_uid=4419, symbol_order=5208)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<gimple*>::push_back (struct vector * const this, struct gimple * const & __x)
{
  struct __normal_iterator D.256597;

  <bb 2> :
  _1 = this->D.183984._M_impl.D.183340._M_finish;
  _2 = this->D.183984._M_impl.D.183340._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.183984._M_impl.D.183340._M_finish;
  _4 = &this->D.183984._M_impl;
  std::allocator_traits<std::allocator<gimple*> >::construct<gimple*, gimple* const&> (_4, _3, __x);
  _5 = this->D.183984._M_impl.D.183340._M_finish;
  _6 = _5 + 8;
  this->D.183984._M_impl.D.183340._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.256597 = std::vector<gimple*>::end (this);
  std::vector<gimple*>::_M_realloc_insert<gimple* const&> (this, D.256597, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<gimple*> >::construct<gimple*, gimple* const&> (_ZNSt16allocator_traitsISaIP6gimpleEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_, funcdef_no=8743, decl_uid=215479, cgraph_uid=5375, symbol_order=6168)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<gimple*> >::construct<gimple*, gimple* const&> (struct allocator_type & __a, struct gimple * * __p, struct gimple * const & __args#0)
{
  <bb 2> :
  _1 = std::forward<gimple* const&> (__args#0);
  __gnu_cxx::new_allocator<gimple*>::construct<gimple*, gimple* const&> (__a, __p, _1);
  return;

}



;; Function std::forward<gimple* const&> (_ZSt7forwardIRKP6gimpleEOT_RNSt16remove_referenceIS4_E4typeE, funcdef_no=9585, decl_uid=228345, cgraph_uid=6217, symbol_order=7010)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct gimple * const & std::forward<gimple* const&> (struct gimple * const & __t)
{
  struct gimple * const & D.256598;

  <bb 2> :
  D.256598 = __t;

  <bb 3> :
<L0>:
  return D.256598;

}



;; Function __gnu_cxx::new_allocator<gimple*>::construct<gimple*, gimple* const&> (_ZN9__gnu_cxx13new_allocatorIP6gimpleE9constructIS2_JRKS2_EEEvPT_DpOT0_, funcdef_no=9586, decl_uid=228347, cgraph_uid=6218, symbol_order=7011)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple*>::construct<gimple*, gimple* const&> (struct new_allocator * const this, struct gimple * * __p, struct gimple * const & __args#0)
{
  void * D.237683;
  void * D.237682;
  struct gimple * D.237684;

  <bb 2> :
  _1 = std::forward<gimple* const&> (__args#0);
  D.237684 = *_1;
  D.237682 = __p;
  D.237683 = operator new (8, D.237682);
  MEM[(struct gimple * *)D.237683] = D.237684;
  return;

}



;; Function std::vector<gimple*>::end (_ZNSt6vectorIP6gimpleSaIS1_EE3endEv, funcdef_no=8744, decl_uid=183597, cgraph_uid=5376, symbol_order=6169)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<gimple*>::end (struct vector * const this)
{
  struct iterator D.228370;
  struct iterator D.256600;

  <bb 2> :
  _1 = &this->D.183984._M_impl.D.183340._M_finish;
  __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::__normal_iterator (&D.228370, _1);
  D.256600 = D.228370;
  D.228370 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256600;

}



;; Function __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPP6gimpleSt6vectorIS2_SaIS2_EEEC2ERKS3_, funcdef_no=9588, decl_uid=215716, cgraph_uid=6220, symbol_order=7013)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::__normal_iterator (struct __normal_iterator * const this, struct gimple * * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<gimple*>::_M_realloc_insert<gimple* const&> (_ZNSt6vectorIP6gimpleSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_, funcdef_no=8745, decl_uid=215735, cgraph_uid=5380, symbol_order=6173)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<gimple*>::_M_realloc_insert<gimple* const&> (struct vector * const this, struct iterator __position, struct gimple * const & __args#0)
{
  struct gimple * * D.256607;
  const size_type D.256606;
  struct gimple * * __new_finish;
  struct gimple * * __new_start;
  const size_type __elems_before;
  struct gimple * * __old_finish;
  struct gimple * * __old_start;
  const size_type __len;
  struct iterator D.228378;

  <bb 2> :
  D.256606 = std::vector<gimple*>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.256606;
  __old_start = this->D.183984._M_impl.D.183340._M_start;
  __old_finish = this->D.183984._M_impl.D.183340._M_finish;
  D.228378 = std::vector<gimple*>::begin (this);
  _1 = __gnu_cxx::operator-<gimple**, std::vector<gimple*> > (&__position, &D.228378);
  __elems_before = (const size_type) _1;
  D.228378 = {CLOBBER};
  _2 = &this->D.183984;
  D.256607 = std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_allocate (_2, __len);
  __new_start = D.256607;
  __new_finish = __new_start;
  _3 = std::forward<gimple* const&> (__args#0);
  _4 = __elems_before * 8;
  _5 = __new_start + _4;
  _6 = &this->D.183984._M_impl;
  std::allocator_traits<std::allocator<gimple*> >::construct<gimple*, gimple* const&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.183984;
  _8 = std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<gimple*>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 8;
  _11 = &this->D.183984;
  _12 = std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<gimple*>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.183984;
  _23 = this->D.183984._M_impl.D.183340._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 8;
  _26 = (long unsigned int) _25;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_deallocate (_22, __old_start, _26);
  this->D.183984._M_impl.D.183340._M_start = __new_start;
  this->D.183984._M_impl.D.183340._M_finish = __new_finish;
  _27 = __len * 8;
  _28 = __new_start + _27;
  this->D.183984._M_impl.D.183340._M_end_of_storage = _28;
  return;

}



;; Function std::vector<gimple*>::_M_check_len (_ZNKSt6vectorIP6gimpleSaIS1_EE12_M_check_lenEmPKc, funcdef_no=9590, decl_uid=183833, cgraph_uid=6222, symbol_order=7015)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<gimple*>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.1451;
  size_type D.256611;
  const long unsigned int D.237693;
  bool retval.1449;

  <bb 2> :
  _1 = std::vector<gimple*>::max_size (this);
  _2 = std::vector<gimple*>::size (this);
  _3 = _1 - _2;
  __n.1450_4 = __n;
  retval.1449 = _3 < __n.1450_4;
  if (retval.1449 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<gimple*>::size (this);
  _6 = std::vector<gimple*>::size (this);
  D.237693 = _6;
  _7 = std::max<long unsigned int> (&D.237693, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.237693 = {CLOBBER};
  _9 = std::vector<gimple*>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<gimple*>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1451 = std::vector<gimple*>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1451 = __len;

  <bb 8> :
  D.256611 = iftmp.1451;

  <bb 9> :
<L6>:
  return D.256611;

}



;; Function std::vector<gimple*>::max_size (_ZNKSt6vectorIP6gimpleSaIS1_EE8max_sizeEv, funcdef_no=10210, decl_uid=183619, cgraph_uid=6842, symbol_order=7639)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<gimple*>::max_size (const struct vector * const this)
{
  size_type D.256618;

  <bb 2> :
  _1 = &this->D.183984;
  _2 = std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_1);
  D.256618 = std::vector<gimple*>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.256618;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseIP6gimpleSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=10676, decl_uid=183230, cgraph_uid=7308, symbol_order=8105)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.256620;

  <bb 2> :
  D.256620 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.256620;

}



;; Function std::vector<gimple*>::_S_max_size (_ZNSt6vectorIP6gimpleSaIS1_EE11_S_max_sizeERKS2_, funcdef_no=10675, decl_uid=183840, cgraph_uid=7307, symbol_order=8104)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<gimple*>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.256622;

  <bb 2> :
  __diffmax = 1152921504606846975;
  _1 = std::allocator_traits<std::allocator<gimple*> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.256622 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256622;

}



;; Function std::allocator_traits<std::allocator<gimple*> >::max_size (_ZNSt16allocator_traitsISaIP6gimpleEE8max_sizeERKS2_, funcdef_no=10892, decl_uid=181796, cgraph_uid=7524, symbol_order=8323)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<gimple*> >::max_size (const struct allocator_type & __a)
{
  size_type D.256625;

  <bb 2> :
  D.256625 = __gnu_cxx::new_allocator<gimple*>::max_size (__a);

  <bb 3> :
<L0>:
  return D.256625;

}



;; Function __gnu_cxx::new_allocator<gimple*>::max_size (_ZNK9__gnu_cxx13new_allocatorIP6gimpleE8max_sizeEv, funcdef_no=10994, decl_uid=181638, cgraph_uid=7626, symbol_order=8425)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<gimple*>::max_size (const struct new_allocator * const this)
{
  size_type D.256627;

  <bb 2> :
  D.256627 = __gnu_cxx::new_allocator<gimple*>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.256627;

}



;; Function __gnu_cxx::new_allocator<gimple*>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIP6gimpleE11_M_max_sizeEv, funcdef_no=10678, decl_uid=181657, cgraph_uid=7309, symbol_order=8106)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<gimple*>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.256629;

  <bb 2> :
  D.256629 = 1152921504606846975;

  <bb 3> :
<L0>:
  return D.256629;

}



;; Function std::vector<gimple*>::begin (_ZNSt6vectorIP6gimpleSaIS1_EE5beginEv, funcdef_no=9591, decl_uid=183593, cgraph_uid=6223, symbol_order=7016)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<gimple*>::begin (struct vector * const this)
{
  struct iterator D.237695;
  struct iterator D.256631;

  <bb 2> :
  _1 = &this->D.183984._M_impl.D.183340._M_start;
  __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::__normal_iterator (&D.237695, _1);
  D.256631 = D.237695;
  D.237695 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.256631;

}



;; Function __gnu_cxx::operator-<gimple**, std::vector<gimple*> > (_ZN9__gnu_cxxmiIPP6gimpleSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_, funcdef_no=9592, decl_uid=228379, cgraph_uid=6224, symbol_order=7017)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<gimple**, std::vector<gimple*> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.256634;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.256634 = _5 /[ex] 8;

  <bb 3> :
<L0>:
  return D.256634;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_allocate (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE11_M_allocateEm, funcdef_no=9593, decl_uid=183344, cgraph_uid=6225, symbol_order=7018)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct gimple * * std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct gimple * * D.256642;
  struct gimple * * iftmp.1452;
  struct gimple * * D.256636;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.256642 = std::allocator_traits<std::allocator<gimple*> >::allocate (_1, __n);
  iftmp.1452 = D.256642;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1452 = 0B;

  <bb 5> :
  D.256636 = iftmp.1452;

  <bb 6> :
<L3>:
  return D.256636;

}



;; Function std::allocator_traits<std::allocator<gimple*> >::allocate (_ZNSt16allocator_traitsISaIP6gimpleEE8allocateERS2_m, funcdef_no=10211, decl_uid=181776, cgraph_uid=6843, symbol_order=7640)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct gimple * * std::allocator_traits<std::allocator<gimple*> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct gimple * * D.256645;
  struct gimple * * D.256643;

  <bb 2> :
  D.256645 = __gnu_cxx::new_allocator<gimple*>::allocate (__a, __n, 0B);
  D.256643 = D.256645;

  <bb 3> :
<L0>:
  return D.256643;

}



;; Function __gnu_cxx::new_allocator<gimple*>::allocate (_ZN9__gnu_cxx13new_allocatorIP6gimpleE8allocateEmPKv, funcdef_no=10677, decl_uid=181630, cgraph_uid=7310, symbol_order=8107)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct gimple * * __gnu_cxx::new_allocator<gimple*>::allocate (struct new_allocator * const this, size_type __n, const void * D.245977)
{
  struct gimple * * D.256656;
  struct gimple * * D.256655;
  align_val_t __al;
  struct gimple * * D.256653;
  bool retval.1453;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<gimple*>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.1453 = _4 != 0;
  if (retval.1453 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 2305843009213693951)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 8;
  D.256656 = operator new (_6);
  D.256653 = D.256656;

  <bb 7> :
<L6>:
  return D.256653;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=9596, decl_uid=183228, cgraph_uid=6228, symbol_order=7021)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.256657;

  <bb 2> :
  D.256657 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.256657;

}



;; Function __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPP6gimpleSt6vectorIS2_SaIS2_EEE4baseEv, funcdef_no=9595, decl_uid=215703, cgraph_uid=6227, symbol_order=7020)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * const & __gnu_cxx::__normal_iterator<gimple**, std::vector<gimple*> >::base (const struct __normal_iterator * const this)
{
  struct gimple * * const & D.256659;

  <bb 2> :
  D.256659 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.256659;

}



;; Function std::vector<gimple*>::_S_relocate (_ZNSt6vectorIP6gimpleSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_, funcdef_no=9594, decl_uid=183492, cgraph_uid=6226, symbol_order=7019)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * std::vector<gimple*>::_S_relocate (struct gimple * * __first, struct gimple * * __last, struct gimple * * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.256662;
  struct gimple * * D.256661;

  <bb 2> :
  D.256661 = std::vector<gimple*>::_S_do_relocate (__first, __last, __result, __alloc, D.256662);

  <bb 3> :
<L0>:
  return D.256661;

}



;; Function std::vector<gimple*>::_S_do_relocate (_ZNSt6vectorIP6gimpleSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE, funcdef_no=10212, decl_uid=183480, cgraph_uid=6844, symbol_order=7641)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * std::vector<gimple*>::_S_do_relocate (struct gimple * * __first, struct gimple * * __last, struct gimple * * __result, struct _Tp_alloc_type & __alloc, struct true_type D.242736)
{
  struct gimple * * D.256664;

  <bb 2> :
  D.256664 = std::__relocate_a<gimple**, gimple**, std::allocator<gimple*> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.256664;

}



;; Function std::__relocate_a<gimple**, gimple**, std::allocator<gimple*> > (_ZSt12__relocate_aIPP6gimpleS2_SaIS1_EET0_T_S5_S4_RT1_, funcdef_no=10679, decl_uid=228544, cgraph_uid=7311, symbol_order=8108)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * std::__relocate_a<gimple**, gimple**, std::allocator<gimple*> > (struct gimple * * __first, struct gimple * * __last, struct gimple * * __result, struct allocator & __alloc)
{
  struct gimple * * D.256666;

  <bb 2> :
  _1 = std::__niter_base<gimple**> (__result);
  _2 = std::__niter_base<gimple**> (__last);
  _3 = std::__niter_base<gimple**> (__first);
  D.256666 = std::__relocate_a_1<gimple*, gimple*> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.256666;

}



;; Function std::__niter_base<gimple**> (_ZSt12__niter_baseIPP6gimpleET_S3_, funcdef_no=10893, decl_uid=228550, cgraph_uid=7525, symbol_order=8324)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * std::__niter_base<gimple**> (struct gimple * * __it)
{
  struct gimple * * D.256668;

  <bb 2> :
  D.256668 = __it;

  <bb 3> :
<L0>:
  return D.256668;

}



;; Function std::__relocate_a_1<gimple*, gimple*> (_ZSt14__relocate_a_1IP6gimpleS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E, funcdef_no=10894, decl_uid=228718, cgraph_uid=7526, symbol_order=8325)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct gimple * * std::__relocate_a_1<gimple*, gimple*> (struct gimple * * __first, struct gimple * * __last, struct gimple * * __result, struct allocator & D.247031)
{
  ptrdiff_t __count;
  struct gimple * * D.256673;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 8;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.1454_2 = (long unsigned int) __count;
  _3 = __count.1454_2 * 8;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.1455_4 = (long unsigned int) __count;
  _5 = __count.1455_4 * 8;
  D.256673 = __result + _5;

  <bb 5> :
<L3>:
  return D.256673;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_deallocate (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE13_M_deallocateEPS1_m, funcdef_no=8386, decl_uid=183347, cgraph_uid=5018, symbol_order=5811)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_deallocate (struct _Vector_base * const this, struct gimple * * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<gimple*> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<gimple*> >::deallocate (_ZNSt16allocator_traitsISaIP6gimpleEE10deallocateERS2_PS1_m, funcdef_no=9203, decl_uid=181783, cgraph_uid=5835, symbol_order=6628)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<gimple*> >::deallocate (struct allocator_type & __a, struct gimple * * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple*>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple*>::deallocate (_ZN9__gnu_cxx13new_allocatorIP6gimpleE10deallocateEPS2_m, funcdef_no=9946, decl_uid=181634, cgraph_uid=6578, symbol_order=7375)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<gimple*>::deallocate (struct new_allocator * const this, struct gimple * * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 8;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function check_stmtStack3 (_Z16check_stmtStack3P9tree_node, funcdef_no=6424, decl_uid=186976, cgraph_uid=3400, symbol_order=4178)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int check_stmtStack3 (union tree_node * target)
{
  int o;
  int D.256684;
  bool retval.1456;

  <bb 2> :
  _1 = std::vector<tree_node*>::size (&new_gimpletree_array);
  _2 = (unsigned int) _1;
  _3 = _2 + 4294967295;
  o = (int) _3;
  goto <bb 6>; [INV]

  <bb 3> :
  _4 = (long unsigned int) o;
  _5 = std::vector<tree_node*>::operator[] (&new_gimpletree_array, _4);
  _6 = *_5;
  retval.1456 = target == _6;
  if (retval.1456 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.256684 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  o = o + -1;

  <bb 6> :
  if (o >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  D.256684 = 0;

  <bb 8> :
<L5>:
  return D.256684;

}



;; Function check_stmtStack4 (_Z16check_stmtStack4P6gimple, funcdef_no=6425, decl_uid=186974, cgraph_uid=3401, symbol_order=4179)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int check_stmtStack4 (struct gimple * stmt)
{
  int o;
  int D.256689;
  bool retval.1457;

  <bb 2> :
  _1 = std::vector<gimple*>::size (&new_gimple_array);
  _2 = (unsigned int) _1;
  _3 = _2 + 4294967295;
  o = (int) _3;
  goto <bb 6>; [INV]

  <bb 3> :
  _4 = (long unsigned int) o;
  _5 = std::vector<gimple*>::operator[] (&new_gimple_array, _4);
  _6 = *_5;
  retval.1457 = stmt == _6;
  if (retval.1457 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.256689 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  o = o + -1;

  <bb 6> :
  if (o >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  D.256689 = 0;

  <bb 8> :
<L5>:
  return D.256689;

}



;; Function Checknew_search_imm_use_lhs (_Z27Checknew_search_imm_use_lhsP12gimple_arrayP6gimpleP9tree_nodeS4_, funcdef_no=6426, decl_uid=186972, cgraph_uid=3402, symbol_order=4180)

Removing basic block 14
Removing basic block 15
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 14 }
;; 5 succs { 6 14 }
;; 6 succs { 7 8 }
;; 7 succs { 14 }
;; 8 succs { 9 10 }
;; 9 succs { 14 }
;; 10 succs { 11 12 }
;; 11 succs { 14 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void Checknew_search_imm_use_lhs (struct gimple_array * used_stmt, struct gimple * use_stmt, union tree_node * target, union tree_node * target2)
{
  union tree_node * D.256722;
  union tree_node * D.256721;
  union tree_node * D.256720;
  union tree_node * D.256719;
  union tree_node * D.256718;
  union tree_node * D.256717;
  struct gimple * def_stmt;
  struct gimple * def_stmt;
  bool retval.1462;
  bool retval.1461;
  bool retval.1460;
  bool retval.1459;
  bool retval.1458;

  <bb 2> :
  def_stmt = use_stmt;
  D.256717 = gimple_assign_lhs (use_stmt);
  _1 = D.256717;
  _2 = _1->base.code;
  retval.1458 = _2 == 153;
  if (retval.1458 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.256718 = gimple_assign_lhs (use_stmt);
  _3 = D.256718;
  def_stmt = _3->ssa_name.def_stmt;

  <bb 4> :
  if (def_stmt != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 5> :
  D.256719 = gimple_assign_lhs (def_stmt);
  _4 = D.256719;
  retval.1459 = _4 != 0B;
  if (retval.1459 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 6> :
  D.256720 = gimple_assign_lhs (def_stmt);
  _5 = D.256720;
  _6 = _5->base.code;
  retval.1460 = _6 == 49;
  if (retval.1460 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 14>; [INV]

  <bb 8> :
  D.256721 = gimple_assign_lhs (def_stmt);
  _7 = D.256721;
  _8 = _7->base.code;
  retval.1461 = _8 == 47;
  if (retval.1461 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 14>; [INV]

  <bb 10> :
  D.256722 = gimple_assign_lhs (def_stmt);
  _9 = D.256722;
  _10 = _9->base.code;
  retval.1462 = _10 == 165;
  if (retval.1462 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 14>; [INV]

  <bb 12> :
  _11 = target->base.code;
  if (_11 == 36)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  Varnew_search_imm_use (used_stmt, use_stmt, target, target2);

  <bb 14> :
  return;

}



;; Function Checknew_search_imm_use_rhs (_Z27Checknew_search_imm_use_rhsP12gimple_arrayP6gimpleP9tree_nodeS4_, funcdef_no=6427, decl_uid=186967, cgraph_uid=3403, symbol_order=4181)

Removing basic block 14
Removing basic block 15
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 14 }
;; 5 succs { 6 14 }
;; 6 succs { 7 8 }
;; 7 succs { 14 }
;; 8 succs { 9 10 }
;; 9 succs { 14 }
;; 10 succs { 11 12 }
;; 11 succs { 14 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void Checknew_search_imm_use_rhs (struct gimple_array * used_stmt, struct gimple * use_stmt, union tree_node * target, union tree_node * target2)
{
  union tree_node * D.256754;
  union tree_node * D.256753;
  union tree_node * D.256752;
  union tree_node * D.256751;
  union tree_node * D.256750;
  union tree_node * D.256749;
  struct gimple * def_stmt;
  bool retval.1467;
  bool retval.1466;
  bool retval.1465;
  bool retval.1464;
  bool retval.1463;

  <bb 2> :
  def_stmt = use_stmt;
  D.256749 = gimple_assign_rhs1 (use_stmt);
  _1 = D.256749;
  _2 = _1->base.code;
  retval.1463 = _2 == 153;
  if (retval.1463 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.256750 = gimple_assign_rhs1 (use_stmt);
  _3 = D.256750;
  def_stmt = _3->ssa_name.def_stmt;

  <bb 4> :
  if (def_stmt != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 5> :
  D.256751 = gimple_assign_rhs1 (def_stmt);
  _4 = D.256751;
  retval.1464 = _4 != 0B;
  if (retval.1464 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 6> :
  D.256752 = gimple_assign_rhs1 (def_stmt);
  _5 = D.256752;
  _6 = _5->base.code;
  retval.1465 = _6 == 49;
  if (retval.1465 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 14>; [INV]

  <bb 8> :
  D.256753 = gimple_assign_rhs1 (def_stmt);
  _7 = D.256753;
  _8 = _7->base.code;
  retval.1466 = _8 == 47;
  if (retval.1466 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 14>; [INV]

  <bb 10> :
  D.256754 = gimple_assign_rhs1 (def_stmt);
  _9 = D.256754;
  _10 = _9->base.code;
  retval.1467 = _10 == 165;
  if (retval.1467 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  Varnew_search_imm_use (used_stmt, def_stmt, target, target2);
  goto <bb 14>; [INV]

  <bb 12> :
  _11 = target->base.code;
  if (_11 == 36)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  Varnew_search_imm_use (used_stmt, use_stmt, target, target2);

  <bb 14> :
  return;

}



;; Function prechecktree (_Z12prechecktreeP9tree_node, funcdef_no=6428, decl_uid=186954, cgraph_uid=3404, symbol_order=4183)

Removing basic block 7
Removing basic block 8
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 7 }
;; 3 succs { 4 7 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
union tree_node * prechecktree (union tree_node * tree)
{
  union tree_node * D.256763;

  <bb 2> :
  if (tree != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  _1 = tree->base.code;
  if (_1 == 131)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  _2 = tree->exp.operands[0];
  gettree = _2;
  gettree.1468_3 = gettree;
  if (gettree.1468_3 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  gettree.1469_4 = gettree;
  _5 = gettree.1469_4->base.code;
  if (_5 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  D.256763 = gettree;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 7> :
  D.256763 = tree;

  <bb 8> :
<L10>:
  return D.256763;

}



;; Function check_bbinfo (_Z12check_bbinfoP11cgraph_nodeP15basic_block_def, funcdef_no=6429, decl_uid=186962, cgraph_uid=3405, symbol_order=4184)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
;;
;; Loop 1
;;  header 23, latch 22
;;  depth 1, outer 0
;;  nodes: 23 22 4 21 17 20 18 19 15 16 14 13 9 12 10 11 7 8 6 5
;; 2 succs { 3 28 }
;; 3 succs { 23 }
;; 4 succs { 5 22 }
;; 5 succs { 7 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 13 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { 15 14 }
;; 14 succs { 15 16 }
;; 15 succs { 17 }
;; 16 succs { 17 }
;; 17 succs { 18 21 }
;; 18 succs { 19 20 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 4 24 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 28 }
;; 28 succs { 1 }
void check_bbinfo (struct cgraph_node * m, struct basic_block_def * bb)
{
  bool D.256808;
  bool D.256807;
  struct function * D.256806;
  struct symbolicinfo * D.256805;
  struct symbolicinfo * D.256804;
  struct symbolicinfo * symbolicinfotmp;
  int o;
  int find_path_constraint;
  bool retval.1481;
  bool retval.1480;
  bool iftmp.1479;
  bool retval.1478;
  bool retval.1477;
  bool iftmp.1476;
  bool retval.1475;
  bool retval.1472;

  <bb 2> :
  pathconstraint.1470_1 = pathconstraint;
  if (pathconstraint.1470_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 3> :
  find_path_constraint = 0;
  stderr.1471_2 = stderr;
  __builtin_fwrite ("=======================Path Constaint===========================\n\n", 1, 66, stderr.1471_2);
  o = 0;
  goto <bb 23>; [INV]

  <bb 4> :
  syminfo.1473_3 = syminfo;
  _4 = (long unsigned int) o;
  _5 = std::vector<basic_block_def*>::operator[] (&symbolicExecution, _4);
  D.256804 = hash_map<basic_block_def*, symbolicinfo>::get (syminfo.1473_3, _5);
  _6 = D.256804;
  retval.1472 = _6 != 0B;
  if (retval.1472 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 5> :
  syminfo.1474_7 = syminfo;
  _8 = (long unsigned int) o;
  _9 = std::vector<basic_block_def*>::operator[] (&symbolicExecution, _8);
  D.256805 = hash_map<basic_block_def*, symbolicinfo>::get (syminfo.1474_7, _9);
  symbolicinfotmp = D.256805;
  _10 = symbolicinfotmp->node;
  D.256806 = cgraph_node::get_fun (_10);
  _11 = D.256806;
  push_cfun (_11);
  calculate_dominance_info (1);
  _12 = symbolicinfotmp->cond_truebranch;
  if (bb == _12)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _13 = symbolicinfotmp->cond_truebranch;
  D.256807 = dominated_by_p (1, bb, _13);
  _14 = D.256807;
  if (_14 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1476 = 1;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.1476 = 0;

  <bb 9> :
  retval.1475 = iftmp.1476;
  if (retval.1475 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  _15 = symbolicinfotmp->cond_stmt;
  gimple_location_safe (_15);
  retval.1477 = 1;
  if (retval.1477 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _16 = symbolicinfotmp->cond_stmt;
  debug_gimple_stmt (_16);

  <bb 12> :
  _17 = symbolicinfotmp->cond_stmt;
  _18 = gimple_location_safe (_17);
  warning_at (_18, 0, "use location");
  find_path_constraint = find_path_constraint + 1;

  <bb 13> :
  _19 = symbolicinfotmp->cond_falsebranch;
  if (bb == _19)
    goto <bb 15>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  _20 = symbolicinfotmp->cond_falsebranch;
  D.256808 = dominated_by_p (1, bb, _20);
  _21 = D.256808;
  if (_21 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  iftmp.1479 = 1;
  goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1479 = 0;

  <bb 17> :
  retval.1478 = iftmp.1479;
  if (retval.1478 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _22 = symbolicinfotmp->cond_stmt;
  gimple_location_safe (_22);
  retval.1480 = 1;
  if (retval.1480 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  _23 = symbolicinfotmp->cond_stmt;
  debug_gimple_stmt (_23);

  <bb 20> :
  _24 = symbolicinfotmp->cond_stmt;
  _25 = gimple_location_safe (_24);
  warning_at (_25, 0, "use location");
  find_path_constraint = find_path_constraint + 1;

  <bb 21> :
  pop_cfun ();

  <bb 22> :
  o = o + 1;

  <bb 23> :
  _26 = (long unsigned int) o;
  _27 = std::vector<basic_block_def*>::size (&symbolicExecution);
  retval.1481 = _26 < _27;
  if (retval.1481 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  if (find_path_constraint == 0)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  stderr.1482_28 = stderr;
  __builtin_fwrite ("=======================NO find Path Constaint===========================\n\n", 1, 74, stderr.1482_28);
  goto <bb 27>; [INV]

  <bb 26> :
  stderr.1483_29 = stderr;
  fprintf (stderr.1483_29, "=======================Path Constaint=====%d======================\n\n", find_path_constraint);

  <bb 27> :
  stderr.1484_30 = stderr;
  __builtin_fwrite ("=======================Path Constaint===========================\n\n", 1, 66, stderr.1484_30);

  <bb 28> :
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::get (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3getERKS1_, funcdef_no=7788, decl_uid=196593, cgraph_uid=4420, symbol_order=5209)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct symbolicinfo * hash_map<basic_block_def*, symbolicinfo>::get (struct hash_map * const this, struct basic_block_def * const & k)
{
  bool D.256817;
  struct hash_entry & D.256816;
  unsigned int D.256815;
  struct hash_entry & e;
  struct symbolicinfo * iftmp.1485;
  struct symbolicinfo * D.256809;

  <bb 2> :
  _1 = &this->m_table;
  D.256815 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::hash (k);
  _2 = D.256815;
  D.256816 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_with_hash (_1, k, _2);
  e = D.256816;
  D.256817 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (e);
  _3 = D.256817;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.1485 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1485 = &e->m_value;

  <bb 5> :
  D.256809 = iftmp.1485;

  <bb 6> :
<L3>:
  return D.256809;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE4hashERKS2_, funcdef_no=8749, decl_uid=196549, cgraph_uid=5381, symbol_order=6174)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::hash (struct basic_block_def * const & h)
{
  hashval_t D.256818;

  <bb 2> :
  D.256818 = pointer_hash<basic_block_def>::hash (h);

  <bb 3> :
<L0>:
  return D.256818;

}



;; Function pointer_hash<basic_block_def>::hash (_ZN12pointer_hashI15basic_block_defE4hashERKPS0_, funcdef_no=9598, decl_uid=196506, cgraph_uid=6230, symbol_order=7023)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t pointer_hash<basic_block_def>::hash (struct basic_block_def * const & candidate)
{
  hashval_t D.256820;

  <bb 2> :
  _1 = *candidate;
  _2 = (long int) _1;
  _3 = _2 >> 3;
  D.256820 = (hashval_t) _3;

  <bb 3> :
<L0>:
  return D.256820;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_with_hash (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE14find_with_hashERKS2_j, funcdef_no=8750, decl_uid=196736, cgraph_uid=5382, symbol_order=6175)

Removing basic block 3
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 20
;;  depth 1, outer 0
;;  nodes: 11 20 18 16 17 14 15 13 12
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 16 14 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 11 }
;; 21 succs { 1 }
struct value_type & hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_with_hash (struct hash_table * const this, struct basic_block_def * const & comparable, hashval_t hash)
{
  bool D.256854;
  bool D.256853;
  bool D.256852;
  bool D.256851;
  bool D.256850;
  bool D.256849;
  struct value_type * D.256848;
  hashval_t hash2;
  struct value_type * entry;
  hashval_t index;
  size_t size;
  bool iftmp.1489;
  bool retval.1488;
  struct value_type & D.256834;
  bool iftmp.1487;
  bool retval.1486;

  <bb 2> :
  _1 = this->m_searches;
  _2 = _1 + 1;
  this->m_searches = _2;
  size = this->m_size;
  _3 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _3);

  <bb 3> :
  _5 = this->m_entries;
  _6 = (long unsigned int) index;
  _7 = _6 * 168;
  entry = _5 + _7;
  D.256849 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (entry);
  _8 = D.256849;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  D.256850 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (entry);
  _9 = D.256850;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  D.256851 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (entry, comparable);
  _11 = D.256851;
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1487 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1487 = 0;

  <bb 8> :
  retval.1486 = iftmp.1487;
  if (retval.1486 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.256834 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _12 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _12);

  <bb 11> :
  _13 = this->m_collisions;
  _14 = _13 + 1;
  this->m_collisions = _14;
  index = index + hash2;
  _15 = (long unsigned int) index;
  if (size <= _15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = (unsigned int) size;
  index = index - _16;

  <bb 13> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 168;
  entry = _17 + _19;
  D.256852 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (entry);
  _20 = D.256852;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.256853 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (entry);
  _21 = D.256853;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  D.256854 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (entry, comparable);
  _23 = D.256854;
  if (_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1489 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.1489 = 0;

  <bb 18> :
  retval.1488 = iftmp.1489;
  if (retval.1488 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.256834 = entry;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 11>; [INV]

  <bb 21> :
<L21>:
  return D.256834;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8944, decl_uid=196832, cgraph_uid=5576, symbol_order=6369)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.256857;
  bool D.256855;

  <bb 2> :
  D.256857 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_empty (v);
  D.256855 = D.256857;

  <bb 3> :
<L0>:
  return D.256855;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_empty (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8827, decl_uid=196662, cgraph_uid=5459, symbol_order=6252)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.256860;
  bool D.256858;

  <bb 2> :
  D.256860 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (e);
  D.256858 = D.256860;

  <bb 3> :
<L0>:
  return D.256858;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8945, decl_uid=196830, cgraph_uid=5577, symbol_order=6370)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.256863;
  bool D.256861;

  <bb 2> :
  D.256863 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_deleted (v);
  D.256861 = D.256863;

  <bb 3> :
<L0>:
  return D.256861;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_deleted (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9797, decl_uid=196657, cgraph_uid=6429, symbol_order=7222)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.256866;
  bool D.256864;

  <bb 2> :
  D.256866 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_deleted<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (e);
  D.256864 = D.256866;

  <bb 3> :
<L0>:
  return D.256864;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_deleted<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10363, decl_uid=239662, cgraph_uid=6995, symbol_order=7792)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_deleted<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (const struct hash_entry & entry)
{
  bool D.256867;

  <bb 2> :
  _1 = entry->m_key;
  D.256867 = pointer_hash<basic_block_def>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.256867;

}



;; Function pointer_hash<basic_block_def>::is_deleted (_ZN12pointer_hashI15basic_block_defE10is_deletedEPS0_, funcdef_no=10785, decl_uid=196516, cgraph_uid=7417, symbol_order=8214)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<basic_block_def>::is_deleted (struct basic_block_def * e)
{
  bool D.256869;

  <bb 2> :
  D.256869 = e == 1B;

  <bb 3> :
<L0>:
  return D.256869;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9600, decl_uid=196650, cgraph_uid=6232, symbol_order=7025)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (const struct hash_entry & a, struct basic_block_def * const & b)
{
  bool D.256873;
  bool D.256871;

  <bb 2> :
  _1 = &a->m_key;
  D.256873 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::equal_keys (_1, b);
  D.256871 = D.256873;

  <bb 3> :
<L0>:
  return D.256871;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE10equal_keysERKS2_S7_, funcdef_no=10216, decl_uid=196551, cgraph_uid=6848, symbol_order=7645)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::equal_keys (struct basic_block_def * const & k1, struct basic_block_def * const & k2)
{
  bool D.256874;

  <bb 2> :
  D.256874 = pointer_hash<basic_block_def>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.256874;

}



;; Function pointer_hash<basic_block_def>::equal (_ZN12pointer_hashI15basic_block_defE5equalERKPS0_S4_, funcdef_no=10686, decl_uid=196508, cgraph_uid=7318, symbol_order=8115)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<basic_block_def>::equal (struct basic_block_def * const & existing, struct basic_block_def * const & candidate)
{
  bool D.256876;

  <bb 2> :
  _1 = *existing;
  _2 = *candidate;
  D.256876 = _1 == _2;

  <bb 3> :
<L0>:
  return D.256876;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=8751, decl_uid=215742, cgraph_uid=5383, symbol_order=6176)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::is_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (const struct hash_entry & entry)
{
  bool D.256878;

  <bb 2> :
  _1 = entry->m_key;
  D.256878 = pointer_hash<basic_block_def>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.256878;

}



;; Function pointer_hash<basic_block_def>::is_empty (_ZN12pointer_hashI15basic_block_defE8is_emptyEPS0_, funcdef_no=9601, decl_uid=196518, cgraph_uid=6233, symbol_order=7026)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<basic_block_def>::is_empty (struct basic_block_def * e)
{
  bool D.256880;

  <bb 2> :
  D.256880 = e == 0B;

  <bb 3> :
<L0>:
  return D.256880;

}



;; Function checkPointerConstraint (_Z22checkPointerConstraintP9tree_nodeP3ptbP12gimple_arrayS0_i, funcdef_no=6787, decl_uid=186996, cgraph_uid=3441, symbol_order=4220)

Removing basic block 57
Removing basic block 58
Removing basic block 59
Removing basic block 68
Removing basic block 69
Removing basic block 82
Removing basic block 83
Removing basic block 84
Removing basic block 85
Removing basic block 86
Removing basic block 112
Removing basic block 118
Removing basic block 141
Removing basic block 150
Removing basic block 174
Removing basic block 175
Removing basic block 176
Removing basic block 192
Removing basic block 193
Removing basic block 203
Removing basic block 210
Removing basic block 211
Removing basic block 224
Removing basic block 225
Removing basic block 241
Removing basic block 242
Removing basic block 243
Removing basic block 244
Removing basic block 245
Removing basic block 246
Removing basic block 253
Removing basic block 289
Removing basic block 290
Removing basic block 295
Removing basic block 296
Removing basic block 297
Removing basic block 303
Removing basic block 340
Removing basic block 349
Removing basic block 364
Removing basic block 367
Removing basic block 370
Removing basic block 377
Removing basic block 383
Removing basic block 389
Removing basic block 398
Removing basic block 400
Removing basic block 401
Removing basic block 404
Removing basic block 418
Removing basic block 437
Removing basic block 438
Removing basic block 458
Removing basic block 474
Removing basic block 477
Removing basic block 486
Removing basic block 489
Removing basic block 490
Removing basic block 491
Removing basic block 501
Removing basic block 502
Removing basic block 517
Removing basic block 518
Removing basic block 526
Removing basic block 530
Removing basic block 531
Removing basic block 536
Removing basic block 546
Removing basic block 554
Removing basic block 555
Removing basic block 557
Removing basic block 558
Removing basic block 559
Removing basic block 583
Removing basic block 584
Removing basic block 601
Removing basic block 603
Removing basic block 609
Removing basic block 610
Removing basic block 611
Removing basic block 632
Removing basic block 634
Removing basic block 658
Removing basic block 667
Removing basic block 668
Removing basic block 689
Removing basic block 707
Removing basic block 711
Removing basic block 712
Removing basic block 713
Removing basic block 721
Removing basic block 722
Removing basic block 727
Removing basic block 728
Removing basic block 736
Removing basic block 753
Removing basic block 756
Removing basic block 757
Removing basic block 758
Removing basic block 766
Removing basic block 778
Removing basic block 782
Removing basic block 786
Removing basic block 796
Removing basic block 799
Removing basic block 801
Removing basic block 812
Removing basic block 817
Removing basic block 820
Removing basic block 825
Removing basic block 831
Removing basic block 839
Removing basic block 841
Removing basic block 850
Removing basic block 856
Removing basic block 859
Removing basic block 865
Removing basic block 866
Removing basic block 871
Merging blocks 872 and 874
Merging blocks 873 and 944
Removing basic block 875
Removing basic block 923
Removing basic block 924
Removing basic block 935
Removing basic block 936
Removing basic block 937
Removing basic block 942
;; 21 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 3
;;  header 821, latch 820
;;  depth 1, outer 0
;;  nodes
;;
;; Loop 18
;;  header 815, latch 814
;;  depth 2, outer 3
;;  nodes: 815 814 813 757 812 758 811 773 801 791 777 776 775 774 790 789 780 788 786 787 785 784 783 782 781 779 778 800 799 798 797 796 795 794 793 792 771 772 767 769 768 766 764 765 760 762 761 759 763 770 810 809 808 807 806 805 804 803 802
;;
;; Loop 19
;;  header 813, latch 812
;;  depth 3, outer 18
;;  nodes: 813 812 758 811 773 801 791 777 776 775 774 790 789 780 788 786 787 785 784 783 782 781 779 778 800 799 798 797 796 795 794 793 792 771 772 767 769 768 766 764 765 760 762 761 759 763 770 810 809 808 807 806 805 804 803 802
;;
;; Loop 20
;;  header 789, latch 788
;;  depth 4, outer 19
;;  nodes: 789 788 786 787 785 784 783 782 781 790
;;
;; Loop 10
;;  header 700, latch 699
;;  depth 2, outer 3
;;  nodes: 700 699 698
;;
;; Loop 9
;;  header 666, latch 665
;;  depth 2, outer 3
;;  nodes: 666 665 663 664 662 661 592 660 595 603 623 630 634 659 597 637 636 635 606 633 631 624 629 628 627 626 625 609 622 610 611 621 613 620 619 614 618 616 617 615 612 608 607 632 605 604 598 602 601 600 599 596 657 658 656 655 654 653 652 651 650 649 648 647 646 645 644 643 642 640 641 639 638 594 593
;;
;; Loop 11
;;  header 661, latch 660
;;  depth 3, outer 9
;;  nodes: 661 660 595 603 623 630 634 659 597 637 636 635 606 633 631 624 629 628 627 626 625 609 622 610 611 621 613 620 619 614 618 616 617 615 612 608 607 632 605 604 598 602 601 600 599 596 657 658 656 655 654 653 652 651 650 649 648 647 646 645 644 643 642 640 641 639 638 594 593
;;
;; Loop 12
;;  header 619, latch 618
;;  depth 4, outer 11
;;  nodes: 619 618 616 617 615 620
;;
;; Loop 8
;;  header 582, latch 581
;;  depth 2, outer 3
;;  nodes: 582 581 568 580 579 578 577 575 576 573 569 572 571 570 574 567
;;
;; Loop 7
;;  header 551, latch 550
;;  depth 2, outer 3
;;  nodes: 551 550 549 548 547 546 545 544 543 542 541
;;
;; Loop 6
;;  header 528, latch 527
;;  depth 2, outer 3
;;  nodes: 528 527 516 526 524 525 523 522 521 520 519 518 517 515
;;
;; Loop 5
;;  header 513, latch 512
;;  depth 2, outer 3
;;  nodes: 513 512 511 505 510 506 509 508 507 504
;;
;; Loop 13
;;  header 511, latch 510
;;  depth 3, outer 5
;;  nodes: 511 510 506 509 508 507
;;
;; Loop 4
;;  header 493, latch 492
;;  depth 2, outer 3
;;  nodes
;;
;; Loop 14
;;  header 182, latch 181
;;  depth 3, outer 4
;;  nodes: 182 181 180 179 120 178 177 176 121 175 133 174 139 144 142 143 141 140 137 138 134 136 135 173 172 145 171 159 160 161 170 148 150 149 147 146 169 168 167 166 165 164 163 162 158 157 156 155 154 153 152 151 131 132 130 129 123 128 125 124 127 126 122 119
;;
;; Loop 15
;;  header 179, latch 178
;;  depth 4, outer 14
;;  nodes: 179 178 177 176 121 175 133 174 139 144 142 143 141 140 137 138 134 136 135 173 172 145 171 159 160 161 170 148 150 149 147 146 169 168 167 166 165 164 163 162 158 157 156 155 154 153 152 151 131 132 130 129 123 128 125 124 127 126 122 180
;;
;; Loop 16
;;  header 176, latch 175
;;  depth 5, outer 15
;;  nodes: 176 175 133 174 139 144 142 143 141 140 137 138 134 136 135 173 172 145 171 159 160 161 170 148 150 149 147 146 169 168 167 166 165 164 163 162 158 157 156 155 154 153 152 151 131 132 130 129 123 128 125 124 127 126 122 177
;;
;; Loop 17
;;  header 172, latch 171
;;  depth 6, outer 16
;;  nodes: 172 171 159 160 161 170 148 150 149 147 146 173 169 168 167 166 165 164 163 162 158 157 156 155 154 153 152 151
;;
;; Loop 2
;;  header 21, latch 20
;;  depth 1, outer 0
;;  nodes: 21 20 15 19 18 17 16
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 851 6 }
;; 6 succs { 851 7 }
;; 7 succs { 8 24 }
;; 8 succs { 9 24 }
;; 9 succs { 824 10 }
;; 10 succs { 824 11 }
;; 11 succs { 824 12 }
;; 12 succs { 824 13 }
;; 13 succs { 824 14 }
;; 14 succs { 21 }
;; 15 succs { 16 20 }
;; 16 succs { 823 17 }
;; 17 succs { 823 18 }
;; 18 succs { 823 19 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { 15 22 }
;; 22 succs { 823 23 }
;; 23 succs { 24 }
;; 24 succs { 851 25 }
;; 25 succs { 851 26 }
;; 26 succs { 27 28 }
;; 27 succs { 29 }
;; 28 succs { 29 }
;; 29 succs { 821 }
;; 30 succs { 849 31 }
;; 31 succs { 32 755 }
;; 32 succs { 33 755 }
;; 33 succs { 847 34 }
;; 34 succs { 847 35 }
;; 35 succs { 37 36 }
;; 36 succs { 37 40 }
;; 37 succs { 847 38 }
;; 38 succs { 847 39 }
;; 39 succs { 751 }
;; 40 succs { 41 82 }
;; 41 succs { 42 79 }
;; 42 succs { 43 79 }
;; 43 succs { 847 44 }
;; 44 succs { 45 57 }
;; 45 succs { 847 46 }
;; 46 succs { 47 49 }
;; 47 succs { 847 48 }
;; 48 succs { 57 }
;; 49 succs { 50 57 }
;; 50 succs { 51 57 }
;; 51 succs { 52 57 }
;; 52 succs { 847 53 }
;; 53 succs { 54 57 }
;; 54 succs { 847 55 }
;; 55 succs { 847 56 }
;; 56 succs { 57 }
;; 57 succs { 847 58 }
;; 58 succs { 59 77 }
;; 59 succs { 60 65 }
;; 60 succs { 847 61 }
;; 61 succs { 847 62 }
;; 62 succs { 847 63 }
;; 63 succs { 64 77 }
;; 64 succs { 847 77 }
;; 65 succs { 66 77 }
;; 66 succs { 67 77 }
;; 67 succs { 68 77 }
;; 68 succs { 847 69 }
;; 69 succs { 70 77 }
;; 70 succs { 847 71 }
;; 71 succs { 847 72 }
;; 72 succs { 847 73 }
;; 73 succs { 847 74 }
;; 74 succs { 847 75 }
;; 75 succs { 76 77 }
;; 76 succs { 847 77 }
;; 77 succs { 847 78 }
;; 78 succs { 81 }
;; 79 succs { 847 80 }
;; 80 succs { 847 81 }
;; 81 succs { 82 }
;; 82 succs { 83 95 }
;; 83 succs { 90 84 }
;; 84 succs { 90 85 }
;; 85 succs { 90 86 }
;; 86 succs { 90 87 }
;; 87 succs { 90 88 }
;; 88 succs { 90 89 }
;; 89 succs { 90 92 }
;; 90 succs { 847 91 }
;; 91 succs { 94 }
;; 92 succs { 847 93 }
;; 93 succs { 847 94 }
;; 94 succs { 95 }
;; 95 succs { 847 96 }
;; 96 succs { 97 671 }
;; 97 succs { 843 98 }
;; 98 succs { 826 99 }
;; 99 succs { 841 100 }
;; 100 succs { 101 102 }
;; 101 succs { 841 105 }
;; 102 succs { 841 103 }
;; 103 succs { 841 104 }
;; 104 succs { 841 105 }
;; 105 succs { 106 107 }
;; 106 succs { 841 108 }
;; 107 succs { 841 108 }
;; 108 succs { 841 109 }
;; 109 succs { 110 532 }
;; 110 succs { 111 112 }
;; 111 succs { 113 }
;; 112 succs { 113 }
;; 113 succs { 493 }
;; 114 succs { 115 184 }
;; 115 succs { 830 116 }
;; 116 succs { 830 117 }
;; 117 succs { 830 118 }
;; 118 succs { 182 }
;; 119 succs { 830 120 }
;; 120 succs { 179 }
;; 121 succs { 176 }
;; 122 succs { 828 123 }
;; 123 succs { 124 129 }
;; 124 succs { 828 125 }
;; 125 succs { 126 129 }
;; 126 succs { 828 127 }
;; 127 succs { 828 128 }
;; 128 succs { 129 }
;; 129 succs { 131 130 }
;; 130 succs { 131 132 }
;; 131 succs { 133 }
;; 132 succs { 133 }
;; 133 succs { 134 175 }
;; 134 succs { 135 137 }
;; 135 succs { 136 137 }
;; 136 succs { 137 }
;; 137 succs { 138 139 }
;; 138 succs { 139 }
;; 139 succs { 140 175 }
;; 140 succs { 142 141 }
;; 141 succs { 142 143 }
;; 142 succs { 144 }
;; 143 succs { 144 }
;; 144 succs { 145 175 }
;; 145 succs { 172 }
;; 146 succs { 147 160 }
;; 147 succs { 827 148 }
;; 148 succs { 149 171 }
;; 149 succs { 827 150 }
;; 150 succs { 151 171 }
;; 151 succs { 827 152 }
;; 152 succs { 827 153 }
;; 153 succs { 827 154 }
;; 154 succs { 827 155 }
;; 155 succs { 827 156 }
;; 156 succs { 827 157 }
;; 157 succs { 827 158 }
;; 158 succs { 827 159 }
;; 159 succs { 827 171 }
;; 160 succs { 161 171 }
;; 161 succs { 162 171 }
;; 162 succs { 827 163 }
;; 163 succs { 827 164 }
;; 164 succs { 827 165 }
;; 165 succs { 827 166 }
;; 166 succs { 827 167 }
;; 167 succs { 827 168 }
;; 168 succs { 827 169 }
;; 169 succs { 827 170 }
;; 170 succs { 171 }
;; 171 succs { 827 172 }
;; 172 succs { 827 173 }
;; 173 succs { 146 174 }
;; 174 succs { 175 }
;; 175 succs { 828 176 }
;; 176 succs { 828 177 }
;; 177 succs { 122 178 }
;; 178 succs { 179 }
;; 179 succs { 830 180 }
;; 180 succs { 121 181 }
;; 181 succs { 182 }
;; 182 succs { 119 183 }
;; 183 succs { 830 184 }
;; 184 succs { 185 190 }
;; 185 succs { 830 186 }
;; 186 succs { 187 190 }
;; 187 succs { 830 188 }
;; 188 succs { 830 189 }
;; 189 succs { 830 190 }
;; 190 succs { 191 217 }
;; 191 succs { 192 217 }
;; 192 succs { 193 217 }
;; 193 succs { 830 194 }
;; 194 succs { 195 217 }
;; 195 succs { 830 196 }
;; 196 succs { 197 217 }
;; 197 succs { 830 198 }
;; 198 succs { 830 199 }
;; 199 succs { 200 202 }
;; 200 succs { 201 217 }
;; 201 succs { 830 217 }
;; 202 succs { 830 203 }
;; 203 succs { 830 204 }
;; 204 succs { 205 217 }
;; 205 succs { 830 206 }
;; 206 succs { 830 207 }
;; 207 succs { 208 217 }
;; 208 succs { 830 209 }
;; 209 succs { 830 210 }
;; 210 succs { 830 211 }
;; 211 succs { 830 212 }
;; 212 succs { 830 213 }
;; 213 succs { 830 214 }
;; 214 succs { 830 215 }
;; 215 succs { 830 216 }
;; 216 succs { 488 }
;; 217 succs { 218 487 }
;; 218 succs { 219 262 }
;; 219 succs { 220 223 }
;; 220 succs { 830 221 }
;; 221 succs { 830 222 }
;; 222 succs { 830 223 }
;; 223 succs { 224 487 }
;; 224 succs { 830 225 }
;; 225 succs { 830 226 }
;; 226 succs { 830 227 }
;; 227 succs { 228 487 }
;; 228 succs { 830 229 }
;; 229 succs { 830 230 }
;; 230 succs { 830 231 }
;; 231 succs { 830 232 }
;; 232 succs { 830 233 }
;; 233 succs { 830 234 }
;; 234 succs { 830 235 }
;; 235 succs { 830 236 }
;; 236 succs { 830 237 }
;; 237 succs { 830 238 }
;; 238 succs { 830 239 }
;; 239 succs { 830 240 }
;; 240 succs { 830 241 }
;; 241 succs { 830 242 }
;; 242 succs { 830 243 }
;; 243 succs { 830 244 }
;; 244 succs { 830 245 }
;; 245 succs { 246 258 }
;; 246 succs { 830 247 }
;; 247 succs { 248 251 }
;; 248 succs { 830 249 }
;; 249 succs { 250 251 }
;; 250 succs { 252 }
;; 251 succs { 252 }
;; 252 succs { 253 258 }
;; 253 succs { 830 254 }
;; 254 succs { 830 255 }
;; 255 succs { 830 256 }
;; 256 succs { 830 257 }
;; 257 succs { 830 258 }
;; 258 succs { 830 259 }
;; 259 succs { 830 260 }
;; 260 succs { 830 261 }
;; 261 succs { 830 487 }
;; 262 succs { 263 345 }
;; 263 succs { 264 267 }
;; 264 succs { 830 265 }
;; 265 succs { 830 266 }
;; 266 succs { 830 267 }
;; 267 succs { 830 268 }
;; 268 succs { 830 269 }
;; 269 succs { 270 345 }
;; 270 succs { 829 271 }
;; 271 succs { 829 272 }
;; 272 succs { 829 273 }
;; 273 succs { 829 274 }
;; 274 succs { 829 275 }
;; 275 succs { 829 276 }
;; 276 succs { 829 277 }
;; 277 succs { 829 278 }
;; 278 succs { 829 279 }
;; 279 succs { 829 280 }
;; 280 succs { 829 281 }
;; 281 succs { 829 282 }
;; 282 succs { 829 283 }
;; 283 succs { 829 284 }
;; 284 succs { 829 285 }
;; 285 succs { 829 286 }
;; 286 succs { 829 287 }
;; 287 succs { 288 303 }
;; 288 succs { 829 289 }
;; 289 succs { 290 293 }
;; 290 succs { 829 291 }
;; 291 succs { 292 293 }
;; 292 succs { 294 }
;; 293 succs { 294 }
;; 294 succs { 295 302 }
;; 295 succs { 829 296 }
;; 296 succs { 829 297 }
;; 297 succs { 829 298 }
;; 298 succs { 829 299 }
;; 299 succs { 829 300 }
;; 300 succs { 829 301 }
;; 301 succs { 303 }
;; 302 succs { 303 }
;; 303 succs { 829 304 }
;; 304 succs { 829 305 }
;; 305 succs { 306 335 }
;; 306 succs { 307 311 }
;; 307 succs { 829 308 }
;; 308 succs { 829 309 }
;; 309 succs { 829 310 }
;; 310 succs { 829 311 }
;; 311 succs { 829 312 }
;; 312 succs { 829 313 }
;; 313 succs { 314 344 }
;; 314 succs { 317 315 }
;; 315 succs { 317 316 }
;; 316 succs { 317 330 }
;; 317 succs { 829 318 }
;; 318 succs { 829 319 }
;; 319 succs { 829 320 }
;; 320 succs { 829 321 }
;; 321 succs { 322 327 }
;; 322 succs { 829 323 }
;; 323 succs { 324 325 }
;; 324 succs { 829 326 }
;; 325 succs { 829 326 }
;; 326 succs { 829 327 }
;; 327 succs { 328 329 }
;; 328 succs { 829 329 }
;; 329 succs { 334 }
;; 330 succs { 829 331 }
;; 331 succs { 829 332 }
;; 332 succs { 829 333 }
;; 333 succs { 829 334 }
;; 334 succs { 344 }
;; 335 succs { 336 340 }
;; 336 succs { 829 337 }
;; 337 succs { 829 338 }
;; 338 succs { 829 339 }
;; 339 succs { 829 340 }
;; 340 succs { 829 341 }
;; 341 succs { 829 342 }
;; 342 succs { 829 343 }
;; 343 succs { 829 344 }
;; 344 succs { 345 }
;; 345 succs { 346 487 }
;; 346 succs { 347 354 }
;; 347 succs { 830 348 }
;; 348 succs { 349 354 }
;; 349 succs { 830 350 }
;; 350 succs { 830 351 }
;; 351 succs { 352 353 }
;; 352 succs { 830 354 }
;; 353 succs { 830 354 }
;; 354 succs { 355 356 }
;; 355 succs { 830 356 }
;; 356 succs { 357 367 }
;; 357 succs { 364 358 }
;; 358 succs { 364 359 }
;; 359 succs { 364 360 }
;; 360 succs { 364 361 }
;; 361 succs { 364 362 }
;; 362 succs { 364 363 }
;; 363 succs { 364 365 }
;; 364 succs { 366 }
;; 365 succs { 366 }
;; 366 succs { 367 }
;; 367 succs { 368 369 }
;; 368 succs { 830 387 }
;; 369 succs { 370 387 }
;; 370 succs { 371 387 }
;; 371 succs { 372 387 }
;; 372 succs { 830 373 }
;; 373 succs { 374 379 }
;; 374 succs { 830 375 }
;; 375 succs { 830 376 }
;; 376 succs { 830 377 }
;; 377 succs { 830 378 }
;; 378 succs { 488 }
;; 379 succs { 830 380 }
;; 380 succs { 830 381 }
;; 381 succs { 830 382 }
;; 382 succs { 830 383 }
;; 383 succs { 830 384 }
;; 384 succs { 830 385 }
;; 385 succs { 830 386 }
;; 386 succs { 830 387 }
;; 387 succs { 388 391 }
;; 388 succs { 390 389 }
;; 389 succs { 390 391 }
;; 390 succs { 392 }
;; 391 succs { 392 }
;; 392 succs { 393 487 }
;; 393 succs { 830 394 }
;; 394 succs { 830 395 }
;; 395 succs { 396 487 }
;; 396 succs { 399 397 }
;; 397 succs { 399 398 }
;; 398 succs { 399 409 }
;; 399 succs { 830 400 }
;; 400 succs { 830 401 }
;; 401 succs { 830 402 }
;; 402 succs { 830 403 }
;; 403 succs { 404 406 }
;; 404 succs { 830 405 }
;; 405 succs { 830 407 }
;; 406 succs { 830 407 }
;; 407 succs { 830 408 }
;; 408 succs { 486 }
;; 409 succs { 410 466 }
;; 410 succs { 411 486 }
;; 411 succs { 830 412 }
;; 412 succs { 830 413 }
;; 413 succs { 830 414 }
;; 414 succs { 830 415 }
;; 415 succs { 830 416 }
;; 416 succs { 830 417 }
;; 417 succs { 418 423 }
;; 418 succs { 419 421 }
;; 419 succs { 830 420 }
;; 420 succs { 830 423 }
;; 421 succs { 830 422 }
;; 422 succs { 830 423 }
;; 423 succs { 830 424 }
;; 424 succs { 830 425 }
;; 425 succs { 426 433 }
;; 426 succs { 830 427 }
;; 427 succs { 428 433 }
;; 428 succs { 830 429 }
;; 429 succs { 430 431 }
;; 430 succs { 830 433 }
;; 431 succs { 432 433 }
;; 432 succs { 830 433 }
;; 433 succs { 434 442 }
;; 434 succs { 830 435 }
;; 435 succs { 436 438 }
;; 436 succs { 437 438 }
;; 437 succs { 439 }
;; 438 succs { 439 }
;; 439 succs { 440 442 }
;; 440 succs { 830 441 }
;; 441 succs { 830 442 }
;; 442 succs { 443 446 }
;; 443 succs { 830 444 }
;; 444 succs { 445 446 }
;; 445 succs { 447 }
;; 446 succs { 447 }
;; 447 succs { 448 456 }
;; 448 succs { 830 449 }
;; 449 succs { 830 450 }
;; 450 succs { 830 451 }
;; 451 succs { 830 452 }
;; 452 succs { 830 453 }
;; 453 succs { 454 456 }
;; 454 succs { 830 455 }
;; 455 succs { 830 456 }
;; 456 succs { 457 463 }
;; 457 succs { 458 459 }
;; 458 succs { 460 }
;; 459 succs { 460 }
;; 460 succs { 830 461 }
;; 461 succs { 462 465 }
;; 462 succs { 465 }
;; 463 succs { 830 464 }
;; 464 succs { 465 }
;; 465 succs { 830 486 }
;; 466 succs { 467 470 }
;; 467 succs { 468 486 }
;; 468 succs { 830 469 }
;; 469 succs { 486 }
;; 470 succs { 471 486 }
;; 471 succs { 486 472 }
;; 472 succs { 486 473 }
;; 473 succs { 486 474 }
;; 474 succs { 486 475 }
;; 475 succs { 486 476 }
;; 476 succs { 486 477 }
;; 477 succs { 486 478 }
;; 478 succs { 486 479 }
;; 479 succs { 830 480 }
;; 480 succs { 830 481 }
;; 481 succs { 830 482 }
;; 482 succs { 830 483 }
;; 483 succs { 830 484 }
;; 484 succs { 485 486 }
;; 485 succs { 830 486 }
;; 486 succs { 487 }
;; 487 succs { 489 }
;; 488 succs { 489 }
;; 489 succs { 490 491 }
;; 490 succs { 492 }
;; 491 succs { 492 }
;; 492 succs { 493 }
;; 493 succs { 114 494 }
;; 494 succs { 495 533 }
;; 495 succs { 496 533 }
;; 496 succs { 841 497 }
;; 497 succs { 498 533 }
;; 498 succs { 832 499 }
;; 499 succs { 832 500 }
;; 500 succs { 832 501 }
;; 501 succs { 832 502 }
;; 502 succs { 831 503 }
;; 503 succs { 513 }
;; 504 succs { 832 505 }
;; 505 succs { 511 }
;; 506 succs { 507 510 }
;; 507 succs { 832 508 }
;; 508 succs { 509 510 }
;; 509 succs { 832 510 }
;; 510 succs { 511 }
;; 511 succs { 506 512 }
;; 512 succs { 513 }
;; 513 succs { 504 514 }
;; 514 succs { 528 }
;; 515 succs { 832 516 }
;; 516 succs { 517 527 }
;; 517 succs { 832 518 }
;; 518 succs { 832 519 }
;; 519 succs { 832 520 }
;; 520 succs { 832 521 }
;; 521 succs { 832 522 }
;; 522 succs { 832 523 }
;; 523 succs { 832 524 }
;; 524 succs { 525 526 }
;; 525 succs { 832 526 }
;; 526 succs { 832 527 }
;; 527 succs { 528 }
;; 528 succs { 515 529 }
;; 529 succs { 530 531 }
;; 530 succs { 531 }
;; 531 succs { 533 }
;; 532 succs { 533 }
;; 533 succs { 534 553 }
;; 534 succs { 535 553 }
;; 535 succs { 833 536 }
;; 536 succs { 537 552 }
;; 537 succs { 833 538 }
;; 538 succs { 833 539 }
;; 539 succs { 833 540 }
;; 540 succs { 551 }
;; 541 succs { 833 542 }
;; 542 succs { 833 543 }
;; 543 succs { 833 544 }
;; 544 succs { 833 545 }
;; 545 succs { 833 546 }
;; 546 succs { 833 547 }
;; 547 succs { 833 548 }
;; 548 succs { 833 549 }
;; 549 succs { 833 550 }
;; 550 succs { 551 }
;; 551 succs { 541 552 }
;; 552 succs { 553 }
;; 553 succs { 554 584 }
;; 554 succs { 841 555 }
;; 555 succs { 841 556 }
;; 556 succs { 841 557 }
;; 557 succs { 841 558 }
;; 558 succs { 560 559 }
;; 559 succs { 560 584 }
;; 560 succs { 561 584 }
;; 561 succs { 841 562 }
;; 562 succs { 563 584 }
;; 563 succs { 839 564 }
;; 564 succs { 839 565 }
;; 565 succs { 838 566 }
;; 566 succs { 582 }
;; 567 succs { 837 568 }
;; 568 succs { 569 581 }
;; 569 succs { 570 573 }
;; 570 succs { 836 571 }
;; 571 succs { 836 572 }
;; 572 succs { 573 }
;; 573 succs { 574 576 }
;; 574 succs { 836 575 }
;; 575 succs { 836 577 }
;; 576 succs { 836 577 }
;; 577 succs { 836 578 }
;; 578 succs { 836 579 }
;; 579 succs { 836 580 }
;; 580 succs { 581 }
;; 581 succs { 582 }
;; 582 succs { 567 583 }
;; 583 succs { 584 }
;; 584 succs { 585 669 }
;; 585 succs { 840 586 }
;; 586 succs { 840 587 }
;; 587 succs { 588 667 }
;; 588 succs { 589 590 }
;; 589 succs { 591 }
;; 590 succs { 591 }
;; 591 succs { 666 }
;; 592 succs { 661 }
;; 593 succs { 840 594 }
;; 594 succs { 840 595 }
;; 595 succs { 596 660 }
;; 596 succs { 840 597 }
;; 597 succs { 598 660 }
;; 598 succs { 599 604 }
;; 599 succs { 840 600 }
;; 600 succs { 840 601 }
;; 601 succs { 840 602 }
;; 602 succs { 603 604 }
;; 603 succs { 660 }
;; 604 succs { 840 605 }
;; 605 succs { 840 606 }
;; 606 succs { 607 635 }
;; 607 succs { 840 608 }
;; 608 succs { 840 609 }
;; 609 succs { 610 624 }
;; 610 succs { 611 624 }
;; 611 succs { 612 624 }
;; 612 succs { 840 613 }
;; 613 succs { 614 621 }
;; 614 succs { 619 }
;; 615 succs { 840 616 }
;; 616 succs { 617 618 }
;; 617 succs { 618 }
;; 618 succs { 619 }
;; 619 succs { 840 620 }
;; 620 succs { 615 621 }
;; 621 succs { 840 622 }
;; 622 succs { 623 624 }
;; 623 succs { 660 }
;; 624 succs { 625 631 }
;; 625 succs { 840 626 }
;; 626 succs { 840 627 }
;; 627 succs { 840 628 }
;; 628 succs { 629 631 }
;; 629 succs { 630 631 }
;; 630 succs { 660 }
;; 631 succs { 632 635 }
;; 632 succs { 840 633 }
;; 633 succs { 634 635 }
;; 634 succs { 660 }
;; 635 succs { 840 636 }
;; 636 succs { 840 637 }
;; 637 succs { 638 660 }
;; 638 succs { 840 639 }
;; 639 succs { 840 640 }
;; 640 succs { 641 642 }
;; 641 succs { 840 642 }
;; 642 succs { 840 643 }
;; 643 succs { 840 644 }
;; 644 succs { 840 645 }
;; 645 succs { 840 646 }
;; 646 succs { 840 647 }
;; 647 succs { 840 648 }
;; 648 succs { 840 649 }
;; 649 succs { 840 650 }
;; 650 succs { 840 651 }
;; 651 succs { 840 652 }
;; 652 succs { 840 653 }
;; 653 succs { 840 654 }
;; 654 succs { 840 655 }
;; 655 succs { 840 656 }
;; 656 succs { 657 658 }
;; 657 succs { 840 659 }
;; 658 succs { 840 659 }
;; 659 succs { 840 660 }
;; 660 succs { 661 }
;; 661 succs { 593 662 }
;; 662 succs { 663 664 }
;; 663 succs { 665 }
;; 664 succs { 665 }
;; 665 succs { 666 }
;; 666 succs { 592 667 }
;; 667 succs { 840 668 }
;; 668 succs { 669 }
;; 669 succs { 841 670 }
;; 670 succs { 672 }
;; 671 succs { 672 }
;; 672 succs { 673 684 }
;; 673 succs { 674 681 }
;; 674 succs { 675 678 }
;; 675 succs { 846 676 }
;; 676 succs { 846 677 }
;; 677 succs { 846 684 }
;; 678 succs { 846 679 }
;; 679 succs { 846 680 }
;; 680 succs { 846 684 }
;; 681 succs { 846 682 }
;; 682 succs { 846 683 }
;; 683 succs { 846 684 }
;; 684 succs { 685 687 }
;; 685 succs { 686 687 }
;; 686 succs { 687 }
;; 687 succs { 688 696 }
;; 688 succs { 846 689 }
;; 689 succs { 846 690 }
;; 690 succs { 846 691 }
;; 691 succs { 692 693 }
;; 692 succs { 846 693 }
;; 693 succs { 694 695 }
;; 694 succs { 846 695 }
;; 695 succs { 846 696 }
;; 696 succs { 697 717 }
;; 697 succs { 700 }
;; 698 succs { 844 699 }
;; 699 succs { 700 }
;; 700 succs { 698 701 }
;; 701 succs { 844 702 }
;; 702 succs { 703 706 }
;; 703 succs { 844 704 }
;; 704 succs { 844 705 }
;; 705 succs { 844 716 }
;; 706 succs { 707 712 }
;; 707 succs { 844 708 }
;; 708 succs { 709 710 }
;; 709 succs { 844 711 }
;; 710 succs { 844 711 }
;; 711 succs { 844 716 }
;; 712 succs { 713 716 }
;; 713 succs { 844 714 }
;; 714 succs { 844 715 }
;; 715 succs { 844 716 }
;; 716 succs { 749 }
;; 717 succs { 718 721 }
;; 718 succs { 846 719 }
;; 719 succs { 846 720 }
;; 720 succs { 846 749 }
;; 721 succs { 722 729 }
;; 722 succs { 846 723 }
;; 723 succs { 846 724 }
;; 724 succs { 846 725 }
;; 725 succs { 846 726 }
;; 726 succs { 727 728 }
;; 727 succs { 846 728 }
;; 728 succs { 846 749 }
;; 729 succs { 846 730 }
;; 730 succs { 846 731 }
;; 731 succs { 732 749 }
;; 732 succs { 733 737 }
;; 733 succs { 846 734 }
;; 734 succs { 846 735 }
;; 735 succs { 846 736 }
;; 736 succs { 846 749 }
;; 737 succs { 738 744 }
;; 738 succs { 846 739 }
;; 739 succs { 846 740 }
;; 740 succs { 741 742 }
;; 741 succs { 846 743 }
;; 742 succs { 846 743 }
;; 743 succs { 846 749 }
;; 744 succs { 745 749 }
;; 745 succs { 846 746 }
;; 746 succs { 846 747 }
;; 747 succs { 846 748 }
;; 748 succs { 846 749 }
;; 749 succs { 846 750 }
;; 750 succs { 751 }
;; 751 succs { 754 752 }
;; 752 succs { 753 }
;; 753 succs { 755 }
;; 754 succs { 817 }
;; 755 succs { 756 816 }
;; 756 succs { 815 }
;; 757 succs { 813 }
;; 758 succs { 759 812 }
;; 759 succs { 849 760 }
;; 760 succs { 761 765 }
;; 761 succs { 849 762 }
;; 762 succs { 763 765 }
;; 763 succs { 849 764 }
;; 764 succs { 766 }
;; 765 succs { 766 }
;; 766 succs { 849 767 }
;; 767 succs { 768 772 }
;; 768 succs { 849 769 }
;; 769 succs { 770 772 }
;; 770 succs { 849 771 }
;; 771 succs { 773 }
;; 772 succs { 773 }
;; 773 succs { 774 812 }
;; 774 succs { 849 775 }
;; 775 succs { 849 776 }
;; 776 succs { 849 777 }
;; 777 succs { 778 812 }
;; 778 succs { 849 779 }
;; 779 succs { 780 802 }
;; 780 succs { 789 }
;; 781 succs { 849 782 }
;; 782 succs { 849 783 }
;; 783 succs { 849 784 }
;; 784 succs { 849 785 }
;; 785 succs { 786 787 }
;; 786 succs { 788 }
;; 787 succs { 788 }
;; 788 succs { 789 }
;; 789 succs { 849 790 }
;; 790 succs { 781 791 }
;; 791 succs { 792 812 }
;; 792 succs { 849 793 }
;; 793 succs { 849 794 }
;; 794 succs { 849 795 }
;; 795 succs { 849 796 }
;; 796 succs { 849 797 }
;; 797 succs { 849 798 }
;; 798 succs { 849 799 }
;; 799 succs { 849 800 }
;; 800 succs { 849 801 }
;; 801 succs { 849 812 }
;; 802 succs { 849 803 }
;; 803 succs { 849 804 }
;; 804 succs { 849 805 }
;; 805 succs { 849 806 }
;; 806 succs { 849 807 }
;; 807 succs { 849 808 }
;; 808 succs { 849 809 }
;; 809 succs { 849 810 }
;; 810 succs { 849 811 }
;; 811 succs { 849 812 }
;; 812 succs { 813 }
;; 813 succs { 758 814 }
;; 814 succs { 815 }
;; 815 succs { 757 816 }
;; 816 succs { 817 }
;; 817 succs { 818 819 }
;; 818 succs { 820 }
;; 819 succs { 820 }
;; 820 succs { 821 }
;; 821 succs { 30 822 }
;; 822 succs { 1 }
;; 823 succs { 824 }
;; 824 succs { 825 }
;; 825 succs { 851 }
;; 826 succs { 843 }
;; 827 succs { 828 }
;; 828 succs { 830 }
;; 829 succs { 830 }
;; 830 succs { 841 }
;; 831 succs { 832 }
;; 832 succs { 841 }
;; 833 succs { 834 }
;; 834 succs { 835 }
;; 835 succs { 841 }
;; 836 succs { 837 }
;; 837 succs { 838 }
;; 838 succs { 839 }
;; 839 succs { 841 }
;; 840 succs { 841 }
;; 841 succs { 842 }
;; 842 succs { 843 }
;; 843 succs { 846 }
;; 844 succs { 845 }
;; 845 succs { 846 }
;; 846 succs { 847 }
;; 847 succs { 848 }
;; 848 succs { 849 }
;; 849 succs { 850 }
;; 850 succs { 851 }
;; 851 succs { }
void checkPointerConstraint (union tree_node * function_tree, struct ptb * ptable, struct gimple_array * user_tmp, union tree_node * checkTree, int calleetype)
{
  struct value_type & D.257757;
  struct value_type & D.257756;
  struct value_type & D.257755;
  struct value_type & D.257754;
  struct value_type & D.257753;
  struct value_type & D.257752;
  struct value_type & D.257751;
  struct value_type & D.257750;
  struct value_type & D.257749;
  bool D.257748;
  struct value_type & D.257747;
  struct value_type & D.257746;
  struct value_type & D.257745;
  struct value_type & D.257744;
  bool D.257743;
  struct value_type & D.257742;
  struct value_type & D.257741;
  struct value_type & D.257740;
  struct value_type & D.257739;
  struct value_type & D.257738;
  struct value_type & D.257737;
  struct value_type & D.257736;
  struct value_type & D.257735;
  int finally_tmp.1901;
  bool D.257724;
  const char * D.257717;
  union tree_node * D.257716;
  struct value_type & D.257715;
  struct value_type & D.257714;
  struct value_type & D.257713;
  struct value_type & D.257712;
  struct value_type & D.257711;
  bool D.257710;
  struct value_type & D.257709;
  union tree_node * D.257708;
  union tree_node * D.257707;
  union tree_node * D.257706;
  struct value_type & D.257705;
  union tree_node * D.257704;
  unsigned int D.257703;
  union tree_node * D.257702;
  unsigned int D.257701;
  union tree_node * D.257700;
  struct value_type & D.257699;
  unsigned int D.257698;
  struct value_type & D.257697;
  union tree_node * D.257696;
  union tree_node * D.257695;
  struct value_type & D.257694;
  struct value_type & D.257693;
  union tree_node * D.257692;
  struct value_type & D.257691;
  struct gimple_array * D.257690;
  const char * D.257685;
  union tree_node * D.257684;
  bool D.257683;
  struct function_free_array * D.257682;
  struct function_free_array * D.257681;
  const char * D.257677;
  struct function_relate_array * D.257676;
  struct function_relate_array * D.257675;
  const char * D.257673;
  int * D.257672;
  int * D.257671;
  void * D.257669;
  struct function_relate_array * D.257668;
  struct function_relate_array * D.257667;
  union tree_node * D.257663;
  union tree_node * D.257662;
  union tree_node * D.257661;
  union tree_node * D.257660;
  unsigned int D.257659;
  union tree_node * D.257658;
  unsigned int D.257657;
  union tree_node * D.257656;
  unsigned int D.257655;
  union tree_node * D.257654;
  union tree_node * D.257653;
  union tree_node * D.257652;
  unsigned int D.257651;
  const char * D.257650;
  union tree_node * D.257649;
  union tree_node * D.257648;
  const char * D.257647;
  union tree_node * D.257646;
  union tree_node * D.257645;
  const char * D.257643;
  union tree_node * D.257642;
  union tree_node * D.257641;
  const char * D.257640;
  union tree_node * D.257639;
  union tree_node * D.257638;
  union tree_node * D.257637;
  union tree_node * D.257636;
  const char * D.257635;
  const char * D.257634;
  const char * D.257633;
  union tree_node * D.257632;
  union tree_node * D.257631;
  union tree_node * D.257630;
  union tree_node * D.257629;
  const char * D.257628;
  const char * D.257627;
  const char * D.257626;
  union tree_node * D.257625;
  const char * D.257624;
  union tree_node * D.257623;
  union tree_node * D.257622;
  union tree_node * D.257621;
  union tree_node * D.257620;
  union tree_node * D.257619;
  bool D.257618;
  struct function * D.257617;
  bool D.257615;
  bool D.257613;
  bool D.257612;
  bool D.257611;
  const char * D.257610;
  union tree_node * D.257609;
  union tree_node * D.257608;
  union tree_node * D.257607;
  struct function * D.257606;
  struct function * D.257605;
  struct function_relate_array * D.257604;
  struct function_relate_array * D.257603;
  void * D.257601;
  struct gimple_array * D.257600;
  union tree_node * D.257599;
  const char * D.257598;
  union tree_node * D.257597;
  union tree_node * D.257596;
  const char * D.257595;
  const char * D.257594;
  union tree_node * D.257593;
  union tree_node * D.257592;
  const char * D.257591;
  struct function * D.257590;
  const char * D.257589;
  struct function_return_array * D.257585;
  const char * D.257584;
  const char * D.257583;
  int k;
  int finddefsafe;
  int j;
  int i;
  int i;
  struct defmalloc_type defmalloc_type;
  union tree_node * arg;
  int k;
  struct gimple * def_stmt;
  union tree_node * callarg;
  int i;
  struct gimple_array start;
  struct free_type free_type;
  int k;
  struct vector callerRetTypearray;
  struct function_free_array callerFunArray;
  long unsigned int x;
  int k;
  struct function_relate_array fun_array;
  struct vector relate_type_array;
  long unsigned int x;
  struct gimple * def_stmt;
  int max_bb;
  int max_bb;
  int j;
  int i;
  struct iterator it_i;
  struct hash_map * function_maxbasicblock_collect;
  int freecount;
  union tree_node * findtree;
  union tree_node * findtree;
  const char * name;
  struct gimple * def_stmt;
  struct relate_type relate_type;
  struct gimple * finalstmt;
  struct gimple * tmp;
  struct edge_iterator ei2;
  struct edge_def * e2;
  int check;
  struct edge_iterator ei;
  struct edge_def * e;
  struct basic_block_def * bb;
  int k;
  int succ_havereturn;
  struct free_type free_type;
  int lastbasicblock;
  struct function_relate_array maxbb_array;
  struct vector maxbb_type_array;
  struct gimple * laststmt;
  union tree_node * lastfucntion;
  struct hash_map * function_maxbb_collect;
  const char * name;
  const char * name;
  struct vector earlyend;
  struct gimple * def_stmt;
  const char * name;
  struct vector free_array;
  int init_check_table_stmt;
  int find_mallocstmt;
  int is_pthread_detched;
  int find_pthread_join;
  int find_pthread_detched;
  int find_retheapstmt;
  int find_freestmt;
  int find_phistmt;
  int childptable_type;
  int ptable_type;
  int find_Looserulesfreestmt;
  int k;
  int find_thread_count;
  int find_thread;
  struct vector funcalleeRetTypearray;
  struct function_return_array find_fun_array;
  struct vector defmalloc_array;
  union tree_node * t;
  struct ptb * table_temp;
  struct gimple_array * user_tmp2;
  struct gimple_array * used_stmt2;
  struct gimple_array * used_stmt;
  struct gimple_array start2;
  struct gimple_array start;
  struct gimple * u_stmt2;
  struct gimple * u_stmt;
  union tree_node * iftmp.1900;
  bool retval.1899;
  bool retval.1898;
  bool retval.1893;
  bool retval.1891;
  bool retval.1890;
  bool retval.1888;
  union tree_node * iftmp.1887;
  union tree_node * iftmp.1886;
  bool retval.1885;
  bool retval.1861;
  bool retval.1836;
  struct gimple * iftmp.1805;
  bool retval.1804;
  bool retval.1797;
  bool retval.1794;
  bool retval.1793;
  bool retval.1792;
  bool retval.1791;
  bool retval.1790;
  bool retval.1789;
  bool retval.1787;
  bool retval.1786;
  bool retval.1785;
  bool retval.1784;
  bool retval.1783;
  bool retval.1782;
  bool retval.1781;
  bool retval.1780;
  struct gimple * iftmp.1779;
  bool retval.1775;
  bool retval.1771;
  bool retval.1770;
  bool retval.1767;
  bool retval.1761;
  bool retval.1752;
  struct hash_map * function_maxbb_collect.1748;
  struct iterator D.202825;
  bool retval.1747;
  bool retval.1745;
  bool retval.1739;
  bool retval.1738;
  bool retval.1737;
  bool retval.1736;
  bool retval.1735;
  void * D.202691;
  bool retval.1734;
  struct gimple * iftmp.1731;
  const char[16] * iftmp.1719;
  bool iftmp.1715;
  bool retval.1714;
  bool iftmp.1713;
  bool retval.1712;
  bool retval.1709;
  bool retval.1708;
  bool retval.1706;
  bool retval.1705;
  bool iftmp.1683;
  bool retval.1682;
  bool retval.1673;
  bool retval.1672;
  bool retval.1662;
  bool retval.1659;
  bool retval.1658;
  bool retval.1639;
  bool iftmp.1633;
  bool retval.1632;
  bool retval.1631;
  bool iftmp.1608;
  bool retval.1607;
  bool retval.1606;
  bool retval.1594;
  bool retval.1585;
  bool retval.1584;
  bool retval.1583;
  bool retval.1582;
  bool retval.1581;
  bool retval.1580;
  bool retval.1575;
  bool retval.1573;
  bool retval.1572;
  bool retval.1571;
  bool retval.1570;
  bool retval.1553;
  bool retval.1551;
  bool iftmp.1547;
  bool retval.1546;
  bool retval.1545;
  bool iftmp.1544;
  bool retval.1543;
  bool retval.1542;
  bool retval.1541;
  struct gimple * iftmp.1539;
  bool retval.1534;
  void * D.202570;
  bool retval.1521;
  bool retval.1520;
  bool retval.1513;
  bool retval.1512;
  bool retval.1507;
  union tree_node * iftmp.1506;
  bool retval.1502;
  bool retval.1499;
  bool retval.1490;

  <bb 2> :
  gimple_array::gimple_array (&start);
  gimple_array::gimple_array (&start2);
  start.stmt = 0B;
  start2.stmt = 0B;
  used_stmt = &start;
  used_stmt2 = &start;
  user_tmp2 = user_tmp;
  table_temp = ptable;
  goto <bb 4>; [INV]

  <bb 3> :
  std::vector<tree_node*>::pop_back (&traceStack);

  <bb 4> :
  _1 = std::vector<tree_node*>::size (&traceStack);
  retval.1490 = _1 != 0;
  if (retval.1490 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  function_tree.1491_2 = function_tree;
  D.257583 = get_name (function_tree.1491_2);

  <bb 6> :
  _3 = D.257583;
  stderr.1492_4 = stderr;
  fprintf (stderr.1492_4, "\x1b[40;42m =======pre_check_funciton:%s========= \x1b[0m\n", _3);

  <bb 7> :
  calleetype.1493_5 = (unsigned int) calleetype;
  FUNCITON_THREAD.1494_6 = FUNCITON_THREAD;
  if (calleetype.1493_5 == FUNCITON_THREAD.1494_6)
    goto <bb 8>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 8> :
  threadmod.1495_7 = threadmod;
  _8 = (int) threadmod.1495_7;
  if (_8 == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 9> :
  function_return_array::function_return_array (&find_fun_array);
  function_tree.1496_9 = function_tree;
  D.257584 = get_name (function_tree.1496_9);

  <bb 10> :
  _10 = D.257584;
  stderr.1497_11 = stderr;
  fprintf (stderr.1497_11, "\x1b[40;42m =======thread job funciton:%s========= \x1b[0m\n", _10);

  <bb 11> :
  function_return_collect.1498_12 = function_return_collect;
  D.257585 = hash_map<tree_node*, function_return_array>::get (function_return_collect.1498_12, &function_tree);

  <bb 12> :
  _13 = D.257585;
  function_return_array::operator= (&find_fun_array, _13);

  <bb 13> :
  std::vector<return_type>::vector (&funcalleeRetTypearray, &find_fun_array.return_type_array);

  <bb 14> :
  find_thread = 0;
  find_thread_count = 0;
  k = 0;
  goto <bb 21>; [INV]

  <bb 15> :
  _14 = (long unsigned int) k;
  _15 = std::vector<return_type>::operator[] (&funcalleeRetTypearray, _14);
  _16 = _15->return_type_stmt_num;
  _17 = (unsigned int) _16;
  FUNCITON_THREAD.1500_18 = FUNCITON_THREAD;
  retval.1499 = _17 == FUNCITON_THREAD.1500_18;
  if (retval.1499 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 16> :
  _19 = (long unsigned int) k;
  _20 = std::vector<return_type>::operator[] (&funcalleeRetTypearray, _19);
  _21 = _20->return_type_stmt_num;
  stderr.1501_22 = stderr;
  fprintf (stderr.1501_22, "\x1b[40;44m ======= print pthread lock stmt %d ========  \x1b[0m\n", _21);

  <bb 17> :
  _23 = (long unsigned int) k;
  _24 = std::vector<return_type>::operator[] (&funcalleeRetTypearray, _23);
  _25 = _24->stmt;
  debug_gimple_stmt (_25);

  <bb 18> :
  _26 = (long unsigned int) k;
  _27 = std::vector<return_type>::operator[] (&funcalleeRetTypearray, _26);
  _28 = _27->stmt;
  _29 = gimple_location_safe (_28);
  warning_at (_29, 0, "use location");

  <bb 19> :
  find_thread_count = find_thread_count + 1;

  <bb 20> :
  k = k + 1;

  <bb 21> :
  _30 = (long unsigned int) k;
  _31 = std::vector<return_type>::size (&funcalleeRetTypearray);
  retval.1502 = _30 < _31;
  if (retval.1502 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 22> :
  stderr.1503_32 = stderr;
  fprintf (stderr.1503_32, "\x1b[40;42m =======thread job funciton lock count :%d========= \x1b[0m\n", find_thread_count);

  <bb 23> :
  std::vector<return_type>::~vector (&funcalleeRetTypearray);
  function_return_array::~function_return_array (&find_fun_array);
  find_fun_array = {CLOBBER};
  funcalleeRetTypearray = {CLOBBER};

  <bb 24> :
  function_tree.1504_33 = function_tree;
  D.257589 = get_name (function_tree.1504_33);

  <bb 25> :
  _34 = D.257589;
  stderr.1505_35 = stderr;
  fprintf (stderr.1505_35, "\x1b[40;42m =======start_check_funciton:%s========= \x1b[0m\n", _34);

  <bb 26> :
  std::vector<defmalloc_type>::vector (&defmalloc_array);
  if (table_temp != 0B)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  iftmp.1506 = table_temp->target;
  goto <bb 29>; [INV]

  <bb 28> :
  iftmp.1506 = 0B;

  <bb 29> :
  t = iftmp.1506;
  goto <bb 821>; [INV]

  <bb 30> :
  find_Looserulesfreestmt = 0;
  ptable_type = 0;
  childptable_type = 0;
  find_phistmt = 0;
  find_freestmt = 0;
  find_retheapstmt = -2;
  find_pthread_detched = 0;
  find_pthread_join = 0;
  is_pthread_detched = 0;
  find_mallocstmt = 0;
  init_check_table_stmt = 0;
  _36 = table_temp->node;
  D.257590 = cgraph_node::get_fun (_36);

  <bb 31> :
  _37 = D.257590;
  _38 = _37->decl;
  function_tree.1508_39 = function_tree;
  retval.1507 = _38 == function_tree.1508_39;
  if (retval.1507 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 755>; [INV]

  <bb 32> :
  _40 = table_temp->target;
  if (_40 != 0B)
    goto <bb 33>; [INV]
  else
    goto <bb 755>; [INV]

  <bb 33> :
  std::vector<free_type>::vector (&free_array);
  find_phistmt = 0;
  find_mallocstmt = find_phistmt;
  find_freestmt = find_mallocstmt;
  stderr.1509_41 = stderr;
  __builtin_fwrite ("\ndot graph START\n", 1, 17, stderr.1509_41);

  <bb 34> :
  stderr.1510_42 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1510_42);

  <bb 35> :
  name = "";
  _43 = table_temp->target;
  _44 = _43->base.code;
  if (_44 == 26)
    goto <bb 37>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 36> :
  _45 = table_temp->target;
  _46 = _45->base.code;
  if (_46 == 32)
    goto <bb 37>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 37> :
  stderr.1511_47 = stderr;
  __builtin_fwrite ("\n ================== collect possiable invalid ================== \n", 1, 67, stderr.1511_47);

  <bb 38> :
  _48 = table_temp->target;
  debug_tree (_48);

  <bb 39> :
  // predicted unlikely by continue predictor.
  finally_tmp.1901 = 0;
  goto <bb 751>; [INV]

  <bb 40> :
  _49 = table_temp->target;
  def_stmt = _49->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 41>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 41> :
  _50 = table_temp->target;
  _51 = _50->base.code;
  if (_51 != 36)
    goto <bb 42>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 42> :
  _52 = table_temp->target;
  _53 = _52->base.code;
  if (_53 != 38)
    goto <bb 43>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 43> :
  _54 = table_temp->target;
  debug_tree (_54);

  <bb 44> :
  if (def_stmt != 0B)
    goto <bb 45>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 45> :
  _55 = table_temp->target;
  debug_tree (_55);

  <bb 46> :
  _56 = table_temp->target;
  _57 = _56->base.code;
  if (_57 == 33)
    goto <bb 47>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 47> :
  _58 = table_temp->target;
  D.257591 = get_name (_58);

  <bb 48> :
  name = D.257591;
  goto <bb 57>; [INV]

  <bb 49> :
  _59 = table_temp->target;
  _60 = _59->base.code;
  if (_60 != 131)
    goto <bb 50>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 50> :
  _61 = table_temp->target;
  _62 = _61->base.code;
  if (_62 != 0)
    goto <bb 51>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 51> :
  retval.1512 = is_gimple_call (def_stmt);
  if (retval.1512 != 0)
    goto <bb 52>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 52> :
  D.257592 = gimple_call_fndecl (def_stmt);

  <bb 53> :
  _63 = D.257592;
  retval.1513 = _63 != 0B;
  if (retval.1513 != 0)
    goto <bb 54>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 54> :
  D.257593 = gimple_call_fndecl (def_stmt);

  <bb 55> :
  _64 = D.257593;
  D.257594 = get_name (_64);

  <bb 56> :
  name = D.257594;

  <bb 57> :
  stderr.1514_65 = stderr;
  __builtin_fwrite ("\n ================== pre trace ptable ================== \n", 1, 58, stderr.1514_65);

  <bb 58> :
  if (def_stmt != 0B)
    goto <bb 59>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 59> :
  _66 = table_temp->target;
  _67 = _66->base.code;
  if (_67 == 33)
    goto <bb 60>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 60> :
  _68 = table_temp->target;
  D.257595 = get_name (_68);

  <bb 61> :
  name = D.257595;
  stderr.1515_69 = stderr;
  fprintf (stderr.1515_69, "trace fucntion name:%s \n", name);

  <bb 62> :
  _70 = table_temp->target;
  RET_HEAP_OBJECT.1516_71 = RET_HEAP_OBJECT;
  RET_HEAP_OBJECT.1517_72 = (int) RET_HEAP_OBJECT.1516_71;
  _73 = table_temp->target;
  trace_function_path (_73, RET_HEAP_OBJECT.1517_72, _70, &find_retheapstmt);

  <bb 63> :
  find_retheapstmt.1518_74 = find_retheapstmt;
  if (find_retheapstmt.1518_74 > 0)
    goto <bb 64>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 64> :
  stderr.1519_75 = stderr;
  __builtin_fwrite ("some fucntion return value is heap-object and with Collection SSA_NAME alias relation\n", 1, 86, stderr.1519_75);
  goto <bb 77>; [INV]

  <bb 65> :
  _76 = table_temp->target;
  _77 = _76->base.code;
  if (_77 != 131)
    goto <bb 66>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 66> :
  _78 = table_temp->target;
  _79 = _78->base.code;
  if (_79 != 38)
    goto <bb 67>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 67> :
  retval.1520 = is_gimple_call (def_stmt);
  if (retval.1520 != 0)
    goto <bb 68>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 68> :
  D.257596 = gimple_call_fn (def_stmt);

  <bb 69> :
  _80 = D.257596;
  retval.1521 = _80 != 0B;
  if (retval.1521 != 0)
    goto <bb 70>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 70> :
  D.257597 = gimple_call_fn (def_stmt);

  <bb 71> :
  _81 = D.257597;
  D.257598 = get_name (_81);

  <bb 72> :
  name = D.257598;
  stderr.1522_82 = stderr;
  fprintf (stderr.1522_82, "trace fucntion name:%s \n", name);

  <bb 73> :
  _83 = table_temp->target;
  RET_HEAP_OBJECT.1523_84 = RET_HEAP_OBJECT;
  RET_HEAP_OBJECT.1524_85 = (int) RET_HEAP_OBJECT.1523_84;
  D.257599 = gimple_call_fndecl (def_stmt);

  <bb 74> :
  _86 = D.257599;
  trace_function_path (_86, RET_HEAP_OBJECT.1524_85, _83, &find_retheapstmt);

  <bb 75> :
  find_retheapstmt.1525_87 = find_retheapstmt;
  if (find_retheapstmt.1525_87 > 0)
    goto <bb 76>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 76> :
  stderr.1526_88 = stderr;
  __builtin_fwrite ("some fucntion return value is heap-object and with Collection SSA_NAME alias relation\n", 1, 86, stderr.1526_88);

  <bb 77> :
  stderr.1527_89 = stderr;
  __builtin_fwrite ("\n ================== pre trace ptable finish================== \n", 1, 64, stderr.1527_89);

  <bb 78> :
  goto <bb 81>; [INV]

  <bb 79> :
  _90 = table_temp->target;
  debug_tree (_90);

  <bb 80> :
  stderr.1528_91 = stderr;
  __builtin_fwrite ("\n ================== this stmt hava call fucntion ================== \n", 1, 70, stderr.1528_91);

  <bb 81> :

  <bb 82> :
  if (name != 0B)
    goto <bb 83>; [INV]
  else
    goto <bb 95>; [INV]

  <bb 83> :
  _92 = strcmp (name, "realloc");
  if (_92 == 0)
    goto <bb 90>; [INV]
  else
    goto <bb 84>; [INV]

  <bb 84> :
  _93 = strcmp (name, "malloc");
  if (_93 == 0)
    goto <bb 90>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 85> :
  _94 = strcmp (name, "xmalloc");
  if (_94 == 0)
    goto <bb 90>; [INV]
  else
    goto <bb 86>; [INV]

  <bb 86> :
  _95 = strcmp (name, "calloc");
  if (_95 == 0)
    goto <bb 90>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 87> :
  _96 = strcmp (name, "xcalloc");
  if (_96 == 0)
    goto <bb 90>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 88> :
  _97 = strcmp (name, "strdup");
  if (_97 == 0)
    goto <bb 90>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 89> :
  _98 = strcmp (name, "xstrdup");
  if (_98 == 0)
    goto <bb 90>; [INV]
  else
    goto <bb 92>; [INV]

  <bb 90> :
  IS_MALLOC_FUCNTION.1529_99 = IS_MALLOC_FUCNTION;
  ptable_type = (int) IS_MALLOC_FUCNTION.1529_99;
  stderr.1530_100 = stderr;
  fprintf (stderr.1530_100, "is Reserved word function :%s\n", name);

  <bb 91> :
  goto <bb 94>; [INV]

  <bb 92> :
  IS_OTHRER_FUCNTION.1531_101 = IS_OTHRER_FUCNTION;
  ptable_type = (int) IS_OTHRER_FUCNTION.1531_101;
  _102 = table_temp->target;
  debug_tree (_102);

  <bb 93> :
  stderr.1532_103 = stderr;
  fprintf (stderr.1532_103, "is Other function %s\n", name);

  <bb 94> :

  <bb 95> :
  treeGimpleArray.1533_104 = treeGimpleArray;
  _105 = &table_temp->target;
  D.257600 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.1533_104, _105);

  <bb 96> :
  user_tmp = D.257600;
  std::vector<basic_block_def*>::vector (&earlyend);
  start.stmt = 0B;
  used_stmt = &start;
  if (user_tmp != 0B)
    goto <bb 97>; [INV]
  else
    goto <bb 671>; [INV]

  <bb 97> :
  D.257601 = operator new (48);

  <bb 98> :
  D.202570 = D.257601;
  hash_map<tree_node*, function_relate_array>::hash_map (D.202570, 13, 0, 1, 0);

  <bb 99> :
  function_maxbb_collect = D.202570;
  lastfucntion = 0B;
  laststmt = 0B;
  std::vector<relate_type>::vector (&maxbb_type_array);
  function_relate_array::function_relate_array (&maxbb_array);
  _106 = &table_temp->target;
  D.257603 = hash_map<tree_node*, function_relate_array>::get (function_maxbb_collect, _106);

  <bb 100> :
  _107 = D.257603;
  retval.1534 = _107 == 0B;
  if (retval.1534 != 0)
    goto <bb 101>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 101> :
  std::vector<relate_type>::operator= (&maxbb_array.relate_type_array, &maxbb_type_array);
  goto <bb 105>; [INV]

  <bb 102> :
  _108 = &table_temp->target;
  D.257604 = hash_map<tree_node*, function_relate_array>::get (function_maxbb_collect, _108);

  <bb 103> :
  _109 = D.257604;
  function_relate_array::operator= (&maxbb_array, _109);

  <bb 104> :
  std::vector<relate_type>::operator= (&maxbb_type_array, &maxbb_array.relate_type_array);

  <bb 105> :
  lastbasicblock = -1;
  _110 = table_temp->swap_type;
  _111 = (unsigned int) _110;
  FUNCITON_THREAD.1535_112 = FUNCITON_THREAD;
  if (_111 == FUNCITON_THREAD.1535_112)
    goto <bb 106>; [INV]
  else
    goto <bb 107>; [INV]

  <bb 106> :
  stderr.1536_113 = stderr;
  __builtin_fwrite (" \n Start is Pthread Job Collect  \n", 1, 34, stderr.1536_113);
  goto <bb 108>; [INV]

  <bb 107> :
  stderr.1537_114 = stderr;
  __builtin_fwrite (" \n Start check Pointer Collect  \n", 1, 33, stderr.1537_114);

  <bb 108> :
  stderr.1538_115 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1538_115);

  <bb 109> :
  _116 = user_tmp->size;
  if (_116 > 0)
    goto <bb 110>; [INV]
  else
    goto <bb 532>; [INV]

  <bb 110> :
  if (user_tmp != 0B)
    goto <bb 111>; [INV]
  else
    goto <bb 112>; [INV]

  <bb 111> :
  iftmp.1539 = user_tmp->stmt;
  goto <bb 113>; [INV]

  <bb 112> :
  iftmp.1539 = 0B;

  <bb 113> :
  u_stmt = iftmp.1539;
  goto <bb 493>; [INV]

  <bb 114> :
  prebranchexit.1540_117 = prebranchexit;
  if (prebranchexit.1540_117 != 0)
    goto <bb 115>; [INV]
  else
    goto <bb 184>; [INV]

  <bb 115> :
  _118 = table_temp->node;
  D.257605 = cgraph_node::get_fun (_118);

  <bb 116> :
  _119 = D.257605;
  push_cfun (_119);

  <bb 117> :
  calculate_dominance_info (1);

  <bb 118> :
  succ_havereturn = 0;
  k = 0;
  goto <bb 182>; [INV]

  <bb 119> :
  _120 = table_temp->node;
  D.257606 = cgraph_node::get_fun (_120);

  <bb 120> :
  _121 = D.257606;
  _122 = _121->cfg;
  _123 = _122->x_entry_block_ptr;
  bb = _123->next_bb;
  goto <bb 179>; [INV]

  <bb 121> :
  _124 = &bb->succs;
  ei = ei_start_1 (_124);
  goto <bb 176>; [INV]

  <bb 122> :
  name = "";
  _125 = (long unsigned int) k;
  _126 = std::vector<return_type>::operator[] (&global_ret_type_array, _125);
  _127 = _126->stmt;
  D.257607 = gimple_call_lhs (_127);

  <bb 123> :
  _128 = D.257607;
  retval.1541 = _128 == 0B;
  if (retval.1541 != 0)
    goto <bb 124>; [INV]
  else
    goto <bb 129>; [INV]

  <bb 124> :
  _129 = (long unsigned int) k;
  _130 = std::vector<return_type>::operator[] (&global_ret_type_array, _129);
  _131 = _130->stmt;
  D.257608 = gimple_call_fn (_131);

  <bb 125> :
  _132 = D.257608;
  retval.1542 = _132 != 0B;
  if (retval.1542 != 0)
    goto <bb 126>; [INV]
  else
    goto <bb 129>; [INV]

  <bb 126> :
  _133 = (long unsigned int) k;
  _134 = std::vector<return_type>::operator[] (&global_ret_type_array, _133);
  _135 = _134->stmt;
  D.257609 = gimple_call_fn (_135);

  <bb 127> :
  _136 = D.257609;
  D.257610 = get_name (_136);

  <bb 128> :
  name = D.257610;

  <bb 129> :
  if (name != 0B)
    goto <bb 131>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 130> :
  _137 = (long unsigned int) k;
  _138 = std::vector<return_type>::operator[] (&global_ret_type_array, _137);
  _139 = _138->stmt;
  _140 = gimple_code (_139);
  if (_140 == 10)
    goto <bb 131>; [INV]
  else
    goto <bb 132>; [INV]

  <bb 131> :
  iftmp.1544 = 1;
  goto <bb 133>; [INV]

  <bb 132> :
  iftmp.1544 = 0;

  <bb 133> :
  retval.1543 = iftmp.1544;
  if (retval.1543 != 0)
    goto <bb 134>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 134> :
  check = 0;
  if (name != 0B)
    goto <bb 135>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 135> :
  _141 = strcmp (name, "exit");
  if (_141 == 0)
    goto <bb 136>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 136> :
  check = 1;

  <bb 137> :
  _142 = (long unsigned int) k;
  _143 = std::vector<return_type>::operator[] (&global_ret_type_array, _142);
  _144 = _143->stmt;
  _145 = gimple_code (_144);
  retval.1545 = _145 == 10;
  if (retval.1545 != 0)
    goto <bb 138>; [INV]
  else
    goto <bb 139>; [INV]

  <bb 138> :
  check = 1;

  <bb 139> :
  if (check == 1)
    goto <bb 140>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 140> :
  _146 = bb->index;
  _147 = gimple_bb (u_stmt);
  _148 = _147->index;
  if (_146 == _148)
    goto <bb 142>; [INV]
  else
    goto <bb 141>; [INV]

  <bb 141> :
  e.1548_149 = e;
  _150 = e.1548_149->dest;
  _151 = _150->index;
  _152 = gimple_bb (u_stmt);
  _153 = _152->index;
  if (_151 == _153)
    goto <bb 142>; [INV]
  else
    goto <bb 143>; [INV]

  <bb 142> :
  iftmp.1547 = 1;
  goto <bb 144>; [INV]

  <bb 143> :
  iftmp.1547 = 0;

  <bb 144> :
  retval.1546 = iftmp.1547;
  if (retval.1546 != 0)
    goto <bb 145>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 145> :
  _154 = (long unsigned int) k;
  _155 = std::vector<return_type>::operator[] (&global_ret_type_array, _154);
  tmp = _155->stmt;
  _156 = &bb->succs;
  ei2 = ei_start_1 (_156);
  goto <bb 172>; [INV]

  <bb 146> :
  e.1549_157 = e;
  _158 = e.1549_157->dest;
  _159 = _158->index;
  e2.1550_160 = e2;
  _161 = e2.1550_160->dest;
  _162 = _161->index;
  if (_159 != _162)
    goto <bb 147>; [INV]
  else
    goto <bb 160>; [INV]

  <bb 147> :
  e2.1552_163 = e2;
  _164 = e2.1552_163->dest;
  _165 = gimple_bb (tmp);
  D.257611 = dominated_by_p (1, _165, _164);

  <bb 148> :
  retval.1551 = D.257611;
  if (retval.1551 != 0)
    goto <bb 149>; [INV]
  else
    goto <bb 171>; [INV]

  <bb 149> :
  _166 = gimple_bb (tmp);
  cfun.1554_167 = cfun;
  _168 = cfun.1554_167->cfg;
  _169 = _168->x_exit_block_ptr;
  _170 = _169->prev_bb;
  D.257612 = dominated_by_p (1, _170, _166);

  <bb 150> :
  _171 = D.257612;
  retval.1553 = ~_171;
  if (retval.1553 != 0)
    goto <bb 151>; [INV]
  else
    goto <bb 171>; [INV]

  <bb 151> :
  stderr.1555_172 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1555_172);

  <bb 152> :
  stderr.1556_173 = stderr;
  __builtin_fwrite ("\x1b[40;31m    branch possiable have return or exit  \x1b[0m\n", 1, 55, stderr.1556_173);

  <bb 153> :
  debug_gimple_stmt (u_stmt);

  <bb 154> :
  _174 = gimple_bb (u_stmt);
  _175 = _174->index;
  stderr.1557_176 = stderr;
  fprintf (stderr.1557_176, "bb index := %d\n", _175);

  <bb 155> :
  debug_gimple_stmt (tmp);

  <bb 156> :
  _177 = gimple_location_safe (tmp);
  warning_at (_177, 0, "use location");

  <bb 157> :
  _178 = gimple_bb (u_stmt);
  _179 = _178->index;
  stderr.1558_180 = stderr;
  fprintf (stderr.1558_180, "gimple stmt in succ := %d \n", _179);

  <bb 158> :
  _181 = gimple_bb (tmp);
  _182 = _181->index;
  stderr.1559_183 = stderr;
  fprintf (stderr.1559_183, "branch in succ := %d have return or exit\n", _182);

  <bb 159> :
  stderr.1560_184 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1560_184);
  goto <bb 171>; [INV]

  <bb 160> :
  if (succ_havereturn == 0)
    goto <bb 161>; [INV]
  else
    goto <bb 171>; [INV]

  <bb 161> :
  e2.1561_185 = e2;
  _186 = e2.1561_185->dest;
  _187 = _186->index;
  cfun.1562_188 = cfun;
  _189 = cfun.1562_188->cfg;
  _190 = _189->x_exit_block_ptr;
  _191 = _190->prev_bb;
  _192 = _191->index;
  if (_187 == _192)
    goto <bb 162>; [INV]
  else
    goto <bb 171>; [INV]

  <bb 162> :
  stderr.1563_193 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1563_193);

  <bb 163> :
  stderr.1564_194 = stderr;
  __builtin_fwrite ("\x1b[40;31m    fucntion exit  \x1b[0m\n", 1, 32, stderr.1564_194);

  <bb 164> :
  debug_gimple_stmt (u_stmt);

  <bb 165> :
  _195 = gimple_location_safe (u_stmt);
  warning_at (_195, 0, "use location");

  <bb 166> :
  succ_havereturn = 1;
  _196 = bb->index;
  stderr.1565_197 = stderr;
  fprintf (stderr.1565_197, "\x1b[40;31m    branch possiable have return in bb:%d \x1b[0m\n", _196);

  <bb 167> :
  _198 = gimple_bb (u_stmt);
  _199 = _198->index;
  stderr.1566_200 = stderr;
  fprintf (stderr.1566_200, "gimple stmt in succ := %d \n", _199);

  <bb 168> :
  cfun.1567_201 = cfun;
  _202 = cfun.1567_201->cfg;
  _203 = _202->x_exit_block_ptr;
  _204 = _203->prev_bb;
  _205 = _204->index;
  stderr.1568_206 = stderr;
  fprintf (stderr.1568_206, "beacuse in succ := %d have return \n", _205);

  <bb 169> :
  stderr.1569_207 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1569_207);

  <bb 170> :
  // predicted unlikely by continue predictor.

  <bb 171> :
  ei_next (&ei2);

  <bb 172> :
  D.257613 = ei_cond (ei2, &e2);

  <bb 173> :
  retval.1570 = D.257613;
  if (retval.1570 != 0)
    goto <bb 146>; [INV]
  else
    goto <bb 174>; [INV]

  <bb 174> :
  e2 = {CLOBBER};
  ei2 = {CLOBBER};

  <bb 175> :
  ei_next (&ei);

  <bb 176> :
  D.257615 = ei_cond (ei, &e);

  <bb 177> :
  retval.1571 = D.257615;
  if (retval.1571 != 0)
    goto <bb 122>; [INV]
  else
    goto <bb 178>; [INV]

  <bb 178> :
  e = {CLOBBER};
  ei = {CLOBBER};
  bb = bb->next_bb;

  <bb 179> :
  _208 = table_temp->node;
  D.257617 = cgraph_node::get_fun (_208);

  <bb 180> :
  _209 = D.257617;
  _210 = _209->cfg;
  _211 = _210->x_exit_block_ptr;
  retval.1572 = bb != _211;
  if (retval.1572 != 0)
    goto <bb 121>; [INV]
  else
    goto <bb 181>; [INV]

  <bb 181> :
  k = k + 1;

  <bb 182> :
  _212 = (long unsigned int) k;
  _213 = std::vector<return_type>::size (&global_ret_type_array);
  retval.1573 = _212 < _213;
  if (retval.1573 != 0)
    goto <bb 119>; [INV]
  else
    goto <bb 183>; [INV]

  <bb 183> :
  pop_cfun ();

  <bb 184> :
  stmtloopcheck.1574_214 = stmtloopcheck;
  if (stmtloopcheck.1574_214 != 0)
    goto <bb 185>; [INV]
  else
    goto <bb 190>; [INV]

  <bb 185> :
  _215 = gimple_bb (u_stmt);
  D.257618 = bb_in_loop_p (_215);

  <bb 186> :
  retval.1575 = D.257618;
  if (retval.1575 != 0)
    goto <bb 187>; [INV]
  else
    goto <bb 190>; [INV]

  <bb 187> :
  stderr.1576_216 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1576_216);

  <bb 188> :
  stderr.1577_217 = stderr;
  __builtin_fwrite ("\x1b[40;31m    collect Stmt in loop \x1b[0m\n", 1, 38, stderr.1577_217);

  <bb 189> :
  stderr.1578_218 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1578_218);

  <bb 190> :
  samefucntioncheck.1579_219 = samefucntioncheck;
  if (samefucntioncheck.1579_219 != 0)
    goto <bb 191>; [INV]
  else
    goto <bb 217>; [INV]

  <bb 191> :
  _220 = table_temp->last_stmt;
  _221 = gimple_code (_220);
  retval.1580 = _221 == 8;
  if (retval.1580 != 0)
    goto <bb 192>; [INV]
  else
    goto <bb 217>; [INV]

  <bb 192> :
  _222 = gimple_code (u_stmt);
  retval.1581 = _222 == 8;
  if (retval.1581 != 0)
    goto <bb 193>; [INV]
  else
    goto <bb 217>; [INV]

  <bb 193> :
  _223 = table_temp->last_stmt;
  D.257619 = gimple_call_fn (_223);

  <bb 194> :
  _224 = D.257619;
  retval.1582 = _224 != 0B;
  if (retval.1582 != 0)
    goto <bb 195>; [INV]
  else
    goto <bb 217>; [INV]

  <bb 195> :
  D.257620 = gimple_call_fn (u_stmt);

  <bb 196> :
  _225 = D.257620;
  retval.1583 = _225 != 0B;
  if (retval.1583 != 0)
    goto <bb 197>; [INV]
  else
    goto <bb 217>; [INV]

  <bb 197> :
  _226 = table_temp->last_stmt;
  D.257621 = gimple_call_fn (_226);

  <bb 198> :
  _227 = D.257621;
  D.257622 = gimple_call_fn (u_stmt);

  <bb 199> :
  _228 = D.257622;
  retval.1584 = _227 == _228;
  if (retval.1584 != 0)
    goto <bb 200>; [INV]
  else
    goto <bb 202>; [INV]

  <bb 200> :
  _229 = table_temp->last_stmt;
  if (u_stmt == _229)
    goto <bb 201>; [INV]
  else
    goto <bb 217>; [INV]

  <bb 201> :
  debug_gimple_stmt (u_stmt);
  goto <bb 217>; [INV]

  <bb 202> :
  D.257623 = gimple_call_fn (u_stmt);

  <bb 203> :
  _230 = D.257623;
  D.257624 = get_name (_230);

  <bb 204> :
  name = D.257624;
  if (name != 0B)
    goto <bb 205>; [INV]
  else
    goto <bb 217>; [INV]

  <bb 205> :
  _231 = table_temp->last_stmt;
  D.257625 = gimple_call_fn (_231);

  <bb 206> :
  _232 = D.257625;
  D.257626 = get_name (_232);

  <bb 207> :
  _233 = D.257626;
  _234 = strcmp (name, _233);
  retval.1585 = _234 == 0;
  if (retval.1585 != 0)
    goto <bb 208>; [INV]
  else
    goto <bb 217>; [INV]

  <bb 208> :
  stderr.1586_235 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1586_235);

  <bb 209> :
  stderr.1587_236 = stderr;
  fprintf (stderr.1587_236, "\n Expand conflict \n", name);

  <bb 210> :
  stderr.1588_237 = stderr;
  fprintf (stderr.1588_237, " The same function may have multiple branches :%s\n", name);

  <bb 211> :
  _238 = table_temp->last_stmt;
  debug_gimple_stmt (_238);

  <bb 212> :
  _239 = table_temp->last_stmt;
  _240 = gimple_location_safe (_239);
  warning_at (_240, 0, "use location");

  <bb 213> :
  debug_gimple_stmt (u_stmt);

  <bb 214> :
  _241 = gimple_location_safe (u_stmt);
  warning_at (_241, 0, "use location");

  <bb 215> :
  _242 = gimple_bb (u_stmt);
  _243 = table_temp->node;
  check_bbinfo (_243, _242);

  <bb 216> :
  // predicted unlikely by continue predictor.
  goto <bb 488>; [INV]

  <bb 217> :
  free_type::free_type (&free_type);
  memoryleakcheck.1589_244 = memoryleakcheck;
  if (memoryleakcheck.1589_244 != 0)
    goto <bb 218>; [INV]
  else
    goto <bb 487>; [INV]

  <bb 218> :
  _245 = user_tmp->ret_stmt;
  if (_245 != 0B)
    goto <bb 219>; [INV]
  else
    goto <bb 262>; [INV]

  <bb 219> :
  debugmod.1590_246 = debugmod;
  if (debugmod.1590_246 != 0)
    goto <bb 220>; [INV]
  else
    goto <bb 223>; [INV]

  <bb 220> :
  function_tree.1591_247 = function_tree;
  D.257627 = get_name (function_tree.1591_247);

  <bb 221> :
  _248 = D.257627;
  stderr.1592_249 = stderr;
  fprintf (stderr.1592_249, "dot graph entry %s\n", _248);

  <bb 222> :
  stderr.1593_250 = stderr;
  __builtin_fwrite ("dot graph target entry end\n\n", 1, 28, stderr.1593_250);

  <bb 223> :
  _251 = user_tmp->ret_stmt;
  _252 = gimple_code (_251);
  retval.1594 = _252 == 10;
  if (retval.1594 != 0)
    goto <bb 224>; [INV]
  else
    goto <bb 487>; [INV]

  <bb 224> :
  _253 = user_tmp->ret_stmt;
  debug (_253);

  <bb 225> :
  _254 = user_tmp->ret_stmt;
  _255 = gimple_location_safe (_254);
  warning_at (_255, 0, "use location");

  <bb 226> :
  _256 = user_tmp->ret_stmt;
  debug_gimple_stmt (_256);

  <bb 227> :
  _257 = user_tmp->ret_stmt;
  now_stmt = _257;
  debugmod.1595_258 = debugmod;
  if (debugmod.1595_258 != 0)
    goto <bb 228>; [INV]
  else
    goto <bb 487>; [INV]

  <bb 228> :
  stderr.1596_259 = stderr;
  __builtin_fwrite ("dot graph target loc start ", 1, 27, stderr.1596_259);

  <bb 229> :
  _260 = user_tmp->ret_stmt;
  debug_gimple_stmt (_260);

  <bb 230> :
  _261 = user_tmp->ret_stmt;
  _262 = gimple_location_safe (_261);
  warning_at (_262, 0, "use location");

  <bb 231> :
  stderr.1597_263 = stderr;
  __builtin_fwrite ("dot graph target loc en1\n\n", 1, 26, stderr.1597_263);

  <bb 232> :
  _264 = user_tmp->ret_stmt;
  _265 = gimple_bb (_264);
  _266 = _265->index;
  stderr.1598_267 = stderr;
  fprintf (stderr.1598_267, "dot graph target line desc form basic block %d: ", _266);

  <bb 233> :
  _268 = user_tmp->ret_stmt;
  debug_gimple_stmt (_268);

  <bb 234> :
  _269 = user_tmp->ret_stmt;
  _270 = gimple_location_safe (_269);
  warning_at (_270, 0, "use location");

  <bb 235> :
  stderr.1599_271 = stderr;
  __builtin_fwrite ("dot graph target line desend\n\n", 1, 30, stderr.1599_271);

  <bb 236> :
  stderr.1600_272 = stderr;
  __builtin_fwrite ("dot graph target loc start ", 1, 27, stderr.1600_272);

  <bb 237> :
  _273 = user_tmp->ret_stmt;
  debug_gimple_stmt (_273);

  <bb 238> :
  _274 = user_tmp->ret_stmt;
  _275 = gimple_location_safe (_274);
  warning_at (_275, 0, "use location");

  <bb 239> :
  stderr.1601_276 = stderr;
  __builtin_fwrite ("dot graph target loc end\n\n", 1, 26, stderr.1601_276);

  <bb 240> :
  stderr.1602_277 = stderr;
  __builtin_fwrite ("dot graph target basicblock start ", 1, 34, stderr.1602_277);

  <bb 241> :
  _278 = user_tmp->ret_stmt;
  _279 = gimple_bb (_278);
  _280 = _279->index;
  function_tree.1603_281 = function_tree;
  D.257628 = get_name (function_tree.1603_281);

  <bb 242> :
  _282 = D.257628;
  stderr.1604_283 = stderr;
  fprintf (stderr.1604_283, "from %s basic block %d", _282, _280);

  <bb 243> :
  stderr.1605_284 = stderr;
  __builtin_fwrite ("dot graph target basicblock end\n\n", 1, 33, stderr.1605_284);

  <bb 244> :
  _285 = user_tmp->ret_stmt;
  D.257629 = gimple_block (_285);

  <bb 245> :
  _286 = D.257629;
  retval.1606 = _286 != 0B;
  if (retval.1606 != 0)
    goto <bb 246>; [INV]
  else
    goto <bb 258>; [INV]

  <bb 246> :
  _287 = user_tmp->ret_stmt;
  D.257630 = gimple_block (_287);

  <bb 247> :
  _288 = D.257630;
  _289 = _288->block.supercontext;
  _290 = _289->base.code;
  if (_290 == 33)
    goto <bb 248>; [INV]
  else
    goto <bb 251>; [INV]

  <bb 248> :
  _291 = user_tmp->ret_stmt;
  D.257631 = gimple_block (_291);

  <bb 249> :
  _292 = D.257631;
  _293 = _292->block.supercontext;
  function_tree.1609_294 = function_tree;
  if (_293 != function_tree.1609_294)
    goto <bb 250>; [INV]
  else
    goto <bb 251>; [INV]

  <bb 250> :
  iftmp.1608 = 1;
  goto <bb 252>; [INV]

  <bb 251> :
  iftmp.1608 = 0;

  <bb 252> :
  retval.1607 = iftmp.1608;
  if (retval.1607 != 0)
    goto <bb 253>; [INV]
  else
    goto <bb 258>; [INV]

  <bb 253> :
  stderr.1610_295 = stderr;
  __builtin_fwrite ("dot graph target basicblock star1 ", 1, 34, stderr.1610_295);

  <bb 254> :
  _296 = user_tmp->ret_stmt;
  _297 = gimple_bb (_296);
  _298 = _297->index;
  _299 = user_tmp->ret_stmt;
  D.257632 = gimple_block (_299);

  <bb 255> :
  _300 = D.257632;
  _301 = _300->block.supercontext;
  D.257633 = get_name (_301);

  <bb 256> :
  _302 = D.257633;
  stderr.1611_303 = stderr;
  fprintf (stderr.1611_303, "from %s basic block %d", _302, _298);

  <bb 257> :
  stderr.1612_304 = stderr;
  __builtin_fwrite ("dot graph target basicblock end\n\n", 1, 33, stderr.1612_304);

  <bb 258> :
  stderr.1613_305 = stderr;
  __builtin_fwrite ("dot graph stmt start ", 1, 21, stderr.1613_305);

  <bb 259> :
  _306 = user_tmp->ret_stmt;
  debug (_306);

  <bb 260> :
  _307 = user_tmp->ret_stmt;
  _308 = gimple_location_safe (_307);
  warning_at (_308, 0, "use location");

  <bb 261> :
  stderr.1614_309 = stderr;
  __builtin_fwrite ("dot graph stmt end\n\n", 1, 20, stderr.1614_309);
  goto <bb 487>; [INV]

  <bb 262> :
  _310 = user_tmp->target;
  if (_310 != 0B)
    goto <bb 263>; [INV]
  else
    goto <bb 345>; [INV]

  <bb 263> :
  debugmod.1615_311 = debugmod;
  if (debugmod.1615_311 != 0)
    goto <bb 264>; [INV]
  else
    goto <bb 267>; [INV]

  <bb 264> :
  function_tree.1616_312 = function_tree;
  D.257634 = get_name (function_tree.1616_312);

  <bb 265> :
  _313 = D.257634;
  stderr.1617_314 = stderr;
  fprintf (stderr.1617_314, "dot graph entry %s\n", _313);

  <bb 266> :
  stderr.1618_315 = stderr;
  __builtin_fwrite ("dot graph target entry end\n\n", 1, 28, stderr.1618_315);

  <bb 267> :
  finalstmt = u_stmt;
  debug (u_stmt);

  <bb 268> :
  _316 = gimple_location_safe (u_stmt);
  warning_at (_316, 0, "use location");

  <bb 269> :
  now_stmt = u_stmt;
  debugmod.1619_317 = debugmod;
  if (debugmod.1619_317 != 0)
    goto <bb 270>; [INV]
  else
    goto <bb 345>; [INV]

  <bb 270> :
  stderr.1620_318 = stderr;
  __builtin_fwrite ("dot graph target loc start ", 1, 27, stderr.1620_318);

  <bb 271> :
  _319 = table_temp->last_stmt;
  debug (_319);

  <bb 272> :
  _320 = table_temp->last_stmt;
  _321 = gimple_location_safe (_320);
  warning_at (_321, 0, "use location");

  <bb 273> :
  stderr.1621_322 = stderr;
  __builtin_fwrite ("dot graph target loc en1\n\n", 1, 26, stderr.1621_322);

  <bb 274> :
  _323 = gimple_bb (u_stmt);
  _324 = _323->index;
  stderr.1622_325 = stderr;
  fprintf (stderr.1622_325, "dot graph target line desc form basic block %d: ", _324);

  <bb 275> :
  debug (u_stmt);

  <bb 276> :
  _326 = gimple_location_safe (u_stmt);
  warning_at (_326, 0, "use location");

  <bb 277> :
  stderr.1623_327 = stderr;
  __builtin_fwrite ("dot graph target line desend\n\n", 1, 30, stderr.1623_327);

  <bb 278> :
  stderr.1624_328 = stderr;
  __builtin_fwrite ("dot graph target loc start ", 1, 27, stderr.1624_328);

  <bb 279> :
  _329 = table_temp->last_stmt;
  debug_gimple_stmt (_329);

  <bb 280> :
  _330 = table_temp->last_stmt;
  _331 = gimple_location_safe (_330);
  warning_at (_331, 0, "use location");

  <bb 281> :
  stderr.1625_332 = stderr;
  __builtin_fwrite ("dot graph target loc end\n\n", 1, 26, stderr.1625_332);

  <bb 282> :
  stderr.1626_333 = stderr;
  __builtin_fwrite ("dot graph target basicblock start ", 1, 34, stderr.1626_333);

  <bb 283> :
  _334 = gimple_bb (u_stmt);
  _335 = _334->index;
  function_tree.1627_336 = function_tree;
  D.257635 = get_name (function_tree.1627_336);

  <bb 284> :
  _337 = D.257635;
  stderr.1628_338 = stderr;
  fprintf (stderr.1628_338, "from %s basic block %d", _337, _335);

  <bb 285> :
  stderr.1629_339 = stderr;
  __builtin_fwrite ("dot graph target basicblock en1\n\n", 1, 33, stderr.1629_339);

  <bb 286> :
  relate_type::relate_type (&relate_type);
  function_tree.1630_340 = function_tree;
  relate_type.relate_funtree = function_tree.1630_340;
  D.257636 = gimple_block (u_stmt);

  <bb 287> :
  _341 = D.257636;
  retval.1631 = _341 != 0B;
  if (retval.1631 != 0)
    goto <bb 288>; [INV]
  else
    goto <bb 303>; [INV]

  <bb 288> :
  D.257637 = gimple_block (u_stmt);

  <bb 289> :
  _342 = D.257637;
  _343 = _342->block.supercontext;
  _344 = _343->base.code;
  if (_344 == 33)
    goto <bb 290>; [INV]
  else
    goto <bb 293>; [INV]

  <bb 290> :
  D.257638 = gimple_block (u_stmt);

  <bb 291> :
  _345 = D.257638;
  _346 = _345->block.supercontext;
  function_tree.1634_347 = function_tree;
  if (_346 != function_tree.1634_347)
    goto <bb 292>; [INV]
  else
    goto <bb 293>; [INV]

  <bb 292> :
  iftmp.1633 = 1;
  goto <bb 294>; [INV]

  <bb 293> :
  iftmp.1633 = 0;

  <bb 294> :
  retval.1632 = iftmp.1633;
  if (retval.1632 != 0)
    goto <bb 295>; [INV]
  else
    goto <bb 302>; [INV]

  <bb 295> :
  stderr.1635_348 = stderr;
  __builtin_fwrite ("dot graph target basicblock star1 ", 1, 34, stderr.1635_348);

  <bb 296> :
  _349 = gimple_bb (u_stmt);
  _350 = _349->index;
  D.257639 = gimple_block (u_stmt);

  <bb 297> :
  _351 = D.257639;
  _352 = _351->block.supercontext;
  D.257640 = get_name (_352);

  <bb 298> :
  _353 = D.257640;
  stderr.1636_354 = stderr;
  fprintf (stderr.1636_354, "from %s basic block %d", _353, _350);

  <bb 299> :
  stderr.1637_355 = stderr;
  __builtin_fwrite ("dot graph target basicblock end\n\n", 1, 33, stderr.1637_355);

  <bb 300> :
  D.257641 = gimple_block (u_stmt);

  <bb 301> :
  _356 = D.257641;
  _357 = _356->block.supercontext;
  relate_type.relate_funtree = _357;
  goto <bb 303>; [INV]

  <bb 302> :
  function_tree.1638_358 = function_tree;
  relate_type.relate_funtree = function_tree.1638_358;

  <bb 303> :
  _359 = table_temp->last_stmt;
  relate_type.laststmt = _359;
  relate_type.stmt = u_stmt;
  _360 = user_tmp->target;
  relate_type.relate_tree = _360;
  _361 = gimple_bb (u_stmt);
  _362 = _361->index;
  relate_type.now_basicblock = _362;
  std::vector<relate_type>::push_back (&maxbb_array.relate_type_array, &relate_type);

  <bb 304> :
  _363 = &table_temp->target;
  hash_map<tree_node*, function_relate_array>::put (function_maxbb_collect, _363, &maxbb_array);

  <bb 305> :
  _364 = gimple_code (u_stmt);
  retval.1639 = _364 == 8;
  if (retval.1639 != 0)
    goto <bb 306>; [INV]
  else
    goto <bb 335>; [INV]

  <bb 306> :
  debugmod.1640_365 = debugmod;
  if (debugmod.1640_365 != 0)
    goto <bb 307>; [INV]
  else
    goto <bb 311>; [INV]

  <bb 307> :
  stderr.1641_366 = stderr;
  __builtin_fwrite ("dot graph stmt start ", 1, 21, stderr.1641_366);

  <bb 308> :
  debug (finalstmt);

  <bb 309> :
  _367 = table_temp->last_stmt;
  debug (_367);

  <bb 310> :
  stderr.1642_368 = stderr;
  __builtin_fwrite ("dot graph stmt end\n\n", 1, 20, stderr.1642_368);

  <bb 311> :
  D.257642 = gimple_call_fn (u_stmt);

  <bb 312> :
  _369 = D.257642;
  D.257643 = get_name (_369);

  <bb 313> :
  name = D.257643;
  if (name != 0B)
    goto <bb 314>; [INV]
  else
    goto <bb 344>; [INV]

  <bb 314> :
  _370 = strcmp (name, "free");
  if (_370 == 0)
    goto <bb 317>; [INV]
  else
    goto <bb 315>; [INV]

  <bb 315> :
  _371 = strcmp (name, "xfree");
  if (_371 == 0)
    goto <bb 317>; [INV]
  else
    goto <bb 316>; [INV]

  <bb 316> :
  _372 = strcmp (name, "realloc");
  if (_372 == 0)
    goto <bb 317>; [INV]
  else
    goto <bb 330>; [INV]

  <bb 317> :
  stderr.1643_373 = stderr;
  __builtin_fwrite ("dot graph stmt start ", 1, 21, stderr.1643_373);

  <bb 318> :
  debug (u_stmt);

  <bb 319> :
  _374 = gimple_location_safe (u_stmt);
  warning_at (_374, 0, "use location");

  <bb 320> :
  stderr.1644_375 = stderr;
  __builtin_fwrite ("dot graph stmt end\n\n", 1, 20, stderr.1644_375);

  <bb 321> :
  freemod.1645_376 = freemod;
  if (freemod.1645_376 != 0)
    goto <bb 322>; [INV]
  else
    goto <bb 327>; [INV]

  <bb 322> :
  stderr.1646_377 = stderr;
  __builtin_fwrite ("dot graph target color desc", 1, 27, stderr.1646_377);

  <bb 323> :
  _378 = strcmp (name, "realloc");
  if (_378 == 0)
    goto <bb 324>; [INV]
  else
    goto <bb 325>; [INV]

  <bb 324> :
  stderr.1647_379 = stderr;
  __builtin_fwrite ("red", 1, 3, stderr.1647_379);
  goto <bb 326>; [INV]

  <bb 325> :
  stderr.1648_380 = stderr;
  __builtin_fwrite ("green", 1, 5, stderr.1648_380);

  <bb 326> :
  stderr.1649_381 = stderr;
  __builtin_fwrite ("dot graph target color desend\n\n", 1, 31, stderr.1649_381);

  <bb 327> :
  _382 = strcmp (name, "realloc");
  if (_382 == 0)
    goto <bb 328>; [INV]
  else
    goto <bb 329>; [INV]

  <bb 328> :
  stderr.1650_383 = stderr;
  __builtin_fwrite ("If realloc() fails, the initial memory block will not be freed() ", 1, 65, stderr.1650_383);

  <bb 329> :
  goto <bb 334>; [INV]

  <bb 330> :
  stderr.1651_384 = stderr;
  __builtin_fwrite ("dot graph stmt start ", 1, 21, stderr.1651_384);

  <bb 331> :
  debug (u_stmt);

  <bb 332> :
  _385 = gimple_location_safe (u_stmt);
  warning_at (_385, 0, "use location");

  <bb 333> :
  stderr.1652_386 = stderr;
  __builtin_fwrite ("dot graph stmt end\n\n", 1, 20, stderr.1652_386);

  <bb 334> :
  goto <bb 344>; [INV]

  <bb 335> :
  debugmod.1653_387 = debugmod;
  if (debugmod.1653_387 != 0)
    goto <bb 336>; [INV]
  else
    goto <bb 340>; [INV]

  <bb 336> :
  stderr.1654_388 = stderr;
  __builtin_fwrite ("dot graph stmt start ", 1, 21, stderr.1654_388);

  <bb 337> :
  debug (u_stmt);

  <bb 338> :
  _389 = table_temp->last_stmt;
  debug (_389);

  <bb 339> :
  stderr.1655_390 = stderr;
  __builtin_fwrite ("dot graph stmt end\n\n", 1, 20, stderr.1655_390);

  <bb 340> :
  stderr.1656_391 = stderr;
  __builtin_fwrite ("dot graph stmt start ", 1, 21, stderr.1656_391);

  <bb 341> :
  debug (u_stmt);

  <bb 342> :
  _392 = gimple_location_safe (u_stmt);
  warning_at (_392, 0, "use location");

  <bb 343> :
  stderr.1657_393 = stderr;
  __builtin_fwrite ("dot graph stmt end\n\n", 1, 20, stderr.1657_393);

  <bb 344> :
  relate_type = {CLOBBER};

  <bb 345> :
  _394 = user_tmp->target;
  if (_394 != 0B)
    goto <bb 346>; [INV]
  else
    goto <bb 487>; [INV]

  <bb 346> :
  _395 = gimple_code (u_stmt);
  retval.1658 = _395 == 8;
  if (retval.1658 != 0)
    goto <bb 347>; [INV]
  else
    goto <bb 354>; [INV]

  <bb 347> :
  D.257645 = gimple_call_fndecl (u_stmt);

  <bb 348> :
  _396 = D.257645;
  retval.1659 = _396 != 0B;
  if (retval.1659 != 0)
    goto <bb 349>; [INV]
  else
    goto <bb 354>; [INV]

  <bb 349> :
  D.257646 = gimple_call_fndecl (u_stmt);

  <bb 350> :
  _397 = D.257646;
  D.257647 = get_name (_397);

  <bb 351> :
  name = D.257647;
  if (name != 0B)
    goto <bb 352>; [INV]
  else
    goto <bb 353>; [INV]

  <bb 352> :
  stderr.1660_398 = stderr;
  fprintf (stderr.1660_398, "this stmt call this function :%s\n", name);
  goto <bb 354>; [INV]

  <bb 353> :
  stderr.1661_399 = stderr;
  fprintf (stderr.1661_399, "this stmt call this function :null\n", name);

  <bb 354> :
  _400 = gimple_code (u_stmt);
  retval.1662 = _400 == 18;
  if (retval.1662 != 0)
    goto <bb 355>; [INV]
  else
    goto <bb 356>; [INV]

  <bb 355> :
  find_phistmt = 1;
  stderr.1663_401 = stderr;
  fprintf (stderr.1663_401, "this stmt have mutiple branch ---%s-----\n", name);

  <bb 356> :
  if (name != 0B)
    goto <bb 357>; [INV]
  else
    goto <bb 367>; [INV]

  <bb 357> :
  _402 = strcmp (name, "realloc");
  if (_402 == 0)
    goto <bb 364>; [INV]
  else
    goto <bb 358>; [INV]

  <bb 358> :
  _403 = strcmp (name, "malloc");
  if (_403 == 0)
    goto <bb 364>; [INV]
  else
    goto <bb 359>; [INV]

  <bb 359> :
  _404 = strcmp (name, "xmalloc");
  if (_404 == 0)
    goto <bb 364>; [INV]
  else
    goto <bb 360>; [INV]

  <bb 360> :
  _405 = strcmp (name, "calloc");
  if (_405 == 0)
    goto <bb 364>; [INV]
  else
    goto <bb 361>; [INV]

  <bb 361> :
  _406 = strcmp (name, "xcalloc");
  if (_406 == 0)
    goto <bb 364>; [INV]
  else
    goto <bb 362>; [INV]

  <bb 362> :
  _407 = strcmp (name, "strdup");
  if (_407 == 0)
    goto <bb 364>; [INV]
  else
    goto <bb 363>; [INV]

  <bb 363> :
  _408 = strcmp (name, "xstrdup");
  if (_408 == 0)
    goto <bb 364>; [INV]
  else
    goto <bb 365>; [INV]

  <bb 364> :
  IS_MALLOC_FUCNTION.1664_409 = IS_MALLOC_FUCNTION;
  find_mallocstmt = (int) IS_MALLOC_FUCNTION.1664_409;
  goto <bb 366>; [INV]

  <bb 365> :
  IS_OTHRER_FUCNTION.1665_410 = IS_OTHRER_FUCNTION;
  find_mallocstmt = (int) IS_OTHRER_FUCNTION.1665_410;

  <bb 366> :

  <bb 367> :
  calleetype.1666_411 = (unsigned int) calleetype;
  FUNCITON_HEAP.1667_412 = FUNCITON_HEAP;
  if (calleetype.1666_411 == FUNCITON_HEAP.1667_412)
    goto <bb 368>; [INV]
  else
    goto <bb 369>; [INV]

  <bb 368> :
  function_tree.1668_413 = function_tree;
  debug_tree (function_tree.1668_413);
  goto <bb 387>; [INV]

  <bb 369> :
  calleetype.1669_414 = (unsigned int) calleetype;
  FUNCITON_THREAD.1670_415 = FUNCITON_THREAD;
  if (calleetype.1669_414 == FUNCITON_THREAD.1670_415)
    goto <bb 370>; [INV]
  else
    goto <bb 387>; [INV]

  <bb 370> :
  threadmod.1671_416 = threadmod;
  _417 = (int) threadmod.1671_416;
  if (_417 == 1)
    goto <bb 371>; [INV]
  else
    goto <bb 387>; [INV]

  <bb 371> :
  _418 = gimple_code (finalstmt);
  retval.1672 = _418 == 6;
  if (retval.1672 != 0)
    goto <bb 372>; [INV]
  else
    goto <bb 387>; [INV]

  <bb 372> :
  D.257648 = gimple_assign_lhs (finalstmt);

  <bb 373> :
  _419 = D.257648;
  _420 = BIT_FIELD_REF <_419->base, 8, 24>;
  _421 = _420 & 4;
  _422 = _421 == 0;
  _423 = (int) _422;
  retval.1673 = _423 == 1;
  if (retval.1673 != 0)
    goto <bb 374>; [INV]
  else
    goto <bb 379>; [INV]

  <bb 374> :
  stderr.1674_424 = stderr;
  __builtin_fwrite (" \n LOCAL VARIBALE  \n", 1, 20, stderr.1674_424);

  <bb 375> :
  debug_gimple_stmt (finalstmt);

  <bb 376> :
  _425 = gimple_location_safe (finalstmt);
  warning_at (_425, 0, "use location");

  <bb 377> :
  stderr.1675_426 = stderr;
  __builtin_fwrite (" \n LOCAL VARIBALE  \n", 1, 20, stderr.1675_426);

  <bb 378> :
  // predicted unlikely by continue predictor.
  goto <bb 488>; [INV]

  <bb 379> :
  stderr.1676_427 = stderr;
  __builtin_fwrite ("\n ================== warring  ================== \n", 1, 50, stderr.1676_427);

  <bb 380> :
  stderr.1677_428 = stderr;
  __builtin_fwrite ("\x1b[40;35m warring thread fucntion detction is on \x1b[0m\n", 1, 53, stderr.1677_428);

  <bb 381> :
  stderr.1678_429 = stderr;
  __builtin_fwrite ("\x1b[40;35m Detect GLOBAL VARIBALE \x1b[0m\n", 1, 37, stderr.1678_429);

  <bb 382> :
  debug_gimple_stmt (finalstmt);

  <bb 383> :
  _430 = gimple_location_safe (finalstmt);
  warning_at (_430, 0, "use location");

  <bb 384> :
  stderr.1679_431 = stderr;
  __builtin_fwrite ("\x1b[40;35m thread job function \x1b[0m\n", 1, 34, stderr.1679_431);

  <bb 385> :
  stderr.1680_432 = stderr;
  __builtin_fwrite ("\x1b[40;35m this stmt possible have Race Condition \xe3\x80\x82 \x1b[0m\n", 1, 57, stderr.1680_432);

  <bb 386> :
  stderr.1681_433 = stderr;
  __builtin_fwrite ("\n ================== warring  ================== \n", 1, 50, stderr.1681_433);

  <bb 387> :
  _434 = gimple_code (u_stmt);
  if (_434 == 8)
    goto <bb 388>; [INV]
  else
    goto <bb 391>; [INV]

  <bb 388> :
  find_mallocstmt.1684_435 = (unsigned int) find_mallocstmt;
  IS_MALLOC_FUCNTION.1685_436 = IS_MALLOC_FUCNTION;
  if (find_mallocstmt.1684_435 == IS_MALLOC_FUCNTION.1685_436)
    goto <bb 390>; [INV]
  else
    goto <bb 389>; [INV]

  <bb 389> :
  find_mallocstmt.1686_437 = (unsigned int) find_mallocstmt;
  IS_OTHRER_FUCNTION.1687_438 = IS_OTHRER_FUCNTION;
  if (find_mallocstmt.1686_437 == IS_OTHRER_FUCNTION.1687_438)
    goto <bb 390>; [INV]
  else
    goto <bb 391>; [INV]

  <bb 390> :
  iftmp.1683 = 1;
  goto <bb 392>; [INV]

  <bb 391> :
  iftmp.1683 = 0;

  <bb 392> :
  retval.1682 = iftmp.1683;
  if (retval.1682 != 0)
    goto <bb 393>; [INV]
  else
    goto <bb 487>; [INV]

  <bb 393> :
  IS_MALLOC_FUCNTION.1688_439 = IS_MALLOC_FUCNTION;
  find_mallocstmt = (int) IS_MALLOC_FUCNTION.1688_439;
  _440 = user_tmp->target;
  def_stmt = _440->ssa_name.def_stmt;
  D.257649 = gimple_call_fn (u_stmt);

  <bb 394> :
  _441 = D.257649;
  D.257650 = get_name (_441);

  <bb 395> :
  name = D.257650;
  if (name != 0B)
    goto <bb 396>; [INV]
  else
    goto <bb 487>; [INV]

  <bb 396> :
  _442 = strcmp (name, "free");
  if (_442 == 0)
    goto <bb 399>; [INV]
  else
    goto <bb 397>; [INV]

  <bb 397> :
  _443 = strcmp (name, "xfree");
  if (_443 == 0)
    goto <bb 399>; [INV]
  else
    goto <bb 398>; [INV]

  <bb 398> :
  _444 = strcmp (name, "realloc");
  if (_444 == 0)
    goto <bb 399>; [INV]
  else
    goto <bb 409>; [INV]

  <bb 399> :
  free_type.stmt = u_stmt;
  std::vector<free_type>::push_back (&free_array, &free_type);

  <bb 400> :
  stderr.1689_445 = stderr;
  __builtin_fwrite ("\n ================== find free stmt ================== \n", 1, 56, stderr.1689_445);

  <bb 401> :
  debug (u_stmt);

  <bb 402> :
  _446 = gimple_location_safe (u_stmt);
  warning_at (_446, 0, "use location");

  <bb 403> :
  _447 = strcmp (name, "realloc");
  if (_447 == 0)
    goto <bb 404>; [INV]
  else
    goto <bb 406>; [INV]

  <bb 404> :
  find_freestmt.1690_448 = find_freestmt;
  _449 = find_freestmt.1690_448 + 1;
  find_freestmt = _449;
  find_freestmt.1691_450 = find_freestmt;
  stderr.1692_451 = stderr;
  fprintf (stderr.1692_451, "\x1b[40;32m    FIND REALLOC STMT count:%d name:%s \x1b[0m\n", find_freestmt.1691_450, name);

  <bb 405> :
  find_freestmt.1693_452 = find_freestmt;
  stderr.1694_453 = stderr;
  fprintf (stderr.1694_453, "\x1b[40;32m    this stmt possiable free memory \x1b[0m\n", find_freestmt.1693_452, name);
  goto <bb 407>; [INV]

  <bb 406> :
  find_freestmt.1695_454 = find_freestmt;
  _455 = find_freestmt.1695_454 + 1;
  find_freestmt = _455;
  find_freestmt.1696_456 = find_freestmt;
  stderr.1697_457 = stderr;
  fprintf (stderr.1697_457, "\x1b[40;32m    HAS FREE STMT count:%d name:%s \x1b[0m\n", find_freestmt.1696_456, name);

  <bb 407> :
  stderr.1698_458 = stderr;
  __builtin_fwrite ("\n ================== find free stmt ================== \n", 1, 56, stderr.1698_458);

  <bb 408> :
  goto <bb 486>; [INV]

  <bb 409> :
  _459 = strcmp (name, "pthread_create");
  if (_459 == 0)
    goto <bb 410>; [INV]
  else
    goto <bb 466>; [INV]

  <bb 410> :
  table_temp->last_stmt = u_stmt;
  FUNCITON_THREAD.1699_460 = FUNCITON_THREAD;
  FUNCITON_THREAD.1700_461 = (int) FUNCITON_THREAD.1699_460;
  table_temp->swap_type = FUNCITON_THREAD.1700_461;
  _462 = table_temp->swap_type;
  _463 = (unsigned int) _462;
  FUNCITON_THREAD.1701_464 = FUNCITON_THREAD;
  if (_463 == FUNCITON_THREAD.1701_464)
    goto <bb 411>; [INV]
  else
    goto <bb 486>; [INV]

  <bb 411> :
  stderr.1702_465 = stderr;
  __builtin_fwrite ("\n ================== find pthread stmt ================== \n", 1, 59, stderr.1702_465);

  <bb 412> :
  debug (u_stmt);

  <bb 413> :
  _466 = gimple_location_safe (u_stmt);
  warning_at (_466, 0, "use location");

  <bb 414> :
  stderr.1703_467 = stderr;
  __builtin_fwrite ("\x1b[40;32m    FIND PTHREAD_CREATED STMT  \x1b[0m\n", 1, 44, stderr.1703_467);

  <bb 415> :
  stderr.1704_468 = stderr;
  __builtin_fwrite ("\n ================== pre_pthread_detched ================== \n", 1, 61, stderr.1704_468);

  <bb 416> :
  _469 = table_temp->last_stmt;
  D.257651 = gimple_call_num_args (_469);

  <bb 417> :
  _470 = D.257651;
  retval.1705 = _470 != 0;
  if (retval.1705 != 0)
    goto <bb 418>; [INV]
  else
    goto <bb 423>; [INV]

  <bb 418> :
  _471 = table_temp->last_stmt;
  retval.1706 = is_gimple_assign (_471);
  if (retval.1706 != 0)
    goto <bb 419>; [INV]
  else
    goto <bb 421>; [INV]

  <bb 419> :
  _472 = table_temp->last_stmt;
  D.257652 = gimple_assign_lhs (_472);

  <bb 420> :
  _473 = D.257652;
  trace_function_path (_473, -1, 0B, &find_pthread_detched);
  goto <bb 423>; [INV]

  <bb 421> :
  _474 = table_temp->last_stmt;
  D.257653 = gimple_call_arg (_474, 2);

  <bb 422> :
  _475 = D.257653;
  _476 = _475->exp.operands[0];
  trace_function_path (_476, -1, 0B, &find_pthread_detched);

  <bb 423> :
  stderr.1707_477 = stderr;
  __builtin_fwrite ("\n ================== pre_pthread_detched end ================== \n", 1, 65, stderr.1707_477);

  <bb 424> :
  _478 = table_temp->last_stmt;
  D.257654 = gimple_call_arg (_478, 3);

  <bb 425> :
  findtree = D.257654;
  retval.1708 = is_gimple_call (u_stmt);
  if (retval.1708 != 0)
    goto <bb 426>; [INV]
  else
    goto <bb 433>; [INV]

  <bb 426> :
  D.257655 = gimple_call_num_args (u_stmt);

  <bb 427> :
  _479 = D.257655;
  retval.1709 = _479 != 0;
  if (retval.1709 != 0)
    goto <bb 428>; [INV]
  else
    goto <bb 433>; [INV]

  <bb 428> :
  D.257656 = gimple_call_arg (u_stmt, 3);

  <bb 429> :
  findtree = D.257656;
  _480 = findtree->base.code;
  if (_480 == 131)
    goto <bb 430>; [INV]
  else
    goto <bb 431>; [INV]

  <bb 430> :
  _481 = findtree->exp.operands[0];
  function_tree.1710_482 = function_tree;
  trace_function_path (function_tree.1710_482, -1, _481, &find_freestmt);
  goto <bb 433>; [INV]

  <bb 431> :
  _483 = findtree->base.code;
  if (_483 == 153)
    goto <bb 432>; [INV]
  else
    goto <bb 433>; [INV]

  <bb 432> :
  function_tree.1711_484 = function_tree;
  trace_function_path (function_tree.1711_484, -1, findtree, &find_freestmt);

  <bb 433> :
  if (findtree != 0B)
    goto <bb 434>; [INV]
  else
    goto <bb 442>; [INV]

  <bb 434> :
  _485 = table_temp->last_stmt;
  D.257657 = gimple_call_num_args (_485);

  <bb 435> :
  _486 = D.257657;
  if (_486 != 0)
    goto <bb 436>; [INV]
  else
    goto <bb 438>; [INV]

  <bb 436> :
  _487 = table_temp->last_stmt;
  _488 = is_gimple_call (_487);
  if (_488 != 0)
    goto <bb 437>; [INV]
  else
    goto <bb 438>; [INV]

  <bb 437> :
  iftmp.1713 = 1;
  goto <bb 439>; [INV]

  <bb 438> :
  iftmp.1713 = 0;

  <bb 439> :
  retval.1712 = iftmp.1713;
  if (retval.1712 != 0)
    goto <bb 440>; [INV]
  else
    goto <bb 442>; [INV]

  <bb 440> :
  _489 = table_temp->last_stmt;
  D.257658 = gimple_call_arg (_489, 2);

  <bb 441> :
  _490 = D.257658;
  _491 = _490->exp.operands[0];
  trace_function_path (_491, 0, findtree, &find_freestmt);

  <bb 442> :
  _492 = table_temp->swap_stmt;
  if (_492 != 0B)
    goto <bb 443>; [INV]
  else
    goto <bb 446>; [INV]

  <bb 443> :
  _493 = table_temp->swap_stmt;
  D.257659 = gimple_call_num_args (_493);

  <bb 444> :
  _494 = D.257659;
  if (_494 != 0)
    goto <bb 445>; [INV]
  else
    goto <bb 446>; [INV]

  <bb 445> :
  iftmp.1715 = 1;
  goto <bb 447>; [INV]

  <bb 446> :
  iftmp.1715 = 0;

  <bb 447> :
  retval.1714 = iftmp.1715;
  if (retval.1714 != 0)
    goto <bb 448>; [INV]
  else
    goto <bb 456>; [INV]

  <bb 448> :
  stderr.1716_495 = stderr;
  __builtin_fwrite ("\n ================== pre_pthread_detched ================== \n", 1, 61, stderr.1716_495);

  <bb 449> :
  _496 = table_temp->swap_stmt;
  D.257660 = gimple_call_arg (_496, 2);

  <bb 450> :
  _497 = D.257660;
  _498 = _497->exp.operands[0];
  trace_function_path (_498, -1, 0B, &find_pthread_detched);

  <bb 451> :
  stderr.1717_499 = stderr;
  __builtin_fwrite ("\n ================== pre_pthread_detched end ================== \n", 1, 65, stderr.1717_499);

  <bb 452> :
  _500 = table_temp->swap_stmt;
  D.257661 = gimple_call_arg (_500, 3);

  <bb 453> :
  findtree = D.257661;
  if (findtree != 0B)
    goto <bb 454>; [INV]
  else
    goto <bb 456>; [INV]

  <bb 454> :
  _501 = table_temp->swap_stmt;
  D.257662 = gimple_call_arg (_501, 2);

  <bb 455> :
  _502 = D.257662;
  _503 = _502->exp.operands[0];
  trace_function_path (_503, 0, findtree, &find_freestmt);

  <bb 456> :
  find_pthread_detched.1718_504 = find_pthread_detched;
  if (find_pthread_detched.1718_504 == 0)
    goto <bb 457>; [INV]
  else
    goto <bb 463>; [INV]

  <bb 457> :
  _505 = table_temp->pthread_type;
  if (_505 == 0)
    goto <bb 458>; [INV]
  else
    goto <bb 459>; [INV]

  <bb 458> :
  iftmp.1719 = "CREATE_JOINABLE";
  goto <bb 460>; [INV]

  <bb 459> :
  iftmp.1719 = "CREATE_DETACHED";

  <bb 460> :
  stderr.1720_506 = stderr;
  fprintf (stderr.1720_506, "\x1b[40;32m    FIND PTHREAD_CREATED TYPE is %s  \x1b[0m\n", iftmp.1719);

  <bb 461> :
  is_pthread_detched = 0;
  _507 = table_temp->pthread_type;
  if (_507 == 1)
    goto <bb 462>; [INV]
  else
    goto <bb 465>; [INV]

  <bb 462> :
  is_pthread_detched = 1;
  goto <bb 465>; [INV]

  <bb 463> :
  stderr.1721_508 = stderr;
  __builtin_fwrite ("\x1b[40;32m    FIND PTHREAD_CREATED TYPE is CREATE_DETACHED  \x1b[0m\n", 1, 63, stderr.1721_508);

  <bb 464> :
  is_pthread_detched = 1;

  <bb 465> :
  stderr.1722_509 = stderr;
  __builtin_fwrite ("\n ================== find pthread stmt ================== \n", 1, 59, stderr.1722_509);
  goto <bb 486>; [INV]

  <bb 466> :
  _510 = strcmp (name, "pthread_join");
  if (_510 == 0)
    goto <bb 467>; [INV]
  else
    goto <bb 470>; [INV]

  <bb 467> :
  _511 = table_temp->swap_type;
  _512 = (unsigned int) _511;
  FUNCITON_THREAD.1723_513 = FUNCITON_THREAD;
  if (_512 == FUNCITON_THREAD.1723_513)
    goto <bb 468>; [INV]
  else
    goto <bb 486>; [INV]

  <bb 468> :
  stderr.1724_514 = stderr;
  __builtin_fwrite ("\x1b[40;32m    FIND PTHREAD_JOIN \x1b[0m\n", 1, 35, stderr.1724_514);

  <bb 469> :
  find_pthread_join = find_pthread_join + 1;
  goto <bb 486>; [INV]

  <bb 470> :
  freecount = find_freestmt;
  if (name != 0B)
    goto <bb 471>; [INV]
  else
    goto <bb 486>; [INV]

  <bb 471> :
  _515 = strcmp (name, "realloc");
  if (_515 == 0)
    goto <bb 486>; [INV]
  else
    goto <bb 472>; [INV]

  <bb 472> :
  _516 = strcmp (name, "malloc");
  if (_516 == 0)
    goto <bb 486>; [INV]
  else
    goto <bb 473>; [INV]

  <bb 473> :
  _517 = strcmp (name, "xmalloc");
  if (_517 == 0)
    goto <bb 486>; [INV]
  else
    goto <bb 474>; [INV]

  <bb 474> :
  _518 = strcmp (name, "calloc");
  if (_518 == 0)
    goto <bb 486>; [INV]
  else
    goto <bb 475>; [INV]

  <bb 475> :
  _519 = strcmp (name, "xcalloc");
  if (_519 == 0)
    goto <bb 486>; [INV]
  else
    goto <bb 476>; [INV]

  <bb 476> :
  _520 = strcmp (name, "strdup");
  if (_520 == 0)
    goto <bb 486>; [INV]
  else
    goto <bb 477>; [INV]

  <bb 477> :
  _521 = strcmp (name, "xstrdup");
  if (_521 == 0)
    goto <bb 486>; [INV]
  else
    goto <bb 478>; [INV]

  <bb 478> :
  _522 = strcmp (name, "fprintf");
  if (_522 == 0)
    goto <bb 486>; [INV]
  else
    goto <bb 479>; [INV]

  <bb 479> :
  IS_MALLOC_FUCNTION.1725_523 = IS_MALLOC_FUCNTION;
  find_mallocstmt = (int) IS_MALLOC_FUCNTION.1725_523;
  stderr.1726_524 = stderr;
  fprintf (stderr.1726_524, "trace fucntion name:%s \n", name);

  <bb 480> :
  _525 = table_temp->target;
  D.257663 = gimple_call_fndecl (u_stmt);

  <bb 481> :
  _526 = D.257663;
  trace_function_path (_526, 0, _525, &find_freestmt);

  <bb 482> :
  stderr.1727_527 = stderr;
  __builtin_fwrite ("\n ================== trace ================== \n", 1, 47, stderr.1727_527);

  <bb 483> :
  find_freestmt.1728_528 = find_freestmt;
  stderr.1729_529 = stderr;
  fprintf (stderr.1729_529, "trace fucntion free:%d \n", find_freestmt.1728_528);

  <bb 484> :
  find_freestmt.1730_530 = find_freestmt;
  if (freecount < find_freestmt.1730_530)
    goto <bb 485>; [INV]
  else
    goto <bb 486>; [INV]

  <bb 485> :
  free_type.stmt = u_stmt;
  std::vector<free_type>::push_back (&free_array, &free_type);

  <bb 486> :

  <bb 487> :
  free_type = {CLOBBER};
  goto <bb 489>; [INV]

  <bb 488> :
  free_type = {CLOBBER};

  <bb 489> :
  user_tmp = user_tmp->next;
  if (user_tmp != 0B)
    goto <bb 490>; [INV]
  else
    goto <bb 491>; [INV]

  <bb 490> :
  iftmp.1731 = user_tmp->stmt;
  goto <bb 492>; [INV]

  <bb 491> :
  iftmp.1731 = 0B;

  <bb 492> :
  u_stmt = iftmp.1731;

  <bb 493> :
  if (user_tmp != 0B)
    goto <bb 114>; [INV]
  else
    goto <bb 494>; [INV]

  <bb 494> :
  samefucntioncheck.1732_531 = samefucntioncheck;
  if (samefucntioncheck.1732_531 != 0)
    goto <bb 495>; [INV]
  else
    goto <bb 533>; [INV]

  <bb 495> :
  debugmod.1733_532 = debugmod;
  if (debugmod.1733_532 != 0)
    goto <bb 496>; [INV]
  else
    goto <bb 533>; [INV]

  <bb 496> :
  lastbasicblock = -1;
  _533 = &table_temp->target;
  D.257667 = hash_map<tree_node*, function_relate_array>::get (function_maxbb_collect, _533);

  <bb 497> :
  _534 = D.257667;
  retval.1734 = _534 != 0B;
  if (retval.1734 != 0)
    goto <bb 498>; [INV]
  else
    goto <bb 533>; [INV]

  <bb 498> :
  _535 = &table_temp->target;
  D.257668 = hash_map<tree_node*, function_relate_array>::get (function_maxbb_collect, _535);

  <bb 499> :
  _536 = D.257668;
  function_relate_array::operator= (&maxbb_array, _536);

  <bb 500> :
  std::vector<relate_type>::operator= (&maxbb_type_array, &maxbb_array.relate_type_array);

  <bb 501> :
  D.257669 = operator new (48);

  <bb 502> :
  D.202691 = D.257669;
  hash_map<tree_node*, int>::hash_map (D.202691, 13, 0, 1, 0);

  <bb 503> :
  function_maxbasicblock_collect = D.202691;
  i = 0;
  goto <bb 513>; [INV]

  <bb 504> :
  _537 = (long unsigned int) i;
  _538 = std::vector<relate_type>::operator[] (&maxbb_type_array, _537);
  _539 = &_538->now_basicblock;
  _540 = (long unsigned int) i;
  _541 = std::vector<relate_type>::operator[] (&maxbb_type_array, _540);
  _542 = &_541->relate_funtree;
  hash_map<tree_node*, int>::put (function_maxbasicblock_collect, _542, _539);

  <bb 505> :
  j = 0;
  goto <bb 511>; [INV]

  <bb 506> :
  _543 = (long unsigned int) i;
  _544 = std::vector<relate_type>::operator[] (&maxbb_type_array, _543);
  _545 = _544->relate_funtree;
  _546 = (long unsigned int) j;
  _547 = std::vector<relate_type>::operator[] (&maxbb_type_array, _546);
  _548 = _547->relate_funtree;
  retval.1735 = _545 == _548;
  if (retval.1735 != 0)
    goto <bb 507>; [INV]
  else
    goto <bb 510>; [INV]

  <bb 507> :
  _549 = (long unsigned int) i;
  _550 = std::vector<relate_type>::operator[] (&maxbb_type_array, _549);
  _551 = &_550->relate_funtree;
  D.257671 = hash_map<tree_node*, int>::get (function_maxbasicblock_collect, _551);

  <bb 508> :
  _552 = D.257671;
  max_bb = *_552;
  _553 = (long unsigned int) j;
  _554 = std::vector<relate_type>::operator[] (&maxbb_type_array, _553);
  _555 = _554->now_basicblock;
  retval.1736 = max_bb <= _555;
  if (retval.1736 != 0)
    goto <bb 509>; [INV]
  else
    goto <bb 510>; [INV]

  <bb 509> :
  _556 = (long unsigned int) j;
  _557 = std::vector<relate_type>::operator[] (&maxbb_type_array, _556);
  _558 = &_557->now_basicblock;
  _559 = (long unsigned int) j;
  _560 = std::vector<relate_type>::operator[] (&maxbb_type_array, _559);
  _561 = &_560->relate_funtree;
  hash_map<tree_node*, int>::put (function_maxbasicblock_collect, _561, _558);

  <bb 510> :
  j = j + 1;

  <bb 511> :
  _562 = (long unsigned int) j;
  _563 = std::vector<relate_type>::size (&maxbb_type_array);
  retval.1737 = _562 < _563;
  if (retval.1737 != 0)
    goto <bb 506>; [INV]
  else
    goto <bb 512>; [INV]

  <bb 512> :
  i = i + 1;

  <bb 513> :
  _564 = (long unsigned int) i;
  _565 = std::vector<relate_type>::size (&maxbb_type_array);
  retval.1738 = _564 < _565;
  if (retval.1738 != 0)
    goto <bb 504>; [INV]
  else
    goto <bb 514>; [INV]

  <bb 514> :
  it_i._M_current = 0B;
  it_i = std::vector<relate_type>::begin (&maxbb_type_array);
  goto <bb 528>; [INV]

  <bb 515> :
  _566 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _567 = &_566->relate_funtree;
  D.257672 = hash_map<tree_node*, int>::get (function_maxbasicblock_collect, _567);

  <bb 516> :
  _568 = D.257672;
  max_bb = *_568;
  _569 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _570 = _569->now_basicblock;
  retval.1739 = max_bb == _570;
  if (retval.1739 != 0)
    goto <bb 517>; [INV]
  else
    goto <bb 527>; [INV]

  <bb 517> :
  _571 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _572 = _571->relate_tree;
  def_stmt = _572->ssa_name.def_stmt;
  stderr.1740_573 = stderr;
  __builtin_fwrite ("dot graph target basicblock start ", 1, 34, stderr.1740_573);

  <bb 518> :
  _574 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _575 = _574->stmt;
  _576 = gimple_bb (_575);
  _577 = _576->index;
  _578 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _579 = _578->relate_funtree;
  D.257673 = get_name (_579);

  <bb 519> :
  _580 = D.257673;
  stderr.1741_581 = stderr;
  fprintf (stderr.1741_581, "from %s basic block %d", _580, _577);

  <bb 520> :
  stderr.1742_582 = stderr;
  __builtin_fwrite ("dot graph target basicblock en1\n\n", 1, 33, stderr.1742_582);

  <bb 521> :
  _583 = rand ();
  x = (long unsigned int) _583;
  stderr.1743_584 = stderr;
  __builtin_fwrite ("dot graph arrow", 1, 15, stderr.1743_584);

  <bb 522> :
  stderr.1744_585 = stderr;
  fprintf (stderr.1744_585, "subgraph cluster_%lu dot graph subgraph  ", x);

  <bb 523> :
  _586 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _587 = _586->stmt;
  debug (_587);

  <bb 524> :
  _588 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (&it_i);
  _589 = _588->relate_tree;
  _590 = _589->base.code;
  retval.1745 = _590 == 153;
  if (retval.1745 != 0)
    goto <bb 525>; [INV]
  else
    goto <bb 526>; [INV]

  <bb 525> :
  debug (def_stmt);

  <bb 526> :
  stderr.1746_591 = stderr;
  __builtin_fwrite ("dot graph subgrapend\n\n", 1, 22, stderr.1746_591);

  <bb 527> :
  __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator++ (&it_i);

  <bb 528> :
  D.202825 = std::vector<relate_type>::end (&maxbb_type_array);
  retval.1747 = __gnu_cxx::operator!=<relate_type*, std::vector<relate_type> > (&it_i, &D.202825);
  D.202825 = {CLOBBER};
  if (retval.1747 != 0)
    goto <bb 515>; [INV]
  else
    goto <bb 529>; [INV]

  <bb 529> :
  function_maxbb_collect.1748 = function_maxbb_collect;
  if (function_maxbb_collect.1748 != 0B)
    goto <bb 530>; [INV]
  else
    goto <bb 531>; [INV]

  <bb 530> :
  hash_map<tree_node*, function_relate_array>::~hash_map (function_maxbb_collect.1748);
  operator delete (function_maxbb_collect.1748, 48);

  <bb 531> :
  it_i = {CLOBBER};
  goto <bb 533>; [INV]

  <bb 532> :
  PTABLE_IS_NULL.1749_592 = PTABLE_IS_NULL;
  find_mallocstmt = (int) PTABLE_IS_NULL.1749_592;

  <bb 533> :
  relatemod.1750_593 = relatemod;
  if (relatemod.1750_593 != 0)
    goto <bb 534>; [INV]
  else
    goto <bb 553>; [INV]

  <bb 534> :
  debugmod.1751_594 = debugmod;
  if (debugmod.1751_594 != 0)
    goto <bb 535>; [INV]
  else
    goto <bb 553>; [INV]

  <bb 535> :
  std::vector<relate_type>::vector (&relate_type_array);
  function_relate_array::function_relate_array (&fun_array);
  function_relate_collect.1753_595 = function_relate_collect;
  _596 = &table_temp->target;
  D.257675 = hash_map<tree_node*, function_relate_array>::get (function_relate_collect.1753_595, _596);

  <bb 536> :
  _597 = D.257675;
  retval.1752 = _597 != 0B;
  if (retval.1752 != 0)
    goto <bb 537>; [INV]
  else
    goto <bb 552>; [INV]

  <bb 537> :
  function_relate_collect.1754_598 = function_relate_collect;
  _599 = &table_temp->target;
  D.257676 = hash_map<tree_node*, function_relate_array>::get (function_relate_collect.1754_598, _599);

  <bb 538> :
  _600 = D.257676;
  function_relate_array::operator= (&fun_array, _600);

  <bb 539> :
  std::vector<relate_type>::operator= (&relate_type_array, &fun_array.relate_type_array);

  <bb 540> :
  k = 0;
  goto <bb 551>; [INV]

  <bb 541> :
  _601 = rand ();
  x = (long unsigned int) _601;
  stderr.1755_602 = stderr;
  __builtin_fwrite ("dot graph start relate for1", 1, 27, stderr.1755_602);

  <bb 542> :
  _603 = (long unsigned int) k;
  _604 = std::vector<relate_type>::operator[] (&relate_type_array, _603);
  _605 = _604->now_fucntion;
  stderr.1756_606 = stderr;
  fprintf (stderr.1756_606, "ID : %lu\n", _605);

  <bb 543> :
  _607 = (long unsigned int) k;
  _608 = std::vector<relate_type>::operator[] (&relate_type_array, _607);
  _609 = _608->stmt;
  _610 = gimple_bb (_609);
  _611 = _610->index;
  _612 = (long unsigned int) k;
  _613 = std::vector<relate_type>::operator[] (&relate_type_array, _612);
  _614 = _613->relate_funtree;
  D.257677 = get_name (_614);

  <bb 544> :
  _615 = D.257677;
  stderr.1757_616 = stderr;
  fprintf (stderr.1757_616, "from %s basic block %d", _615, _611);

  <bb 545> :
  stderr.1758_617 = stderr;
  __builtin_fwrite ("dot graph end relate end\n\n", 1, 26, stderr.1758_617);

  <bb 546> :
  _618 = (long unsigned int) k;
  _619 = std::vector<relate_type>::operator[] (&relate_type_array, _618);
  _620 = _619->now_fucntion;
  _621 = (long unsigned int) k;
  _622 = std::vector<relate_type>::operator[] (&relate_type_array, _621);
  _623 = _622->now_stmt;
  stderr.1759_624 = stderr;
  fprintf (stderr.1759_624, "subgraph cluster_%lu dot graph subgraph  start ID : %lu stmt(relate) \xef\xbc\x8c Tree ID : %lu : ", x, _623, _620);

  <bb 547> :
  _625 = (long unsigned int) k;
  _626 = std::vector<relate_type>::operator[] (&relate_type_array, _625);
  _627 = _626->stmt;
  debug (_627);

  <bb 548> :
  _628 = (long unsigned int) k;
  _629 = std::vector<relate_type>::operator[] (&relate_type_array, _628);
  _630 = _629->stmt;
  _631 = gimple_location_safe (_630);
  warning_at (_631, 0, "use location");

  <bb 549> :
  stderr.1760_632 = stderr;
  __builtin_fwrite ("dot graph subgrapend\n\n", 1, 22, stderr.1760_632);

  <bb 550> :
  k = k + 1;

  <bb 551> :
  _633 = (long unsigned int) k;
  _634 = std::vector<relate_type>::size (&relate_type_array);
  retval.1761 = _633 < _634;
  if (retval.1761 != 0)
    goto <bb 541>; [INV]
  else
    goto <bb 552>; [INV]

  <bb 552> :
  function_relate_array::~function_relate_array (&fun_array);
  std::vector<relate_type>::~vector (&relate_type_array);
  relate_type_array = {CLOBBER};
  fun_array = {CLOBBER};

  <bb 553> :
  Looserulesfree.1762_635 = Looserulesfree;
  if (Looserulesfree.1762_635 != 0)
    goto <bb 554>; [INV]
  else
    goto <bb 584>; [INV]

  <bb 554> :
  stderr.1763_636 = stderr;
  __builtin_fwrite ("\n ================== Start Looserules free Check ================== \n", 1, 69, stderr.1763_636);

  <bb 555> :
  stderr.1764_637 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.1764_637);

  <bb 556> :
  stderr.1765_638 = stderr;
  __builtin_fwrite ("\x1b[40;35m   this module possiable false positives \x1b[0m\n", 1, 54, stderr.1765_638);

  <bb 557> :
  stderr.1766_639 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.1766_639);

  <bb 558> :
  _640 = table_temp->target;
  _641 = _640->base.code;
  if (_641 == 153)
    goto <bb 560>; [INV]
  else
    goto <bb 559>; [INV]

  <bb 559> :
  _642 = table_temp->target;
  _643 = _642->base.code;
  if (_643 == 165)
    goto <bb 560>; [INV]
  else
    goto <bb 584>; [INV]

  <bb 560> :
  _644 = table_temp->target;
  if (_644 != 0B)
    goto <bb 561>; [INV]
  else
    goto <bb 584>; [INV]

  <bb 561> :
  function_free_collect.1768_645 = function_free_collect;
  D.257681 = hash_map<tree_node*, function_free_array>::get (function_free_collect.1768_645, &function_tree);

  <bb 562> :
  _646 = D.257681;
  retval.1767 = _646 != 0B;
  if (retval.1767 != 0)
    goto <bb 563>; [INV]
  else
    goto <bb 584>; [INV]

  <bb 563> :
  function_free_collect.1769_647 = function_free_collect;
  D.257682 = hash_map<tree_node*, function_free_array>::get (function_free_collect.1769_647, &function_tree);

  <bb 564> :
  _648 = D.257682;
  function_free_array::function_free_array (&callerFunArray, _648);

  <bb 565> :
  std::vector<free_type>::vector (&callerRetTypearray, &callerFunArray.free_type_array);

  <bb 566> :
  k = 0;
  goto <bb 582>; [INV]

  <bb 567> :
  _649 = table_temp->target;
  _650 = (long unsigned int) k;
  _651 = std::vector<free_type>::operator[] (&callerRetTypearray, _650);
  _652 = _651->free_tree;
  D.257683 = ptr_derefs_may_alias_p (_652, _649);

  <bb 568> :
  retval.1770 = D.257683;
  if (retval.1770 != 0)
    goto <bb 569>; [INV]
  else
    goto <bb 581>; [INV]

  <bb 569> :
  _653 = (long unsigned int) k;
  _654 = std::vector<free_type>::operator[] (&callerRetTypearray, _653);
  _655 = _654->stmt;
  retval.1771 = is_gimple_call (_655);
  if (retval.1771 != 0)
    goto <bb 570>; [INV]
  else
    goto <bb 573>; [INV]

  <bb 570> :
  _656 = (long unsigned int) k;
  _657 = std::vector<free_type>::operator[] (&callerRetTypearray, _656);
  _658 = _657->stmt;
  D.257684 = gimple_call_fn (_658);

  <bb 571> :
  _659 = D.257684;
  D.257685 = get_name (_659);

  <bb 572> :
  name = D.257685;

  <bb 573> :
  _660 = strcmp (name, "realloc");
  if (_660 == 0)
    goto <bb 574>; [INV]
  else
    goto <bb 576>; [INV]

  <bb 574> :
  stderr.1772_661 = stderr;
  __builtin_fwrite ("\x1b[40;35m <Looserules> find realloc stmt free same pointer \x1b[0m\n", 1, 63, stderr.1772_661);

  <bb 575> :
  stderr.1773_662 = stderr;
  __builtin_fwrite ("*/If realloc() fails, the initial memory block will not be freed() */", 1, 69, stderr.1773_662);
  goto <bb 577>; [INV]

  <bb 576> :
  stderr.1774_663 = stderr;
  __builtin_fwrite ("\x1b[40;35m <Looserules> find free stmt free same pointer \x1b[0m\n", 1, 60, stderr.1774_663);

  <bb 577> :
  _664 = (long unsigned int) k;
  _665 = std::vector<free_type>::operator[] (&callerRetTypearray, _664);
  _666 = _665->stmt;
  debug_gimple_stmt (_666);

  <bb 578> :
  _667 = (long unsigned int) k;
  _668 = std::vector<free_type>::operator[] (&callerRetTypearray, _667);
  _669 = _668->stmt;
  _670 = gimple_location_safe (_669);
  warning_at (_670, 0, "use location");

  <bb 579> :
  free_type::free_type (&free_type);
  _671 = (long unsigned int) k;
  _672 = std::vector<free_type>::operator[] (&callerRetTypearray, _671);
  _673 = _672->stmt;
  free_type.stmt = _673;
  free_type.Looserulesfree = 1;
  std::vector<free_type>::push_back (&free_array, &free_type);

  <bb 580> :
  find_Looserulesfreestmt = find_Looserulesfreestmt + 1;
  free_type = {CLOBBER};

  <bb 581> :
  k = k + 1;

  <bb 582> :
  _674 = (long unsigned int) k;
  _675 = std::vector<free_type>::size (&callerRetTypearray);
  retval.1775 = _674 < _675;
  if (retval.1775 != 0)
    goto <bb 567>; [INV]
  else
    goto <bb 583>; [INV]

  <bb 583> :
  std::vector<free_type>::~vector (&callerRetTypearray);
  function_free_array::~function_free_array (&callerFunArray);
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};

  <bb 584> :
  useafterfree.1776_676 = useafterfree;
  if (useafterfree.1776_676 != 0)
    goto <bb 585>; [INV]
  else
    goto <bb 669>; [INV]

  <bb 585> :
  treeGimpleArray.1777_677 = treeGimpleArray;
  _678 = &table_temp->target;
  D.257690 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.1777_677, _678);

  <bb 586> :
  user_tmp = D.257690;
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  stderr.1778_679 = stderr;
  __builtin_fwrite ("\n ================== Start Use after free Check ================== \n", 1, 68, stderr.1778_679);

  <bb 587> :
  _680 = user_tmp->size;
  if (_680 > 0)
    goto <bb 588>; [INV]
  else
    goto <bb 667>; [INV]

  <bb 588> :
  if (user_tmp != 0B)
    goto <bb 589>; [INV]
  else
    goto <bb 590>; [INV]

  <bb 589> :
  iftmp.1779 = user_tmp->stmt;
  goto <bb 591>; [INV]

  <bb 590> :
  iftmp.1779 = 0B;

  <bb 591> :
  u_stmt = iftmp.1779;
  goto <bb 666>; [INV]

  <bb 592> :
  i = 0;
  goto <bb 661>; [INV]

  <bb 593> :
  _681 = (long unsigned int) i;
  D.257691 = std::vector<free_type>::at (&free_array, _681);

  <bb 594> :
  _682 = D.257691;
  _683 = _682->stmt;
  D.257692 = gimple_call_fndecl (_683);

  <bb 595> :
  _684 = D.257692;
  retval.1780 = _684 != 0B;
  if (retval.1780 != 0)
    goto <bb 596>; [INV]
  else
    goto <bb 660>; [INV]

  <bb 596> :
  _685 = (long unsigned int) i;
  D.257693 = std::vector<free_type>::at (&free_array, _685);

  <bb 597> :
  _686 = D.257693;
  _687 = _686->stmt;
  retval.1781 = u_stmt != _687;
  if (retval.1781 != 0)
    goto <bb 598>; [INV]
  else
    goto <bb 660>; [INV]

  <bb 598> :
  retval.1782 = is_gimple_call (u_stmt);
  if (retval.1782 != 0)
    goto <bb 599>; [INV]
  else
    goto <bb 604>; [INV]

  <bb 599> :
  _688 = (long unsigned int) i;
  D.257694 = std::vector<free_type>::at (&free_array, _688);

  <bb 600> :
  _689 = D.257694;
  _690 = _689->stmt;
  D.257695 = gimple_call_fndecl (_690);

  <bb 601> :
  _691 = D.257695;
  D.257696 = gimple_call_fndecl (u_stmt);

  <bb 602> :
  _692 = D.257696;
  retval.1783 = _691 == _692;
  if (retval.1783 != 0)
    goto <bb 603>; [INV]
  else
    goto <bb 604>; [INV]

  <bb 603> :
  // predicted unlikely by continue predictor.
  goto <bb 660>; [INV]

  <bb 604> :
  _693 = (long unsigned int) i;
  D.257697 = std::vector<free_type>::at (&free_array, _693);

  <bb 605> :
  _694 = D.257697;
  _695 = _694->stmt;
  D.257698 = gimple_call_num_args (_695);

  <bb 606> :
  _696 = D.257698;
  retval.1784 = _696 != 0;
  if (retval.1784 != 0)
    goto <bb 607>; [INV]
  else
    goto <bb 635>; [INV]

  <bb 607> :
  _697 = (long unsigned int) i;
  D.257699 = std::vector<free_type>::at (&free_array, _697);

  <bb 608> :
  _698 = D.257699;
  _699 = _698->stmt;
  D.257700 = gimple_call_arg (_699, 0);

  <bb 609> :
  callarg = D.257700;
  _700 = callarg->base.code;
  if (_700 == 153)
    goto <bb 610>; [INV]
  else
    goto <bb 624>; [INV]

  <bb 610> :
  def_stmt = callarg->ssa_name.def_stmt;
  if (def_stmt != 0B)
    goto <bb 611>; [INV]
  else
    goto <bb 624>; [INV]

  <bb 611> :
  _701 = gimple_code (def_stmt);
  retval.1785 = _701 == 18;
  if (retval.1785 != 0)
    goto <bb 612>; [INV]
  else
    goto <bb 624>; [INV]

  <bb 612> :
  D.257701 = gimple_phi_num_args (def_stmt);

  <bb 613> :
  _702 = D.257701;
  retval.1786 = _702 != 0;
  if (retval.1786 != 0)
    goto <bb 614>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 614> :
  k = 0;
  goto <bb 619>; [INV]

  <bb 615> :
  _703 = (long unsigned int) k;
  D.257702 = gimple_phi_arg_def (def_stmt, _703);

  <bb 616> :
  arg = D.257702;
  _704 = user_tmp->target;
  if (arg == _704)
    goto <bb 617>; [INV]
  else
    goto <bb 618>; [INV]

  <bb 617> :
  // predicted unlikely by continue predictor.

  <bb 618> :
  k = k + 1;

  <bb 619> :
  D.257703 = gimple_phi_num_args (def_stmt);

  <bb 620> :
  _705 = D.257703;
  k.1788_706 = (unsigned int) k;
  retval.1787 = _705 > k.1788_706;
  if (retval.1787 != 0)
    goto <bb 615>; [INV]
  else
    goto <bb 621>; [INV]

  <bb 621> :
  D.257704 = gimple_phi_result (def_stmt);

  <bb 622> :
  _707 = D.257704;
  _708 = user_tmp->target;
  retval.1789 = _707 == _708;
  if (retval.1789 != 0)
    goto <bb 623>; [INV]
  else
    goto <bb 624>; [INV]

  <bb 623> :
  // predicted unlikely by continue predictor.
  goto <bb 660>; [INV]

  <bb 624> :
  retval.1790 = is_gimple_call (u_stmt);
  if (retval.1790 != 0)
    goto <bb 625>; [INV]
  else
    goto <bb 631>; [INV]

  <bb 625> :
  _709 = (long unsigned int) i;
  D.257705 = std::vector<free_type>::at (&free_array, _709);

  <bb 626> :
  _710 = D.257705;
  _711 = _710->stmt;
  D.257706 = gimple_call_fndecl (_711);

  <bb 627> :
  _712 = D.257706;
  D.257707 = gimple_call_fndecl (u_stmt);

  <bb 628> :
  _713 = D.257707;
  retval.1791 = _712 == _713;
  if (retval.1791 != 0)
    goto <bb 629>; [INV]
  else
    goto <bb 631>; [INV]

  <bb 629> :
  _714 = user_tmp->target;
  if (callarg == _714)
    goto <bb 630>; [INV]
  else
    goto <bb 631>; [INV]

  <bb 630> :
  // predicted unlikely by continue predictor.
  goto <bb 660>; [INV]

  <bb 631> :
  _715 = gimple_code (u_stmt);
  retval.1792 = _715 == 18;
  if (retval.1792 != 0)
    goto <bb 632>; [INV]
  else
    goto <bb 635>; [INV]

  <bb 632> :
  D.257708 = gimple_phi_result (u_stmt);

  <bb 633> :
  _716 = D.257708;
  retval.1793 = callarg == _716;
  if (retval.1793 != 0)
    goto <bb 634>; [INV]
  else
    goto <bb 635>; [INV]

  <bb 634> :
  // predicted unlikely by continue predictor.
  goto <bb 660>; [INV]

  <bb 635> :
  function_tree.1795_717 = function_tree;
  _718 = (long unsigned int) i;
  D.257709 = std::vector<free_type>::at (&free_array, _718);

  <bb 636> :
  _719 = D.257709;
  _720 = _719->stmt;
  D.257710 = Location_b2 (_720, u_stmt, function_tree.1795_717);

  <bb 637> :
  retval.1794 = D.257710;
  if (retval.1794 != 0)
    goto <bb 638>; [INV]
  else
    goto <bb 660>; [INV]

  <bb 638> :
  stderr.1796_721 = stderr;
  __builtin_fwrite ("\n============================================================\n", 1, 62, stderr.1796_721);

  <bb 639> :
  _722 = (long unsigned int) i;
  D.257711 = std::vector<free_type>::at (&free_array, _722);

  <bb 640> :
  _723 = D.257711;
  _724 = _723->Looserulesfree;
  retval.1797 = _724 != 0;
  if (retval.1797 != 0)
    goto <bb 641>; [INV]
  else
    goto <bb 642>; [INV]

  <bb 641> :
  stderr.1798_725 = stderr;
  __builtin_fwrite ("\x1b[40;35m <Looserules> find free stmt free same pointer \x1b[0m\n", 1, 60, stderr.1798_725);

  <bb 642> :
  _726 = (long unsigned int) i;
  D.257712 = std::vector<free_type>::at (&free_array, _726);

  <bb 643> :
  _727 = D.257712;
  _728 = _727->stmt;
  debug_gimple_stmt (_728);

  <bb 644> :
  _729 = (long unsigned int) i;
  D.257713 = std::vector<free_type>::at (&free_array, _729);

  <bb 645> :
  _730 = D.257713;
  _731 = _730->stmt;
  _732 = gimple_location_safe (_731);
  warning_at (_732, 0, "free in this location");

  <bb 646> :
  _733 = (long unsigned int) i;
  D.257714 = std::vector<free_type>::at (&free_array, _733);

  <bb 647> :
  _734 = D.257714;
  _735 = _734->stmt;
  _736 = gimple_bb (_735);
  _737 = table_temp->node;
  check_bbinfo (_737, _736);

  <bb 648> :
  stderr.1799_738 = stderr;
  __builtin_fwrite ("\n===== possiable asias =====\n", 1, 29, stderr.1799_738);

  <bb 649> :
  debug_gimple_stmt (u_stmt);

  <bb 650> :
  _739 = gimple_location_safe (u_stmt);
  warning_at (_739, 0, "use location");

  <bb 651> :
  _740 = gimple_bb (u_stmt);
  _741 = table_temp->node;
  check_bbinfo (_741, _740);

  <bb 652> :
  stderr.1800_742 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.1800_742);

  <bb 653> :
  _743 = (long unsigned int) i;
  D.257715 = std::vector<free_type>::at (&free_array, _743);

  <bb 654> :
  _744 = D.257715;
  _745 = _744->stmt;
  D.257716 = gimple_call_fn (_745);

  <bb 655> :
  _746 = D.257716;
  D.257717 = get_name (_746);

  <bb 656> :
  name = D.257717;
  _747 = strcmp (name, "realloc");
  if (_747 == 0)
    goto <bb 657>; [INV]
  else
    goto <bb 658>; [INV]

  <bb 657> :
  stderr.1801_748 = stderr;
  __builtin_fwrite ("\x1b[40;35m  realloc Use after free error! \x1b[0m\n", 1, 45, stderr.1801_748);
  goto <bb 659>; [INV]

  <bb 658> :
  stderr.1802_749 = stderr;
  __builtin_fwrite ("\x1b[40;35m    Use after free error! \x1b[0m\n", 1, 39, stderr.1802_749);

  <bb 659> :
  stderr.1803_750 = stderr;
  __builtin_fwrite ("\n ================== warring ================== \n", 1, 49, stderr.1803_750);

  <bb 660> :
  i = i + 1;

  <bb 661> :
  _751 = (long unsigned int) i;
  _752 = std::vector<free_type>::size (&free_array);
  retval.1804 = _751 < _752;
  if (retval.1804 != 0)
    goto <bb 593>; [INV]
  else
    goto <bb 662>; [INV]

  <bb 662> :
  user_tmp = user_tmp->next;
  if (user_tmp != 0B)
    goto <bb 663>; [INV]
  else
    goto <bb 664>; [INV]

  <bb 663> :
  iftmp.1805 = user_tmp->stmt;
  goto <bb 665>; [INV]

  <bb 664> :
  iftmp.1805 = 0B;

  <bb 665> :
  u_stmt = iftmp.1805;

  <bb 666> :
  if (user_tmp != 0B)
    goto <bb 592>; [INV]
  else
    goto <bb 667>; [INV]

  <bb 667> :
  stderr.1806_753 = stderr;
  __builtin_fwrite ("\ndot graph END\n", 1, 15, stderr.1806_753);

  <bb 668> :
  start = {CLOBBER};

  <bb 669> :
  stderr.1807_754 = stderr;
  __builtin_fwrite (" \n Finish check Pointer Collect  \n", 1, 34, stderr.1807_754);

  <bb 670> :
  function_relate_array::~function_relate_array (&maxbb_array);
  std::vector<relate_type>::~vector (&maxbb_type_array);
  maxbb_type_array = {CLOBBER};
  maxbb_array = {CLOBBER};
  goto <bb 672>; [INV]

  <bb 671> :
  PTABLE_IS_NULL.1808_755 = PTABLE_IS_NULL;
  find_mallocstmt = (int) PTABLE_IS_NULL.1808_755;

  <bb 672> :
  _756 = table_temp->swap_type;
  _757 = (unsigned int) _756;
  FUNCITON_THREAD.1809_758 = FUNCITON_THREAD;
  if (_757 == FUNCITON_THREAD.1809_758)
    goto <bb 673>; [INV]
  else
    goto <bb 684>; [INV]

  <bb 673> :
  if (is_pthread_detched == 0)
    goto <bb 674>; [INV]
  else
    goto <bb 681>; [INV]

  <bb 674> :
  if (find_pthread_join == 0)
    goto <bb 675>; [INV]
  else
    goto <bb 678>; [INV]

  <bb 675> :
  stderr.1810_759 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1810_759);

  <bb 676> :
  stderr.1811_760 = stderr;
  __builtin_fwrite ("\x1b[40;31m    pthread is JOINABLE but no pthread_join stmt \x1b[0m\n", 1, 62, stderr.1811_760);

  <bb 677> :
  stderr.1812_761 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1812_761);
  goto <bb 684>; [INV]

  <bb 678> :
  stderr.1813_762 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1813_762);

  <bb 679> :
  stderr.1814_763 = stderr;
  __builtin_fwrite ("\x1b[40;32m    pthread is JOINABLE and no memory leak   \x1b[0m\n", 1, 58, stderr.1814_763);

  <bb 680> :
  stderr.1815_764 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1815_764);
  goto <bb 684>; [INV]

  <bb 681> :
  stderr.1816_765 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1816_765);

  <bb 682> :
  stderr.1817_766 = stderr;
  __builtin_fwrite ("\x1b[40;32m    pthread is DETACHED and no memory leak  \x1b[0m\n", 1, 57, stderr.1817_766);

  <bb 683> :
  stderr.1818_767 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1818_767);

  <bb 684> :
  ptable_type.1819_768 = (unsigned int) ptable_type;
  IS_MALLOC_FUCNTION.1820_769 = IS_MALLOC_FUCNTION;
  if (ptable_type.1819_768 == IS_MALLOC_FUCNTION.1820_769)
    goto <bb 685>; [INV]
  else
    goto <bb 687>; [INV]

  <bb 685> :
  find_mallocstmt.1821_770 = (unsigned int) find_mallocstmt;
  IS_OTHRER_FUCNTION.1822_771 = IS_OTHRER_FUCNTION;
  if (find_mallocstmt.1821_770 == IS_OTHRER_FUCNTION.1822_771)
    goto <bb 686>; [INV]
  else
    goto <bb 687>; [INV]

  <bb 686> :
  IS_MALLOC_FUCNTION.1823_772 = IS_MALLOC_FUCNTION;
  find_mallocstmt = (int) IS_MALLOC_FUCNTION.1823_772;

  <bb 687> :
  Looserulesfree.1824_773 = Looserulesfree;
  if (Looserulesfree.1824_773 != 0)
    goto <bb 688>; [INV]
  else
    goto <bb 696>; [INV]

  <bb 688> :
  stderr.1825_774 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1825_774);

  <bb 689> :
  stderr.1826_775 = stderr;
  fprintf (stderr.1826_775, "\x1b[40;35m  \tLooserules free count:%d \x1b[0m\n", find_Looserulesfreestmt);

  <bb 690> :
  find_freestmt.1827_776 = find_freestmt;
  stderr.1828_777 = stderr;
  fprintf (stderr.1828_777, "\x1b[40;31m  \tfree count:%d \x1b[0m\n", find_freestmt.1827_776);

  <bb 691> :
  if (find_Looserulesfreestmt > 1)
    goto <bb 692>; [INV]
  else
    goto <bb 693>; [INV]

  <bb 692> :
  stderr.1829_778 = stderr;
  fprintf (stderr.1829_778, "\x1b[40;31m  \tpossible double free [Looserules]:%d \x1b[0m\n", find_Looserulesfreestmt);

  <bb 693> :
  find_freestmt.1830_779 = find_freestmt;
  if (find_freestmt.1830_779 > 1)
    goto <bb 694>; [INV]
  else
    goto <bb 695>; [INV]

  <bb 694> :
  find_freestmt.1831_780 = find_freestmt;
  stderr.1832_781 = stderr;
  fprintf (stderr.1832_781, "\x1b[40;31m  \tpossible double free [rigorous]:%d \x1b[0m\n", find_freestmt.1831_780);

  <bb 695> :
  stderr.1833_782 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1833_782);

  <bb 696> :
  find_mallocstmt.1834_783 = (unsigned int) find_mallocstmt;
  IS_MALLOC_FUCNTION.1835_784 = IS_MALLOC_FUCNTION;
  if (find_mallocstmt.1834_783 == IS_MALLOC_FUCNTION.1835_784)
    goto <bb 697>; [INV]
  else
    goto <bb 717>; [INV]

  <bb 697> :
  defmalloc_type::defmalloc_type (&defmalloc_type);
  _785 = table_temp->last_stmt;
  defmalloc_type.stmt = _785;
  _786 = table_temp->target;
  defmalloc_type.malloc_tree = _786;
  i = 0;
  goto <bb 700>; [INV]

  <bb 698> :
  _787 = (long unsigned int) i;
  _788 = std::vector<free_type>::operator[] (&free_array, _787);
  std::vector<free_type>::push_back (&defmalloc_type.free_array, _788);

  <bb 699> :
  i = i + 1;

  <bb 700> :
  _789 = (long unsigned int) i;
  _790 = std::vector<free_type>::size (&free_array);
  retval.1836 = _789 < _790;
  if (retval.1836 != 0)
    goto <bb 698>; [INV]
  else
    goto <bb 701>; [INV]

  <bb 701> :
  std::vector<defmalloc_type>::push_back (&defmalloc_array, &defmalloc_type);

  <bb 702> :
  find_freestmt.1837_791 = find_freestmt;
  if (find_freestmt.1837_791 == 0)
    goto <bb 703>; [INV]
  else
    goto <bb 706>; [INV]

  <bb 703> :
  stderr.1838_792 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1838_792);

  <bb 704> :
  stderr.1839_793 = stderr;
  __builtin_fwrite ("\x1b[40;31m    no free stmt possible memory leak \x1b[0m\n", 1, 51, stderr.1839_793);

  <bb 705> :
  stderr.1840_794 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1840_794);
  goto <bb 716>; [INV]

  <bb 706> :
  find_freestmt.1841_795 = find_freestmt;
  if (find_freestmt.1841_795 == 1)
    goto <bb 707>; [INV]
  else
    goto <bb 712>; [INV]

  <bb 707> :
  stderr.1842_796 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1842_796);

  <bb 708> :
  if (find_phistmt == 1)
    goto <bb 709>; [INV]
  else
    goto <bb 710>; [INV]

  <bb 709> :
  stderr.1843_797 = stderr;
  __builtin_fwrite ("\x1b[40;31m   need check branch because multiple direction varible\x1b[0m\n", 1, 68, stderr.1843_797);
  goto <bb 711>; [INV]

  <bb 710> :
  stderr.1844_798 = stderr;
  __builtin_fwrite ("\x1b[40;32m   No memory leak, need more check!  \x1b[0m\n", 1, 50, stderr.1844_798);

  <bb 711> :
  stderr.1845_799 = stderr;
  __builtin_fwrite ("\n======================================================================\n\n", 1, 73, stderr.1845_799);
  goto <bb 716>; [INV]

  <bb 712> :
  find_freestmt.1846_800 = find_freestmt;
  if (find_freestmt.1846_800 > 1)
    goto <bb 713>; [INV]
  else
    goto <bb 716>; [INV]

  <bb 713> :
  stderr.1847_801 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1847_801);

  <bb 714> :
  find_freestmt.1848_802 = find_freestmt;
  stderr.1849_803 = stderr;
  fprintf (stderr.1849_803, "\x1b[40;31m  \tpossible double free [rigorous]:%d \x1b[0m\n", find_freestmt.1848_802);

  <bb 715> :
  stderr.1850_804 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1850_804);

  <bb 716> :
  defmalloc_type::~defmalloc_type (&defmalloc_type);
  defmalloc_type = {CLOBBER};
  goto <bb 749>; [INV]

  <bb 717> :
  find_mallocstmt.1851_805 = (unsigned int) find_mallocstmt;
  IS_HEAP_FUCNTION.1852_806 = IS_HEAP_FUCNTION;
  if (find_mallocstmt.1851_805 == IS_HEAP_FUCNTION.1852_806)
    goto <bb 718>; [INV]
  else
    goto <bb 721>; [INV]

  <bb 718> :
  stderr.1853_807 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1853_807);

  <bb 719> :
  stderr.1854_808 = stderr;
  __builtin_fwrite ("\x1b[40;31m \tthis fucntion return possible is heap-object \x1b[0m\n", 1, 60, stderr.1854_808);

  <bb 720> :
  stderr.1855_809 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1855_809);
  goto <bb 749>; [INV]

  <bb 721> :
  find_mallocstmt.1856_810 = (unsigned int) find_mallocstmt;
  PTABLE_IS_NULL.1857_811 = PTABLE_IS_NULL;
  if (find_mallocstmt.1856_810 == PTABLE_IS_NULL.1857_811)
    goto <bb 722>; [INV]
  else
    goto <bb 729>; [INV]

  <bb 722> :
  stderr.1858_812 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1858_812);

  <bb 723> :
  stderr.1859_813 = stderr;
  __builtin_fwrite ("\x1b[40;31m \tCan\'t find this fucntion in Pointer table \x1b[0m\n", 1, 57, stderr.1859_813);

  <bb 724> :
  stderr.1860_814 = stderr;
  __builtin_fwrite ("\x1b[40;31m \tPossiable no other stmt relate with this stmt \x1b[0m\n", 1, 61, stderr.1860_814);

  <bb 725> :
  _815 = table_temp->last_stmt;
  D.257724 = empty_body_p (_815);

  <bb 726> :
  retval.1861 = D.257724;
  if (retval.1861 != 0)
    goto <bb 727>; [INV]
  else
    goto <bb 728>; [INV]

  <bb 727> :
  _816 = table_temp->last_stmt;
  _817 = gimple_location_safe (_816);
  warning_at (_817, 0, "use location");

  <bb 728> :
  stderr.1862_818 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1862_818);
  goto <bb 749>; [INV]

  <bb 729> :
  stderr.1863_819 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1863_819);

  <bb 730> :
  stderr.1864_820 = stderr;
  __builtin_fwrite ("\x1b[40;31m \tthis stmt need double check \x1b[0m\n", 1, 43, stderr.1864_820);

  <bb 731> :
  find_retheapstmt.1865_821 = find_retheapstmt;
  if (find_retheapstmt.1865_821 > 0)
    goto <bb 732>; [INV]
  else
    goto <bb 749>; [INV]

  <bb 732> :
  find_freestmt.1866_822 = find_freestmt;
  if (find_freestmt.1866_822 > 2)
    goto <bb 733>; [INV]
  else
    goto <bb 737>; [INV]

  <bb 733> :
  stderr.1867_823 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1867_823);

  <bb 734> :
  stderr.1868_824 = stderr;
  __builtin_fwrite ("\x1b[40;31m    this function with other function alias that other function return value is heap-object \x1b[0m\n", 1, 105, stderr.1868_824);

  <bb 735> :
  find_freestmt.1869_825 = find_freestmt;
  stderr.1870_826 = stderr;
  fprintf (stderr.1870_826, "\x1b[40;31m  \tpossible double free :%d \x1b[0m\n", find_freestmt.1869_825);

  <bb 736> :
  stderr.1871_827 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1871_827);
  goto <bb 749>; [INV]

  <bb 737> :
  find_freestmt.1872_828 = find_freestmt;
  if (find_freestmt.1872_828 == 1)
    goto <bb 738>; [INV]
  else
    goto <bb 744>; [INV]

  <bb 738> :
  stderr.1873_829 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1873_829);

  <bb 739> :
  stderr.1874_830 = stderr;
  __builtin_fwrite ("\x1b[40;31m    this function with other function alias that other function return value is heap-object \x1b[0m\n", 1, 105, stderr.1874_830);

  <bb 740> :
  if (find_phistmt == 1)
    goto <bb 741>; [INV]
  else
    goto <bb 742>; [INV]

  <bb 741> :
  stderr.1875_831 = stderr;
  __builtin_fwrite ("\x1b[40;31m   need check branch because multiple direction varible\x1b[0m\n", 1, 68, stderr.1875_831);
  goto <bb 743>; [INV]

  <bb 742> :
  stderr.1876_832 = stderr;
  __builtin_fwrite ("\x1b[40;32m   Maybe you don\'t have memory leak.... need more checks  \x1b[0m\n", 1, 71, stderr.1876_832);

  <bb 743> :
  stderr.1877_833 = stderr;
  __builtin_fwrite ("\n======================================================================\n\n", 1, 73, stderr.1877_833);
  goto <bb 749>; [INV]

  <bb 744> :
  find_freestmt.1878_834 = find_freestmt;
  if (find_freestmt.1878_834 == 0)
    goto <bb 745>; [INV]
  else
    goto <bb 749>; [INV]

  <bb 745> :
  stderr.1879_835 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1879_835);

  <bb 746> :
  stderr.1880_836 = stderr;
  __builtin_fwrite ("\x1b[40;31m    this function with other function alias that other function return value is heap-object \x1b[0m\n", 1, 105, stderr.1880_836);

  <bb 747> :
  stderr.1881_837 = stderr;
  __builtin_fwrite ("\x1b[40;31m    no free stmt possible memory leak \x1b[0m\n", 1, 51, stderr.1881_837);

  <bb 748> :
  stderr.1882_838 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1882_838);

  <bb 749> :
  stderr.1883_839 = stderr;
  __builtin_fwrite ("\n======================================================================\n", 1, 72, stderr.1883_839);

  <bb 750> :
  std::vector<basic_block_def*>::~vector (&earlyend);
  finally_tmp.1901 = 1;

  <bb 751> :
  std::vector<free_type>::~vector (&free_array);
  if (finally_tmp.1901 == 1)
    goto <bb 752>; [INV]
  else
    goto <bb 754>; [INV]

  <bb 752> :
<L620>:

  <bb 753> :
  free_array = {CLOBBER};
  earlyend = {CLOBBER};
  goto <bb 755>; [INV]

  <bb 754> :
  free_array = {CLOBBER};
  earlyend = {CLOBBER};
  find_freestmt = {CLOBBER};
  find_retheapstmt = {CLOBBER};
  find_pthread_detched = {CLOBBER};
  goto <bb 817>; [INV]

  <bb 755> :
  defmemoryleak.1884_840 = defmemoryleak;
  if (defmemoryleak.1884_840 != 0)
    goto <bb 756>; [INV]
  else
    goto <bb 816>; [INV]

  <bb 756> :
  i = 0;
  goto <bb 815>; [INV]

  <bb 757> :
  j = 0;
  goto <bb 813>; [INV]

  <bb 758> :
  if (i != j)
    goto <bb 759>; [INV]
  else
    goto <bb 812>; [INV]

  <bb 759> :
  _841 = (long unsigned int) i;
  D.257735 = std::vector<defmalloc_type>::at (&defmalloc_array, _841);

  <bb 760> :
  _842 = D.257735;
  _843 = _842->malloc_tree;
  _844 = _843->ssa_name.var;
  if (_844 != 0B)
    goto <bb 761>; [INV]
  else
    goto <bb 765>; [INV]

  <bb 761> :
  _845 = (long unsigned int) i;
  D.257736 = std::vector<defmalloc_type>::at (&defmalloc_array, _845);

  <bb 762> :
  _846 = D.257736;
  _847 = _846->malloc_tree;
  _848 = _847->ssa_name.var;
  _849 = _848->base.code;
  if (_849 != 1)
    goto <bb 763>; [INV]
  else
    goto <bb 765>; [INV]

  <bb 763> :
  _850 = (long unsigned int) i;
  D.257737 = std::vector<defmalloc_type>::at (&defmalloc_array, _850);

  <bb 764> :
  _851 = D.257737;
  _852 = _851->malloc_tree;
  iftmp.1886 = _852->ssa_name.var;
  goto <bb 766>; [INV]

  <bb 765> :
  iftmp.1886 = 0B;

  <bb 766> :
  _853 = (long unsigned int) j;
  D.257738 = std::vector<defmalloc_type>::at (&defmalloc_array, _853);

  <bb 767> :
  _854 = D.257738;
  _855 = _854->malloc_tree;
  _856 = _855->ssa_name.var;
  if (_856 != 0B)
    goto <bb 768>; [INV]
  else
    goto <bb 772>; [INV]

  <bb 768> :
  _857 = (long unsigned int) j;
  D.257739 = std::vector<defmalloc_type>::at (&defmalloc_array, _857);

  <bb 769> :
  _858 = D.257739;
  _859 = _858->malloc_tree;
  _860 = _859->ssa_name.var;
  _861 = _860->base.code;
  if (_861 != 1)
    goto <bb 770>; [INV]
  else
    goto <bb 772>; [INV]

  <bb 770> :
  _862 = (long unsigned int) j;
  D.257740 = std::vector<defmalloc_type>::at (&defmalloc_array, _862);

  <bb 771> :
  _863 = D.257740;
  _864 = _863->malloc_tree;
  iftmp.1887 = _864->ssa_name.var;
  goto <bb 773>; [INV]

  <bb 772> :
  iftmp.1887 = 0B;

  <bb 773> :
  retval.1885 = iftmp.1886 == iftmp.1887;
  if (retval.1885 != 0)
    goto <bb 774>; [INV]
  else
    goto <bb 812>; [INV]

  <bb 774> :
  function_tree.1889_865 = function_tree;
  _866 = (long unsigned int) i;
  D.257741 = std::vector<defmalloc_type>::at (&defmalloc_array, _866);

  <bb 775> :
  _867 = D.257741;
  _868 = _867->stmt;
  _869 = (long unsigned int) j;
  D.257742 = std::vector<defmalloc_type>::at (&defmalloc_array, _869);

  <bb 776> :
  _870 = D.257742;
  _871 = _870->stmt;
  D.257743 = Location_b3 (_871, _868, function_tree.1889_865);

  <bb 777> :
  retval.1888 = D.257743;
  if (retval.1888 != 0)
    goto <bb 778>; [INV]
  else
    goto <bb 812>; [INV]

  <bb 778> :
  _872 = (long unsigned int) i;
  D.257744 = std::vector<defmalloc_type>::at (&defmalloc_array, _872);

  <bb 779> :
  _873 = D.257744;
  _874 = &_873->free_array;
  _875 = std::vector<free_type>::size (_874);
  retval.1890 = _875 != 0;
  if (retval.1890 != 0)
    goto <bb 780>; [INV]
  else
    goto <bb 802>; [INV]

  <bb 780> :
  finddefsafe = 0;
  k = 0;
  goto <bb 789>; [INV]

  <bb 781> :
  function_tree.1892_876 = function_tree;
  _877 = (long unsigned int) i;
  D.257745 = std::vector<defmalloc_type>::at (&defmalloc_array, _877);

  <bb 782> :
  _878 = D.257745;
  _879 = &_878->free_array;
  _880 = (long unsigned int) k;
  D.257746 = std::vector<free_type>::at (_879, _880);

  <bb 783> :
  _881 = D.257746;
  _882 = _881->stmt;
  _883 = (long unsigned int) j;
  D.257747 = std::vector<defmalloc_type>::at (&defmalloc_array, _883);

  <bb 784> :
  _884 = D.257747;
  _885 = _884->stmt;
  D.257748 = Location_b3 (_885, _882, function_tree.1892_876);

  <bb 785> :
  _886 = D.257748;
  retval.1891 = ~_886;
  if (retval.1891 != 0)
    goto <bb 786>; [INV]
  else
    goto <bb 787>; [INV]

  <bb 786> :
  finddefsafe = 1;
  goto <bb 788>; [INV]

  <bb 787> :
  finddefsafe = -1;

  <bb 788> :
  k = k + 1;

  <bb 789> :
  _887 = (long unsigned int) k;
  _888 = (long unsigned int) i;
  D.257749 = std::vector<defmalloc_type>::at (&defmalloc_array, _888);

  <bb 790> :
  _889 = D.257749;
  _890 = &_889->free_array;
  _891 = std::vector<free_type>::size (_890);
  retval.1893 = _887 < _891;
  if (retval.1893 != 0)
    goto <bb 781>; [INV]
  else
    goto <bb 791>; [INV]

  <bb 791> :
  if (finddefsafe >= 0)
    goto <bb 792>; [INV]
  else
    goto <bb 812>; [INV]

  <bb 792> :
  stderr.1894_892 = stderr;
  __builtin_fwrite ("\x1b[40;31m   malloc def-leak warring \x1b[0m\n", 1, 40, stderr.1894_892);

  <bb 793> :
  _893 = (long unsigned int) i;
  D.257750 = std::vector<defmalloc_type>::at (&defmalloc_array, _893);

  <bb 794> :
  _894 = D.257750;
  _895 = _894->malloc_tree;
  debug (_895);

  <bb 795> :
  _896 = (long unsigned int) i;
  D.257751 = std::vector<defmalloc_type>::at (&defmalloc_array, _896);

  <bb 796> :
  _897 = D.257751;
  _898 = _897->stmt;
  _899 = gimple_location_safe (_898);
  warning_at (_899, 0, "use location");

  <bb 797> :
  stderr.1895_900 = stderr;
  __builtin_fwrite ("\x1b[40;31m   memory leak and alloc new memory \x1b[0m\n", 1, 49, stderr.1895_900);

  <bb 798> :
  _901 = (long unsigned int) j;
  D.257752 = std::vector<defmalloc_type>::at (&defmalloc_array, _901);

  <bb 799> :
  _902 = D.257752;
  _903 = _902->malloc_tree;
  debug (_903);

  <bb 800> :
  _904 = (long unsigned int) j;
  D.257753 = std::vector<defmalloc_type>::at (&defmalloc_array, _904);

  <bb 801> :
  _905 = D.257753;
  _906 = _905->stmt;
  _907 = gimple_location_safe (_906);
  warning_at (_907, 0, "use location");
  goto <bb 812>; [INV]

  <bb 802> :
  stderr.1896_908 = stderr;
  __builtin_fwrite ("\x1b[40;31m   malloc def-leak warring \x1b[0m\n", 1, 40, stderr.1896_908);

  <bb 803> :
  _909 = (long unsigned int) i;
  D.257754 = std::vector<defmalloc_type>::at (&defmalloc_array, _909);

  <bb 804> :
  _910 = D.257754;
  _911 = _910->malloc_tree;
  debug (_911);

  <bb 805> :
  _912 = (long unsigned int) i;
  D.257755 = std::vector<defmalloc_type>::at (&defmalloc_array, _912);

  <bb 806> :
  _913 = D.257755;
  _914 = _913->stmt;
  _915 = gimple_location_safe (_914);
  warning_at (_915, 0, "use location");

  <bb 807> :
  stderr.1897_916 = stderr;
  __builtin_fwrite ("\x1b[40;31m   memory leak and alloc new memory \x1b[0m\n", 1, 49, stderr.1897_916);

  <bb 808> :
  _917 = (long unsigned int) j;
  D.257756 = std::vector<defmalloc_type>::at (&defmalloc_array, _917);

  <bb 809> :
  _918 = D.257756;
  _919 = _918->malloc_tree;
  debug (_919);

  <bb 810> :
  _920 = (long unsigned int) j;
  D.257757 = std::vector<defmalloc_type>::at (&defmalloc_array, _920);

  <bb 811> :
  _921 = D.257757;
  _922 = _921->stmt;
  _923 = gimple_location_safe (_922);
  warning_at (_923, 0, "use location");

  <bb 812> :
  j = j + 1;

  <bb 813> :
  _924 = (long unsigned int) j;
  _925 = std::vector<defmalloc_type>::size (&defmalloc_array);
  retval.1898 = _924 < _925;
  if (retval.1898 != 0)
    goto <bb 758>; [INV]
  else
    goto <bb 814>; [INV]

  <bb 814> :
  i = i + 1;

  <bb 815> :
  _926 = (long unsigned int) i;
  _927 = std::vector<defmalloc_type>::size (&defmalloc_array);
  retval.1899 = _926 < _927;
  if (retval.1899 != 0)
    goto <bb 757>; [INV]
  else
    goto <bb 816>; [INV]

  <bb 816> :
  find_freestmt = {CLOBBER};
  find_retheapstmt = {CLOBBER};
  find_pthread_detched = {CLOBBER};

  <bb 817> :
  table_temp = table_temp->next;
  if (table_temp != 0B)
    goto <bb 818>; [INV]
  else
    goto <bb 819>; [INV]

  <bb 818> :
  iftmp.1900 = table_temp->target;
  goto <bb 820>; [INV]

  <bb 819> :
  iftmp.1900 = 0B;

  <bb 820> :
  t = iftmp.1900;

  <bb 821> :
  _928 = table_temp->next;
  if (_928 != 0B)
    goto <bb 30>; [INV]
  else
    goto <bb 822>; [INV]

  <bb 822> :
  std::vector<defmalloc_type>::~vector (&defmalloc_array);
  start = {CLOBBER};
  start2 = {CLOBBER};
  defmalloc_array = {CLOBBER};
  return;

  <bb 823> :
<L675>:
  std::vector<return_type>::~vector (&funcalleeRetTypearray);
  resx 4

  <bb 824> :
<L676>:
  function_return_array::~function_return_array (&find_fun_array);
  resx 3

  <bb 825> :
<L677>:
  find_fun_array = {CLOBBER};
  funcalleeRetTypearray = {CLOBBER};
  resx 2

  <bb 826> :
<L678>:
  operator delete (D.202570, 48);
  resx 14

  <bb 827> :
<L679>:
  e2 = {CLOBBER};
  ei2 = {CLOBBER};
  resx 20

  <bb 828> :
<L680>:
  e = {CLOBBER};
  ei = {CLOBBER};
  resx 19

  <bb 829> :
<L681>:
  relate_type = {CLOBBER};
  resx 23

  <bb 830> :
<L682>:
  free_type = {CLOBBER};
  resx 18

  <bb 831> :
<L683>:
  operator delete (D.202691, 48);
  resx 27

  <bb 832> :
<L684>:
  it_i = {CLOBBER};
  resx 26

  <bb 833> :
<L685>:
  function_relate_array::~function_relate_array (&fun_array);
  resx 34

  <bb 834> :
<L686>:
  std::vector<relate_type>::~vector (&relate_type_array);
  resx 33

  <bb 835> :
<L687>:
  relate_type_array = {CLOBBER};
  fun_array = {CLOBBER};
  resx 32

  <bb 836> :
<L688>:
  free_type = {CLOBBER};
  resx 41

  <bb 837> :
<L689>:
  std::vector<free_type>::~vector (&callerRetTypearray);
  resx 40

  <bb 838> :
<L690>:
  function_free_array::~function_free_array (&callerFunArray);
  resx 39

  <bb 839> :
<L691>:
  callerFunArray = {CLOBBER};
  callerRetTypearray = {CLOBBER};
  resx 38

  <bb 840> :
<L692>:
  start = {CLOBBER};
  resx 46

  <bb 841> :
<L693>:
  function_relate_array::~function_relate_array (&maxbb_array);
  resx 17

  <bb 842> :
<L694>:
  std::vector<relate_type>::~vector (&maxbb_type_array);
  resx 16

  <bb 843> :
<L695>:
  maxbb_type_array = {CLOBBER};
  maxbb_array = {CLOBBER};
  resx 13

  <bb 844> :
<L696>:
  defmalloc_type::~defmalloc_type (&defmalloc_type);
  resx 52

  <bb 845> :
<L697>:
  defmalloc_type = {CLOBBER};
  resx 51

  <bb 846> :
<L698>:
  std::vector<basic_block_def*>::~vector (&earlyend);
  resx 12

  <bb 847> :
<L699>:
  std::vector<free_type>::~vector (&free_array);
  resx 11

  <bb 848> :
<L700>:
  free_array = {CLOBBER};
  earlyend = {CLOBBER};
  resx 10

  <bb 849> :
<L701>:
  find_freestmt = {CLOBBER};
  find_retheapstmt = {CLOBBER};
  find_pthread_detched = {CLOBBER};
  resx 9

  <bb 850> :
<L702>:
  std::vector<defmalloc_type>::~vector (&defmalloc_array);
  resx 8

  <bb 851> :
<L703>:
  start = {CLOBBER};
  start2 = {CLOBBER};
  defmalloc_array = {CLOBBER};
  resx 1

}



;; Function std::vector<defmalloc_type>::vector (_ZNSt6vectorI14defmalloc_typeSaIS0_EEC2Ev, funcdef_no=6796, decl_uid=202395, cgraph_uid=3427, symbol_order=4206)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<defmalloc_type>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.202403;
  std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_base (_ZNSt12_Vector_baseI14defmalloc_typeSaIS0_EEC2Ev, funcdef_no=6794, decl_uid=201853, cgraph_uid=3424, symbol_order=4203)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI14defmalloc_typeSaIS0_EE12_Vector_implC2Ev, funcdef_no=7790, decl_uid=201745, cgraph_uid=4422, symbol_order=5211)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<defmalloc_type>::allocator (this);
  _1 = &this->D.201748;
  std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<defmalloc_type>::allocator (_ZNSaI14defmalloc_typeEC2Ev, funcdef_no=8753, decl_uid=201523, cgraph_uid=5385, symbol_order=6178)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<defmalloc_type>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<defmalloc_type>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<defmalloc_type>::new_allocator (_ZN9__gnu_cxx13new_allocatorI14defmalloc_typeEC2Ev, funcdef_no=9603, decl_uid=201452, cgraph_uid=6235, symbol_order=7028)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<defmalloc_type>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI14defmalloc_typeSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8756, decl_uid=201695, cgraph_uid=5388, symbol_order=6181)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::vector<basic_block_def*>::vector (_ZNSt6vectorIP15basic_block_defSaIS1_EEC2Ev, funcdef_no=6201, decl_uid=170294, cgraph_uid=3177, symbol_order=3932)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<basic_block_def*>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.170302;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EEC2Ev, funcdef_no=6199, decl_uid=169752, cgraph_uid=3174, symbol_order=3929)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE12_Vector_implC2Ev, funcdef_no=7570, decl_uid=169644, cgraph_uid=4202, symbol_order=4991)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<basic_block_def*>::allocator (this);
  _1 = &this->D.169647;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<basic_block_def*>::allocator (_ZNSaIP15basic_block_defEC2Ev, funcdef_no=8398, decl_uid=169422, cgraph_uid=5030, symbol_order=5823)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<basic_block_def*>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defEC2Ev, funcdef_no=9209, decl_uid=169351, cgraph_uid=5841, symbol_order=6634)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE17_Vector_impl_dataC2Ev, funcdef_no=8401, decl_uid=169594, cgraph_uid=5033, symbol_order=5826)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_map (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7805, decl_uid=191792, cgraph_uid=4437, symbol_order=5226)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8767, decl_uid=191751, cgraph_uid=5399, symbol_order=6192)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.257764;
  unsigned int D.257763;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.257763 = hash_table_higher_prime_index (size);
  size_prime_index = D.257763;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.257764 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.257764;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function ei_start_1 (_ZL10ei_start_1PP3vecIP8edge_def5va_gc8vl_embedE, funcdef_no=1666, decl_uid=75277, cgraph_uid=817, symbol_order=969)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct edge_iterator ei_start_1 (struct vec * * ev)
{
  struct edge_iterator i;
  struct edge_iterator D.257765;

  <bb 2> :
  i.index = 0;
  i.container = ev;
  D.257765 = i;
  i = {CLOBBER};

  <bb 3> :
<L1>:
  return D.257765;

}



;; Function ei_next (_ZL7ei_nextP13edge_iterator, funcdef_no=1670, decl_uid=75328, cgraph_uid=821, symbol_order=973)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ei_next (struct edge_iterator * i)
{
  <bb 2> :
  _1 = i->index;
  _2 = _1 + 1;
  i->index = _2;
  return;

}



;; Function ei_cond (_ZL7ei_cond13edge_iteratorPP8edge_def, funcdef_no=1674, decl_uid=75345, cgraph_uid=825, symbol_order=977)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
bool ei_cond (struct edge_iterator ei, struct edge_def * * p)
{
  struct edge_def * D.257774;
  bool D.257773;
  bool D.257771;
  bool retval.1902;

  <bb 2> :
  D.257773 = ei_end_p (ei);
  _1 = D.257773;
  retval.1902 = ~_1;
  if (retval.1902 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.257774 = ei_edge (ei);
  _2 = D.257774;
  *p = _2;
  D.257771 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  *p = 0B;
  D.257771 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
<L2>:
  return D.257771;

}



;; Function ei_end_p (_ZL8ei_end_p13edge_iterator, funcdef_no=1668, decl_uid=75320, cgraph_uid=819, symbol_order=971)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool ei_end_p (struct edge_iterator i)
{
  unsigned int D.257777;
  bool D.257775;

  <bb 2> :
  _1 = i.index;
  _2 = ei_container (i);
  D.257777 = vec_safe_length<edge_def*, va_gc> (_2);
  _3 = D.257777;
  D.257775 = _1 == _3;

  <bb 3> :
<L0>:
  return D.257775;

}



;; Function ei_container (_ZL12ei_container13edge_iterator, funcdef_no=1665, decl_uid=75274, cgraph_uid=816, symbol_order=968)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct vec * ei_container (struct edge_iterator i)
{
  struct vec * D.257778;

  <bb 2> :
  _1 = i.container;
  D.257778 = *_1;

  <bb 3> :
<L0>:
  return D.257778;

}



;; Function vec_safe_length<edge_def*, va_gc> (_Z15vec_safe_lengthIP8edge_def5va_gcEjPK3vecIT_T0_8vl_embedE, funcdef_no=6974, decl_uid=75252, cgraph_uid=3606, symbol_order=4392)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
unsigned int vec_safe_length<edge_def*, va_gc> (const struct vec * v)
{
  unsigned int iftmp.1903;
  unsigned int D.257780;

  <bb 2> :
  if (v != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.1903 = vec<edge_def*, va_gc>::length (v);
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1903 = 0;

  <bb 5> :
  D.257780 = iftmp.1903;

  <bb 6> :
<L3>:
  return D.257780;

}



;; Function vec<edge_def*, va_gc>::length (_ZNK3vecIP8edge_def5va_gc8vl_embedE6lengthEv, funcdef_no=7996, decl_uid=75146, cgraph_uid=4628, symbol_order=5417)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int vec<edge_def*, va_gc>::length (const struct vec * const this)
{
  unsigned int D.257786;

  <bb 2> :
  D.257786 = this->m_vecpfx.m_num;

  <bb 3> :
<L0>:
  return D.257786;

}



;; Function ei_edge (_ZL7ei_edge13edge_iterator, funcdef_no=1672, decl_uid=75335, cgraph_uid=823, symbol_order=975)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct edge_def * ei_edge (struct edge_iterator i)
{
  struct edge_def * D.257788;

  <bb 2> :
  _1 = ei_container (i);
  _2 = i.index;
  _3 = vec<edge_def*, va_gc>::operator[] (_1, _2);
  D.257788 = *_3;

  <bb 3> :
<L0>:
  return D.257788;

}



;; Function vec<edge_def*, va_gc>::operator[] (_ZN3vecIP8edge_def5va_gc8vl_embedEixEj, funcdef_no=6975, decl_uid=75165, cgraph_uid=3607, symbol_order=4393)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct edge_def * & vec<edge_def*, va_gc>::operator[] (struct vec * const this, unsigned int ix)
{
  struct edge_def * & D.257790;

  <bb 2> :
  D.257790 = &this->m_vecdata[ix];

  <bb 3> :
<L0>:
  return D.257790;

}



;; Function __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (_ZNK9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS1_SaIS1_EEEptEv, funcdef_no=7813, decl_uid=202736, cgraph_uid=4445, symbol_order=5234)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct relate_type * __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator-> (const struct __normal_iterator * const this)
{
  struct relate_type * D.257792;

  <bb 2> :
  D.257792 = this->_M_current;

  <bb 3> :
<L0>:
  return D.257792;

}



;; Function __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIP11relate_typeSt6vectorIS1_SaIS1_EEEppEv, funcdef_no=7812, decl_uid=202738, cgraph_uid=4444, symbol_order=5233)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.257794;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 48;
  this->_M_current = _2;
  D.257794 = this;

  <bb 3> :
<L0>:
  return D.257794;

}



;; Function __gnu_cxx::operator!=<relate_type*, std::vector<relate_type> > (_ZN9__gnu_cxxneIP11relate_typeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_, funcdef_no=7811, decl_uid=202836, cgraph_uid=4443, symbol_order=5232)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<relate_type*, std::vector<relate_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.257796;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<relate_type*, std::vector<relate_type> >::base (__rhs);
  _4 = *_3;
  D.257796 = _2 != _4;

  <bb 3> :
<L0>:
  return D.257796;

}



;; Function hash_map<tree_node*, function_relate_array>::~hash_map (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6802, decl_uid=202852, cgraph_uid=3433, symbol_order=4212)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7815, decl_uid=191761, cgraph_uid=4447, symbol_order=5236)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.257811;
  bool D.257810;
  size_t i;
  bool iftmp.1905;
  bool retval.1904;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 32;
  _4 = _2 + _3;
  D.257810 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.257810;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 32;
  _9 = _7 + _8;
  D.257811 = hash_table<hash_map<tree_node*, function_relate_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.257811;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1905 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1905 = 0;

  <bb 7> :
  retval.1904 = iftmp.1905;
  if (retval.1904 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 32;
  _14 = _12 + _13;
  hash_map<tree_node*, function_relate_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_relate_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_relate_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node21function_relate_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8775, decl_uid=191535, cgraph_uid=5407, symbol_order=6200)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_relate_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::remove<hash_map<tree_node*, function_relate_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::remove<hash_map<tree_node*, function_relate_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_relate_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9609, decl_uid=228802, cgraph_uid=6241, symbol_order=7034)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_relate_array>::remove<hash_map<tree_node*, function_relate_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_relate_array::~function_relate_array (_2);
  return;

}



;; Function std::vector<relate_type>::operator[] (_ZNSt6vectorI11relate_typeSaIS0_EEixEm, funcdef_no=7808, decl_uid=179460, cgraph_uid=4440, symbol_order=5229)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<relate_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.257812;

  <bb 2> :
  _1 = this->D.179807._M_impl.D.179152._M_start;
  _2 = __n * 48;
  D.257812 = _1 + _2;

  <bb 3> :
<L0>:
  return D.257812;

}



;; Function gimple_phi_arg_def (_ZL18gimple_phi_arg_defP6gimplem, funcdef_no=2276, decl_uid=93486, cgraph_uid=1413, symbol_order=1573)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_phi_arg_def (struct gimple * gs, size_t index)
{
  struct phi_arg_d * D.257816;
  union tree_node * D.257814;

  <bb 2> :
  _1 = (unsigned int) index;
  D.257816 = gimple_phi_arg (gs, _1);
  _2 = D.257816;
  D.257814 = _2->def;

  <bb 3> :
<L0>:
  return D.257814;

}



;; Function gimple_phi_arg (_ZL14gimple_phi_argP6gimplej, funcdef_no=2271, decl_uid=93448, cgraph_uid=1408, symbol_order=1568)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct phi_arg_d * gimple_phi_arg (struct gimple * gs, unsigned int index)
{
  struct gphi * D.257819;
  struct gphi * phi_stmt;
  struct phi_arg_d * D.257817;

  <bb 2> :
  D.257819 = as_a<gphi*, gimple> (gs);
  phi_stmt = D.257819;
  D.257817 = gimple_phi_arg (phi_stmt, index);

  <bb 3> :
<L0>:
  return D.257817;

}



;; Function as_a<gphi*, gimple> (_Z4as_aIP4gphi6gimpleET_PT0_, funcdef_no=7074, decl_uid=93430, cgraph_uid=3706, symbol_order=4492)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gphi * as_a<gphi*, gimple> (struct gimple * p)
{
  struct gphi * D.257820;

  <bb 2> :
  D.257820 = reinterpret_is_a_helper<gphi*>::cast<gimple> (p);

  <bb 3> :
<L0>:
  return D.257820;

}



;; Function gimple_phi_arg (_ZL14gimple_phi_argP4gphij, funcdef_no=2269, decl_uid=93440, cgraph_uid=1406, symbol_order=1566)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct phi_arg_d * gimple_phi_arg (struct gphi * gs, unsigned int index)
{
  struct phi_arg_d * D.257822;

  <bb 2> :
  D.257822 = &gs->args[index];

  <bb 3> :
<L0>:
  return D.257822;

}



;; Function gimple_phi_num_args (_ZL19gimple_phi_num_argsPK6gimple, funcdef_no=2263, decl_uid=93413, cgraph_uid=1400, symbol_order=1560)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int gimple_phi_num_args (const struct gimple * gs)
{
  const struct gphi * D.257826;
  const struct gphi * phi_stmt;
  unsigned int D.257824;

  <bb 2> :
  D.257826 = as_a<const gphi*, const gimple> (gs);
  phi_stmt = D.257826;
  D.257824 = phi_stmt->nargs;

  <bb 3> :
<L0>:
  return D.257824;

}



;; Function defmalloc_type::defmalloc_type (_ZN14defmalloc_typeC2Ev, funcdef_no=6805, decl_uid=202883, cgraph_uid=3436, symbol_order=4215)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void defmalloc_type::defmalloc_type (struct defmalloc_type * const this)
{
  <bb 2> :
  _1 = &this->free_array;
  std::vector<free_type>::vector (_1);
  return;

}



;; Function std::vector<defmalloc_type>::push_back (_ZNSt6vectorI14defmalloc_typeSaIS0_EE9push_backERKS0_, funcdef_no=7818, decl_uid=202083, cgraph_uid=4451, symbol_order=5240)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<defmalloc_type>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.257830;

  <bb 2> :
  _1 = this->D.202403._M_impl.D.201748._M_finish;
  _2 = this->D.202403._M_impl.D.201748._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.202403._M_impl.D.201748._M_finish;
  _4 = &this->D.202403._M_impl;
  std::allocator_traits<std::allocator<defmalloc_type> >::construct<defmalloc_type, const defmalloc_type&> (_4, _3, __x);
  _5 = this->D.202403._M_impl.D.201748._M_finish;
  _6 = _5 + 40;
  this->D.202403._M_impl.D.201748._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.257830 = std::vector<defmalloc_type>::end (this);
  std::vector<defmalloc_type>::_M_realloc_insert<const defmalloc_type&> (this, D.257830, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<defmalloc_type> >::construct<defmalloc_type, const defmalloc_type&> (_ZNSt16allocator_traitsISaI14defmalloc_typeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8778, decl_uid=215838, cgraph_uid=5410, symbol_order=6203)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<defmalloc_type> >::construct<defmalloc_type, const defmalloc_type&> (struct allocator_type & __a, struct defmalloc_type * __p, const struct defmalloc_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<const defmalloc_type&> (__args#0);
  __gnu_cxx::new_allocator<defmalloc_type>::construct<defmalloc_type, const defmalloc_type&> (__a, __p, _1);
  return;

}



;; Function std::forward<const defmalloc_type&> (_ZSt7forwardIRK14defmalloc_typeEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9610, decl_uid=228819, cgraph_uid=6242, symbol_order=7035)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct defmalloc_type & std::forward<const defmalloc_type&> (const struct type & __t)
{
  const struct defmalloc_type & D.257831;

  <bb 2> :
  D.257831 = __t;

  <bb 3> :
<L0>:
  return D.257831;

}



;; Function __gnu_cxx::new_allocator<defmalloc_type>::construct<defmalloc_type, const defmalloc_type&> (_ZN9__gnu_cxx13new_allocatorI14defmalloc_typeE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9611, decl_uid=228821, cgraph_uid=6246, symbol_order=7039)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void __gnu_cxx::new_allocator<defmalloc_type>::construct<defmalloc_type, const defmalloc_type&> (struct new_allocator * const this, struct defmalloc_type * __p, const struct defmalloc_type & __args#0)
{
  void * D.237813;
  void * D.237812;
  const struct defmalloc_type & D.237817;

  <bb 2> :
  D.237817 = std::forward<const defmalloc_type&> (__args#0);
  D.237812 = __p;
  D.237813 = operator new (40, D.237812);
  defmalloc_type::defmalloc_type (D.237813, D.237817);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  operator delete (D.237813, D.237812);
  resx 1

}



;; Function defmalloc_type::defmalloc_type (_ZN14defmalloc_typeC2ERKS_, funcdef_no=9613, decl_uid=202891, cgraph_uid=6244, symbol_order=7037)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void defmalloc_type::defmalloc_type (struct defmalloc_type * const this, const struct defmalloc_type & D.202893)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.202893->stmt;
  this->stmt = _1;
  _2 = D.202893->malloc_tree;
  this->malloc_tree = _2;
  _3 = &this->free_array;
  _4 = &D.202893->free_array;
  std::vector<free_type>::vector (_3, _4);
  return;

}



;; Function std::vector<defmalloc_type>::end (_ZNSt6vectorI14defmalloc_typeSaIS0_EE3endEv, funcdef_no=8779, decl_uid=202016, cgraph_uid=5411, symbol_order=6204)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<defmalloc_type>::end (struct vector * const this)
{
  struct iterator D.228844;
  struct iterator D.257834;

  <bb 2> :
  _1 = &this->D.202403._M_impl.D.201748._M_finish;
  __gnu_cxx::__normal_iterator<defmalloc_type*, std::vector<defmalloc_type> >::__normal_iterator (&D.228844, _1);
  D.257834 = D.228844;
  D.228844 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.257834;

}



;; Function __gnu_cxx::__normal_iterator<defmalloc_type*, std::vector<defmalloc_type> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP14defmalloc_typeSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9616, decl_uid=216085, cgraph_uid=6248, symbol_order=7041)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<defmalloc_type*, std::vector<defmalloc_type> >::__normal_iterator (struct __normal_iterator * const this, struct defmalloc_type * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<defmalloc_type>::_M_realloc_insert<const defmalloc_type&> (_ZNSt6vectorI14defmalloc_typeSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8780, decl_uid=216104, cgraph_uid=5415, symbol_order=6208)

Removing basic block 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 10 8 }
;; 8 succs { 10 9 }
;; 9 succs { 10 }
;; 10 succs { }
void std::vector<defmalloc_type>::_M_realloc_insert<const defmalloc_type&> (struct vector * const this, struct iterator __position, const struct defmalloc_type & __args#0)
{
  struct defmalloc_type * D.257841;
  const size_type D.257840;
  struct defmalloc_type * __new_finish;
  struct defmalloc_type * __new_start;
  const size_type __elems_before;
  struct defmalloc_type * __old_finish;
  struct defmalloc_type * __old_start;
  const size_type __len;
  struct iterator D.228852;

  <bb 2> :
  D.257840 = std::vector<defmalloc_type>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.257840;
  __old_start = this->D.202403._M_impl.D.201748._M_start;
  __old_finish = this->D.202403._M_impl.D.201748._M_finish;
  D.228852 = std::vector<defmalloc_type>::begin (this);
  _1 = __gnu_cxx::operator-<defmalloc_type*, std::vector<defmalloc_type> > (&__position, &D.228852);
  __elems_before = (const size_type) _1;
  D.228852 = {CLOBBER};
  _2 = &this->D.202403;
  D.257841 = std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_allocate (_2, __len);
  __new_start = D.257841;
  __new_finish = __new_start;
  _3 = std::forward<const defmalloc_type&> (__args#0);
  _4 = __elems_before * 40;
  _5 = __new_start + _4;
  _6 = &this->D.202403._M_impl;
  std::allocator_traits<std::allocator<defmalloc_type> >::construct<defmalloc_type, const defmalloc_type&> (_6, _5, _3);

  <bb 3> :
  __new_finish = 0B;
  _7 = &this->D.202403;
  _8 = std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<defmalloc_type*, std::vector<defmalloc_type> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<defmalloc_type>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 40;
  _11 = &this->D.202403;
  _12 = std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<defmalloc_type*, std::vector<defmalloc_type> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<defmalloc_type>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.202403;
  _23 = this->D.202403._M_impl.D.201748._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 40;
  _26 = (long unsigned int) _25;
  std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_deallocate (_22, __old_start, _26);
  this->D.202403._M_impl.D.201748._M_start = __new_start;
  this->D.202403._M_impl.D.201748._M_finish = __new_finish;
  _27 = __len * 40;
  _28 = __new_start + _27;
  this->D.202403._M_impl.D.201748._M_end_of_storage = _28;
  return;

  <bb 4> :
<L0>:
  eh_dispatch 2

  <bb 5> :
<L1>:
  _15 = __builtin_eh_pointer (2);
  __cxa_begin_catch (_15);
  if (__new_finish == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _16 = __elems_before * 40;
  _17 = __new_start + _16;
  _18 = &this->D.202403._M_impl;
  std::allocator_traits<std::allocator<defmalloc_type> >::destroy<defmalloc_type> (_18, _17);
  goto <bb 8>; [INV]

  <bb 7> :
  _19 = &this->D.202403;
  _20 = std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_get_Tp_allocator (_19);
  std::_Destroy<defmalloc_type*, defmalloc_type> (__new_start, __new_finish, _20);

  <bb 8> :
  _21 = &this->D.202403;
  std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_deallocate (_21, __new_start, __len);

  <bb 9> :
  __cxa_rethrow ();

  <bb 10> :
<L5>:
  __cxa_end_catch ();
  resx 3

}



;; Function std::vector<defmalloc_type>::_M_check_len (_ZNKSt6vectorI14defmalloc_typeSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9618, decl_uid=202252, cgraph_uid=6250, symbol_order=7043)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<defmalloc_type>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.1908;
  size_type D.257848;
  const long unsigned int D.237826;
  bool retval.1906;

  <bb 2> :
  _1 = std::vector<defmalloc_type>::max_size (this);
  _2 = std::vector<defmalloc_type>::size (this);
  _3 = _1 - _2;
  __n.1907_4 = __n;
  retval.1906 = _3 < __n.1907_4;
  if (retval.1906 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<defmalloc_type>::size (this);
  _6 = std::vector<defmalloc_type>::size (this);
  D.237826 = _6;
  _7 = std::max<long unsigned int> (&D.237826, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.237826 = {CLOBBER};
  _9 = std::vector<defmalloc_type>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<defmalloc_type>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1908 = std::vector<defmalloc_type>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1908 = __len;

  <bb 8> :
  D.257848 = iftmp.1908;

  <bb 9> :
<L6>:
  return D.257848;

}



;; Function std::vector<defmalloc_type>::max_size (_ZNKSt6vectorI14defmalloc_typeSaIS0_EE8max_sizeEv, funcdef_no=10221, decl_uid=202038, cgraph_uid=6853, symbol_order=7650)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<defmalloc_type>::max_size (const struct vector * const this)
{
  size_type D.257855;

  <bb 2> :
  _1 = &this->D.202403;
  _2 = std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_get_Tp_allocator (_1);
  D.257855 = std::vector<defmalloc_type>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.257855;

}



;; Function std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI14defmalloc_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=10690, decl_uid=201638, cgraph_uid=7322, symbol_order=8119)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.257857;

  <bb 2> :
  D.257857 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.257857;

}



;; Function std::vector<defmalloc_type>::_S_max_size (_ZNSt6vectorI14defmalloc_typeSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10689, decl_uid=202259, cgraph_uid=7321, symbol_order=8118)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<defmalloc_type>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.257859;

  <bb 2> :
  __diffmax = 230584300921369395;
  _1 = std::allocator_traits<std::allocator<defmalloc_type> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.257859 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.257859;

}



;; Function std::allocator_traits<std::allocator<defmalloc_type> >::max_size (_ZNSt16allocator_traitsISaI14defmalloc_typeEE8max_sizeERKS1_, funcdef_no=10895, decl_uid=201573, cgraph_uid=7527, symbol_order=8326)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<defmalloc_type> >::max_size (const struct allocator_type & __a)
{
  size_type D.257862;

  <bb 2> :
  D.257862 = __gnu_cxx::new_allocator<defmalloc_type>::max_size (__a);

  <bb 3> :
<L0>:
  return D.257862;

}



;; Function __gnu_cxx::new_allocator<defmalloc_type>::max_size (_ZNK9__gnu_cxx13new_allocatorI14defmalloc_typeE8max_sizeEv, funcdef_no=10995, decl_uid=201415, cgraph_uid=7627, symbol_order=8426)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<defmalloc_type>::max_size (const struct new_allocator * const this)
{
  size_type D.257864;

  <bb 2> :
  D.257864 = __gnu_cxx::new_allocator<defmalloc_type>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.257864;

}



;; Function __gnu_cxx::new_allocator<defmalloc_type>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI14defmalloc_typeE11_M_max_sizeEv, funcdef_no=10692, decl_uid=201434, cgraph_uid=7323, symbol_order=8120)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<defmalloc_type>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.257866;

  <bb 2> :
  D.257866 = 230584300921369395;

  <bb 3> :
<L0>:
  return D.257866;

}



;; Function std::vector<defmalloc_type>::begin (_ZNSt6vectorI14defmalloc_typeSaIS0_EE5beginEv, funcdef_no=9619, decl_uid=202012, cgraph_uid=6251, symbol_order=7044)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<defmalloc_type>::begin (struct vector * const this)
{
  struct iterator D.237828;
  struct iterator D.257868;

  <bb 2> :
  _1 = &this->D.202403._M_impl.D.201748._M_start;
  __gnu_cxx::__normal_iterator<defmalloc_type*, std::vector<defmalloc_type> >::__normal_iterator (&D.237828, _1);
  D.257868 = D.237828;
  D.237828 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.257868;

}



;; Function __gnu_cxx::operator-<defmalloc_type*, std::vector<defmalloc_type> > (_ZN9__gnu_cxxmiIP14defmalloc_typeSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9620, decl_uid=228853, cgraph_uid=6252, symbol_order=7045)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<defmalloc_type*, std::vector<defmalloc_type> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.257871;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<defmalloc_type*, std::vector<defmalloc_type> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<defmalloc_type*, std::vector<defmalloc_type> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.257871 = _5 /[ex] 40;

  <bb 3> :
<L0>:
  return D.257871;

}



;; Function std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_allocate (_ZNSt12_Vector_baseI14defmalloc_typeSaIS0_EE11_M_allocateEm, funcdef_no=9621, decl_uid=201752, cgraph_uid=6253, symbol_order=7046)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct defmalloc_type * std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct defmalloc_type * D.257879;
  struct defmalloc_type * iftmp.1909;
  struct defmalloc_type * D.257873;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.257879 = std::allocator_traits<std::allocator<defmalloc_type> >::allocate (_1, __n);
  iftmp.1909 = D.257879;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1909 = 0B;

  <bb 5> :
  D.257873 = iftmp.1909;

  <bb 6> :
<L3>:
  return D.257873;

}



;; Function std::allocator_traits<std::allocator<defmalloc_type> >::allocate (_ZNSt16allocator_traitsISaI14defmalloc_typeEE8allocateERS1_m, funcdef_no=10222, decl_uid=201553, cgraph_uid=6854, symbol_order=7651)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct defmalloc_type * std::allocator_traits<std::allocator<defmalloc_type> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct defmalloc_type * D.257882;
  struct defmalloc_type * D.257880;

  <bb 2> :
  D.257882 = __gnu_cxx::new_allocator<defmalloc_type>::allocate (__a, __n, 0B);
  D.257880 = D.257882;

  <bb 3> :
<L0>:
  return D.257880;

}



;; Function __gnu_cxx::new_allocator<defmalloc_type>::allocate (_ZN9__gnu_cxx13new_allocatorI14defmalloc_typeE8allocateEmPKv, funcdef_no=10691, decl_uid=201407, cgraph_uid=7324, symbol_order=8121)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct defmalloc_type * __gnu_cxx::new_allocator<defmalloc_type>::allocate (struct new_allocator * const this, size_type __n, const void * D.246027)
{
  struct defmalloc_type * D.257893;
  struct defmalloc_type * D.257892;
  align_val_t __al;
  struct defmalloc_type * D.257890;
  bool retval.1910;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<defmalloc_type>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.1910 = _4 != 0;
  if (retval.1910 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 461168601842738790)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 40;
  D.257893 = operator new (_6);
  D.257890 = D.257893;

  <bb 7> :
<L6>:
  return D.257890;

}



;; Function __gnu_cxx::__normal_iterator<defmalloc_type*, std::vector<defmalloc_type> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP14defmalloc_typeSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9623, decl_uid=216072, cgraph_uid=6255, symbol_order=7048)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct defmalloc_type * const & __gnu_cxx::__normal_iterator<defmalloc_type*, std::vector<defmalloc_type> >::base (const struct __normal_iterator * const this)
{
  struct defmalloc_type * const & D.257894;

  <bb 2> :
  D.257894 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.257894;

}



;; Function std::vector<defmalloc_type>::_S_relocate (_ZNSt6vectorI14defmalloc_typeSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9622, decl_uid=201910, cgraph_uid=6254, symbol_order=7047)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct defmalloc_type * std::vector<defmalloc_type>::_S_relocate (struct defmalloc_type * __first, struct defmalloc_type * __last, struct defmalloc_type * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.257897;
  struct defmalloc_type * D.257896;

  <bb 2> :
  D.257896 = std::vector<defmalloc_type>::_S_do_relocate (__first, __last, __result, __alloc, D.257897);

  <bb 3> :
<L0>:
  return D.257896;

}



;; Function std::vector<defmalloc_type>::_S_do_relocate (_ZNSt6vectorI14defmalloc_typeSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10223, decl_uid=201898, cgraph_uid=6855, symbol_order=7652)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct defmalloc_type * std::vector<defmalloc_type>::_S_do_relocate (struct defmalloc_type * __first, struct defmalloc_type * __last, struct defmalloc_type * __result, struct _Tp_alloc_type & __alloc, struct true_type D.242792)
{
  struct defmalloc_type * D.257899;

  <bb 2> :
  D.257899 = std::__relocate_a<defmalloc_type*, defmalloc_type*, std::allocator<defmalloc_type> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.257899;

}



;; Function std::__relocate_a<defmalloc_type*, defmalloc_type*, std::allocator<defmalloc_type> > (_ZSt12__relocate_aIP14defmalloc_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10693, decl_uid=229018, cgraph_uid=7325, symbol_order=8122)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct defmalloc_type * std::__relocate_a<defmalloc_type*, defmalloc_type*, std::allocator<defmalloc_type> > (struct defmalloc_type * __first, struct defmalloc_type * __last, struct defmalloc_type * __result, struct allocator & __alloc)
{
  struct defmalloc_type * D.257901;

  <bb 2> :
  _1 = std::__niter_base<defmalloc_type*> (__result);
  _2 = std::__niter_base<defmalloc_type*> (__last);
  _3 = std::__niter_base<defmalloc_type*> (__first);
  D.257901 = std::__relocate_a_1<defmalloc_type*, defmalloc_type*, std::allocator<defmalloc_type> > (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.257901;

}



;; Function std::__niter_base<defmalloc_type*> (_ZSt12__niter_baseIP14defmalloc_typeET_S2_, funcdef_no=10896, decl_uid=229024, cgraph_uid=7528, symbol_order=8327)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct defmalloc_type * std::__niter_base<defmalloc_type*> (struct defmalloc_type * __it)
{
  struct defmalloc_type * D.257903;

  <bb 2> :
  D.257903 = __it;

  <bb 3> :
<L0>:
  return D.257903;

}



;; Function std::__relocate_a_1<defmalloc_type*, defmalloc_type*, std::allocator<defmalloc_type> > (_ZSt14__relocate_a_1IP14defmalloc_typeS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10897, decl_uid=229169, cgraph_uid=7529, symbol_order=8328)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct defmalloc_type * std::__relocate_a_1<defmalloc_type*, defmalloc_type*, std::allocator<defmalloc_type> > (struct defmalloc_type * __first, struct defmalloc_type * __last, struct defmalloc_type * __result, struct allocator & __alloc)
{
  struct defmalloc_type * __cur;
  struct defmalloc_type * D.257905;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<defmalloc_type> (__first);
  _2 = std::__addressof<defmalloc_type> (__cur);
  std::__relocate_object_a<defmalloc_type, defmalloc_type, std::allocator<defmalloc_type> > (_2, _1, __alloc);
  __first = __first + 40;
  __cur = __cur + 40;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.257905 = __cur;

  <bb 6> :
<L3>:
  return D.257905;

}



;; Function std::__addressof<defmalloc_type> (_ZSt11__addressofI14defmalloc_typeEPT_RS1_, funcdef_no=10687, decl_uid=229225, cgraph_uid=7319, symbol_order=8116)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct defmalloc_type * std::__addressof<defmalloc_type> (struct defmalloc_type & __r)
{
  struct defmalloc_type * D.257907;

  <bb 2> :
  D.257907 = __r;

  <bb 3> :
<L0>:
  return D.257907;

}



;; Function std::__relocate_object_a<defmalloc_type, defmalloc_type, std::allocator<defmalloc_type> > (_ZSt19__relocate_object_aI14defmalloc_typeS0_SaIS0_EEvPT_PT0_RT1_, funcdef_no=10996, decl_uid=229198, cgraph_uid=7628, symbol_order=8427)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__relocate_object_a<defmalloc_type, defmalloc_type, std::allocator<defmalloc_type> > (struct defmalloc_type * restrict __dest, struct defmalloc_type * restrict __orig, struct allocator & __alloc)
{
  <bb 2> :
  _1 = std::move<defmalloc_type&> (__orig);
  std::allocator_traits<std::allocator<defmalloc_type> >::construct<defmalloc_type, defmalloc_type> (__alloc, __dest, _1);
  _2 = std::__addressof<defmalloc_type> (__orig);
  std::allocator_traits<std::allocator<defmalloc_type> >::destroy<defmalloc_type> (__alloc, _2);
  return;

}



;; Function std::move<defmalloc_type&> (_ZSt4moveIR14defmalloc_typeEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=11040, decl_uid=229210, cgraph_uid=7672, symbol_order=8471)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<defmalloc_type&> (struct defmalloc_type & __t)
{
  struct type & D.257909;

  <bb 2> :
  D.257909 = __t;

  <bb 3> :
<L0>:
  return D.257909;

}



;; Function std::allocator_traits<std::allocator<defmalloc_type> >::construct<defmalloc_type, defmalloc_type> (_ZNSt16allocator_traitsISaI14defmalloc_typeEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_, funcdef_no=11041, decl_uid=229212, cgraph_uid=7673, symbol_order=8472)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<defmalloc_type> >::construct<defmalloc_type, defmalloc_type> (struct allocator_type & __a, struct defmalloc_type * __p, struct defmalloc_type & __args#0)
{
  <bb 2> :
  _1 = std::forward<defmalloc_type> (__args#0);
  __gnu_cxx::new_allocator<defmalloc_type>::construct<defmalloc_type, defmalloc_type> (__a, __p, _1);
  return;

}



;; Function std::forward<defmalloc_type> (_ZSt7forwardI14defmalloc_typeEOT_RNSt16remove_referenceIS1_E4typeE, funcdef_no=11062, decl_uid=247779, cgraph_uid=7694, symbol_order=8493)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct defmalloc_type & std::forward<defmalloc_type> (struct type & __t)
{
  struct defmalloc_type & D.257911;

  <bb 2> :
  D.257911 = __t;

  <bb 3> :
<L0>:
  return D.257911;

}



;; Function __gnu_cxx::new_allocator<defmalloc_type>::construct<defmalloc_type, defmalloc_type> (_ZN9__gnu_cxx13new_allocatorI14defmalloc_typeE9constructIS1_JS1_EEEvPT_DpOT0_, funcdef_no=11063, decl_uid=247781, cgraph_uid=7698, symbol_order=8497)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<defmalloc_type>::construct<defmalloc_type, defmalloc_type> (struct new_allocator * const this, struct defmalloc_type * __p, struct defmalloc_type & __args#0)
{
  void * D.248198;
  void * D.248197;
  struct defmalloc_type & D.248202;

  <bb 2> :
  D.248202 = std::forward<defmalloc_type> (__args#0);
  D.248197 = __p;
  D.248198 = operator new (40, D.248197);
  defmalloc_type::defmalloc_type (D.248198, D.248202);
  return;

}



;; Function defmalloc_type::defmalloc_type (_ZN14defmalloc_typeC2EOS_, funcdef_no=11065, decl_uid=202900, cgraph_uid=7696, symbol_order=8495)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void defmalloc_type::defmalloc_type (struct defmalloc_type * const this, struct defmalloc_type & D.202902)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.202902->stmt;
  this->stmt = _1;
  _2 = D.202902->malloc_tree;
  this->malloc_tree = _2;
  _3 = &this->free_array;
  _4 = &D.202902->free_array;
  std::vector<free_type>::vector (_3, _4);
  return;

}



;; Function std::allocator_traits<std::allocator<defmalloc_type> >::destroy<defmalloc_type> (_ZNSt16allocator_traitsISaI14defmalloc_typeEE7destroyIS0_EEvRS1_PT_, funcdef_no=9624, decl_uid=229227, cgraph_uid=6256, symbol_order=7049)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<defmalloc_type> >::destroy<defmalloc_type> (struct allocator_type & __a, struct defmalloc_type * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<defmalloc_type>::destroy<defmalloc_type> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<defmalloc_type>::destroy<defmalloc_type> (_ZN9__gnu_cxx13new_allocatorI14defmalloc_typeE7destroyIS1_EEvPT_, funcdef_no=10224, decl_uid=237846, cgraph_uid=6856, symbol_order=7653)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<defmalloc_type>::destroy<defmalloc_type> (struct new_allocator * const this, struct defmalloc_type * __p)
{
  <bb 2> :
  defmalloc_type::~defmalloc_type (__p);
  return;

}



;; Function std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI14defmalloc_typeSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8762, decl_uid=201636, cgraph_uid=5394, symbol_order=6187)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.257913;

  <bb 2> :
  D.257913 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.257913;

}



;; Function std::_Destroy<defmalloc_type*, defmalloc_type> (_ZSt8_DestroyIP14defmalloc_typeS0_EvT_S2_RSaIT0_E, funcdef_no=8763, decl_uid=215763, cgraph_uid=5395, symbol_order=6188)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<defmalloc_type*, defmalloc_type> (struct defmalloc_type * __first, struct defmalloc_type * __last, struct allocator & D.228768)
{
  <bb 2> :
  std::_Destroy<defmalloc_type*> (__first, __last);
  return;

}



;; Function std::_Destroy<defmalloc_type*> (_ZSt8_DestroyIP14defmalloc_typeEvT_S2_, funcdef_no=9606, decl_uid=228770, cgraph_uid=6238, symbol_order=7031)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<defmalloc_type*> (struct defmalloc_type * __first, struct defmalloc_type * __last)
{
  <bb 2> :
  std::_Destroy_aux<false>::__destroy<defmalloc_type*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<false>::__destroy<defmalloc_type*> (_ZNSt12_Destroy_auxILb0EE9__destroyIP14defmalloc_typeEEvT_S4_, funcdef_no=10218, decl_uid=237777, cgraph_uid=6850, symbol_order=7647)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void std::_Destroy_aux<false>::__destroy<defmalloc_type*> (struct defmalloc_type * __first, struct defmalloc_type * __last)
{
  <bb 2> :
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<defmalloc_type> (__first);
  std::_Destroy<defmalloc_type> (_1);
  __first = __first + 40;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



;; Function std::_Destroy<defmalloc_type> (_ZSt8_DestroyI14defmalloc_typeEvPT_, funcdef_no=10688, decl_uid=242773, cgraph_uid=7320, symbol_order=8117)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<defmalloc_type> (struct defmalloc_type * __pointer)
{
  <bb 2> :
  defmalloc_type::~defmalloc_type (__pointer);
  return;

}



;; Function std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_deallocate (_ZNSt12_Vector_baseI14defmalloc_typeSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8761, decl_uid=201755, cgraph_uid=5393, symbol_order=6186)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_deallocate (struct _Vector_base * const this, struct defmalloc_type * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<defmalloc_type> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<defmalloc_type> >::deallocate (_ZNSt16allocator_traitsISaI14defmalloc_typeEE10deallocateERS1_PS0_m, funcdef_no=9605, decl_uid=201560, cgraph_uid=6237, symbol_order=7030)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<defmalloc_type> >::deallocate (struct allocator_type & __a, struct defmalloc_type * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<defmalloc_type>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<defmalloc_type>::deallocate (_ZN9__gnu_cxx13new_allocatorI14defmalloc_typeE10deallocateEPS1_m, funcdef_no=10217, decl_uid=201411, cgraph_uid=6849, symbol_order=7646)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<defmalloc_type>::deallocate (struct new_allocator * const this, struct defmalloc_type * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 40;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<free_type>::at (_ZNSt6vectorI9free_typeSaIS0_EE2atEm, funcdef_no=7817, decl_uid=173154, cgraph_uid=4449, symbol_order=5238)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<free_type>::at (struct vector * const this, size_type __n)
{
  struct value_type & D.257921;

  <bb 2> :
  std::vector<free_type>::_M_range_check (this, __n);
  D.257921 = std::vector<free_type>::operator[] (this, __n);

  <bb 3> :
<L0>:
  return D.257921;

}



;; Function std::vector<free_type>::_M_range_check (_ZNKSt6vectorI9free_typeSaIS0_EE14_M_range_checkEm, funcdef_no=8777, decl_uid=173151, cgraph_uid=5409, symbol_order=6202)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
void std::vector<free_type>::_M_range_check (const struct vector * const this, size_type __n)
{
  bool retval.1911;

  <bb 2> :
  _1 = std::vector<free_type>::size (this);
  retval.1911 = __n >= _1;
  if (retval.1911 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = std::vector<free_type>::size (this);
  std::__throw_out_of_range_fmt ("vector::_M_range_check: __n (which is %zu) >= this->size() (which is %zu)", __n, _2);

  <bb 4> :
  return;

}



;; Function std::vector<defmalloc_type>::at (_ZNSt6vectorI14defmalloc_typeSaIS0_EE2atEm, funcdef_no=7821, decl_uid=202065, cgraph_uid=4453, symbol_order=5242)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<defmalloc_type>::at (struct vector * const this, size_type __n)
{
  struct value_type & D.257926;

  <bb 2> :
  std::vector<defmalloc_type>::_M_range_check (this, __n);
  D.257926 = std::vector<defmalloc_type>::operator[] (this, __n);

  <bb 3> :
<L0>:
  return D.257926;

}



;; Function std::vector<defmalloc_type>::_M_range_check (_ZNKSt6vectorI14defmalloc_typeSaIS0_EE14_M_range_checkEm, funcdef_no=8784, decl_uid=202062, cgraph_uid=5416, symbol_order=6209)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
void std::vector<defmalloc_type>::_M_range_check (const struct vector * const this, size_type __n)
{
  bool retval.1912;

  <bb 2> :
  _1 = std::vector<defmalloc_type>::size (this);
  retval.1912 = __n >= _1;
  if (retval.1912 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = std::vector<defmalloc_type>::size (this);
  std::__throw_out_of_range_fmt ("vector::_M_range_check: __n (which is %zu) >= this->size() (which is %zu)", __n, _2);

  <bb 4> :
  return;

}



;; Function std::vector<defmalloc_type>::operator[] (_ZNSt6vectorI14defmalloc_typeSaIS0_EEixEm, funcdef_no=8785, decl_uid=202056, cgraph_uid=5417, symbol_order=6210)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct value_type & std::vector<defmalloc_type>::operator[] (struct vector * const this, size_type __n)
{
  struct value_type & D.257931;

  <bb 2> :
  _1 = this->D.202403._M_impl.D.201748._M_start;
  _2 = __n * 40;
  D.257931 = _1 + _2;

  <bb 3> :
<L0>:
  return D.257931;

}



;; Function std::vector<defmalloc_type>::size (_ZNKSt6vectorI14defmalloc_typeSaIS0_EE4sizeEv, funcdef_no=7820, decl_uid=202036, cgraph_uid=4452, symbol_order=5241)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<defmalloc_type>::size (const struct vector * const this)
{
  size_type D.257933;

  <bb 2> :
  _1 = this->D.202403._M_impl.D.201748._M_finish;
  _2 = this->D.202403._M_impl.D.201748._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 40;
  D.257933 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.257933;

}



;; Function defmalloc_type::~defmalloc_type (_ZN14defmalloc_typeD2Ev, funcdef_no=6808, decl_uid=202912, cgraph_uid=3439, symbol_order=4218)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void defmalloc_type::~defmalloc_type (struct defmalloc_type * const this)
{
  <bb 2> :
  _1 = &this->free_array;
  std::vector<free_type>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<basic_block_def*>::~vector (_ZNSt6vectorIP15basic_block_defSaIS1_EED2Ev, funcdef_no=7802, decl_uid=170299, cgraph_uid=4434, symbol_order=5223)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<basic_block_def*>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.170302;
  _2 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_1);
  _3 = this->D.170302._M_impl.D.169647._M_finish;
  _4 = this->D.170302._M_impl.D.169647._M_start;
  std::_Destroy<basic_block_def**, basic_block_def*> (_4, _3, _2);
  _5 = &this->D.170302;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<basic_block_def**, basic_block_def*> (_ZSt8_DestroyIPP15basic_block_defS1_EvT_S3_RSaIT0_E, funcdef_no=8765, decl_uid=215778, cgraph_uid=5397, symbol_order=6190)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<basic_block_def**, basic_block_def*> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct allocator & D.228776)
{
  <bb 2> :
  std::_Destroy<basic_block_def**> (__first, __last);
  return;

}



;; Function std::_Destroy<basic_block_def**> (_ZSt8_DestroyIPP15basic_block_defEvT_S3_, funcdef_no=9607, decl_uid=228778, cgraph_uid=6239, symbol_order=7032)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<basic_block_def**> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<basic_block_def**> (_ZNSt12_Destroy_auxILb1EE9__destroyIPP15basic_block_defEEvT_S5_, funcdef_no=10219, decl_uid=237796, cgraph_uid=6851, symbol_order=7648)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<basic_block_def**> (struct basic_block_def * * D.242779, struct basic_block_def * * D.242780)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::~_Vector_base (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EED2Ev, funcdef_no=7576, decl_uid=169757, cgraph_uid=4208, symbol_order=4997)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.169647._M_end_of_storage;
  _2 = this->_M_impl.D.169647._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.169647._M_start;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE12_Vector_implD2Ev, funcdef_no=6197, decl_uid=169694, cgraph_uid=3171, symbol_order=3926)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<basic_block_def*>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<basic_block_def*>::~allocator (_ZNSaIP15basic_block_defED2Ev, funcdef_no=7573, decl_uid=169427, cgraph_uid=4205, symbol_order=4994)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<basic_block_def*>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<basic_block_def*>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defED2Ev, funcdef_no=8404, decl_uid=169356, cgraph_uid=5036, symbol_order=5829)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<basic_block_def*>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<defmalloc_type>::~vector (_ZNSt6vectorI14defmalloc_typeSaIS0_EED2Ev, funcdef_no=7799, decl_uid=202400, cgraph_uid=4431, symbol_order=5220)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<defmalloc_type>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.202403;
  _2 = std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_get_Tp_allocator (_1);
  _3 = this->D.202403._M_impl.D.201748._M_finish;
  _4 = this->D.202403._M_impl.D.201748._M_start;
  std::_Destroy<defmalloc_type*, defmalloc_type> (_4, _3, _2);
  _5 = &this->D.202403;
  std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::~_Vector_base (_ZNSt12_Vector_baseI14defmalloc_typeSaIS0_EED2Ev, funcdef_no=7796, decl_uid=201858, cgraph_uid=4428, symbol_order=5217)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.201748._M_end_of_storage;
  _2 = this->_M_impl.D.201748._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 40;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.201748._M_start;
  std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI14defmalloc_typeSaIS0_EE12_Vector_implD2Ev, funcdef_no=6792, decl_uid=201795, cgraph_uid=3421, symbol_order=4200)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<defmalloc_type, std::allocator<defmalloc_type> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<defmalloc_type>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<defmalloc_type>::~allocator (_ZNSaI14defmalloc_typeED2Ev, funcdef_no=7793, decl_uid=201528, cgraph_uid=4425, symbol_order=5214)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<defmalloc_type>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<defmalloc_type>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<defmalloc_type>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI14defmalloc_typeED2Ev, funcdef_no=8759, decl_uid=201457, cgraph_uid=5391, symbol_order=6184)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<defmalloc_type>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function record_fucntion (_Z15record_fucntionP11cgraph_node, funcdef_no=6810, decl_uid=186998, cgraph_uid=3474, symbol_order=4253)

Removing basic block 50
;; 7 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72
;;
;; Loop 1
;;  header 61, latch 60
;;  depth 1, outer 0
;;  nodes: 61 60 59 57 58 6 11 10 9 8 7 5 4 56 55 54 53 30 52 51 31 50 33 49 35 34 48 39 47 46 45 40 44 42 43 41 38 37 36 32 29 13 28 18 27 24 26 25 23 19 22 20 21 17 15 16 14 12
;;
;; Loop 3
;;  header 53, latch 52
;;  depth 2, outer 1
;;  nodes: 53 52 51 31 50 33 49 35 34 48 39 47 46 45 40 44 42 43 41 38 37 36 32
;;
;; Loop 4
;;  header 51, latch 50
;;  depth 3, outer 3
;;  nodes: 51 50 33 49 35 34 48 39 47 46 45 40 44 42 43 41 38 37 36 32
;;
;; Loop 5
;;  header 45, latch 44
;;  depth 4, outer 4
;;  nodes: 45 44 42 43 41 46
;;
;; Loop 2
;;  header 29, latch 28
;;  depth 2, outer 1
;;  nodes: 29 28 18 27 24 26 25 23 19 22 20 21 17 15 16 14
;;
;; Loop 6
;;  header 23, latch 22
;;  depth 3, outer 2
;;  nodes: 23 22 20 21
;; 2 succs { 72 3 }
;; 3 succs { 61 }
;; 4 succs { 71 5 }
;; 5 succs { 6 7 }
;; 6 succs { 58 }
;; 7 succs { 71 8 }
;; 8 succs { 71 9 }
;; 9 succs { 10 12 }
;; 10 succs { 71 11 }
;; 11 succs { 58 }
;; 12 succs { 69 13 }
;; 13 succs { 29 }
;; 14 succs { 15 16 }
;; 15 succs { 17 }
;; 16 succs { 17 }
;; 17 succs { 69 18 }
;; 18 succs { 19 28 }
;; 19 succs { 23 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 20 24 }
;; 24 succs { 25 27 }
;; 25 succs { 63 26 }
;; 26 succs { 27 }
;; 27 succs { 28 }
;; 28 succs { 29 }
;; 29 succs { 14 30 }
;; 30 succs { 53 }
;; 31 succs { 51 }
;; 32 succs { 68 33 }
;; 33 succs { 34 50 }
;; 34 succs { 68 35 }
;; 35 succs { 36 50 }
;; 36 succs { 67 37 }
;; 37 succs { 66 38 }
;; 38 succs { 66 39 }
;; 39 succs { 40 48 }
;; 40 succs { 45 }
;; 41 succs { 42 43 }
;; 42 succs { 44 }
;; 43 succs { 44 }
;; 44 succs { 65 45 }
;; 45 succs { 65 46 }
;; 46 succs { 41 47 }
;; 47 succs { 48 }
;; 48 succs { 66 49 }
;; 49 succs { 50 }
;; 50 succs { 51 }
;; 51 succs { 32 52 }
;; 52 succs { 53 }
;; 53 succs { 31 54 }
;; 54 succs { 69 55 }
;; 55 succs { 69 56 }
;; 56 succs { 69 57 }
;; 57 succs { 59 }
;; 58 succs { 59 }
;; 59 succs { 72 60 }
;; 60 succs { 61 }
;; 61 succs { 4 62 }
;; 62 succs { 1 }
;; 63 succs { 64 }
;; 64 succs { 69 }
;; 65 succs { 66 }
;; 66 succs { 67 }
;; 67 succs { 68 }
;; 68 succs { 69 }
;; 69 succs { 70 }
;; 70 succs { 71 }
;; 71 succs { 72 }
;; 72 succs { }
void record_fucntion (struct cgraph_node * node)
{
  struct cgraph_node * D.257992;
  struct function * D.257986;
  bool D.257981;
  union tree_node * D.257980;
  union tree_node * D.257979;
  tree_code D.257978;
  tree_code D.257977;
  struct cgraph_node * D.257974;
  struct function * D.257973;
  bool D.257972;
  struct cgraph_node * D.257971;
  int init;
  struct edge_iterator ei;
  struct edge_def * e;
  struct symbolicinfo symbolicinfo;
  tree_code code;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct function_path path_type;
  struct iterator it_i;
  int find;
  struct cgraph_node * callee;
  struct cgraph_node * caller;
  struct vector function_path_array;
  struct function_path_array fun_array;
  availability avail;
  struct basic_block_def * bb;
  struct cgraph_edge * e;
  bool retval.1930;
  bool retval.1928;
  bool retval.1922;
  bool retval.1921;
  struct iterator D.203295;
  bool retval.1918;
  bool retval.1917;
  struct cgraph_node * iftmp.1916;
  bool retval.1914;

  <bb 2> :
  symtab.1913_1 = symtab;
  D.257971 = symbol_table::first_defined_function (symtab.1913_1);

  <bb 3> :
  node = D.257971;
  goto <bb 61>; [INV]

  <bb 4> :
  _2 = node->D.97512.decl;
  D.257972 = gimple_has_body_p (_2);

  <bb 5> :
  _3 = D.257972;
  retval.1914 = ~_3;
  if (retval.1914 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  // predicted unlikely by continue predictor.
  goto <bb 58>; [INV]

  <bb 7> :
  D.257973 = cgraph_node::get_fun (node);

  <bb 8> :
  _4 = D.257973;
  push_cfun (_4);

  <bb 9> :
  cfun.1915_5 = cfun;
  if (cfun.1915_5 == 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  pop_cfun ();

  <bb 11> :
  // predicted unlikely by continue predictor.
  goto <bb 58>; [INV]

  <bb 12> :
  function_path_array::function_path_array (&fun_array);
  std::vector<function_path>::vector (&function_path_array);
  std::vector<function_path>::operator= (&fun_array.function_path_array, &function_path_array);

  <bb 13> :
  e = node->callees;
  goto <bb 29>; [INV]

  <bb 14> :
  _6 = e->caller;
  _7 = _6->inlined_to;
  if (_7 != 0B)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  _8 = e->caller;
  iftmp.1916 = _8->inlined_to;
  goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1916 = e->caller;

  <bb 17> :
  caller = iftmp.1916;
  _9 = e->callee;
  D.257974 = cgraph_node::ultimate_alias_target (_9, &avail, caller);

  <bb 18> :
  callee = D.257974;
  if (callee != 0B)
    goto <bb 19>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 19> :
  find = 0;
  it_i._M_current = 0B;
  it_i = std::vector<function_path>::begin (&fun_array.function_path_array);
  goto <bb 23>; [INV]

  <bb 20> :
  _10 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator-> (&it_i);
  _11 = _10->next;
  _12 = callee->D.97512.decl;
  retval.1917 = _11 == _12;
  if (retval.1917 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  find = 1;

  <bb 22> :
  __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator++ (&it_i);

  <bb 23> :
  D.203295 = std::vector<function_path>::end (&fun_array.function_path_array);
  retval.1918 = __gnu_cxx::operator!=<function_path*, std::vector<function_path> > (&it_i, &D.203295);
  D.203295 = {CLOBBER};
  if (retval.1918 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  if (find == 0)
    goto <bb 25>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 25> :
  path_type.cgnext = callee;
  _13 = callee->D.97512.decl;
  path_type.next = _13;
  std::vector<function_path>::push_back (&fun_array.function_path_array, &path_type);

  <bb 26> :
  path_type = {CLOBBER};

  <bb 27> :
  it_i = {CLOBBER};

  <bb 28> :
  e = e->next_callee;

  <bb 29> :
  if (e != 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 30> :
  cfun.1919_14 = cfun;
  _15 = cfun.1919_14->cfg;
  _16 = _15->x_entry_block_ptr;
  _17 = _16->next_bb;
  bb = _17;
  goto <bb 53>; [INV]

  <bb 31> :
  bb.1920_18 = bb;
  gsi = gsi_start_bb (bb.1920_18); [return slot optimization]
  goto <bb 51>; [INV]

  <bb 32> :
  gc = gsi_stmt (gsi);
  D.257977 = gimple_cond_code (gc);

  <bb 33> :
  _19 = D.257977;
  retval.1921 = _19 != 0;
  if (retval.1921 != 0)
    goto <bb 34>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 34> :
  D.257978 = gimple_cond_code (gc);

  <bb 35> :
  code = D.257978;
  _20 = is_gimple_assign (gc);
  retval.1922 = ~_20;
  if (retval.1922 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 36> :
  std::vector<basic_block_def*>::push_back (&symbolicExecution, &bb);

  <bb 37> :
  symbolicinfo::symbolicinfo (&symbolicinfo);
  symbolicinfo.cond_stmt = gc;
  D.257979 = gimple_cond_lhs (gc);

  <bb 38> :
  _21 = D.257979;
  symbolicinfo.cond_lhs = _21;
  D.257980 = gimple_cond_rhs (gc);

  <bb 39> :
  _22 = D.257980;
  symbolicinfo.cond_rhs = _22;
  symbolicinfo.node = node;
  cfun.1923_23 = cfun;
  _24 = cfun.1923_23->cfg;
  _25 = _24->x_exit_block_ptr;
  _26 = _25->prev_bb;
  bb.1924_27 = bb;
  if (_26 != bb.1924_27)
    goto <bb 40>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 40> :
  init = 0;
  bb.1925_28 = bb;
  _29 = &bb.1925_28->succs;
  ei = ei_start_1 (_29);
  goto <bb 45>; [INV]

  <bb 41> :
  if (init == 0)
    goto <bb 42>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 42> :
  e.1926_30 = e;
  _31 = e.1926_30->dest;
  symbolicinfo.cond_truebranch = _31;
  goto <bb 44>; [INV]

  <bb 43> :
  e.1927_32 = e;
  _33 = e.1927_32->dest;
  symbolicinfo.cond_falsebranch = _33;

  <bb 44> :
  init = init + 1;
  ei_next (&ei);

  <bb 45> :
  D.257981 = ei_cond (ei, &e);

  <bb 46> :
  retval.1928 = D.257981;
  if (retval.1928 != 0)
    goto <bb 41>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 47> :
  e = {CLOBBER};
  ei = {CLOBBER};

  <bb 48> :
  syminfo.1929_34 = syminfo;
  hash_map<basic_block_def*, symbolicinfo>::put (syminfo.1929_34, &bb, &symbolicinfo);

  <bb 49> :
  symbolicinfo::~symbolicinfo (&symbolicinfo);
  symbolicinfo = {CLOBBER};

  <bb 50> :
  gsi_next (&gsi);

  <bb 51> :
  _35 = gsi_end_p (gsi);
  retval.1930 = ~_35;
  if (retval.1930 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 52> :
  gsi = {CLOBBER};
  bb.1931_36 = bb;
  _37 = bb.1931_36->next_bb;
  bb = _37;

  <bb 53> :
  cfun.1932_38 = cfun;
  _39 = cfun.1932_38->cfg;
  _40 = _39->x_exit_block_ptr;
  bb.1933_41 = bb;
  if (_40 != bb.1933_41)
    goto <bb 31>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 54> :
  function_path_collect.1934_42 = function_path_collect;
  D.257986 = cgraph_node::get_fun (node);

  <bb 55> :
  _43 = D.257986;
  _44 = &_43->decl;
  hash_map<tree_node*, function_path_array>::put (function_path_collect.1934_42, _44, &fun_array);

  <bb 56> :
  pop_cfun ();

  <bb 57> :
  std::vector<function_path>::~vector (&function_path_array);
  function_path_array::~function_path_array (&fun_array);
  avail = {CLOBBER};
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  goto <bb 59>; [INV]

  <bb 58> :
  avail = {CLOBBER};
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};

  <bb 59> :
  symtab.1935_45 = symtab;
  D.257992 = symbol_table::next_defined_function (symtab.1935_45, node);

  <bb 60> :
  node = D.257992;

  <bb 61> :
  if (node != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 62>; [INV]

  <bb 62> :
  bb = {CLOBBER};
  return;

  <bb 63> :
<L49>:
  path_type = {CLOBBER};
  resx 7

  <bb 64> :
<L50>:
  it_i = {CLOBBER};
  resx 5

  <bb 65> :
<L51>:
  e = {CLOBBER};
  ei = {CLOBBER};
  resx 13

  <bb 66> :
<L52>:
  symbolicinfo::~symbolicinfo (&symbolicinfo);
  resx 12

  <bb 67> :
<L53>:
  symbolicinfo = {CLOBBER};
  resx 11

  <bb 68> :
<L54>:
  gsi = {CLOBBER};
  resx 10

  <bb 69> :
<L55>:
  std::vector<function_path>::~vector (&function_path_array);
  resx 4

  <bb 70> :
<L56>:
  function_path_array::~function_path_array (&fun_array);
  resx 3

  <bb 71> :
<L57>:
  avail = {CLOBBER};
  fun_array = {CLOBBER};
  function_path_array = {CLOBBER};
  resx 2

  <bb 72> :
<L58>:
  bb = {CLOBBER};
  resx 1

}



;; Function function_path_array::function_path_array (_ZN19function_path_arrayC2Ev, funcdef_no=6822, decl_uid=192294, cgraph_uid=3453, symbol_order=4232)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_path_array::function_path_array (struct function_path_array * const this)
{
  <bb 2> :
  this->funtion_type_num = 0;
  _1 = &this->function_path_array;
  std::vector<function_path>::vector (_1);
  return;

}



;; Function std::vector<function_path>::vector (_ZNSt6vectorI13function_pathSaIS0_EEC2Ev, funcdef_no=6820, decl_uid=175600, cgraph_uid=3450, symbol_order=4229)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<function_path>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.175608;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_ZNSt12_Vector_baseI13function_pathSaIS0_EEC2Ev, funcdef_no=6818, decl_uid=175058, cgraph_uid=3447, symbol_order=4226)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI13function_pathSaIS0_EE12_Vector_implC2Ev, funcdef_no=7823, decl_uid=174950, cgraph_uid=4455, symbol_order=5244)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<function_path>::allocator (this);
  _1 = &this->D.174953;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<function_path>::allocator (_ZNSaI13function_pathEC2Ev, funcdef_no=8787, decl_uid=174728, cgraph_uid=5419, symbol_order=6212)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<function_path>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<function_path>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<function_path>::new_allocator (_ZN9__gnu_cxx13new_allocatorI13function_pathEC2Ev, funcdef_no=9626, decl_uid=174657, cgraph_uid=6258, symbol_order=7051)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<function_path>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<function_path>::operator= (_ZNSt6vectorI13function_pathSaIS0_EEaSERKS2_, funcdef_no=7831, decl_uid=175186, cgraph_uid=4465, symbol_order=5254)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<function_path>::operator= (struct vector * const this, const struct vector & __x)
{
  struct function_path * D.258027;
  struct function_path * __tmp;
  const size_type __xlen;
  struct vector & D.258025;
  struct __normal_iterator D.258022;
  struct __normal_iterator D.258021;
  struct __normal_iterator D.258020;
  struct __normal_iterator D.258019;
  struct __normal_iterator D.258018;
  bool retval.1940;
  struct __normal_iterator D.258013;
  struct __normal_iterator D.258012;
  bool retval.1939;
  bool iftmp.1938;
  bool retval.1937;
  bool retval.1936;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.1936 = __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_propagate_on_copy_assign ();
  if (retval.1936 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.175608;
  _4 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.175608;
  _6 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1938 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1938 = 0;

  <bb 8> :
  retval.1937 = iftmp.1938;
  if (retval.1937 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<function_path>::clear (this);
  _8 = &this->D.175608;
  _9 = this->D.175608._M_impl.D.174953._M_end_of_storage;
  _10 = this->D.175608._M_impl.D.174953._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 24;
  _13 = (long unsigned int) _12;
  _14 = this->D.175608._M_impl.D.174953._M_start;
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (_8, _14, _13);
  this->D.175608._M_impl.D.174953._M_start = 0B;
  this->D.175608._M_impl.D.174953._M_finish = 0B;
  this->D.175608._M_impl.D.174953._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.175608;
  _16 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.175608;
  _18 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<function_path> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<function_path>::size (__x);
  _19 = std::vector<function_path>::capacity (this);
  retval.1939 = __xlen > _19;
  if (retval.1939 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.258012 = std::vector<function_path>::end (__x);
  D.258013 = std::vector<function_path>::begin (__x);
  D.258027 = std::vector<function_path>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (this, __xlen, D.258013, D.258012);
  __tmp = D.258027;
  _20 = &this->D.175608;
  _21 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_20);
  _22 = this->D.175608._M_impl.D.174953._M_finish;
  _23 = this->D.175608._M_impl.D.174953._M_start;
  std::_Destroy<function_path*, function_path> (_23, _22, _21);
  _24 = &this->D.175608;
  _25 = this->D.175608._M_impl.D.174953._M_end_of_storage;
  _26 = this->D.175608._M_impl.D.174953._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 24;
  _29 = (long unsigned int) _28;
  _30 = this->D.175608._M_impl.D.174953._M_start;
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (_24, _30, _29);
  this->D.175608._M_impl.D.174953._M_start = __tmp;
  _31 = this->D.175608._M_impl.D.174953._M_start;
  _32 = __xlen * 24;
  _33 = _31 + _32;
  this->D.175608._M_impl.D.174953._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<function_path>::size (this);
  retval.1940 = __xlen <= _34;
  if (retval.1940 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.175608;
  _36 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_35);
  D.258018 = std::vector<function_path>::end (this);
  D.258019 = std::vector<function_path>::begin (this);
  D.258020 = std::vector<function_path>::end (__x);
  D.258021 = std::vector<function_path>::begin (__x);
  D.258022 = std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (D.258021, D.258020, D.258019);
  std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path> (D.258022, D.258018, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.175608._M_impl.D.174953._M_start;
  _38 = __x->D.175608._M_impl.D.174953._M_start;
  _39 = std::vector<function_path>::size (this);
  _40 = _39 * 24;
  _41 = _38 + _40;
  _42 = __x->D.175608._M_impl.D.174953._M_start;
  std::copy<function_path*, function_path*> (_42, _41, _37);
  _43 = &this->D.175608;
  _44 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_43);
  _45 = this->D.175608._M_impl.D.174953._M_finish;
  _46 = __x->D.175608._M_impl.D.174953._M_finish;
  _47 = __x->D.175608._M_impl.D.174953._M_start;
  _48 = std::vector<function_path>::size (this);
  _49 = _48 * 24;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<function_path*, function_path*, function_path> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.175608._M_impl.D.174953._M_start;
  _52 = __xlen * 24;
  _53 = _51 + _52;
  this->D.175608._M_impl.D.174953._M_finish = _53;

  <bb 17> :
  D.258025 = this;

  <bb 18> :
<L19>:
  return D.258025;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI13function_pathES1_E27_S_propagate_on_copy_assignEv, funcdef_no=7832, decl_uid=174820, cgraph_uid=4463, symbol_order=5252)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_propagate_on_copy_assign ()
{
  bool D.258028;

  <bb 2> :
  D.258028 = 0;

  <bb 3> :
<L0>:
  return D.258028;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI13function_pathES1_E15_S_always_equalEv, funcdef_no=7833, decl_uid=174823, cgraph_uid=4464, symbol_order=5253)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<function_path>, function_path>::_S_always_equal ()
{
  bool D.258030;

  <bb 2> :
  D.258030 = 1;

  <bb 3> :
<L0>:
  return D.258030;

}



;; Function std::operator!= (_ZStneRKSaI13function_pathES2_, funcdef_no=8796, decl_uid=174706, cgraph_uid=5428, symbol_order=6221)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.229430, const struct allocator & D.229431)
{
  bool D.258032;

  <bb 2> :
  D.258032 = 0;

  <bb 3> :
<L0>:
  return D.258032;

}



;; Function std::vector<function_path>::clear (_ZNSt6vectorI13function_pathSaIS0_EE5clearEv, funcdef_no=8797, decl_uid=175338, cgraph_uid=5429, symbol_order=6222)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<function_path>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.175608._M_impl.D.174953._M_start;
  std::vector<function_path>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<function_path>::_M_erase_at_end (_ZNSt6vectorI13function_pathSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=9629, decl_uid=175466, cgraph_uid=6261, symbol_order=7054)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<function_path>::_M_erase_at_end (struct vector * const this, struct function_path * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.175608._M_impl.D.174953._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 24;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.175608;
  _5 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_4);
  _6 = this->D.175608._M_impl.D.174953._M_finish;
  std::_Destroy<function_path*, function_path> (__pos, _6, _5);
  this->D.175608._M_impl.D.174953._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<function_path> > (_ZSt15__alloc_on_copyISaI13function_pathEEvRT_RKS2_, funcdef_no=8798, decl_uid=216151, cgraph_uid=5430, symbol_order=6223)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<function_path> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<function_path>::capacity (_ZNKSt6vectorI13function_pathSaIS0_EE8capacityEv, funcdef_no=8799, decl_uid=175254, cgraph_uid=5431, symbol_order=6224)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<function_path>::capacity (const struct vector * const this)
{
  size_type D.258037;

  <bb 2> :
  _1 = this->D.175608._M_impl.D.174953._M_end_of_storage;
  _2 = this->D.175608._M_impl.D.174953._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  D.258037 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.258037;

}



;; Function std::vector<function_path>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (_ZNSt6vectorI13function_pathSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=8800, decl_uid=216158, cgraph_uid=5432, symbol_order=6225)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct function_path * std::vector<function_path>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct function_path * D.258041;
  struct function_path * __result;
  struct function_path * D.258039;

  <bb 2> :
  _1 = &this->D.175608;
  D.258041 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_allocate (_1, __n);
  __result = D.258041;
  _2 = &this->D.175608;
  _3 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, function_path*, function_path> (__first, __last, __result, _3);

  <bb 3> :
  D.258039 = __result;

  <bb 4> :
<L0>:
  return D.258039;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.175608;
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=8801, decl_uid=216166, cgraph_uid=5433, symbol_order=6226)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.258047;
  struct __normal_iterator D.258046;
  struct __normal_iterator D.258045;

  <bb 2> :
  D.258046 = std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (__last);
  D.258047 = std::__miter_base<__gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> > > (__first);
  D.258045 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (D.258047, D.258046, __result);

  <bb 3> :
<L0>:
  return D.258045;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK13function_pathSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=9632, decl_uid=229469, cgraph_uid=6265, symbol_order=7058)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const function_path*, std::vector<function_path> >, __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct function_path * D.258051;
  struct __normal_iterator D.258049;

  <bb 2> :
  _1 = std::__niter_base<function_path*, std::vector<function_path> > (__result);
  _2 = std::__niter_base<const function_path*, std::vector<function_path> > (__last);
  _3 = std::__niter_base<const function_path*, std::vector<function_path> > (__first);
  D.258051 = std::__copy_move_a1<false, const function_path*, function_path*> (_3, _2, _1);
  _4 = D.258051;
  D.258049 = std::__niter_wrap<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path*> (__result, _4);

  <bb 3> :
<L0>:
  return D.258049;

}



;; Function std::__niter_base<function_path*, std::vector<function_path> > (_ZSt12__niter_baseIP13function_pathSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10228, decl_uid=238022, cgraph_uid=6860, symbol_order=7657)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__niter_base<function_path*, std::vector<function_path> > (struct __normal_iterator __it)
{
  struct function_path * D.258052;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (&__it);
  D.258052 = *_1;

  <bb 3> :
<L0>:
  return D.258052;

}



;; Function __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=8808, decl_uid=203233, cgraph_uid=5440, symbol_order=6233)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * const & __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (const struct __normal_iterator * const this)
{
  struct function_path * const & D.258054;

  <bb 2> :
  D.258054 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.258054;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10230, decl_uid=238029, cgraph_uid=6862, symbol_order=7659)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path*> (struct __normal_iterator __from, struct function_path * __res)
{
  struct __normal_iterator D.258056;

  <bb 2> :
  _1 = std::__niter_base<function_path*, std::vector<function_path> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 24;
  D.258056 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.258056;

}



;; Function __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10698, decl_uid=203224, cgraph_uid=7330, symbol_order=8127)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct function_path * const D.246069;
  struct __normal_iterator D.246070;
  struct __normal_iterator D.258058;

  <bb 2> :
  _1 = this->_M_current;
  __n.1941_2 = (long unsigned int) __n;
  _3 = __n.1941_2 * 24;
  _4 = _1 + _3;
  D.246069 = _4;
  __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::__normal_iterator (&D.246070, &D.246069);
  D.258058 = D.246070;
  D.246070 = {CLOBBER};
  D.246069 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.258058;

}



;; Function __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=8806, decl_uid=203246, cgraph_uid=5438, symbol_order=6231)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::__normal_iterator (struct __normal_iterator * const this, struct function_path * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=8802, decl_uid=216172, cgraph_uid=5434, symbol_order=6227)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >, function_path> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.229498)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=9634, decl_uid=229500, cgraph_uid=6266, symbol_order=7059)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10231, decl_uid=238053, cgraph_uid=6863, symbol_order=7660)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> > > (struct __normal_iterator D.242819, struct __normal_iterator D.242820)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<function_path*, function_path*> (_ZSt4copyIP13function_pathS1_ET0_T_S3_S2_, funcdef_no=8803, decl_uid=216180, cgraph_uid=5435, symbol_order=6228)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::copy<function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.258064;
  struct function_path * D.258062;

  <bb 2> :
  _1 = std::__miter_base<function_path*> (__last);
  _2 = std::__miter_base<function_path*> (__first);
  D.258064 = std::__copy_move_a<false, function_path*, function_path*> (_2, _1, __result);
  D.258062 = D.258064;

  <bb 3> :
<L0>:
  return D.258062;

}



;; Function std::__miter_base<function_path*> (_ZSt12__miter_baseIP13function_pathET_S2_, funcdef_no=9635, decl_uid=229516, cgraph_uid=6267, symbol_order=7060)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__miter_base<function_path*> (struct function_path * __it)
{
  struct function_path * D.258065;

  <bb 2> :
  D.258065 = __it;

  <bb 3> :
<L0>:
  return D.258065;

}



;; Function std::__copy_move_a<false, function_path*, function_path*> (_ZSt13__copy_move_aILb0EP13function_pathS1_ET1_T0_S3_S2_, funcdef_no=9636, decl_uid=229518, cgraph_uid=6268, symbol_order=7061)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a<false, function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.258069;
  struct function_path * D.258067;

  <bb 2> :
  __result.1942_1 = __result;
  _2 = std::__niter_base<function_path*> (__result.1942_1);
  _3 = std::__niter_base<function_path*> (__last);
  _4 = std::__niter_base<function_path*> (__first);
  D.258069 = std::__copy_move_a1<false, function_path*, function_path*> (_4, _3, _2);
  _5 = D.258069;
  D.258067 = std::__niter_wrap<function_path*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.258067;

}



;; Function std::__copy_move_a1<false, function_path*, function_path*> (_ZSt14__copy_move_a1ILb0EP13function_pathS1_ET1_T0_S3_S2_, funcdef_no=10233, decl_uid=238064, cgraph_uid=6865, symbol_order=7662)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a1<false, function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.258072;
  struct function_path * D.258070;

  <bb 2> :
  D.258072 = std::__copy_move_a2<false, function_path*, function_path*> (__first, __last, __result);
  D.258070 = D.258072;

  <bb 3> :
<L0>:
  return D.258070;

}



;; Function std::__copy_move_a2<false, function_path*, function_path*> (_ZSt14__copy_move_a2ILb0EP13function_pathS1_ET1_T0_S3_S2_, funcdef_no=10699, decl_uid=242828, cgraph_uid=7331, symbol_order=8128)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__copy_move_a2<false, function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.258073;

  <bb 2> :
  D.258073 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<function_path> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.258073;

}



;; Function std::__uninitialized_copy_a<function_path*, function_path*, function_path> (_ZSt22__uninitialized_copy_aIP13function_pathS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=8804, decl_uid=216184, cgraph_uid=5436, symbol_order=6229)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__uninitialized_copy_a<function_path*, function_path*, function_path> (struct function_path * __first, struct function_path * __last, struct function_path * __result, struct allocator & D.229525)
{
  struct function_path * D.258077;
  struct function_path * D.258075;

  <bb 2> :
  D.258077 = std::uninitialized_copy<function_path*, function_path*> (__first, __last, __result);
  D.258075 = D.258077;

  <bb 3> :
<L0>:
  return D.258075;

}



;; Function std::uninitialized_copy<function_path*, function_path*> (_ZSt18uninitialized_copyIP13function_pathS1_ET0_T_S3_S2_, funcdef_no=9637, decl_uid=229527, cgraph_uid=6269, symbol_order=7062)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::uninitialized_copy<function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.258080;
  const bool __assignable;
  struct function_path * D.258078;

  <bb 2> :
  __assignable = 1;
  D.258080 = std::__uninitialized_copy<true>::__uninit_copy<function_path*, function_path*> (__first, __last, __result);
  D.258078 = D.258080;

  <bb 3> :
<L0>:
  return D.258078;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<function_path*, function_path*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIP13function_pathS3_EET0_T_S5_S4_, funcdef_no=10235, decl_uid=238102, cgraph_uid=6867, symbol_order=7664)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__uninitialized_copy<true>::__uninit_copy<function_path*, function_path*> (struct function_path * __first, struct function_path * __last, struct function_path * __result)
{
  struct function_path * D.258083;
  struct function_path * D.258081;

  <bb 2> :
  D.258083 = std::copy<function_path*, function_path*> (__first, __last, __result);
  D.258081 = D.258083;

  <bb 3> :
<L0>:
  return D.258081;

}



;; Function cgraph_node::ultimate_alias_target (_ZN11cgraph_node21ultimate_alias_targetEP12availabilityP11symtab_node, funcdef_no=2586, decl_uid=97088, cgraph_uid=1723, symbol_order=1883)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct cgraph_node * cgraph_node::ultimate_alias_target (struct cgraph_node * const this, availability * availability, struct symtab_node * ref)
{
  struct cgraph_node * D.258092;
  struct symtab_node * D.258091;
  struct cgraph_node * n;
  struct cgraph_node * D.258089;

  <bb 2> :
  _1 = &this->D.97512;
  D.258091 = symtab_node::ultimate_alias_target (_1, availability, ref);
  _2 = D.258091;
  D.258092 = dyn_cast<cgraph_node*, symtab_node> (_2);
  n = D.258092;
  if (n == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  if (availability != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  *availability = 1;

  <bb 5> :
  D.258089 = n;

  <bb 6> :
<L5>:
  return D.258089;

}



;; Function symtab_node::ultimate_alias_target (_ZN11symtab_node21ultimate_alias_targetEP12availabilityPS_, funcdef_no=2585, decl_uid=96460, cgraph_uid=1722, symbol_order=1882)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
struct symtab_node * symtab_node::ultimate_alias_target (struct symtab_node * const this, availability * availability, struct symtab_node * ref)
{
  struct symtab_node * D.258101;
  availability D.258100;
  struct symtab_node * D.258098;

  <bb 2> :
  _1 = BIT_FIELD_REF <*this, 8, 16>;
  _2 = _1 & 2;
  if (_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (availability != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.258100 = symtab_node::get_availability (this, ref);
  _3 = D.258100;
  *availability = _3;

  <bb 5> :
  D.258098 = this;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  D.258101 = symtab_node::ultimate_alias_target_1 (this, availability, ref);
  D.258098 = D.258101;

  <bb 7> :
<L5>:
  return D.258098;

}



;; Function symtab_node::get_availability (_ZN11symtab_node16get_availabilityEPS_, funcdef_no=2597, decl_uid=96516, cgraph_uid=1734, symbol_order=1894)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
availability symtab_node::get_availability (struct symtab_node * const this, struct symtab_node * ref)
{
  availability D.258110;
  struct varpool_node * D.258109;
  availability D.258108;
  struct cgraph_node * D.258107;
  availability D.258105;
  bool retval.1943;

  <bb 2> :
  retval.1943 = is_a<cgraph_node*, symtab_node> (this);
  if (retval.1943 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.258107 = dyn_cast<cgraph_node*, symtab_node> (this);
  _1 = D.258107;
  D.258108 = cgraph_node::get_availability (_1, ref);
  D.258105 = D.258108;
  goto <bb 5>; [INV]

  <bb 4> :
  D.258109 = dyn_cast<varpool_node*, symtab_node> (this);
  _2 = D.258109;
  D.258110 = varpool_node::get_availability (_2, ref);
  D.258105 = D.258110;

  <bb 5> :
<L2>:
  return D.258105;

}



;; Function dyn_cast<varpool_node*, symtab_node> (_Z8dyn_castIP12varpool_node11symtab_nodeET_PT0_, funcdef_no=7104, decl_uid=99587, cgraph_uid=3736, symbol_order=4522)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct varpool_node * dyn_cast<varpool_node*, symtab_node> (struct symtab_node * p)
{
  struct varpool_node * D.258114;
  bool retval.1944;

  <bb 2> :
  retval.1944 = is_a<varpool_node*, symtab_node> (p);
  if (retval.1944 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.258114 = reinterpret_is_a_helper<varpool_node*>::cast<symtab_node> (p);
  goto <bb 5>; [INV]

  <bb 4> :
  D.258114 = 0B;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
<L2>:
  return D.258114;

}



;; Function is_a<varpool_node*, symtab_node> (_Z4is_aIP12varpool_node11symtab_nodeEbPT0_, funcdef_no=7107, decl_uid=99946, cgraph_uid=3739, symbol_order=4525)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool is_a<varpool_node*, symtab_node> (struct symtab_node * p)
{
  bool D.258116;

  <bb 2> :
  D.258116 = is_a_helper<varpool_node*>::test<symtab_node> (p);

  <bb 3> :
<L0>:
  return D.258116;

}



;; Function is_a_helper<varpool_node*>::test<symtab_node> (_ZN11is_a_helperIP12varpool_nodeE4testI11symtab_nodeEEbPT_, funcdef_no=2533, decl_uid=98472, cgraph_uid=1670, symbol_order=1830)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool is_a_helper<varpool_node*>::test<symtab_node> (struct symtab_node * p)
{
  bool iftmp.1945;
  bool D.258118;

  <bb 2> :
  if (p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _1 = p->type;
  if (_1 == 2)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1945 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1945 = 0;

  <bb 6> :
  D.258118 = iftmp.1945;

  <bb 7> :
<L4>:
  return D.258118;

}



;; Function reinterpret_is_a_helper<varpool_node*>::cast<symtab_node> (_ZN23reinterpret_is_a_helperIP12varpool_nodeE4castI11symtab_nodeEES1_PT_, funcdef_no=8130, decl_uid=207445, cgraph_uid=4762, symbol_order=5551)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct varpool_node * reinterpret_is_a_helper<varpool_node*>::cast<symtab_node> (struct symtab_node * p)
{
  struct varpool_node * D.258125;

  <bb 2> :
  D.258125 = p;

  <bb 3> :
<L0>:
  return D.258125;

}



;; Function std::vector<function_path>::begin (_ZNSt6vectorI13function_pathSaIS0_EE5beginEv, funcdef_no=7834, decl_uid=175217, cgraph_uid=4466, symbol_order=5255)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<function_path>::begin (struct vector * const this)
{
  struct iterator D.216195;
  struct iterator D.258127;

  <bb 2> :
  _1 = &this->D.175608._M_impl.D.174953._M_start;
  __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::__normal_iterator (&D.216195, _1);
  D.258127 = D.216195;
  D.216195 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.258127;

}



;; Function __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator-> (_ZNK9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS1_SaIS1_EEEptEv, funcdef_no=7838, decl_uid=203206, cgraph_uid=4470, symbol_order=5259)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator-> (const struct __normal_iterator * const this)
{
  struct function_path * D.258130;

  <bb 2> :
  D.258130 = this->_M_current;

  <bb 3> :
<L0>:
  return D.258130;

}



;; Function __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIP13function_pathSt6vectorIS1_SaIS1_EEEppEv, funcdef_no=7837, decl_uid=203208, cgraph_uid=4469, symbol_order=5258)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.258132;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 24;
  this->_M_current = _2;
  D.258132 = this;

  <bb 3> :
<L0>:
  return D.258132;

}



;; Function std::vector<function_path>::end (_ZNSt6vectorI13function_pathSaIS0_EE3endEv, funcdef_no=7835, decl_uid=175221, cgraph_uid=4467, symbol_order=5256)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<function_path>::end (struct vector * const this)
{
  struct iterator D.216197;
  struct iterator D.258134;

  <bb 2> :
  _1 = &this->D.175608._M_impl.D.174953._M_finish;
  __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::__normal_iterator (&D.216197, _1);
  D.258134 = D.216197;
  D.216197 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.258134;

}



;; Function __gnu_cxx::operator!=<function_path*, std::vector<function_path> > (_ZN9__gnu_cxxneIP13function_pathSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_, funcdef_no=7836, decl_uid=203306, cgraph_uid=4468, symbol_order=5257)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<function_path*, std::vector<function_path> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.258137;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (__rhs);
  _4 = *_3;
  D.258137 = _2 != _4;

  <bb 3> :
<L0>:
  return D.258137;

}



;; Function std::vector<function_path>::push_back (_ZNSt6vectorI13function_pathSaIS0_EE9push_backERKS0_, funcdef_no=7839, decl_uid=175288, cgraph_uid=4472, symbol_order=5261)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<function_path>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.258142;

  <bb 2> :
  _1 = this->D.175608._M_impl.D.174953._M_finish;
  _2 = this->D.175608._M_impl.D.174953._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.175608._M_impl.D.174953._M_finish;
  _4 = &this->D.175608._M_impl;
  std::allocator_traits<std::allocator<function_path> >::construct<function_path, const function_path&> (_4, _3, __x);
  _5 = this->D.175608._M_impl.D.174953._M_finish;
  _6 = _5 + 24;
  this->D.175608._M_impl.D.174953._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.258142 = std::vector<function_path>::end (this);
  std::vector<function_path>::_M_realloc_insert<const function_path&> (this, D.258142, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<function_path> >::construct<function_path, const function_path&> (_ZNSt16allocator_traitsISaI13function_pathEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8809, decl_uid=216205, cgraph_uid=5441, symbol_order=6234)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<function_path> >::construct<function_path, const function_path&> (struct allocator_type & __a, struct function_path * __p, const struct function_path & __args#0)
{
  <bb 2> :
  _1 = std::forward<const function_path&> (__args#0);
  __gnu_cxx::new_allocator<function_path>::construct<function_path, const function_path&> (__a, __p, _1);
  return;

}



;; Function std::forward<const function_path&> (_ZSt7forwardIRK13function_pathEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9638, decl_uid=229547, cgraph_uid=6270, symbol_order=7063)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct function_path & std::forward<const function_path&> (const struct type & __t)
{
  const struct function_path & D.258143;

  <bb 2> :
  D.258143 = __t;

  <bb 3> :
<L0>:
  return D.258143;

}



;; Function __gnu_cxx::new_allocator<function_path>::construct<function_path, const function_path&> (_ZN9__gnu_cxx13new_allocatorI13function_pathE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9639, decl_uid=229549, cgraph_uid=6271, symbol_order=7064)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<function_path>::construct<function_path, const function_path&> (struct new_allocator * const this, struct function_path * __p, const struct function_path & __args#0)
{
  void * D.238114;
  void * D.238113;
  const struct function_path * D.238115;

  <bb 2> :
  D.238115 = std::forward<const function_path&> (__args#0);
  D.238113 = __p;
  D.238114 = operator new (24, D.238113);
  MEM[(struct function_path *)D.238114] = *D.238115;
  return;

}



;; Function std::vector<function_path>::_M_realloc_insert<const function_path&> (_ZNSt6vectorI13function_pathSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8810, decl_uid=216374, cgraph_uid=5445, symbol_order=6238)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<function_path>::_M_realloc_insert<const function_path&> (struct vector * const this, struct iterator __position, const struct function_path & __args#0)
{
  struct function_path * D.258149;
  const size_type D.258148;
  struct function_path * __new_finish;
  struct function_path * __new_start;
  const size_type __elems_before;
  struct function_path * __old_finish;
  struct function_path * __old_start;
  const size_type __len;
  struct iterator D.229560;

  <bb 2> :
  D.258148 = std::vector<function_path>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.258148;
  __old_start = this->D.175608._M_impl.D.174953._M_start;
  __old_finish = this->D.175608._M_impl.D.174953._M_finish;
  D.229560 = std::vector<function_path>::begin (this);
  _1 = __gnu_cxx::operator-<function_path*, std::vector<function_path> > (&__position, &D.229560);
  __elems_before = (const size_type) _1;
  D.229560 = {CLOBBER};
  _2 = &this->D.175608;
  D.258149 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_allocate (_2, __len);
  __new_start = D.258149;
  __new_finish = __new_start;
  _3 = std::forward<const function_path&> (__args#0);
  _4 = __elems_before * 24;
  _5 = __new_start + _4;
  _6 = &this->D.175608._M_impl;
  std::allocator_traits<std::allocator<function_path> >::construct<function_path, const function_path&> (_6, _5, _3);
  __new_finish = 0B;
  _7 = &this->D.175608;
  _8 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<function_path>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 24;
  _11 = &this->D.175608;
  _12 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<function_path>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.175608;
  _23 = this->D.175608._M_impl.D.174953._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 24;
  _26 = (long unsigned int) _25;
  std::_Vector_base<function_path, std::allocator<function_path> >::_M_deallocate (_22, __old_start, _26);
  this->D.175608._M_impl.D.174953._M_start = __new_start;
  this->D.175608._M_impl.D.174953._M_finish = __new_finish;
  _27 = __len * 24;
  _28 = __new_start + _27;
  this->D.175608._M_impl.D.174953._M_end_of_storage = _28;
  return;

}



;; Function std::vector<function_path>::_M_check_len (_ZNKSt6vectorI13function_pathSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9640, decl_uid=175457, cgraph_uid=6272, symbol_order=7065)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<function_path>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.1948;
  size_type D.258153;
  const long unsigned int D.238120;
  bool retval.1946;

  <bb 2> :
  _1 = std::vector<function_path>::max_size (this);
  _2 = std::vector<function_path>::size (this);
  _3 = _1 - _2;
  __n.1947_4 = __n;
  retval.1946 = _3 < __n.1947_4;
  if (retval.1946 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<function_path>::size (this);
  _6 = std::vector<function_path>::size (this);
  D.238120 = _6;
  _7 = std::max<long unsigned int> (&D.238120, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.238120 = {CLOBBER};
  _9 = std::vector<function_path>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<function_path>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1948 = std::vector<function_path>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1948 = __len;

  <bb 8> :
  D.258153 = iftmp.1948;

  <bb 9> :
<L6>:
  return D.258153;

}



;; Function std::vector<function_path>::max_size (_ZNKSt6vectorI13function_pathSaIS0_EE8max_sizeEv, funcdef_no=10236, decl_uid=175243, cgraph_uid=6868, symbol_order=7665)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<function_path>::max_size (const struct vector * const this)
{
  size_type D.258160;

  <bb 2> :
  _1 = &this->D.175608;
  _2 = std::_Vector_base<function_path, std::allocator<function_path> >::_M_get_Tp_allocator (_1);
  D.258160 = std::vector<function_path>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.258160;

}



;; Function std::vector<function_path>::_S_max_size (_ZNSt6vectorI13function_pathSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10700, decl_uid=175464, cgraph_uid=7332, symbol_order=8129)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<function_path>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.258162;

  <bb 2> :
  __diffmax = 384307168202282325;
  _1 = std::allocator_traits<std::allocator<function_path> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.258162 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.258162;

}



;; Function std::allocator_traits<std::allocator<function_path> >::max_size (_ZNSt16allocator_traitsISaI13function_pathEE8max_sizeERKS1_, funcdef_no=10899, decl_uid=174778, cgraph_uid=7531, symbol_order=8330)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<function_path> >::max_size (const struct allocator_type & __a)
{
  size_type D.258165;

  <bb 2> :
  D.258165 = __gnu_cxx::new_allocator<function_path>::max_size (__a);

  <bb 3> :
<L0>:
  return D.258165;

}



;; Function __gnu_cxx::new_allocator<function_path>::max_size (_ZNK9__gnu_cxx13new_allocatorI13function_pathE8max_sizeEv, funcdef_no=10997, decl_uid=174620, cgraph_uid=7629, symbol_order=8428)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<function_path>::max_size (const struct new_allocator * const this)
{
  size_type D.258167;

  <bb 2> :
  D.258167 = __gnu_cxx::new_allocator<function_path>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.258167;

}



;; Function __gnu_cxx::operator-<function_path*, std::vector<function_path> > (_ZN9__gnu_cxxmiIP13function_pathSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9641, decl_uid=229561, cgraph_uid=6273, symbol_order=7066)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<function_path*, std::vector<function_path> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.258169;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<function_path*, std::vector<function_path> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.258169 = _5 /[ex] 24;

  <bb 3> :
<L0>:
  return D.258169;

}



;; Function std::vector<function_path>::_S_relocate (_ZNSt6vectorI13function_pathSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9642, decl_uid=175115, cgraph_uid=6274, symbol_order=7067)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::vector<function_path>::_S_relocate (struct function_path * __first, struct function_path * __last, struct function_path * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.258172;
  struct function_path * D.258171;

  <bb 2> :
  D.258171 = std::vector<function_path>::_S_do_relocate (__first, __last, __result, __alloc, D.258172);

  <bb 3> :
<L0>:
  return D.258171;

}



;; Function std::vector<function_path>::_S_do_relocate (_ZNSt6vectorI13function_pathSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10237, decl_uid=175103, cgraph_uid=6869, symbol_order=7666)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::vector<function_path>::_S_do_relocate (struct function_path * __first, struct function_path * __last, struct function_path * __result, struct _Tp_alloc_type & __alloc, struct true_type D.242844)
{
  struct function_path * D.258174;

  <bb 2> :
  D.258174 = std::__relocate_a<function_path*, function_path*, std::allocator<function_path> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.258174;

}



;; Function std::__relocate_a<function_path*, function_path*, std::allocator<function_path> > (_ZSt12__relocate_aIP13function_pathS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10701, decl_uid=229725, cgraph_uid=7333, symbol_order=8130)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path * std::__relocate_a<function_path*, function_path*, std::allocator<function_path> > (struct function_path * __first, struct function_path * __last, struct function_path * __result, struct allocator & __alloc)
{
  struct function_path * D.258176;

  <bb 2> :
  _1 = std::__niter_base<function_path*> (__result);
  _2 = std::__niter_base<function_path*> (__last);
  _3 = std::__niter_base<function_path*> (__first);
  D.258176 = std::__relocate_a_1<function_path, function_path> (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.258176;

}



;; Function std::__relocate_a_1<function_path, function_path> (_ZSt14__relocate_a_1I13function_pathS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E, funcdef_no=10900, decl_uid=229899, cgraph_uid=7532, symbol_order=8331)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct function_path * std::__relocate_a_1<function_path, function_path> (struct function_path * __first, struct function_path * __last, struct function_path * __result, struct allocator & D.247079)
{
  ptrdiff_t __count;
  struct function_path * D.258181;

  <bb 2> :
  _1 = __last - __first;
  __count = _1 /[ex] 24;
  if (__count > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __count.1949_2 = (long unsigned int) __count;
  _3 = __count.1949_2 * 24;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  __count.1950_4 = (long unsigned int) __count;
  _5 = __count.1950_4 * 24;
  D.258181 = __result + _5;

  <bb 5> :
<L3>:
  return D.258181;

}



;; Function symbolicinfo::symbolicinfo (_ZN12symbolicinfoC2Ev, funcdef_no=6838, decl_uid=203358, cgraph_uid=3469, symbol_order=4248)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void symbolicinfo::symbolicinfo (struct symbolicinfo * const this)
{
  <bb 2> :
  _1 = &this->switchs;
  std::vector<basic_block_def*>::vector (_1);
  this->prevlogic = 1;
  _2 = &this->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::vector (_2);
  _3 = &this->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::vector (_3);
  _4 = &this->symbolicExecutionPathConstraintarrayFalse;
  std::vector<symbolicinfoPatharray>::vector (_4);
  return;

}



;; Function std::vector<symbolicinfoPatharray>::vector (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EEC2Ev, funcdef_no=6836, decl_uid=171339, cgraph_uid=3466, symbol_order=4245)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<symbolicinfoPatharray>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.171347;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EEC2Ev, funcdef_no=6834, decl_uid=170797, cgraph_uid=3463, symbol_order=4242)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE12_Vector_implC2Ev, funcdef_no=7842, decl_uid=170689, cgraph_uid=4474, symbol_order=5263)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<symbolicinfoPatharray>::allocator (this);
  _1 = &this->D.170692;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<symbolicinfoPatharray>::allocator (_ZNSaI21symbolicinfoPatharrayEC2Ev, funcdef_no=8815, decl_uid=170467, cgraph_uid=5447, symbol_order=6240)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<symbolicinfoPatharray>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (_ZN9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayEC2Ev, funcdef_no=9645, decl_uid=170396, cgraph_uid=6277, symbol_order=7070)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8818, decl_uid=170639, cgraph_uid=5450, symbol_order=6243)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function gimple_cond_rhs (_ZL15gimple_cond_rhsPK6gimple, funcdef_no=2181, decl_uid=93077, cgraph_uid=1318, symbol_order=1478)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * gimple_cond_rhs (const struct gimple * gs)
{
  const struct gcond * D.258185;
  const struct gcond * gc;
  union tree_node * D.258183;

  <bb 2> :
  D.258185 = GIMPLE_CHECK2<const gcond*> (gs);
  gc = D.258185;
  D.258183 = gimple_cond_rhs (gc);

  <bb 3> :
<L0>:
  return D.258183;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::put (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7853, decl_uid=196589, cgraph_uid=4489, symbol_order=5278)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<basic_block_def*, symbolicinfo>::put (struct hash_map * const this, struct basic_block_def * const & k, const struct symbolicinfo & v)
{
  bool D.258193;
  struct hash_entry * D.258192;
  unsigned int D.258191;
  bool ins;
  struct hash_entry * e;
  bool D.258189;
  void * D.216416;
  void * D.216415;

  <bb 2> :
  _1 = &this->m_table;
  D.258191 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::hash (k);
  _2 = D.258191;
  D.258192 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.258192;
  D.258193 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::is_empty (e);
  ins = D.258193;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.216415 = &e->m_value;
  D.216416 = operator new (160, D.216415);
  symbolicinfo::symbolicinfo (D.216416, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  symbolicinfo::operator= (_4, v);

  <bb 5> :
  D.258189 = ~ins;

  <bb 6> :
<L3>:
  return D.258189;

  <bb 7> :
<L4>:
  operator delete (D.216416, D.216415);
  resx 1

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8826, decl_uid=196747, cgraph_uid=5458, symbol_order=6251)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, struct basic_block_def * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.258244;
  bool D.258243;
  bool D.258242;
  bool D.258241;
  bool D.258240;
  bool D.258239;
  struct value_type * D.258238;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.1956;
  bool retval.1955;
  bool retval.1954;
  bool retval.1953;
  bool retval.1952;
  bool retval.1951;
  struct value_type * D.258200;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 168;
  entry = _11 + _13;
  size = this->m_size;
  D.258239 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1951 = D.258239;
  if (retval.1951 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.258240 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1952 = D.258240;
  if (retval.1952 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 168;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.258241 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (entry, comparable);
  retval.1953 = D.258241;
  if (retval.1953 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 168;
  D.258200 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 168;
  entry = _24 + _26;
  D.258242 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1954 = D.258242;
  if (retval.1954 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.258243 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1955 = D.258243;
  if (retval.1955 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 168;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.258244 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::equal (entry, comparable);
  retval.1956 = D.258244;
  if (retval.1956 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 168;
  D.258200 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.258200 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.258200 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 168;
  D.258200 = _37 + _39;

  <bb 27> :
<L37>:
  return D.258200;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9650, decl_uid=196828, cgraph_uid=6300, symbol_order=7093)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.258275;
  unsigned int D.258274;
  bool D.258273;
  bool D.258272;
  struct mem_alloc_description & D.258271;
  struct value_type * D.258270;
  unsigned int D.258269;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.238477;
  void * D.238476;
  struct hash_entry & D.238520;
  bool iftmp.1960;
  bool retval.1959;
  bool iftmp.1958;
  bool retval.1957;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 168;
  olimit = oentries + _1;
  elts = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1958 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1958 = 0;

  <bb 6> :
  retval.1957 = iftmp.1958;
  if (retval.1957 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.258269 = hash_table_higher_prime_index (_5);
  nindex = D.258269;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.258270 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.258270;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.258272 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.258272;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.258273 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.258273;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.1960 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.1960 = 0;

  <bb 15> :
  retval.1959 = iftmp.1960;
  if (retval.1959 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.258274 = hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash (x);
  _16 = D.258274;
  D.258275 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.258275;
  D.238520 = std::move<hash_map<basic_block_def*, symbolicinfo>::hash_entry&> (x);
  D.238476 = q;
  D.238477 = operator new (168, D.238476);
  hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash_entry (D.238477, D.238520);

  <bb 17> :
  p = p + 168;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10241, decl_uid=196723, cgraph_uid=6873, symbol_order=7670)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.258276;

  <bb 2> :
  D.258276 = this->m_size;

  <bb 3> :
<L0>:
  return D.258276;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10242, decl_uid=196725, cgraph_uid=6874, symbol_order=7671)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.258278;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.258278 = _1 - _2;

  <bb 3> :
<L0>:
  return D.258278;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10243, decl_uid=196825, cgraph_uid=6875, symbol_order=7672)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.1961;
  bool D.258280;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1961 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1961 = 0;

  <bb 6> :
  D.258280 = iftmp.1961;

  <bb 7> :
<L4>:
  return D.258280;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9599, decl_uid=196815, cgraph_uid=6231, symbol_order=7024)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.258302;
  struct value_type * D.258301;
  struct mem_alloc_description & D.258300;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.258298;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.258301 = xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_alloc (n);
  nentries = D.258301;
  goto <bb 6>; [INV]

  <bb 5> :
  D.258302 = ggc_cleared_vec_alloc<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (n);
  nentries = D.258302;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.258298 = nentries;

  <bb 9> :
<L14>:
  return D.258298;

}



;; Function xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10214, decl_uid=218308, cgraph_uid=6846, symbol_order=7643)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.258305;
  struct hash_entry * D.258303;

  <bb 2> :
  D.258305 = xcalloc (count, 168);
  D.258303 = D.258305;

  <bb 3> :
<L0>:
  return D.258303;

}



;; Function ggc_cleared_vec_alloc<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10215, decl_uid=237724, cgraph_uid=6847, symbol_order=7644)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (size_t c)
{
  struct hash_entry * D.258312;
  struct hash_entry * D.258311;
  struct hash_entry * D.258309;
  bool retval.1962;

  <bb 2> :
  retval.1962 = need_finalization_p<hash_map<basic_block_def*, symbolicinfo>::hash_entry> ();
  if (retval.1962 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 168;
  D.258311 = ggc_internal_cleared_alloc (_1, finalize, 168, c);
  D.258309 = D.258311;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 168;
  D.258312 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.258309 = D.258312;

  <bb 5> :
<L2>:
  return D.258309;

}



;; Function finalize<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_Z8finalizeIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10682, decl_uid=242762, cgraph_uid=7317, symbol_order=8114)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<basic_block_def*, symbolicinfo>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::~hash_entry (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10684, decl_uid=246000, cgraph_uid=7315, symbol_order=8112)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  symbolicinfo::~symbolicinfo (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10681, decl_uid=242761, cgraph_uid=7313, symbol_order=8110)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<basic_block_def*, symbolicinfo>::hash_entry> ()
{
  bool D.258313;

  <bb 2> :
  D.258313 = 1;

  <bb 3> :
<L0>:
  return D.258313;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10245, decl_uid=196648, cgraph_uid=6877, symbol_order=7674)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.258317;
  hashval_t D.258315;

  <bb 2> :
  _1 = &e->m_key;
  D.258317 = simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::hash (_1);
  D.258315 = D.258317;

  <bb 3> :
<L0>:
  return D.258315;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10244, decl_uid=196818, cgraph_uid=6876, symbol_order=7673)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.258330;
  bool D.258329;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.1964;
  struct value_type * D.258321;
  bool retval.1963;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 168;
  slot = _2 + _4;
  D.258329 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1963 = D.258329;
  if (retval.1963 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.258321 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 168;
  slot = _8 + _10;
  D.258330 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1964 = D.258330;
  if (retval.1964 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.258321 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.258321;

}



;; Function std::move<hash_map<basic_block_def*, symbolicinfo>::hash_entry&> (_ZSt4moveIRN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10246, decl_uid=238474, cgraph_uid=6878, symbol_order=7675)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<basic_block_def*, symbolicinfo>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.258331;

  <bb 2> :
  D.258331 = __t;

  <bb 3> :
<L0>:
  return D.258331;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash_entry (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9667, decl_uid=238499, cgraph_uid=6298, symbol_order=7091)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.238501)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.238501->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.238501->m_value;
  symbolicinfo::symbolicinfo (_2, _3);
  return;

}



;; Function symbolicinfo::symbolicinfo (_ZN12symbolicinfoC2EOS_, funcdef_no=9665, decl_uid=203375, cgraph_uid=6295, symbol_order=7088)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void symbolicinfo::symbolicinfo (struct symbolicinfo * const this, struct symbolicinfo & D.203377)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.203377->cond_stmt;
  this->cond_stmt = _1;
  _2 = D.203377->switch_stmt;
  this->switch_stmt = _2;
  _3 = D.203377->cond_rhs;
  this->cond_rhs = _3;
  _4 = D.203377->cond_lhs;
  this->cond_lhs = _4;
  _5 = D.203377->node;
  this->node = _5;
  _6 = &this->switchs;
  _7 = &D.203377->switchs;
  std::vector<basic_block_def*>::vector (_6, _7);
  _8 = D.203377->cond_truebranch;
  this->cond_truebranch = _8;
  _9 = D.203377->cond_falsebranch;
  this->cond_falsebranch = _9;
  _10 = D.203377->prevlogic;
  this->prevlogic = _10;
  _11 = &this->symbolicExecutionPathConstraint;
  _12 = &D.203377->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::vector (_11, _12);
  _13 = &this->symbolicExecutionPathConstraintarrayTrue;
  _14 = &D.203377->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::vector (_13, _14);
  _15 = &this->symbolicExecutionPathConstraintarrayFalse;
  _16 = &D.203377->symbolicExecutionPathConstraintarrayFalse;
  std::vector<symbolicinfoPatharray>::vector (_15, _16);
  return;

}



;; Function std::vector<basic_block_def*>::vector (_ZNSt6vectorIP15basic_block_defSaIS1_EEC2EOS3_, funcdef_no=9657, decl_uid=170259, cgraph_uid=6286, symbol_order=7079)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<basic_block_def*>::vector (struct vector * const this, struct vector & D.170261)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.170302;
  _2 = &D.170261->D.170302;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EEC2EOS3_, funcdef_no=9655, decl_uid=169727, cgraph_uid=6283, symbol_order=7076)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.169729)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.169729->_M_impl;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE12_Vector_implC2EOS4_, funcdef_no=10248, decl_uid=169633, cgraph_uid=6880, symbol_order=7677)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl&> (__x);
  std::allocator<basic_block_def*>::allocator (this, _1);
  _2 = &this->D.169647;
  _3 = std::move<std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl&> (__x);
  _4 = &_3->D.169647;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::allocator<basic_block_def*>::allocator (_ZNSaIP15basic_block_defEC2ERKS1_, funcdef_no=10704, decl_uid=169417, cgraph_uid=7336, symbol_order=8133)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<basic_block_def*>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (_ZN9__gnu_cxx13new_allocatorIP15basic_block_defEC2ERKS3_, funcdef_no=10902, decl_uid=169346, cgraph_uid=7534, symbol_order=8333)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<basic_block_def*>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.169348)
{
  <bb 2> :
  return;

}



;; Function std::move<std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseIP15basic_block_defSaIS2_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS8_, funcdef_no=10702, decl_uid=242880, cgraph_uid=7334, symbol_order=8131)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.258333;

  <bb 2> :
  D.258333 = __t;

  <bb 3> :
<L0>:
  return D.258333;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE17_Vector_impl_dataC2EOS4_, funcdef_no=10707, decl_uid=169589, cgraph_uid=7339, symbol_order=8136)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function std::vector<symbolicinfoPatharray>::vector (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EEC2EOS2_, funcdef_no=9663, decl_uid=171304, cgraph_uid=6292, symbol_order=7085)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<symbolicinfoPatharray>::vector (struct vector * const this, struct vector & D.171306)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.171347;
  _2 = &D.171306->D.171347;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EEC2EOS2_, funcdef_no=9661, decl_uid=170772, cgraph_uid=6289, symbol_order=7082)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.170774)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.170774->_M_impl;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10251, decl_uid=170678, cgraph_uid=6883, symbol_order=7680)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl&> (__x);
  std::allocator<symbolicinfoPatharray>::allocator (this, _1);
  _2 = &this->D.170692;
  _3 = std::move<std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl&> (__x);
  _4 = &_3->D.170692;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::allocator<symbolicinfoPatharray>::allocator (_ZNSaI21symbolicinfoPatharrayEC2ERKS0_, funcdef_no=10711, decl_uid=170462, cgraph_uid=7343, symbol_order=8140)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<symbolicinfoPatharray>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (_ZN9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayEC2ERKS2_, funcdef_no=10905, decl_uid=170391, cgraph_uid=7537, symbol_order=8336)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<symbolicinfoPatharray>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.170393)
{
  <bb 2> :
  return;

}



;; Function std::move<std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI21symbolicinfoPatharraySaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10709, decl_uid=242900, cgraph_uid=7341, symbol_order=8138)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.258335;

  <bb 2> :
  D.258335 = __t;

  <bb 3> :
<L0>:
  return D.258335;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10714, decl_uid=170634, cgraph_uid=7346, symbol_order=8143)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8947, decl_uid=218310, cgraph_uid=5579, symbol_order=6372)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9669, decl_uid=196836, cgraph_uid=6301, symbol_order=7094)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<basic_block_def*, symbolicinfo>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::mark_empty (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10253, decl_uid=196660, cgraph_uid=6885, symbol_order=7682)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::mark_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::mark_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10716, decl_uid=242915, cgraph_uid=7348, symbol_order=8145)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::mark_empty<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<basic_block_def>::mark_empty (_1);
  return;

}



;; Function pointer_hash<basic_block_def>::mark_empty (_ZN12pointer_hashI15basic_block_defE10mark_emptyERPS0_, funcdef_no=10907, decl_uid=196514, cgraph_uid=7539, symbol_order=8338)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void pointer_hash<basic_block_def>::mark_empty (struct basic_block_def * & e)
{
  <bb 2> :
  *e = 0B;
  return;

}



;; Function symbolicinfo::symbolicinfo (_ZN12symbolicinfoC2ERKS_, funcdef_no=7855, decl_uid=203366, cgraph_uid=4486, symbol_order=5275)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 8 3 }
;; 3 succs { 7 4 }
;; 4 succs { 6 5 }
;; 5 succs { 1 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { }
void symbolicinfo::symbolicinfo (struct symbolicinfo * const this, const struct symbolicinfo & D.203368)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.203368->cond_stmt;
  this->cond_stmt = _1;
  _2 = D.203368->switch_stmt;
  this->switch_stmt = _2;
  _3 = D.203368->cond_rhs;
  this->cond_rhs = _3;
  _4 = D.203368->cond_lhs;
  this->cond_lhs = _4;
  _5 = D.203368->node;
  this->node = _5;
  _6 = &this->switchs;
  _7 = &D.203368->switchs;
  std::vector<basic_block_def*>::vector (_6, _7);
  _8 = D.203368->cond_truebranch;
  this->cond_truebranch = _8;
  _9 = D.203368->cond_falsebranch;
  this->cond_falsebranch = _9;
  _10 = D.203368->prevlogic;
  this->prevlogic = _10;
  _11 = &this->symbolicExecutionPathConstraint;
  _12 = &D.203368->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::vector (_11, _12);

  <bb 3> :
  _13 = &this->symbolicExecutionPathConstraintarrayTrue;
  _14 = &D.203368->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::vector (_13, _14);

  <bb 4> :
  _15 = &this->symbolicExecutionPathConstraintarrayFalse;
  _16 = &D.203368->symbolicExecutionPathConstraintarrayFalse;
  std::vector<symbolicinfoPatharray>::vector (_15, _16);

  <bb 5> :
  return;

  <bb 6> :
<L0>:
  _18 = &this->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::~vector (_18);
  resx 3

  <bb 7> :
<L1>:
  _19 = &this->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::~vector (_19);
  resx 2

  <bb 8> :
<L2>:
  _20 = &this->switchs;
  std::vector<basic_block_def*>::~vector (_20);
  resx 1

}



;; Function std::vector<basic_block_def*>::vector (_ZNSt6vectorIP15basic_block_defSaIS1_EEC2ERKS3_, funcdef_no=8829, decl_uid=170265, cgraph_uid=5461, symbol_order=6254)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<basic_block_def*>::vector (struct vector * const this, const struct vector & __x)
{
  struct basic_block_def * * D.258345;
  struct __normal_iterator D.258342;
  struct __normal_iterator D.258341;
  struct allocator D.230235;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.170302;
  _2 = &__x->D.170302;
  _3 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_2);
  D.230235 = __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<basic_block_def*>::size (__x);
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_1, _4, &D.230235);

  <bb 3> :
  std::allocator<basic_block_def*>::~allocator (&D.230235);
  D.230235 = {CLOBBER};
  _5 = &this->D.170302;
  _6 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_5);
  _7 = this->D.170302._M_impl.D.169647._M_start;
  D.258341 = std::vector<basic_block_def*>::end (__x);
  D.258342 = std::vector<basic_block_def*>::begin (__x);
  D.258345 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**, basic_block_def*> (D.258342, D.258341, _7, _6);

  <bb 4> :
  _8 = D.258345;
  this->D.170302._M_impl.D.169647._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<basic_block_def*>::~allocator (&D.230235);
  resx 2

  <bb 6> :
<L1>:
  D.230235 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.170302;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::~_Vector_base (_9);
  resx 5

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaIP15basic_block_defES2_E17_S_select_on_copyERKS3_, funcdef_no=9670, decl_uid=169509, cgraph_uid=6302, symbol_order=7095)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<basic_block_def*> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<basic_block_def*> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaIP15basic_block_defEE37select_on_container_copy_constructionERKS2_, funcdef_no=10254, decl_uid=169474, cgraph_uid=6886, symbol_order=7683)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<basic_block_def*> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<basic_block_def*>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EEC2EmRKS2_, funcdef_no=9673, decl_uid=169734, cgraph_uid=6305, symbol_order=7098)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE12_Vector_implC2ERKS2_, funcdef_no=10256, decl_uid=169639, cgraph_uid=6888, symbol_order=7685)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<basic_block_def*>::allocator (this, __a);
  _1 = &this->D.169647;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_create_storage (_ZNSt12_Vector_baseIP15basic_block_defSaIS1_EE17_M_create_storageEm, funcdef_no=10258, decl_uid=169658, cgraph_uid=6890, symbol_order=7687)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct basic_block_def * * D.258352;

  <bb 2> :
  D.258352 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_allocate (this, __n);
  _1 = D.258352;
  this->_M_impl.D.169647._M_start = _1;
  _2 = this->_M_impl.D.169647._M_start;
  this->_M_impl.D.169647._M_finish = _2;
  _3 = this->_M_impl.D.169647._M_start;
  _4 = __n * 8;
  _5 = _3 + _4;
  this->_M_impl.D.169647._M_end_of_storage = _5;
  return;

}



;; Function std::vector<basic_block_def*>::end (_ZNKSt6vectorIP15basic_block_defSaIS1_EE3endEv, funcdef_no=9676, decl_uid=169917, cgraph_uid=6308, symbol_order=7101)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<basic_block_def*>::end (const struct vector * const this)
{
  struct const_iterator D.238556;
  struct const_iterator D.258353;

  <bb 2> :
  _1 = &this->D.170302._M_impl.D.169647._M_finish;
  __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::__normal_iterator (&D.238556, _1);
  D.258353 = D.238556;
  D.238556 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.258353;

}



;; Function __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS2_SaIS2_EEEC2ERKS4_, funcdef_no=10260, decl_uid=230204, cgraph_uid=6892, symbol_order=7689)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::__normal_iterator (struct __normal_iterator * const this, struct basic_block_def * const * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<basic_block_def*>::begin (_ZNKSt6vectorIP15basic_block_defSaIS1_EE5beginEv, funcdef_no=9675, decl_uid=169913, cgraph_uid=6307, symbol_order=7100)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<basic_block_def*>::begin (const struct vector * const this)
{
  struct const_iterator D.238554;
  struct const_iterator D.258356;

  <bb 2> :
  _1 = &this->D.170302._M_impl.D.169647._M_start;
  __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::__normal_iterator (&D.238554, _1);
  D.258356 = D.238554;
  D.238554 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.258356;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**, basic_block_def*> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E, funcdef_no=9677, decl_uid=230224, cgraph_uid=6309, symbol_order=7102)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**, basic_block_def*> (struct __normal_iterator __first, struct __normal_iterator __last, struct basic_block_def * * __result, struct allocator & D.238560)
{
  struct basic_block_def * * D.258361;
  struct basic_block_def * * D.258359;

  <bb 2> :
  D.258361 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (__first, __last, __result);
  D.258359 = D.258361;

  <bb 3> :
<L0>:
  return D.258359;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_, funcdef_no=10262, decl_uid=238562, cgraph_uid=6895, symbol_order=7692)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::uninitialized_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (struct __normal_iterator __first, struct __normal_iterator __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258364;
  const bool __assignable;
  struct basic_block_def * * D.258362;

  <bb 2> :
  __assignable = 1;
  D.258364 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (__first, __last, __result);
  D.258362 = D.258364;

  <bb 3> :
<L0>:
  return D.258362;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_, funcdef_no=10717, decl_uid=243032, cgraph_uid=7349, symbol_order=8146)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (struct __normal_iterator __first, struct __normal_iterator __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258367;
  struct basic_block_def * * D.258365;

  <bb 2> :
  D.258367 = std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (__first, __last, __result);
  D.258365 = D.258367;

  <bb 3> :
<L0>:
  return D.258365;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_, funcdef_no=10908, decl_uid=246138, cgraph_uid=7540, symbol_order=8339)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (struct __normal_iterator __first, struct __normal_iterator __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258372;
  struct __normal_iterator D.258370;
  struct __normal_iterator D.258369;
  struct basic_block_def * * D.258368;

  <bb 2> :
  D.258369 = std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (__last);
  D.258370 = std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (__first);
  D.258372 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (D.258370, D.258369, __result);
  D.258368 = D.258372;

  <bb 3> :
<L0>:
  return D.258368;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEEET_SA_, funcdef_no=10275, decl_uid=238666, cgraph_uid=6907, symbol_order=7704)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.258373;

  <bb 2> :
  D.258373 = __it;

  <bb 3> :
<L0>:
  return D.258373;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEEPS3_ET1_T0_SC_SB_, funcdef_no=10998, decl_uid=247100, cgraph_uid=7630, symbol_order=8429)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**> (struct __normal_iterator __first, struct __normal_iterator __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258377;
  struct basic_block_def * * D.258375;

  <bb 2> :
  __result.1965_1 = __result;
  _2 = std::__niter_base<basic_block_def**> (__result.1965_1);
  _3 = std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (__last);
  _4 = std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (__first);
  D.258377 = std::__copy_move_a1<false, basic_block_def* const*, basic_block_def**> (_4, _3, _2);
  _5 = D.258377;
  D.258375 = std::__niter_wrap<basic_block_def**> (&__result, _5);

  <bb 3> :
<L0>:
  return D.258375;

}



;; Function std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (_ZSt12__niter_baseIPKP15basic_block_defSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE, funcdef_no=10719, decl_uid=243201, cgraph_uid=7351, symbol_order=8148)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * const * std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (struct __normal_iterator __it)
{
  struct basic_block_def * const * D.258378;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::base (&__it);
  D.258378 = *_1;

  <bb 3> :
<L0>:
  return D.258378;

}



;; Function __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS2_SaIS2_EEE4baseEv, funcdef_no=10914, decl_uid=230191, cgraph_uid=7546, symbol_order=8345)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * const * const & __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >::base (const struct __normal_iterator * const this)
{
  struct basic_block_def * const * const & D.258380;

  <bb 2> :
  D.258380 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.258380;

}



;; Function std::__copy_move_a1<false, basic_block_def* const*, basic_block_def**> (_ZSt14__copy_move_a1ILb0EPKP15basic_block_defPS1_ET1_T0_S6_S5_, funcdef_no=10721, decl_uid=243355, cgraph_uid=7353, symbol_order=8150)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a1<false, basic_block_def* const*, basic_block_def**> (struct basic_block_def * const * __first, struct basic_block_def * const * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258384;
  struct basic_block_def * * D.258382;

  <bb 2> :
  D.258384 = std::__copy_move_a2<false, basic_block_def* const*, basic_block_def**> (__first, __last, __result);
  D.258382 = D.258384;

  <bb 3> :
<L0>:
  return D.258382;

}



;; Function std::__copy_move_a2<false, basic_block_def* const*, basic_block_def**> (_ZSt14__copy_move_a2ILb0EPKP15basic_block_defPS1_ET1_T0_S6_S5_, funcdef_no=10915, decl_uid=246183, cgraph_uid=7547, symbol_order=8346)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a2<false, basic_block_def* const*, basic_block_def**> (struct basic_block_def * const * __first, struct basic_block_def * const * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258385;

  <bb 2> :
  D.258385 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<basic_block_def*> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.258385;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<basic_block_def*> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP15basic_block_defEEPT_PKS5_S8_S6_, funcdef_no=11000, decl_uid=247145, cgraph_uid=7632, symbol_order=8431)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct basic_block_def * * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<basic_block_def*> (struct basic_block_def * const * __first, struct basic_block_def * const * __last, struct basic_block_def * * __result)
{
  const ptrdiff_t _Num;
  struct basic_block_def * * D.258390;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 8;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.1966_2 = (long unsigned int) _Num;
  _3 = _Num.1966_2 * 8;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.1967_4 = (long unsigned int) _Num;
  _5 = _Num.1967_4 * 8;
  D.258390 = __result + _5;

  <bb 5> :
<L3>:
  return D.258390;

}



;; Function std::__niter_wrap<basic_block_def**> (_ZSt12__niter_wrapIPP15basic_block_defET_RKS3_S3_, funcdef_no=10726, decl_uid=243398, cgraph_uid=7358, symbol_order=8155)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__niter_wrap<basic_block_def**> (struct basic_block_def * * const & D.246205, struct basic_block_def * * __res)
{
  struct basic_block_def * * D.258392;

  <bb 2> :
  D.258392 = __res;

  <bb 3> :
<L0>:
  return D.258392;

}



;; Function std::vector<symbolicinfoPatharray>::vector (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EEC2ERKS2_, funcdef_no=8832, decl_uid=171310, cgraph_uid=5464, symbol_order=6257)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<symbolicinfoPatharray>::vector (struct vector * const this, const struct vector & __x)
{
  struct symbolicinfoPatharray * D.258398;
  struct __normal_iterator D.258395;
  struct __normal_iterator D.258394;
  struct allocator D.230352;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.171347;
  _2 = &__x->D.171347;
  _3 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_2);
  D.230352 = __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<symbolicinfoPatharray>::size (__x);
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_1, _4, &D.230352);

  <bb 3> :
  std::allocator<symbolicinfoPatharray>::~allocator (&D.230352);
  D.230352 = {CLOBBER};
  _5 = &this->D.171347;
  _6 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_5);
  _7 = this->D.171347._M_impl.D.170692._M_start;
  D.258394 = std::vector<symbolicinfoPatharray>::end (__x);
  D.258395 = std::vector<symbolicinfoPatharray>::begin (__x);
  D.258398 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*, symbolicinfoPatharray> (D.258395, D.258394, _7, _6);

  <bb 4> :
  _8 = D.258398;
  this->D.171347._M_impl.D.170692._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<symbolicinfoPatharray>::~allocator (&D.230352);
  resx 2

  <bb 6> :
<L1>:
  D.230352 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.171347;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::~_Vector_base (_9);
  resx 5

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=9680, decl_uid=170582, cgraph_uid=6312, symbol_order=7105)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.258400;

  <bb 2> :
  D.258400 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.258400;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaI21symbolicinfoPatharrayES1_E17_S_select_on_copyERKS2_, funcdef_no=9679, decl_uid=170554, cgraph_uid=6311, symbol_order=7104)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<symbolicinfoPatharray> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<symbolicinfoPatharray> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaI21symbolicinfoPatharrayEE37select_on_container_copy_constructionERKS1_, funcdef_no=10264, decl_uid=170519, cgraph_uid=6896, symbol_order=7693)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<symbolicinfoPatharray> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<symbolicinfoPatharray>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::vector<symbolicinfoPatharray>::size (_ZNKSt6vectorI21symbolicinfoPatharraySaIS0_EE4sizeEv, funcdef_no=9678, decl_uid=170980, cgraph_uid=6310, symbol_order=7103)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<symbolicinfoPatharray>::size (const struct vector * const this)
{
  size_type D.258406;

  <bb 2> :
  _1 = this->D.171347._M_impl.D.170692._M_finish;
  _2 = this->D.171347._M_impl.D.170692._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.258406 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.258406;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EEC2EmRKS1_, funcdef_no=9682, decl_uid=170779, cgraph_uid=6314, symbol_order=7107)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=10266, decl_uid=170684, cgraph_uid=6898, symbol_order=7695)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<symbolicinfoPatharray>::allocator (this, __a);
  _1 = &this->D.170692;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_create_storage (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE17_M_create_storageEm, funcdef_no=10268, decl_uid=170703, cgraph_uid=6900, symbol_order=7697)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  struct symbolicinfoPatharray * D.258409;

  <bb 2> :
  D.258409 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_allocate (this, __n);
  _1 = D.258409;
  this->_M_impl.D.170692._M_start = _1;
  _2 = this->_M_impl.D.170692._M_start;
  this->_M_impl.D.170692._M_finish = _2;
  _3 = this->_M_impl.D.170692._M_start;
  _4 = __n * 16;
  _5 = _3 + _4;
  this->_M_impl.D.170692._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_allocate (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE11_M_allocateEm, funcdef_no=10283, decl_uid=170696, cgraph_uid=6915, symbol_order=7712)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct symbolicinfoPatharray * std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct symbolicinfoPatharray * D.258416;
  struct symbolicinfoPatharray * iftmp.1968;
  struct symbolicinfoPatharray * D.258410;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.258416 = std::allocator_traits<std::allocator<symbolicinfoPatharray> >::allocate (_1, __n);
  iftmp.1968 = D.258416;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1968 = 0B;

  <bb 5> :
  D.258410 = iftmp.1968;

  <bb 6> :
<L3>:
  return D.258410;

}



;; Function std::allocator_traits<std::allocator<symbolicinfoPatharray> >::allocate (_ZNSt16allocator_traitsISaI21symbolicinfoPatharrayEE8allocateERS1_m, funcdef_no=10728, decl_uid=170497, cgraph_uid=7360, symbol_order=8157)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct symbolicinfoPatharray * std::allocator_traits<std::allocator<symbolicinfoPatharray> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct symbolicinfoPatharray * D.258419;
  struct symbolicinfoPatharray * D.258417;

  <bb 2> :
  D.258419 = __gnu_cxx::new_allocator<symbolicinfoPatharray>::allocate (__a, __n, 0B);
  D.258417 = D.258419;

  <bb 3> :
<L0>:
  return D.258417;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::allocate (_ZN9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayE8allocateEmPKv, funcdef_no=10918, decl_uid=170351, cgraph_uid=7551, symbol_order=8350)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct symbolicinfoPatharray * __gnu_cxx::new_allocator<symbolicinfoPatharray>::allocate (struct new_allocator * const this, size_type __n, const void * D.247164)
{
  struct symbolicinfoPatharray * D.258430;
  struct symbolicinfoPatharray * D.258429;
  align_val_t __al;
  struct symbolicinfoPatharray * D.258427;
  bool retval.1969;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<symbolicinfoPatharray>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.1969 = _4 != 0;
  if (retval.1969 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 1152921504606846975)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 16;
  D.258430 = operator new (_6);
  D.258427 = D.258430;

  <bb 7> :
<L6>:
  return D.258427;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayE11_M_max_sizeEv, funcdef_no=10919, decl_uid=170378, cgraph_uid=7550, symbol_order=8349)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<symbolicinfoPatharray>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.258431;

  <bb 2> :
  D.258431 = 576460752303423487;

  <bb 3> :
<L0>:
  return D.258431;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE12_Vector_implD2Ev, funcdef_no=6832, decl_uid=170739, cgraph_uid=3460, symbol_order=4239)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<symbolicinfoPatharray>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<symbolicinfoPatharray>::~allocator (_ZNSaI21symbolicinfoPatharrayED2Ev, funcdef_no=7845, decl_uid=170472, cgraph_uid=4477, symbol_order=5266)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<symbolicinfoPatharray>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<symbolicinfoPatharray>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayED2Ev, funcdef_no=8821, decl_uid=170401, cgraph_uid=5453, symbol_order=6246)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<symbolicinfoPatharray>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=8824, decl_uid=170580, cgraph_uid=5456, symbol_order=6249)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.258433;

  <bb 2> :
  D.258433 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.258433;

}



;; Function std::vector<symbolicinfoPatharray>::end (_ZNKSt6vectorI21symbolicinfoPatharraySaIS0_EE3endEv, funcdef_no=9685, decl_uid=170962, cgraph_uid=6317, symbol_order=7110)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<symbolicinfoPatharray>::end (const struct vector * const this)
{
  struct const_iterator D.238610;
  struct const_iterator D.258435;

  <bb 2> :
  _1 = &this->D.171347._M_impl.D.170692._M_finish;
  __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (&D.238610, _1);
  D.258435 = D.238610;
  D.238610 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.258435;

}



;; Function __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEC2ERKS3_, funcdef_no=10270, decl_uid=230321, cgraph_uid=6902, symbol_order=7699)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (struct __normal_iterator * const this, const struct symbolicinfoPatharray * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<symbolicinfoPatharray>::begin (_ZNKSt6vectorI21symbolicinfoPatharraySaIS0_EE5beginEv, funcdef_no=9684, decl_uid=170958, cgraph_uid=6316, symbol_order=7109)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<symbolicinfoPatharray>::begin (const struct vector * const this)
{
  struct const_iterator D.238608;
  struct const_iterator D.258438;

  <bb 2> :
  _1 = &this->D.171347._M_impl.D.170692._M_start;
  __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (&D.238608, _1);
  D.258438 = D.238608;
  D.238608 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.258438;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*, symbolicinfoPatharray> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E, funcdef_no=9686, decl_uid=230341, cgraph_uid=6318, symbol_order=7111)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*, symbolicinfoPatharray> (struct __normal_iterator __first, struct __normal_iterator __last, struct symbolicinfoPatharray * __result, struct allocator & D.238614)
{
  struct symbolicinfoPatharray * D.258443;
  struct symbolicinfoPatharray * D.258441;

  <bb 2> :
  D.258443 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (__first, __last, __result);
  D.258441 = D.258443;

  <bb 3> :
<L0>:
  return D.258441;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_, funcdef_no=10272, decl_uid=238616, cgraph_uid=6905, symbol_order=7702)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (struct __normal_iterator __first, struct __normal_iterator __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.258446;
  const bool __assignable;
  struct symbolicinfoPatharray * D.258444;

  <bb 2> :
  __assignable = 1;
  D.258446 = std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (__first, __last, __result);
  D.258444 = D.258446;

  <bb 3> :
<L0>:
  return D.258444;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_, funcdef_no=10718, decl_uid=243183, cgraph_uid=7350, symbol_order=8147)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct symbolicinfoPatharray * std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (struct __normal_iterator __first, struct __normal_iterator __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * __cur;
  struct symbolicinfoPatharray * D.258448;
  bool retval.1970;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator* (&__first);
  _2 = std::__addressof<symbolicinfoPatharray> (__cur);
  std::_Construct<symbolicinfoPatharray, const symbolicinfoPatharray&> (_2, _1);
  __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator++ (&__first);
  __cur = __cur + 16;

  <bb 4> :
  retval.1970 = __gnu_cxx::operator!=<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (&__first, &__last);
  if (retval.1970 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.258448 = __cur;

  <bb 6> :
<L3>:
  return D.258448;

}



;; Function __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEdeEv, funcdef_no=10912, decl_uid=230279, cgraph_uid=7544, symbol_order=8343)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct symbolicinfoPatharray & __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator* (const struct __normal_iterator * const this)
{
  const struct symbolicinfoPatharray & D.258450;

  <bb 2> :
  D.258450 = this->_M_current;

  <bb 3> :
<L0>:
  return D.258450;

}



;; Function std::__addressof<symbolicinfoPatharray> (_ZSt11__addressofI21symbolicinfoPatharrayEPT_RS1_, funcdef_no=10911, decl_uid=246166, cgraph_uid=7543, symbol_order=8342)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__addressof<symbolicinfoPatharray> (struct symbolicinfoPatharray & __r)
{
  struct symbolicinfoPatharray * D.258452;

  <bb 2> :
  D.258452 = __r;

  <bb 3> :
<L0>:
  return D.258452;

}



;; Function std::_Construct<symbolicinfoPatharray, const symbolicinfoPatharray&> (_ZSt10_ConstructI21symbolicinfoPatharrayJRKS0_EEvPT_DpOT0_, funcdef_no=10913, decl_uid=246168, cgraph_uid=7545, symbol_order=8344)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<symbolicinfoPatharray, const symbolicinfoPatharray&> (struct symbolicinfoPatharray * __p, const struct symbolicinfoPatharray & __args#0)
{
  void * D.247126;
  void * D.247125;
  const struct symbolicinfoPatharray * D.247127;

  <bb 2> :
  D.247127 = std::forward<const symbolicinfoPatharray&> (__args#0);
  D.247125 = __p;
  D.247126 = operator new (16, D.247125);
  MEM[(struct symbolicinfoPatharray *)D.247126] = *D.247127;
  return;

}



;; Function std::forward<const symbolicinfoPatharray&> (_ZSt7forwardIRK21symbolicinfoPatharrayEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=10999, decl_uid=247123, cgraph_uid=7631, symbol_order=8430)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct symbolicinfoPatharray & std::forward<const symbolicinfoPatharray&> (const struct type & __t)
{
  const struct symbolicinfoPatharray & D.258454;

  <bb 2> :
  D.258454 = __t;

  <bb 3> :
<L0>:
  return D.258454;

}



;; Function __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEppEv, funcdef_no=10910, decl_uid=230283, cgraph_uid=7542, symbol_order=8341)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator & __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator++ (struct __normal_iterator * const this)
{
  struct __normal_iterator & D.258456;

  <bb 2> :
  _1 = this->_M_current;
  _2 = _1 + 16;
  this->_M_current = _2;
  D.258456 = this;

  <bb 3> :
<L0>:
  return D.258456;

}



;; Function __gnu_cxx::operator!=<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (_ZN9__gnu_cxxneIPK21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_, funcdef_no=10909, decl_uid=246159, cgraph_uid=7541, symbol_order=8340)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::operator!=<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  bool D.258458;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (__rhs);
  _4 = *_3;
  D.258458 = _2 != _4;

  <bb 3> :
<L0>:
  return D.258458;

}



;; Function __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10920, decl_uid=230308, cgraph_uid=7552, symbol_order=8351)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct symbolicinfoPatharray * const & __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (const struct __normal_iterator * const this)
{
  const struct symbolicinfoPatharray * const & D.258460;

  <bb 2> :
  D.258460 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.258460;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::~_Vector_base (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EED2Ev, funcdef_no=7848, decl_uid=170802, cgraph_uid=4480, symbol_order=5269)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.170692._M_end_of_storage;
  _2 = this->_M_impl.D.170692._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.170692._M_start;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (_ZNSt12_Vector_baseI21symbolicinfoPatharraySaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8823, decl_uid=170699, cgraph_uid=5455, symbol_order=6248)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (struct _Vector_base * const this, struct symbolicinfoPatharray * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<symbolicinfoPatharray> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<symbolicinfoPatharray> >::deallocate (_ZNSt16allocator_traitsISaI21symbolicinfoPatharrayEE10deallocateERS1_PS0_m, funcdef_no=9647, decl_uid=170504, cgraph_uid=6279, symbol_order=7072)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<symbolicinfoPatharray> >::deallocate (struct allocator_type & __a, struct symbolicinfoPatharray * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<symbolicinfoPatharray>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<symbolicinfoPatharray>::deallocate (_ZN9__gnu_cxx13new_allocatorI21symbolicinfoPatharrayE10deallocateEPS1_m, funcdef_no=10239, decl_uid=170355, cgraph_uid=6871, symbol_order=7668)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<symbolicinfoPatharray>::deallocate (struct new_allocator * const this, struct symbolicinfoPatharray * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 16;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::vector<symbolicinfoPatharray>::~vector (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EED2Ev, funcdef_no=7851, decl_uid=171344, cgraph_uid=4483, symbol_order=5272)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<symbolicinfoPatharray>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.171347;
  _2 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_1);
  _3 = this->D.171347._M_impl.D.170692._M_finish;
  _4 = this->D.171347._M_impl.D.170692._M_start;
  std::_Destroy<symbolicinfoPatharray*, symbolicinfoPatharray> (_4, _3, _2);
  _5 = &this->D.171347;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<symbolicinfoPatharray*, symbolicinfoPatharray> (_ZSt8_DestroyIP21symbolicinfoPatharrayS0_EvT_S2_RSaIT0_E, funcdef_no=8825, decl_uid=216397, cgraph_uid=5457, symbol_order=6250)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<symbolicinfoPatharray*, symbolicinfoPatharray> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct allocator & D.230106)
{
  <bb 2> :
  std::_Destroy<symbolicinfoPatharray*> (__first, __last);
  return;

}



;; Function std::_Destroy<symbolicinfoPatharray*> (_ZSt8_DestroyIP21symbolicinfoPatharrayEvT_S2_, funcdef_no=9648, decl_uid=230108, cgraph_uid=6281, symbol_order=7074)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<symbolicinfoPatharray*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<symbolicinfoPatharray*> (_ZNSt12_Destroy_auxILb1EE9__destroyIP21symbolicinfoPatharrayEEvT_S4_, funcdef_no=10240, decl_uid=238454, cgraph_uid=6872, symbol_order=7669)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<symbolicinfoPatharray*> (struct symbolicinfoPatharray * D.242851, struct symbolicinfoPatharray * D.242852)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function symbolicinfo::operator= (_ZN12symbolicinfoaSERKS_, funcdef_no=7857, decl_uid=216420, cgraph_uid=4488, symbol_order=5277)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfo & symbolicinfo::operator= (struct symbolicinfo * const this, const struct symbolicinfo & D.216421)
{
  struct symbolicinfo & D.258468;

  <bb 2> :
  _1 = D.216421->cond_stmt;
  this->cond_stmt = _1;
  _2 = D.216421->switch_stmt;
  this->switch_stmt = _2;
  _3 = D.216421->cond_rhs;
  this->cond_rhs = _3;
  _4 = D.216421->cond_lhs;
  this->cond_lhs = _4;
  _5 = D.216421->node;
  this->node = _5;
  _6 = &D.216421->switchs;
  _7 = &this->switchs;
  std::vector<basic_block_def*>::operator= (_7, _6);
  _8 = D.216421->cond_truebranch;
  this->cond_truebranch = _8;
  _9 = D.216421->cond_falsebranch;
  this->cond_falsebranch = _9;
  _10 = D.216421->prevlogic;
  this->prevlogic = _10;
  _11 = &D.216421->symbolicExecutionPathConstraint;
  _12 = &this->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::operator= (_12, _11);
  _13 = &D.216421->symbolicExecutionPathConstraintarrayTrue;
  _14 = &this->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::operator= (_14, _13);
  _15 = &D.216421->symbolicExecutionPathConstraintarrayFalse;
  _16 = &this->symbolicExecutionPathConstraintarrayFalse;
  std::vector<symbolicinfoPatharray>::operator= (_16, _15);
  D.258468 = this;

  <bb 3> :
<L0>:
  return D.258468;

}



;; Function std::vector<basic_block_def*>::operator= (_ZNSt6vectorIP15basic_block_defSaIS1_EEaSERKS3_, funcdef_no=8834, decl_uid=169880, cgraph_uid=5468, symbol_order=6261)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<basic_block_def*>::operator= (struct vector * const this, const struct vector & __x)
{
  struct basic_block_def * * D.258503;
  struct basic_block_def * * __tmp;
  const size_type __xlen;
  struct vector & D.258501;
  struct __normal_iterator D.258498;
  struct __normal_iterator D.258497;
  struct __normal_iterator D.258496;
  struct __normal_iterator D.258495;
  struct __normal_iterator D.258494;
  bool retval.1975;
  struct __normal_iterator D.258489;
  struct __normal_iterator D.258488;
  bool retval.1974;
  bool iftmp.1973;
  bool retval.1972;
  bool retval.1971;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.1971 = __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_propagate_on_copy_assign ();
  if (retval.1971 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.170302;
  _4 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.170302;
  _6 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1973 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1973 = 0;

  <bb 8> :
  retval.1972 = iftmp.1973;
  if (retval.1972 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<basic_block_def*>::clear (this);
  _8 = &this->D.170302;
  _9 = this->D.170302._M_impl.D.169647._M_end_of_storage;
  _10 = this->D.170302._M_impl.D.169647._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 8;
  _13 = (long unsigned int) _12;
  _14 = this->D.170302._M_impl.D.169647._M_start;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (_8, _14, _13);
  this->D.170302._M_impl.D.169647._M_start = 0B;
  this->D.170302._M_impl.D.169647._M_finish = 0B;
  this->D.170302._M_impl.D.169647._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.170302;
  _16 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.170302;
  _18 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<basic_block_def*> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<basic_block_def*>::size (__x);
  _19 = std::vector<basic_block_def*>::capacity (this);
  retval.1974 = __xlen > _19;
  if (retval.1974 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.258488 = std::vector<basic_block_def*>::end (__x);
  D.258489 = std::vector<basic_block_def*>::begin (__x);
  D.258503 = std::vector<basic_block_def*>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (this, __xlen, D.258489, D.258488);
  __tmp = D.258503;
  _20 = &this->D.170302;
  _21 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_20);
  _22 = this->D.170302._M_impl.D.169647._M_finish;
  _23 = this->D.170302._M_impl.D.169647._M_start;
  std::_Destroy<basic_block_def**, basic_block_def*> (_23, _22, _21);
  _24 = &this->D.170302;
  _25 = this->D.170302._M_impl.D.169647._M_end_of_storage;
  _26 = this->D.170302._M_impl.D.169647._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 8;
  _29 = (long unsigned int) _28;
  _30 = this->D.170302._M_impl.D.169647._M_start;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (_24, _30, _29);
  this->D.170302._M_impl.D.169647._M_start = __tmp;
  _31 = this->D.170302._M_impl.D.169647._M_start;
  _32 = __xlen * 8;
  _33 = _31 + _32;
  this->D.170302._M_impl.D.169647._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<basic_block_def*>::size (this);
  retval.1975 = __xlen <= _34;
  if (retval.1975 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.170302;
  _36 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_35);
  D.258494 = std::vector<basic_block_def*>::end (this);
  D.258495 = std::vector<basic_block_def*>::begin (this);
  D.258496 = std::vector<basic_block_def*>::end (__x);
  D.258497 = std::vector<basic_block_def*>::begin (__x);
  D.258498 = std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (D.258497, D.258496, D.258495);
  std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def*> (D.258498, D.258494, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.170302._M_impl.D.169647._M_start;
  _38 = __x->D.170302._M_impl.D.169647._M_start;
  _39 = std::vector<basic_block_def*>::size (this);
  _40 = _39 * 8;
  _41 = _38 + _40;
  _42 = __x->D.170302._M_impl.D.169647._M_start;
  std::copy<basic_block_def**, basic_block_def**> (_42, _41, _37);
  _43 = &this->D.170302;
  _44 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_43);
  _45 = this->D.170302._M_impl.D.169647._M_finish;
  _46 = __x->D.170302._M_impl.D.169647._M_finish;
  _47 = __x->D.170302._M_impl.D.169647._M_start;
  _48 = std::vector<basic_block_def*>::size (this);
  _49 = _48 * 8;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<basic_block_def**, basic_block_def**, basic_block_def*> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.170302._M_impl.D.169647._M_start;
  _52 = __xlen * 8;
  _53 = _51 + _52;
  this->D.170302._M_impl.D.169647._M_finish = _53;

  <bb 17> :
  D.258501 = this;

  <bb 18> :
<L19>:
  return D.258501;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaIP15basic_block_defES2_E27_S_propagate_on_copy_assignEv, funcdef_no=8835, decl_uid=169514, cgraph_uid=5466, symbol_order=6259)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_propagate_on_copy_assign ()
{
  bool D.258504;

  <bb 2> :
  D.258504 = 0;

  <bb 3> :
<L0>:
  return D.258504;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaIP15basic_block_defES2_E15_S_always_equalEv, funcdef_no=8836, decl_uid=169517, cgraph_uid=5467, symbol_order=6260)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<basic_block_def*>, basic_block_def*>::_S_always_equal ()
{
  bool D.258506;

  <bb 2> :
  D.258506 = 1;

  <bb 3> :
<L0>:
  return D.258506;

}



;; Function std::operator!= (_ZStneRKSaIP15basic_block_defES3_, funcdef_no=9687, decl_uid=169400, cgraph_uid=6319, symbol_order=7112)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.238633, const struct allocator & D.238634)
{
  bool D.258508;

  <bb 2> :
  D.258508 = 0;

  <bb 3> :
<L0>:
  return D.258508;

}



;; Function std::vector<basic_block_def*>::clear (_ZNSt6vectorIP15basic_block_defSaIS1_EE5clearEv, funcdef_no=9688, decl_uid=170032, cgraph_uid=6320, symbol_order=7113)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<basic_block_def*>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.170302._M_impl.D.169647._M_start;
  std::vector<basic_block_def*>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<basic_block_def*>::_M_erase_at_end (_ZNSt6vectorIP15basic_block_defSaIS1_EE15_M_erase_at_endEPS1_, funcdef_no=10274, decl_uid=170160, cgraph_uid=6906, symbol_order=7703)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<basic_block_def*>::_M_erase_at_end (struct vector * const this, struct basic_block_def * * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.170302._M_impl.D.169647._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 8;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.170302;
  _5 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_4);
  _6 = this->D.170302._M_impl.D.169647._M_finish;
  std::_Destroy<basic_block_def**, basic_block_def*> (__pos, _6, _5);
  this->D.170302._M_impl.D.169647._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<basic_block_def*> > (_ZSt15__alloc_on_copyISaIP15basic_block_defEEvRT_RKS3_, funcdef_no=9689, decl_uid=230379, cgraph_uid=6321, symbol_order=7114)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<basic_block_def*> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<basic_block_def*>::capacity (_ZNKSt6vectorIP15basic_block_defSaIS1_EE8capacityEv, funcdef_no=9690, decl_uid=169948, cgraph_uid=6322, symbol_order=7115)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<basic_block_def*>::capacity (const struct vector * const this)
{
  size_type D.258513;

  <bb 2> :
  _1 = this->D.170302._M_impl.D.169647._M_end_of_storage;
  _2 = this->D.170302._M_impl.D.169647._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  D.258513 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.258513;

}



;; Function std::vector<basic_block_def*>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (_ZNSt6vectorIP15basic_block_defSaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_, funcdef_no=9691, decl_uid=230386, cgraph_uid=6323, symbol_order=7116)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct basic_block_def * * std::vector<basic_block_def*>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct basic_block_def * * D.258517;
  struct basic_block_def * * __result;
  struct basic_block_def * * D.258515;

  <bb 2> :
  _1 = &this->D.170302;
  D.258517 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_allocate (_1, __n);
  __result = D.258517;
  _2 = &this->D.170302;
  _3 = std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, basic_block_def**, basic_block_def*> (__first, __last, __result, _3);

  <bb 3> :
  D.258515 = __result;

  <bb 4> :
<L0>:
  return D.258515;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.170302;
  std::_Vector_base<basic_block_def*, std::allocator<basic_block_def*> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_, funcdef_no=9692, decl_uid=230394, cgraph_uid=6324, symbol_order=7117)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.258523;
  struct __normal_iterator D.258522;
  struct __normal_iterator D.258521;

  <bb 2> :
  D.258522 = std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (__last);
  D.258523 = std::__miter_base<__gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> > > (__first);
  D.258521 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (D.258523, D.258522, __result);

  <bb 3> :
<L0>:
  return D.258521;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKP15basic_block_defSt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_, funcdef_no=10276, decl_uid=238672, cgraph_uid=6909, symbol_order=7706)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<basic_block_def* const*, std::vector<basic_block_def*> >, __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct basic_block_def * * D.258527;
  struct __normal_iterator D.258525;

  <bb 2> :
  _1 = std::__niter_base<basic_block_def**, std::vector<basic_block_def*> > (__result);
  _2 = std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (__last);
  _3 = std::__niter_base<basic_block_def* const*, std::vector<basic_block_def*> > (__first);
  D.258527 = std::__copy_move_a1<false, basic_block_def* const*, basic_block_def**> (_3, _2, _1);
  _4 = D.258527;
  D.258525 = std::__niter_wrap<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def**> (__result, _4);

  <bb 3> :
<L0>:
  return D.258525;

}



;; Function std::__niter_base<basic_block_def**, std::vector<basic_block_def*> > (_ZSt12__niter_baseIPP15basic_block_defSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10720, decl_uid=243352, cgraph_uid=7352, symbol_order=8149)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__niter_base<basic_block_def**, std::vector<basic_block_def*> > (struct __normal_iterator __it)
{
  struct basic_block_def * * D.258528;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::base (&__it);
  D.258528 = *_1;

  <bb 3> :
<L0>:
  return D.258528;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def**> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_, funcdef_no=10722, decl_uid=243359, cgraph_uid=7354, symbol_order=8151)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def**> (struct __normal_iterator __from, struct basic_block_def * * __res)
{
  struct __normal_iterator D.258530;

  <bb 2> :
  _1 = std::__niter_base<basic_block_def**, std::vector<basic_block_def*> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 8;
  D.258530 = __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.258530;

}



;; Function __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS2_SaIS2_EEEplEl, funcdef_no=10916, decl_uid=215429, cgraph_uid=7548, symbol_order=8347)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct basic_block_def * * const D.247151;
  struct __normal_iterator D.247152;
  struct __normal_iterator D.258532;

  <bb 2> :
  _1 = this->_M_current;
  __n.1976_2 = (long unsigned int) __n;
  _3 = __n.1976_2 * 8;
  _4 = _1 + _3;
  D.247151 = _4;
  __gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >::__normal_iterator (&D.247152, &D.247151);
  D.258532 = D.247152;
  D.247152 = {CLOBBER};
  D.247151 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.258532;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def*> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E, funcdef_no=9693, decl_uid=230400, cgraph_uid=6325, symbol_order=7118)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> >, basic_block_def*> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.238701)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS3_SaIS3_EEEEEvT_S9_, funcdef_no=10278, decl_uid=238703, cgraph_uid=6910, symbol_order=7707)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPP15basic_block_defSt6vectorIS5_SaIS5_EEEEEEvT_SB_, funcdef_no=10723, decl_uid=243383, cgraph_uid=7355, symbol_order=8152)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<basic_block_def**, std::vector<basic_block_def*> > > (struct __normal_iterator D.246192, struct __normal_iterator D.246193)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<basic_block_def**, basic_block_def**> (_ZSt4copyIPP15basic_block_defS2_ET0_T_S4_S3_, funcdef_no=9694, decl_uid=230408, cgraph_uid=6326, symbol_order=7119)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::copy<basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258538;
  struct basic_block_def * * D.258536;

  <bb 2> :
  _1 = std::__miter_base<basic_block_def**> (__last);
  _2 = std::__miter_base<basic_block_def**> (__first);
  D.258538 = std::__copy_move_a<false, basic_block_def**, basic_block_def**> (_2, _1, __result);
  D.258536 = D.258538;

  <bb 3> :
<L0>:
  return D.258536;

}



;; Function std::__miter_base<basic_block_def**> (_ZSt12__miter_baseIPP15basic_block_defET_S3_, funcdef_no=10279, decl_uid=238719, cgraph_uid=6911, symbol_order=7708)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__miter_base<basic_block_def**> (struct basic_block_def * * __it)
{
  struct basic_block_def * * D.258539;

  <bb 2> :
  D.258539 = __it;

  <bb 3> :
<L0>:
  return D.258539;

}



;; Function std::__copy_move_a<false, basic_block_def**, basic_block_def**> (_ZSt13__copy_move_aILb0EPP15basic_block_defS2_ET1_T0_S4_S3_, funcdef_no=10280, decl_uid=238721, cgraph_uid=6912, symbol_order=7709)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a<false, basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258543;
  struct basic_block_def * * D.258541;

  <bb 2> :
  __result.1977_1 = __result;
  _2 = std::__niter_base<basic_block_def**> (__result.1977_1);
  _3 = std::__niter_base<basic_block_def**> (__last);
  _4 = std::__niter_base<basic_block_def**> (__first);
  D.258543 = std::__copy_move_a1<false, basic_block_def**, basic_block_def**> (_4, _3, _2);
  _5 = D.258543;
  D.258541 = std::__niter_wrap<basic_block_def**> (&__result, _5);

  <bb 3> :
<L0>:
  return D.258541;

}



;; Function std::__copy_move_a1<false, basic_block_def**, basic_block_def**> (_ZSt14__copy_move_a1ILb0EPP15basic_block_defS2_ET1_T0_S4_S3_, funcdef_no=10725, decl_uid=243394, cgraph_uid=7357, symbol_order=8154)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a1<false, basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258546;
  struct basic_block_def * * D.258544;

  <bb 2> :
  D.258546 = std::__copy_move_a2<false, basic_block_def**, basic_block_def**> (__first, __last, __result);
  D.258544 = D.258546;

  <bb 3> :
<L0>:
  return D.258544;

}



;; Function std::__copy_move_a2<false, basic_block_def**, basic_block_def**> (_ZSt14__copy_move_a2ILb0EPP15basic_block_defS2_ET1_T0_S4_S3_, funcdef_no=10917, decl_uid=246201, cgraph_uid=7549, symbol_order=8348)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__copy_move_a2<false, basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258547;

  <bb 2> :
  D.258547 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<basic_block_def*> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.258547;

}



;; Function std::__uninitialized_copy_a<basic_block_def**, basic_block_def**, basic_block_def*> (_ZSt22__uninitialized_copy_aIPP15basic_block_defS2_S1_ET0_T_S4_S3_RSaIT1_E, funcdef_no=9695, decl_uid=230412, cgraph_uid=6327, symbol_order=7120)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__uninitialized_copy_a<basic_block_def**, basic_block_def**, basic_block_def*> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result, struct allocator & D.238728)
{
  struct basic_block_def * * D.258551;
  struct basic_block_def * * D.258549;

  <bb 2> :
  D.258551 = std::uninitialized_copy<basic_block_def**, basic_block_def**> (__first, __last, __result);
  D.258549 = D.258551;

  <bb 3> :
<L0>:
  return D.258549;

}



;; Function std::uninitialized_copy<basic_block_def**, basic_block_def**> (_ZSt18uninitialized_copyIPP15basic_block_defS2_ET0_T_S4_S3_, funcdef_no=10281, decl_uid=238730, cgraph_uid=6913, symbol_order=7710)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::uninitialized_copy<basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258554;
  const bool __assignable;
  struct basic_block_def * * D.258552;

  <bb 2> :
  __assignable = 1;
  D.258554 = std::__uninitialized_copy<true>::__uninit_copy<basic_block_def**, basic_block_def**> (__first, __last, __result);
  D.258552 = D.258554;

  <bb 3> :
<L0>:
  return D.258552;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<basic_block_def**, basic_block_def**> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPP15basic_block_defS4_EET0_T_S6_S5_, funcdef_no=10727, decl_uid=243432, cgraph_uid=7359, symbol_order=8156)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct basic_block_def * * std::__uninitialized_copy<true>::__uninit_copy<basic_block_def**, basic_block_def**> (struct basic_block_def * * __first, struct basic_block_def * * __last, struct basic_block_def * * __result)
{
  struct basic_block_def * * D.258557;
  struct basic_block_def * * D.258555;

  <bb 2> :
  D.258557 = std::copy<basic_block_def**, basic_block_def**> (__first, __last, __result);
  D.258555 = D.258557;

  <bb 3> :
<L0>:
  return D.258555;

}



;; Function std::vector<symbolicinfoPatharray>::operator= (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EEaSERKS2_, funcdef_no=8837, decl_uid=170925, cgraph_uid=5471, symbol_order=6264)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<symbolicinfoPatharray>::operator= (struct vector * const this, const struct vector & __x)
{
  struct symbolicinfoPatharray * D.258591;
  struct symbolicinfoPatharray * __tmp;
  const size_type __xlen;
  struct vector & D.258589;
  struct __normal_iterator D.258586;
  struct __normal_iterator D.258585;
  struct __normal_iterator D.258584;
  struct __normal_iterator D.258583;
  struct __normal_iterator D.258582;
  bool retval.1982;
  struct __normal_iterator D.258577;
  struct __normal_iterator D.258576;
  bool retval.1981;
  bool iftmp.1980;
  bool retval.1979;
  bool retval.1978;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.1978 = __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_propagate_on_copy_assign ();
  if (retval.1978 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.171347;
  _4 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.171347;
  _6 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1980 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.1980 = 0;

  <bb 8> :
  retval.1979 = iftmp.1980;
  if (retval.1979 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<symbolicinfoPatharray>::clear (this);
  _8 = &this->D.171347;
  _9 = this->D.171347._M_impl.D.170692._M_end_of_storage;
  _10 = this->D.171347._M_impl.D.170692._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 16;
  _13 = (long unsigned int) _12;
  _14 = this->D.171347._M_impl.D.170692._M_start;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (_8, _14, _13);
  this->D.171347._M_impl.D.170692._M_start = 0B;
  this->D.171347._M_impl.D.170692._M_finish = 0B;
  this->D.171347._M_impl.D.170692._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.171347;
  _16 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.171347;
  _18 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<symbolicinfoPatharray> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<symbolicinfoPatharray>::size (__x);
  _19 = std::vector<symbolicinfoPatharray>::capacity (this);
  retval.1981 = __xlen > _19;
  if (retval.1981 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.258576 = std::vector<symbolicinfoPatharray>::end (__x);
  D.258577 = std::vector<symbolicinfoPatharray>::begin (__x);
  D.258591 = std::vector<symbolicinfoPatharray>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (this, __xlen, D.258577, D.258576);
  __tmp = D.258591;
  _20 = &this->D.171347;
  _21 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_20);
  _22 = this->D.171347._M_impl.D.170692._M_finish;
  _23 = this->D.171347._M_impl.D.170692._M_start;
  std::_Destroy<symbolicinfoPatharray*, symbolicinfoPatharray> (_23, _22, _21);
  _24 = &this->D.171347;
  _25 = this->D.171347._M_impl.D.170692._M_end_of_storage;
  _26 = this->D.171347._M_impl.D.170692._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 16;
  _29 = (long unsigned int) _28;
  _30 = this->D.171347._M_impl.D.170692._M_start;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (_24, _30, _29);
  this->D.171347._M_impl.D.170692._M_start = __tmp;
  _31 = this->D.171347._M_impl.D.170692._M_start;
  _32 = __xlen * 16;
  _33 = _31 + _32;
  this->D.171347._M_impl.D.170692._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<symbolicinfoPatharray>::size (this);
  retval.1982 = __xlen <= _34;
  if (retval.1982 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.171347;
  _36 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_35);
  D.258582 = std::vector<symbolicinfoPatharray>::end (this);
  D.258583 = std::vector<symbolicinfoPatharray>::begin (this);
  D.258584 = std::vector<symbolicinfoPatharray>::end (__x);
  D.258585 = std::vector<symbolicinfoPatharray>::begin (__x);
  D.258586 = std::copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (D.258585, D.258584, D.258583);
  std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray> (D.258586, D.258582, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.171347._M_impl.D.170692._M_start;
  _38 = __x->D.171347._M_impl.D.170692._M_start;
  _39 = std::vector<symbolicinfoPatharray>::size (this);
  _40 = _39 * 16;
  _41 = _38 + _40;
  _42 = __x->D.171347._M_impl.D.170692._M_start;
  std::copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (_42, _41, _37);
  _43 = &this->D.171347;
  _44 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_43);
  _45 = this->D.171347._M_impl.D.170692._M_finish;
  _46 = __x->D.171347._M_impl.D.170692._M_finish;
  _47 = __x->D.171347._M_impl.D.170692._M_start;
  _48 = std::vector<symbolicinfoPatharray>::size (this);
  _49 = _48 * 16;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<symbolicinfoPatharray*, symbolicinfoPatharray*, symbolicinfoPatharray> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.171347._M_impl.D.170692._M_start;
  _52 = __xlen * 16;
  _53 = _51 + _52;
  this->D.171347._M_impl.D.170692._M_finish = _53;

  <bb 17> :
  D.258589 = this;

  <bb 18> :
<L19>:
  return D.258589;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaI21symbolicinfoPatharrayES1_E27_S_propagate_on_copy_assignEv, funcdef_no=8838, decl_uid=170559, cgraph_uid=5469, symbol_order=6262)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_propagate_on_copy_assign ()
{
  bool D.258592;

  <bb 2> :
  D.258592 = 0;

  <bb 3> :
<L0>:
  return D.258592;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaI21symbolicinfoPatharrayES1_E15_S_always_equalEv, funcdef_no=8839, decl_uid=170562, cgraph_uid=5470, symbol_order=6263)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<symbolicinfoPatharray>, symbolicinfoPatharray>::_S_always_equal ()
{
  bool D.258594;

  <bb 2> :
  D.258594 = 1;

  <bb 3> :
<L0>:
  return D.258594;

}



;; Function std::operator!= (_ZStneRKSaI21symbolicinfoPatharrayES2_, funcdef_no=9696, decl_uid=170445, cgraph_uid=6328, symbol_order=7121)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.238734, const struct allocator & D.238735)
{
  bool D.258596;

  <bb 2> :
  D.258596 = 0;

  <bb 3> :
<L0>:
  return D.258596;

}



;; Function std::vector<symbolicinfoPatharray>::clear (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EE5clearEv, funcdef_no=9697, decl_uid=171077, cgraph_uid=6329, symbol_order=7122)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<symbolicinfoPatharray>::clear (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.171347._M_impl.D.170692._M_start;
  std::vector<symbolicinfoPatharray>::_M_erase_at_end (this, _1);
  return;

}



;; Function std::vector<symbolicinfoPatharray>::_M_erase_at_end (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=10282, decl_uid=171205, cgraph_uid=6914, symbol_order=7711)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::vector<symbolicinfoPatharray>::_M_erase_at_end (struct vector * const this, struct symbolicinfoPatharray * __pos)
{
  size_type __n;

  <bb 2> :
  _1 = this->D.171347._M_impl.D.170692._M_finish;
  _2 = _1 - __pos;
  _3 = _2 /[ex] 16;
  __n = (size_type) _3;
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this->D.171347;
  _5 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_4);
  _6 = this->D.171347._M_impl.D.170692._M_finish;
  std::_Destroy<symbolicinfoPatharray*, symbolicinfoPatharray> (__pos, _6, _5);
  this->D.171347._M_impl.D.170692._M_finish = __pos;

  <bb 4> :
  return;

}



;; Function std::__alloc_on_copy<std::allocator<symbolicinfoPatharray> > (_ZSt15__alloc_on_copyISaI21symbolicinfoPatharrayEEvRT_RKS2_, funcdef_no=9698, decl_uid=230445, cgraph_uid=6330, symbol_order=7123)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<symbolicinfoPatharray> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<symbolicinfoPatharray>::capacity (_ZNKSt6vectorI21symbolicinfoPatharraySaIS0_EE8capacityEv, funcdef_no=9699, decl_uid=170993, cgraph_uid=6331, symbol_order=7124)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<symbolicinfoPatharray>::capacity (const struct vector * const this)
{
  size_type D.258601;

  <bb 2> :
  _1 = this->D.171347._M_impl.D.170692._M_end_of_storage;
  _2 = this->D.171347._M_impl.D.170692._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 16;
  D.258601 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.258601;

}



;; Function std::vector<symbolicinfoPatharray>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_, funcdef_no=9700, decl_uid=230452, cgraph_uid=6332, symbol_order=7125)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
struct symbolicinfoPatharray * std::vector<symbolicinfoPatharray>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  struct symbolicinfoPatharray * D.258605;
  struct symbolicinfoPatharray * __result;
  struct symbolicinfoPatharray * D.258603;

  <bb 2> :
  _1 = &this->D.171347;
  D.258605 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_allocate (_1, __n);
  __result = D.258605;
  _2 = &this->D.171347;
  _3 = std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*, symbolicinfoPatharray> (__first, __last, __result, _3);

  <bb 3> :
  D.258603 = __result;

  <bb 4> :
<L0>:
  return D.258603;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.171347;
  std::_Vector_base<symbolicinfoPatharray, std::allocator<symbolicinfoPatharray> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::vector<symbolicinfoPatharray>::end (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EE3endEv, funcdef_no=9703, decl_uid=170960, cgraph_uid=6335, symbol_order=7128)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<symbolicinfoPatharray>::end (struct vector * const this)
{
  struct iterator D.238821;
  struct iterator D.258609;

  <bb 2> :
  _1 = &this->D.171347._M_impl.D.170692._M_finish;
  __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (&D.238821, _1);
  D.258609 = D.238821;
  D.238821 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.258609;

}



;; Function __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=10285, decl_uid=230534, cgraph_uid=6917, symbol_order=7714)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (struct __normal_iterator * const this, struct symbolicinfoPatharray * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<symbolicinfoPatharray>::begin (_ZNSt6vectorI21symbolicinfoPatharraySaIS0_EE5beginEv, funcdef_no=9701, decl_uid=170956, cgraph_uid=6333, symbol_order=7126)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<symbolicinfoPatharray>::begin (struct vector * const this)
{
  struct iterator D.238775;
  struct iterator D.258612;

  <bb 2> :
  _1 = &this->D.171347._M_impl.D.170692._M_start;
  __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (&D.238775, _1);
  D.258612 = D.238775;
  D.238775 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.258612;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_, funcdef_no=9702, decl_uid=230553, cgraph_uid=6334, symbol_order=7127)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.258617;
  struct __normal_iterator D.258616;
  struct __normal_iterator D.258615;

  <bb 2> :
  D.258616 = std::__miter_base<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (__last);
  D.258617 = std::__miter_base<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (__first);
  D.258615 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (D.258617, D.258616, __result);

  <bb 3> :
<L0>:
  return D.258615;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEEET_S9_, funcdef_no=10287, decl_uid=238787, cgraph_uid=6919, symbol_order=7716)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.258619;

  <bb 2> :
  D.258619 = __it;

  <bb 3> :
<L0>:
  return D.258619;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPK21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_, funcdef_no=10288, decl_uid=238793, cgraph_uid=6922, symbol_order=7719)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct symbolicinfoPatharray * D.258623;
  struct __normal_iterator D.258621;

  <bb 2> :
  _1 = std::__niter_base<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (__result);
  _2 = std::__niter_base<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (__last);
  _3 = std::__niter_base<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (__first);
  D.258623 = std::__copy_move_a1<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (_3, _2, _1);
  _4 = D.258623;
  D.258621 = std::__niter_wrap<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (__result, _4);

  <bb 3> :
<L0>:
  return D.258621;

}



;; Function std::__niter_base<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (_ZSt12__niter_baseIP21symbolicinfoPatharraySt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10730, decl_uid=243606, cgraph_uid=7362, symbol_order=8159)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__niter_base<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (struct __normal_iterator __it)
{
  struct symbolicinfoPatharray * D.258624;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (&__it);
  D.258624 = *_1;

  <bb 3> :
<L0>:
  return D.258624;

}



;; Function __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=10921, decl_uid=230521, cgraph_uid=7553, symbol_order=8352)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * const & __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (const struct __normal_iterator * const this)
{
  struct symbolicinfoPatharray * const & D.258626;

  <bb 2> :
  D.258626 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.258626;

}



;; Function std::__niter_base<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (_ZSt12__niter_baseIPK21symbolicinfoPatharraySt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=10729, decl_uid=243455, cgraph_uid=7361, symbol_order=8158)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct symbolicinfoPatharray * std::__niter_base<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (struct __normal_iterator __it)
{
  const struct symbolicinfoPatharray * D.258628;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::base (&__it);
  D.258628 = *_1;

  <bb 3> :
<L0>:
  return D.258628;

}



;; Function std::__copy_move_a1<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt14__copy_move_a1ILb0EPK21symbolicinfoPatharrayPS0_ET1_T0_S5_S4_, funcdef_no=10731, decl_uid=243754, cgraph_uid=7363, symbol_order=8160)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move_a1<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (const struct symbolicinfoPatharray * __first, const struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.258632;
  struct symbolicinfoPatharray * D.258630;

  <bb 2> :
  D.258632 = std::__copy_move_a2<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (__first, __last, __result);
  D.258630 = D.258632;

  <bb 3> :
<L0>:
  return D.258630;

}



;; Function std::__copy_move_a2<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt14__copy_move_a2ILb0EPK21symbolicinfoPatharrayPS0_ET1_T0_S5_S4_, funcdef_no=10922, decl_uid=246223, cgraph_uid=7554, symbol_order=8353)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move_a2<false, const symbolicinfoPatharray*, symbolicinfoPatharray*> (const struct symbolicinfoPatharray * __first, const struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.258633;

  <bb 2> :
  D.258633 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<symbolicinfoPatharray> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.258633;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<symbolicinfoPatharray> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI21symbolicinfoPatharrayEEPT_PKS4_S7_S5_, funcdef_no=11001, decl_uid=247188, cgraph_uid=7633, symbol_order=8432)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<symbolicinfoPatharray> (const struct symbolicinfoPatharray * __first, const struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  const ptrdiff_t _Num;
  struct symbolicinfoPatharray * D.258638;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 16;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.1983_2 = (long unsigned int) _Num;
  _3 = _Num.1983_2 * 16;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.1984_4 = (long unsigned int) _Num;
  _5 = _Num.1984_4 * 16;
  D.258638 = __result + _5;

  <bb 5> :
<L3>:
  return D.258638;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_, funcdef_no=10732, decl_uid=243758, cgraph_uid=7364, symbol_order=8161)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray*> (struct __normal_iterator __from, struct symbolicinfoPatharray * __res)
{
  struct __normal_iterator D.258640;

  <bb 2> :
  _1 = std::__niter_base<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 16;
  D.258640 = __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.258640;

}



;; Function __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS1_SaIS1_EEEplEl, funcdef_no=10923, decl_uid=230512, cgraph_uid=7555, symbol_order=8354)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  struct symbolicinfoPatharray * const D.247194;
  struct __normal_iterator D.247195;
  struct __normal_iterator D.258642;

  <bb 2> :
  _1 = this->_M_current;
  __n.1985_2 = (long unsigned int) __n;
  _3 = __n.1985_2 * 16;
  _4 = _1 + _3;
  D.247194 = _4;
  __gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >::__normal_iterator (&D.247195, &D.247194);
  D.258642 = D.247195;
  D.247195 = {CLOBBER};
  D.247194 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.258642;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E, funcdef_no=9704, decl_uid=230559, cgraph_uid=6336, symbol_order=7129)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> >, symbolicinfoPatharray> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.238824)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS2_SaIS2_EEEEEvT_S8_, funcdef_no=10291, decl_uid=238826, cgraph_uid=6923, symbol_order=7720)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP21symbolicinfoPatharraySt6vectorIS4_SaIS4_EEEEEEvT_SA_, funcdef_no=10733, decl_uid=243782, cgraph_uid=7365, symbol_order=8162)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<symbolicinfoPatharray*, std::vector<symbolicinfoPatharray> > > (struct __normal_iterator D.246233, struct __normal_iterator D.246234)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt4copyIP21symbolicinfoPatharrayS1_ET0_T_S3_S2_, funcdef_no=9705, decl_uid=230567, cgraph_uid=6337, symbol_order=7130)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.258648;
  struct symbolicinfoPatharray * D.258646;

  <bb 2> :
  _1 = std::__miter_base<symbolicinfoPatharray*> (__last);
  _2 = std::__miter_base<symbolicinfoPatharray*> (__first);
  D.258648 = std::__copy_move_a<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (_2, _1, __result);
  D.258646 = D.258648;

  <bb 3> :
<L0>:
  return D.258646;

}



;; Function std::__miter_base<symbolicinfoPatharray*> (_ZSt12__miter_baseIP21symbolicinfoPatharrayET_S2_, funcdef_no=10292, decl_uid=238842, cgraph_uid=6924, symbol_order=7721)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__miter_base<symbolicinfoPatharray*> (struct symbolicinfoPatharray * __it)
{
  struct symbolicinfoPatharray * D.258649;

  <bb 2> :
  D.258649 = __it;

  <bb 3> :
<L0>:
  return D.258649;

}



;; Function std::__copy_move_a<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt13__copy_move_aILb0EP21symbolicinfoPatharrayS1_ET1_T0_S3_S2_, funcdef_no=10293, decl_uid=238844, cgraph_uid=6925, symbol_order=7722)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move_a<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.258653;
  struct symbolicinfoPatharray * D.258651;

  <bb 2> :
  __result.1986_1 = __result;
  _2 = std::__niter_base<symbolicinfoPatharray*> (__result.1986_1);
  _3 = std::__niter_base<symbolicinfoPatharray*> (__last);
  _4 = std::__niter_base<symbolicinfoPatharray*> (__first);
  D.258653 = std::__copy_move_a1<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (_4, _3, _2);
  _5 = D.258653;
  D.258651 = std::__niter_wrap<symbolicinfoPatharray*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.258651;

}



;; Function std::__niter_base<symbolicinfoPatharray*> (_ZSt12__niter_baseIP21symbolicinfoPatharrayET_S2_, funcdef_no=10734, decl_uid=243793, cgraph_uid=7366, symbol_order=8163)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__niter_base<symbolicinfoPatharray*> (struct symbolicinfoPatharray * __it)
{
  struct symbolicinfoPatharray * D.258654;

  <bb 2> :
  D.258654 = __it;

  <bb 3> :
<L0>:
  return D.258654;

}



;; Function std::__copy_move_a1<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt14__copy_move_a1ILb0EP21symbolicinfoPatharrayS1_ET1_T0_S3_S2_, funcdef_no=10735, decl_uid=243795, cgraph_uid=7367, symbol_order=8164)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move_a1<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.258658;
  struct symbolicinfoPatharray * D.258656;

  <bb 2> :
  D.258658 = std::__copy_move_a2<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (__first, __last, __result);
  D.258656 = D.258658;

  <bb 3> :
<L0>:
  return D.258656;

}



;; Function std::__copy_move_a2<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt14__copy_move_a2ILb0EP21symbolicinfoPatharrayS1_ET1_T0_S3_S2_, funcdef_no=10924, decl_uid=246242, cgraph_uid=7556, symbol_order=8355)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__copy_move_a2<false, symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.258659;

  <bb 2> :
  D.258659 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<symbolicinfoPatharray> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.258659;

}



;; Function std::__niter_wrap<symbolicinfoPatharray*> (_ZSt12__niter_wrapIP21symbolicinfoPatharrayET_RKS2_S2_, funcdef_no=10736, decl_uid=243799, cgraph_uid=7368, symbol_order=8165)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__niter_wrap<symbolicinfoPatharray*> (struct symbolicinfoPatharray * const & D.246246, struct symbolicinfoPatharray * __res)
{
  struct symbolicinfoPatharray * D.258661;

  <bb 2> :
  D.258661 = __res;

  <bb 3> :
<L0>:
  return D.258661;

}



;; Function std::__uninitialized_copy_a<symbolicinfoPatharray*, symbolicinfoPatharray*, symbolicinfoPatharray> (_ZSt22__uninitialized_copy_aIP21symbolicinfoPatharrayS1_S0_ET0_T_S3_S2_RSaIT1_E, funcdef_no=9706, decl_uid=230571, cgraph_uid=6338, symbol_order=7131)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::__uninitialized_copy_a<symbolicinfoPatharray*, symbolicinfoPatharray*, symbolicinfoPatharray> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result, struct allocator & D.238851)
{
  struct symbolicinfoPatharray * D.258665;
  struct symbolicinfoPatharray * D.258663;

  <bb 2> :
  D.258665 = std::uninitialized_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (__first, __last, __result);
  D.258663 = D.258665;

  <bb 3> :
<L0>:
  return D.258663;

}



;; Function std::uninitialized_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZSt18uninitialized_copyIP21symbolicinfoPatharrayS1_ET0_T_S3_S2_, funcdef_no=10294, decl_uid=238853, cgraph_uid=6926, symbol_order=7723)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct symbolicinfoPatharray * std::uninitialized_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * D.258668;
  const bool __assignable;
  struct symbolicinfoPatharray * D.258666;

  <bb 2> :
  __assignable = 1;
  D.258668 = std::__uninitialized_copy<false>::__uninit_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (__first, __last, __result);
  D.258666 = D.258668;

  <bb 3> :
<L0>:
  return D.258666;

}



;; Function std::__uninitialized_copy<false>::__uninit_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP21symbolicinfoPatharrayS3_EET0_T_S5_S4_, funcdef_no=10737, decl_uid=243833, cgraph_uid=7369, symbol_order=8166)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct symbolicinfoPatharray * std::__uninitialized_copy<false>::__uninit_copy<symbolicinfoPatharray*, symbolicinfoPatharray*> (struct symbolicinfoPatharray * __first, struct symbolicinfoPatharray * __last, struct symbolicinfoPatharray * __result)
{
  struct symbolicinfoPatharray * __cur;
  struct symbolicinfoPatharray * D.258669;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<symbolicinfoPatharray> (__cur);
  std::_Construct<symbolicinfoPatharray, symbolicinfoPatharray&> (_1, __first);
  __first = __first + 16;
  __cur = __cur + 16;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.258669 = __cur;

  <bb 6> :
<L3>:
  return D.258669;

}



;; Function std::_Construct<symbolicinfoPatharray, symbolicinfoPatharray&> (_ZSt10_ConstructI21symbolicinfoPatharrayJRS0_EEvPT_DpOT0_, funcdef_no=10925, decl_uid=246254, cgraph_uid=7557, symbol_order=8356)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Construct<symbolicinfoPatharray, symbolicinfoPatharray&> (struct symbolicinfoPatharray * __p, struct symbolicinfoPatharray & __args#0)
{
  void * D.247219;
  void * D.247218;
  const struct symbolicinfoPatharray * D.247220;

  <bb 2> :
  D.247220 = std::forward<symbolicinfoPatharray&> (__args#0);
  D.247218 = __p;
  D.247219 = operator new (16, D.247218);
  MEM[(struct symbolicinfoPatharray *)D.247219] = *D.247220;
  return;

}



;; Function std::forward<symbolicinfoPatharray&> (_ZSt7forwardIR21symbolicinfoPatharrayEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=11002, decl_uid=247216, cgraph_uid=7634, symbol_order=8433)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct symbolicinfoPatharray & std::forward<symbolicinfoPatharray&> (struct type & __t)
{
  struct symbolicinfoPatharray & D.258671;

  <bb 2> :
  D.258671 = __t;

  <bb 3> :
<L0>:
  return D.258671;

}



;; Function hash_map<tree_node*, function_path_array>::put (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7858, decl_uid=191960, cgraph_uid=4491, symbol_order=5280)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<tree_node*, function_path_array>::put (struct hash_map * const this, union tree_node * const & k, const struct function_path_array & v)
{
  bool D.258680;
  struct hash_entry * D.258679;
  unsigned int D.258678;
  bool ins;
  struct hash_entry * e;
  bool D.258676;
  void * D.216541;
  void * D.216540;

  <bb 2> :
  _1 = &this->m_table;
  D.258678 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::hash (k);
  _2 = D.258678;
  D.258679 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.258679;
  D.258680 = hash_map<tree_node*, function_path_array>::hash_entry::is_empty (e);
  ins = D.258680;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.216540 = &e->m_value;
  D.216541 = operator new (32, D.216540);
  function_path_array::function_path_array (D.216541, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  function_path_array::operator= (_4, v);

  <bb 5> :
  D.258676 = ~ins;

  <bb 6> :
<L3>:
  return D.258676;

  <bb 7> :
<L4>:
  operator delete (D.216541, D.216540);
  resx 1

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8840, decl_uid=192118, cgraph_uid=5472, symbol_order=6265)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.258731;
  bool D.258730;
  bool D.258729;
  bool D.258728;
  bool D.258727;
  bool D.258726;
  struct value_type * D.258725;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.1992;
  bool retval.1991;
  bool retval.1990;
  bool retval.1989;
  bool retval.1988;
  bool retval.1987;
  struct value_type * D.258687;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 40;
  entry = _11 + _13;
  size = this->m_size;
  D.258726 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1987 = D.258726;
  if (retval.1987 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.258727 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1988 = D.258727;
  if (retval.1988 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 40;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.258728 = hash_map<tree_node*, function_path_array>::hash_entry::equal (entry, comparable);
  retval.1989 = D.258728;
  if (retval.1989 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 40;
  D.258687 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 40;
  entry = _24 + _26;
  D.258729 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.1990 = D.258729;
  if (retval.1990 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.258730 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.1991 = D.258730;
  if (retval.1991 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 40;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.258731 = hash_map<tree_node*, function_path_array>::hash_entry::equal (entry, comparable);
  retval.1992 = D.258731;
  if (retval.1992 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 40;
  D.258687 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.258687 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.258687 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 40;
  D.258687 = _37 + _39;

  <bb 27> :
<L37>:
  return D.258687;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9707, decl_uid=192199, cgraph_uid=6351, symbol_order=7144)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.258762;
  unsigned int D.258761;
  bool D.258760;
  bool D.258759;
  struct mem_alloc_description & D.258758;
  struct value_type * D.258757;
  unsigned int D.258756;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.238877;
  void * D.238876;
  struct hash_entry & D.238914;
  bool iftmp.1996;
  bool retval.1995;
  bool iftmp.1994;
  bool retval.1993;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 40;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1994 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1994 = 0;

  <bb 6> :
  retval.1993 = iftmp.1994;
  if (retval.1993 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.258756 = hash_table_higher_prime_index (_5);
  nindex = D.258756;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.258757 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.258757;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.258759 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.258759;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.258760 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.258760;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.1996 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.1996 = 0;

  <bb 15> :
  retval.1995 = iftmp.1996;
  if (retval.1995 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.258761 = hash_map<tree_node*, function_path_array>::hash_entry::hash (x);
  _16 = D.258761;
  D.258762 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.258762;
  D.238914 = std::move<hash_map<tree_node*, function_path_array>::hash_entry&> (x);
  D.238876 = q;
  D.238877 = operator new (40, D.238876);
  hash_map<tree_node*, function_path_array>::hash_entry::hash_entry (D.238877, D.238914);

  <bb 17> :
  p = p + 40;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10295, decl_uid=192094, cgraph_uid=6927, symbol_order=7724)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.258763;

  <bb 2> :
  D.258763 = this->m_size;

  <bb 3> :
<L0>:
  return D.258763;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10296, decl_uid=192096, cgraph_uid=6928, symbol_order=7725)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.258765;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.258765 = _1 - _2;

  <bb 3> :
<L0>:
  return D.258765;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10297, decl_uid=192196, cgraph_uid=6929, symbol_order=7726)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.1997;
  bool D.258767;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1997 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1997 = 0;

  <bb 6> :
  D.258767 = iftmp.1997;

  <bb 7> :
<L4>:
  return D.258767;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9339, decl_uid=192186, cgraph_uid=5971, symbol_order=6764)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.258789;
  struct value_type * D.258788;
  struct mem_alloc_description & D.258787;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.258785;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.258788 = xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_alloc (n);
  nentries = D.258788;
  goto <bb 6>; [INV]

  <bb 5> :
  D.258789 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_path_array>::hash_entry> (n);
  nentries = D.258789;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.258785 = nentries;

  <bb 9> :
<L14>:
  return D.258785;

}



;; Function xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10045, decl_uid=218476, cgraph_uid=6677, symbol_order=7474)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.258792;
  struct hash_entry * D.258790;

  <bb 2> :
  D.258792 = xcalloc (count, 40);
  D.258790 = D.258792;

  <bb 3> :
<L0>:
  return D.258790;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_path_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10046, decl_uid=235304, cgraph_uid=6678, symbol_order=7475)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_path_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.258799;
  struct hash_entry * D.258798;
  struct hash_entry * D.258796;
  bool retval.1998;

  <bb 2> :
  retval.1998 = need_finalization_p<hash_map<tree_node*, function_path_array>::hash_entry> ();
  if (retval.1998 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 40;
  D.258798 = ggc_internal_cleared_alloc (_1, finalize, 40, c);
  D.258796 = D.258798;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 40;
  D.258799 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.258796 = D.258799;

  <bb 5> :
<L2>:
  return D.258796;

}



;; Function finalize<hash_map<tree_node*, function_path_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10563, decl_uid=242047, cgraph_uid=7198, symbol_order=7995)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_path_array>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, function_path_array>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10565, decl_uid=245496, cgraph_uid=7196, symbol_order=7993)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  function_path_array::~function_path_array (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_path_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10562, decl_uid=242046, cgraph_uid=7194, symbol_order=7991)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_path_array>::hash_entry> ()
{
  bool D.258800;

  <bb 2> :
  D.258800 = 1;

  <bb 3> :
<L0>:
  return D.258800;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10299, decl_uid=192019, cgraph_uid=6931, symbol_order=7728)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, function_path_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.258804;
  hashval_t D.258802;

  <bb 2> :
  _1 = &e->m_key;
  D.258804 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::hash (_1);
  D.258802 = D.258804;

  <bb 3> :
<L0>:
  return D.258802;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10298, decl_uid=192189, cgraph_uid=6930, symbol_order=7727)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.258817;
  bool D.258816;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.2000;
  struct value_type * D.258808;
  bool retval.1999;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 40;
  slot = _2 + _4;
  D.258816 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.1999 = D.258816;
  if (retval.1999 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.258808 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 40;
  slot = _8 + _10;
  D.258817 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.2000 = D.258817;
  if (retval.2000 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.258808 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.258808;

}



;; Function std::move<hash_map<tree_node*, function_path_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10300, decl_uid=238874, cgraph_uid=6932, symbol_order=7729)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, function_path_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.258818;

  <bb 2> :
  D.258818 = __t;

  <bb 3> :
<L0>:
  return D.258818;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::hash_entry (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9718, decl_uid=238899, cgraph_uid=6349, symbol_order=7142)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.238901)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.238901->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.238901->m_value;
  function_path_array::function_path_array (_2, _3);
  return;

}



;; Function function_path_array::function_path_array (_ZN19function_path_arrayC2EOS_, funcdef_no=9716, decl_uid=192311, cgraph_uid=6346, symbol_order=7139)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void function_path_array::function_path_array (struct function_path_array * const this, struct function_path_array & D.192313)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.192313->funtion_type_num;
  this->funtion_type_num = _1;
  _2 = &this->function_path_array;
  _3 = &D.192313->function_path_array;
  std::vector<function_path>::vector (_2, _3);
  return;

}



;; Function std::vector<function_path>::vector (_ZNSt6vectorI13function_pathSaIS0_EEC2EOS2_, funcdef_no=9714, decl_uid=175565, cgraph_uid=6343, symbol_order=7136)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<function_path>::vector (struct vector * const this, struct vector & D.175567)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.175608;
  _2 = &D.175567->D.175608;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (_ZNSt12_Vector_baseI13function_pathSaIS0_EEC2EOS2_, funcdef_no=9712, decl_uid=175033, cgraph_uid=6340, symbol_order=7133)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.175035)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.175035->_M_impl;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI13function_pathSaIS0_EE12_Vector_implC2EOS3_, funcdef_no=10302, decl_uid=174939, cgraph_uid=6934, symbol_order=7731)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl&> (__x);
  std::allocator<function_path>::allocator (this, _1);
  _2 = &this->D.174953;
  _3 = std::move<std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl&> (__x);
  _4 = &_3->D.174953;
  std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::move<std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseI13function_pathSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_, funcdef_no=10738, decl_uid=243863, cgraph_uid=7370, symbol_order=8167)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.258820;

  <bb 2> :
  D.258820 = __t;

  <bb 3> :
<L0>:
  return D.258820;

}



;; Function std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI13function_pathSaIS0_EE17_Vector_impl_dataC2EOS3_, funcdef_no=10740, decl_uid=174895, cgraph_uid=7372, symbol_order=8169)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<function_path, std::allocator<function_path> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8975, decl_uid=218478, cgraph_uid=5607, symbol_order=6400)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9720, decl_uid=192207, cgraph_uid=6352, symbol_order=7145)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, function_path_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10304, decl_uid=192031, cgraph_uid=6936, symbol_order=7733)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::mark_empty<hash_map<tree_node*, function_path_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::mark_empty<hash_map<tree_node*, function_path_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10742, decl_uid=243878, cgraph_uid=7374, symbol_order=8171)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::mark_empty<hash_map<tree_node*, function_path_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function function_path_array::operator= (_ZN19function_path_arrayaSERKS_, funcdef_no=7859, decl_uid=216542, cgraph_uid=4490, symbol_order=5279)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct function_path_array & function_path_array::operator= (struct function_path_array * const this, const struct function_path_array & D.216543)
{
  struct function_path_array & D.258823;

  <bb 2> :
  _1 = D.216543->funtion_type_num;
  this->funtion_type_num = _1;
  _2 = &D.216543->function_path_array;
  _3 = &this->function_path_array;
  std::vector<function_path>::operator= (_3, _2);
  D.258823 = this;

  <bb 3> :
<L0>:
  return D.258823;

}



;; Function symbolicinfo::~symbolicinfo (_ZN12symbolicinfoD2Ev, funcdef_no=6841, decl_uid=203533, cgraph_uid=3472, symbol_order=4251)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void symbolicinfo::~symbolicinfo (struct symbolicinfo * const this)
{
  <bb 2> :
  _1 = &this->symbolicExecutionPathConstraintarrayFalse;
  std::vector<symbolicinfoPatharray>::~vector (_1);
  _2 = &this->symbolicExecutionPathConstraintarrayTrue;
  std::vector<symbolicinfoPatharray>::~vector (_2);
  _3 = &this->symbolicExecutionPathConstraint;
  std::vector<basic_block_def*>::~vector (_3);
  _4 = &this->switchs;
  std::vector<basic_block_def*>::~vector (_4);
  *this = {CLOBBER};
  return;

}



;; Function PointerConstraint (_Z17PointerConstraintP3ptbS0_, funcdef_no=6843, decl_uid=203574, cgraph_uid=3475, symbol_order=4254)

Removing basic block 23
Removing basic block 33
Removing basic block 50
Removing basic block 51
Removing basic block 52
Removing basic block 53
Removing basic block 54
Removing basic block 55
Removing basic block 56
Removing basic block 57
Merging blocks 80 and 83
Removing basic block 85
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120
;;
;; Loop 1
;;  header 73, multiple latches: 71 72
;;  depth 1, outer 0
;;  nodes: 73 71 72 12 53 62 61 60 59 57 58 56 54 55 52 51 50 49 33 48 18 47 34 42 46 45 35 32 23 31 30 28 29 25 27 26 24 19 22 21 20 44 43 40 41 37 39 38 36 16 17 15 14 13 11 69 68 67 66 65 64 63
;;
;; Loop 3
;;  header 59, latch 58
;;  depth 2, outer 1
;;  nodes: 59 58
;;
;; Loop 2
;;  header 56, latch 55
;;  depth 2, outer 1
;;  nodes: 56 55
;; 2 succs { 120 3 }
;; 3 succs { 120 4 }
;; 4 succs { 120 5 }
;; 5 succs { 120 6 }
;; 6 succs { 120 7 }
;; 7 succs { 9 8 }
;; 8 succs { 9 95 }
;; 9 succs { 10 74 }
;; 10 succs { 73 }
;; 11 succs { 12 13 }
;; 12 succs { 72 }
;; 13 succs { 14 48 }
;; 14 succs { 16 15 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 49 }
;; 19 succs { 20 23 }
;; 20 succs { 119 21 }
;; 21 succs { 22 23 }
;; 22 succs { 23 }
;; 23 succs { 24 32 }
;; 24 succs { 119 25 }
;; 25 succs { 26 29 }
;; 26 succs { 119 27 }
;; 27 succs { 28 29 }
;; 28 succs { 30 }
;; 29 succs { 30 }
;; 30 succs { 31 32 }
;; 31 succs { 32 }
;; 32 succs { 33 49 }
;; 33 succs { 34 49 }
;; 34 succs { 35 49 }
;; 35 succs { 36 49 }
;; 36 succs { 119 37 }
;; 37 succs { 38 41 }
;; 38 succs { 119 39 }
;; 39 succs { 40 41 }
;; 40 succs { 42 }
;; 41 succs { 42 }
;; 42 succs { 43 49 }
;; 43 succs { 119 44 }
;; 44 succs { 119 45 }
;; 45 succs { 46 49 }
;; 46 succs { 47 49 }
;; 47 succs { 119 49 }
;; 48 succs { 119 49 }
;; 49 succs { 119 50 }
;; 50 succs { 119 51 }
;; 51 succs { 119 52 }
;; 52 succs { 53 54 }
;; 53 succs { 72 }
;; 54 succs { 56 }
;; 55 succs { 56 }
;; 56 succs { 55 57 }
;; 57 succs { 59 }
;; 58 succs { 59 }
;; 59 succs { 58 60 }
;; 60 succs { 119 61 }
;; 61 succs { 62 63 }
;; 62 succs { 72 }
;; 63 succs { 119 64 }
;; 64 succs { 119 65 }
;; 65 succs { 119 66 }
;; 66 succs { 119 67 }
;; 67 succs { 119 68 }
;; 68 succs { 119 69 }
;; 69 succs { 70 71 }
;; 70 succs { 74 }
;; 71 succs { 73 }
;; 72 succs { 73 }
;; 73 succs { 11 74 }
;; 74 succs { 120 75 }
;; 75 succs { 120 76 }
;; 76 succs { 120 77 }
;; 77 succs { 120 78 }
;; 78 succs { 120 79 }
;; 79 succs { 120 80 }
;; 80 succs { 120 81 }
;; 81 succs { 120 82 }
;; 82 succs { 120 83 }
;; 83 succs { 120 84 }
;; 84 succs { 120 85 }
;; 85 succs { 120 86 }
;; 86 succs { 120 87 }
;; 87 succs { 120 88 }
;; 88 succs { 120 89 }
;; 89 succs { 120 90 }
;; 90 succs { 120 91 }
;; 91 succs { 120 92 }
;; 92 succs { 120 93 }
;; 93 succs { 120 94 }
;; 94 succs { 96 }
;; 95 succs { 120 96 }
;; 96 succs { 120 97 }
;; 97 succs { 120 98 }
;; 98 succs { 120 99 }
;; 99 succs { 120 100 }
;; 100 succs { 120 101 }
;; 101 succs { 120 102 }
;; 102 succs { 120 103 }
;; 103 succs { 120 104 }
;; 104 succs { 120 105 }
;; 105 succs { 120 106 }
;; 106 succs { 120 107 }
;; 107 succs { 120 108 }
;; 108 succs { 120 109 }
;; 109 succs { 120 110 }
;; 110 succs { 120 111 }
;; 111 succs { 120 112 }
;; 112 succs { 120 113 }
;; 113 succs { 120 114 }
;; 114 succs { 120 115 }
;; 115 succs { 120 116 }
;; 116 succs { 120 117 }
;; 117 succs { 120 118 }
;; 118 succs { 1 }
;; 119 succs { 120 }
;; 120 succs { }
void PointerConstraint (struct ptb * ptable, struct ptb * ftable)
{
  struct gimple_array * D.258912;
  const char * D.258911;
  const char * D.258910;
  union tree_node * D.258909;
  union tree_node * D.258908;
  union tree_node * D.258907;
  union tree_node * D.258906;
  union tree_node * D.258905;
  union tree_node * D.258904;
  int pass;
  struct gimple * def_stmt;
  const char * name;
  struct gimple_array start;
  int colectCount;
  int count;
  struct tm * timeinfo;
  time_t rawtime;
  int allcolectCount;
  struct ptb * processtable;
  int Entrypoint;
  double time_used2;
  double time_used;
  struct timespec temp;
  struct cgraph_node * node;
  struct gimple_array start;
  struct gimple_array * used_stmt;
  struct timespec aend;
  struct timespec astart;
  bool retval.2021;
  bool retval.2020;
  bool retval.2019;
  bool retval.2018;
  bool iftmp.2017;
  bool retval.2016;
  bool retval.2015;
  bool iftmp.2014;
  bool retval.2013;
  bool retval.2012;
  bool retval.2011;
  bool retval.2010;
  bool iftmp.2009;
  bool retval.2008;

  <bb 2> :
  used_stmt = 0B;
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  clock_gettime (1, &astart);
  Entrypoint = 0;
  stderr.2001_1 = stderr;
  __builtin_fwrite ("start PointerConstraint\n", 1, 24, stderr.2001_1);

  <bb 3> :
  pointtablecount.2002_2 = pointtablecount;
  stderr.2003_3 = stderr;
  fprintf (stderr.2003_3, "ptable point %d \n", pointtablecount.2002_2);

  <bb 4> :
  stderr.2004_4 = stderr;
  __builtin_fwrite ("===============The second stage : Mapping stmt=================\n", 1, 64, stderr.2004_4);

  <bb 5> :
  FunctionStmtMappingAssign (ptable, used_stmt);

  <bb 6> :
  processtable = ptable;
  stderr.2005_5 = stderr;
  __builtin_fwrite ("===============The second stage : Program slicing=================\n", 1, 67, stderr.2005_5);

  <bb 7> :
  allcolectCount = 0;
  GIMPLE_FREE_COUNT.2006_6 = GIMPLE_FREE_COUNT;
  if (GIMPLE_FREE_COUNT.2006_6 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  freeanysis.2007_7 = freeanysis;
  if (freeanysis.2007_7 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 95>; [INV]

  <bb 9> :
  _8 = processtable->size;
  if (_8 > 0)
    goto <bb 10>; [INV]
  else
    goto <bb 74>; [INV]

  <bb 10> :
  count = 0;
  goto <bb 73>; [INV]

  <bb 11> :
  _9 = processtable->target;
  _10 = _9->base.code;
  if (_10 == 26)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  processtable = processtable->next;
  // predicted unlikely by continue predictor.
  goto <bb 72>; [INV]

  <bb 13> :
  colectCount = 0;
  used_stmt = 0B;
  gimple_array::gimple_array (&start);
  start.stmt = 0B;
  used_stmt = &start;
  _11 = processtable->target;
  _12 = _11->base.code;
  if (_12 == 153)
    goto <bb 14>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 14> :
  _13 = processtable->target;
  def_stmt = _13->ssa_name.def_stmt;
  levelsize = 0;
  _14 = gimple_code (def_stmt);
  if (_14 != 20)
    goto <bb 16>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  _15 = gimple_code (def_stmt);
  if (_15 != 131)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.2009 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.2009 = 0;

  <bb 18> :
  retval.2008 = iftmp.2009;
  if (retval.2008 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 19> :
  pass = 0;
  _16 = gimple_code (def_stmt);
  retval.2010 = _16 == 8;
  if (retval.2010 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 20> :
  D.258904 = gimple_call_fn (def_stmt);

  <bb 21> :
  _17 = D.258904;
  _18 = _17->base.code;
  retval.2011 = _18 != 165;
  if (retval.2011 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  pass = 1;

  <bb 23> :
  _19 = gimple_code (def_stmt);
  retval.2012 = _19 == 6;
  if (retval.2012 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 24> :
  D.258905 = gimple_assign_rhs1 (def_stmt);

  <bb 25> :
  _20 = D.258905;
  _21 = _20->base.code;
  if (_21 != 165)
    goto <bb 26>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 26> :
  D.258906 = gimple_assign_rhs1 (def_stmt);

  <bb 27> :
  _22 = D.258906;
  _23 = _22->base.code;
  if (_23 != 36)
    goto <bb 28>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 28> :
  iftmp.2014 = 1;
  goto <bb 30>; [INV]

  <bb 29> :
  iftmp.2014 = 0;

  <bb 30> :
  retval.2013 = iftmp.2014;
  if (retval.2013 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  pass = 1;

  <bb 32> :
  _24 = processtable->target;
  _25 = _24->base.code;
  if (_25 != 131)
    goto <bb 33>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 33> :
  if (pass == 1)
    goto <bb 34>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 34> :
  if (def_stmt != 0B)
    goto <bb 35>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 35> :
  _26 = gimple_code (def_stmt);
  retval.2015 = _26 == 8;
  if (retval.2015 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 36> :
  D.258907 = gimple_call_fn (def_stmt);

  <bb 37> :
  _27 = D.258907;
  if (_27 != 0B)
    goto <bb 38>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 38> :
  D.258908 = gimple_call_fndecl (def_stmt);

  <bb 39> :
  _28 = D.258908;
  if (_28 != 0B)
    goto <bb 40>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 40> :
  iftmp.2017 = 1;
  goto <bb 42>; [INV]

  <bb 41> :
  iftmp.2017 = 0;

  <bb 42> :
  retval.2016 = iftmp.2017;
  if (retval.2016 != 0)
    goto <bb 43>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 43> :
  D.258909 = gimple_call_fn (def_stmt);

  <bb 44> :
  _29 = D.258909;
  D.258910 = get_name (_29);

  <bb 45> :
  name = D.258910;
  if (name != 0B)
    goto <bb 46>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 46> :
  _30 = strcmp (name, "malloc");
  if (_30 != 0)
    goto <bb 47>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 47> :
  _31 = processtable->target;
  _32 = processtable->target;
  Prenew_search_imm_use (used_stmt, _32, _31);
  goto <bb 49>; [INV]

  <bb 48> :
  _33 = processtable->target;
  _34 = processtable->target;
  _35 = processtable->last_stmt;
  Varnew_search_imm_use (used_stmt, _35, _34, _33);

  <bb 49> :
  _36 = processtable->target;
  now_tree = _36;
  _37 = processtable->target;
  _38 = processtable->target;
  new_search_imm_use (used_stmt, _38, _37);

  <bb 50> :
  _39 = processtable->target;
  _40 = processtable->target;
  _41 = processtable->last_stmt;
  set_gimple_array (used_stmt, _41, _40, _39, 0B);

  <bb 51> :
  _42 = used_stmt->target;
  _43 = _42->base.code;
  _44 = (tree_code) _43;
  D.258911 = get_tree_code_name (_44);

  <bb 52> :
  _45 = D.258911;
  _46 = strcmp (_45, "<invalid tree code>");
  retval.2018 = _46 == 0;
  if (retval.2018 != 0)
    goto <bb 53>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 53> :
  processtable = processtable->next;
  // predicted unlikely by continue predictor.
  goto <bb 72>; [INV]

  <bb 54> :
  goto <bb 56>; [INV]

  <bb 55> :
  colectCount = colectCount + 1;
  std::vector<gimple*>::pop_back (&new_gimple_array);

  <bb 56> :
  _47 = std::vector<gimple*>::size (&new_gimple_array);
  retval.2019 = _47 != 0;
  if (retval.2019 != 0)
    goto <bb 55>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 57> :
  goto <bb 59>; [INV]

  <bb 58> :
  std::vector<tree_node*>::pop_back (&new_gimpletree_array);

  <bb 59> :
  _48 = std::vector<tree_node*>::size (&new_gimpletree_array);
  retval.2020 = _48 != 0;
  if (retval.2020 != 0)
    goto <bb 58>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 60> :
  treeGimpleArray.2022_49 = treeGimpleArray;
  _50 = &processtable->target;
  D.258912 = hash_map<tree_node*, gimple_array>::get (treeGimpleArray.2022_49, _50);

  <bb 61> :
  _51 = D.258912;
  retval.2021 = _51 != 0B;
  if (retval.2021 != 0)
    goto <bb 62>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 62> :
  processtable = processtable->next;
  // predicted unlikely by continue predictor.
  goto <bb 72>; [INV]

  <bb 63> :
  treeGimpleArray.2023_52 = treeGimpleArray;
  _53 = &processtable->target;
  hash_map<tree_node*, gimple_array>::put (treeGimpleArray.2023_52, _53, used_stmt);

  <bb 64> :
  Entrypoint = Entrypoint + 1;
  stderr.2024_54 = stderr;
  __builtin_fwrite ("=============== *this point analyzable =================\n", 1, 57, stderr.2024_54);

  <bb 65> :
  _55 = processtable->last_stmt;
  debug (_55);

  <bb 66> :
  stderr.2025_56 = stderr;
  fprintf (stderr.2025_56, "=============== program slcing stmt count:%d=================\n", colectCount);

  <bb 67> :
  allcolectCount = allcolectCount + colectCount;
  _57 = processtable->last_stmt;
  _58 = gimple_location_safe (_57);
  warning_at (_58, 0, "use location");

  <bb 68> :
  stderr.2026_59 = stderr;
  __builtin_fwrite ("========================================================\n", 1, 57, stderr.2026_59);

  <bb 69> :
  _60 = processtable->next;
  _61 = _60->target;
  if (_61 == 0B)
    goto <bb 70>; [INV]
  else
    goto <bb 71>; [INV]

  <bb 70> :
  start = {CLOBBER};
  goto <bb 74>; [INV]

  <bb 71> :
  processtable = processtable->next;
  start = {CLOBBER};
  goto <bb 73>; [INV]

  <bb 72> :
  start = {CLOBBER};

  <bb 73> :
  _62 = processtable->next;
  if (_62 != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 74>; [INV]

  <bb 74> :
  FunctionStmtMappingRet (ptable, ftable, used_stmt);

  <bb 75> :
  stderr.2027_63 = stderr;
  __builtin_fwrite ("===============The second stage : build fucntion type=================\n", 1, 71, stderr.2027_63);

  <bb 76> :
  stderr.2028_64 = stderr;
  __builtin_fwrite ("\x1b[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.2028_64);

  <bb 77> :
  stderr.2029_65 = stderr;
  __builtin_fwrite ("\x1b[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.2029_65);

  <bb 78> :
  stderr.2030_66 = stderr;
  __builtin_fwrite ("    =()=\n", 1, 9, stderr.2030_66);

  <bb 79> :
  stderr.2031_67 = stderr;
  __builtin_fwrite (" ,/\'_||_\n", 1, 9, stderr.2031_67);

  <bb 80> :
  stderr.2032_68 = stderr;
  __builtin_fwrite ("  (___  `.\n", 1, 11, stderr.2032_68);

  <bb 81> :
  stderr.2033_69 = stderr;
  __builtin_fwrite (" ./  `==\'\n", 1, 10, stderr.2033_69);

  <bb 82> :
  stderr.2034_70 = stderr;
  __builtin_fwrite ("      |||\n", 1, 10, stderr.2034_70);

  <bb 83> :
  stderr.2035_71 = stderr;
  __builtin_fwrite ("      |||\n", 1, 10, stderr.2035_71);

  <bb 84> :
  stderr.2036_72 = stderr;
  __builtin_fwrite ("      |||\n", 1, 10, stderr.2036_72);

  <bb 85> :
  stderr.2037_73 = stderr;
  __builtin_fwrite ("      |||\n", 1, 10, stderr.2037_73);

  <bb 86> :
  stderr.2038_74 = stderr;
  __builtin_fwrite ("\x1b[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.2038_74);

  <bb 87> :
  stderr.2039_75 = stderr;
  __builtin_fwrite ("\x1b[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.2039_75);

  <bb 88> :
  clock_gettime (1, &aend);
  temp = diff (astart, aend);

  <bb 89> :
  _76 = temp.tv_sec;
  _77 = (double) _76;
  _78 = temp.tv_nsec;
  _79 = (double) _78;
  _80 = _79 / 1.0e+9;
  time_used = _77 + _80;
  stderr.2040_81 = stderr;
  __builtin_fwrite ("\n=============== The third stage : Start detection  =================\n", 1, 70, stderr.2040_81);

  <bb 90> :
  dump_fucntion (node, ptable, used_stmt);

  <bb 91> :
  stderr.2041_82 = stderr;
  __builtin_fwrite ("\n=============== The third stage : detection  End=================\n", 1, 67, stderr.2041_82);

  <bb 92> :
  clock_gettime (1, &aend);
  temp = diff (astart, aend);

  <bb 93> :
  _83 = temp.tv_sec;
  _84 = (double) _83;
  _85 = temp.tv_nsec;
  _86 = (double) _85;
  _87 = _86 / 1.0e+9;
  time_used2 = _84 + _87;
  printfBasicblock ();

  <bb 94> :
  goto <bb 96>; [INV]

  <bb 95> :
  stderr.2042_88 = stderr;
  __builtin_fwrite ("\x1b[40;41m GIMPLE STMT NO FREE STMT\x1b[0m\n", 1, 38, stderr.2042_88);

  <bb 96> :
  time (&rawtime);
  timeinfo = localtime (&rawtime);
  stderr.2043_89 = stderr;
  __builtin_fwrite ("\x1b[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.2043_89);

  <bb 97> :
  stderr.2044_90 = stderr;
  __builtin_fwrite ("\x1b[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.2044_90);

  <bb 98> :
  stderr.2045_91 = stderr;
  __builtin_fwrite ("    =()=\n", 1, 9, stderr.2045_91);

  <bb 99> :
  stderr.2046_92 = stderr;
  __builtin_fwrite (" ,/\'_||_\n", 1, 9, stderr.2046_92);

  <bb 100> :
  stderr.2047_93 = stderr;
  __builtin_fwrite ("  (___  `.\n", 1, 11, stderr.2047_93);

  <bb 101> :
  stderr.2048_94 = stderr;
  __builtin_fwrite (" ./  `==\'\n", 1, 10, stderr.2048_94);

  <bb 102> :
  stderr.2049_95 = stderr;
  __builtin_fwrite ("                   \n", 1, 20, stderr.2049_95);

  <bb 103> :
  stderr.2050_96 = stderr;
  __builtin_fwrite ("    ~~~~~~~~~~~  \n", 1, 18, stderr.2050_96);

  <bb 104> :
  stderr.2051_97 = stderr;
  __builtin_fwrite (" ~~~~~~\n", 1, 8, stderr.2051_97);

  <bb 105> :
  stderr.2052_98 = stderr;
  __builtin_fwrite ("           ~~~~~~~\n", 1, 19, stderr.2052_98);

  <bb 106> :
  GIMPLE_MALLOC_COUNT.2053_99 = GIMPLE_MALLOC_COUNT;
  stderr.2054_100 = stderr;
  fprintf (stderr.2054_100, "\x1b[40;34m    gimple malloc count : %d \x1b[0m\n", GIMPLE_MALLOC_COUNT.2053_99);

  <bb 107> :
  GIMPLE_FREE_COUNT.2055_101 = GIMPLE_FREE_COUNT;
  stderr.2056_102 = stderr;
  fprintf (stderr.2056_102, "\x1b[40;34m    gimple free   count : %d \x1b[0m\n", GIMPLE_FREE_COUNT.2055_101);

  <bb 108> :
  pointtablecount.2057_103 = pointtablecount;
  stderr.2058_104 = stderr;
  fprintf (stderr.2058_104, "\x1b[40;34m    all ptable point : %d \x1b[0m\n", pointtablecount.2057_103);

  <bb 109> :
  stderr.2059_105 = stderr;
  fprintf (stderr.2059_105, "\x1b[40;34m    analyzable ptable point : %d \x1b[0m\n", Entrypoint);

  <bb 110> :
  stderr.2060_106 = stderr;
  fprintf (stderr.2060_106, "\x1b[40;34m    analyzable ptable all point stmt : %d \x1b[0m\n", allcolectCount);

  <bb 111> :
  totalsize.2061_107 = totalsize;
  _108 = (double) totalsize.2061_107;
  _109 = _108 * 9.99999999999999954748111825886258685613938723690807819366e-7;
  stderr.2062_110 = stderr;
  fprintf (stderr.2062_110, "\x1b[40;34m    used_stmt array stack totalsize of : %f mb\x1b[0m\n", _109);

  <bb 112> :
  stderr.2063_111 = stderr;
  fprintf (stderr.2063_111, "\x1b[40;34m    collect time: : %f s \x1b[0m\n", time_used);

  <bb 113> :
  stderr.2064_112 = stderr;
  fprintf (stderr.2064_112, "\x1b[40;34m    algorithm time: %f s \x1b[0m\n", time_used2);

  <bb 114> :
  gimplestmt_count.2065_113 = gimplestmt_count;
  stderr.2066_114 = stderr;
  fprintf (stderr.2066_114, "\x1b[40;34m    gimple stmt count : : %d \x1b[0m\n", gimplestmt_count.2065_113);

  <bb 115> :
  _115 = asctime (timeinfo);
  stderr.2067_116 = stderr;
  fprintf (stderr.2067_116, "\x1b[40;34m    this report analysis in %s \x1b[0m\n", _115);

  <bb 116> :
  stderr.2068_117 = stderr;
  __builtin_fwrite ("\x1b[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.2068_117);

  <bb 117> :
  stderr.2069_118 = stderr;
  __builtin_fwrite ("\x1b[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK\x1b[0m\n", 1, 68, stderr.2069_118);

  <bb 118> :
  astart = {CLOBBER};
  aend = {CLOBBER};
  start = {CLOBBER};
  temp = {CLOBBER};
  rawtime = {CLOBBER};
  return;

  <bb 119> :
<L77>:
  start = {CLOBBER};
  resx 2

  <bb 120> :
<L78>:
  astart = {CLOBBER};
  aend = {CLOBBER};
  start = {CLOBBER};
  temp = {CLOBBER};
  rawtime = {CLOBBER};
  resx 1

}



;; Function std::vector<gimple*>::pop_back (_ZNSt6vectorIP6gimpleSaIS1_EE8pop_backEv, funcdef_no=7860, decl_uid=183674, cgraph_uid=4492, symbol_order=5281)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<gimple*>::pop_back (struct vector * const this)
{
  <bb 2> :
  _1 = this->D.183984._M_impl.D.183340._M_finish;
  _2 = _1 + 18446744073709551608;
  this->D.183984._M_impl.D.183340._M_finish = _2;
  _3 = this->D.183984._M_impl.D.183340._M_finish;
  _4 = &this->D.183984._M_impl;
  std::allocator_traits<std::allocator<gimple*> >::destroy<gimple*> (_4, _3);
  return;

}



;; Function std::allocator_traits<std::allocator<gimple*> >::destroy<gimple*> (_ZNSt16allocator_traitsISaIP6gimpleEE7destroyIS1_EEvRS2_PT_, funcdef_no=8842, decl_uid=216550, cgraph_uid=5474, symbol_order=6267)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<gimple*> >::destroy<gimple*> (struct allocator_type & __a, struct gimple * * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple*>::destroy<gimple*> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple*>::destroy<gimple*> (_ZN9__gnu_cxx13new_allocatorIP6gimpleE7destroyIS2_EEvPT_, funcdef_no=9721, decl_uid=230599, cgraph_uid=6353, symbol_order=7146)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple*>::destroy<gimple*> (struct new_allocator * const this, struct gimple * * __p)
{
  <bb 2> :
  *__p = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, gimple_array>::put (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7861, decl_uid=190130, cgraph_uid=4493, symbol_order=5282)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
bool hash_map<tree_node*, gimple_array>::put (struct hash_map * const this, union tree_node * const & k, const struct gimple_array & v)
{
  bool D.258925;
  struct hash_entry * D.258924;
  unsigned int D.258923;
  bool ins;
  struct hash_entry * e;
  bool D.258921;
  void * D.216690;
  void * D.216689;

  <bb 2> :
  _1 = &this->m_table;
  D.258923 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::hash (k);
  _2 = D.258923;
  D.258924 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.258924;
  D.258925 = hash_map<tree_node*, gimple_array>::hash_entry::is_empty (e);
  ins = D.258925;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.216689 = &e->m_value;
  D.216690 = operator new (48, D.216689);
  MEM[(struct gimple_array *)D.216690] = *v;
  goto <bb 5>; [INV]

  <bb 4> :
  e->m_value = *v;

  <bb 5> :
  D.258921 = ~ins;

  <bb 6> :
<L3>:
  return D.258921;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8843, decl_uid=190285, cgraph_uid=5475, symbol_order=6268)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, union tree_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.258975;
  bool D.258974;
  bool D.258973;
  bool D.258972;
  bool D.258971;
  bool D.258970;
  struct value_type * D.258969;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.2075;
  bool retval.2074;
  bool retval.2073;
  bool retval.2072;
  bool retval.2071;
  bool retval.2070;
  struct value_type * D.258931;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 56;
  entry = _11 + _13;
  size = this->m_size;
  D.258970 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.2070 = D.258970;
  if (retval.2070 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.258971 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.2071 = D.258971;
  if (retval.2071 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 56;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.258972 = hash_map<tree_node*, gimple_array>::hash_entry::equal (entry, comparable);
  retval.2072 = D.258972;
  if (retval.2072 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 56;
  D.258931 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 56;
  entry = _24 + _26;
  D.258973 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.2073 = D.258973;
  if (retval.2073 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.258974 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.2074 = D.258974;
  if (retval.2074 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 56;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.258975 = hash_map<tree_node*, gimple_array>::hash_entry::equal (entry, comparable);
  retval.2075 = D.258975;
  if (retval.2075 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 56;
  D.258931 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.258931 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.258931 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 56;
  D.258931 = _37 + _39;

  <bb 27> :
<L37>:
  return D.258931;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9722, decl_uid=190366, cgraph_uid=6354, symbol_order=7147)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.259006;
  unsigned int D.259005;
  bool D.259004;
  bool D.259003;
  struct mem_alloc_description & D.259002;
  struct value_type * D.259001;
  unsigned int D.259000;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.238942;
  void * D.238941;
  struct hash_entry * D.238967;
  bool iftmp.2079;
  bool retval.2078;
  bool iftmp.2077;
  bool retval.2076;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 56;
  olimit = oentries + _1;
  elts = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2077 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2077 = 0;

  <bb 6> :
  retval.2076 = iftmp.2077;
  if (retval.2076 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.259000 = hash_table_higher_prime_index (_5);
  nindex = D.259000;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.259001 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.259001;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.259003 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.259003;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.259004 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.259004;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.2079 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.2079 = 0;

  <bb 15> :
  retval.2078 = iftmp.2079;
  if (retval.2078 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.259005 = hash_map<tree_node*, gimple_array>::hash_entry::hash (x);
  _16 = D.259005;
  D.259006 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.259006;
  D.238967 = std::move<hash_map<tree_node*, gimple_array>::hash_entry&> (x);
  D.238941 = q;
  D.238942 = operator new (56, D.238941);
  MEM[(struct value_type *)D.238942] = *D.238967;

  <bb 17> :
  p = p + 56;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10305, decl_uid=190261, cgraph_uid=6937, symbol_order=7734)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.259007;

  <bb 2> :
  D.259007 = this->m_size;

  <bb 3> :
<L0>:
  return D.259007;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10306, decl_uid=190263, cgraph_uid=6938, symbol_order=7735)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.259009;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.259009 = _1 - _2;

  <bb 3> :
<L0>:
  return D.259009;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10307, decl_uid=190363, cgraph_uid=6939, symbol_order=7736)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.2080;
  bool D.259011;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2080 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2080 = 0;

  <bb 6> :
  D.259011 = iftmp.2080;

  <bb 7> :
<L4>:
  return D.259011;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9255, decl_uid=190353, cgraph_uid=5887, symbol_order=6680)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.259033;
  struct value_type * D.259032;
  struct mem_alloc_description & D.259031;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.259029;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.259032 = xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_alloc (n);
  nentries = D.259032;
  goto <bb 6>; [INV]

  <bb 5> :
  D.259033 = ggc_cleared_vec_alloc<hash_map<tree_node*, gimple_array>::hash_entry> (n);
  nentries = D.259033;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.259029 = nentries;

  <bb 9> :
<L14>:
  return D.259029;

}



;; Function xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=9985, decl_uid=218284, cgraph_uid=6617, symbol_order=7414)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.259036;
  struct hash_entry * D.259034;

  <bb 2> :
  D.259036 = xcalloc (count, 56);
  D.259034 = D.259036;

  <bb 3> :
<L0>:
  return D.259034;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, gimple_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=9986, decl_uid=234321, cgraph_uid=6618, symbol_order=7415)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, gimple_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.259043;
  struct hash_entry * D.259042;
  struct hash_entry * D.259040;
  bool retval.2081;

  <bb 2> :
  retval.2081 = need_finalization_p<hash_map<tree_node*, gimple_array>::hash_entry> ();
  if (retval.2081 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 56;
  D.259042 = ggc_internal_cleared_alloc (_1, finalize, 56, c);
  D.259040 = D.259042;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 56;
  D.259043 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.259040 = D.259043;

  <bb 5> :
<L2>:
  return D.259040;

}



;; Function finalize<hash_map<tree_node*, gimple_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10524, decl_uid=241774, cgraph_uid=7156, symbol_order=7953)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, gimple_array>::hash_entry> (void * p)
{
  <bb 2> :
  MEM[(struct hash_entry *)p] = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, gimple_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10523, decl_uid=241773, cgraph_uid=7155, symbol_order=7952)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, gimple_array>::hash_entry> ()
{
  bool D.259044;

  <bb 2> :
  D.259044 = 0;

  <bb 3> :
<L0>:
  return D.259044;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::hash (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10309, decl_uid=190189, cgraph_uid=6941, symbol_order=7738)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<tree_node*, gimple_array>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.259048;
  hashval_t D.259046;

  <bb 2> :
  _1 = &e->m_key;
  D.259048 = simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::hash (_1);
  D.259046 = D.259048;

  <bb 3> :
<L0>:
  return D.259046;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10308, decl_uid=190356, cgraph_uid=6940, symbol_order=7737)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.259061;
  bool D.259060;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.2083;
  struct value_type * D.259052;
  bool retval.2082;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 56;
  slot = _2 + _4;
  D.259060 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.2082 = D.259060;
  if (retval.2082 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.259052 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 56;
  slot = _8 + _10;
  D.259061 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.2083 = D.259061;
  if (retval.2083 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.259052 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.259052;

}



;; Function std::move<hash_map<tree_node*, gimple_array>::hash_entry&> (_ZSt4moveIRN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10310, decl_uid=238939, cgraph_uid=6942, symbol_order=7739)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<tree_node*, gimple_array>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.259062;

  <bb 2> :
  D.259062 = __t;

  <bb 3> :
<L0>:
  return D.259062;

}



;; Function xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8943, decl_uid=218286, cgraph_uid=5575, symbol_order=6368)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9723, decl_uid=190374, cgraph_uid=6355, symbol_order=7148)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<tree_node*, gimple_array>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::mark_empty (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10311, decl_uid=190201, cgraph_uid=6943, symbol_order=7740)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, gimple_array>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::mark_empty<hash_map<tree_node*, gimple_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::mark_empty<hash_map<tree_node*, gimple_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10743, decl_uid=243901, cgraph_uid=7375, symbol_order=8172)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::mark_empty<hash_map<tree_node*, gimple_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<tree_node>::mark_empty (_1);
  return;

}



;; Function detect (_Z6detectP15plugin_argumenti, funcdef_no=6844, decl_uid=203618, cgraph_uid=3551, symbol_order=4330)

Removing basic block 34
Removing basic block 39
Removing basic block 44
Removing basic block 68
Merging blocks 69 and 71
Removing basic block 104
Removing basic block 107
Removing basic block 110
Removing basic block 125
Removing basic block 163
Merging blocks 167 and 169
Removing basic block 172
;; 7 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 3
;;  header 112, latch 111
;;  depth 1, outer 0
;;  nodes: 112 111 110 108 109 76 82 81 80 79 78 77 75 74 73 72 107 106 85 105 104 96 103 101 102 99 100 97 98 95 86 94 93 92 88 91 90 89 87 84 83
;;
;; Loop 4
;;  header 106, latch 105
;;  depth 2, outer 3
;;  nodes: 106 105 104 96 103 101 102 99 100 97 98 95 86 94 93 92 88 91 90 89 87
;;
;; Loop 6
;;  header 104, latch 103
;;  depth 3, outer 4
;;  nodes: 104 103 101 102 99 100 97 98
;;
;; Loop 5
;;  header 92, latch 91
;;  depth 3, outer 4
;;  nodes: 92 91 90 89 93
;;
;; Loop 2
;;  header 56, latch 55
;;  depth 1, outer 0
;;  nodes: 56 55 54 53 59 58 57
;;
;; Loop 1
;;  header 44, latch 43
;;  depth 1, outer 0
;;  nodes: 44 43 42 38 41 40 39 34 37 36 35 30 33 32 31
;; 2 succs { 186 3 }
;; 3 succs { 164 4 }
;; 4 succs { 186 5 }
;; 5 succs { 165 6 }
;; 6 succs { 186 7 }
;; 7 succs { 166 8 }
;; 8 succs { 186 9 }
;; 9 succs { 167 10 }
;; 10 succs { 186 11 }
;; 11 succs { 168 12 }
;; 12 succs { 186 13 }
;; 13 succs { 169 14 }
;; 14 succs { 186 15 }
;; 15 succs { 170 16 }
;; 16 succs { 186 17 }
;; 17 succs { 171 18 }
;; 18 succs { 186 19 }
;; 19 succs { 172 20 }
;; 20 succs { 186 21 }
;; 21 succs { 173 22 }
;; 22 succs { 186 23 }
;; 23 succs { 174 24 }
;; 24 succs { 186 25 }
;; 25 succs { 175 26 }
;; 26 succs { 186 27 }
;; 27 succs { 176 28 }
;; 28 succs { 186 29 }
;; 29 succs { 44 }
;; 30 succs { 31 34 }
;; 31 succs { 32 33 }
;; 32 succs { 34 }
;; 33 succs { 34 }
;; 34 succs { 35 38 }
;; 35 succs { 36 37 }
;; 36 succs { 38 }
;; 37 succs { 38 }
;; 38 succs { 39 42 }
;; 39 succs { 40 41 }
;; 40 succs { 42 }
;; 41 succs { 42 }
;; 42 succs { 186 43 }
;; 43 succs { 44 }
;; 44 succs { 30 45 }
;; 45 succs { 46 67 }
;; 46 succs { 180 47 }
;; 47 succs { 179 48 }
;; 48 succs { 179 49 }
;; 49 succs { 50 52 }
;; 50 succs { 179 51 }
;; 51 succs { 63 }
;; 52 succs { 56 }
;; 53 succs { 177 54 }
;; 54 succs { 177 55 }
;; 55 succs { 177 56 }
;; 56 succs { 177 57 }
;; 57 succs { 177 58 }
;; 58 succs { 177 59 }
;; 59 succs { 53 60 }
;; 60 succs { 177 61 }
;; 61 succs { 179 62 }
;; 62 succs { 63 }
;; 63 succs { 66 64 }
;; 64 succs { 65 }
;; 65 succs { 67 }
;; 66 succs { 156 }
;; 67 succs { 186 68 }
;; 68 succs { 186 69 }
;; 69 succs { 186 70 }
;; 70 succs { 186 71 }
;; 71 succs { 112 }
;; 72 succs { 184 73 }
;; 73 succs { 184 74 }
;; 74 succs { 184 75 }
;; 75 succs { 76 77 }
;; 76 succs { 109 }
;; 77 succs { 184 78 }
;; 78 succs { 184 79 }
;; 79 succs { 80 83 }
;; 80 succs { 184 81 }
;; 81 succs { 184 82 }
;; 82 succs { 109 }
;; 83 succs { 184 84 }
;; 84 succs { 183 85 }
;; 85 succs { 106 }
;; 86 succs { 87 95 }
;; 87 succs { 181 88 }
;; 88 succs { 92 }
;; 89 succs { 181 90 }
;; 90 succs { 181 91 }
;; 91 succs { 181 92 }
;; 92 succs { 181 93 }
;; 93 succs { 89 94 }
;; 94 succs { 95 }
;; 95 succs { 183 96 }
;; 96 succs { 104 }
;; 97 succs { 98 99 }
;; 98 succs { 182 99 }
;; 99 succs { 100 101 }
;; 100 succs { 182 101 }
;; 101 succs { 102 103 }
;; 102 succs { 182 103 }
;; 103 succs { 104 }
;; 104 succs { 97 105 }
;; 105 succs { 106 }
;; 106 succs { 86 107 }
;; 107 succs { 183 108 }
;; 108 succs { 110 }
;; 109 succs { 110 }
;; 110 succs { 186 111 }
;; 111 succs { 112 }
;; 112 succs { 72 113 }
;; 113 succs { 186 114 }
;; 114 succs { 186 115 }
;; 115 succs { 116 117 }
;; 116 succs { 186 117 }
;; 117 succs { 118 119 }
;; 118 succs { 119 }
;; 119 succs { 120 121 }
;; 120 succs { 121 }
;; 121 succs { 122 123 }
;; 122 succs { 123 }
;; 123 succs { 124 125 }
;; 124 succs { 125 }
;; 125 succs { 126 127 }
;; 126 succs { 127 }
;; 127 succs { 128 129 }
;; 128 succs { 129 }
;; 129 succs { 130 131 }
;; 130 succs { 131 }
;; 131 succs { 132 133 }
;; 132 succs { 133 }
;; 133 succs { 134 135 }
;; 134 succs { 135 }
;; 135 succs { 136 137 }
;; 136 succs { 137 }
;; 137 succs { 138 139 }
;; 138 succs { 139 }
;; 139 succs { 140 141 }
;; 140 succs { 141 }
;; 141 succs { 142 143 }
;; 142 succs { 143 }
;; 143 succs { 186 144 }
;; 144 succs { 186 145 }
;; 145 succs { 185 146 }
;; 146 succs { 147 154 }
;; 147 succs { 185 148 }
;; 148 succs { 185 149 }
;; 149 succs { 185 150 }
;; 150 succs { 185 151 }
;; 151 succs { 185 152 }
;; 152 succs { 185 153 }
;; 153 succs { 185 155 }
;; 154 succs { 185 155 }
;; 155 succs { 156 }
;; 156 succs { 158 157 }
;; 157 succs { 159 }
;; 158 succs { 159 }
;; 159 succs { 162 160 }
;; 160 succs { 161 }
;; 161 succs { 163 }
;; 162 succs { 163 }
;; 163 succs { 1 }
;; 164 succs { 186 }
;; 165 succs { 186 }
;; 166 succs { 186 }
;; 167 succs { 186 }
;; 168 succs { 186 }
;; 169 succs { 186 }
;; 170 succs { 186 }
;; 171 succs { 186 }
;; 172 succs { 186 }
;; 173 succs { 186 }
;; 174 succs { 186 }
;; 175 succs { 186 }
;; 176 succs { 186 }
;; 177 succs { 178 }
;; 178 succs { 179 }
;; 179 succs { 180 }
;; 180 succs { 186 }
;; 181 succs { 183 }
;; 182 succs { 183 }
;; 183 succs { 184 }
;; 184 succs { 186 }
;; 185 succs { 186 }
;; 186 succs { 187 }
;; 187 succs { 188 }
;; 188 succs { }
void detect (struct plugin_argument * argv, int argc)
{
  int finally_tmp.2147;
  int finally_tmp.2146;
  struct __ostream_type & D.259233;
  struct basic_ostream & D.259232;
  struct __ostream_type & D.259231;
  struct basic_ostream & D.259230;
  bool D.259229;
  struct cgraph_node * D.259228;
  bool D.259221;
  struct function * D.259220;
  bool D.259219;
  const char * D.259218;
  struct cgraph_node * D.259217;
  int finally_tmp.2145;
  bool D.259205;
  struct __istream_type & D.259204;
  struct basic_istream & D.259203;
  bool D.259202;
  void * D.259200;
  void * D.259198;
  void * D.259196;
  void * D.259194;
  void * D.259192;
  void * D.259190;
  void * D.259188;
  void * D.259186;
  void * D.259184;
  void * D.259182;
  void * D.259180;
  void * D.259178;
  void * D.259176;
  struct gimple * gc;
  struct gimple_stmt_iterator gsi;
  struct edge_iterator ei;
  struct edge_def * e;
  struct Graph DFS;
  int score;
  struct string name;
  struct ifstream ifs;
  int i;
  struct ofstream myfile;
  struct timevar_time_def now;
  double time_used;
  struct timespec temp;
  struct timespec end;
  struct timespec start;
  double s;
  struct cgraph_edge * e;
  struct basic_block_def * bb;
  struct function * fn;
  struct function * ofun;
  union tree_node * attr;
  union tree_node * ptr;
  struct breakpoint getbp;
  unsigned int i;
  const int N;
  struct var_points_to vpt;
  struct cgraph_node * node;
  struct timeval stime;
  struct timeval utime;
  struct rusage ru;
  bool retval.2143;
  struct hash_map * function_relate_collect.2142;
  struct hash_map * function_graph_collect.2141;
  struct hash_map * function_free_collect.2140;
  struct hash_map * function_path_collect.2139;
  struct hash_map * function_pthread_exit_collect.2138;
  struct hash_map * function_pthread_detched_collect.2137;
  struct hash_map * pthread_attr_setdetachstates.2136;
  struct hash_map * function_assign_collect.2135;
  struct hash_map * function_return_collect.2134;
  struct hash_map * fDFS.2133;
  struct hash_map * syminfo.2132;
  struct hash_map * treeGimpleArray.2131;
  struct hash_map * tvpt.2130;
  bool retval.2120;
  bool retval.2118;
  bool retval.2116;
  bool retval.2114;
  bool retval.2112;
  bool retval.2101;
  struct __istream_type & D.259092;
  bool retval.2095;
  bool retval.2091;
  bool retval.2087;
  bool retval.2086;
  bool retval.2085;
  void * D.205240;
  void * D.205239;
  void * D.204868;
  void * D.204867;
  void * D.204866;
  void * D.204865;
  void * D.204864;
  void * D.204863;
  void * D.204862;
  void * D.204861;
  void * D.204440;
  void * D.204439;
  void * D.204438;

  <bb 2> :
  var_points_to::var_points_to (&vpt);
  N = 100;
  breakpoint::breakpoint (&getbp);
  ipa = 1;
  D.259176 = operator new (48);

  <bb 3> :
  D.204438 = D.259176;
  hash_map<tree_node*, var_points_to>::hash_map (D.204438, 13, 0, 1, 0);

  <bb 4> :
  tvpt = D.204438;
  D.259178 = operator new (48);

  <bb 5> :
  D.204439 = D.259178;
  hash_map<tree_node*, gimple_array>::hash_map (D.204439, 13, 0, 1, 0);

  <bb 6> :
  treeGimpleArray = D.204439;
  D.259180 = operator new (48);

  <bb 7> :
  D.204440 = D.259180;
  hash_map<basic_block_def*, symbolicinfo>::hash_map (D.204440, 13, 0, 1, 0);

  <bb 8> :
  syminfo = D.204440;
  D.259182 = operator new (48);

  <bb 9> :
  D.204861 = D.259182;
  hash_map<cgraph_node*, Graph>::hash_map (D.204861, 13, 0, 1, 0);

  <bb 10> :
  fDFS = D.204861;
  D.259184 = operator new (48);

  <bb 11> :
  D.204862 = D.259184;
  hash_map<tree_node*, function_return_array>::hash_map (D.204862, 13, 0, 1, 0);

  <bb 12> :
  function_return_collect = D.204862;
  D.259186 = operator new (48);

  <bb 13> :
  D.204863 = D.259186;
  hash_map<tree_node*, function_assign_array>::hash_map (D.204863, 13, 0, 1, 0);

  <bb 14> :
  function_assign_collect = D.204863;
  D.259188 = operator new (48);

  <bb 15> :
  D.204864 = D.259188;
  hash_map<tree_node*, pthread_attr_array>::hash_map (D.204864, 13, 0, 1, 0);

  <bb 16> :
  pthread_attr_setdetachstates = D.204864;
  D.259190 = operator new (48);

  <bb 17> :
  D.204865 = D.259190;
  hash_map<tree_node*, function_pthread_detched_array>::hash_map (D.204865, 13, 0, 1, 0);

  <bb 18> :
  function_pthread_detched_collect = D.204865;
  D.259192 = operator new (48);

  <bb 19> :
  D.204866 = D.259192;
  hash_map<tree_node*, function_pthread_exit_array>::hash_map (D.204866, 13, 0, 1, 0);

  <bb 20> :
  function_pthread_exit_collect = D.204866;
  D.259194 = operator new (48);

  <bb 21> :
  D.204867 = D.259194;
  hash_map<tree_node*, function_path_array>::hash_map (D.204867, 13, 0, 1, 0);

  <bb 22> :
  function_path_collect = D.204867;
  D.259196 = operator new (48);

  <bb 23> :
  D.204868 = D.259196;
  hash_map<tree_node*, function_free_array>::hash_map (D.204868, 13, 0, 1, 0);

  <bb 24> :
  function_free_collect = D.204868;
  D.259198 = operator new (48);

  <bb 25> :
  D.205239 = D.259198;
  hash_map<tree_node*, function_graph_array>::hash_map (D.205239, 13, 0, 1, 0);

  <bb 26> :
  function_graph_collect = D.205239;
  D.259200 = operator new (48);

  <bb 27> :
  D.205240 = D.259200;
  hash_map<tree_node*, function_relate_array>::hash_map (D.205240, 13, 0, 1, 0);

  <bb 28> :
  function_relate_collect = D.205240;
  stderr.2084_1 = stderr;
  __builtin_fwrite ("--------plugin argument-----------\n", 1, 35, stderr.2084_1);

  <bb 29> :
  i = 0;
  goto <bb 44>; [INV]

  <bb 30> :
  _2 = (long unsigned int) i;
  _3 = _2 * 16;
  _4 = argv + _3;
  _5 = _4->key;
  _6 = strcmp (_5, "debugmod");
  if (_6 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 31> :
  _7 = (long unsigned int) i;
  _8 = _7 * 16;
  _9 = argv + _8;
  _10 = _9->value;
  _11 = strtol (_10, 0B, 10);
  retval.2085 = _11 != 0;
  if (retval.2085 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 32> :
  debugmod = 1;
  goto <bb 34>; [INV]

  <bb 33> :
  debugmod = 0;

  <bb 34> :
  _12 = (long unsigned int) i;
  _13 = _12 * 16;
  _14 = argv + _13;
  _15 = _14->key;
  _16 = strcmp (_15, "vscode_extensionmod");
  if (_16 == 0)
    goto <bb 35>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 35> :
  _17 = (long unsigned int) i;
  _18 = _17 * 16;
  _19 = argv + _18;
  _20 = _19->value;
  _21 = strtol (_20, 0B, 10);
  retval.2086 = _21 != 0;
  if (retval.2086 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 36> :
  vscode_extensionmod = 1;
  goto <bb 38>; [INV]

  <bb 37> :
  vscode_extensionmod = 0;

  <bb 38> :
  _22 = (long unsigned int) i;
  _23 = _22 * 16;
  _24 = argv + _23;
  _25 = _24->key;
  _26 = strcmp (_25, "contextsentive");
  if (_26 == 0)
    goto <bb 39>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 39> :
  _27 = (long unsigned int) i;
  _28 = _27 * 16;
  _29 = argv + _28;
  _30 = _29->value;
  _31 = strtol (_30, 0B, 10);
  retval.2087 = _31 != 0;
  if (retval.2087 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 40> :
  contextsentive = 1;
  goto <bb 42>; [INV]

  <bb 41> :
  contextsentive = 0;

  <bb 42> :
  _32 = (long unsigned int) i;
  _33 = _32 * 16;
  _34 = argv + _33;
  _35 = _34->value;
  _36 = (long unsigned int) i;
  _37 = _36 * 16;
  _38 = argv + _37;
  _39 = _38->key;
  stderr.2088_40 = stderr;
  fprintf (stderr.2088_40, "%s %s\n", _39, _35);

  <bb 43> :
  i = i + 1;

  <bb 44> :
  if (i < argc)
    goto <bb 30>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 45> :
  vscode_extensionmod.2089_41 = vscode_extensionmod;
  if (vscode_extensionmod.2089_41 != 0)
    goto <bb 46>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 46> :
  std::basic_ifstream<char>::basic_ifstream (&ifs, "/root/.vscode-server/data/User/globalStorage/x213212.helloworld-sample/breakpoint.txt", 8);

  <bb 47> :
  stderr.2090_42 = stderr;
  __builtin_fwrite ("==============breakpoint=========\n", 1, 34, stderr.2090_42);

  <bb 48> :
  D.259202 = std::basic_ifstream<char>::is_open (&ifs);

  <bb 49> :
  _43 = D.259202;
  retval.2091 = ~_43;
  if (retval.2091 != 0)
    goto <bb 50>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 50> :
  stderr.2092_44 = stderr;
  __builtin_fwrite ("vscode_extensionmod is open ,no set breakpoint.\n", 1, 48, stderr.2092_44);

  <bb 51> :
  // predicted unlikely by early return (on trees) predictor.
  finally_tmp.2145 = 0;
  goto <bb 63>; [INV]

  <bb 52> :
  std::__cxx11::basic_string<char>::basic_string (&name);
  goto <bb 56>; [INV]

  <bb 53> :
  std::__cxx11::basic_string<char>::operator= (&getbp.name, &name);

  <bb 54> :
  score.2093_45 = score;
  getbp.line = score.2093_45;
  _46 = getbp.line;
  _47 = std::__cxx11::basic_string<char>::c_str (&getbp.name);
  stderr.2094_48 = stderr;
  fprintf (stderr.2094_48, "%s %d\n", _47, _46);

  <bb 55> :
  std::vector<breakpoint>::push_back (&vbreakpoint, &getbp);

  <bb 56> :
  D.259203 = std::operator>><char, std::char_traits<char>, std::allocator<char> > (&ifs.D.155214, &name);

  <bb 57> :
  _49 = D.259203;
  D.259204 = std::basic_istream<char>::operator>> (_49, &score);

  <bb 58> :
  D.259092 = D.259204;
  _50 = D.259092->_vptr.basic_istream;
  _51 = _50 + 18446744073709551592;
  _52 = MEM[(long int *)_51];
  _53 = (sizetype) _52;
  _54 = D.259092 + _53;
  D.259205 = std::basic_ios<char>::operator bool (_54);

  <bb 59> :
  retval.2095 = D.259205;
  if (retval.2095 != 0)
    goto <bb 53>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 60> :
  std::basic_ifstream<char>::close (&ifs);

  <bb 61> :
  std::__cxx11::basic_string<char>::~basic_string (&name);
  name = {CLOBBER};
  score = {CLOBBER};
  std::basic_ifstream<char>::close (&ifs);

  <bb 62> :
  finally_tmp.2145 = 1;

  <bb 63> :
  std::basic_ifstream<char>::~basic_ifstream (&ifs);
  if (finally_tmp.2145 == 1)
    goto <bb 64>; [INV]
  else
    goto <bb 66>; [INV]

  <bb 64> :
<L28>:

  <bb 65> :
  ifs = {CLOBBER};
  goto <bb 67>; [INV]

  <bb 66> :
  ifs = {CLOBBER};
  finally_tmp.2146 = 0;
  goto <bb 156>; [INV]

  <bb 67> :
  _55 = time (0B);
  _56 = (unsigned int) _55;
  _57 = getpid ();
  _58 = (unsigned int) _57;
  _59 = _56 + _58;
  srand (_59);
  stderr.2096_60 = stderr;
  __builtin_fwrite ("=======ipa_pta=========\n", 1, 24, stderr.2096_60);

  <bb 68> :
  init_table ();

  <bb 69> :
  s = 0.0;
  clock_gettime (1, &start);
  getrusage (0, &ru);
  utime = ru.ru_utime;
  stime = ru.ru_stime;
  stderr.2097_61 = stderr;
  __builtin_fwrite ("=============== The first stage : Point of interest stmt collect =================\n", 1, 83, stderr.2097_61);

  <bb 70> :
  symtab.2098_62 = symtab;
  D.259217 = symbol_table::first_defined_function (symtab.2098_62);

  <bb 71> :
  _63 = D.259217;
  node = _63;
  goto <bb 112>; [INV]

  <bb 72> :
  node.2099_64 = node;
  _65 = node.2099_64->D.97512.decl;
  D.259218 = get_name (_65);

  <bb 73> :
  _66 = D.259218;
  stderr.2100_67 = stderr;
  fprintf (stderr.2100_67, "=======node_fun:%s=========\n", _66);

  <bb 74> :
  node.2102_68 = node;
  _69 = node.2102_68->D.97512.decl;
  D.259219 = gimple_has_body_p (_69);

  <bb 75> :
  _70 = D.259219;
  retval.2101 = ~_70;
  if (retval.2101 != 0)
    goto <bb 76>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 76> :
  // predicted unlikely by continue predictor.
  goto <bb 109>; [INV]

  <bb 77> :
  node.2103_71 = node;
  D.259220 = cgraph_node::get_fun (node.2103_71);

  <bb 78> :
  _72 = D.259220;
  push_cfun (_72);

  <bb 79> :
  cfun.2104_73 = cfun;
  if (cfun.2104_73 == 0B)
    goto <bb 80>; [INV]
  else
    goto <bb 83>; [INV]

  <bb 80> :
  pop_cfun ();

  <bb 81> :
  free_dominance_info (1);

  <bb 82> :
  // predicted unlikely by continue predictor.
  goto <bb 109>; [INV]

  <bb 83> :
  calculate_dominance_info (1);

  <bb 84> :
  Graph::Graph (&DFS);
  cfun.2105_74 = cfun;
  _75 = cfun.2105_74->cfg;
  _76 = _75->x_last_basic_block;
  Graph::init_Graph (&DFS, _76);

  <bb 85> :
  cfun.2106_77 = cfun;
  _78 = cfun.2106_77->cfg;
  _79 = _78->x_entry_block_ptr;
  bb = _79->next_bb;
  goto <bb 106>; [INV]

  <bb 86> :
  cfun.2107_80 = cfun;
  _81 = cfun.2107_80->cfg;
  _82 = _81->x_exit_block_ptr;
  _83 = _82->prev_bb;
  if (bb != _83)
    goto <bb 87>; [INV]
  else
    goto <bb 95>; [INV]

  <bb 87> :
  _84 = bb->index;
  stderr.2108_85 = stderr;
  fprintf (stderr.2108_85, "node:= %d \n ", _84);

  <bb 88> :
  _86 = &bb->succs;
  ei = ei_start_1 (_86);
  goto <bb 92>; [INV]

  <bb 89> :
  e.2109_87 = e;
  _88 = e.2109_87->dest;
  _89 = _88->index;
  _90 = bb->index;
  Graph::addEdge (&DFS, _90, _89);

  <bb 90> :
  e.2110_91 = e;
  _92 = e.2110_91->dest;
  _93 = _92->index;
  stderr.2111_94 = stderr;
  fprintf (stderr.2111_94, "\tnext_branch :=%d\n", _93);

  <bb 91> :
  ei_next (&ei);

  <bb 92> :
  D.259221 = ei_cond (ei, &e);

  <bb 93> :
  retval.2112 = D.259221;
  if (retval.2112 != 0)
    goto <bb 89>; [INV]
  else
    goto <bb 94>; [INV]

  <bb 94> :
  e = {CLOBBER};
  ei = {CLOBBER};

  <bb 95> :
  fDFS.2113_95 = fDFS;
  hash_map<cgraph_node*, Graph>::put (fDFS.2113_95, &node, &DFS);

  <bb 96> :
  gsi = gsi_start_bb (bb); [return slot optimization]
  goto <bb 104>; [INV]

  <bb 97> :
  gc = gsi_stmt (gsi);
  retval.2114 = is_gimple_call (gc);
  if (retval.2114 != 0)
    goto <bb 98>; [INV]
  else
    goto <bb 99>; [INV]

  <bb 98> :
  node.2115_96 = node;
  collect_function_call (gc, node.2115_96, bb);

  <bb 99> :
  retval.2116 = is_gimple_assign (gc);
  if (retval.2116 != 0)
    goto <bb 100>; [INV]
  else
    goto <bb 101>; [INV]

  <bb 100> :
  node.2117_97 = node;
  collect_function_call (gc, node.2117_97, bb);

  <bb 101> :
  _98 = gimple_code (gc);
  retval.2118 = _98 == 10;
  if (retval.2118 != 0)
    goto <bb 102>; [INV]
  else
    goto <bb 103>; [INV]

  <bb 102> :
  node.2119_99 = node;
  collect_function_return (gc, node.2119_99, bb);

  <bb 103> :
  gsi_next (&gsi);

  <bb 104> :
  _100 = gsi_end_p (gsi);
  retval.2120 = ~_100;
  if (retval.2120 != 0)
    goto <bb 97>; [INV]
  else
    goto <bb 105>; [INV]

  <bb 105> :
  gsi = {CLOBBER};
  bb = bb->next_bb;

  <bb 106> :
  cfun.2121_101 = cfun;
  _102 = cfun.2121_101->cfg;
  _103 = _102->x_exit_block_ptr;
  if (bb != _103)
    goto <bb 86>; [INV]
  else
    goto <bb 107>; [INV]

  <bb 107> :
  pop_cfun ();

  <bb 108> :
  Graph::~Graph (&DFS);
  DFS = {CLOBBER};
  goto <bb 110>; [INV]

  <bb 109> :
  DFS = {CLOBBER};

  <bb 110> :
  symtab.2122_104 = symtab;
  node.2123_105 = node;
  D.259228 = symbol_table::next_defined_function (symtab.2122_104, node.2123_105);

  <bb 111> :
  _106 = D.259228;
  node = _106;

  <bb 112> :
  node.2124_107 = node;
  if (node.2124_107 != 0B)
    goto <bb 72>; [INV]
  else
    goto <bb 113>; [INV]

  <bb 113> :
  stderr.2125_108 = stderr;
  __builtin_fwrite ("=============== The first stage :  record fucntion =================\n", 1, 69, stderr.2125_108);

  <bb 114> :
  node.2126_109 = node;
  record_fucntion (node.2126_109);

  <bb 115> :
  ipa.2127_110 = ipa;
  if (ipa.2127_110 != 0)
    goto <bb 116>; [INV]
  else
    goto <bb 117>; [INV]

  <bb 116> :
  ftable.2128_111 = ftable;
  ptable.2129_112 = ptable;
  PointerConstraint (ptable.2129_112, ftable.2128_111);

  <bb 117> :
  tvpt.2130 = tvpt;
  if (tvpt.2130 != 0B)
    goto <bb 118>; [INV]
  else
    goto <bb 119>; [INV]

  <bb 118> :
  hash_map<tree_node*, var_points_to>::~hash_map (tvpt.2130);
  operator delete (tvpt.2130, 48);

  <bb 119> :
  treeGimpleArray.2131 = treeGimpleArray;
  if (treeGimpleArray.2131 != 0B)
    goto <bb 120>; [INV]
  else
    goto <bb 121>; [INV]

  <bb 120> :
  hash_map<tree_node*, gimple_array>::~hash_map (treeGimpleArray.2131);
  operator delete (treeGimpleArray.2131, 48);

  <bb 121> :
  syminfo.2132 = syminfo;
  if (syminfo.2132 != 0B)
    goto <bb 122>; [INV]
  else
    goto <bb 123>; [INV]

  <bb 122> :
  hash_map<basic_block_def*, symbolicinfo>::~hash_map (syminfo.2132);
  operator delete (syminfo.2132, 48);

  <bb 123> :
  fDFS.2133 = fDFS;
  if (fDFS.2133 != 0B)
    goto <bb 124>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 124> :
  hash_map<cgraph_node*, Graph>::~hash_map (fDFS.2133);
  operator delete (fDFS.2133, 48);

  <bb 125> :
  function_return_collect.2134 = function_return_collect;
  if (function_return_collect.2134 != 0B)
    goto <bb 126>; [INV]
  else
    goto <bb 127>; [INV]

  <bb 126> :
  hash_map<tree_node*, function_return_array>::~hash_map (function_return_collect.2134);
  operator delete (function_return_collect.2134, 48);

  <bb 127> :
  function_assign_collect.2135 = function_assign_collect;
  if (function_assign_collect.2135 != 0B)
    goto <bb 128>; [INV]
  else
    goto <bb 129>; [INV]

  <bb 128> :
  hash_map<tree_node*, function_assign_array>::~hash_map (function_assign_collect.2135);
  operator delete (function_assign_collect.2135, 48);

  <bb 129> :
  pthread_attr_setdetachstates.2136 = pthread_attr_setdetachstates;
  if (pthread_attr_setdetachstates.2136 != 0B)
    goto <bb 130>; [INV]
  else
    goto <bb 131>; [INV]

  <bb 130> :
  hash_map<tree_node*, pthread_attr_array>::~hash_map (pthread_attr_setdetachstates.2136);
  operator delete (pthread_attr_setdetachstates.2136, 48);

  <bb 131> :
  function_pthread_detched_collect.2137 = function_pthread_detched_collect;
  if (function_pthread_detched_collect.2137 != 0B)
    goto <bb 132>; [INV]
  else
    goto <bb 133>; [INV]

  <bb 132> :
  hash_map<tree_node*, function_pthread_detched_array>::~hash_map (function_pthread_detched_collect.2137);
  operator delete (function_pthread_detched_collect.2137, 48);

  <bb 133> :
  function_pthread_exit_collect.2138 = function_pthread_exit_collect;
  if (function_pthread_exit_collect.2138 != 0B)
    goto <bb 134>; [INV]
  else
    goto <bb 135>; [INV]

  <bb 134> :
  hash_map<tree_node*, function_pthread_exit_array>::~hash_map (function_pthread_exit_collect.2138);
  operator delete (function_pthread_exit_collect.2138, 48);

  <bb 135> :
  function_path_collect.2139 = function_path_collect;
  if (function_path_collect.2139 != 0B)
    goto <bb 136>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 136> :
  hash_map<tree_node*, function_path_array>::~hash_map (function_path_collect.2139);
  operator delete (function_path_collect.2139, 48);

  <bb 137> :
  function_free_collect.2140 = function_free_collect;
  if (function_free_collect.2140 != 0B)
    goto <bb 138>; [INV]
  else
    goto <bb 139>; [INV]

  <bb 138> :
  hash_map<tree_node*, function_free_array>::~hash_map (function_free_collect.2140);
  operator delete (function_free_collect.2140, 48);

  <bb 139> :
  function_graph_collect.2141 = function_graph_collect;
  if (function_graph_collect.2141 != 0B)
    goto <bb 140>; [INV]
  else
    goto <bb 141>; [INV]

  <bb 140> :
  hash_map<tree_node*, function_graph_array>::~hash_map (function_graph_collect.2141);
  operator delete (function_graph_collect.2141, 48);

  <bb 141> :
  function_relate_collect.2142 = function_relate_collect;
  if (function_relate_collect.2142 != 0B)
    goto <bb 142>; [INV]
  else
    goto <bb 143>; [INV]

  <bb 142> :
  hash_map<tree_node*, function_relate_array>::~hash_map (function_relate_collect.2142);
  operator delete (function_relate_collect.2142, 48);

  <bb 143> :
  clock_gettime (1, &end);
  temp = diff (start, end);

  <bb 144> :
  _113 = temp.tv_sec;
  _114 = (double) _113;
  _115 = temp.tv_nsec;
  _116 = (double) _115;
  _117 = _116 / 1.0e+9;
  time_used = _114 + _117;
  std::basic_ofstream<char>::basic_ofstream (&myfile, "time.txt", 16);

  <bb 145> :
  D.259229 = std::basic_ofstream<char>::is_open (&myfile);

  <bb 146> :
  retval.2143 = D.259229;
  if (retval.2143 != 0)
    goto <bb 147>; [INV]
  else
    goto <bb 154>; [INV]

  <bb 147> :
  D.259230 = std::operator<< <std::char_traits<char> > (&myfile.D.155383, "utime_used: ");

  <bb 148> :
  _118 = D.259230;
  D.259231 = std::basic_ostream<char>::operator<< (_118, time_used);

  <bb 149> :
  _119 = D.259231;
  std::operator<< <std::char_traits<char> > (_119, " s;\n");

  <bb 150> :
  D.259232 = std::operator<< <std::char_traits<char> > (&myfile.D.155383, "stime_used: ");

  <bb 151> :
  _120 = D.259232;
  D.259233 = std::basic_ostream<char>::operator<< (_120, time_used);

  <bb 152> :
  _121 = D.259233;
  std::operator<< <std::char_traits<char> > (_121, " s;\n");

  <bb 153> :
  std::basic_ofstream<char>::close (&myfile);
  goto <bb 155>; [INV]

  <bb 154> :
  stderr.2144_122 = stderr;
  __builtin_fwrite ("Unable to open file.\n", 1, 21, stderr.2144_122);

  <bb 155> :
  std::basic_ofstream<char>::~basic_ofstream (&myfile);
  finally_tmp.2146 = 1;

  <bb 156> :
  breakpoint::~breakpoint (&getbp);
  if (finally_tmp.2146 == 1)
    goto <bb 157>; [INV]
  else
    goto <bb 158>; [INV]

  <bb 157> :
<L112>:
  finally_tmp.2147 = 1;
  goto <bb 159>; [INV]

  <bb 158> :
<L113>:
  finally_tmp.2147 = 0;

  <bb 159> :
  var_points_to::~var_points_to (&vpt);
  if (finally_tmp.2147 == 1)
    goto <bb 160>; [INV]
  else
    goto <bb 162>; [INV]

  <bb 160> :
<L116>:

  <bb 161> :
  ru = {CLOBBER};
  utime = {CLOBBER};
  stime = {CLOBBER};
  node = {CLOBBER};
  vpt = {CLOBBER};
  getbp = {CLOBBER};
  start = {CLOBBER};
  end = {CLOBBER};
  temp = {CLOBBER};
  now = {CLOBBER};
  myfile = {CLOBBER};
  goto <bb 163>; [INV]

  <bb 162> :
  ru = {CLOBBER};
  utime = {CLOBBER};
  stime = {CLOBBER};
  node = {CLOBBER};
  vpt = {CLOBBER};
  getbp = {CLOBBER};
  start = {CLOBBER};
  end = {CLOBBER};
  temp = {CLOBBER};
  now = {CLOBBER};
  myfile = {CLOBBER};

  <bb 163> :
<L121>:
  return;

  <bb 164> :
<L122>:
  operator delete (D.204438, 48);
  resx 4

  <bb 165> :
<L123>:
  operator delete (D.204439, 48);
  resx 6

  <bb 166> :
<L124>:
  operator delete (D.204440, 48);
  resx 8

  <bb 167> :
<L125>:
  operator delete (D.204861, 48);
  resx 10

  <bb 168> :
<L126>:
  operator delete (D.204862, 48);
  resx 12

  <bb 169> :
<L127>:
  operator delete (D.204863, 48);
  resx 14

  <bb 170> :
<L128>:
  operator delete (D.204864, 48);
  resx 16

  <bb 171> :
<L129>:
  operator delete (D.204865, 48);
  resx 18

  <bb 172> :
<L130>:
  operator delete (D.204866, 48);
  resx 20

  <bb 173> :
<L131>:
  operator delete (D.204867, 48);
  resx 22

  <bb 174> :
<L132>:
  operator delete (D.204868, 48);
  resx 24

  <bb 175> :
<L133>:
  operator delete (D.205239, 48);
  resx 26

  <bb 176> :
<L134>:
  operator delete (D.205240, 48);
  resx 28

  <bb 177> :
<L135>:
  std::__cxx11::basic_string<char>::~basic_string (&name);
  resx 33

  <bb 178> :
<L136>:
  name = {CLOBBER};
  score = {CLOBBER};
  resx 32

  <bb 179> :
<L137>:
  std::basic_ifstream<char>::~basic_ifstream (&ifs);
  resx 31

  <bb 180> :
<L138>:
  ifs = {CLOBBER};
  resx 30

  <bb 181> :
<L139>:
  e = {CLOBBER};
  ei = {CLOBBER};
  resx 40

  <bb 182> :
<L140>:
  gsi = {CLOBBER};
  resx 42

  <bb 183> :
<L141>:
  Graph::~Graph (&DFS);
  resx 39

  <bb 184> :
<L142>:
  DFS = {CLOBBER};
  resx 38

  <bb 185> :
<L143>:
  std::basic_ofstream<char>::~basic_ofstream (&myfile);
  resx 59

  <bb 186> :
<L144>:
  breakpoint::~breakpoint (&getbp);
  resx 3

  <bb 187> :
<L145>:
  var_points_to::~var_points_to (&vpt);
  resx 2

  <bb 188> :
<L146>:
  ru = {CLOBBER};
  utime = {CLOBBER};
  stime = {CLOBBER};
  node = {CLOBBER};
  vpt = {CLOBBER};
  getbp = {CLOBBER};
  start = {CLOBBER};
  end = {CLOBBER};
  temp = {CLOBBER};
  now = {CLOBBER};
  myfile = {CLOBBER};
  resx 1

}



;; Function var_points_to::var_points_to (_ZN13var_points_toC2Ev, funcdef_no=6856, decl_uid=203695, cgraph_uid=3487, symbol_order=4266)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void var_points_to::var_points_to (struct var_points_to * const this)
{
  <bb 2> :
  _1 = &this->may_malloc_path;
  std::vector<std::vector<std::pair<fdecl, unsigned int> > >::vector (_1);
  return;

}



;; Function std::vector<std::vector<std::pair<fdecl, unsigned int> > >::vector (_ZNSt6vectorIS_ISt4pairI5fdecljESaIS2_EESaIS4_EEC2Ev, funcdef_no=6854, decl_uid=172413, cgraph_uid=3484, symbol_order=4263)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<std::vector<std::pair<fdecl, unsigned int> > >::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.172421;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_base (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EEC2Ev, funcdef_no=6852, decl_uid=171871, cgraph_uid=3481, symbol_order=4260)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EE12_Vector_implC2Ev, funcdef_no=7863, decl_uid=171763, cgraph_uid=4495, symbol_order=5284)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::allocator (this);
  _1 = &this->D.171766;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::allocator (_ZNSaISt6vectorISt4pairI5fdecljESaIS2_EEEC2Ev, funcdef_no=8846, decl_uid=171541, cgraph_uid=5478, symbol_order=6271)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::new_allocator (_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairI5fdecljESaIS4_EEEC2Ev, funcdef_no=9725, decl_uid=171470, cgraph_uid=6357, symbol_order=7150)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EE17_Vector_impl_dataC2Ev, funcdef_no=8849, decl_uid=171713, cgraph_uid=5481, symbol_order=6274)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function breakpoint::breakpoint (_ZN10breakpointC2Ev, funcdef_no=6863, decl_uid=203887, cgraph_uid=3494, symbol_order=4273)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void breakpoint::breakpoint (struct breakpoint * const this)
{
  <bb 2> :
  _1 = &this->name;
  std::__cxx11::basic_string<char>::basic_string (_1);
  return;

}



;; Function hash_map<tree_node*, var_points_to>::hash_map (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7878, decl_uid=204430, cgraph_uid=4510, symbol_order=5299)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, var_points_to>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8860, decl_uid=204389, cgraph_uid=5492, symbol_order=6285)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259251;
  unsigned int D.259250;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259250 = hash_table_higher_prime_index (size);
  size_prime_index = D.259250;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259251 = hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259251;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9730, decl_uid=204335, cgraph_uid=6362, symbol_order=7155)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.259267;
  struct value_type * D.259266;
  struct mem_alloc_description & D.259265;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.259263;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.259266 = xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_alloc (n);
  nentries = D.259266;
  goto <bb 6>; [INV]

  <bb 5> :
  D.259267 = ggc_cleared_vec_alloc<hash_map<tree_node*, var_points_to>::hash_entry> (n);
  nentries = D.259267;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.259263 = nentries;

  <bb 9> :
<L14>:
  return D.259263;

}



;; Function xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10314, decl_uid=218260, cgraph_uid=6946, symbol_order=7743)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.259270;
  struct hash_entry * D.259268;

  <bb 2> :
  D.259270 = xcalloc (count, 40);
  D.259268 = D.259270;

  <bb 3> :
<L0>:
  return D.259268;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, var_points_to>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10315, decl_uid=239297, cgraph_uid=6947, symbol_order=7744)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, var_points_to>::hash_entry> (size_t c)
{
  struct hash_entry * D.259277;
  struct hash_entry * D.259276;
  struct hash_entry * D.259274;
  bool retval.2148;

  <bb 2> :
  retval.2148 = need_finalization_p<hash_map<tree_node*, var_points_to>::hash_entry> ();
  if (retval.2148 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 40;
  D.259276 = ggc_internal_cleared_alloc (_1, finalize, 40, c);
  D.259274 = D.259276;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 40;
  D.259277 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.259274 = D.259277;

  <bb 5> :
<L2>:
  return D.259274;

}



;; Function finalize<hash_map<tree_node*, var_points_to>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10747, decl_uid=243922, cgraph_uid=7382, symbol_order=8179)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, var_points_to>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<tree_node*, var_points_to>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<tree_node*, var_points_to>::hash_entry::~hash_entry (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10749, decl_uid=246290, cgraph_uid=7380, symbol_order=8177)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, var_points_to>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  var_points_to::~var_points_to (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, var_points_to>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10746, decl_uid=243921, cgraph_uid=7378, symbol_order=8175)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, var_points_to>::hash_entry> ()
{
  bool D.259278;

  <bb 2> :
  D.259278 = 1;

  <bb 3> :
<L0>:
  return D.259278;

}



;; Function hash_map<tree_node*, gimple_array>::hash_map (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7881, decl_uid=190448, cgraph_uid=4513, symbol_order=5302)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, gimple_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8863, decl_uid=190407, cgraph_uid=5495, symbol_order=6288)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259281;
  unsigned int D.259280;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259280 = hash_table_higher_prime_index (size);
  size_prime_index = D.259280;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259281 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259281;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_map (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7884, decl_uid=196910, cgraph_uid=4516, symbol_order=5305)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8866, decl_uid=196869, cgraph_uid=5498, symbol_order=6291)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259283;
  unsigned int D.259282;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259282 = hash_table_higher_prime_index (size);
  size_prime_index = D.259282;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259283 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259283;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<cgraph_node*, Graph>::hash_map (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7887, decl_uid=204853, cgraph_uid=4519, symbol_order=5308)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8869, decl_uid=204812, cgraph_uid=5501, symbol_order=6294)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259285;
  unsigned int D.259284;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259284 = hash_table_higher_prime_index (size);
  size_prime_index = D.259284;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259285 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259285;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9731, decl_uid=204758, cgraph_uid=6363, symbol_order=7156)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.259301;
  struct value_type * D.259300;
  struct mem_alloc_description & D.259299;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.259297;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.259300 = xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_alloc (n);
  nentries = D.259300;
  goto <bb 6>; [INV]

  <bb 5> :
  D.259301 = ggc_cleared_vec_alloc<hash_map<cgraph_node*, Graph>::hash_entry> (n);
  nentries = D.259301;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.259297 = nentries;

  <bb 9> :
<L14>:
  return D.259297;

}



;; Function xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10317, decl_uid=218332, cgraph_uid=6949, symbol_order=7746)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.259304;
  struct hash_entry * D.259302;

  <bb 2> :
  D.259304 = xcalloc (count, 56);
  D.259302 = D.259304;

  <bb 3> :
<L0>:
  return D.259302;

}



;; Function ggc_cleared_vec_alloc<hash_map<cgraph_node*, Graph>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10318, decl_uid=239308, cgraph_uid=6950, symbol_order=7747)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<cgraph_node*, Graph>::hash_entry> (size_t c)
{
  struct hash_entry * D.259311;
  struct hash_entry * D.259310;
  struct hash_entry * D.259308;
  bool retval.2149;

  <bb 2> :
  retval.2149 = need_finalization_p<hash_map<cgraph_node*, Graph>::hash_entry> ();
  if (retval.2149 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 56;
  D.259310 = ggc_internal_cleared_alloc (_1, finalize, 56, c);
  D.259308 = D.259310;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 56;
  D.259311 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.259308 = D.259311;

  <bb 5> :
<L2>:
  return D.259308;

}



;; Function finalize<hash_map<cgraph_node*, Graph>::hash_entry> (_Z8finalizeIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10753, decl_uid=243931, cgraph_uid=7388, symbol_order=8185)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<cgraph_node*, Graph>::hash_entry> (void * p)
{
  <bb 2> :
  hash_map<cgraph_node*, Graph>::hash_entry::~hash_entry (p);
  return;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::~hash_entry (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryD2Ev, funcdef_no=10755, decl_uid=246313, cgraph_uid=7386, symbol_order=8183)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::hash_entry::~hash_entry (struct hash_entry * const this)
{
  <bb 2> :
  _1 = &this->m_value;
  Graph::~Graph (_1);
  *this = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<cgraph_node*, Graph>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10752, decl_uid=243930, cgraph_uid=7384, symbol_order=8181)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<cgraph_node*, Graph>::hash_entry> ()
{
  bool D.259312;

  <bb 2> :
  D.259312 = 1;

  <bb 3> :
<L0>:
  return D.259312;

}



;; Function hash_map<tree_node*, function_return_array>::hash_map (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7890, decl_uid=189919, cgraph_uid=4522, symbol_order=5311)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8872, decl_uid=189878, cgraph_uid=5504, symbol_order=6297)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259315;
  unsigned int D.259314;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259314 = hash_table_higher_prime_index (size);
  size_prime_index = D.259314;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259315 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259315;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_map (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7893, decl_uid=191080, cgraph_uid=4525, symbol_order=5314)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8875, decl_uid=191039, cgraph_uid=5507, symbol_order=6300)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259317;
  unsigned int D.259316;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259316 = hash_table_higher_prime_index (size);
  size_prime_index = D.259316;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259317 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259317;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_map (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7896, decl_uid=195010, cgraph_uid=4528, symbol_order=5317)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, pthread_attr_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8878, decl_uid=194969, cgraph_uid=5510, symbol_order=6303)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259319;
  unsigned int D.259318;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259318 = hash_table_higher_prime_index (size);
  size_prime_index = D.259318;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259319 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259319;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_map (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7899, decl_uid=193635, cgraph_uid=4531, symbol_order=5320)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8881, decl_uid=193594, cgraph_uid=5513, symbol_order=6306)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259321;
  unsigned int D.259320;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259320 = hash_table_higher_prime_index (size);
  size_prime_index = D.259320;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259321 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259321;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_map (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7902, decl_uid=194111, cgraph_uid=4534, symbol_order=5323)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8884, decl_uid=194070, cgraph_uid=5516, symbol_order=6309)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259323;
  unsigned int D.259322;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259322 = hash_table_higher_prime_index (size);
  size_prime_index = D.259322;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259323 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259323;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_path_array>::hash_map (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7905, decl_uid=192281, cgraph_uid=4537, symbol_order=5326)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8887, decl_uid=192240, cgraph_uid=5519, symbol_order=6312)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259325;
  unsigned int D.259324;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259324 = hash_table_higher_prime_index (size);
  size_prime_index = D.259324;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259325 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259325;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_free_array>::hash_map (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7908, decl_uid=192763, cgraph_uid=4540, symbol_order=5329)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8890, decl_uid=192722, cgraph_uid=5522, symbol_order=6315)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259327;
  unsigned int D.259326;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259326 = hash_table_higher_prime_index (size);
  size_prime_index = D.259326;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259327 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259327;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_map<tree_node*, function_graph_array>::hash_map (_ZN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EEC2Embbb, funcdef_no=7911, decl_uid=205231, cgraph_uid=4543, symbol_order=5332)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_graph_array>::hash_map (struct hash_map * const this, size_t n, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->m_table;
  _2 = (int) gather_mem_stats;
  _3 = (int) sanitize_eq_and_hash;
  _4 = (int) ggc;
  hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::hash_table (_1, n, _4, _3, _2, 1);
  return;

}



;; Function hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorEC2Embbb16mem_alloc_origin, funcdef_no=8893, decl_uid=205190, cgraph_uid=5525, symbol_order=6318)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::hash_table (struct hash_table * const this, size_t size, bool ggc, bool sanitize_eq_and_hash, bool gather_mem_stats, mem_alloc_origin origin)
{
  struct value_type * D.259329;
  unsigned int D.259328;
  unsigned int size_prime_index;

  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  this->m_n_elements = 0;
  this->m_n_deleted = 0;
  this->m_searches = 0;
  this->m_collisions = 0;
  this->m_ggc = ggc;
  this->m_sanitize_eq_and_hash = sanitize_eq_and_hash;
  D.259328 = hash_table_higher_prime_index (size);
  size_prime_index = D.259328;
  _1 = prime_tab[size_prime_index].prime;
  size = (size_t) _1;
  D.259329 = hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::alloc_entries (this, size);
  _2 = D.259329;
  this->m_entries = _2;
  this->m_size = size;
  this->m_size_prime_index = size_prime_index;
  return;

}



;; Function hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::alloc_entries (_ZNK10hash_tableIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE13alloc_entriesEm, funcdef_no=9732, decl_uid=205136, cgraph_uid=6364, symbol_order=7157)

Removing basic block 3
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 }
;; 9 succs { 1 }
struct value_type * hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::alloc_entries (const struct hash_table * const this, size_t n)
{
  struct value_type * D.259345;
  struct value_type * D.259344;
  struct mem_alloc_description & D.259343;
  size_t i;
  struct value_type * nentries;
  static const char __FUNCTION__[14] [value-expr: "alloc_entries"];
  struct value_type * D.259341;

  <bb 2> :

  <bb 3> :
  _3 = this->m_ggc;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.259344 = xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_alloc (n);
  nentries = D.259344;
  goto <bb 6>; [INV]

  <bb 5> :
  D.259345 = ggc_cleared_vec_alloc<hash_map<tree_node*, function_graph_array>::hash_entry> (n);
  nentries = D.259345;

  <bb 6> :
  if (nentries == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  fancy_abort ("/usr/local/gcc-11.2.0/lib/gcc/x86_64-linux-gnu/11.2.0/plugin/include/hash-table.h", 715, "alloc_entries");

  <bb 8> :
  D.259341 = nentries;

  <bb 9> :
<L14>:
  return D.259341;

}



;; Function xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_alloc (_ZN11xcallocatorIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE10data_allocEm, funcdef_no=10319, decl_uid=218524, cgraph_uid=6951, symbol_order=7748)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct hash_entry * xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_alloc (size_t count)
{
  struct hash_entry * D.259348;
  struct hash_entry * D.259346;

  <bb 2> :
  D.259348 = xcalloc (count, 16);
  D.259346 = D.259348;

  <bb 3> :
<L0>:
  return D.259346;

}



;; Function ggc_cleared_vec_alloc<hash_map<tree_node*, function_graph_array>::hash_entry> (_Z21ggc_cleared_vec_allocIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEPT_m, funcdef_no=10320, decl_uid=239319, cgraph_uid=6952, symbol_order=7749)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct hash_entry * ggc_cleared_vec_alloc<hash_map<tree_node*, function_graph_array>::hash_entry> (size_t c)
{
  struct hash_entry * D.259355;
  struct hash_entry * D.259354;
  struct hash_entry * D.259352;
  bool retval.2150;

  <bb 2> :
  retval.2150 = need_finalization_p<hash_map<tree_node*, function_graph_array>::hash_entry> ();
  if (retval.2150 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = c * 16;
  D.259354 = ggc_internal_cleared_alloc (_1, finalize, 16, c);
  D.259352 = D.259354;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = c * 16;
  D.259355 = ggc_internal_cleared_alloc (_2, 0B, 0, 0);
  D.259352 = D.259355;

  <bb 5> :
<L2>:
  return D.259352;

}



;; Function finalize<hash_map<tree_node*, function_graph_array>::hash_entry> (_Z8finalizeIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEvPv, funcdef_no=10758, decl_uid=243938, cgraph_uid=7390, symbol_order=8187)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void finalize<hash_map<tree_node*, function_graph_array>::hash_entry> (void * p)
{
  <bb 2> :
  MEM[(struct hash_entry *)p] = {CLOBBER};
  return;

}



;; Function need_finalization_p<hash_map<tree_node*, function_graph_array>::hash_entry> (_Z19need_finalization_pIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEbv, funcdef_no=10757, decl_uid=243937, cgraph_uid=7389, symbol_order=8186)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool need_finalization_p<hash_map<tree_node*, function_graph_array>::hash_entry> ()
{
  bool D.259356;

  <bb 2> :
  D.259356 = 0;

  <bb 3> :
<L0>:
  return D.259356;

}



;; Function std::__cxx11::basic_string<char>::basic_string (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev, funcdef_no=7875, decl_uid=126276, cgraph_uid=4507, symbol_order=5296)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::basic_string<char>::basic_string (struct basic_string * const this)
{
  char * D.259358;
  struct allocator D.217771;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_dataplus;
  std::allocator<char>::allocator (&D.217771);
  D.259358 = std::__cxx11::basic_string<char>::_M_local_data (this);
  _2 = D.259358;
  std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (_1, _2, &D.217771);
  std::allocator<char>::~allocator (&D.217771);
  D.217771 = {CLOBBER};
  std::__cxx11::basic_string<char>::_M_set_length (this, 0);
  return;

}



;; Function std::allocator<char>::allocator (_ZNSaIcEC2Ev, funcdef_no=7282, decl_uid=117129, cgraph_uid=3914, symbol_order=4700)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<char>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<char>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<char>::new_allocator (_ZN9__gnu_cxx13new_allocatorIcEC2Ev, funcdef_no=8200, decl_uid=117056, cgraph_uid=4832, symbol_order=5621)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<char>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcOS3_, funcdef_no=8213, decl_uid=125172, cgraph_uid=4845, symbol_order=5634)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (struct _Alloc_hider * const this, char * __dat, struct allocator & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::allocator<char>&> (__a);
  std::allocator<char>::allocator (this, _1);
  this->_M_p = __dat;
  return;

}



;; Function std::move<std::allocator<char>&> (_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=8211, decl_uid=208889, cgraph_uid=4843, symbol_order=5632)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::allocator<char>&> (struct allocator & __t)
{
  struct type & D.259359;

  <bb 2> :
  D.259359 = __t;

  <bb 3> :
<L0>:
  return D.259359;

}



;; Function std::allocator<char>::~allocator (_ZNSaIcED2Ev, funcdef_no=7285, decl_uid=117134, cgraph_uid=3917, symbol_order=4703)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<char>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<char>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<char>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIcED2Ev, funcdef_no=8203, decl_uid=117061, cgraph_uid=4835, symbol_order=5624)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<char>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<breakpoint>::push_back (_ZNSt6vectorI10breakpointSaIS0_EE9push_backERKS0_, funcdef_no=7923, decl_uid=185916, cgraph_uid=4556, symbol_order=5345)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::vector<breakpoint>::push_back (struct vector * const this, const struct value_type & __x)
{
  struct __normal_iterator D.259364;

  <bb 2> :
  _1 = this->D.186236._M_impl.D.185581._M_finish;
  _2 = this->D.186236._M_impl.D.185581._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = this->D.186236._M_impl.D.185581._M_finish;
  _4 = &this->D.186236._M_impl;
  std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, const breakpoint&> (_4, _3, __x);
  _5 = this->D.186236._M_impl.D.185581._M_finish;
  _6 = _5 + 40;
  this->D.186236._M_impl.D.185581._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  D.259364 = std::vector<breakpoint>::end (this);
  std::vector<breakpoint>::_M_realloc_insert<const breakpoint&> (this, D.259364, __x);

  <bb 5> :
  return;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, const breakpoint&> (_ZNSt16allocator_traitsISaI10breakpointEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_, funcdef_no=8908, decl_uid=217881, cgraph_uid=5540, symbol_order=6333)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, const breakpoint&> (struct allocator_type & __a, struct breakpoint * __p, const struct breakpoint & __args#0)
{
  <bb 2> :
  _1 = std::forward<const breakpoint&> (__args#0);
  __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, const breakpoint&> (__a, __p, _1);
  return;

}



;; Function std::forward<const breakpoint&> (_ZSt7forwardIRK10breakpointEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=9737, decl_uid=231718, cgraph_uid=6369, symbol_order=7162)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
const struct breakpoint & std::forward<const breakpoint&> (const struct type & __t)
{
  const struct breakpoint & D.259365;

  <bb 2> :
  D.259365 = __t;

  <bb 3> :
<L0>:
  return D.259365;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, const breakpoint&> (_ZN9__gnu_cxx13new_allocatorI10breakpointE9constructIS1_JRKS1_EEEvPT_DpOT0_, funcdef_no=9738, decl_uid=231720, cgraph_uid=6373, symbol_order=7166)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, const breakpoint&> (struct new_allocator * const this, struct breakpoint * __p, const struct breakpoint & __args#0)
{
  void * D.239351;
  void * D.239350;
  const struct breakpoint & D.239355;

  <bb 2> :
  D.239355 = std::forward<const breakpoint&> (__args#0);
  D.239350 = __p;
  D.239351 = operator new (40, D.239350);
  breakpoint::breakpoint (D.239351, D.239355);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  operator delete (D.239351, D.239350);
  resx 1

}



;; Function breakpoint::breakpoint (_ZN10breakpointC2ERKS_, funcdef_no=9740, decl_uid=203895, cgraph_uid=6371, symbol_order=7164)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void breakpoint::breakpoint (struct breakpoint * const this, const struct breakpoint & D.203897)
{
  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  _1 = &this->name;
  _2 = &D.203897->name;
  std::__cxx11::basic_string<char>::basic_string (_1, _2);
  _3 = D.203897->line;
  this->line = _3;
  return;

}



;; Function std::__cxx11::basic_string<char>::basic_string (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_, funcdef_no=8267, decl_uid=126265, cgraph_uid=4899, symbol_order=5688)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 8 3 }
;; 3 succs { 8 4 }
;; 4 succs { 10 5 }
;; 5 succs { 10 6 }
;; 6 succs { 10 7 }
;; 7 succs { 1 }
;; 8 succs { 9 }
;; 9 succs { }
;; 10 succs { }
void std::__cxx11::basic_string<char>::basic_string (struct basic_string * const this, const struct basic_string & __str)
{
  char * D.259373;
  char * D.259372;
  char * D.259369;
  const struct allocator_type & D.259368;
  struct allocator D.220356;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_dataplus;
  D.259368 = std::__cxx11::basic_string<char>::_M_get_allocator (__str);
  _2 = D.259368;
  D.220356 = __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy (_2); [return slot optimization]
  D.259369 = std::__cxx11::basic_string<char>::_M_local_data (this);

  <bb 3> :
  _3 = D.259369;
  std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (_1, _3, &D.220356);

  <bb 4> :
  std::allocator<char>::~allocator (&D.220356);
  D.220356 = {CLOBBER};
  D.259372 = std::__cxx11::basic_string<char>::_M_data (__str);

  <bb 5> :
  _4 = D.259372;
  _5 = std::__cxx11::basic_string<char>::length (__str);
  _6 = _4 + _5;
  D.259373 = std::__cxx11::basic_string<char>::_M_data (__str);

  <bb 6> :
  _7 = D.259373;
  std::__cxx11::basic_string<char>::_M_construct<char*> (this, _7, _6);

  <bb 7> :
  return;

  <bb 8> :
<L0>:
  std::allocator<char>::~allocator (&D.220356);
  resx 2

  <bb 9> :
<L1>:
  D.220356 = {CLOBBER};
  resx 1

  <bb 10> :
<L2>:
  _8 = &this->_M_dataplus;
  std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider (_8);
  resx 5

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_, funcdef_no=9133, decl_uid=125092, cgraph_uid=5765, symbol_order=6558)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_, funcdef_no=9909, decl_uid=125052, cgraph_uid=6541, symbol_order=7334)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<char>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator<char>::allocator (_ZNSaIcEC2ERKS_, funcdef_no=9105, decl_uid=117124, cgraph_uid=5737, symbol_order=6530)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<char>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<char>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<char>::new_allocator (_ZN9__gnu_cxx13new_allocatorIcEC2ERKS1_, funcdef_no=9874, decl_uid=117051, cgraph_uid=6506, symbol_order=7299)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<char>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.117053)
{
  <bb 2> :
  return;

}



;; Function std::__cxx11::basic_string<char>::_M_construct<char*> (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_, funcdef_no=9109, decl_uid=220106, cgraph_uid=5741, symbol_order=6534)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::basic_string<char>::_M_construct<char*> (struct basic_string * const this, char * __beg, char * __end)
{
  struct __false_type D.259379;

  <bb 2> :
  std::__cxx11::basic_string<char>::_M_construct_aux<char*> (this, __beg, __end, D.259379);
  return;

}



;; Function std::__cxx11::basic_string<char>::_M_construct_aux<char*> (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type, funcdef_no=9878, decl_uid=233074, cgraph_uid=6510, symbol_order=7303)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::__cxx11::basic_string<char>::_M_construct_aux<char*> (struct basic_string * const this, char * __beg, char * __end, struct __false_type D.240413)
{
  struct forward_iterator_tag D.259380;
  struct _Tag D.240416;

  <bb 2> :
  _1 = &D.240416;
  std::__cxx11::basic_string<char>::_M_construct<char*> (this, __beg, __end, D.259380);

  <bb 3> :
  D.240416 = {CLOBBER};
  return;

  <bb 4> :
<L0>:
  D.240416 = {CLOBBER};
  resx 1

}



;; Function std::__cxx11::basic_string<char>::_M_construct<char*> (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag, funcdef_no=10428, decl_uid=240417, cgraph_uid=7061, symbol_order=7858)

Removing basic block 18
Removing basic block 13
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 20 }
;; 8 succs { 20 9 }
;; 9 succs { 10 13 }
;; 10 succs { 20 11 }
;; 11 succs { 20 12 }
;; 12 succs { 20 13 }
;; 13 succs { 16 14 }
;; 14 succs { 20 15 }
;; 15 succs { 1 }
;; 16 succs { 17 }
;; 17 succs { 19 18 }
;; 18 succs { 19 }
;; 19 succs { 20 }
;; 20 succs { }
void std::__cxx11::basic_string<char>::_M_construct<char*> (struct basic_string * const this, char * __beg, char * __end, struct forward_iterator_tag D.244925)
{
  char * D.259395;
  char * D.259394;
  long int D.259393;
  size_type __dnew;
  bool iftmp.2152;
  bool retval.2151;

  <bb 2> :
  _1 = __gnu_cxx::__is_null_pointer<char> (__beg);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  if (__beg != __end)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2152 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2152 = 0;

  <bb 6> :
  retval.2151 = iftmp.2152;
  if (retval.2151 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

  <bb 8> :
  D.259393 = std::distance<char*> (__beg, __end);

  <bb 9> :
  _2 = D.259393;
  _3 = (long unsigned int) _2;
  __dnew = _3;
  __dnew.2153_4 = __dnew;
  if (__dnew.2153_4 > 15)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  D.259394 = std::__cxx11::basic_string<char>::_M_create (this, &__dnew, 0);

  <bb 11> :
  _5 = D.259394;
  std::__cxx11::basic_string<char>::_M_data (this, _5);

  <bb 12> :
  __dnew.2154_6 = __dnew;
  std::__cxx11::basic_string<char>::_M_capacity (this, __dnew.2154_6);

  <bb 13> :
  D.259395 = std::__cxx11::basic_string<char>::_M_data (this);

  <bb 14> :
  _7 = D.259395;
  std::__cxx11::basic_string<char>::_S_copy_chars (_7, __beg, __end);
  __dnew.2155_9 = __dnew;
  std::__cxx11::basic_string<char>::_M_set_length (this, __dnew.2155_9);

  <bb 15> :
  __dnew = {CLOBBER};
  return;

  <bb 16> :
<L9>:
  eh_dispatch 2

  <bb 17> :
<L10>:
  _8 = __builtin_eh_pointer (2);
  __cxa_begin_catch (_8);
  std::__cxx11::basic_string<char>::_M_dispose (this);

  <bb 18> :
  __cxa_rethrow ();

  <bb 19> :
<L11>:
  __cxa_end_catch ();
  resx 3

  <bb 20> :
<L12>:
  __dnew = {CLOBBER};
  resx 1

}



;; Function __gnu_cxx::__is_null_pointer<char> (_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_, funcdef_no=10814, decl_uid=244929, cgraph_uid=7446, symbol_order=8243)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__is_null_pointer<char> (char * __ptr)
{
  bool D.259400;

  <bb 2> :
  D.259400 = __ptr == 0B;

  <bb 3> :
<L0>:
  return D.259400;

}



;; Function std::distance<char*> (_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_, funcdef_no=10429, decl_uid=244932, cgraph_uid=7060, symbol_order=7857)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type std::distance<char*> (char * __first, char * __last)
{
  struct random_access_iterator_tag D.259403;
  difference_type D.259402;

  <bb 2> :
  std::__iterator_category<char*> (&__first);
  __first.2156_1 = __first;
  D.259402 = std::__distance<char*> (__first.2156_1, __last, D.259403);

  <bb 3> :
<L0>:
  return D.259402;

}



;; Function std::__iterator_category<char*> (_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_, funcdef_no=10815, decl_uid=244938, cgraph_uid=7447, symbol_order=8244)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator_category std::__iterator_category<char*> (char * const & D.246581)
{
  struct iterator_category D.259405;

  <bb 2> :

  <bb 3> :
<L0>:
  return D.259405;

}



;; Function std::__distance<char*> (_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag, funcdef_no=10816, decl_uid=244941, cgraph_uid=7448, symbol_order=8245)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type std::__distance<char*> (char * __first, char * __last, struct random_access_iterator_tag D.246589)
{
  difference_type D.259407;

  <bb 2> :
  D.259407 = __last - __first;

  <bb 3> :
<L0>:
  return D.259407;

}



;; Function std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev, funcdef_no=7289, decl_uid=126589, cgraph_uid=3920, symbol_order=4706)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider (struct _Alloc_hider * const this)
{
  <bb 2> :
  std::allocator<char>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<breakpoint>::end (_ZNSt6vectorI10breakpointSaIS0_EE3endEv, funcdef_no=8909, decl_uid=185849, cgraph_uid=5541, symbol_order=6334)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<breakpoint>::end (struct vector * const this)
{
  struct iterator D.231743;
  struct iterator D.259409;

  <bb 2> :
  _1 = &this->D.186236._M_impl.D.185581._M_finish;
  __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::__normal_iterator (&D.231743, _1);
  D.259409 = D.231743;
  D.231743 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.259409;

}



;; Function __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIP10breakpointSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=9743, decl_uid=218128, cgraph_uid=6375, symbol_order=7168)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::__normal_iterator (struct __normal_iterator * const this, struct breakpoint * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<breakpoint>::_M_realloc_insert<const breakpoint&> (_ZNSt6vectorI10breakpointSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, funcdef_no=8910, decl_uid=218147, cgraph_uid=5545, symbol_order=6338)

Removing basic block 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 10 8 }
;; 8 succs { 10 9 }
;; 9 succs { 10 }
;; 10 succs { }
void std::vector<breakpoint>::_M_realloc_insert<const breakpoint&> (struct vector * const this, struct iterator __position, const struct breakpoint & __args#0)
{
  struct breakpoint * D.259416;
  const size_type D.259415;
  struct breakpoint * __new_finish;
  struct breakpoint * __new_start;
  const size_type __elems_before;
  struct breakpoint * __old_finish;
  struct breakpoint * __old_start;
  const size_type __len;
  struct iterator D.231751;

  <bb 2> :
  D.259415 = std::vector<breakpoint>::_M_check_len (this, 1, "vector::_M_realloc_insert");
  __len = D.259415;
  __old_start = this->D.186236._M_impl.D.185581._M_start;
  __old_finish = this->D.186236._M_impl.D.185581._M_finish;
  D.231751 = std::vector<breakpoint>::begin (this);
  _1 = __gnu_cxx::operator-<breakpoint*, std::vector<breakpoint> > (&__position, &D.231751);
  __elems_before = (const size_type) _1;
  D.231751 = {CLOBBER};
  _2 = &this->D.186236;
  D.259416 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_allocate (_2, __len);
  __new_start = D.259416;
  __new_finish = __new_start;
  _3 = std::forward<const breakpoint&> (__args#0);
  _4 = __elems_before * 40;
  _5 = __new_start + _4;
  _6 = &this->D.186236._M_impl;
  std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, const breakpoint&> (_6, _5, _3);

  <bb 3> :
  __new_finish = 0B;
  _7 = &this->D.186236;
  _8 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_7);
  _9 = __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (&__position);
  _10 = *_9;
  __new_finish = std::vector<breakpoint>::_S_relocate (__old_start, _10, __new_start, _8);
  __new_finish = __new_finish + 40;
  _11 = &this->D.186236;
  _12 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_11);
  _13 = __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (&__position);
  _14 = *_13;
  __new_finish = std::vector<breakpoint>::_S_relocate (_14, __old_finish, __new_finish, _12);
  _22 = &this->D.186236;
  _23 = this->D.186236._M_impl.D.185581._M_end_of_storage;
  _24 = _23 - __old_start;
  _25 = _24 /[ex] 40;
  _26 = (long unsigned int) _25;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_deallocate (_22, __old_start, _26);
  this->D.186236._M_impl.D.185581._M_start = __new_start;
  this->D.186236._M_impl.D.185581._M_finish = __new_finish;
  _27 = __len * 40;
  _28 = __new_start + _27;
  this->D.186236._M_impl.D.185581._M_end_of_storage = _28;
  return;

  <bb 4> :
<L0>:
  eh_dispatch 2

  <bb 5> :
<L1>:
  _15 = __builtin_eh_pointer (2);
  __cxa_begin_catch (_15);
  if (__new_finish == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _16 = __elems_before * 40;
  _17 = __new_start + _16;
  _18 = &this->D.186236._M_impl;
  std::allocator_traits<std::allocator<breakpoint> >::destroy<breakpoint> (_18, _17);
  goto <bb 8>; [INV]

  <bb 7> :
  _19 = &this->D.186236;
  _20 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_19);
  std::_Destroy<breakpoint*, breakpoint> (__new_start, __new_finish, _20);

  <bb 8> :
  _21 = &this->D.186236;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_deallocate (_21, __new_start, __len);

  <bb 9> :
  __cxa_rethrow ();

  <bb 10> :
<L5>:
  __cxa_end_catch ();
  resx 3

}



;; Function std::vector<breakpoint>::_M_check_len (_ZNKSt6vectorI10breakpointSaIS0_EE12_M_check_lenEmPKc, funcdef_no=9745, decl_uid=186085, cgraph_uid=6377, symbol_order=7170)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
size_type std::vector<breakpoint>::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  const size_type __len;
  size_type iftmp.2159;
  size_type D.259423;
  const long unsigned int D.239364;
  bool retval.2157;

  <bb 2> :
  _1 = std::vector<breakpoint>::max_size (this);
  _2 = std::vector<breakpoint>::size (this);
  _3 = _1 - _2;
  __n.2158_4 = __n;
  retval.2157 = _3 < __n.2158_4;
  if (retval.2157 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s);

  <bb 4> :
  _5 = std::vector<breakpoint>::size (this);
  _6 = std::vector<breakpoint>::size (this);
  D.239364 = _6;
  _7 = std::max<long unsigned int> (&D.239364, &__n);
  _8 = *_7;
  __len = _5 + _8;
  D.239364 = {CLOBBER};
  _9 = std::vector<breakpoint>::size (this);
  if (__len < _9)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = std::vector<breakpoint>::max_size (this);
  if (__len > _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2159 = std::vector<breakpoint>::max_size (this);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.2159 = __len;

  <bb 8> :
  D.259423 = iftmp.2159;

  <bb 9> :
<L6>:
  return D.259423;

}



;; Function std::vector<breakpoint>::max_size (_ZNKSt6vectorI10breakpointSaIS0_EE8max_sizeEv, funcdef_no=10324, decl_uid=185871, cgraph_uid=6956, symbol_order=7753)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<breakpoint>::max_size (const struct vector * const this)
{
  size_type D.259430;

  <bb 2> :
  _1 = &this->D.186236;
  _2 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_1);
  D.259430 = std::vector<breakpoint>::_S_max_size (_2);

  <bb 3> :
<L0>:
  return D.259430;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseI10breakpointSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=10761, decl_uid=185471, cgraph_uid=7393, symbol_order=8190)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & D.259432;

  <bb 2> :
  D.259432 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.259432;

}



;; Function std::vector<breakpoint>::_S_max_size (_ZNSt6vectorI10breakpointSaIS0_EE11_S_max_sizeERKS1_, funcdef_no=10760, decl_uid=186092, cgraph_uid=7392, symbol_order=8189)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<breakpoint>::_S_max_size (const struct _Tp_alloc_type & __a)
{
  const size_t __allocmax;
  const size_t __diffmax;
  size_type D.259434;

  <bb 2> :
  __diffmax = 230584300921369395;
  _1 = std::allocator_traits<std::allocator<breakpoint> >::max_size (__a);
  __allocmax = _1;
  _2 = std::min<long unsigned int> (&__diffmax, &__allocmax);
  D.259434 = *_2;
  __diffmax = {CLOBBER};
  __allocmax = {CLOBBER};

  <bb 3> :
<L1>:
  return D.259434;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::max_size (_ZNSt16allocator_traitsISaI10breakpointEE8max_sizeERKS1_, funcdef_no=10931, decl_uid=185406, cgraph_uid=7563, symbol_order=8362)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::allocator_traits<std::allocator<breakpoint> >::max_size (const struct allocator_type & __a)
{
  size_type D.259437;

  <bb 2> :
  D.259437 = __gnu_cxx::new_allocator<breakpoint>::max_size (__a);

  <bb 3> :
<L0>:
  return D.259437;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::max_size (_ZNK9__gnu_cxx13new_allocatorI10breakpointE8max_sizeEv, funcdef_no=11011, decl_uid=185248, cgraph_uid=7643, symbol_order=8442)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<breakpoint>::max_size (const struct new_allocator * const this)
{
  size_type D.259439;

  <bb 2> :
  D.259439 = __gnu_cxx::new_allocator<breakpoint>::_M_max_size (this);

  <bb 3> :
<L0>:
  return D.259439;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorI10breakpointE11_M_max_sizeEv, funcdef_no=10763, decl_uid=185267, cgraph_uid=7394, symbol_order=8191)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<breakpoint>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.259441;

  <bb 2> :
  D.259441 = 230584300921369395;

  <bb 3> :
<L0>:
  return D.259441;

}



;; Function std::vector<breakpoint>::begin (_ZNSt6vectorI10breakpointSaIS0_EE5beginEv, funcdef_no=9746, decl_uid=185845, cgraph_uid=6378, symbol_order=7171)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::vector<breakpoint>::begin (struct vector * const this)
{
  struct iterator D.239366;
  struct iterator D.259443;

  <bb 2> :
  _1 = &this->D.186236._M_impl.D.185581._M_start;
  __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::__normal_iterator (&D.239366, _1);
  D.259443 = D.239366;
  D.239366 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.259443;

}



;; Function __gnu_cxx::operator-<breakpoint*, std::vector<breakpoint> > (_ZN9__gnu_cxxmiIP10breakpointSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=9747, decl_uid=231752, cgraph_uid=6379, symbol_order=7172)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
difference_type __gnu_cxx::operator-<breakpoint*, std::vector<breakpoint> > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  difference_type D.259446;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (__lhs);
  _2 = *_1;
  _3 = __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (__rhs);
  _4 = *_3;
  _5 = _2 - _4;
  D.259446 = _5 /[ex] 40;

  <bb 3> :
<L0>:
  return D.259446;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_allocate (_ZNSt12_Vector_baseI10breakpointSaIS0_EE11_M_allocateEm, funcdef_no=9748, decl_uid=185585, cgraph_uid=6380, symbol_order=7173)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct breakpoint * std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  struct breakpoint * D.259454;
  struct breakpoint * iftmp.2160;
  struct breakpoint * D.259448;

  <bb 2> :
  if (__n != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  D.259454 = std::allocator_traits<std::allocator<breakpoint> >::allocate (_1, __n);
  iftmp.2160 = D.259454;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2160 = 0B;

  <bb 5> :
  D.259448 = iftmp.2160;

  <bb 6> :
<L3>:
  return D.259448;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::allocate (_ZNSt16allocator_traitsISaI10breakpointEE8allocateERS1_m, funcdef_no=10325, decl_uid=185386, cgraph_uid=6957, symbol_order=7754)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct breakpoint * std::allocator_traits<std::allocator<breakpoint> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct breakpoint * D.259457;
  struct breakpoint * D.259455;

  <bb 2> :
  D.259457 = __gnu_cxx::new_allocator<breakpoint>::allocate (__a, __n, 0B);
  D.259455 = D.259457;

  <bb 3> :
<L0>:
  return D.259455;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::allocate (_ZN9__gnu_cxx13new_allocatorI10breakpointE8allocateEmPKv, funcdef_no=10762, decl_uid=185240, cgraph_uid=7395, symbol_order=8192)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct breakpoint * __gnu_cxx::new_allocator<breakpoint>::allocate (struct new_allocator * const this, size_type __n, const void * D.246345)
{
  struct breakpoint * D.259468;
  struct breakpoint * D.259467;
  align_val_t __al;
  struct breakpoint * D.259465;
  bool retval.2161;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<breakpoint>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.2161 = _4 != 0;
  if (retval.2161 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 461168601842738790)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 40;
  D.259468 = operator new (_6);
  D.259465 = D.259468;

  <bb 7> :
<L6>:
  return D.259465;

}



;; Function __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (_ZNK9__gnu_cxx17__normal_iteratorIP10breakpointSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=9750, decl_uid=218115, cgraph_uid=6382, symbol_order=7175)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * const & __gnu_cxx::__normal_iterator<breakpoint*, std::vector<breakpoint> >::base (const struct __normal_iterator * const this)
{
  struct breakpoint * const & D.259469;

  <bb 2> :
  D.259469 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.259469;

}



;; Function std::vector<breakpoint>::_S_relocate (_ZNSt6vectorI10breakpointSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_, funcdef_no=9749, decl_uid=185743, cgraph_uid=6381, symbol_order=7174)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * std::vector<breakpoint>::_S_relocate (struct breakpoint * __first, struct breakpoint * __last, struct breakpoint * __result, struct _Tp_alloc_type & __alloc)
{
  struct integral_constant D.259472;
  struct breakpoint * D.259471;

  <bb 2> :
  D.259471 = std::vector<breakpoint>::_S_do_relocate (__first, __last, __result, __alloc, D.259472);

  <bb 3> :
<L0>:
  return D.259471;

}



;; Function std::vector<breakpoint>::_S_do_relocate (_ZNSt6vectorI10breakpointSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE, funcdef_no=10326, decl_uid=185731, cgraph_uid=6958, symbol_order=7755)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * std::vector<breakpoint>::_S_do_relocate (struct breakpoint * __first, struct breakpoint * __last, struct breakpoint * __result, struct _Tp_alloc_type & __alloc, struct true_type D.243957)
{
  struct breakpoint * D.259474;

  <bb 2> :
  D.259474 = std::__relocate_a<breakpoint*, breakpoint*, std::allocator<breakpoint> > (__first, __last, __result, __alloc);

  <bb 3> :
<L0>:
  return D.259474;

}



;; Function std::__relocate_a<breakpoint*, breakpoint*, std::allocator<breakpoint> > (_ZSt12__relocate_aIP10breakpointS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10764, decl_uid=231917, cgraph_uid=7396, symbol_order=8193)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * std::__relocate_a<breakpoint*, breakpoint*, std::allocator<breakpoint> > (struct breakpoint * __first, struct breakpoint * __last, struct breakpoint * __result, struct allocator & __alloc)
{
  struct breakpoint * D.259476;

  <bb 2> :
  _1 = std::__niter_base<breakpoint*> (__result);
  _2 = std::__niter_base<breakpoint*> (__last);
  _3 = std::__niter_base<breakpoint*> (__first);
  D.259476 = std::__relocate_a_1<breakpoint*, breakpoint*, std::allocator<breakpoint> > (_3, _2, _1, __alloc);

  <bb 3> :
<L0>:
  return D.259476;

}



;; Function std::__niter_base<breakpoint*> (_ZSt12__niter_baseIP10breakpointET_S2_, funcdef_no=10932, decl_uid=231923, cgraph_uid=7564, symbol_order=8363)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * std::__niter_base<breakpoint*> (struct breakpoint * __it)
{
  struct breakpoint * D.259478;

  <bb 2> :
  D.259478 = __it;

  <bb 3> :
<L0>:
  return D.259478;

}



;; Function std::__relocate_a_1<breakpoint*, breakpoint*, std::allocator<breakpoint> > (_ZSt14__relocate_a_1IP10breakpointS1_SaIS0_EET0_T_S4_S3_RT1_, funcdef_no=10933, decl_uid=232068, cgraph_uid=7565, symbol_order=8364)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct breakpoint * std::__relocate_a_1<breakpoint*, breakpoint*, std::allocator<breakpoint> > (struct breakpoint * __first, struct breakpoint * __last, struct breakpoint * __result, struct allocator & __alloc)
{
  struct breakpoint * __cur;
  struct breakpoint * D.259480;

  <bb 2> :
  __cur = __result;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<breakpoint> (__first);
  _2 = std::__addressof<breakpoint> (__cur);
  std::__relocate_object_a<breakpoint, breakpoint, std::allocator<breakpoint> > (_2, _1, __alloc);
  __first = __first + 40;
  __cur = __cur + 40;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.259480 = __cur;

  <bb 6> :
<L3>:
  return D.259480;

}



;; Function std::__addressof<breakpoint> (_ZSt11__addressofI10breakpointEPT_RS1_, funcdef_no=10934, decl_uid=232124, cgraph_uid=7566, symbol_order=8365)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct breakpoint * std::__addressof<breakpoint> (struct breakpoint & __r)
{
  struct breakpoint * D.259482;

  <bb 2> :
  D.259482 = __r;

  <bb 3> :
<L0>:
  return D.259482;

}



;; Function std::__relocate_object_a<breakpoint, breakpoint, std::allocator<breakpoint> > (_ZSt19__relocate_object_aI10breakpointS0_SaIS0_EEvPT_PT0_RT1_, funcdef_no=11012, decl_uid=232097, cgraph_uid=7644, symbol_order=8443)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__relocate_object_a<breakpoint, breakpoint, std::allocator<breakpoint> > (struct breakpoint * restrict __dest, struct breakpoint * restrict __orig, struct allocator & __alloc)
{
  <bb 2> :
  _1 = std::move<breakpoint&> (__orig);
  std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, breakpoint> (__alloc, __dest, _1);
  _2 = std::__addressof<breakpoint> (__orig);
  std::allocator_traits<std::allocator<breakpoint> >::destroy<breakpoint> (__alloc, _2);
  return;

}



;; Function std::move<breakpoint&> (_ZSt4moveIR10breakpointEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=11048, decl_uid=232109, cgraph_uid=7680, symbol_order=8479)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<breakpoint&> (struct breakpoint & __t)
{
  struct type & D.259484;

  <bb 2> :
  D.259484 = __t;

  <bb 3> :
<L0>:
  return D.259484;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, breakpoint> (_ZNSt16allocator_traitsISaI10breakpointEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_, funcdef_no=11049, decl_uid=232111, cgraph_uid=7681, symbol_order=8480)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<breakpoint> >::construct<breakpoint, breakpoint> (struct allocator_type & __a, struct breakpoint * __p, struct breakpoint & __args#0)
{
  <bb 2> :
  _1 = std::forward<breakpoint> (__args#0);
  __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, breakpoint> (__a, __p, _1);
  return;

}



;; Function std::forward<breakpoint> (_ZSt7forwardI10breakpointEOT_RNSt16remove_referenceIS1_E4typeE, funcdef_no=11072, decl_uid=248133, cgraph_uid=7704, symbol_order=8503)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct breakpoint & std::forward<breakpoint> (struct type & __t)
{
  struct breakpoint & D.259486;

  <bb 2> :
  D.259486 = __t;

  <bb 3> :
<L0>:
  return D.259486;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, breakpoint> (_ZN9__gnu_cxx13new_allocatorI10breakpointE9constructIS1_JS1_EEEvPT_DpOT0_, funcdef_no=11073, decl_uid=248135, cgraph_uid=7708, symbol_order=8507)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<breakpoint>::construct<breakpoint, breakpoint> (struct new_allocator * const this, struct breakpoint * __p, struct breakpoint & __args#0)
{
  void * D.248225;
  void * D.248224;
  struct breakpoint & D.248229;

  <bb 2> :
  D.248229 = std::forward<breakpoint> (__args#0);
  D.248224 = __p;
  D.248225 = operator new (40, D.248224);
  breakpoint::breakpoint (D.248225, D.248229);
  return;

}



;; Function breakpoint::breakpoint (_ZN10breakpointC2EOS_, funcdef_no=11075, decl_uid=203904, cgraph_uid=7706, symbol_order=8505)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void breakpoint::breakpoint (struct breakpoint * const this, struct breakpoint & D.203906)
{
  <bb 2> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  _1 = &this->name;
  _2 = &D.203906->name;
  std::__cxx11::basic_string<char>::basic_string (_1, _2);
  _3 = D.203906->line;
  this->line = _3;
  return;

}



;; Function std::__cxx11::basic_string<char>::basic_string (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_, funcdef_no=7299, decl_uid=126195, cgraph_uid=3931, symbol_order=4718)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void std::__cxx11::basic_string<char>::basic_string (struct basic_string * const this, struct basic_string & __str)
{
  char * D.259496;
  char * D.259495;
  bool D.259494;
  char * D.259493;
  struct allocator_type & D.259492;
  bool retval.2162;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_dataplus;
  D.259492 = std::__cxx11::basic_string<char>::_M_get_allocator (__str);
  _2 = D.259492;
  _3 = std::move<std::allocator<char>&> (_2);
  D.259493 = std::__cxx11::basic_string<char>::_M_local_data (this);
  _4 = D.259493;
  std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (_1, _4, _3);
  D.259494 = std::__cxx11::basic_string<char>::_M_is_local (__str);
  retval.2162 = D.259494;
  if (retval.2162 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = &__str->D.125192._M_local_buf;
  _6 = &this->D.125192._M_local_buf;
  std::char_traits<char>::copy (_6, _5, 16);
  goto <bb 5>; [INV]

  <bb 4> :
  D.259495 = std::__cxx11::basic_string<char>::_M_data (__str);
  _7 = D.259495;
  std::__cxx11::basic_string<char>::_M_data (this, _7);
  _8 = __str->D.125192._M_allocated_capacity;
  std::__cxx11::basic_string<char>::_M_capacity (this, _8);

  <bb 5> :
  _9 = std::__cxx11::basic_string<char>::length (__str);
  std::__cxx11::basic_string<char>::_M_length (this, _9);
  D.259496 = std::__cxx11::basic_string<char>::_M_local_data (__str);
  _10 = D.259496;
  std::__cxx11::basic_string<char>::_M_data (__str, _10);
  std::__cxx11::basic_string<char>::_M_set_length (__str, 0);
  return;

}



;; Function std::char_traits<char>::copy (_ZNSt11char_traitsIcE4copyEPcPKcm, funcdef_no=3400, decl_uid=115117, cgraph_uid=2218, symbol_order=2386)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
char_type * std::char_traits<char>::copy (char_type * __s1, const char_type * __s2, size_t __n)
{
  char_type * D.259499;

  <bb 2> :
  if (__n == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.259499 = __s1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.259499 = __builtin_memcpy (__s1, __s2, __n);

  <bb 5> :
<L2>:
  return D.259499;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::destroy<breakpoint> (_ZNSt16allocator_traitsISaI10breakpointEE7destroyIS0_EEvRS1_PT_, funcdef_no=9752, decl_uid=232126, cgraph_uid=6384, symbol_order=7177)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<breakpoint> >::destroy<breakpoint> (struct allocator_type & __a, struct breakpoint * __p)
{
  <bb 2> :
  __gnu_cxx::new_allocator<breakpoint>::destroy<breakpoint> (__a, __p);
  return;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::destroy<breakpoint> (_ZN9__gnu_cxx13new_allocatorI10breakpointE7destroyIS1_EEvPT_, funcdef_no=10327, decl_uid=239385, cgraph_uid=6959, symbol_order=7756)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<breakpoint>::destroy<breakpoint> (struct new_allocator * const this, struct breakpoint * __p)
{
  <bb 2> :
  breakpoint::~breakpoint (__p);
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseI10breakpointSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=9751, decl_uid=185469, cgraph_uid=6383, symbol_order=7176)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.259501;

  <bb 2> :
  D.259501 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.259501;

}



;; Function std::_Destroy<breakpoint*, breakpoint> (_ZSt8_DestroyIP10breakpointS0_EvT_S2_RSaIT0_E, funcdef_no=9753, decl_uid=232308, cgraph_uid=6385, symbol_order=7178)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<breakpoint*, breakpoint> (struct breakpoint * __first, struct breakpoint * __last, struct allocator & D.239390)
{
  <bb 2> :
  std::_Destroy<breakpoint*> (__first, __last);
  return;

}



;; Function std::_Destroy<breakpoint*> (_ZSt8_DestroyIP10breakpointEvT_S2_, funcdef_no=10328, decl_uid=239392, cgraph_uid=6960, symbol_order=7757)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<breakpoint*> (struct breakpoint * __first, struct breakpoint * __last)
{
  <bb 2> :
  std::_Destroy_aux<false>::__destroy<breakpoint*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<false>::__destroy<breakpoint*> (_ZNSt12_Destroy_auxILb0EE9__destroyIP10breakpointEEvT_S4_, funcdef_no=10765, decl_uid=243986, cgraph_uid=7397, symbol_order=8194)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void std::_Destroy_aux<false>::__destroy<breakpoint*> (struct breakpoint * __first, struct breakpoint * __last)
{
  <bb 2> :
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<breakpoint> (__first);
  std::_Destroy<breakpoint> (_1);
  __first = __first + 40;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



;; Function std::_Destroy<breakpoint> (_ZSt8_DestroyI10breakpointEvPT_, funcdef_no=10935, decl_uid=246360, cgraph_uid=7567, symbol_order=8366)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<breakpoint> (struct breakpoint * __pointer)
{
  <bb 2> :
  breakpoint::~breakpoint (__pointer);
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_deallocate (_ZNSt12_Vector_baseI10breakpointSaIS0_EE13_M_deallocateEPS0_m, funcdef_no=8416, decl_uid=185588, cgraph_uid=5048, symbol_order=5841)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_deallocate (struct _Vector_base * const this, struct breakpoint * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<breakpoint> >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<breakpoint> >::deallocate (_ZNSt16allocator_traitsISaI10breakpointEE10deallocateERS1_PS0_m, funcdef_no=9215, decl_uid=185393, cgraph_uid=5847, symbol_order=6640)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<breakpoint> >::deallocate (struct allocator_type & __a, struct breakpoint * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<breakpoint>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::deallocate (_ZN9__gnu_cxx13new_allocatorI10breakpointE10deallocateEPS1_m, funcdef_no=9949, decl_uid=185244, cgraph_uid=6581, symbol_order=7378)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<breakpoint>::deallocate (struct new_allocator * const this, struct breakpoint * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 40;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function Graph::Graph (_ZN5GraphC2Ev, funcdef_no=6879, decl_uid=205448, cgraph_uid=3510, symbol_order=4289)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void Graph::Graph (struct Graph * const this)
{
  <bb 2> :
  _1 = &this->stack;
  std::vector<int>::vector (_1);
  return;

}



;; Function std::vector<int>::vector (_ZNSt6vectorIiSaIiEEC2Ev, funcdef_no=6877, decl_uid=167760, cgraph_uid=3507, symbol_order=4286)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.167768;
  std::_Vector_base<int, std::allocator<int> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_base (_ZNSt12_Vector_baseIiSaIiEEC2Ev, funcdef_no=6875, decl_uid=167186, cgraph_uid=3504, symbol_order=4283)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev, funcdef_no=7927, decl_uid=167078, cgraph_uid=4559, symbol_order=5348)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<int>::allocator (this);
  _1 = &this->D.167081;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<int>::allocator (_ZNSaIiEC2Ev, funcdef_no=8916, decl_uid=166856, cgraph_uid=5548, symbol_order=6341)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<int>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::new_allocator (_ZN9__gnu_cxx13new_allocatorIiEC2Ev, funcdef_no=9755, decl_uid=166785, cgraph_uid=6387, symbol_order=7180)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev, funcdef_no=8919, decl_uid=167028, cgraph_uid=5551, symbol_order=6344)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function hash_map<cgraph_node*, Graph>::put (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE3putERKS1_RKS2_, funcdef_no=7938, decl_uid=204532, cgraph_uid=4574, symbol_order=5363)

Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 7 succs { }
bool hash_map<cgraph_node*, Graph>::put (struct hash_map * const this, struct cgraph_node * const & k, const struct Graph & v)
{
  bool D.259516;
  struct hash_entry * D.259515;
  unsigned int D.259514;
  bool ins;
  struct hash_entry * e;
  bool D.259512;
  void * D.218190;
  void * D.218189;

  <bb 2> :
  _1 = &this->m_table;
  D.259514 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::hash (k);
  _2 = D.259514;
  D.259515 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_slot_with_hash (_1, k, _2, 1);
  e = D.259515;
  D.259516 = hash_map<cgraph_node*, Graph>::hash_entry::is_empty (e);
  ins = D.259516;
  if (ins != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = *k;
  e->m_key = _3;
  D.218189 = &e->m_value;
  D.218190 = operator new (48, D.218189);
  Graph::Graph (D.218190, v);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &e->m_value;
  Graph::operator= (_4, v);

  <bb 5> :
  D.259512 = ~ins;

  <bb 6> :
<L3>:
  return D.259512;

  <bb 7> :
<L4>:
  operator delete (D.218190, D.218189);
  resx 1

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::hash (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE4hashERKS2_, funcdef_no=8927, decl_uid=204492, cgraph_uid=5559, symbol_order=6352)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::hash (struct cgraph_node * const & h)
{
  hashval_t D.259518;

  <bb 2> :
  D.259518 = pointer_hash<cgraph_node>::hash (h);

  <bb 3> :
<L0>:
  return D.259518;

}



;; Function pointer_hash<cgraph_node>::hash (_ZN12pointer_hashI11cgraph_nodeE4hashERKPS0_, funcdef_no=9759, decl_uid=204449, cgraph_uid=6391, symbol_order=7184)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t pointer_hash<cgraph_node>::hash (struct cgraph_node * const & candidate)
{
  hashval_t D.259520;

  <bb 2> :
  _1 = *candidate;
  _2 = (long int) _1;
  _3 = _2 >> 3;
  D.259520 = (hashval_t) _3;

  <bb 3> :
<L0>:
  return D.259520;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_slot_with_hash (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE19find_slot_with_hashERKS2_j13insert_option, funcdef_no=8928, decl_uid=204690, cgraph_uid=5560, symbol_order=6353)

Removing basic block 3
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 23
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 18 19 17 16 14 13
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 22 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 27 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 22 }
;; 16 succs { 17 19 }
;; 17 succs { 18 21 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 27 }
;; 21 succs { 12 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
struct value_type * hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_slot_with_hash (struct hash_table * const this, struct cgraph_node * const & comparable, hashval_t hash, insert_option insert)
{
  bool D.259571;
  bool D.259570;
  bool D.259569;
  bool D.259568;
  bool D.259567;
  bool D.259566;
  struct value_type * D.259565;
  size_t size;
  struct value_type * entry;
  hashval_t hash2;
  hashval_t index;
  struct value_type * first_deleted_slot;
  bool retval.2168;
  bool retval.2167;
  bool retval.2166;
  bool retval.2165;
  bool retval.2164;
  bool retval.2163;
  struct value_type * D.259527;

  <bb 2> :

  <bb 3> :
  if (insert == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = this->m_size;
  _4 = _3 * 3;
  _5 = this->m_n_elements;
  _6 = _5 * 4;
  if (_4 <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::expand (this);

  <bb 6> :
  _7 = this->m_searches;
  _8 = _7 + 1;
  this->m_searches = _8;
  first_deleted_slot = 0B;
  _9 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _9);
  _10 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _10);
  _11 = this->m_entries;
  _12 = (long unsigned int) index;
  _13 = _12 * 56;
  entry = _11 + _13;
  size = this->m_size;
  D.259566 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.2163 = D.259566;
  if (retval.2163 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 8> :
  D.259567 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.2164 = D.259567;
  if (retval.2164 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = this->m_entries;
  _15 = (long unsigned int) index;
  _16 = _15 * 56;
  first_deleted_slot = _14 + _16;
  goto <bb 12>; [INV]

  <bb 10> :
  D.259568 = hash_map<cgraph_node*, Graph>::hash_entry::equal (entry, comparable);
  retval.2165 = D.259568;
  if (retval.2165 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _17 = this->m_entries;
  _18 = (long unsigned int) index;
  _19 = _18 * 56;
  D.259527 = _17 + _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _20 = this->m_collisions;
  _21 = _20 + 1;
  this->m_collisions = _21;
  index = index + hash2;
  _22 = (long unsigned int) index;
  if (size <= _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _23 = (unsigned int) size;
  index = index - _23;

  <bb 14> :
  _24 = this->m_entries;
  _25 = (long unsigned int) index;
  _26 = _25 * 56;
  entry = _24 + _26;
  D.259569 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (entry);
  retval.2166 = D.259569;
  if (retval.2166 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  // predicted unlikely by goto predictor.
  // predicted unlikely by goto predictor.
  goto <bb 22>; [INV]

  <bb 16> :
  D.259570 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (entry);
  retval.2167 = D.259570;
  if (retval.2167 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (first_deleted_slot == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = this->m_entries;
  _28 = (long unsigned int) index;
  _29 = _28 * 56;
  first_deleted_slot = _27 + _29;
  goto <bb 21>; [INV]

  <bb 19> :
  D.259571 = hash_map<cgraph_node*, Graph>::hash_entry::equal (entry, comparable);
  retval.2168 = D.259571;
  if (retval.2168 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _30 = this->m_entries;
  _31 = (long unsigned int) index;
  _32 = _31 * 56;
  D.259527 = _30 + _32;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 21> :
  goto <bb 12>; [INV]

  <bb 22> :
empty_entry:
  if (insert == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.259527 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  if (first_deleted_slot != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _33 = this->m_n_deleted;
  _34 = _33 + 18446744073709551615;
  this->m_n_deleted = _34;
  hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::mark_empty (first_deleted_slot);
  D.259527 = first_deleted_slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  _35 = this->m_n_elements;
  _36 = _35 + 1;
  this->m_n_elements = _36;
  _37 = this->m_entries;
  _38 = (long unsigned int) index;
  _39 = _38 * 56;
  D.259527 = _37 + _39;

  <bb 27> :
<L37>:
  return D.259527;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::expand (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE6expandEv, funcdef_no=9760, decl_uid=204771, cgraph_uid=6404, symbol_order=7197)

Removing basic block 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 16 13 14 12
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
void hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::expand (struct hash_table * const this)
{
  struct value_type * D.259602;
  unsigned int D.259601;
  bool D.259600;
  bool D.259599;
  struct mem_alloc_description & D.259598;
  struct value_type * D.259597;
  unsigned int D.259596;
  struct value_type * q;
  struct value_type & x;
  struct value_type * p;
  struct value_type * nentries;
  size_t nsize;
  unsigned int nindex;
  size_t elts;
  struct value_type * olimit;
  size_t osize;
  unsigned int oindex;
  struct value_type * oentries;
  void * D.239443;
  void * D.239442;
  struct hash_entry & D.239480;
  bool iftmp.2172;
  bool retval.2171;
  bool iftmp.2170;
  bool retval.2169;

  <bb 2> :
  oentries = this->m_entries;
  oindex = this->m_size_prime_index;
  osize = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::size (this);
  _1 = osize * 56;
  olimit = oentries + _1;
  elts = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::elements (this);
  _2 = elts * 2;
  if (osize < _2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = (unsigned int) elts;
  _4 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::too_empty_p (this, _3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2170 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2170 = 0;

  <bb 6> :
  retval.2169 = iftmp.2170;
  if (retval.2169 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = elts * 2;
  D.259596 = hash_table_higher_prime_index (_5);
  nindex = D.259596;
  _6 = prime_tab[nindex].prime;
  nsize = (size_t) _6;
  goto <bb 9>; [INV]

  <bb 8> :
  nindex = oindex;
  nsize = osize;

  <bb 9> :
  D.259597 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::alloc_entries (this, nsize);
  nentries = D.259597;

  <bb 10> :
  this->m_entries = nentries;
  this->m_size = nsize;
  this->m_size_prime_index = nindex;
  _9 = this->m_n_elements;
  _10 = this->m_n_deleted;
  _11 = _9 - _10;
  this->m_n_elements = _11;
  this->m_n_deleted = 0;
  p = oentries;

  <bb 11> :
  x = p;
  D.259599 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (x);
  _12 = D.259599;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  D.259600 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (x);
  _14 = D.259600;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.2172 = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.2172 = 0;

  <bb 15> :
  retval.2171 = iftmp.2172;
  if (retval.2171 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.259601 = hash_map<cgraph_node*, Graph>::hash_entry::hash (x);
  _16 = D.259601;
  D.259602 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (this, _16);
  q = D.259602;
  D.239480 = std::move<hash_map<cgraph_node*, Graph>::hash_entry&> (x);
  D.239442 = q;
  D.239443 = operator new (56, D.239442);
  hash_map<cgraph_node*, Graph>::hash_entry::hash_entry (D.239443, D.239480);

  <bb 17> :
  p = p + 56;
  if (p < olimit)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _17 = this->m_ggc;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_free (oentries);
  goto <bb 21>; [INV]

  <bb 20> :
  ggc_free (oentries);

  <bb 21> :
  return;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::size (_ZNK10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE4sizeEv, funcdef_no=10331, decl_uid=204666, cgraph_uid=6963, symbol_order=7760)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::size (const struct hash_table * const this)
{
  size_t D.259603;

  <bb 2> :
  D.259603 = this->m_size;

  <bb 3> :
<L0>:
  return D.259603;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::elements (_ZNK10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8elementsEv, funcdef_no=10332, decl_uid=204668, cgraph_uid=6964, symbol_order=7761)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::elements (const struct hash_table * const this)
{
  size_t D.259605;

  <bb 2> :
  _1 = this->m_n_elements;
  _2 = this->m_n_deleted;
  D.259605 = _1 - _2;

  <bb 3> :
<L0>:
  return D.259605;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::too_empty_p (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE11too_empty_pEj, funcdef_no=10333, decl_uid=204768, cgraph_uid=6965, symbol_order=7762)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
bool hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::too_empty_p (struct hash_table * const this, unsigned int elts)
{
  bool iftmp.2173;
  bool D.259607;

  <bb 2> :
  _1 = elts * 8;
  _2 = (long unsigned int) _1;
  _3 = this->m_size;
  if (_2 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = this->m_size;
  if (_4 > 32)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2173 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2173 = 0;

  <bb 6> :
  D.259607 = iftmp.2173;

  <bb 7> :
<L4>:
  return D.259607;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::hash (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry4hashERKS8_, funcdef_no=10335, decl_uid=204591, cgraph_uid=6967, symbol_order=7764)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
hashval_t hash_map<cgraph_node*, Graph>::hash_entry::hash (const struct hash_entry & e)
{
  hashval_t D.259616;
  hashval_t D.259614;

  <bb 2> :
  _1 = &e->m_key;
  D.259616 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::hash (_1);
  D.259614 = D.259616;

  <bb 3> :
<L0>:
  return D.259614;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE26find_empty_slot_for_expandEj, funcdef_no=10334, decl_uid=204761, cgraph_uid=6966, symbol_order=7763)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 9
;;  depth 1, outer 0
;;  nodes: 5 9 7 6
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 5 }
;; 10 succs { 1 }
struct value_type * hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::find_empty_slot_for_expand (struct hash_table * const this, hashval_t hash)
{
  bool D.259629;
  bool D.259628;
  hashval_t hash2;
  struct value_type * slot;
  size_t size;
  hashval_t index;
  bool retval.2175;
  struct value_type * D.259620;
  bool retval.2174;

  <bb 2> :
  _1 = this->m_size_prime_index;
  index = hash_table_mod1 (hash, _1);
  size = this->m_size;
  _2 = this->m_entries;
  _3 = (long unsigned int) index;
  _4 = _3 * 56;
  slot = _2 + _4;
  D.259628 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.2174 = D.259628;
  if (retval.2174 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.259620 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  _5 = this->m_size_prime_index;
  hash2 = hash_table_mod2 (hash, _5);

  <bb 5> :
  index = index + hash2;
  _6 = (long unsigned int) index;
  if (size <= _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (unsigned int) size;
  index = index - _7;

  <bb 7> :
  _8 = this->m_entries;
  _9 = (long unsigned int) index;
  _10 = _9 * 56;
  slot = _8 + _10;
  D.259629 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (slot);
  retval.2175 = D.259629;
  if (retval.2175 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.259620 = slot;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 5>; [INV]

  <bb 10> :
<L8>:
  return D.259620;

}



;; Function std::move<hash_map<cgraph_node*, Graph>::hash_entry&> (_ZSt4moveIRN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEEONSt16remove_referenceIT_E4typeEOSC_, funcdef_no=10336, decl_uid=239440, cgraph_uid=6968, symbol_order=7765)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<hash_map<cgraph_node*, Graph>::hash_entry&> (struct hash_entry & __t)
{
  struct type & D.259630;

  <bb 2> :
  D.259630 = __t;

  <bb 3> :
<L0>:
  return D.259630;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::hash_entry (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entryC2EOS8_, funcdef_no=9771, decl_uid=239465, cgraph_uid=6402, symbol_order=7195)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::hash_entry::hash_entry (struct hash_entry * const this, struct hash_entry & D.239467)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.239467->m_key;
  this->m_key = _1;
  _2 = &this->m_value;
  _3 = &D.239467->m_value;
  Graph::Graph (_2, _3);
  return;

}



;; Function Graph::Graph (_ZN5GraphC2EOS_, funcdef_no=9769, decl_uid=205465, cgraph_uid=6399, symbol_order=7192)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void Graph::Graph (struct Graph * const this, struct Graph & D.205467)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.205467->V;
  this->V = _1;
  _2 = D.205467->end;
  this->end = _2;
  _3 = D.205467->succ;
  this->succ = _3;
  _4 = D.205467->adj;
  this->adj = _4;
  _5 = &this->stack;
  _6 = &D.205467->stack;
  std::vector<int>::vector (_5, _6);
  return;

}



;; Function std::vector<int>::vector (_ZNSt6vectorIiSaIiEEC2EOS1_, funcdef_no=9767, decl_uid=167725, cgraph_uid=6396, symbol_order=7189)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::vector (struct vector * const this, struct vector & D.167727)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.167768;
  _2 = &D.167727->D.167768;
  std::_Vector_base<int, std::allocator<int> >::_Vector_base (_1, _2);
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_base (_ZNSt12_Vector_baseIiSaIiEEC2EOS1_, funcdef_no=9765, decl_uid=167161, cgraph_uid=6393, symbol_order=7186)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_base (struct _Vector_base * const this, struct _Vector_base & D.167163)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  _2 = &D.167163->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_1, _2);
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2EOS2_, funcdef_no=10338, decl_uid=167067, cgraph_uid=6970, symbol_order=7767)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = std::move<std::_Vector_base<int, std::allocator<int> >::_Vector_impl&> (__x);
  std::allocator<int>::allocator (this, _1);
  _2 = &this->D.167081;
  _3 = std::move<std::_Vector_base<int, std::allocator<int> >::_Vector_impl&> (__x);
  _4 = &_3->D.167081;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_2, _4);
  return;

}



;; Function std::allocator<int>::allocator (_ZNSaIiEC2ERKS_, funcdef_no=10768, decl_uid=166851, cgraph_uid=7400, symbol_order=8197)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<int>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::new_allocator (this, __a);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::new_allocator (_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_, funcdef_no=10937, decl_uid=166780, cgraph_uid=7569, symbol_order=8368)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.166782)
{
  <bb 2> :
  return;

}



;; Function std::move<std::_Vector_base<int, std::allocator<int> >::_Vector_impl&> (_ZSt4moveIRNSt12_Vector_baseIiSaIiEE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS6_, funcdef_no=10766, decl_uid=244021, cgraph_uid=7398, symbol_order=8195)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct type & std::move<std::_Vector_base<int, std::allocator<int> >::_Vector_impl&> (struct _Vector_impl & __t)
{
  struct type & D.259632;

  <bb 2> :
  D.259632 = __t;

  <bb 3> :
<L0>:
  return D.259632;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2EOS2_, funcdef_no=10771, decl_uid=167023, cgraph_uid=7403, symbol_order=8200)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this, struct _Vector_impl_data & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_start;
  this->_M_start = _1;
  _2 = __x->_M_finish;
  this->_M_finish = _2;
  _3 = __x->_M_end_of_storage;
  this->_M_end_of_storage = _3;
  __x->_M_end_of_storage = 0B;
  _4 = __x->_M_end_of_storage;
  __x->_M_finish = _4;
  _5 = __x->_M_finish;
  __x->_M_start = _5;
  return;

}



;; Function xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8951, decl_uid=218334, cgraph_uid=5583, symbol_order=6376)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8948, decl_uid=204775, cgraph_uid=5580, symbol_order=6373)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.259637;
  bool D.259635;

  <bb 2> :
  D.259637 = hash_map<cgraph_node*, Graph>::hash_entry::is_empty (v);
  D.259635 = D.259637;

  <bb 3> :
<L0>:
  return D.259635;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8949, decl_uid=204773, cgraph_uid=5581, symbol_order=6374)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.259640;
  bool D.259638;

  <bb 2> :
  D.259640 = hash_map<cgraph_node*, Graph>::hash_entry::is_deleted (v);
  D.259638 = D.259640;

  <bb 3> :
<L0>:
  return D.259638;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::is_deleted (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9799, decl_uid=204600, cgraph_uid=6431, symbol_order=7224)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<cgraph_node*, Graph>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.259643;
  bool D.259641;

  <bb 2> :
  D.259643 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_deleted<hash_map<cgraph_node*, Graph>::hash_entry> (e);
  D.259641 = D.259643;

  <bb 3> :
<L0>:
  return D.259641;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_deleted<hash_map<cgraph_node*, Graph>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10365, decl_uid=239668, cgraph_uid=6997, symbol_order=7794)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_deleted<hash_map<cgraph_node*, Graph>::hash_entry> (const struct hash_entry & entry)
{
  bool D.259644;

  <bb 2> :
  _1 = entry->m_key;
  D.259644 = pointer_hash<cgraph_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.259644;

}



;; Function pointer_hash<cgraph_node>::is_deleted (_ZN12pointer_hashI11cgraph_nodeE10is_deletedEPS0_, funcdef_no=10786, decl_uid=204459, cgraph_uid=7418, symbol_order=8215)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<cgraph_node>::is_deleted (struct cgraph_node * e)
{
  bool D.259646;

  <bb 2> :
  D.259646 = e == 1B;

  <bb 3> :
<L0>:
  return D.259646;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::equal (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry5equalERKS8_RKS1_, funcdef_no=9773, decl_uid=204593, cgraph_uid=6405, symbol_order=7198)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<cgraph_node*, Graph>::hash_entry::equal (const struct hash_entry & a, struct cgraph_node * const & b)
{
  bool D.259650;
  bool D.259648;

  <bb 2> :
  _1 = &a->m_key;
  D.259650 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::equal_keys (_1, b);
  D.259648 = D.259650;

  <bb 3> :
<L0>:
  return D.259648;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::equal_keys (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE10equal_keysERKS2_S7_, funcdef_no=10340, decl_uid=204494, cgraph_uid=6972, symbol_order=7769)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::equal_keys (struct cgraph_node * const & k1, struct cgraph_node * const & k2)
{
  bool D.259651;

  <bb 2> :
  D.259651 = pointer_hash<cgraph_node>::equal (k1, k2);

  <bb 3> :
<L0>:
  return D.259651;

}



;; Function pointer_hash<cgraph_node>::equal (_ZN12pointer_hashI11cgraph_nodeE5equalERKPS0_S4_, funcdef_no=10773, decl_uid=204451, cgraph_uid=7405, symbol_order=8202)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<cgraph_node>::equal (struct cgraph_node * const & existing, struct cgraph_node * const & candidate)
{
  bool D.259653;

  <bb 2> :
  _1 = *existing;
  _2 = *candidate;
  D.259653 = _1 == _2;

  <bb 3> :
<L0>:
  return D.259653;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::mark_empty (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10mark_emptyERS9_, funcdef_no=9774, decl_uid=204779, cgraph_uid=6406, symbol_order=7199)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::mark_empty (struct value_type & v)
{
  <bb 2> :
  hash_map<cgraph_node*, Graph>::hash_entry::mark_empty (v);
  return;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::mark_empty (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10mark_emptyERS8_, funcdef_no=10341, decl_uid=204603, cgraph_uid=6973, symbol_order=7770)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::hash_entry::mark_empty (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::mark_empty<hash_map<cgraph_node*, Graph>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::mark_empty<hash_map<cgraph_node*, Graph>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE10mark_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=10774, decl_uid=244039, cgraph_uid=7406, symbol_order=8203)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::mark_empty<hash_map<cgraph_node*, Graph>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  pointer_hash<cgraph_node>::mark_empty (_1);
  return;

}



;; Function pointer_hash<cgraph_node>::mark_empty (_ZN12pointer_hashI11cgraph_nodeE10mark_emptyERPS0_, funcdef_no=10939, decl_uid=204457, cgraph_uid=7571, symbol_order=8370)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void pointer_hash<cgraph_node>::mark_empty (struct cgraph_node * & e)
{
  <bb 2> :
  *e = 0B;
  return;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::is_empty (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=8929, decl_uid=204605, cgraph_uid=5561, symbol_order=6354)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<cgraph_node*, Graph>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.259657;
  bool D.259655;

  <bb 2> :
  D.259657 = simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_empty<hash_map<cgraph_node*, Graph>::hash_entry> (e);
  D.259655 = D.259657;

  <bb 3> :
<L0>:
  return D.259655;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_empty<hash_map<cgraph_node*, Graph>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=9775, decl_uid=232360, cgraph_uid=6407, symbol_order=7200)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::is_empty<hash_map<cgraph_node*, Graph>::hash_entry> (const struct hash_entry & entry)
{
  bool D.259658;

  <bb 2> :
  _1 = entry->m_key;
  D.259658 = pointer_hash<cgraph_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.259658;

}



;; Function pointer_hash<cgraph_node>::is_empty (_ZN12pointer_hashI11cgraph_nodeE8is_emptyEPS0_, funcdef_no=10342, decl_uid=204461, cgraph_uid=6974, symbol_order=7771)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool pointer_hash<cgraph_node>::is_empty (struct cgraph_node * e)
{
  bool D.259660;

  <bb 2> :
  D.259660 = e == 0B;

  <bb 3> :
<L0>:
  return D.259660;

}



;; Function Graph::Graph (_ZN5GraphC2ERKS_, funcdef_no=7940, decl_uid=205456, cgraph_uid=4571, symbol_order=5360)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void Graph::Graph (struct Graph * const this, const struct Graph & D.205458)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = D.205458->V;
  this->V = _1;
  _2 = D.205458->end;
  this->end = _2;
  _3 = D.205458->succ;
  this->succ = _3;
  _4 = D.205458->adj;
  this->adj = _4;
  _5 = &this->stack;
  _6 = &D.205458->stack;
  std::vector<int>::vector (_5, _6);
  return;

}



;; Function std::vector<int>::vector (_ZNSt6vectorIiSaIiEEC2ERKS1_, funcdef_no=8931, decl_uid=167731, cgraph_uid=5563, symbol_order=6356)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 7 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { }
void std::vector<int>::vector (struct vector * const this, const struct vector & __x)
{
  int * D.259666;
  struct __normal_iterator D.259663;
  struct __normal_iterator D.259662;
  struct allocator D.232471;

  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.167768;
  _2 = &__x->D.167768;
  _3 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_2);
  D.232471 = __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy (_3); [return slot optimization]
  _4 = std::vector<int>::size (__x);
  std::_Vector_base<int, std::allocator<int> >::_Vector_base (_1, _4, &D.232471);

  <bb 3> :
  std::allocator<int>::~allocator (&D.232471);
  D.232471 = {CLOBBER};
  _5 = &this->D.167768;
  _6 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_5);
  _7 = this->D.167768._M_impl.D.167081._M_start;
  D.259662 = std::vector<int>::end (__x);
  D.259663 = std::vector<int>::begin (__x);
  D.259666 = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*, int> (D.259663, D.259662, _7, _6);

  <bb 4> :
  _8 = D.259666;
  this->D.167768._M_impl.D.167081._M_finish = _8;
  return;

  <bb 5> :
<L0>:
  std::allocator<int>::~allocator (&D.232471);
  resx 2

  <bb 6> :
<L1>:
  D.232471 = {CLOBBER};
  resx 1

  <bb 7> :
<L2>:
  _9 = &this->D.167768;
  std::_Vector_base<int, std::allocator<int> >::~_Vector_base (_9);
  resx 5

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy (_ZN9__gnu_cxx14__alloc_traitsISaIiEiE17_S_select_on_copyERKS1_, funcdef_no=9776, decl_uid=166943, cgraph_uid=6408, symbol_order=7201)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy (const struct allocator & __a)
{
  <bb 2> :
  *<retval> = std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction (__a); [return slot optimization]

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction (_ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_, funcdef_no=10343, decl_uid=166908, cgraph_uid=6975, symbol_order=7772)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct allocator_type std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction (const struct allocator_type & __rhs)
{
  <bb 2> :
  std::allocator<int>::allocator (<retval>, __rhs);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_base (_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_, funcdef_no=9779, decl_uid=167168, cgraph_uid=6411, symbol_order=7204)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Vector_base<int, std::allocator<int> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_1, __a);
  std::_Vector_base<int, std::allocator<int> >::_M_create_storage (this, __n);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl (_2);
  resx 1

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_, funcdef_no=10345, decl_uid=167073, cgraph_uid=6977, symbol_order=7774)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<int>::allocator (this, __a);
  _1 = &this->D.167081;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_M_create_storage (_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm, funcdef_no=10347, decl_uid=167092, cgraph_uid=6979, symbol_order=7776)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  int * D.259673;

  <bb 2> :
  D.259673 = std::_Vector_base<int, std::allocator<int> >::_M_allocate (this, __n);
  _1 = D.259673;
  this->_M_impl.D.167081._M_start = _1;
  _2 = this->_M_impl.D.167081._M_start;
  this->_M_impl.D.167081._M_finish = _2;
  _3 = this->_M_impl.D.167081._M_start;
  _4 = __n * 4;
  _5 = _3 + _4;
  this->_M_impl.D.167081._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev, funcdef_no=6873, decl_uid=167128, cgraph_uid=3501, symbol_order=4280)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<int>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<int>::~allocator (_ZNSaIiED2Ev, funcdef_no=7930, decl_uid=166861, cgraph_uid=4562, symbol_order=5351)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<int>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<int>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<int>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIiED2Ev, funcdef_no=8922, decl_uid=166790, cgraph_uid=5554, symbol_order=6347)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<int>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<int>::end (_ZNKSt6vectorIiSaIiEE3endEv, funcdef_no=9782, decl_uid=167355, cgraph_uid=6414, symbol_order=7207)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<int>::end (const struct vector * const this)
{
  struct const_iterator D.239521;
  struct const_iterator D.259674;

  <bb 2> :
  _1 = &this->D.167768._M_impl.D.167081._M_finish;
  __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::__normal_iterator (&D.239521, _1);
  D.259674 = D.239521;
  D.239521 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.259674;

}



;; Function __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_, funcdef_no=10349, decl_uid=232440, cgraph_uid=6981, symbol_order=7778)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::__normal_iterator (struct __normal_iterator * const this, const int * const & __i)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = *__i;
  this->_M_current = _1;
  return;

}



;; Function std::vector<int>::begin (_ZNKSt6vectorIiSaIiEE5beginEv, funcdef_no=9781, decl_uid=167351, cgraph_uid=6413, symbol_order=7206)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct const_iterator std::vector<int>::begin (const struct vector * const this)
{
  struct const_iterator D.239519;
  struct const_iterator D.259677;

  <bb 2> :
  _1 = &this->D.167768._M_impl.D.167081._M_start;
  __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::__normal_iterator (&D.239519, _1);
  D.259677 = D.239519;
  D.239519 = {CLOBBER};

  <bb 3> :
<L1>:
  return D.259677;

}



;; Function std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*, int> (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E, funcdef_no=9783, decl_uid=232460, cgraph_uid=6415, symbol_order=7208)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*, int> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result, struct allocator & D.239525)
{
  int * D.259682;
  int * D.259680;

  <bb 2> :
  D.259682 = std::uninitialized_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (__first, __last, __result);
  D.259680 = D.259682;

  <bb 3> :
<L0>:
  return D.259680;

}



;; Function std::uninitialized_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_, funcdef_no=10351, decl_uid=239527, cgraph_uid=6984, symbol_order=7781)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::uninitialized_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result)
{
  int * D.259685;
  const bool __assignable;
  int * D.259683;

  <bb 2> :
  __assignable = 1;
  D.259685 = std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (__first, __last, __result);
  D.259683 = D.259685;

  <bb 3> :
<L0>:
  return D.259683;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_, funcdef_no=10775, decl_uid=244158, cgraph_uid=7407, symbol_order=8204)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result)
{
  int * D.259688;
  int * D.259686;

  <bb 2> :
  D.259688 = std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (__first, __last, __result);
  D.259686 = D.259688;

  <bb 3> :
<L0>:
  return D.259686;

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_, funcdef_no=10940, decl_uid=246396, cgraph_uid=7572, symbol_order=8371)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result)
{
  int * D.259693;
  struct __normal_iterator D.259691;
  struct __normal_iterator D.259690;
  int * D.259689;

  <bb 2> :
  D.259690 = std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (__last);
  D.259691 = std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (__first);
  D.259693 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (D.259691, D.259690, __result);
  D.259689 = D.259693;

  <bb 3> :
<L0>:
  return D.259689;

}



;; Function std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_, funcdef_no=10353, decl_uid=239576, cgraph_uid=6985, symbol_order=7782)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (struct __normal_iterator __it)
{
  struct __normal_iterator D.259694;

  <bb 2> :
  D.259694 = __it;

  <bb 3> :
<L0>:
  return D.259694;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_, funcdef_no=11013, decl_uid=247278, cgraph_uid=7645, symbol_order=8444)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*> (struct __normal_iterator __first, struct __normal_iterator __last, int * __result)
{
  int * D.259698;
  int * D.259696;

  <bb 2> :
  __result.2176_1 = __result;
  _2 = std::__niter_base<int*> (__result.2176_1);
  _3 = std::__niter_base<const int*, std::vector<int> > (__last);
  _4 = std::__niter_base<const int*, std::vector<int> > (__first);
  D.259698 = std::__copy_move_a1<false, const int*, int*> (_4, _3, _2);
  _5 = D.259698;
  D.259696 = std::__niter_wrap<int*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.259696;

}



;; Function std::__niter_base<const int*, std::vector<int> > (_ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, funcdef_no=10776, decl_uid=244173, cgraph_uid=7408, symbol_order=8205)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const int * std::__niter_base<const int*, std::vector<int> > (struct __normal_iterator __it)
{
  const int * D.259699;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::base (&__it);
  D.259699 = *_1;

  <bb 3> :
<L0>:
  return D.259699;

}



;; Function __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::base (_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv, funcdef_no=10941, decl_uid=232427, cgraph_uid=7573, symbol_order=8372)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const int * const & __gnu_cxx::__normal_iterator<const int*, std::vector<int> >::base (const struct __normal_iterator * const this)
{
  const int * const & D.259701;

  <bb 2> :
  D.259701 = &this->_M_current;

  <bb 3> :
<L0>:
  return D.259701;

}



;; Function std::__copy_move_a1<false, const int*, int*> (_ZSt14__copy_move_a1ILb0EPKiPiET1_T0_S4_S3_, funcdef_no=10778, decl_uid=244327, cgraph_uid=7410, symbol_order=8207)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a1<false, const int*, int*> (const int * __first, const int * __last, int * __result)
{
  int * D.259705;
  int * D.259703;

  <bb 2> :
  D.259705 = std::__copy_move_a2<false, const int*, int*> (__first, __last, __result);
  D.259703 = D.259705;

  <bb 3> :
<L0>:
  return D.259703;

}



;; Function std::__copy_move_a2<false, const int*, int*> (_ZSt14__copy_move_a2ILb0EPKiPiET1_T0_S4_S3_, funcdef_no=10942, decl_uid=246410, cgraph_uid=7574, symbol_order=8373)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a2<false, const int*, int*> (const int * __first, const int * __last, int * __result)
{
  int * D.259706;

  <bb 2> :
  D.259706 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.259706;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int> (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_, funcdef_no=11014, decl_uid=247299, cgraph_uid=7646, symbol_order=8445)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
int * std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int> (const int * __first, const int * __last, int * __result)
{
  const ptrdiff_t _Num;
  int * D.259711;

  <bb 2> :
  _1 = __last - __first;
  _Num = _1 /[ex] 4;
  if (_Num != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.2177_2 = (long unsigned int) _Num;
  _3 = _Num.2177_2 * 4;
  __builtin_memmove (__result, __first, _3);

  <bb 4> :
  _Num.2178_4 = (long unsigned int) _Num;
  _5 = _Num.2178_4 * 4;
  D.259711 = __result + _5;

  <bb 5> :
<L3>:
  return D.259711;

}



;; Function std::__niter_wrap<int*> (_ZSt12__niter_wrapIPiET_RKS1_S1_, funcdef_no=10783, decl_uid=244370, cgraph_uid=7415, symbol_order=8212)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__niter_wrap<int*> (int * const & D.246432, int * __res)
{
  int * D.259713;

  <bb 2> :
  D.259713 = __res;

  <bb 3> :
<L0>:
  return D.259713;

}



;; Function std::_Vector_base<int, std::allocator<int> >::~_Vector_base (_ZNSt12_Vector_baseIiSaIiEED2Ev, funcdef_no=7933, decl_uid=167191, cgraph_uid=4565, symbol_order=5354)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<int, std::allocator<int> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.167081._M_end_of_storage;
  _2 = this->_M_impl.D.167081._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 4;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.167081._M_start;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function Graph::operator= (_ZN5GraphaSERKS_, funcdef_no=7942, decl_uid=218194, cgraph_uid=4573, symbol_order=5362)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct Graph & Graph::operator= (struct Graph * const this, const struct Graph & D.218195)
{
  struct Graph & D.259715;

  <bb 2> :
  _1 = D.218195->V;
  this->V = _1;
  _2 = D.218195->end;
  this->end = _2;
  _3 = D.218195->succ;
  this->succ = _3;
  _4 = D.218195->adj;
  this->adj = _4;
  _5 = &D.218195->stack;
  _6 = &this->stack;
  std::vector<int>::operator= (_6, _5);
  D.259715 = this;

  <bb 3> :
<L0>:
  return D.259715;

}



;; Function std::vector<int>::operator= (_ZNSt6vectorIiSaIiEEaSERKS1_, funcdef_no=8933, decl_uid=167316, cgraph_uid=5567, symbol_order=6360)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
struct vector & std::vector<int>::operator= (struct vector * const this, const struct vector & __x)
{
  int * D.259750;
  int * __tmp;
  const size_type __xlen;
  struct vector & D.259748;
  struct __normal_iterator D.259745;
  struct __normal_iterator D.259744;
  struct __normal_iterator D.259743;
  struct __normal_iterator D.259742;
  struct __normal_iterator D.259741;
  bool retval.2183;
  struct __normal_iterator D.259736;
  struct __normal_iterator D.259735;
  bool retval.2182;
  bool iftmp.2181;
  bool retval.2180;
  bool retval.2179;

  <bb 2> :
  if (__x != this)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  retval.2179 = __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_propagate_on_copy_assign ();
  if (retval.2179 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _1 = __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_always_equal ();
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _3 = &__x->D.167768;
  _4 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_3);
  _5 = &this->D.167768;
  _6 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_5);
  _7 = std::operator!= (_6, _4);
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2181 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.2181 = 0;

  <bb 8> :
  retval.2180 = iftmp.2181;
  if (retval.2180 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  std::vector<int>::clear (this);
  _8 = &this->D.167768;
  _9 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  _10 = this->D.167768._M_impl.D.167081._M_start;
  _11 = _9 - _10;
  _12 = _11 /[ex] 4;
  _13 = (long unsigned int) _12;
  _14 = this->D.167768._M_impl.D.167081._M_start;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_8, _14, _13);
  this->D.167768._M_impl.D.167081._M_start = 0B;
  this->D.167768._M_impl.D.167081._M_finish = 0B;
  this->D.167768._M_impl.D.167081._M_end_of_storage = 0B;

  <bb 10> :
  _15 = &__x->D.167768;
  _16 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_15);
  _17 = &this->D.167768;
  _18 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_17);
  std::__alloc_on_copy<std::allocator<int> > (_18, _16);

  <bb 11> :
  __xlen = std::vector<int>::size (__x);
  _19 = std::vector<int>::capacity (this);
  retval.2182 = __xlen > _19;
  if (retval.2182 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.259735 = std::vector<int>::end (__x);
  D.259736 = std::vector<int>::begin (__x);
  D.259750 = std::vector<int>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (this, __xlen, D.259736, D.259735);
  __tmp = D.259750;
  _20 = &this->D.167768;
  _21 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_20);
  _22 = this->D.167768._M_impl.D.167081._M_finish;
  _23 = this->D.167768._M_impl.D.167081._M_start;
  std::_Destroy<int*, int> (_23, _22, _21);
  _24 = &this->D.167768;
  _25 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  _26 = this->D.167768._M_impl.D.167081._M_start;
  _27 = _25 - _26;
  _28 = _27 /[ex] 4;
  _29 = (long unsigned int) _28;
  _30 = this->D.167768._M_impl.D.167081._M_start;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_24, _30, _29);
  this->D.167768._M_impl.D.167081._M_start = __tmp;
  _31 = this->D.167768._M_impl.D.167081._M_start;
  _32 = __xlen * 4;
  _33 = _31 + _32;
  this->D.167768._M_impl.D.167081._M_end_of_storage = _33;
  goto <bb 16>; [INV]

  <bb 13> :
  _34 = std::vector<int>::size (this);
  retval.2183 = __xlen <= _34;
  if (retval.2183 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _35 = &this->D.167768;
  _36 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_35);
  D.259741 = std::vector<int>::end (this);
  D.259742 = std::vector<int>::begin (this);
  D.259743 = std::vector<int>::end (__x);
  D.259744 = std::vector<int>::begin (__x);
  D.259745 = std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (D.259744, D.259743, D.259742);
  std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int> (D.259745, D.259741, _36);
  goto <bb 16>; [INV]

  <bb 15> :
  _37 = this->D.167768._M_impl.D.167081._M_start;
  _38 = __x->D.167768._M_impl.D.167081._M_start;
  _39 = std::vector<int>::size (this);
  _40 = _39 * 4;
  _41 = _38 + _40;
  _42 = __x->D.167768._M_impl.D.167081._M_start;
  std::copy<int*, int*> (_42, _41, _37);
  _43 = &this->D.167768;
  _44 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_43);
  _45 = this->D.167768._M_impl.D.167081._M_finish;
  _46 = __x->D.167768._M_impl.D.167081._M_finish;
  _47 = __x->D.167768._M_impl.D.167081._M_start;
  _48 = std::vector<int>::size (this);
  _49 = _48 * 4;
  _50 = _47 + _49;
  std::__uninitialized_copy_a<int*, int*, int> (_50, _46, _45, _44);

  <bb 16> :
  _51 = this->D.167768._M_impl.D.167081._M_start;
  _52 = __xlen * 4;
  _53 = _51 + _52;
  this->D.167768._M_impl.D.167081._M_finish = _53;

  <bb 17> :
  D.259748 = this;

  <bb 18> :
<L19>:
  return D.259748;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_propagate_on_copy_assign (_ZN9__gnu_cxx14__alloc_traitsISaIiEiE27_S_propagate_on_copy_assignEv, funcdef_no=8934, decl_uid=166948, cgraph_uid=5565, symbol_order=6358)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_propagate_on_copy_assign ()
{
  bool D.259751;

  <bb 2> :
  D.259751 = 0;

  <bb 3> :
<L0>:
  return D.259751;

}



;; Function __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_always_equal (_ZN9__gnu_cxx14__alloc_traitsISaIiEiE15_S_always_equalEv, funcdef_no=8935, decl_uid=166951, cgraph_uid=5566, symbol_order=6359)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_always_equal ()
{
  bool D.259753;

  <bb 2> :
  D.259753 = 1;

  <bb 3> :
<L0>:
  return D.259753;

}



;; Function std::operator!= (_ZStneRKSaIiES1_, funcdef_no=9784, decl_uid=166834, cgraph_uid=6416, symbol_order=7209)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool std::operator!= (const struct allocator & D.239544, const struct allocator & D.239545)
{
  bool D.259755;

  <bb 2> :
  D.259755 = 0;

  <bb 3> :
<L0>:
  return D.259755;

}



;; Function std::__alloc_on_copy<std::allocator<int> > (_ZSt15__alloc_on_copyISaIiEEvRT_RKS1_, funcdef_no=9785, decl_uid=232497, cgraph_uid=6417, symbol_order=7210)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__alloc_on_copy<std::allocator<int> > (struct allocator & __one, const struct allocator & __two)
{
  <bb 2> :
  return;

}



;; Function std::vector<int>::capacity (_ZNKSt6vectorIiSaIiEE8capacityEv, funcdef_no=9786, decl_uid=167386, cgraph_uid=6418, symbol_order=7211)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type std::vector<int>::capacity (const struct vector * const this)
{
  size_type D.259757;

  <bb 2> :
  _1 = this->D.167768._M_impl.D.167081._M_end_of_storage;
  _2 = this->D.167768._M_impl.D.167081._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 4;
  D.259757 = (size_type) _4;

  <bb 3> :
<L0>:
  return D.259757;

}



;; Function std::vector<int>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (_ZNSt6vectorIiSaIiEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKiS1_EEEEPimT_S9_, funcdef_no=9787, decl_uid=232504, cgraph_uid=6419, symbol_order=7212)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { }
int * std::vector<int>::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (struct vector * const this, size_type __n, struct __normal_iterator __first, struct __normal_iterator __last)
{
  int * D.259761;
  int * __result;
  int * D.259759;

  <bb 2> :
  _1 = &this->D.167768;
  D.259761 = std::_Vector_base<int, std::allocator<int> >::_M_allocate (_1, __n);
  __result = D.259761;
  _2 = &this->D.167768;
  _3 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_2);
  std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, int*, int> (__first, __last, __result, _3);

  <bb 3> :
  D.259759 = __result;

  <bb 4> :
<L0>:
  return D.259759;

  <bb 5> :
<L1>:
  eh_dispatch 1

  <bb 6> :
<L2>:
  _4 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_4);
  _5 = &this->D.167768;
  std::_Vector_base<int, std::allocator<int> >::_M_deallocate (_5, __result, __n);

  <bb 7> :
  __cxa_rethrow ();

  <bb 8> :
<L3>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET0_T_SB_SA_, funcdef_no=9788, decl_uid=232512, cgraph_uid=6420, symbol_order=7213)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::copy<__gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  struct __normal_iterator D.259767;
  struct __normal_iterator D.259766;
  struct __normal_iterator D.259765;

  <bb 2> :
  D.259766 = std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (__last);
  D.259767 = std::__miter_base<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > (__first);
  D.259765 = std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (D.259767, D.259766, __result);

  <bb 3> :
<L0>:
  return D.259765;

}



;; Function std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET1_T0_SB_SA_, funcdef_no=10354, decl_uid=239582, cgraph_uid=6987, symbol_order=7784)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__copy_move_a<false, __gnu_cxx::__normal_iterator<const int*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > > (struct __normal_iterator __first, struct __normal_iterator __last, struct __normal_iterator __result)
{
  int * D.259771;
  struct __normal_iterator D.259769;

  <bb 2> :
  _1 = std::__niter_base<int*, std::vector<int> > (__result);
  _2 = std::__niter_base<const int*, std::vector<int> > (__last);
  _3 = std::__niter_base<const int*, std::vector<int> > (__first);
  D.259771 = std::__copy_move_a1<false, const int*, int*> (_3, _2, _1);
  _4 = D.259771;
  D.259769 = std::__niter_wrap<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int*> (__result, _4);

  <bb 3> :
<L0>:
  return D.259769;

}



;; Function std::__niter_base<int*, std::vector<int> > (_ZSt12__niter_baseIPiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE, funcdef_no=10777, decl_uid=244324, cgraph_uid=7409, symbol_order=8206)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__niter_base<int*, std::vector<int> > (struct __normal_iterator __it)
{
  int * D.259772;

  <bb 2> :
  _1 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::base (&__it);
  D.259772 = *_1;

  <bb 3> :
<L0>:
  return D.259772;

}



;; Function std::__niter_wrap<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int*> (_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES2_ET_S7_T0_, funcdef_no=10779, decl_uid=244331, cgraph_uid=7411, symbol_order=8208)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator std::__niter_wrap<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int*> (struct __normal_iterator __from, int * __res)
{
  struct __normal_iterator D.259774;

  <bb 2> :
  _1 = std::__niter_base<int*, std::vector<int> > (__from);
  _2 = __res - _1;
  _3 = _2 /[ex] 4;
  D.259774 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator+ (&__from, _3);

  <bb 3> :
<L0>:
  return D.259774;

}



;; Function __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator+ (_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl, funcdef_no=10943, decl_uid=211412, cgraph_uid=7575, symbol_order=8374)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct __normal_iterator __gnu_cxx::__normal_iterator<int*, std::vector<int> >::operator+ (const struct __normal_iterator * const this, difference_type __n)
{
  int * const D.247305;
  struct __normal_iterator D.247306;
  struct __normal_iterator D.259776;

  <bb 2> :
  _1 = this->_M_current;
  __n.2184_2 = (long unsigned int) __n;
  _3 = __n.2184_2 * 4;
  _4 = _1 + _3;
  D.247305 = _4;
  __gnu_cxx::__normal_iterator<int*, std::vector<int> >::__normal_iterator (&D.247306, &D.247305);
  D.259776 = D.247306;
  D.247306 = {CLOBBER};
  D.247305 = {CLOBBER};

  <bb 3> :
<L2>:
  return D.259776;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int> (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RSaIT0_E, funcdef_no=9789, decl_uid=232518, cgraph_uid=6421, symbol_order=7214)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int> (struct __normal_iterator __first, struct __normal_iterator __last, struct allocator & D.239611)
{
  <bb 2> :
  std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (__first, __last);
  return;

}



;; Function std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_, funcdef_no=10356, decl_uid=239613, cgraph_uid=6988, symbol_order=7785)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (struct __normal_iterator __first, struct __normal_iterator __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEEvT_S9_, funcdef_no=10780, decl_uid=244355, cgraph_uid=7412, symbol_order=8209)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > (struct __normal_iterator D.246419, struct __normal_iterator D.246420)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::copy<int*, int*> (_ZSt4copyIPiS0_ET0_T_S2_S1_, funcdef_no=9790, decl_uid=232526, cgraph_uid=6422, symbol_order=7215)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::copy<int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.259782;
  int * D.259780;

  <bb 2> :
  _1 = std::__miter_base<int*> (__last);
  _2 = std::__miter_base<int*> (__first);
  D.259782 = std::__copy_move_a<false, int*, int*> (_2, _1, __result);
  D.259780 = D.259782;

  <bb 3> :
<L0>:
  return D.259780;

}



;; Function std::__miter_base<int*> (_ZSt12__miter_baseIPiET_S1_, funcdef_no=10357, decl_uid=239629, cgraph_uid=6989, symbol_order=7786)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__miter_base<int*> (int * __it)
{
  int * D.259783;

  <bb 2> :
  D.259783 = __it;

  <bb 3> :
<L0>:
  return D.259783;

}



;; Function std::__copy_move_a<false, int*, int*> (_ZSt13__copy_move_aILb0EPiS0_ET1_T0_S2_S1_, funcdef_no=10358, decl_uid=239631, cgraph_uid=6990, symbol_order=7787)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a<false, int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.259787;
  int * D.259785;

  <bb 2> :
  __result.2185_1 = __result;
  _2 = std::__niter_base<int*> (__result.2185_1);
  _3 = std::__niter_base<int*> (__last);
  _4 = std::__niter_base<int*> (__first);
  D.259787 = std::__copy_move_a1<false, int*, int*> (_4, _3, _2);
  _5 = D.259787;
  D.259785 = std::__niter_wrap<int*> (&__result, _5);

  <bb 3> :
<L0>:
  return D.259785;

}



;; Function std::__copy_move_a1<false, int*, int*> (_ZSt14__copy_move_a1ILb0EPiS0_ET1_T0_S2_S1_, funcdef_no=10782, decl_uid=244366, cgraph_uid=7414, symbol_order=8211)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a1<false, int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.259790;
  int * D.259788;

  <bb 2> :
  D.259790 = std::__copy_move_a2<false, int*, int*> (__first, __last, __result);
  D.259788 = D.259790;

  <bb 3> :
<L0>:
  return D.259788;

}



;; Function std::__copy_move_a2<false, int*, int*> (_ZSt14__copy_move_a2ILb0EPiS0_ET1_T0_S2_S1_, funcdef_no=10944, decl_uid=246428, cgraph_uid=7576, symbol_order=8375)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__copy_move_a2<false, int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.259791;

  <bb 2> :
  D.259791 = std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int> (__first, __last, __result);

  <bb 3> :
<L0>:
  return D.259791;

}



;; Function std::__uninitialized_copy_a<int*, int*, int> (_ZSt22__uninitialized_copy_aIPiS0_iET0_T_S2_S1_RSaIT1_E, funcdef_no=9791, decl_uid=232530, cgraph_uid=6423, symbol_order=7216)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__uninitialized_copy_a<int*, int*, int> (int * __first, int * __last, int * __result, struct allocator & D.239638)
{
  int * D.259795;
  int * D.259793;

  <bb 2> :
  D.259795 = std::uninitialized_copy<int*, int*> (__first, __last, __result);
  D.259793 = D.259795;

  <bb 3> :
<L0>:
  return D.259793;

}



;; Function std::uninitialized_copy<int*, int*> (_ZSt18uninitialized_copyIPiS0_ET0_T_S2_S1_, funcdef_no=10359, decl_uid=239640, cgraph_uid=6991, symbol_order=7788)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::uninitialized_copy<int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.259798;
  const bool __assignable;
  int * D.259796;

  <bb 2> :
  __assignable = 1;
  D.259798 = std::__uninitialized_copy<true>::__uninit_copy<int*, int*> (__first, __last, __result);
  D.259796 = D.259798;

  <bb 3> :
<L0>:
  return D.259796;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<int*, int*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPiS2_EET0_T_S4_S3_, funcdef_no=10784, decl_uid=244404, cgraph_uid=7416, symbol_order=8213)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int * std::__uninitialized_copy<true>::__uninit_copy<int*, int*> (int * __first, int * __last, int * __result)
{
  int * D.259801;
  int * D.259799;

  <bb 2> :
  D.259801 = std::copy<int*, int*> (__first, __last, __result);
  D.259799 = D.259801;

  <bb 3> :
<L0>:
  return D.259799;

}



;; Function hash_map<tree_node*, var_points_to>::~hash_map (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6885, decl_uid=205648, cgraph_uid=3516, symbol_order=4295)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, var_points_to>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7944, decl_uid=204399, cgraph_uid=4576, symbol_order=5365)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259815;
  bool D.259814;
  size_t i;
  bool iftmp.2187;
  bool retval.2186;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 40;
  _4 = _2 + _3;
  D.259814 = hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259814;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 40;
  _9 = _7 + _8;
  D.259815 = hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259815;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2187 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2187 = 0;

  <bb 7> :
  retval.2186 = iftmp.2187;
  if (retval.2186 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 40;
  _14 = _12 + _13;
  hash_map<tree_node*, var_points_to>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8936, decl_uid=204352, cgraph_uid=5568, symbol_order=6361)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.259818;
  bool D.259816;

  <bb 2> :
  D.259818 = hash_map<tree_node*, var_points_to>::hash_entry::is_empty (v);
  D.259816 = D.259818;

  <bb 3> :
<L0>:
  return D.259816;

}



;; Function hash_map<tree_node*, var_points_to>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=9792, decl_uid=204182, cgraph_uid=6424, symbol_order=7217)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, var_points_to>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.259819;

  <bb 2> :
  D.259819 = simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_empty<hash_map<tree_node*, var_points_to>::hash_entry> (e);

  <bb 3> :
<L0>:
  return D.259819;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_empty<hash_map<tree_node*, var_points_to>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE13var_points_toE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10360, decl_uid=239646, cgraph_uid=6992, symbol_order=7789)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_empty<hash_map<tree_node*, var_points_to>::hash_entry> (const struct hash_entry & entry)
{
  bool D.259821;

  <bb 2> :
  _1 = entry->m_key;
  D.259821 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.259821;

}



;; Function hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8937, decl_uid=204350, cgraph_uid=5569, symbol_order=6362)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, var_points_to>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.259825;
  bool D.259823;

  <bb 2> :
  D.259825 = hash_map<tree_node*, var_points_to>::hash_entry::is_deleted (v);
  D.259823 = D.259825;

  <bb 3> :
<L0>:
  return D.259823;

}



;; Function hash_map<tree_node*, var_points_to>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9793, decl_uid=204177, cgraph_uid=6425, symbol_order=7218)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, var_points_to>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.259828;
  bool D.259826;

  <bb 2> :
  D.259828 = simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_deleted<hash_map<tree_node*, var_points_to>::hash_entry> (e);
  D.259826 = D.259828;

  <bb 3> :
<L0>:
  return D.259826;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_deleted<hash_map<tree_node*, var_points_to>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE13var_points_toE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10361, decl_uid=239650, cgraph_uid=6993, symbol_order=7790)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::is_deleted<hash_map<tree_node*, var_points_to>::hash_entry> (const struct hash_entry & entry)
{
  bool D.259829;

  <bb 2> :
  _1 = entry->m_key;
  D.259829 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.259829;

}



;; Function hash_map<tree_node*, var_points_to>::hash_entry::remove (_ZN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8938, decl_uid=204173, cgraph_uid=5570, symbol_order=6363)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, var_points_to>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::remove<hash_map<tree_node*, var_points_to>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::remove<hash_map<tree_node*, var_points_to>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE13var_points_toE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9794, decl_uid=232546, cgraph_uid=6426, symbol_order=7219)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, var_points_to>::remove<hash_map<tree_node*, var_points_to>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  var_points_to::~var_points_to (_2);
  return;

}



;; Function xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node13var_points_to21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8939, decl_uid=218262, cgraph_uid=5571, symbol_order=6364)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, var_points_to>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function hash_map<tree_node*, gimple_array>::~hash_map (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6888, decl_uid=205664, cgraph_uid=3519, symbol_order=4298)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, gimple_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7947, decl_uid=190417, cgraph_uid=4579, symbol_order=5368)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259845;
  bool D.259844;
  size_t i;
  bool iftmp.2189;
  bool retval.2188;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 56;
  _4 = _2 + _3;
  D.259844 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259844;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 56;
  _9 = _7 + _8;
  D.259845 = hash_table<hash_map<tree_node*, gimple_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259845;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2189 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2189 = 0;

  <bb 7> :
  retval.2188 = iftmp.2189;
  if (retval.2188 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 56;
  _14 = _12 + _13;
  hash_map<tree_node*, gimple_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, gimple_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, gimple_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node12gimple_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8942, decl_uid=190194, cgraph_uid=5574, symbol_order=6367)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, gimple_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::remove<hash_map<tree_node*, gimple_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::remove<hash_map<tree_node*, gimple_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE12gimple_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9796, decl_uid=232556, cgraph_uid=6428, symbol_order=7221)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, gimple_array>::remove<hash_map<tree_node*, gimple_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  *_2 = {CLOBBER};
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::~hash_map (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6891, decl_uid=205680, cgraph_uid=3522, symbol_order=4301)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7950, decl_uid=196879, cgraph_uid=4582, symbol_order=5371)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259859;
  bool D.259858;
  size_t i;
  bool iftmp.2191;
  bool retval.2190;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 168;
  _4 = _2 + _3;
  D.259858 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259858;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 168;
  _9 = _7 + _8;
  D.259859 = hash_table<hash_map<basic_block_def*, symbolicinfo>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259859;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2191 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2191 = 0;

  <bb 7> :
  retval.2190 = iftmp.2191;
  if (retval.2190 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 168;
  _14 = _12 + _13;
  hash_map<basic_block_def*, symbolicinfo>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<basic_block_def*, symbolicinfo>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<basic_block_def*, symbolicinfo>::hash_entry::remove (_ZN8hash_mapIP15basic_block_def12symbolicinfo21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8946, decl_uid=196653, cgraph_uid=5578, symbol_order=6371)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<basic_block_def*, symbolicinfo>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::remove<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::remove<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP15basic_block_defE12symbolicinfoE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9798, decl_uid=232566, cgraph_uid=6430, symbol_order=7223)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<basic_block_def*>, symbolicinfo>::remove<hash_map<basic_block_def*, symbolicinfo>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<basic_block_def*>::remove (_1);
  _2 = &entry->m_value;
  symbolicinfo::~symbolicinfo (_2);
  return;

}



;; Function ggc_remove<basic_block_def*>::remove (_ZN10ggc_removeIP15basic_block_defE6removeERS1_, funcdef_no=10364, decl_uid=196523, cgraph_uid=6996, symbol_order=7793)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ggc_remove<basic_block_def*>::remove (struct basic_block_def * & D.244416)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function hash_map<cgraph_node*, Graph>::~hash_map (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6894, decl_uid=205696, cgraph_uid=3525, symbol_order=4304)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7953, decl_uid=204822, cgraph_uid=4585, symbol_order=5374)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259873;
  bool D.259872;
  size_t i;
  bool iftmp.2193;
  bool retval.2192;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 56;
  _4 = _2 + _3;
  D.259872 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259872;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 56;
  _9 = _7 + _8;
  D.259873 = hash_table<hash_map<cgraph_node*, Graph>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259873;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2193 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2193 = 0;

  <bb 7> :
  retval.2192 = iftmp.2193;
  if (retval.2192 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 56;
  _14 = _12 + _13;
  hash_map<cgraph_node*, Graph>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<cgraph_node*, Graph>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<cgraph_node*, Graph>::hash_entry::remove (_ZN8hash_mapIP11cgraph_node5Graph21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8950, decl_uid=204596, cgraph_uid=5582, symbol_order=6375)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<cgraph_node*, Graph>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::remove<hash_map<cgraph_node*, Graph>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::remove<hash_map<cgraph_node*, Graph>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP11cgraph_nodeE5GraphE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9800, decl_uid=232576, cgraph_uid=6432, symbol_order=7225)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<cgraph_node*>, Graph>::remove<hash_map<cgraph_node*, Graph>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<cgraph_node*>::remove (_1);
  _2 = &entry->m_value;
  Graph::~Graph (_2);
  return;

}



;; Function ggc_remove<cgraph_node*>::remove (_ZN10ggc_removeIP11cgraph_nodeE6removeERS1_, funcdef_no=10366, decl_uid=204466, cgraph_uid=6998, symbol_order=7795)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ggc_remove<cgraph_node*>::remove (struct cgraph_node * & D.244420)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function hash_map<tree_node*, function_return_array>::~hash_map (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6897, decl_uid=205712, cgraph_uid=3528, symbol_order=4307)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7956, decl_uid=189888, cgraph_uid=4588, symbol_order=5377)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259887;
  bool D.259886;
  size_t i;
  bool iftmp.2195;
  bool retval.2194;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 40;
  _4 = _2 + _3;
  D.259886 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259886;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 40;
  _9 = _7 + _8;
  D.259887 = hash_table<hash_map<tree_node*, function_return_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259887;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2195 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2195 = 0;

  <bb 7> :
  retval.2194 = iftmp.2195;
  if (retval.2194 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 40;
  _14 = _12 + _13;
  hash_map<tree_node*, function_return_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_return_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_return_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node21function_return_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8954, decl_uid=189662, cgraph_uid=5586, symbol_order=6379)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_return_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::remove<hash_map<tree_node*, function_return_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::remove<hash_map<tree_node*, function_return_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_return_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9802, decl_uid=232586, cgraph_uid=6434, symbol_order=7227)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_return_array>::remove<hash_map<tree_node*, function_return_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_return_array::~function_return_array (_2);
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::~hash_map (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6900, decl_uid=205728, cgraph_uid=3531, symbol_order=4310)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7959, decl_uid=191049, cgraph_uid=4591, symbol_order=5380)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259901;
  bool D.259900;
  size_t i;
  bool iftmp.2197;
  bool retval.2196;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 40;
  _4 = _2 + _3;
  D.259900 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259900;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 40;
  _9 = _7 + _8;
  D.259901 = hash_table<hash_map<tree_node*, function_assign_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259901;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2197 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2197 = 0;

  <bb 7> :
  retval.2196 = iftmp.2197;
  if (retval.2196 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 40;
  _14 = _12 + _13;
  hash_map<tree_node*, function_assign_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_assign_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_assign_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node21function_assign_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8958, decl_uid=190823, cgraph_uid=5590, symbol_order=6383)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_assign_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::remove<hash_map<tree_node*, function_assign_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::remove<hash_map<tree_node*, function_assign_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE21function_assign_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9804, decl_uid=232596, cgraph_uid=6436, symbol_order=7229)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_assign_array>::remove<hash_map<tree_node*, function_assign_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_assign_array::~function_assign_array (_2);
  return;

}



;; Function hash_map<tree_node*, pthread_attr_array>::~hash_map (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6903, decl_uid=205744, cgraph_uid=3534, symbol_order=4313)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, pthread_attr_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7962, decl_uid=194979, cgraph_uid=4594, symbol_order=5383)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259915;
  bool D.259914;
  size_t i;
  bool iftmp.2199;
  bool retval.2198;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 32;
  _4 = _2 + _3;
  D.259914 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259914;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 32;
  _9 = _7 + _8;
  D.259915 = hash_table<hash_map<tree_node*, pthread_attr_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259915;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2199 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2199 = 0;

  <bb 7> :
  retval.2198 = iftmp.2199;
  if (retval.2198 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 32;
  _14 = _12 + _13;
  hash_map<tree_node*, pthread_attr_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, pthread_attr_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, pthread_attr_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node18pthread_attr_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8962, decl_uid=194756, cgraph_uid=5594, symbol_order=6387)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, pthread_attr_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::remove<hash_map<tree_node*, pthread_attr_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::remove<hash_map<tree_node*, pthread_attr_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE18pthread_attr_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9806, decl_uid=232606, cgraph_uid=6438, symbol_order=7231)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, pthread_attr_array>::remove<hash_map<tree_node*, pthread_attr_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  *_2 = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::~hash_map (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6906, decl_uid=205760, cgraph_uid=3537, symbol_order=4316)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7965, decl_uid=193604, cgraph_uid=4597, symbol_order=5386)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259929;
  bool D.259928;
  size_t i;
  bool iftmp.2201;
  bool retval.2200;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 32;
  _4 = _2 + _3;
  D.259928 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259928;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 32;
  _9 = _7 + _8;
  D.259929 = hash_table<hash_map<tree_node*, function_pthread_detched_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259929;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2201 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2201 = 0;

  <bb 7> :
  retval.2200 = iftmp.2201;
  if (retval.2200 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 32;
  _14 = _12 + _13;
  hash_map<tree_node*, function_pthread_detched_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_pthread_detched_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_pthread_detched_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node30function_pthread_detched_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8966, decl_uid=193378, cgraph_uid=5598, symbol_order=6391)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_detched_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::remove<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::remove<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE30function_pthread_detched_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9808, decl_uid=232616, cgraph_uid=6440, symbol_order=7233)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_detched_array>::remove<hash_map<tree_node*, function_pthread_detched_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_pthread_detched_array::~function_pthread_detched_array (_2);
  return;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::~hash_map (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6909, decl_uid=205776, cgraph_uid=3540, symbol_order=4319)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7968, decl_uid=194080, cgraph_uid=4600, symbol_order=5389)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259943;
  bool D.259942;
  size_t i;
  bool iftmp.2203;
  bool retval.2202;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 32;
  _4 = _2 + _3;
  D.259942 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259942;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 32;
  _9 = _7 + _8;
  D.259943 = hash_table<hash_map<tree_node*, function_pthread_exit_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259943;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2203 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2203 = 0;

  <bb 7> :
  retval.2202 = iftmp.2203;
  if (retval.2202 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 32;
  _14 = _12 + _13;
  hash_map<tree_node*, function_pthread_exit_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_pthread_exit_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_pthread_exit_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node27function_pthread_exit_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8970, decl_uid=193854, cgraph_uid=5602, symbol_order=6395)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_pthread_exit_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::remove<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::remove<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE27function_pthread_exit_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9810, decl_uid=232626, cgraph_uid=6442, symbol_order=7235)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_pthread_exit_array>::remove<hash_map<tree_node*, function_pthread_exit_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_pthread_exit_array::~function_pthread_exit_array (_2);
  return;

}



;; Function hash_map<tree_node*, function_path_array>::~hash_map (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6912, decl_uid=205792, cgraph_uid=3543, symbol_order=4322)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7971, decl_uid=192250, cgraph_uid=4603, symbol_order=5392)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259957;
  bool D.259956;
  size_t i;
  bool iftmp.2205;
  bool retval.2204;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 40;
  _4 = _2 + _3;
  D.259956 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259956;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 40;
  _9 = _7 + _8;
  D.259957 = hash_table<hash_map<tree_node*, function_path_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259957;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2205 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2205 = 0;

  <bb 7> :
  retval.2204 = iftmp.2205;
  if (retval.2204 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 40;
  _14 = _12 + _13;
  hash_map<tree_node*, function_path_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_path_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_path_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node19function_path_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8974, decl_uid=192024, cgraph_uid=5606, symbol_order=6399)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_path_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::remove<hash_map<tree_node*, function_path_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::remove<hash_map<tree_node*, function_path_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_path_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9812, decl_uid=232636, cgraph_uid=6444, symbol_order=7237)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_path_array>::remove<hash_map<tree_node*, function_path_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_path_array::~function_path_array (_2);
  return;

}



;; Function hash_map<tree_node*, function_free_array>::~hash_map (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6915, decl_uid=205808, cgraph_uid=3546, symbol_order=4325)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7974, decl_uid=192732, cgraph_uid=4606, symbol_order=5395)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259971;
  bool D.259970;
  size_t i;
  bool iftmp.2207;
  bool retval.2206;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 32;
  _4 = _2 + _3;
  D.259970 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259970;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 32;
  _9 = _7 + _8;
  D.259971 = hash_table<hash_map<tree_node*, function_free_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259971;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2207 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2207 = 0;

  <bb 7> :
  retval.2206 = iftmp.2207;
  if (retval.2206 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 32;
  _14 = _12 + _13;
  hash_map<tree_node*, function_free_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_free_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_map<tree_node*, function_free_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node19function_free_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8978, decl_uid=192506, cgraph_uid=5610, symbol_order=6403)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_free_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::remove<hash_map<tree_node*, function_free_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::remove<hash_map<tree_node*, function_free_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE19function_free_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9814, decl_uid=232646, cgraph_uid=6446, symbol_order=7239)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_free_array>::remove<hash_map<tree_node*, function_free_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  function_free_array::~function_free_array (_2);
  return;

}



;; Function hash_map<tree_node*, function_graph_array>::~hash_map (_ZN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EED2Ev, funcdef_no=6918, decl_uid=205824, cgraph_uid=3549, symbol_order=4328)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_graph_array>::~hash_map (struct hash_map * const this)
{
  <bb 2> :
  _1 = &this->m_table;
  hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::~hash_table (_1);
  *this = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::~hash_table (_ZN10hash_tableIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorED2Ev, funcdef_no=7977, decl_uid=205200, cgraph_uid=4609, symbol_order=5398)

Merging blocks 14 and 15
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8 5 6 3 4
;; 2 succs { 10 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::~hash_table (struct hash_table * const this)
{
  bool D.259985;
  bool D.259984;
  size_t i;
  bool iftmp.2209;
  bool retval.2208;

  <bb 2> :
  _1 = this->m_size;
  i = _1 + 18446744073709551615;
  goto <bb 10>; [INV]

  <bb 3> :
  _2 = this->m_entries;
  _3 = i * 16;
  _4 = _2 + _3;
  D.259984 = hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_empty (_4);
  _5 = D.259984;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = this->m_entries;
  _8 = i * 16;
  _9 = _7 + _8;
  D.259985 = hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_deleted (_9);
  _10 = D.259985;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2209 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2209 = 0;

  <bb 7> :
  retval.2208 = iftmp.2209;
  if (retval.2208 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = this->m_entries;
  _13 = i * 16;
  _14 = _12 + _13;
  hash_map<tree_node*, function_graph_array>::hash_entry::remove (_14);

  <bb 9> :
  i = i + 18446744073709551615;

  <bb 10> :
  _15 = this->m_size;
  if (i < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _16 = this->m_ggc;
  _17 = ~_16;
  if (_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = this->m_entries;
  xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_free (_18);
  goto <bb 14>; [INV]

  <bb 13> :
  _19 = this->m_entries;
  ggc_free (_19);

  <bb 14> :
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_empty (_ZN10hash_tableIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE8is_emptyERS9_, funcdef_no=8980, decl_uid=205153, cgraph_uid=5612, symbol_order=6405)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_empty (struct value_type & v)
{
  bool D.259988;
  bool D.259986;

  <bb 2> :
  D.259988 = hash_map<tree_node*, function_graph_array>::hash_entry::is_empty (v);
  D.259986 = D.259988;

  <bb 3> :
<L0>:
  return D.259986;

}



;; Function hash_map<tree_node*, function_graph_array>::hash_entry::is_empty (_ZN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry8is_emptyERKS8_, funcdef_no=9815, decl_uid=204986, cgraph_uid=6447, symbol_order=7240)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_graph_array>::hash_entry::is_empty (const struct hash_entry & e)
{
  bool D.259989;

  <bb 2> :
  D.259989 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_empty<hash_map<tree_node*, function_graph_array>::hash_entry> (e);

  <bb 3> :
<L0>:
  return D.259989;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_empty<hash_map<tree_node*, function_graph_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE20function_graph_arrayE8is_emptyIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10374, decl_uid=239716, cgraph_uid=7006, symbol_order=7803)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_empty<hash_map<tree_node*, function_graph_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.259991;

  <bb 2> :
  _1 = entry->m_key;
  D.259991 = pointer_hash<tree_node>::is_empty (_1);

  <bb 3> :
<L0>:
  return D.259991;

}



;; Function hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_deleted (_ZN10hash_tableIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryELb0E11xcallocatorE10is_deletedERS9_, funcdef_no=8981, decl_uid=205151, cgraph_uid=5613, symbol_order=6406)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_table<hash_map<tree_node*, function_graph_array>::hash_entry, false, xcallocator>::is_deleted (struct value_type & v)
{
  bool D.259995;
  bool D.259993;

  <bb 2> :
  D.259995 = hash_map<tree_node*, function_graph_array>::hash_entry::is_deleted (v);
  D.259993 = D.259995;

  <bb 3> :
<L0>:
  return D.259993;

}



;; Function hash_map<tree_node*, function_graph_array>::hash_entry::is_deleted (_ZN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry10is_deletedERKS8_, funcdef_no=9816, decl_uid=204981, cgraph_uid=6448, symbol_order=7241)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool hash_map<tree_node*, function_graph_array>::hash_entry::is_deleted (const struct hash_entry & e)
{
  bool D.259998;
  bool D.259996;

  <bb 2> :
  D.259998 = simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_deleted<hash_map<tree_node*, function_graph_array>::hash_entry> (e);
  D.259996 = D.259998;

  <bb 3> :
<L0>:
  return D.259996;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_deleted<hash_map<tree_node*, function_graph_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE20function_graph_arrayE10is_deletedIN8hash_mapIS2_S4_S5_E10hash_entryEEEbRKT_, funcdef_no=10375, decl_uid=239720, cgraph_uid=7007, symbol_order=7804)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
bool simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::is_deleted<hash_map<tree_node*, function_graph_array>::hash_entry> (const struct hash_entry & entry)
{
  bool D.259999;

  <bb 2> :
  _1 = entry->m_key;
  D.259999 = pointer_hash<tree_node>::is_deleted (_1);

  <bb 3> :
<L0>:
  return D.259999;

}



;; Function hash_map<tree_node*, function_graph_array>::hash_entry::remove (_ZN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS1_ES2_EE10hash_entry6removeERS8_, funcdef_no=8982, decl_uid=204977, cgraph_uid=5614, symbol_order=6407)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void hash_map<tree_node*, function_graph_array>::hash_entry::remove (struct hash_entry & e)
{
  <bb 2> :
  simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::remove<hash_map<tree_node*, function_graph_array>::hash_entry> (e);
  return;

}



;; Function simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::remove<hash_map<tree_node*, function_graph_array>::hash_entry> (_ZN21simple_hashmap_traitsI19default_hash_traitsIP9tree_nodeE20function_graph_arrayE6removeIN8hash_mapIS2_S4_S5_E10hash_entryEEEvRT_, funcdef_no=9817, decl_uid=232656, cgraph_uid=6449, symbol_order=7242)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void simple_hashmap_traits<default_hash_traits<tree_node*>, function_graph_array>::remove<hash_map<tree_node*, function_graph_array>::hash_entry> (struct hash_entry & entry)
{
  <bb 2> :
  _1 = &entry->m_key;
  ggc_remove<tree_node*>::remove (_1);
  _2 = &entry->m_value;
  *_2 = {CLOBBER};
  return;

}



;; Function xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_free (_ZN11xcallocatorIN8hash_mapIP9tree_node20function_graph_array21simple_hashmap_traitsI19default_hash_traitsIS2_ES3_EE10hash_entryEE9data_freeEPS9_, funcdef_no=8983, decl_uid=218526, cgraph_uid=5615, symbol_order=6408)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void xcallocator<hash_map<tree_node*, function_graph_array>::hash_entry>::data_free (struct hash_entry * memory)
{
  <bb 2> :
  free (memory);

  <bb 3> :
<L0>:
  return;

}



;; Function std::__cxx11::basic_string<char>::~basic_string (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev, funcdef_no=7294, decl_uid=126289, cgraph_uid=3926, symbol_order=4712)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::__cxx11::basic_string<char>::~basic_string (struct basic_string * const this)
{
  <bb 2> :
  std::__cxx11::basic_string<char>::_M_dispose (this);
  _1 = &this->_M_dataplus;
  std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider (_1);
  *this = {CLOBBER};
  return;

}



;; Function Graph::~Graph (_ZN5GraphD2Ev, funcdef_no=6882, decl_uid=205623, cgraph_uid=3513, symbol_order=4292)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void Graph::~Graph (struct Graph * const this)
{
  <bb 2> :
  _1 = &this->stack;
  std::vector<int>::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<int>::~vector (_ZNSt6vectorIiSaIiEED2Ev, funcdef_no=7936, decl_uid=167765, cgraph_uid=4568, symbol_order=5357)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<int>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.167768;
  _2 = std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator (_1);
  _3 = this->D.167768._M_impl.D.167081._M_finish;
  _4 = this->D.167768._M_impl.D.167081._M_start;
  std::_Destroy<int*, int> (_4, _3, _2);
  _5 = &this->D.167768;
  std::_Vector_base<int, std::allocator<int> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function breakpoint::~breakpoint (_ZN10breakpointD2Ev, funcdef_no=6866, decl_uid=204049, cgraph_uid=3497, symbol_order=4276)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void breakpoint::~breakpoint (struct breakpoint * const this)
{
  <bb 2> :
  _1 = &this->name;
  std::__cxx11::basic_string<char>::~basic_string (_1);
  MEM[(struct __as_base  &)this] = {CLOBBER};
  return;

}



;; Function var_points_to::~var_points_to (_ZN13var_points_toD2Ev, funcdef_no=6859, decl_uid=203870, cgraph_uid=3490, symbol_order=4269)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void var_points_to::~var_points_to (struct var_points_to * const this)
{
  <bb 2> :
  _1 = &this->may_malloc_path;
  std::vector<std::vector<std::pair<fdecl, unsigned int> > >::~vector (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<std::vector<std::pair<fdecl, unsigned int> > >::~vector (_ZNSt6vectorIS_ISt4pairI5fdecljESaIS2_EESaIS4_EED2Ev, funcdef_no=7872, decl_uid=172418, cgraph_uid=4504, symbol_order=5293)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<std::vector<std::pair<fdecl, unsigned int> > >::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.172421;
  _2 = std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_get_Tp_allocator (_1);
  _3 = this->D.172421._M_impl.D.171766._M_finish;
  _4 = this->D.172421._M_impl.D.171766._M_start;
  std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*, std::vector<std::pair<fdecl, unsigned int> > > (_4, _3, _2);
  _5 = &this->D.172421;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_get_Tp_allocator (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv, funcdef_no=8855, decl_uid=171654, cgraph_uid=5487, symbol_order=6280)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.260002;

  <bb 2> :
  D.260002 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.260002;

}



;; Function std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*, std::vector<std::pair<fdecl, unsigned int> > > (_ZSt8_DestroyIPSt6vectorISt4pairI5fdecljESaIS3_EES5_EvT_S7_RSaIT0_E, funcdef_no=8856, decl_uid=217754, cgraph_uid=5490, symbol_order=6283)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*, std::vector<std::pair<fdecl, unsigned int> > > (struct vector * __first, struct vector * __last, struct allocator & D.230637)
{
  <bb 2> :
  std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*> (__first, __last);
  return;

}



;; Function std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*> (_ZSt8_DestroyIPSt6vectorISt4pairI5fdecljESaIS3_EEEvT_S7_, funcdef_no=9728, decl_uid=231534, cgraph_uid=6361, symbol_order=7154)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<std::vector<std::pair<fdecl, unsigned int> >*> (struct vector * __first, struct vector * __last)
{
  <bb 2> :
  std::_Destroy_aux<false>::__destroy<std::vector<std::pair<fdecl, unsigned int> >*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<false>::__destroy<std::vector<std::pair<fdecl, unsigned int> >*> (_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorISt4pairI5fdecljESaIS5_EEEEvT_S9_, funcdef_no=10313, decl_uid=239290, cgraph_uid=6945, symbol_order=7742)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void std::_Destroy_aux<false>::__destroy<std::vector<std::pair<fdecl, unsigned int> >*> (struct vector * __first, struct vector * __last)
{
  <bb 2> :
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = std::__addressof<std::vector<std::pair<fdecl, unsigned int> > > (__first);
  std::_Destroy<std::vector<std::pair<fdecl, unsigned int> > > (_1);
  __first = __first + 24;

  <bb 4> :
  if (__first != __last)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



;; Function std::__addressof<std::vector<std::pair<fdecl, unsigned int> > > (_ZSt11__addressofISt6vectorISt4pairI5fdecljESaIS3_EEEPT_RS6_, funcdef_no=10744, decl_uid=243909, cgraph_uid=7376, symbol_order=8173)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct vector * std::__addressof<std::vector<std::pair<fdecl, unsigned int> > > (struct vector & __r)
{
  struct vector * D.260004;

  <bb 2> :
  D.260004 = __r;

  <bb 3> :
<L0>:
  return D.260004;

}



;; Function std::_Destroy<std::vector<std::pair<fdecl, unsigned int> > > (_ZSt8_DestroyISt6vectorISt4pairI5fdecljESaIS3_EEEvPT_, funcdef_no=10745, decl_uid=243911, cgraph_uid=7377, symbol_order=8174)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<std::vector<std::pair<fdecl, unsigned int> > > (struct vector * __pointer)
{
  <bb 2> :
  std::vector<std::pair<fdecl, unsigned int> >::~vector (__pointer);
  return;

}



;; Function std::vector<std::pair<fdecl, unsigned int> >::~vector (_ZNSt6vectorISt4pairI5fdecljESaIS2_EED2Ev, funcdef_no=10927, decl_uid=217741, cgraph_uid=7559, symbol_order=8358)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<std::pair<fdecl, unsigned int> >::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.217744;
  _2 = std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_get_Tp_allocator (_1);
  _3 = this->D.217744._M_impl.D.217089._M_finish;
  _4 = this->D.217744._M_impl.D.217089._M_start;
  std::_Destroy<std::pair<fdecl, unsigned int>*, std::pair<fdecl, unsigned int> > (_4, _3, _2);
  _5 = &this->D.217744;
  std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_get_Tp_allocator (_ZNSt12_Vector_baseISt4pairI5fdecljESaIS2_EE19_M_get_Tp_allocatorEv, funcdef_no=11009, decl_uid=216977, cgraph_uid=7641, symbol_order=8440)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & D.260006;

  <bb 2> :
  D.260006 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.260006;

}



;; Function std::_Destroy<std::pair<fdecl, unsigned int>*, std::pair<fdecl, unsigned int> > (_ZSt8_DestroyIPSt4pairI5fdecljES2_EvT_S4_RSaIT0_E, funcdef_no=11010, decl_uid=247223, cgraph_uid=7642, symbol_order=8441)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<std::pair<fdecl, unsigned int>*, std::pair<fdecl, unsigned int> > (struct pair * __first, struct pair * __last, struct allocator & D.247609)
{
  <bb 2> :
  std::_Destroy<std::pair<fdecl, unsigned int>*> (__first, __last);
  return;

}



;; Function std::_Destroy<std::pair<fdecl, unsigned int>*> (_ZSt8_DestroyIPSt4pairI5fdecljEEvT_S4_, funcdef_no=11046, decl_uid=247611, cgraph_uid=7679, symbol_order=8478)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<std::pair<fdecl, unsigned int>*> (struct pair * __first, struct pair * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<std::pair<fdecl, unsigned int>*> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<std::pair<fdecl, unsigned int>*> (_ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairI5fdecljEEEvT_S6_, funcdef_no=11071, decl_uid=248115, cgraph_uid=7703, symbol_order=8502)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<std::pair<fdecl, unsigned int>*> (struct pair * D.248214, struct pair * D.248215)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::~_Vector_base (_ZNSt12_Vector_baseISt4pairI5fdecljESaIS2_EED2Ev, funcdef_no=11007, decl_uid=217199, cgraph_uid=7639, symbol_order=8438)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.217089._M_end_of_storage;
  _2 = this->_M_impl.D.217089._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.217089._M_start;
  std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_deallocate (_ZNSt12_Vector_baseISt4pairI5fdecljESaIS2_EE13_M_deallocateEPS2_m, funcdef_no=11045, decl_uid=217096, cgraph_uid=7677, symbol_order=8476)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_M_deallocate (struct _Vector_base * const this, struct pair * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<std::pair<fdecl, unsigned int> > >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<std::pair<fdecl, unsigned int> > >::deallocate (_ZNSt16allocator_traitsISaISt4pairI5fdecljEEE10deallocateERS3_PS2_m, funcdef_no=11070, decl_uid=216901, cgraph_uid=7702, symbol_order=8501)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<std::pair<fdecl, unsigned int> > >::deallocate (struct allocator_type & __a, struct pair * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::deallocate (_ZN9__gnu_cxx13new_allocatorISt4pairI5fdecljEE10deallocateEPS3_m, funcdef_no=11079, decl_uid=216752, cgraph_uid=7711, symbol_order=8510)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::deallocate (struct new_allocator * const this, struct pair * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseISt4pairI5fdecljESaIS2_EE12_Vector_implD2Ev, funcdef_no=11005, decl_uid=217136, cgraph_uid=7636, symbol_order=8435)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::pair<fdecl, unsigned int>, std::allocator<std::pair<fdecl, unsigned int> > >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<std::pair<fdecl, unsigned int> >::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<std::pair<fdecl, unsigned int> >::~allocator (_ZNSaISt4pairI5fdecljEED2Ev, funcdef_no=11043, decl_uid=216869, cgraph_uid=7675, symbol_order=8474)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<std::pair<fdecl, unsigned int> >::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::~new_allocator (_ZN9__gnu_cxx13new_allocatorISt4pairI5fdecljEED2Ev, funcdef_no=11068, decl_uid=216798, cgraph_uid=7700, symbol_order=8499)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<std::pair<fdecl, unsigned int> >::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::~_Vector_base (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EED2Ev, funcdef_no=7869, decl_uid=171876, cgraph_uid=4501, symbol_order=5290)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.171766._M_end_of_storage;
  _2 = this->_M_impl.D.171766._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 24;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.171766._M_start;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_deallocate (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EE13_M_deallocateEPS5_m, funcdef_no=8854, decl_uid=171773, cgraph_uid=5486, symbol_order=6279)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_M_deallocate (struct _Vector_base * const this, struct vector * __p, size_t __n)
{
  <bb 2> :
  if (__p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this->_M_impl;
  std::allocator_traits<std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::deallocate (_1, __p, __n);

  <bb 4> :
  return;

}



;; Function std::allocator_traits<std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::deallocate (_ZNSt16allocator_traitsISaISt6vectorISt4pairI5fdecljESaIS3_EEEE10deallocateERS6_PS5_m, funcdef_no=9727, decl_uid=171578, cgraph_uid=6359, symbol_order=7152)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::deallocate (struct allocator_type & __a, struct vector * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::deallocate (_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairI5fdecljESaIS4_EEE10deallocateEPS6_m, funcdef_no=10312, decl_uid=171429, cgraph_uid=6944, symbol_order=7741)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::deallocate (struct new_allocator * const this, struct vector * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 24;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseISt6vectorISt4pairI5fdecljESaIS3_EESaIS5_EE12_Vector_implD2Ev, funcdef_no=6850, decl_uid=171813, cgraph_uid=3478, symbol_order=4257)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<std::vector<std::pair<fdecl, unsigned int> >, std::allocator<std::vector<std::pair<fdecl, unsigned int> > > >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::~allocator (_ZNSaISt6vectorISt4pairI5fdecljESaIS2_EEED2Ev, funcdef_no=7866, decl_uid=171546, cgraph_uid=4498, symbol_order=5287)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<std::vector<std::pair<fdecl, unsigned int> > >::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::~new_allocator (_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairI5fdecljESaIS4_EEED2Ev, funcdef_no=8852, decl_uid=171475, cgraph_uid=5484, symbol_order=6277)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<std::vector<std::pair<fdecl, unsigned int> > >::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function insert_always_inline (_Z20insert_always_inlinev, funcdef_no=6920, decl_uid=206011, cgraph_uid=3552, symbol_order=4331)

Merging blocks 5 and 33
Removing basic block 24
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
;;
;; Loop 1
;;  header 33, latch 32
;;  depth 1, outer 0
;;  nodes: 33 32 31 5 4 3 30 29 28 6 27 23 26 25 24 18 17 14 16 15 12 13 11 10 8 9 7 22 21 20 19
;;
;; Loop 2
;;  header 28, latch 27
;;  depth 2, outer 1
;;  nodes: 28 27 23 26 25 24 18 17 14 16 15 12 13 11 10 8 9 7 22 21 20 19
;; 2 succs { 33 }
;; 3 succs { 35 4 }
;; 4 succs { 5 6 }
;; 5 succs { 32 }
;; 6 succs { 28 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 35 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 15 17 }
;; 15 succs { 35 16 }
;; 16 succs { 17 }
;; 17 succs { 35 18 }
;; 18 succs { 19 24 }
;; 19 succs { 35 20 }
;; 20 succs { 35 21 }
;; 21 succs { 35 22 }
;; 22 succs { 35 23 }
;; 23 succs { 35 27 }
;; 24 succs { 35 25 }
;; 25 succs { 35 26 }
;; 26 succs { 35 27 }
;; 27 succs { 28 }
;; 28 succs { 7 29 }
;; 29 succs { 35 30 }
;; 30 succs { 35 31 }
;; 31 succs { 32 }
;; 32 succs { 33 }
;; 33 succs { 3 34 }
;; 34 succs { 1 }
;; 35 succs { }
void insert_always_inline ()
{
  struct cgraph_node * D.260050;
  const char * D.260046;
  union tree_node * D.260045;
  union tree_node * D.260044;
  const char * D.260043;
  union tree_node * D.260042;
  union tree_node * D.260041;
  struct cgraph_node * D.260040;
  bool D.260039;
  struct cgraph_node * D.260038;
  union tree_node * callee_tree;
  struct cgraph_node * callee;
  struct cgraph_node * caller;
  availability avail;
  union tree_node * attr;
  struct cgraph_edge * e;
  struct basic_block_def * bb;
  bool always_inline;
  const char * name;
  struct cgraph_node * node;
  bool retval.2214;
  union tree_node * iftmp.2213;
  struct cgraph_node * iftmp.2212;
  bool retval.2211;

  <bb 2> :
  symtab.2210_1 = symtab;
  D.260038 = symbol_table::first_defined_function (symtab.2210_1);
  node = D.260038;
  goto <bb 33>; [INV]

  <bb 3> :
  _2 = node->D.97512.decl;
  D.260039 = gimple_has_body_p (_2);

  <bb 4> :
  _3 = D.260039;
  retval.2211 = ~_3;
  if (retval.2211 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  // predicted unlikely by continue predictor.
  avail = {CLOBBER};
  goto <bb 32>; [INV]

  <bb 6> :
  e = node->callees;
  goto <bb 28>; [INV]

  <bb 7> :
  _4 = e->caller;
  _5 = _4->inlined_to;
  if (_5 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _6 = e->caller;
  iftmp.2212 = _6->inlined_to;
  goto <bb 10>; [INV]

  <bb 9> :
  iftmp.2212 = e->caller;

  <bb 10> :
  caller = iftmp.2212;
  _7 = e->callee;
  D.260040 = cgraph_node::ultimate_alias_target (_7, &avail, caller);

  <bb 11> :
  callee = D.260040;
  if (callee != 0B)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _8 = callee->D.97512.decl;
  iftmp.2213 = _8->function_decl.function_specific_optimization;
  goto <bb 14>; [INV]

  <bb 13> :
  iftmp.2213 = 0B;

  <bb 14> :
  callee_tree = iftmp.2213;
  _9 = callee->D.97512.decl;
  _10 = _9->decl_common.attributes;
  if (_10 != 0B)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  _11 = callee->D.97512.decl;
  _12 = _11->decl_common.attributes;
  D.260041 = get_attribute_name (_12);

  <bb 16> :
  attr = D.260041;

  <bb 17> :
  _13 = callee->D.97512.decl;
  _14 = _13->decl_common.attributes;
  D.260042 = lookup_attribute ("noinline", _14);

  <bb 18> :
  _15 = D.260042;
  retval.2214 = _15 == 0B;
  if (retval.2214 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 19> :
  _16 = callee->D.97512.decl;
  D.260043 = get_name (_16);

  <bb 20> :
  _17 = D.260043;
  stderr.2215_18 = stderr;
  fprintf (stderr.2215_18, "=======node_fun:%s=========\n", _17);

  <bb 21> :
  _19 = callee->D.97512.decl;
  _20 = _19->decl_common.attributes;
  D.260044 = get_identifier_with_length ("noinline", 8);

  <bb 22> :
  _21 = D.260044;
  _22 = callee->D.97512.decl;
  D.260045 = tree_cons (_21, 0B, _20);

  <bb 23> :
  _23 = D.260045;
  _22->decl_common.attributes = _23;
  _24 = callee->D.97512.decl;
  _24->function_decl.disregard_inline_limits = 1;
  _25 = callee->D.97512.decl;
  _26 = _25->decl_common.attributes;
  debug_tree (_26);
  goto <bb 27>; [INV]

  <bb 24> :
  _27 = callee->D.97512.decl;
  D.260046 = get_name (_27);

  <bb 25> :
  _28 = D.260046;
  stderr.2216_29 = stderr;
  fprintf (stderr.2216_29, "=======node_fun:%s=========\n", _28);

  <bb 26> :
  _30 = callee->D.97512.decl;
  _31 = _30->decl_common.attributes;
  debug_tree (_31);

  <bb 27> :
  e = e->next_callee;

  <bb 28> :
  if (e != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 29> :
  _32 = node->D.97512.decl;
  _33 = _32->function_decl.f;
  push_cfun (_33);

  <bb 30> :
  pop_cfun ();

  <bb 31> :
  avail = {CLOBBER};

  <bb 32> :
  symtab.2217_34 = symtab;
  D.260050 = symbol_table::next_defined_function (symtab.2217_34, node);
  node = D.260050;

  <bb 33> :
  if (node != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 34> :
  return;

  <bb 35> :
<L23>:
  avail = {CLOBBER};
  resx 1

}



;; Function lookup_attribute (_ZL16lookup_attributePKcP9tree_node, funcdef_no=3026, decl_uid=110094, cgraph_uid=2128, symbol_order=2293)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
union tree_node * lookup_attribute (const char * attr_name, union tree_node * list)
{
  union tree_node * D.260055;
  size_t attr_len;
  union tree_node * D.260053;

  <bb 2> :
  if (list == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.260053 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  attr_len = strlen (attr_name);
  D.260055 = private_lookup_attribute (attr_name, attr_len, list);
  D.260053 = D.260055;

  <bb 5> :
<L2>:
  return D.260053;

}



;; Function test_always (_ZL11test_alwaysv, funcdef_no=6921, decl_uid=206071, cgraph_uid=3553, symbol_order=4339)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int test_always ()
{
  int D.260056;

  <bb 2> :
  insert_always_inline ();
  D.260056 = 0;

  <bb 3> :
<L0>:
  return D.260056;

}



;; Function make_pass_ipa_always (_Z20make_pass_ipa_alwaysPN3gcc7contextE, funcdef_no=6931, decl_uid=206142, cgraph_uid=3563, symbol_order=4349)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { }
struct ipa_opt_pass_d * make_pass_ipa_always (struct context * ctxt)
{
  void * D.260060;
  void * D.206144;
  struct ipa_opt_pass_d * D.260058;

  <bb 2> :
  D.260060 = operator new (160);
  D.206144 = D.260060;
  {anonymous}::pass_ipa_always::pass_ipa_always (D.206144, ctxt);

  <bb 3> :
  D.260058 = D.206144;

  <bb 4> :
<L0>:
  return D.260058;

  <bb 5> :
<L1>:
  operator delete (D.206144, 160);
  resx 1

}



;; Function {anonymous}::pass_ipa_always::pass_ipa_always (_ZN12_GLOBAL__N_115pass_ipa_alwaysC2EPN3gcc7contextE, funcdef_no=6927, decl_uid=206102, cgraph_uid=3559, symbol_order=4345)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_always::pass_ipa_always (struct pass_ipa_always * const this, struct context * ctxt)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.206105;
  ipa_opt_pass_d::ipa_opt_pass_d (_1, &inline_pass_data, ctxt, 0B, 0B, 0B, 0B, 0B, 0B, 0, 0B, 0B);
  _2 = &_ZTVN12_GLOBAL__N_115pass_ipa_alwaysE + 16;
  this->D.206105.D.88937._vptr.opt_pass = _2;
  return;

}



;; Function {anonymous}::pass_ipa_always::execute (_ZN12_GLOBAL__N_115pass_ipa_always7executeEP8function, funcdef_no=6929, decl_uid=206082, cgraph_uid=3561, symbol_order=4347)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int {anonymous}::pass_ipa_always::execute (struct pass_ipa_always * const this, struct function * D.206080)
{
  int D.260064;
  unsigned int D.260062;

  <bb 2> :
  D.260064 = test_always ();
  _1 = D.260064;
  D.260062 = (unsigned int) _1;

  <bb 3> :
<L0>:
  return D.260062;

}



;; Function {anonymous}::pass_ipa_always::clone (_ZN12_GLOBAL__N_115pass_ipa_always5cloneEv, funcdef_no=6930, decl_uid=206085, cgraph_uid=3562, symbol_order=4348)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pass_ipa_always * {anonymous}::pass_ipa_always::clone (struct pass_ipa_always * const this)
{
  struct pass_ipa_always * D.260065;

  <bb 2> :
  D.260065 = this;

  <bb 3> :
<L0>:
  return D.260065;

}



;; Function {anonymous}::pass_ipa_always::~pass_ipa_always (_ZN12_GLOBAL__N_115pass_ipa_alwaysD0Ev, funcdef_no=11087, decl_uid=206090, cgraph_uid=7719, symbol_order=8520)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_always::~pass_ipa_always (struct pass_ipa_always * const this)
{
  <bb 2> :
  {anonymous}::pass_ipa_always::~pass_ipa_always (this);
  operator delete (this, 160);
  return;

}



;; Function {anonymous}::pass_ipa_always::~pass_ipa_always (_ZN12_GLOBAL__N_115pass_ipa_alwaysD2Ev, funcdef_no=11085, decl_uid=206096, cgraph_uid=7717, symbol_order=8518)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_always::~pass_ipa_always (struct pass_ipa_always * const this)
{
  <bb 2> :
  _1 = &_ZTVN12_GLOBAL__N_115pass_ipa_alwaysE + 16;
  this->D.206105.D.88937._vptr.opt_pass = _1;
  _2 = &this->D.206105;
  ipa_opt_pass_d::~ipa_opt_pass_d (_2);
  *this = {CLOBBER};
  return;

}



;; Function ipa_opt_pass_d::~ipa_opt_pass_d (_ZN14ipa_opt_pass_dD2Ev, funcdef_no=6924, decl_uid=88908, cgraph_uid=3555, symbol_order=4341)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ipa_opt_pass_d::~ipa_opt_pass_d (struct ipa_opt_pass_d * const this)
{
  <bb 2> :
  _1 = &_ZTV14ipa_opt_pass_d + 16;
  this->D.88937._vptr.opt_pass = _1;
  _2 = &this->D.88937;
  opt_pass::~opt_pass (_2);
  *this = {CLOBBER};
  return;

}



;; Function ipa_opt_pass_d::~ipa_opt_pass_d (_ZN14ipa_opt_pass_dD0Ev, funcdef_no=6926, decl_uid=88902, cgraph_uid=3557, symbol_order=4343)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ipa_opt_pass_d::~ipa_opt_pass_d (struct ipa_opt_pass_d * const this)
{
  <bb 2> :
  ipa_opt_pass_d::~ipa_opt_pass_d (this);
  operator delete (this, 160);
  return;

}



;; Function opt_pass::~opt_pass (_ZN8opt_passD2Ev, funcdef_no=1884, decl_uid=88726, cgraph_uid=1023, symbol_order=1183)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void opt_pass::~opt_pass (struct opt_pass * const this)
{
  <bb 2> :
  _1 = &_ZTV8opt_pass + 16;
  this->_vptr.opt_pass = _1;
  *this = {CLOBBER};
  return;

}



;; Function opt_pass::~opt_pass (_ZN8opt_passD0Ev, funcdef_no=1886, decl_uid=88720, cgraph_uid=1025, symbol_order=1185)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void opt_pass::~opt_pass (struct opt_pass * const this)
{
  <bb 2> :
  opt_pass::~opt_pass (this);
  operator delete (this, 88);
  return;

}



;; Function ipa_opt_pass_d::ipa_opt_pass_d (_ZN14ipa_opt_pass_dC2ERK9pass_dataPN3gcc7contextEPFvvES7_S7_S7_S7_PFvP11cgraph_nodePP6gimpleEjPFjS9_EPFvP12varpool_nodeE, funcdef_no=1894, decl_uid=88924, cgraph_uid=1033, symbol_order=1193)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void ipa_opt_pass_d::ipa_opt_pass_d (struct ipa_opt_pass_d * const this, const struct pass_data & data, struct context * ctxt, void (*<T6a3>) (void) generate_summary, void (*<T6a3>) (void) write_summary, void (*<T6a3>) (void) read_summary, void (*<T6a3>) (void) write_optimization_summary, void (*<T6a3>) (void) read_optimization_summary, void (*<T57cc>) (struct cgraph_node *, struct gimple * *) stmt_fixup, unsigned int function_transform_todo_flags_start, unsigned int (*<T57ce>) (struct cgraph_node *) function_transform, void (*<T57d1>) (struct varpool_node *) variable_transform)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.88937;
  opt_pass::opt_pass (_1, data, ctxt);
  _2 = &_ZTV14ipa_opt_pass_d + 16;
  this->D.88937._vptr.opt_pass = _2;
  this->generate_summary = generate_summary;
  this->write_summary = write_summary;
  this->read_summary = read_summary;
  this->write_optimization_summary = write_optimization_summary;
  this->read_optimization_summary = read_optimization_summary;
  this->stmt_fixup = stmt_fixup;
  this->function_transform_todo_flags_start = function_transform_todo_flags_start;
  this->function_transform = function_transform;
  this->variable_transform = variable_transform;
  return;

}



;; Function execute_detect (_ZL14execute_detectv, funcdef_no=6932, decl_uid=206163, cgraph_uid=3564, symbol_order=4350)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int execute_detect ()
{
  int D.260067;

  <bb 2> :
  argc.2218_1 = argc;
  argv.2219_2 = argv;
  detect (argv.2219_2, argc.2218_1);
  D.260067 = 0;

  <bb 3> :
<L0>:
  return D.260067;

}



;; Function make_pass_detect (_Z16make_pass_detectPN3gcc7contextE, funcdef_no=6938, decl_uid=89596, cgraph_uid=3570, symbol_order=4356)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 5 succs { }
struct ipa_opt_pass_d * make_pass_detect (struct context * ctxt)
{
  void * D.260071;
  void * D.206208;
  struct ipa_opt_pass_d * D.260069;

  <bb 2> :
  D.260071 = operator new (160);
  D.206208 = D.260071;
  {anonymous}::pass_ipa_detect::pass_ipa_detect (D.206208, ctxt);

  <bb 3> :
  D.260069 = D.206208;

  <bb 4> :
<L0>:
  return D.260069;

  <bb 5> :
<L1>:
  operator delete (D.206208, 160);
  resx 1

}



;; Function {anonymous}::pass_ipa_detect::pass_ipa_detect (_ZN12_GLOBAL__N_115pass_ipa_detectC2EPN3gcc7contextE, funcdef_no=6934, decl_uid=206193, cgraph_uid=3566, symbol_order=4352)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_detect::pass_ipa_detect (struct pass_ipa_detect * const this, struct context * ctxt)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->D.206196;
  ipa_opt_pass_d::ipa_opt_pass_d (_1, &detect_pass_data, ctxt, 0B, 0B, 0B, 0B, 0B, 0B, 0, 0B, 0B);
  _2 = &_ZTVN12_GLOBAL__N_115pass_ipa_detectE + 16;
  this->D.206196.D.88937._vptr.opt_pass = _2;
  return;

}



;; Function {anonymous}::pass_ipa_detect::execute (_ZN12_GLOBAL__N_115pass_ipa_detect7executeEP8function, funcdef_no=6936, decl_uid=206173, cgraph_uid=3568, symbol_order=4354)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
unsigned int {anonymous}::pass_ipa_detect::execute (struct pass_ipa_detect * const this, struct function * D.206171)
{
  int D.260075;
  unsigned int D.260073;

  <bb 2> :
  D.260075 = execute_detect ();
  _1 = D.260075;
  D.260073 = (unsigned int) _1;

  <bb 3> :
<L0>:
  return D.260073;

}



;; Function {anonymous}::pass_ipa_detect::clone (_ZN12_GLOBAL__N_115pass_ipa_detect5cloneEv, funcdef_no=6937, decl_uid=206176, cgraph_uid=3569, symbol_order=4355)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct pass_ipa_detect * {anonymous}::pass_ipa_detect::clone (struct pass_ipa_detect * const this)
{
  struct pass_ipa_detect * D.260076;

  <bb 2> :
  D.260076 = this;

  <bb 3> :
<L0>:
  return D.260076;

}



;; Function {anonymous}::pass_ipa_detect::~pass_ipa_detect (_ZN12_GLOBAL__N_115pass_ipa_detectD0Ev, funcdef_no=11083, decl_uid=206181, cgraph_uid=7715, symbol_order=8515)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_detect::~pass_ipa_detect (struct pass_ipa_detect * const this)
{
  <bb 2> :
  {anonymous}::pass_ipa_detect::~pass_ipa_detect (this);
  operator delete (this, 160);
  return;

}



;; Function {anonymous}::pass_ipa_detect::~pass_ipa_detect (_ZN12_GLOBAL__N_115pass_ipa_detectD2Ev, funcdef_no=11081, decl_uid=206187, cgraph_uid=7713, symbol_order=8513)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void {anonymous}::pass_ipa_detect::~pass_ipa_detect (struct pass_ipa_detect * const this)
{
  <bb 2> :
  _1 = &_ZTVN12_GLOBAL__N_115pass_ipa_detectE + 16;
  this->D.206196.D.88937._vptr.opt_pass = _1;
  _2 = &this->D.206196;
  ipa_opt_pass_d::~ipa_opt_pass_d (_2);
  *this = {CLOBBER};
  return;

}



;; Function plugin_init (plugin_init, funcdef_no=6939, decl_uid=83835, cgraph_uid=3571, symbol_order=4357)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
int plugin_init (struct plugin_name_args * plugin_info, struct plugin_gcc_version * version)
{
  struct ipa_opt_pass_d * D.260085;
  struct ipa_opt_pass_d * D.260084;
  bool D.260083;
  int D.260081;
  bool retval.2220;

  <bb 2> :
  D.260083 = plugin_default_version_check (version, &gcc_version);
  _1 = D.260083;
  retval.2220 = ~_1;
  if (retval.2220 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __builtin_puts (&"incompatible gcc/plugin versions"[0]);
  D.260081 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = version->devphase;
  _3 = version->basever;
  _4 = plugin_info->full_name;
  stderr.2221_5 = stderr;
  fprintf (stderr.2221_5, "%s %s %s\n", _4, _3, _2);
  g.2222_6 = g;
  D.260084 = make_pass_ipa_always (g.2222_6);
  _7 = D.260084;
  inline_passinfo.pass = _7;
  inline_passinfo.reference_pass_name = "einline";
  inline_passinfo.ref_pass_instance_number = 0;
  inline_passinfo.pos_op = 1;
  g.2223_8 = g;
  D.260085 = make_pass_detect (g.2223_8);
  _9 = D.260085;
  detect_passinfo.pass = _9;
  detect_passinfo.reference_pass_name = "pta";
  detect_passinfo.ref_pass_instance_number = 0;
  detect_passinfo.pos_op = 0;
  _10 = plugin_info->argv;
  argv = _10;
  _11 = plugin_info->argc;
  argc = _11;
  register_callback ("static_analyzer", 2, 0B, &detect_passinfo);
  D.260081 = 0;

  <bb 5> :
<L2>:
  return D.260081;

}



;; Function __static_initialization_and_destruction_0 (_Z41__static_initialization_and_destruction_0ii, funcdef_no=11100, decl_uid=248282, cgraph_uid=7738, symbol_order=8584)

Removing basic block 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void __static_initialization_and_destruction_0 (int __initialize_p, int __priority)
{
  <bb 2> :
  if (__initialize_p == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  if (__priority == 65535)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::ios_base::Init::Init (&__ioinit);
  __cxxabiv1::__cxa_atexit (__dt_comp , &__ioinit, &__dso_handle);
  std::basic_ofstream<char>::basic_ofstream (&cfginfo, "cfginfo.txt", 16);
  __cxxabiv1::__cxa_atexit (__dt_comp , &cfginfo, &__dso_handle);
  ptb::ptb (&start1);
  ptb::ptb (&start2);
  ptb::ptb (&start3);
  ptb::ptb (&start4);
  ptb::ptb (&start5);
  ptb::ptb (&start6);
  ptb::ptb (&start7);
  ptb::ptb (&start8);
  ptb::ptb (&start9);
  std::vector<gimple*>::vector (&new_gimple_array);
  __cxxabiv1::__cxa_atexit (__dt_comp , &new_gimple_array, &__dso_handle);
  std::vector<tree_node*>::vector (&new_gimpletree_array);
  __cxxabiv1::__cxa_atexit (__dt_comp , &new_gimpletree_array, &__dso_handle);
  std::vector<basic_block_def*>::vector (&new_path_array);
  __cxxabiv1::__cxa_atexit (__dt_comp , &new_path_array, &__dso_handle);
  std::vector<tree_node*>::vector (&traceStack);
  __cxxabiv1::__cxa_atexit (__dt_comp , &traceStack, &__dso_handle);
  std::vector<tree_node*>::vector (&pathStack);
  __cxxabiv1::__cxa_atexit (__dt_comp , &pathStack, &__dso_handle);
  std::vector<basic_block_def*>::vector (&symbolicExecution);
  __cxxabiv1::__cxa_atexit (__dt_comp , &symbolicExecution, &__dso_handle);
  std::vector<basic_block_def*>::vector (&symbolicExecutionswitch);
  __cxxabiv1::__cxa_atexit (__dt_comp , &symbolicExecutionswitch, &__dso_handle);
  std::vector<breakpoint>::vector (&vbreakpoint);
  __cxxabiv1::__cxa_atexit (__dt_comp , &vbreakpoint, &__dso_handle);
  std::vector<return_type>::vector (&global_ret_type_array);
  __cxxabiv1::__cxa_atexit (__dt_comp , &global_ret_type_array, &__dso_handle);
  CStack::CStack (&stmtStack);
  __cxxabiv1::__cxa_atexit (__dt_comp , &stmtStack, &__dso_handle);
  CstmtStack::CstmtStack (&stmtStack2);
  __cxxabiv1::__cxa_atexit (__dt_comp , &stmtStack2, &__dso_handle);

  <bb 5> :
  return;

}



;; Function CstmtStack::~CstmtStack (_ZN10CstmtStackD2Ev, funcdef_no=11105, decl_uid=248310, cgraph_uid=7736, symbol_order=8582)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void CstmtStack::~CstmtStack (struct CstmtStack * const this)
{
  <bb 2> :
  _1 = &this->D.183216;
  std::stack<gimple*>::~stack (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::stack<gimple*>::~stack (_ZNSt5stackIP6gimpleSt5dequeIS1_SaIS1_EEED2Ev, funcdef_no=6233, decl_uid=186907, cgraph_uid=3208, symbol_order=3971)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::stack<gimple*>::~stack (struct stack * const this)
{
  <bb 2> :
  _1 = &this->c;
  std::deque<gimple*, std::allocator<gimple*> >::~deque (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::deque<gimple*, std::allocator<gimple*> >::~deque (_ZNSt5dequeIP6gimpleSaIS1_EED2Ev, funcdef_no=7612, decl_uid=183036, cgraph_uid=4244, symbol_order=5033)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::deque<gimple*, std::allocator<gimple*> >::~deque (struct deque * const this)
{
  struct iterator D.211697;
  struct iterator D.211698;

  <bb 2> :
  _1 = &this->D.183039;
  _2 = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_1);
  D.211698 = std::deque<gimple*, std::allocator<gimple*> >::end (this); [return slot optimization]
  D.211697 = std::deque<gimple*, std::allocator<gimple*> >::begin (this); [return slot optimization]
  std::deque<gimple*, std::allocator<gimple*> >::_M_destroy_data (this, &D.211697, &D.211698, _2);
  D.211697 = {CLOBBER};
  D.211698 = {CLOBBER};
  _3 = &this->D.183039;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::~_Deque_base (_3);
  *this = {CLOBBER};
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=8451, decl_uid=182278, cgraph_uid=5083, symbol_order=5876)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (struct _Deque_base * const this)
{
  struct _Tp_alloc_type & D.260092;

  <bb 2> :
  D.260092 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.260092;

}



;; Function std::deque<gimple*, std::allocator<gimple*> >::end (_ZNSt5dequeIP6gimpleSaIS1_EE3endEv, funcdef_no=8450, decl_uid=182622, cgraph_uid=5082, symbol_order=5875)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::deque<gimple*, std::allocator<gimple*> >::end (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.183039._M_impl.D.182433._M_finish;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (_ZNSt15_Deque_iteratorIP6gimpleRS1_PS1_EC2ERKS4_, funcdef_no=9237, decl_uid=182247, cgraph_uid=5869, symbol_order=6662)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (struct _Deque_iterator * const this, const struct _Deque_iterator & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_cur;
  this->_M_cur = _1;
  _2 = __x->_M_first;
  this->_M_first = _2;
  _3 = __x->_M_last;
  this->_M_last = _3;
  _4 = __x->_M_node;
  this->_M_node = _4;
  return;

}



;; Function std::deque<gimple*, std::allocator<gimple*> >::begin (_ZNSt5dequeIP6gimpleSaIS1_EE5beginEv, funcdef_no=8449, decl_uid=182618, cgraph_uid=5081, symbol_order=5874)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::deque<gimple*, std::allocator<gimple*> >::begin (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.183039._M_impl.D.182433._M_start;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::deque<gimple*, std::allocator<gimple*> >::_M_destroy_data (_ZNSt5dequeIP6gimpleSaIS1_EE15_M_destroy_dataESt15_Deque_iteratorIS1_RS1_PS1_ES7_RKS2_, funcdef_no=8452, decl_uid=182840, cgraph_uid=5084, symbol_order=5877)

Removing basic block 3
Removing basic block 4
Removing basic block 6
Removing basic block 7
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void std::deque<gimple*, std::allocator<gimple*> >::_M_destroy_data (struct deque * const this, struct iterator & __first, struct iterator & __last, const struct allocator & D.222440)
{
  struct iterator D.222444;
  struct iterator D.222447;

  <bb 2> :

  <bb 3> :
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::~_Deque_base (_ZNSt11_Deque_baseIP6gimpleSaIS1_EED2Ev, funcdef_no=8447, decl_uid=182488, cgraph_uid=5079, symbol_order=5872)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::~_Deque_base (struct _Deque_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.182433._M_map;
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = this->_M_impl.D.182433._M_finish._M_node;
  _3 = _2 + 8;
  _4 = this->_M_impl.D.182433._M_start._M_node;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_destroy_nodes (this, _4, _3);
  _5 = this->_M_impl.D.182433._M_map_size;
  _6 = this->_M_impl.D.182433._M_map;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_map (this, _6, _5);

  <bb 4> :
  _7 = &this->_M_impl;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::~_Deque_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_destroy_nodes (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE16_M_destroy_nodesEPPS1_S5_, funcdef_no=9234, decl_uid=182303, cgraph_uid=5866, symbol_order=6659)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_destroy_nodes (struct _Deque_base * const this, struct gimple * * * __nstart, struct gimple * * * __nfinish)
{
  struct gimple * * * __n;

  <bb 2> :
  __n = __nstart;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = *__n;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_node (this, _1);
  __n = __n + 8;

  <bb 4> :
  if (__n < __nfinish)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_node (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE18_M_deallocate_nodeEPS1_, funcdef_no=9970, decl_uid=182286, cgraph_uid=6602, symbol_order=7399)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_node (struct _Deque_base * const this, struct gimple * * __p)
{
  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = &this->_M_impl;
  std::allocator_traits<std::allocator<gimple*> >::deallocate (_2, __p, _1);
  return;

}



;; Function std::__deque_buf_size (_ZSt16__deque_buf_sizem, funcdef_no=5338, decl_uid=156256, cgraph_uid=2732, symbol_order=2922)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
size_t std::__deque_buf_size (size_t __size)
{
  size_t iftmp.2224;
  size_t D.260106;

  <bb 2> :
  if (__size <= 511)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.2224 = 512 / __size;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2224 = 1;

  <bb 5> :
  D.260106 = iftmp.2224;

  <bb 6> :
<L3>:
  return D.260106;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_map (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE17_M_deallocate_mapEPPS1_m, funcdef_no=9235, decl_uid=182292, cgraph_uid=5867, symbol_order=6660)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_map (struct _Deque_base * const this, struct gimple * * * __p, size_t __n)
{
  struct _Map_alloc_type __map_alloc;

  <bb 2> :
  __map_alloc = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_map_allocator (this); [return slot optimization]
  std::allocator_traits<std::allocator<gimple**> >::deallocate (&__map_alloc, __p, __n);
  std::allocator<gimple**>::~allocator (&__map_alloc);
  __map_alloc = {CLOBBER};
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_map_allocator (_ZNKSt11_Deque_baseIP6gimpleSaIS1_EE20_M_get_map_allocatorEv, funcdef_no=9971, decl_uid=182282, cgraph_uid=6603, symbol_order=7400)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Map_alloc_type std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_map_allocator (const struct _Deque_base * const this)
{
  <bb 2> :
  _1 = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (this);
  std::allocator<gimple**>::allocator<gimple*> (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_ZNKSt11_Deque_baseIP6gimpleSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=10501, decl_uid=182280, cgraph_uid=7133, symbol_order=7930)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (const struct _Deque_base * const this)
{
  const struct _Tp_alloc_type & D.260114;

  <bb 2> :
  D.260114 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.260114;

}



;; Function std::allocator<gimple**>::allocator<gimple*> (_ZNSaIPP6gimpleEC2IS0_EERKSaIT_E, funcdef_no=10503, decl_uid=241698, cgraph_uid=7135, symbol_order=7932)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<gimple**>::allocator<gimple*> (struct allocator * const this, const struct allocator & D.241700)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple**>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple**>::new_allocator (_ZN9__gnu_cxx13new_allocatorIPP6gimpleEC2Ev, funcdef_no=10852, decl_uid=181948, cgraph_uid=7484, symbol_order=8283)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple**>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::allocator_traits<std::allocator<gimple**> >::deallocate (_ZNSt16allocator_traitsISaIPP6gimpleEE10deallocateERS3_PS2_m, funcdef_no=9975, decl_uid=234056, cgraph_uid=6607, symbol_order=7404)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<gimple**> >::deallocate (struct allocator_type & __a, struct gimple * * * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple**>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple**>::deallocate (_ZN9__gnu_cxx13new_allocatorIPP6gimpleE10deallocateEPS3_m, funcdef_no=10508, decl_uid=181907, cgraph_uid=7140, symbol_order=7937)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<gimple**>::deallocate (struct new_allocator * const this, struct gimple * * * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 8;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::allocator<gimple**>::~allocator (_ZNSaIPP6gimpleED2Ev, funcdef_no=9973, decl_uid=182024, cgraph_uid=6605, symbol_order=7402)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<gimple**>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple**>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple**>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIPP6gimpleED2Ev, funcdef_no=10506, decl_uid=181953, cgraph_uid=7138, symbol_order=7935)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple**>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::~_Deque_impl (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE11_Deque_implD2Ev, funcdef_no=8442, decl_uid=182920, cgraph_uid=5073, symbol_order=5866)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::~_Deque_impl (struct _Deque_impl * const this)
{
  <bb 2> :
  std::allocator<gimple*>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<gimple*>::~allocator (_ZNSaIP6gimpleED2Ev, funcdef_no=7555, decl_uid=181751, cgraph_uid=4187, symbol_order=4976)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<gimple*>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple*>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple*>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIP6gimpleED2Ev, funcdef_no=8384, decl_uid=181680, cgraph_uid=5016, symbol_order=5809)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple*>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function CStack::~CStack (_ZN6CStackD2Ev, funcdef_no=11102, decl_uid=248294, cgraph_uid=7733, symbol_order=8579)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void CStack::~CStack (struct CStack * const this)
{
  <bb 2> :
  _1 = &this->D.181570;
  std::stack<tree_node*>::~stack (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::stack<tree_node*>::~stack (_ZNSt5stackIP9tree_nodeSt5dequeIS1_SaIS1_EEED2Ev, funcdef_no=6226, decl_uid=186701, cgraph_uid=3201, symbol_order=3963)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::stack<tree_node*>::~stack (struct stack * const this)
{
  <bb 2> :
  _1 = &this->c;
  std::deque<tree_node*, std::allocator<tree_node*> >::~deque (_1);
  *this = {CLOBBER};
  return;

}



;; Function std::deque<tree_node*, std::allocator<tree_node*> >::~deque (_ZNSt5dequeIP9tree_nodeSaIS1_EED2Ev, funcdef_no=7603, decl_uid=181374, cgraph_uid=4235, symbol_order=5024)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::deque<tree_node*, std::allocator<tree_node*> >::~deque (struct deque * const this)
{
  struct iterator D.211673;
  struct iterator D.211674;

  <bb 2> :
  _1 = &this->D.181377;
  _2 = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_1);
  D.211674 = std::deque<tree_node*, std::allocator<tree_node*> >::end (this); [return slot optimization]
  D.211673 = std::deque<tree_node*, std::allocator<tree_node*> >::begin (this); [return slot optimization]
  std::deque<tree_node*, std::allocator<tree_node*> >::_M_destroy_data (this, &D.211673, &D.211674, _2);
  D.211673 = {CLOBBER};
  D.211674 = {CLOBBER};
  _3 = &this->D.181377;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::~_Deque_base (_3);
  *this = {CLOBBER};
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=8438, decl_uid=180583, cgraph_uid=5070, symbol_order=5863)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Tp_alloc_type & std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (struct _Deque_base * const this)
{
  struct _Tp_alloc_type & D.260119;

  <bb 2> :
  D.260119 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.260119;

}



;; Function std::deque<tree_node*, std::allocator<tree_node*> >::end (_ZNSt5dequeIP9tree_nodeSaIS1_EE3endEv, funcdef_no=8437, decl_uid=180931, cgraph_uid=5069, symbol_order=5862)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::deque<tree_node*, std::allocator<tree_node*> >::end (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.181377._M_impl.D.180738._M_finish;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (_ZNSt15_Deque_iteratorIP9tree_nodeRS1_PS1_EC2ERKS4_, funcdef_no=9227, decl_uid=180552, cgraph_uid=5859, symbol_order=6652)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (struct _Deque_iterator * const this, const struct _Deque_iterator & __x)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = __x->_M_cur;
  this->_M_cur = _1;
  _2 = __x->_M_first;
  this->_M_first = _2;
  _3 = __x->_M_last;
  this->_M_last = _3;
  _4 = __x->_M_node;
  this->_M_node = _4;
  return;

}



;; Function std::deque<tree_node*, std::allocator<tree_node*> >::begin (_ZNSt5dequeIP9tree_nodeSaIS1_EE5beginEv, funcdef_no=8436, decl_uid=180927, cgraph_uid=5068, symbol_order=5861)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct iterator std::deque<tree_node*, std::allocator<tree_node*> >::begin (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.181377._M_impl.D.180738._M_start;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::deque<tree_node*, std::allocator<tree_node*> >::_M_destroy_data (_ZNSt5dequeIP9tree_nodeSaIS1_EE15_M_destroy_dataESt15_Deque_iteratorIS1_RS1_PS1_ES7_RKS2_, funcdef_no=8439, decl_uid=181177, cgraph_uid=5071, symbol_order=5864)

Removing basic block 3
Removing basic block 4
Removing basic block 6
Removing basic block 7
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
void std::deque<tree_node*, std::allocator<tree_node*> >::_M_destroy_data (struct deque * const this, struct iterator & __first, struct iterator & __last, const struct allocator & D.222387)
{
  struct iterator D.222391;
  struct iterator D.222394;

  <bb 2> :

  <bb 3> :
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::~_Deque_base (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EED2Ev, funcdef_no=8434, decl_uid=180793, cgraph_uid=5066, symbol_order=5859)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::~_Deque_base (struct _Deque_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.180738._M_map;
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = this->_M_impl.D.180738._M_finish._M_node;
  _3 = _2 + 8;
  _4 = this->_M_impl.D.180738._M_start._M_node;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_destroy_nodes (this, _4, _3);
  _5 = this->_M_impl.D.180738._M_map_size;
  _6 = this->_M_impl.D.180738._M_map;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_map (this, _6, _5);

  <bb 4> :
  _7 = &this->_M_impl;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::~_Deque_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_destroy_nodes (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE16_M_destroy_nodesEPPS1_S5_, funcdef_no=9224, decl_uid=180608, cgraph_uid=5856, symbol_order=6649)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_destroy_nodes (struct _Deque_base * const this, union tree_node * * * __nstart, union tree_node * * * __nfinish)
{
  union tree_node * * * __n;

  <bb 2> :
  __n = __nstart;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = *__n;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_node (this, _1);
  __n = __n + 8;

  <bb 4> :
  if (__n < __nfinish)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_node (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE18_M_deallocate_nodeEPS1_, funcdef_no=9957, decl_uid=180591, cgraph_uid=6589, symbol_order=7386)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_node (struct _Deque_base * const this, union tree_node * * __p)
{
  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = &this->_M_impl;
  std::allocator_traits<std::allocator<tree_node*> >::deallocate (_2, __p, _1);
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_map (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE17_M_deallocate_mapEPPS1_m, funcdef_no=9225, decl_uid=180597, cgraph_uid=5857, symbol_order=6650)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_map (struct _Deque_base * const this, union tree_node * * * __p, size_t __n)
{
  struct _Map_alloc_type __map_alloc;

  <bb 2> :
  __map_alloc = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_map_allocator (this); [return slot optimization]
  std::allocator_traits<std::allocator<tree_node**> >::deallocate (&__map_alloc, __p, __n);
  std::allocator<tree_node**>::~allocator (&__map_alloc);
  __map_alloc = {CLOBBER};
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_map_allocator (_ZNKSt11_Deque_baseIP9tree_nodeSaIS1_EE20_M_get_map_allocatorEv, funcdef_no=9958, decl_uid=180587, cgraph_uid=6590, symbol_order=7387)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct _Map_alloc_type std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_map_allocator (const struct _Deque_base * const this)
{
  <bb 2> :
  _1 = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (this);
  std::allocator<tree_node**>::allocator<tree_node*> (<retval>, _1);

  <bb 3> :
<L0>:
  return <retval>;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_ZNKSt11_Deque_baseIP9tree_nodeSaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=10487, decl_uid=180585, cgraph_uid=7119, symbol_order=7916)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
const struct _Tp_alloc_type & std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (const struct _Deque_base * const this)
{
  const struct _Tp_alloc_type & D.260135;

  <bb 2> :
  D.260135 = &this->_M_impl;

  <bb 3> :
<L0>:
  return D.260135;

}



;; Function std::allocator<tree_node**>::allocator<tree_node*> (_ZNSaIPP9tree_nodeEC2IS0_EERKSaIT_E, funcdef_no=10489, decl_uid=241651, cgraph_uid=7121, symbol_order=7918)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<tree_node**>::allocator<tree_node*> (struct allocator * const this, const struct allocator & D.241653)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node**>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node**>::new_allocator (_ZN9__gnu_cxx13new_allocatorIPP9tree_nodeEC2Ev, funcdef_no=10847, decl_uid=180235, cgraph_uid=7479, symbol_order=8278)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node**>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::allocator_traits<std::allocator<tree_node**> >::deallocate (_ZNSt16allocator_traitsISaIPP9tree_nodeEE10deallocateERS3_PS2_m, funcdef_no=9962, decl_uid=233931, cgraph_uid=6594, symbol_order=7391)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator_traits<std::allocator<tree_node**> >::deallocate (struct allocator_type & __a, union tree_node * * * __p, size_type __n)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node**>::deallocate (__a, __p, __n);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node**>::deallocate (_ZN9__gnu_cxx13new_allocatorIPP9tree_nodeE10deallocateEPS3_m, funcdef_no=10494, decl_uid=180194, cgraph_uid=7126, symbol_order=7923)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void __gnu_cxx::new_allocator<tree_node**>::deallocate (struct new_allocator * const this, union tree_node * * * __p, size_type __t)
{
  <bb 2> :

  <bb 3> :
  _2 = __t * 8;
  operator delete (__p, _2);

  <bb 4> :
<L2>:
  return;

}



;; Function std::allocator<tree_node**>::~allocator (_ZNSaIPP9tree_nodeED2Ev, funcdef_no=9960, decl_uid=180311, cgraph_uid=6592, symbol_order=7389)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<tree_node**>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node**>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node**>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIPP9tree_nodeED2Ev, funcdef_no=10492, decl_uid=180240, cgraph_uid=7124, symbol_order=7921)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node**>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::~_Deque_impl (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE11_Deque_implD2Ev, funcdef_no=8429, decl_uid=181258, cgraph_uid=5060, symbol_order=5853)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::~_Deque_impl (struct _Deque_impl * const this)
{
  <bb 2> :
  std::allocator<tree_node*>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<tree_node*>::~allocator (_ZNSaIP9tree_nodeED2Ev, funcdef_no=7564, decl_uid=180038, cgraph_uid=4196, symbol_order=4985)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<tree_node*>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node*>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::~new_allocator (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeED2Ev, funcdef_no=8394, decl_uid=179967, cgraph_uid=5026, symbol_order=5819)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node*>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<breakpoint>::~vector (_ZNSt6vectorI10breakpointSaIS0_EED2Ev, funcdef_no=11114, decl_uid=186233, cgraph_uid=7746, symbol_order=8950)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<breakpoint>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.186236;
  _2 = std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_get_Tp_allocator (_1);
  _3 = this->D.186236._M_impl.D.185581._M_finish;
  _4 = this->D.186236._M_impl.D.185581._M_start;
  std::_Destroy<breakpoint*, breakpoint> (_4, _3, _2);
  _5 = &this->D.186236;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::~_Vector_base (_ZNSt12_Vector_baseI10breakpointSaIS0_EED2Ev, funcdef_no=7585, decl_uid=185691, cgraph_uid=4217, symbol_order=5006)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.185581._M_end_of_storage;
  _2 = this->_M_impl.D.185581._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 40;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.185581._M_start;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseI10breakpointSaIS0_EE12_Vector_implD2Ev, funcdef_no=6207, decl_uid=185628, cgraph_uid=3181, symbol_order=3941)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<breakpoint>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::allocator<breakpoint>::~allocator (_ZNSaI10breakpointED2Ev, funcdef_no=7582, decl_uid=185361, cgraph_uid=4214, symbol_order=5003)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<breakpoint>::~allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<breakpoint>::~new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::~new_allocator (_ZN9__gnu_cxx13new_allocatorI10breakpointED2Ev, funcdef_no=8414, decl_uid=185290, cgraph_uid=5046, symbol_order=5839)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<breakpoint>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::vector<tree_node*>::~vector (_ZNSt6vectorIP9tree_nodeSaIS1_EED2Ev, funcdef_no=11111, decl_uid=184895, cgraph_uid=7743, symbol_order=8947)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<tree_node*>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.184898;
  _2 = std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_get_Tp_allocator (_1);
  _3 = this->D.184898._M_impl.D.184254._M_finish;
  _4 = this->D.184898._M_impl.D.184254._M_start;
  std::_Destroy<tree_node**, tree_node*> (_4, _3, _2);
  _5 = &this->D.184898;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<tree_node**, tree_node*> (_ZSt8_DestroyIPP9tree_nodeS1_EvT_S3_RSaIT0_E, funcdef_no=9421, decl_uid=224451, cgraph_uid=6053, symbol_order=6846)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<tree_node**, tree_node*> (union tree_node * * __first, union tree_node * * __last, struct allocator & D.236339)
{
  <bb 2> :
  std::_Destroy<tree_node**> (__first, __last);
  return;

}



;; Function std::_Destroy<tree_node**> (_ZSt8_DestroyIPP9tree_nodeEvT_S3_, funcdef_no=10102, decl_uid=236341, cgraph_uid=6734, symbol_order=7531)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<tree_node**> (union tree_node * * __first, union tree_node * * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<tree_node**> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<tree_node**> (_ZNSt12_Destroy_auxILb1EE9__destroyIPP9tree_nodeEEvT_S5_, funcdef_no=10618, decl_uid=242316, cgraph_uid=7250, symbol_order=8047)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<tree_node**> (union tree_node * * D.245715, union tree_node * * D.245716)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::~_Vector_base (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EED2Ev, funcdef_no=7567, decl_uid=184364, cgraph_uid=4199, symbol_order=4988)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.184254._M_end_of_storage;
  _2 = this->_M_impl.D.184254._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.184254._M_start;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE12_Vector_implD2Ev, funcdef_no=6187, decl_uid=184301, cgraph_uid=3161, symbol_order=3915)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<tree_node*>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<gimple*>::~vector (_ZNSt6vectorIP6gimpleSaIS1_EED2Ev, funcdef_no=11108, decl_uid=183981, cgraph_uid=7740, symbol_order=8944)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<gimple*>::~vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.183984;
  _2 = std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_get_Tp_allocator (_1);
  _3 = this->D.183984._M_impl.D.183340._M_finish;
  _4 = this->D.183984._M_impl.D.183340._M_start;
  std::_Destroy<gimple**, gimple*> (_4, _3, _2);
  _5 = &this->D.183984;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::~_Vector_base (_5);
  *this = {CLOBBER};
  return;

}



;; Function std::_Destroy<gimple**, gimple*> (_ZSt8_DestroyIPP6gimpleS1_EvT_S3_RSaIT0_E, funcdef_no=9597, decl_uid=228726, cgraph_uid=6229, symbol_order=7022)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<gimple**, gimple*> (struct gimple * * __first, struct gimple * * __last, struct allocator & D.237713)
{
  <bb 2> :
  std::_Destroy<gimple**> (__first, __last);
  return;

}



;; Function std::_Destroy<gimple**> (_ZSt8_DestroyIPP6gimpleEvT_S3_, funcdef_no=10213, decl_uid=237715, cgraph_uid=6845, symbol_order=7642)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy<gimple**> (struct gimple * * __first, struct gimple * * __last)
{
  <bb 2> :
  std::_Destroy_aux<true>::__destroy<gimple**> (__first, __last);
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<gimple**> (_ZNSt12_Destroy_auxILb1EE9__destroyIPP6gimpleEEvT_S5_, funcdef_no=10680, decl_uid=242754, cgraph_uid=7312, symbol_order=8109)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Destroy_aux<true>::__destroy<gimple**> (struct gimple * * D.245988, struct gimple * * D.245989)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::~_Vector_base (_ZNSt12_Vector_baseIP6gimpleSaIS1_EED2Ev, funcdef_no=7558, decl_uid=183450, cgraph_uid=4190, symbol_order=4979)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::~_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = this->_M_impl.D.183340._M_end_of_storage;
  _2 = this->_M_impl.D.183340._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 8;
  _5 = (long unsigned int) _4;
  _6 = this->_M_impl.D.183340._M_start;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_M_deallocate (this, _6, _5);
  _7 = &this->_M_impl;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::~_Vector_impl (_7);
  *this = {CLOBBER};
  return;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE12_Vector_implD2Ev, funcdef_no=6177, decl_uid=183387, cgraph_uid=3151, symbol_order=3904)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  std::allocator<gimple*>::~allocator (this);
  *this = {CLOBBER};
  return;

}



;; Function std::vector<gimple*>::vector (_ZNSt6vectorIP6gimpleSaIS1_EEC2Ev, funcdef_no=6181, decl_uid=183976, cgraph_uid=3157, symbol_order=3910)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<gimple*>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.183984;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_base (_ZNSt12_Vector_baseIP6gimpleSaIS1_EEC2Ev, funcdef_no=6179, decl_uid=183445, cgraph_uid=3154, symbol_order=3907)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE12_Vector_implC2Ev, funcdef_no=7552, decl_uid=183337, cgraph_uid=4184, symbol_order=4973)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<gimple*>::allocator (this);
  _1 = &this->D.183340;
  std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<gimple*>::allocator (_ZNSaIP6gimpleEC2Ev, funcdef_no=8378, decl_uid=181746, cgraph_uid=5010, symbol_order=5803)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<gimple*>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<gimple*>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<gimple*>::new_allocator (_ZN9__gnu_cxx13new_allocatorIP6gimpleEC2Ev, funcdef_no=9201, decl_uid=181675, cgraph_uid=5833, symbol_order=6626)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<gimple*>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIP6gimpleSaIS1_EE17_Vector_impl_dataC2Ev, funcdef_no=8381, decl_uid=183287, cgraph_uid=5013, symbol_order=5806)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<gimple*, std::allocator<gimple*> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::vector<tree_node*>::vector (_ZNSt6vectorIP9tree_nodeSaIS1_EEC2Ev, funcdef_no=6191, decl_uid=184890, cgraph_uid=3167, symbol_order=3921)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<tree_node*>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.184898;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_base (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EEC2Ev, funcdef_no=6189, decl_uid=184359, cgraph_uid=3164, symbol_order=3918)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE12_Vector_implC2Ev, funcdef_no=7561, decl_uid=184251, cgraph_uid=4193, symbol_order=4982)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<tree_node*>::allocator (this);
  _1 = &this->D.184254;
  std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<tree_node*>::allocator (_ZNSaIP9tree_nodeEC2Ev, funcdef_no=8388, decl_uid=180033, cgraph_uid=5020, symbol_order=5813)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<tree_node*>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<tree_node*>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<tree_node*>::new_allocator (_ZN9__gnu_cxx13new_allocatorIP9tree_nodeEC2Ev, funcdef_no=9205, decl_uid=179962, cgraph_uid=5837, symbol_order=6630)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<tree_node*>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseIP9tree_nodeSaIS1_EE17_Vector_impl_dataC2Ev, funcdef_no=8391, decl_uid=184201, cgraph_uid=5023, symbol_order=5816)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<tree_node*, std::allocator<tree_node*> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function std::vector<breakpoint>::vector (_ZNSt6vectorI10breakpointSaIS0_EEC2Ev, funcdef_no=6211, decl_uid=186228, cgraph_uid=3187, symbol_order=3947)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::vector<breakpoint>::vector (struct vector * const this)
{
  <bb 2> :
  _1 = &this->D.186236;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_base (_1);
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_base (_ZNSt12_Vector_baseI10breakpointSaIS0_EEC2Ev, funcdef_no=6209, decl_uid=185686, cgraph_uid=3184, symbol_order=3944)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_base (struct _Vector_base * const this)
{
  <bb 2> :
  _1 = &this->_M_impl;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::_Vector_impl (_1);
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseI10breakpointSaIS0_EE12_Vector_implC2Ev, funcdef_no=7579, decl_uid=185578, cgraph_uid=4211, symbol_order=5000)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<breakpoint>::allocator (this);
  _1 = &this->D.185581;
  std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl_data::_Vector_impl_data (_1);
  return;

}



;; Function std::allocator<breakpoint>::allocator (_ZNSaI10breakpointEC2Ev, funcdef_no=8408, decl_uid=185356, cgraph_uid=5040, symbol_order=5833)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::allocator<breakpoint>::allocator (struct allocator * const this)
{
  <bb 2> :
  __gnu_cxx::new_allocator<breakpoint>::new_allocator (this);
  return;

}



;; Function __gnu_cxx::new_allocator<breakpoint>::new_allocator (_ZN9__gnu_cxx13new_allocatorI10breakpointEC2Ev, funcdef_no=9213, decl_uid=185285, cgraph_uid=5845, symbol_order=6638)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void __gnu_cxx::new_allocator<breakpoint>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl_data::_Vector_impl_data (_ZNSt12_Vector_baseI10breakpointSaIS0_EE17_Vector_impl_dataC2Ev, funcdef_no=8411, decl_uid=185528, cgraph_uid=5043, symbol_order=5836)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Vector_base<breakpoint, std::allocator<breakpoint> >::_Vector_impl_data::_Vector_impl_data (struct _Vector_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_start = 0B;
  this->_M_finish = 0B;
  this->_M_end_of_storage = 0B;
  return;

}



;; Function CStack::CStack (_ZN6CStackC2Ev, funcdef_no=6228, decl_uid=186708, cgraph_uid=3204, symbol_order=3966)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void CStack::CStack (struct CStack * const this)
{
  <bb 2> :
  _1 = &this->D.181570;
  std::stack<tree_node*>::stack<> (_1);
  return;

}



;; Function std::stack<tree_node*>::stack<> (_ZNSt5stackIP9tree_nodeSt5dequeIS1_SaIS1_EEEC2IS4_vEEv, funcdef_no=7600, decl_uid=186693, cgraph_uid=4232, symbol_order=5021)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::stack<tree_node*>::stack<> (struct stack * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->c = {};
  _1 = &this->c;
  std::deque<tree_node*, std::allocator<tree_node*> >::deque (_1);
  return;

}



;; Function std::deque<tree_node*, std::allocator<tree_node*> >::deque (_ZNSt5dequeIP9tree_nodeSaIS1_EEC2Ev, funcdef_no=7598, decl_uid=181369, cgraph_uid=4229, symbol_order=5018)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::deque<tree_node*, std::allocator<tree_node*> >::deque (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.181377;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_base (_1);
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_base (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EEC2Ev, funcdef_no=8431, decl_uid=180788, cgraph_uid=5063, symbol_order=5856)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_base (struct _Deque_base * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::_Deque_impl (_1);
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_initialize_map (this, 0);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::~_Deque_impl (_2);
  resx 1

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::_Deque_impl (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE11_Deque_implC2Ev, funcdef_no=9221, decl_uid=180735, cgraph_uid=5853, symbol_order=6646)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl::_Deque_impl (struct _Deque_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<tree_node*>::allocator (this);
  _1 = &this->D.180738;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl_data::_Deque_impl_data (_1);
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl_data::_Deque_impl_data (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE16_Deque_impl_dataC2Ev, funcdef_no=9952, decl_uid=180663, cgraph_uid=6584, symbol_order=7381)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_Deque_impl_data::_Deque_impl_data (struct _Deque_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_map = 0B;
  this->_M_map_size = 0;
  _1 = &this->_M_start;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (_1);
  _2 = &this->_M_finish;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (_2);
  return;

}



;; Function std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (_ZNSt15_Deque_iteratorIP9tree_nodeRS1_PS1_EC2Ev, funcdef_no=10482, decl_uid=180565, cgraph_uid=7114, symbol_order=7911)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_Deque_iterator (struct _Deque_iterator * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_cur = 0B;
  this->_M_first = 0B;
  this->_M_last = 0B;
  this->_M_node = 0B;
  return;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_initialize_map (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE17_M_initialize_mapEm, funcdef_no=9223, decl_uid=180601, cgraph_uid=5855, symbol_order=6648)

Removing basic block 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_initialize_map (struct _Deque_base * const this, size_t __num_elements)
{
  union tree_node * * * D.260141;
  union tree_node * * * __nfinish;
  union tree_node * * * __nstart;
  const size_t __num_nodes;
  const long unsigned int D.233889;
  const long unsigned int D.233890;

  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = __num_elements / _1;
  __num_nodes = _2 + 1;
  _3 = __num_nodes + 2;
  D.233890 = _3;
  D.233889 = 8;
  _4 = std::max<long unsigned int> (&D.233889, &D.233890);
  _5 = *_4;
  this->_M_impl.D.180738._M_map_size = _5;
  D.233889 = {CLOBBER};
  D.233890 = {CLOBBER};
  _6 = this->_M_impl.D.180738._M_map_size;
  D.260141 = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_map (this, _6);
  _7 = D.260141;
  this->_M_impl.D.180738._M_map = _7;
  _8 = this->_M_impl.D.180738._M_map;
  _9 = this->_M_impl.D.180738._M_map_size;
  _10 = _9 - __num_nodes;
  _11 = _10 / 2;
  _12 = _11 * 8;
  __nstart = _8 + _12;
  _13 = __num_nodes * 8;
  __nfinish = __nstart + _13;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_create_nodes (this, __nstart, __nfinish);

  <bb 3> :
  _17 = &this->_M_impl.D.180738._M_start;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_M_set_node (_17, __nstart);
  _18 = &this->_M_impl.D.180738._M_finish;
  _19 = __nfinish + 18446744073709551608;
  std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_M_set_node (_18, _19);
  _20 = this->_M_impl.D.180738._M_start._M_first;
  this->_M_impl.D.180738._M_start._M_cur = _20;
  _21 = this->_M_impl.D.180738._M_finish._M_first;
  _22 = std::__deque_buf_size (8);
  _23 = __num_elements % _22;
  _24 = _23 * 8;
  _25 = _21 + _24;
  this->_M_impl.D.180738._M_finish._M_cur = _25;
  return;

  <bb 4> :
<L0>:
  eh_dispatch 3

  <bb 5> :
<L1>:
  _14 = __builtin_eh_pointer (3);
  __cxa_begin_catch (_14);
  _15 = this->_M_impl.D.180738._M_map_size;
  _16 = this->_M_impl.D.180738._M_map;
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_deallocate_map (this, _16, _15);
  this->_M_impl.D.180738._M_map = 0B;
  this->_M_impl.D.180738._M_map_size = 0;
  __cxa_rethrow ();

  <bb 6> :
<L2>:
  __cxa_end_catch ();
  resx 4

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_map (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE15_M_allocate_mapEm, funcdef_no=9954, decl_uid=180594, cgraph_uid=6586, symbol_order=7383)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 6 3 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
;; 6 succs { 7 }
;; 7 succs { }
union tree_node * * * std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_map (struct _Deque_base * const this, size_t __n)
{
  union tree_node * * * D.260147;
  struct _Map_alloc_type __map_alloc;
  union tree_node * * * D.260145;

  <bb 2> :
  __map_alloc = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_get_map_allocator (this); [return slot optimization]
  D.260147 = std::allocator_traits<std::allocator<tree_node**> >::allocate (&__map_alloc, __n);

  <bb 3> :
  D.260145 = D.260147;

  <bb 4> :
  std::allocator<tree_node**>::~allocator (&__map_alloc);
  __map_alloc = {CLOBBER};

  <bb 5> :
<L2>:
  return D.260145;

  <bb 6> :
<L3>:
  std::allocator<tree_node**>::~allocator (&__map_alloc);
  resx 2

  <bb 7> :
<L4>:
  __map_alloc = {CLOBBER};
  resx 1

}



;; Function std::allocator_traits<std::allocator<tree_node**> >::allocate (_ZNSt16allocator_traitsISaIPP9tree_nodeEE8allocateERS3_m, funcdef_no=10484, decl_uid=233924, cgraph_uid=7116, symbol_order=7913)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
union tree_node * * * std::allocator_traits<std::allocator<tree_node**> >::allocate (struct allocator_type & __a, size_type __n)
{
  union tree_node * * * D.260154;
  union tree_node * * * D.260152;

  <bb 2> :
  D.260154 = __gnu_cxx::new_allocator<tree_node**>::allocate (__a, __n, 0B);
  D.260152 = D.260154;

  <bb 3> :
<L0>:
  return D.260152;

}



;; Function __gnu_cxx::new_allocator<tree_node**>::allocate (_ZN9__gnu_cxx13new_allocatorIPP9tree_nodeE8allocateEmPKv, funcdef_no=10844, decl_uid=180190, cgraph_uid=7477, symbol_order=8276)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
union tree_node * * * __gnu_cxx::new_allocator<tree_node**>::allocate (struct new_allocator * const this, size_type __n, const void * D.246724)
{
  union tree_node * * * D.260165;
  union tree_node * * * D.260164;
  align_val_t __al;
  union tree_node * * * D.260162;
  bool retval.2225;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<tree_node**>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.2225 = _4 != 0;
  if (retval.2225 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 2305843009213693951)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 8;
  D.260165 = operator new (_6);
  D.260162 = D.260165;

  <bb 7> :
<L6>:
  return D.260162;

}



;; Function __gnu_cxx::new_allocator<tree_node**>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIPP9tree_nodeE11_M_max_sizeEv, funcdef_no=10845, decl_uid=180217, cgraph_uid=7476, symbol_order=8275)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<tree_node**>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.260166;

  <bb 2> :
  D.260166 = 1152921504606846975;

  <bb 3> :
<L0>:
  return D.260166;

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_create_nodes (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE15_M_create_nodesEPPS1_S5_, funcdef_no=9955, decl_uid=180604, cgraph_uid=6587, symbol_order=7384)

Removing basic block 8
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 5, latch 4
;;  depth 1, outer 0
;;  nodes: 5 4 3
;; 2 succs { 5 }
;; 3 succs { 7 4 }
;; 4 succs { 5 }
;; 5 succs { 3 6 }
;; 6 succs { 1 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { }
void std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_create_nodes (struct _Deque_base * const this, union tree_node * * * __nstart, union tree_node * * * __nfinish)
{
  union tree_node * * D.260168;
  union tree_node * * * __cur;

  <bb 2> :
  __cur = __nstart;
  goto <bb 5>; [INV]

  <bb 3> :
  D.260168 = std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_node (this);

  <bb 4> :
  _1 = D.260168;
  *__cur = _1;
  __cur = __cur + 8;

  <bb 5> :
  if (__cur < __nfinish)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  return;

  <bb 7> :
<L3>:
  eh_dispatch 1

  <bb 8> :
<L4>:
  _2 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_2);
  std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_destroy_nodes (this, __nstart, __cur);
  __cxa_rethrow ();

  <bb 9> :
<L5>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_node (_ZNSt11_Deque_baseIP9tree_nodeSaIS1_EE16_M_allocate_nodeEv, funcdef_no=10485, decl_uid=180589, cgraph_uid=7117, symbol_order=7914)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
union tree_node * * std::_Deque_base<tree_node*, std::allocator<tree_node*> >::_M_allocate_node (struct _Deque_base * const this)
{
  union tree_node * * D.260174;
  union tree_node * * D.260172;

  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = &this->_M_impl;
  D.260174 = std::allocator_traits<std::allocator<tree_node*> >::allocate (_2, _1);
  D.260172 = D.260174;

  <bb 3> :
<L0>:
  return D.260172;

}



;; Function std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_M_set_node (_ZNSt15_Deque_iteratorIP9tree_nodeRS1_PS1_E11_M_set_nodeEPS3_, funcdef_no=9956, decl_uid=180470, cgraph_uid=6588, symbol_order=7385)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_M_set_node (struct _Deque_iterator * const this, union tree_node * * * __new_node)
{
  <bb 2> :
  this->_M_node = __new_node;
  _1 = *__new_node;
  this->_M_first = _1;
  _2 = this->_M_first;
  _3 = std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_S_buffer_size ();
  _4 = _3 * 8;
  _5 = _2 + _4;
  this->_M_last = _5;
  return;

}



;; Function std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_S_buffer_size (_ZNSt15_Deque_iteratorIP9tree_nodeRS1_PS1_E14_S_buffer_sizeEv, funcdef_no=10486, decl_uid=180402, cgraph_uid=7118, symbol_order=7915)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t std::_Deque_iterator<tree_node*, tree_node*&, tree_node**>::_S_buffer_size ()
{
  size_t D.260175;

  <bb 2> :
  D.260175 = std::__deque_buf_size (8);

  <bb 3> :
<L0>:
  return D.260175;

}



;; Function CstmtStack::CstmtStack (_ZN10CstmtStackC2Ev, funcdef_no=6235, decl_uid=186914, cgraph_uid=3211, symbol_order=3974)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void CstmtStack::CstmtStack (struct CstmtStack * const this)
{
  <bb 2> :
  _1 = &this->D.183216;
  std::stack<gimple*>::stack<> (_1);
  return;

}



;; Function std::stack<gimple*>::stack<> (_ZNSt5stackIP6gimpleSt5dequeIS1_SaIS1_EEEC2IS4_vEEv, funcdef_no=7609, decl_uid=186899, cgraph_uid=4241, symbol_order=5030)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::stack<gimple*>::stack<> (struct stack * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->c = {};
  _1 = &this->c;
  std::deque<gimple*, std::allocator<gimple*> >::deque (_1);
  return;

}



;; Function std::deque<gimple*, std::allocator<gimple*> >::deque (_ZNSt5dequeIP6gimpleSaIS1_EEC2Ev, funcdef_no=7607, decl_uid=183031, cgraph_uid=4238, symbol_order=5027)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::deque<gimple*, std::allocator<gimple*> >::deque (struct deque * const this)
{
  <bb 2> :
  _1 = &this->D.183039;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_base (_1);
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_base (_ZNSt11_Deque_baseIP6gimpleSaIS1_EEC2Ev, funcdef_no=8444, decl_uid=182483, cgraph_uid=5076, symbol_order=5869)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_base (struct _Deque_base * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  _1 = &this->_M_impl;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::_Deque_impl (_1);
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_initialize_map (this, 0);

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  _2 = &this->_M_impl;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::~_Deque_impl (_2);
  resx 1

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::_Deque_impl (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE11_Deque_implC2Ev, funcdef_no=9231, decl_uid=182430, cgraph_uid=5863, symbol_order=6656)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl::_Deque_impl (struct _Deque_impl * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  std::allocator<gimple*>::allocator (this);
  _1 = &this->D.182433;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl_data::_Deque_impl_data (_1);
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl_data::_Deque_impl_data (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE16_Deque_impl_dataC2Ev, funcdef_no=9965, decl_uid=182358, cgraph_uid=6597, symbol_order=7394)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_Deque_impl_data::_Deque_impl_data (struct _Deque_impl_data * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_map = 0B;
  this->_M_map_size = 0;
  _1 = &this->_M_start;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (_1);
  _2 = &this->_M_finish;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (_2);
  return;

}



;; Function std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (_ZNSt15_Deque_iteratorIP6gimpleRS1_PS1_EC2Ev, funcdef_no=10496, decl_uid=182260, cgraph_uid=7128, symbol_order=7925)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<gimple*, gimple*&, gimple**>::_Deque_iterator (struct _Deque_iterator * const this)
{
  <bb 2> :
  *this = {CLOBBER};
  this->_M_cur = 0B;
  this->_M_first = 0B;
  this->_M_last = 0B;
  this->_M_node = 0B;
  return;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_initialize_map (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE17_M_initialize_mapEm, funcdef_no=9233, decl_uid=182296, cgraph_uid=5865, symbol_order=6658)

Removing basic block 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_initialize_map (struct _Deque_base * const this, size_t __num_elements)
{
  struct gimple * * * D.260178;
  struct gimple * * * __nfinish;
  struct gimple * * * __nstart;
  const size_t __num_nodes;
  const long unsigned int D.234014;
  const long unsigned int D.234015;

  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = __num_elements / _1;
  __num_nodes = _2 + 1;
  _3 = __num_nodes + 2;
  D.234015 = _3;
  D.234014 = 8;
  _4 = std::max<long unsigned int> (&D.234014, &D.234015);
  _5 = *_4;
  this->_M_impl.D.182433._M_map_size = _5;
  D.234014 = {CLOBBER};
  D.234015 = {CLOBBER};
  _6 = this->_M_impl.D.182433._M_map_size;
  D.260178 = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_map (this, _6);
  _7 = D.260178;
  this->_M_impl.D.182433._M_map = _7;
  _8 = this->_M_impl.D.182433._M_map;
  _9 = this->_M_impl.D.182433._M_map_size;
  _10 = _9 - __num_nodes;
  _11 = _10 / 2;
  _12 = _11 * 8;
  __nstart = _8 + _12;
  _13 = __num_nodes * 8;
  __nfinish = __nstart + _13;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_create_nodes (this, __nstart, __nfinish);

  <bb 3> :
  _17 = &this->_M_impl.D.182433._M_start;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_M_set_node (_17, __nstart);
  _18 = &this->_M_impl.D.182433._M_finish;
  _19 = __nfinish + 18446744073709551608;
  std::_Deque_iterator<gimple*, gimple*&, gimple**>::_M_set_node (_18, _19);
  _20 = this->_M_impl.D.182433._M_start._M_first;
  this->_M_impl.D.182433._M_start._M_cur = _20;
  _21 = this->_M_impl.D.182433._M_finish._M_first;
  _22 = std::__deque_buf_size (8);
  _23 = __num_elements % _22;
  _24 = _23 * 8;
  _25 = _21 + _24;
  this->_M_impl.D.182433._M_finish._M_cur = _25;
  return;

  <bb 4> :
<L0>:
  eh_dispatch 3

  <bb 5> :
<L1>:
  _14 = __builtin_eh_pointer (3);
  __cxa_begin_catch (_14);
  _15 = this->_M_impl.D.182433._M_map_size;
  _16 = this->_M_impl.D.182433._M_map;
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_deallocate_map (this, _16, _15);
  this->_M_impl.D.182433._M_map = 0B;
  this->_M_impl.D.182433._M_map_size = 0;
  __cxa_rethrow ();

  <bb 6> :
<L2>:
  __cxa_end_catch ();
  resx 4

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_map (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE15_M_allocate_mapEm, funcdef_no=9967, decl_uid=182289, cgraph_uid=6599, symbol_order=7396)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 6 3 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
;; 6 succs { 7 }
;; 7 succs { }
struct gimple * * * std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_map (struct _Deque_base * const this, size_t __n)
{
  struct gimple * * * D.260184;
  struct _Map_alloc_type __map_alloc;
  struct gimple * * * D.260182;

  <bb 2> :
  __map_alloc = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_get_map_allocator (this); [return slot optimization]
  D.260184 = std::allocator_traits<std::allocator<gimple**> >::allocate (&__map_alloc, __n);

  <bb 3> :
  D.260182 = D.260184;

  <bb 4> :
  std::allocator<gimple**>::~allocator (&__map_alloc);
  __map_alloc = {CLOBBER};

  <bb 5> :
<L2>:
  return D.260182;

  <bb 6> :
<L3>:
  std::allocator<gimple**>::~allocator (&__map_alloc);
  resx 2

  <bb 7> :
<L4>:
  __map_alloc = {CLOBBER};
  resx 1

}



;; Function std::allocator_traits<std::allocator<gimple**> >::allocate (_ZNSt16allocator_traitsISaIPP6gimpleEE8allocateERS3_m, funcdef_no=10498, decl_uid=234049, cgraph_uid=7130, symbol_order=7927)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((nodiscard))
struct gimple * * * std::allocator_traits<std::allocator<gimple**> >::allocate (struct allocator_type & __a, size_type __n)
{
  struct gimple * * * D.260191;
  struct gimple * * * D.260189;

  <bb 2> :
  D.260191 = __gnu_cxx::new_allocator<gimple**>::allocate (__a, __n, 0B);
  D.260189 = D.260191;

  <bb 3> :
<L0>:
  return D.260189;

}



;; Function __gnu_cxx::new_allocator<gimple**>::allocate (_ZN9__gnu_cxx13new_allocatorIPP6gimpleE8allocateEmPKv, funcdef_no=10849, decl_uid=181903, cgraph_uid=7482, symbol_order=8281)

Removing basic block 7
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { }
;; 6 succs { 7 }
;; 7 succs { 1 }
__attribute__((nodiscard))
struct gimple * * * __gnu_cxx::new_allocator<gimple**>::allocate (struct new_allocator * const this, size_type __n, const void * D.246734)
{
  struct gimple * * * D.260202;
  struct gimple * * * D.260201;
  align_val_t __al;
  struct gimple * * * D.260199;
  bool retval.2226;

  <bb 2> :
  _1 = __gnu_cxx::new_allocator<gimple**>::_M_max_size (this);
  _2 = __n > _1;
  _3 = (long int) _2;
  _4 = __builtin_expect (_3, 0);
  retval.2226 = _4 != 0;
  if (retval.2226 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (__n > 2305843009213693951)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  std::__throw_bad_array_new_length ();

  <bb 5> :
  std::__throw_bad_alloc ();

  <bb 6> :
  _6 = __n * 8;
  D.260202 = operator new (_6);
  D.260199 = D.260202;

  <bb 7> :
<L6>:
  return D.260199;

}



;; Function __gnu_cxx::new_allocator<gimple**>::_M_max_size (_ZNK9__gnu_cxx13new_allocatorIPP6gimpleE11_M_max_sizeEv, funcdef_no=10850, decl_uid=181930, cgraph_uid=7481, symbol_order=8280)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_type __gnu_cxx::new_allocator<gimple**>::_M_max_size (const struct new_allocator * const this)
{
  size_type D.260203;

  <bb 2> :
  D.260203 = 1152921504606846975;

  <bb 3> :
<L0>:
  return D.260203;

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_create_nodes (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE15_M_create_nodesEPPS1_S5_, funcdef_no=9968, decl_uid=182299, cgraph_uid=6600, symbol_order=7397)

Removing basic block 8
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 5, latch 4
;;  depth 1, outer 0
;;  nodes: 5 4 3
;; 2 succs { 5 }
;; 3 succs { 7 4 }
;; 4 succs { 5 }
;; 5 succs { 3 6 }
;; 6 succs { 1 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { }
void std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_create_nodes (struct _Deque_base * const this, struct gimple * * * __nstart, struct gimple * * * __nfinish)
{
  struct gimple * * D.260205;
  struct gimple * * * __cur;

  <bb 2> :
  __cur = __nstart;
  goto <bb 5>; [INV]

  <bb 3> :
  D.260205 = std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_node (this);

  <bb 4> :
  _1 = D.260205;
  *__cur = _1;
  __cur = __cur + 8;

  <bb 5> :
  if (__cur < __nfinish)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  return;

  <bb 7> :
<L3>:
  eh_dispatch 1

  <bb 8> :
<L4>:
  _2 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_2);
  std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_destroy_nodes (this, __nstart, __cur);
  __cxa_rethrow ();

  <bb 9> :
<L5>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_node (_ZNSt11_Deque_baseIP6gimpleSaIS1_EE16_M_allocate_nodeEv, funcdef_no=10499, decl_uid=182284, cgraph_uid=7131, symbol_order=7928)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
struct gimple * * std::_Deque_base<gimple*, std::allocator<gimple*> >::_M_allocate_node (struct _Deque_base * const this)
{
  struct gimple * * D.260211;
  struct gimple * * D.260209;

  <bb 2> :
  _1 = std::__deque_buf_size (8);
  _2 = &this->_M_impl;
  D.260211 = std::allocator_traits<std::allocator<gimple*> >::allocate (_2, _1);
  D.260209 = D.260211;

  <bb 3> :
<L0>:
  return D.260209;

}



;; Function std::_Deque_iterator<gimple*, gimple*&, gimple**>::_M_set_node (_ZNSt15_Deque_iteratorIP6gimpleRS1_PS1_E11_M_set_nodeEPS3_, funcdef_no=9969, decl_uid=182179, cgraph_uid=6601, symbol_order=7398)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void std::_Deque_iterator<gimple*, gimple*&, gimple**>::_M_set_node (struct _Deque_iterator * const this, struct gimple * * * __new_node)
{
  <bb 2> :
  this->_M_node = __new_node;
  _1 = *__new_node;
  this->_M_first = _1;
  _2 = this->_M_first;
  _3 = std::_Deque_iterator<gimple*, gimple*&, gimple**>::_S_buffer_size ();
  _4 = _3 * 8;
  _5 = _2 + _4;
  this->_M_last = _5;
  return;

}



;; Function std::_Deque_iterator<gimple*, gimple*&, gimple**>::_S_buffer_size (_ZNSt15_Deque_iteratorIP6gimpleRS1_PS1_E14_S_buffer_sizeEv, funcdef_no=10500, decl_uid=182113, cgraph_uid=7132, symbol_order=7929)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
size_t std::_Deque_iterator<gimple*, gimple*&, gimple**>::_S_buffer_size ()
{
  size_t D.260212;

  <bb 2> :
  D.260212 = std::__deque_buf_size (8);

  <bb 3> :
<L0>:
  return D.260212;

}



;; Function _GLOBAL__sub_I_gcc_plugin.c (_GLOBAL__sub_I_gcc_plugin.c, funcdef_no=11116, decl_uid=248341, cgraph_uid=7748, symbol_order=8952)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void _GLOBAL__sub_I_gcc_plugin.c ()
{
  <bb 2> :
  __static_initialization_and_destruction_0 (1, 65535);
  return;

}


